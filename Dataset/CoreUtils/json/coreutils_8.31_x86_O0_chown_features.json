{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_19C2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_211D90", "jmp     cs:qword_211D98"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 69, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_19D0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endgrent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 76, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 31, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 70, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:printf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ferror_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endpwent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fstatfs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchownat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 44, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1EA0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_1EA0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_1EF0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1EF0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_1F23"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_1F38"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 7, 0, 1, 7, 1, 2, 0, 0, 0.038461538461538464, ["mov     rax, [rbp+lc_messages]", "mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_2101"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [4, 0, 8, 0, 3, 13, 0, 4, 3, 4, 0.26373626373626374, ["lea     rdi, msgid; \"\\n%s online help: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, package; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "mov     [rbp+lc_messages], rax", "cmp     [rbp+lc_messages], 0", "jz      short loc_2101"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 14, 1, 0, 39, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+program], rdi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "lea     rax, unk_CEE8", "mov     [rbp+infomap.program], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rbp+infomap.node], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rbp+infomap.program+10h], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rbp+infomap.node+10h], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rbp+infomap.program+20h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+20h], rax", "lea     rax, aSha256sum; \"sha256sum\"", "mov     [rbp+infomap.program+30h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+30h], rax", "lea     rax, aSha384sum; \"sha384sum\"", "mov     [rbp+infomap.program+40h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+40h], rax", "lea     rax, aSha512sum; \"sha512sum\"", "mov     [rbp+infomap.program+50h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+50h], rax", "mov     [rbp+infomap.program+60h], 0", "mov     [rbp+infomap.node+60h], 0", "mov     rax, [rbp+program]", "mov     [rbp+node], rax", "lea     rax, [rbp+infomap]", "mov     [rbp+map_prog], rax", "jmp     short loc_202C"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 3, 7, 0.005494505494505495, ["add     [rbp+map_prog], 10h"], ["add~[rbp+0],0"]], [0, 0, 14, 0, 1, 8, 1, 2, 2, 6, 0.01098901098901099, ["mov     rax, [rbp+map_prog]", "mov     rdx, [rax]", "mov     rax, [rbp+program]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_2024"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.08241758241758243, ["lea     rbx, aInvocation; \" invocation\"", "jmp     short loc_214E"], ["lea~rbx,<TAG>", "jmp~FOO"]], [1, 0, 5, 0, 2, 12, 0, 3, 4, 3, 0.24725274725274726, ["lea     rdi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+program]", "mov     rdx, rax", "lea     rsi, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "mov     rax, [rbp+node]", "cmp     rax, [rbp+program]", "jnz     short loc_2147"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "lea~rsi,<TAG>", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.08241758241758243, ["lea     rbx, string"], ["lea~rbx,<TAG>"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 5, 0.2197802197802198, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_207D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 1, 6, 0.13736263736263737, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_205B"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 2, 6, 0, 2, 5, 4, 0.0, ["mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 3, 5, 0.0, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "mov     [rbp+node], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 0, 1, 0, 4, 0, 0, 7, 0, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 2, 0, 2, 13, 1, 3, 6, 1, 0.13186813186813187, ["lea     rdi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+node]", "mov     rdx, rbx", "mov     rsi, rax", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "nop", "mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_218C"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rax", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [12, 6, 21, 1, 15, 20, 1, 118, 0.08132, 20, 3], "succs": [[10, 6], [0, 6], [9], [9], [8, 3], [13], [5, 7], [13], [1, 11], [8, 4], [6], [1], [], [12, 14], []], "fname": "emit_ancillary_info", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 1, 0, 29, 94, 0, 29, 0, 0, 0.08333333333333333, ["mov     r12, cs:program_name", "mov     rbx, cs:program_name", "lea     rdi, aUsageSOptionOw; \"Usage: %s [OPTION]... [OWNER][:[GROUP]]\"...", "call    _gettext", "mov     rdx, r12", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aChangeTheOwner; \"Change the owner and/or group of each F\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aCChangesLikeVe; \"  -c, --changes          like verbose b\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aDereferenceAff; \"      --dereference      affect the ref\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aUsefulOnlyOnSy; \"                         (useful only o\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aFromCurrentOwn; \"      --from=CURRENT_OWNER:CURRENT_GROU\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aNoPreserveRoot; \"      --no-preserve-root  do not treat \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aReferenceRfile; \"      --reference=RFILE  use RFILE's ow\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aRRecursiveOper; \"  -R, --recursive        operate on fil\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aTheFollowingOp; \"\\nThe following options modify how a hi\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHelpDisplayThi; \"      --help     display this help and \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aVersionOutputV; \"      --version  output version informa\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aOwnerIsUnchang; \"\\nOwner is unchanged if missing.  Group\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r13, cs:program_name", "mov     r12, cs:program_name", "mov     rbx, cs:program_name", "lea     rdi, aExamplesSRootU; \"\\nExamples:\\n  %s root /u        Change\"...", "call    _gettext", "mov     rcx, r13", "mov     rdx, r12", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "lea     rdi, command_name; \"chown\"", "call    emit_ancillary_info"], ["mov~r12,<TAG>", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,r12", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r13,<TAG>", "mov~r12,<TAG>", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [1, 1, 3, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 18h", "mov     [rbp+status], edi", "cmp     [rbp+status], 0", "jz      short loc_21E1"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 2, 11, 0, 3, 1, 1, 0.08333333333333333, ["mov     rbx, cs:program_name", "lea     rdi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_23B9"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,<TAG>", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, 0, 0.0, ["mov     eax, [rbp+status]", "mov     edi, eax; status", "call    _exit"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [32, 0, 34, 0, 4, 4, 3, 117, 0.04167, 19, 1], "succs": [[3], [0, 2], [3], []], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[4, 0, 1, 2, 3, 18, 0, 3, 0, 0, 0.004426559356136821, ["mov     eax, [rbp+argc]", "cdqe", "shl     rax, 3", "lea     rdx, [rax-8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aMissingOperand_0; \"missing operand after %s\"", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "lea~rdx,[rax-8]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.02595573440643863, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     [rbp+argc], eax", "jg      short loc_27B7"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jg~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 3, 9, 0.10603621730382294, ["cmp     [rbp+bit_flags], 10h", "jnz     short loc_2746"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 2, 10, 0.19919517102615694, ["movzx   eax, [rbp+chopt.recurse]", "test    al, al", "jz      short loc_273C"], ["movzx~eax,[rbp+0]", "test~al,al", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 5, 14, 0.08490945674044266, ["cmp     eax, 81h", "jg      short loc_251F"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 4, 13, 0.10643863179074446, ["cmp     eax, 81h", "jz      loc_25AF"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 12, 0, 0.0, ["lea     rsp, [rbp-10h]", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["lea~rsp,[rbp-10h]+0]", "pop~rbx", "pop~r12", "pop~rbp", "retn"]], [3, 1, 2, 2, 1, 24, 3, 2, 11, 1, 0.022937625754527163, ["or      [rbp+bit_flags], 400h", "mov     r9d, [rbp+required_gid]; required_gid", "mov     r8d, [rbp+required_uid]; required_uid", "mov     ecx, [rbp+gid]; gid", "mov     edx, [rbp+uid]; uid", "mov     eax, cs:optind@@GLIBC_2_2_5", "cdqe", "lea     rsi, ds:0[rax*8]", "mov     rax, [rbp+argv]", "lea     rdi, [rsi+rax]; files", "mov     eax, [rbp+bit_flags]", "sub     rsp, 8", "lea     rsi, [rbp+chopt]", "push    rsi; chopt", "mov     esi, eax; bit_flags", "call    chown_files", "add     rsp, 10h", "mov     [rbp+ok], al", "movzx   eax, [rbp+ok]", "xor     eax, 1", "movzx   eax, al", "mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_2AA3"], ["or~[rbp+0],<STR>", "mov~r9d,[rbp+0]", "mov~r8d,[rbp+0]", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~eax,<TAG>", "cdqe~", "lea~rsi,<TAG>", "mov~rax,[rbp+0]", "lea~rdi,<TAG>", "mov~eax,[rbp+0]", "sub~rsp,0", "lea~rsi,[rbp+0]", "push~rsi", "mov~esi,eax", "call~FOO", "add~rsp,0", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "xor~eax,0", "movzx~eax,al", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 13, 0.04305835010060362, ["cmp     eax, 76h ; 'v'", "jz      loc_2647"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 10, 2, 0.06398390342052314, ["movzx   eax, [rbp+chopt.recurse]", "test    al, al", "jz      short loc_2A20"], ["movzx~eax,[rbp+0]", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 2, 13, 0, 3, 9, 3, 0.0647887323943662, ["mov     eax, [rbp+ref_stats.st_uid]", "mov     [rbp+uid], eax", "mov     eax, [rbp+ref_stats.st_gid]", "mov     [rbp+gid], eax", "mov     eax, [rbp+ref_stats.st_uid]", "mov     edi, eax; uid", "call    uid_to_name", "mov     [rbp+chopt.user_name], rax", "mov     eax, [rbp+ref_stats.st_gid]", "mov     edi, eax; gid", "call    gid_to_name", "mov     [rbp+chopt.group_name], rax", "jmp     loc_29AC"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 10, 3, 0.007042253521126761, ["mov     eax, cs:optind@@GLIBC_2_2_5", "add     eax, 1", "mov     cs:optind@@GLIBC_2_2_5, eax"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 0, 0, 1, 2, 0, 1, 9, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [3, 0, 1, 0, 2, 8, 0, 3, 8, -1, 0.004426559356136821, ["lea     rdi, aMissingOperand; \"missing operand\"", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_2805"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 12, 0.013078470824949697, ["mov     [rbp+preserve_root], 0", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 13, 0.026056338028169014, ["cmp     eax, 83h", "jl      short loc_2584"], ["cmp~eax,0", "jl~FOO"]], [3, 0, 11, 1, 2, 17, 0, 2, 9, 5, 0.0, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cdqe", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; arg", "call    quote", "mov     rdx, rax", "mov     rax, [rbp+e_0]", "mov     r8, rdx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~eax,<TAG>", "cdqe~", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~r8,rdx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 12, 1, 1, 18, 0, 2, 8, 5, 0.04426559356136821, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cdqe", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "lea     rdx, [rbp+chopt]", "lea     rdi, [rdx+20h]", "lea     rdx, [rbp+chopt]", "lea     rcx, [rdx+18h]; username", "lea     rdx, [rbp+gid]; gid", "lea     rsi, [rbp+uid]; uid", "mov     r8, rdi; groupname", "mov     rdi, rax; spec", "call    parse_user_spec", "mov     [rbp+e_0], rax", "cmp     [rbp+e_0], 0", "jz      short loc_2972"], ["mov~eax,<TAG>", "cdqe~", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "lea~rdx,[rbp+0]", "lea~rdi,[rdx+0]", "lea~rdx,[rbp+0]", "lea~rcx,[rdx+0]", "lea~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [9, 0, 71, 1, 6, 36, 1, 7, 0, 12, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 110h", "mov     [rbp+argc], edi", "mov     [rbp+argv], rsi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+preserve_root], 0", "mov     [rbp+uid], 0FFFFFFFFh", "mov     [rbp+gid], 0FFFFFFFFh", "mov     [rbp+required_uid], 0FFFFFFFFh", "mov     [rbp+required_gid], 0FFFFFFFFh", "mov     [rbp+bit_flags], 10h", "mov     [rbp+dereference], 0FFFFFFFFh", "mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; argv0", "call    set_program_name", "lea     rsi, string; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rax, close_stdout", "mov     rdi, rax", "call    atexit", "lea     rax, [rbp+chopt]", "mov     rdi, rax; chopt", "call    chopt_init", "jmp     loc_26B5"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 1, 71, 0, 0, 2, 0, 1, 7, 13, 0.026056338028169014, ["cmp     eax, 80h", "jz      short loc_2575"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 24, 1, 0, 9, 1, 1, 4, 8, 0.18832997987927566, ["cmp     [rbp+dereference], 0", "setnz   al", "mov     [rbp+chopt.affect_symlink_referent], al", "mov     eax, cs:optind@@GLIBC_2_2_5", "mov     edx, [rbp+argc]", "sub     edx, eax", "mov     rax, cs:reference_file", "test    rax, rax", "jz      short loc_2777"], ["cmp~[rbp+0],0", "setnz~al", "mov~[rbp+0],al", "mov~eax,<TAG>", "mov~edx,[rbp+0]", "sub~edx,eax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 5, 9, 0.01006036217303823, ["mov     [rbp+dereference], 0", "jmp     short loc_2746"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 25, 0, 0, 1, 0, 0, 3, 9, 0.08551307847082494, ["mov     [rbp+bit_flags], 10h"], ["mov~[rbp+0],0"]], [0, 0, 8, 0, 1, 3, 0, 1, 11, 4, 0.0, ["lea     rdi, string; string", "call    xstrdup", "mov     [rbp+chopt.user_name], rax"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 3, 1, 1, 10, 4, 0.009456740442655936, ["mov     rax, [rbp+chopt.group_name]", "test    rax, rax", "jz      short loc_299D"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 12, 0.018209255533199194, ["mov     [rbp+preserve_root], 1", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 13, 0.04305835010060362, ["cmp     eax, 83h", "jz      short loc_2590"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 13, 0.014185110663983903, ["cmp     eax, 68h ; 'h'", "jz      short loc_2566"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 7, 5, 0.13843058350100604, ["mov     rax, cs:reference_file", "test    rax, rax", "jz      loc_28C5"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 6, 6, 0.17746478873239435, ["cmp     eax, edx", "jle     loc_280F"], ["cmp~eax,edx", "jle~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.001710261569416499, ["jmp     loc_26AB"], ["jmp~FOO"]], [3, 0, 3, 0, 4, 15, 0, 4, 13, 2, 0.0, ["lea     rsi, arg; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "lea     rdi, aFailedToGetAtt; \"failed to get attributes of %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 12, 2, 0.011066398390342052, ["lea     rdi, dev_ino_buf_6178; root_d_i", "call    get_root_dev_ino", "mov     [rbp+chopt.root_dev_ino], rax", "mov     rax, [rbp+chopt.root_dev_ino]", "test    rax, rax", "jnz     short loc_2A20"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 11, 2, 0.021730382293762576, ["cmp     [rbp+preserve_root], 0", "jz      short loc_2A20"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 71, 0, 0, 3, 0, 1, 2, 13, 0.20603621730382293, ["mov     eax, [rbp+optc]", "cmp     eax, 66h ; 'f'", "jz      loc_263E"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 71, 0, 1, 10, 0, 2, 1, 11, 0.4042253521126761, ["mov     rsi, [rbp+argv]; argv", "mov     eax, [rbp+argc]", "mov     r8d, 0; longind", "lea     rcx, long_options; longopts", "lea     rdx, shortopts; \"HLPRcfhv\"", "mov     edi, eax; argc", "call    _getopt_long", "mov     [rbp+optc], eax", "cmp     [rbp+optc], 0FFFFFFFFh", "jnz     loc_2495"], ["mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 3, 12, 0.006438631790744467, ["mov     [rbp+chopt.force_silent], 1", "jmp     short loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 71, 0, 2, 12, 0, 2, 6, 13, 0.0030181086519114686, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     rdi, rax; arg", "call    quote", "mov     rdx, rax", "mov     rax, [rbp+e]", "mov     r8, rdx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~r8,rdx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [3, 0, 71, 0, 1, 10, 0, 2, 5, 12, 0.0227364185110664, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "lea     rdx, [rbp+required_gid]; gid", "lea     rsi, [rbp+required_uid]; uid", "mov     r8d, 0; groupname", "mov     ecx, 0; username", "mov     rdi, rax; spec", "call    parse_user_spec", "mov     [rbp+e], rax", "cmp     [rbp+e], 0", "jz      loc_26B5"], ["mov~rax,<TAG>", "lea~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "mov~r8d,0", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [5, 0, 0, 2, 2, 15, 0, 2, 9, -1, 0.0, ["mov     rdx, cs:Version", "mov     rax, cs:stdout@@GLIBC_2_2_5", "sub     rsp, 8", "push    0", "lea     r9, aJimMeyering; \"Jim Meyering\"", "lea     r8, aDavidMackenzie; \"David MacKenzie\"", "mov     rcx, rdx; version", "lea     rdx, package; \"GNU coreutils\"", "lea     rsi, command_name; \"chown\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    version_etc", "add     rsp, 10h", "mov     edi, 0; status", "call    _exit"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "sub~rsp,0", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~edi,0", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.014788732394366197, ["cmp     eax, 0FFFFFF7Dh", "jz      loc_265D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 3, 14, 0.20080482897384305, ["cmp     eax, 66h ; 'f'", "jg      short loc_24F3"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 71, 0, 0, 3, 0, 1, 9, 12, 0.013480885311871227, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     cs:reference_file, rax", "jmp     loc_26B5"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 13, 0.014185110663983903, ["cmp     eax, 84h", "jz      short loc_259C"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 4, 13, 0.09557344064386318, ["cmp     eax, 4Ch ; 'L'", "jz      loc_2548"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 12, 0.03762575452716298, ["mov     [rbp+chopt.recurse], 1", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 13, 0.04537223340040241, ["cmp     eax, 52h ; 'R'", "jz      loc_2626"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 10, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.001710261569416499, ["jmp     loc_26AB"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.001710261569416499, ["jmp     loc_26AB"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.001710261569416499, ["jmp     loc_26AB"], ["jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 9, 4, 0.030583501006036216, ["mov     rax, [rbp+chopt.user_name]", "test    rax, rax", "jnz     short loc_299D"], ["mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [3, 0, 8, 0, 4, 16, 0, 4, 9, 4, 0.0, ["mov     rax, cs:reference_file", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "lea     rdi, aFailedToGetAtt; \"failed to get attributes of %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rax,<TAG>", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 8, 4, 0.07967806841046278, ["mov     rax, cs:reference_file", "lea     rdx, [rbp+ref_stats]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "test    eax, eax", "jz      short loc_2880"], ["mov~rax,<TAG>", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 5, 14, 0.08269617706237424, ["cmp     eax, 4Ch ; 'L'", "jg      short loc_24D7"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 4, 10, 0.014084507042253521, ["cmp     [rbp+dereference], 1", "jnz     short loc_2730"], ["cmp~[rbp+0],0", "jnz~FOO"]], [3, 0, 26, 0, 2, 7, 0, 2, 5, 10, 0.0, ["lea     rdi, aRDereferenceRe; \"-R --dereference requires either -H or \"...", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 14, 0.03853118712273642, ["cmp     eax, 0FFFFFF7Eh", "jz      loc_2653"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 12, 0.025754527162977867, ["mov     [rbp+bit_flags], 11h", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 71, 0, 0, 2, 0, 1, 7, 13, 0.03953722334004024, ["cmp     eax, 48h ; 'H'", "jz      short loc_2539"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 12, 0.018209255533199194, ["mov     [rbp+chopt.verbosity], 0", "jmp     short loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     edi, 0; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 9, 12, 0.013480885311871227, ["mov     [rbp+bit_flags], 10h", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 71, 0, 0, 2, 0, 1, 8, 13, 0.014185110663983903, ["cmp     eax, 50h ; 'P'", "jz      short loc_2557"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 13, 0.026056338028169014, ["cmp     eax, 63h ; 'c'", "jz      loc_2632"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 12, 0.013078470824949697, ["mov     [rbp+chopt.verbosity], 1", "jmp     short loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 5, 12, 0.014084507042253521, ["mov     [rbp+bit_flags], 2", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 9, 12, 0.013480885311871227, ["mov     [rbp+dereference], 0", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 12, 0.013078470824949697, ["mov     [rbp+dereference], 1", "jmp     loc_26B5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 7, 0.08853118712273642, ["mov     eax, 1", "jmp     short loc_277C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 5, 7, 0.08853118712273642, ["mov     eax, 2"], ["mov~eax,0"]]], "func_feature": [40, 12, 96, 1, 72, 101, 0, 357, 0.04507, 23, 11], "succs": [[12], [0, 13], [20, 55], [2, 22], [8, 26], [4, 38], [], [62, 6], [19, 60], [33, 7], [9], [9], [], [12], [35], [43, 14], [51], [16, 51], [35], [27, 69], [70, 71], [20], [20], [11], [11, 23], [35], [25, 15], [68, 30], [17, 53], [1, 28], [47], [7], [7, 31], [32, 7], [41, 36], [34, 3], [35], [45], [35, 37], [], [48, 39], [44, 5], [35], [42, 50], [67, 54], [35], [65, 45], [], [47], [47], [47], [24, 11], [10], [10, 52], [57, 46], [56, 21], [21], [59, 61], [35], [40, 58], [35], [], [], [35], [49, 63], [64, 66], [35], [35], [35], [35], [29], [29]], "fname": "main", "n_num": 72}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[7, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+chopt], rdi", "mov     rax, [rbp+chopt]", "mov     dword ptr [rax], 2", "mov     rax, [rbp+chopt]", "mov     qword ptr [rax+8], 0", "mov     rax, [rbp+chopt]", "mov     byte ptr [rax+10h], 1", "mov     rax, [rbp+chopt]", "mov     byte ptr [rax+4], 0", "mov     rax, [rbp+chopt]", "mov     byte ptr [rax+11h], 0", "mov     rax, [rbp+chopt]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+chopt]", "mov     qword ptr [rax+20h], 0", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 20, 0.0, 0, 0], "succs": [[]], "fname": "chopt_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+chopt], rdi", "mov     rax, [rbp+chopt]", "mov     rax, [rax+18h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+chopt]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "chopt_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.07500000000000001, ["mov     rax, [rbp+grp]", "mov     rax, [rax]", "jmp     short loc_2B76"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [2, 0, 5, 1, 1, 13, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+gid], edi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     eax, [rbp+gid]", "mov     edi, eax; gid", "call    _getgrgid", "mov     [rbp+grp], rax", "cmp     [rbp+grp], 0", "jz      short loc_2B64"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 1, 0.30000000000000004, ["mov     rdi, rax; string", "call    xstrdup", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_2B92"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 1, 1, 2, 0.07500000000000001, ["mov     eax, [rbp+gid]", "lea     rdx, [rbp+buf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr"], ["mov~eax,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 2, 7, 1, 6, 6, 2, 29, 0.075, 1, 1], "succs": [[2], [0, 3], [4, 5], [2], [], []], "fname": "gid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 5, 1, 1, 13, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+uid], edi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     eax, [rbp+uid]", "mov     edi, eax; uid", "call    _getpwuid", "mov     [rbp+pwd], rax", "cmp     [rbp+pwd], 0", "jz      short loc_2BCC"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 0, 2, 0.07500000000000001, ["mov     rax, [rbp+pwd]", "mov     rax, [rax]", "jmp     short loc_2BDE"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 0, 1, 0.30000000000000004, ["mov     rdi, rax; string", "call    xstrdup", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_2BFA"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 1, 0, 2, 0.07500000000000001, ["mov     eax, [rbp+uid]", "lea     rdx, [rbp+buf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr"], ["mov~eax,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 2, 7, 1, 6, 6, 2, 29, 0.075, 1, 1], "succs": [[1, 3], [2], [4, 5], [2], [], []], "fname": "uid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.06666666666666667, ["cmp     [rbp+group], 0", "jz      short loc_2C7E"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 6, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 28h", "mov     [rbp+user], rdi", "mov     [rbp+group], rsi", "mov     [rbp+spec], 0", "cmp     [rbp+user], 0", "jz      short loc_2C90"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 2, 1, 0.0, ["mov     rax, [rbp+group]", "mov     rdi, rax; string", "call    xstrdup", "mov     [rbp+spec], rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0.06666666666666667, ["cmp     [rbp+group], 0", "jz      short loc_2CA7"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 2, 1, 0.016666666666666666, ["mov     rax, [rbp+user]", "mov     rdi, rax; string", "call    xstrdup", "mov     [rbp+spec], rax", "jmp     short loc_2CA7"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+spec]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 1, 1, 2, 5, 24, 0, 6, 2, 1, 0.016666666666666666, ["mov     rax, [rbp+user]", "mov     rdi, rax; s", "call    _strlen", "mov     rbx, rax", "mov     rax, [rbp+group]", "mov     rdi, rax; s", "call    _strlen", "add     rax, rbx", "add     rax, 2", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+spec], rax", "mov     rdx, [rbp+user]", "mov     rax, [rbp+spec]", "mov     rsi, rdx; src", "mov     rdi, rax; dest", "call    _stpcpy", "mov     word ptr [rax], 3Ah ; ':'", "lea     rdx, [rax+1]", "mov     rax, [rbp+group]", "mov     rsi, rax; src", "mov     rdi, rdx; dest", "call    _strcpy", "jmp     short loc_2CA7"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,rbx", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~<TAG>,<STR>", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "jmp~FOO"]]], "func_feature": [7, 0, 12, 0, 7, 9, 2, 51, 0.02381, 0, 4], "succs": [[4, 6], [0, 3], [5], [2, 5], [5], [], [5]], "fname": "user_group_str", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.010668563300142249, ["lea     rdi, aChangedOwnersh; \"changed ownership of %s from %s to %s\\n\"", "call    _gettext", "jmp     short loc_2DA7"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 8, 4, 0.03698435277382646, ["cmp     [rbp+user], 0", "jz      short loc_2D86"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 1, 0, 3, 12, 0, 4, 1, 1, 0.0007112375533428165, ["mov     rax, [rbp+file]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aNeitherSymboli; \"neither symbolic link %s nor referent h\"...", "call    _gettext", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "jmp     loc_2ED4"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 1, 38, 1, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 58h", "mov     [rbp+file], rdi", "mov     [rbp+changed], esi", "mov     [rbp+old_user], rdx", "mov     [rbp+old_group], rcx", "mov     [rbp+user], r8", "mov     [rbp+group], r9", "cmp     [rbp+changed], 1", "jnz     short loc_2D0D"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 8, 3, 0.012802275960170698, ["lea     rdi, aFailedToChange_2; \"failed to change ownership of %s to %s\"...", "call    _gettext", "jmp     short loc_2E2C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, 4, 0.03627311522048363, ["cmp     [rbp+user], 0", "jz      short loc_2E0B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, 5, 0.04480796586059744, ["cmp     eax, 2", "jnz     loc_2E8A"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 9, 4, 0.015647226173541962, ["cmp     [rbp+group], 0", "jz      short loc_2D9B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, 4, 0.01422475106685633, ["cmp     [rbp+group], 0", "jz      short loc_2E20"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 10, 3, 0.0010668563300142249, ["lea     rdi, aChangedGroupOf; \"changed group of %s from %s to %s\\n\"", "call    _gettext", "jmp     short loc_2DA7"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 9, 3, 0.0010668563300142249, ["lea     rdi, aFailedToChange_3; \"failed to change group of %s to %s\\n\"", "call    _gettext", "jmp     short loc_2E2C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 10, 3, 0.0010668563300142249, ["lea     rdi, aNoChangeToOwne; \"no change to ownership of %s\\n\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 9, 3, 0.0010668563300142249, ["lea     rdi, aFailedToChange_1; \"failed to change ownership of %s\\n\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]], [1, 0, 36, 0, 1, 8, 0, 2, 1, 10, 0.024893314366998577, ["mov     rdx, [rbp+group]", "mov     rax, [rbp+user]", "mov     rsi, rdx; group", "mov     rdi, rax; user", "call    user_group_str", "mov     [rbp+spec], rax", "cmp     [rbp+group], 0", "jz      short loc_2D31"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 10, 2, 0.008534850640113799, ["mov     [rbp+fmt], rax", "jmp     loc_2E8F"], ["mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 2, 9, 0.023826458036984355, ["mov     rdx, [rbp+old_group]", "jmp     short loc_2D36"], ["mov~rdx,[rbp+0]", "jmp~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 2, 9, 0.023826458036984355, ["mov     edx, 0"], ["mov~edx,0"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 5, 0.07539118065433853, ["cmp     [rbp+old_spec], 0", "jz      short loc_2DF6"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 30, 0, 1, 7, 0, 2, 5, 6, 0.14864864864864866, ["mov     rsi, rdx; group", "mov     rdi, rax; user", "call    user_group_str", "mov     [rbp+old_spec], rax", "mov     eax, [rbp+changed]", "cmp     eax, 3", "jz      short loc_2DB0"], ["mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 3, 8, 0.09317211948790896, ["cmp     [rbp+user], 0", "jz      short loc_2D43"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, 4, 0.03627311522048363, ["cmp     [rbp+user], 0", "jz      short loc_2DCC"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 4, 7, 0.054765291607396877, ["mov     rax, [rbp+old_user]", "jmp     short loc_2D48"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 31, 0, 0, 1, 0, 0, 4, 7, 0.054765291607396877, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 3, 0, 1, 3, 0, 2, 9, 3, 0.0010668563300142249, ["lea     rdi, aGroupOfSRetain; \"group of %s retained as %s\\n\"", "call    _gettext", "jmp     short loc_2E84"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, 4, 0.01422475106685633, ["cmp     [rbp+group], 0", "jz      short loc_2E78"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 8, 3, 0.012802275960170698, ["lea     rdi, aFailedToChange; \"failed to change ownership of %s from %\"...", "call    _gettext", "jmp     short loc_2DED"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 1, 8, 0, 2, 9, 2, 0.011379800853485063, ["mov     [rbp+fmt], rax", "mov     rax, [rbp+old_spec]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+spec]", "mov     [rbp+old_spec], rax", "mov     [rbp+spec], 0", "jmp     short loc_2E8F"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 1, 0, 4, 17, 0, 4, 10, 1, 0.02418207681365576, ["mov     rax, [rbp+file]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rsi, rax", "mov     rcx, [rbp+spec]", "mov     rdx, [rbp+old_spec]", "mov     rax, [rbp+fmt]", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rax, [rbp+old_spec]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+spec]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 9, 2, 0.011379800853485065, ["mov     [rbp+fmt], rax", "jmp     loc_2E8F"], ["mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 9, 2, 0.01209103840682788, ["mov     [rbp+fmt], rax", "jmp     short loc_2E8F"], ["mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, 4, 0.01422475106685633, ["cmp     [rbp+group], 0", "jz      short loc_2DE1"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, 4, 0.03698435277382645, ["cmp     [rbp+user], 0", "jz      short loc_2E63"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 6, 5, 0.08321479374110954, ["cmp     eax, 4", "jz      loc_2E4E"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 3, 0, 1, 3, 0, 2, 9, 3, 0.0010668563300142249, ["lea     rdi, aFailedToChange_0; \"failed to change group of %s from %s to\"...", "call    _gettext", "jmp     short loc_2DED"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 8, 3, 0.01351351351351351, ["lea     rdi, aOwnershipOfSRe; \"ownership of %s retained as %s\\n\"", "call    _gettext", "jmp     short loc_2E84"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 9, 3, 0.0010668563300142249, ["lea     rdi, aFailedToChange_1; \"failed to change ownership of %s\\n\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 9, 3, 0.0010668563300142249, ["lea     rdi, aOwnershipOfSRe_0; \"ownership of %s retained\\n\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [23, 0, 53, 0, 39, 52, 1, 137, 0.02458, 12, 2], "succs": [[15], [0, 8], [34], [2, 14], [27], [9, 4], [], [1, 6], [10, 12], [11, 13], [15], [27], [15], [27], [16, 17], [28], [20], [20], [21, 5], [33, 18], [22, 23], [26, 31], [19], [19], [30], [24, 38], [29], [28], [34], [28], [28], [35, 37], [25, 36], [32, 7], [], [29], [30], [29], [30]], "fname": "describe_change", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 26, 0, 0, 2, 1, 1, 0, 0, 0.023185483870967742, ["or      [rbp+open_flags], 10000h", "jmp     short loc_2F8C"], ["or~[rbp+0],0", "jmp~FOO"]], [0, 2, 28, 0, 0, 5, 1, 1, 2, 3, 0.00907258064516129, ["mov     rax, [rbp+orig_st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_2F82"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.00907258064516129, ["mov     [rbp+status], eax", "mov     eax, [rbp+status]", "jmp     short loc_3141"], ["mov~[rbp+0],eax", "mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 10, 3, 0.010584677419354838, ["mov     eax, 2", "jmp     short loc_30F9"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 10, 3, 0.010584677419354838, ["mov     eax, 6"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.006048387096774193, ["mov     eax, 5", "jmp     loc_3141"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 5, 0, 1, 5, 4, 0.11088709677419355, ["mov     rax, [rbp+orig_st]", "mov     rdx, [rax]", "mov     rax, [rbp+st.st_dev]", "cmp     rdx, rax", "jz      short loc_3098"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 5, 0, 1, 4, 4, 0.12096774193548387, ["mov     rax, [rbp+orig_st]", "mov     rdx, [rax+8]", "mov     rax, [rbp+st.st_ino]", "cmp     rdx, rax", "jnz     short loc_308C"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jnz~FOO"]], [3, 0, 22, 0, 1, 12, 1, 1, 5, 4, 0.03225806451612903, ["mov     eax, [rbp+open_flags]", "or      eax, 1", "mov     edx, eax; oflag", "mov     rcx, [rbp+file]", "mov     eax, [rbp+cwd_fd]", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    _openat", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_3035"], ["mov~eax,[rbp+0]", "or~eax,0", "mov~edx,eax", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 2, 23, 0, 0, 5, 1, 1, 4, 4, 0.023185483870967742, ["mov     rax, [rbp+orig_st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_3015"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 3, 0.008064516129032258, ["mov     [rbp+status], 4", "jmp     short loc_3111"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 8, 4, 0.08064516129032258, ["mov     edx, [rbp+gid]; group", "mov     ecx, [rbp+uid]", "mov     eax, [rbp+fd]", "mov     esi, ecx; owner", "mov     edi, eax; fd", "call    _fchown", "test    eax, eax", "jnz     short loc_3107"], ["mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,ecx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 7, 4, 0.09879032258064516, ["cmp     [rbp+required_gid], 0FFFFFFFFh", "jz      short loc_30BD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 8, 3, 0.004032258064516129, ["mov     eax, [rbp+st.st_gid]", "cmp     [rbp+required_gid], eax", "jnz     short loc_3111"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 6, 4, 0.10887096774193548, ["cmp     [rbp+required_uid], 0FFFFFFFFh", "jz      short loc_30AF"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 6, 0, 1, 5, 1, 2, 9, 4, 0.05141129032258064, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "test    eax, eax", "jnz     short loc_30F4"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.008064516129032258, ["mov     eax, 5", "jmp     loc_3141"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 4, 3, 0.03125, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 0Dh", "jnz     short loc_302B"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 24, 0, 1, 4, 0, 2, 3, 4, 0.034274193548387094, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 0Dh", "jnz     short loc_3015"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 9, 3, 0.004032258064516129, ["mov     [rbp+status], 6"], ["mov~[rbp+0],0"]], [0, 0, 12, 0, 0, 3, 0, 1, 7, 3, 0.004032258064516129, ["mov     eax, [rbp+st.st_uid]", "cmp     [rbp+required_uid], eax", "jnz     short loc_3111"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.008064516129032258, ["mov     eax, 6", "jmp     loc_3141"], ["mov~eax,0", "jmp~FOO"]], [4, 0, 32, 1, 0, 16, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0D0h", "mov     [rbp+cwd_fd], edi", "mov     [rbp+file], rsi", "mov     [rbp+orig_st], rdx", "mov     [rbp+uid], ecx", "mov     [rbp+gid], r8d", "mov     [rbp+required_uid], r9d", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+status], 2", "mov     [rbp+open_flags], 900h", "cmp     [rbp+required_uid], 0FFFFFFFFh", "jnz     short loc_2F4A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],ecx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 18, 0, 1, 7, 1, 2, 3, 4, 0.1381048387096774, ["lea     rdx, [rbp+st]", "mov     eax, [rbp+fd]", "mov     rsi, rdx; stat_buf", "mov     edi, eax; fildes", "call    fstat", "test    eax, eax", "jz      short loc_305F"], ["lea~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 25, 0, 1, 10, 0, 1, 2, 5, 0.11391129032258064, ["mov     edx, [rbp+open_flags]; oflag", "mov     rcx, [rbp+file]", "mov     eax, [rbp+cwd_fd]", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    _openat", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_3035"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 2, 29, 0, 0, 5, 1, 1, 1, 4, 0.05241935483870967, ["mov     rax, [rbp+orig_st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      short loc_2F8C"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 1, 3, 0.004032258064516129, ["cmp     [rbp+required_gid], 0FFFFFFFFh", "jnz     short loc_2F4A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.006048387096774193, ["mov     eax, 5", "jmp     loc_3141"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.06048387096774194, ["mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_3155"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 3, 11, 0, 3, 5, 2, 0.035282258064516125, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, [rbp+status]"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 3, 0.015120967741935484, ["mov     [rbp+status], 6", "jmp     loc_3111"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [11, 10, 37, 1, 33, 50, 1, 141, 0.03705, 1, 1], "succs": [[24], [0, 5], [29], [2], [2], [29], [10, 14], [10, 6], [17, 23], [8, 17], [30], [19, 15], [11, 13], [11, 30], [12, 20], [3, 4], [29], [16, 21], [17, 9], [30], [12, 30], [29], [25, 26], [32, 7], [18, 23], [24, 1], [25, 27], [29], [], [28, 31], [29], [], [30]], "fname": "restricted_chown", "n_num": 33}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 80, 0, 0, 4, 1, 1, 0, 0, 0.01068215892053973, ["mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "test    rax, rax", "jnz     short loc_3633"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 81, 0, 0, 4, 0, 1, 5, 10, 0.007533733133433283, ["mov     rax, [rbp+chopt]", "mov     eax, [rax]", "cmp     eax, 2", "jnz     short loc_3633"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 55, 0, 0, 7, 0, 1, 8, 5, 0.015142428785607195, ["mov     rax, [rbp+file_stats]", "mov     rdx, [rax]", "mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     loc_38EE"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 56, 0, 0, 7, 0, 1, 7, 6, 0.01836581709145427, ["mov     rax, [rbp+file_stats]", "mov     rdx, [rax+8]", "mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     loc_38EE"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 88, 0, 1, 7, 1, 2, 2, 3, 0.0005247376311844077, ["mov     rdx, [rbp+ent]; jumptable 0000000000003211 case 2", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    cycle_warning_required", "test    al, al", "jz      short loc_35AD"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 115, 1, 0, 8, 0, 1, 1, 4, 0.0023238380809595203, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_DF00", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_DF00", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 0, 116, 1, 0, 29, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 110h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     [rbp+uid], edx", "mov     [rbp+gid], ecx", "mov     [rbp+required_uid], r8d", "mov     [rbp+required_gid], r9d", "mov     rax, [rbp+arg_0]", "mov     [rbp+chopt], rax", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     [rbp+file_full_name], rax", "mov     rax, [rbp+ent]", "mov     rax, [rax+30h]", "mov     [rbp+file], rax", "mov     [rbp+ok], 1", "mov     [rbp+symlink_changed], 1", "mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "movzx   eax, ax", "cmp     eax, 0Ah; switch 11 cases", "ja      loc_35A4; jumptable 0000000000003211 default case"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],ecx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "movzx~eax,ax", "cmp~eax,0", "ja~FOO"]], [1, 0, 79, 0, 0, 5, 2, 1, 7, 8, 0.013680659670164916, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+10h]", "xor     eax, 1", "test    al, al", "jz      short loc_3633"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [3, 0, 3, 0, 1, 10, 0, 2, 4, 2, 0.00044977511244377805, ["mov     rax, [rbp+ent]", "mov     qword ptr [rax+20h], 1", "mov     rcx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     edx, 1; instr", "mov     rsi, rcx; p", "mov     rdi, rax; sp_0", "call    rpl_fts_set", "mov     eax, 1", "jmp     loc_3C86"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 1, 1, 3, 3, 0.00044977511244377805, ["mov     rax, [rbp+ent]", "mov     rax, [rax+20h]", "test    rax, rax", "jnz     short loc_341B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 39, 0, 1, 11, 1, 2, 9, 6, 0.0014617691154422787, ["mov     rax, [rbp+fts]; jumptable 00000000000039E7 case 5", "mov     eax, [rax+2Ch]", "mov     ecx, [rbp+gid]; group", "mov     edx, [rbp+uid]; owner", "mov     rsi, [rbp+file]; file", "mov     edi, eax; fd", "call    chownat", "test    eax, eax", "setz    al", "mov     [rbp+ok], al", "jmp     short loc_3A39"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "setz~al", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 44, 1, 0, 8, 0, 1, 8, 7, 0.01911544227886057, ["mov     eax, [rbp+err]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_DF2C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_DF2C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 95, 0, 0, 4, 1, 1, 2, 4, 0.0013493253373313343, ["mov     rax, [rbp+chopt]; jumptable 0000000000003211 case 1", "movzx   eax, byte ptr [rax+4]", "test    al, al", "jz      loc_35A7"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 9, 6, 0.0014617691154422787, ["mov     [rbp+ok], 0; jumptable 00000000000039E7 case 6", "jmp     short loc_3A39"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 9, 4, 0.01184407796101949, ["mov     rax, [rbp+file_full_name]", "lea     rsi, asc_DD2E; \"/\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_3863"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 88, 0, 0, 5, 2, 1, 3, 10, 0.013043478260869565, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+11h]", "xor     eax, 1", "test    al, al", "jz      short loc_3471"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 91, 0, 0, 4, 1, 1, 2, 4, 0.0007496251874062968, ["mov     rax, [rbp+ent]; jumptable 0000000000003211 case 10", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_341B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 63, 1, 0, 5, 0, 1, 8, 7, 0.016529235382308844, ["mov     [rbp+do_chown], 1", "mov     rax, [rbp+ent]", "add     rax, 78h", "mov     [rbp+file_stats], rax", "jmp     loc_375D"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 39, 0, 0, 3, 0, 1, 9, 6, 0.0014617691154422787, ["mov     [rbp+do_chown], 0; jumptable 00000000000039E7 cases 3,4", "mov     [rbp+ok], 0", "jmp     short loc_3A39"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort; jumptable 00000000000039E7 default case"], ["call~FOO"]], [3, 0, 45, 2, 1, 16, 0, 2, 7, 8, 0.02383808095952024, ["mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "mov     r9d, [rbp+required_uid]; required_uid", "mov     r8d, [rbp+gid]; gid", "mov     ecx, [rbp+uid]; uid", "mov     rdx, [rbp+file_stats]; orig_st", "mov     rsi, [rbp+file]; file", "sub     rsp, 8", "mov     edi, [rbp+required_gid]", "push    rdi; required_gid", "mov     edi, eax; cwd_fd", "call    restricted_chown", "add     rsp, 10h", "mov     [rbp+err], eax", "cmp     [rbp+err], 6; switch 7 cases", "ja      short loc_3A33; jumptable 00000000000039E7 default case"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~r9d,[rbp+0]", "mov~r8d,[rbp+0]", "mov~ecx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "sub~rsp,0", "mov~edi,[rbp+0]", "push~rdi", "mov~edi,eax", "call~FOO", "add~rsp,0", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 3, 3, 0.0017991004497751122, ["mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "test    rax, rax", "jz      loc_339A"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.0014617691154422787, ["nop; jumptable 00000000000039E7 case 2"], ["nop"]], [1, 0, 38, 0, 0, 2, 0, 1, 8, 5, 0.05187406296851574, ["cmp     [rbp+do_chown], 0", "jz      short loc_3AC0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 41, 0, 1, 14, 3, 2, 7, 6, 0.03815592203898051, ["mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "mov     ecx, [rbp+gid]; group", "mov     edx, [rbp+uid]; owner", "mov     rsi, [rbp+file]; file", "mov     edi, eax; fd", "call    lchownat", "test    eax, eax", "setz    al", "mov     [rbp+ok], al", "movzx   eax, [rbp+ok]", "xor     eax, 1", "test    al, al", "jz      loc_3A39"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "setz~al", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 40, 0, 1, 4, 0, 2, 8, 6, 0.004047976011994003, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 5Fh ; '_'", "jnz     loc_3A39"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [2, 0, 39, 0, 0, 3, 0, 1, 9, 6, 0.0, ["mov     [rbp+ok], 1", "mov     [rbp+symlink_changed], 0", "jmp     loc_3A39"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 3, 19, 0, 3, 16, 4, 0.005847076461769115, ["mov     [rbp+old_grp], rax", "mov     rax, [rbp+chopt]", "mov     r8, [rax+20h]", "mov     rax, [rbp+chopt]", "mov     rdi, [rax+18h]", "mov     rcx, [rbp+old_grp]; old_group", "mov     rdx, [rbp+old_usr]; old_user", "mov     esi, [rbp+ch_status]; changed", "mov     rax, [rbp+file_full_name]", "mov     r9, r8; group", "mov     r8, rdi; user", "mov     rdi, rax; file", "call    describe_change", "mov     rax, [rbp+old_usr]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+old_grp]", "mov     rdi, rax; ptr", "call    free"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 7, 0, 1, 5, 0, 2, 15, 5, 0.005922038980509745, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+20h]", "mov     edi, eax; gid", "call    gid_to_name", "jmp     short loc_3BEB"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 15, 5, 0.005922038980509745, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 37, 0, 0, 4, 2, 1, 9, 5, 0.02361319340329835, ["movzx   eax, [rbp+ok]", "xor     eax, 1", "test    al, al", "jz      short loc_3AC0"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 77, 1, 0, 7, 1, 1, 4, 10, 0.03437031484257871, ["mov     rax, [rbp+ent]", "add     rax, 78h", "mov     [rbp+file_stats], rax", "mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      loc_3705"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 3, 11, 0.031484257871064465, ["cmp     [rbp+required_uid], 0FFFFFFFFh", "jnz     short loc_3633"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 4, 11, 0.006596701649175412, ["cmp     [rbp+required_gid], 0FFFFFFFFh", "jnz     short loc_3633"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 7, 0, 1, 4, 3, 0.0014992503748125937, ["mov     rax, [rbp+ent]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     loc_339A"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 5, 0, 0, 5, 2, 1, 7, 3, 0.03365817091454273, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+4]", "xor     eax, 1", "test    al, al", "jz      short loc_3C7F"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 31, 0, 0, 4, 0, 1, 6, 4, 0.15839580209895052, ["mov     rax, [rbp+chopt]", "mov     eax, [rax]", "cmp     eax, 2", "jz      loc_3C4F"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 10, 4, 0.004497751124437781, ["mov     rax, [rbp+chopt]", "mov     eax, [rax]", "test    eax, eax", "jnz     loc_3C4F"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 5, 2, 1, 10, 5, 0.019190404797601198, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+11h]", "xor     eax, 1", "test    al, al", "jz      short loc_3AC0"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [4, 0, 4, 0, 3, 14, 0, 4, 10, 3, 0.0022488755622188904, ["mov     rax, [rbp+file_full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_38C1"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 1, 5, 0, 2, 13, 7, 0.015142428785607195, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+1Ch]", "mov     edi, eax; uid", "call    uid_to_name", "jmp     short loc_3BC2"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 12, 8, 0.04272863568215892, ["mov     [rbp+ch_status], eax", "cmp     [rbp+file_stats], 0", "jz      short loc_3BBD"], ["mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 76, 0, 0, 5, 1, 1, 5, 10, 0.010119940029985007, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_3705"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 4, 9, 0.025337331334332833, ["mov     [rbp+ok], 0", "jmp     loc_35AE"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 87, 0, 3, 15, 0, 3, 4, 10, 0.0, ["mov     rax, [rbp+file_full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aCannotAccessS; \"cannot access %s\"", "call    _gettext", "mov     rdx, rax; format", "mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "mov     rcx, rbx", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rcx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 4, 0, 1, 6, 0, 1, 8, 3, 0.0, ["mov     rcx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     edx, 4; instr", "mov     rsi, rcx; p", "mov     rdi, rax; sp_0", "call    rpl_fts_set"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [0, 0, 8, 0, 0, 7, 0, 1, 5, 3, 0.0014992503748125937, ["mov     rax, [rbp+ent]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     loc_339A"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 8, 2, 0.019865067466266866, ["movzx   eax, [rbp+ok]"], ["movzx~eax,[rbp+0]"]], [2, 0, 35, 0, 1, 7, 0, 2, 11, 7, 0.014617691154422787, ["mov     rax, [rbp+file_full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "cmp     [rbp+uid], 0FFFFFFFFh", "jz      short loc_3A93"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r12,rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 1, 1, 6, 6, 0.031146926536731633, ["mov     rax, [rbp+chopt]", "mov     rax, [rax+8]", "test    rax, rax", "jz      loc_38EE"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 61, 0, 0, 4, 0, 1, 5, 7, 0.032983508245877056, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 1", "jz      short loc_37B2"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 60, 0, 0, 4, 0, 1, 6, 7, 0.006746626686656671, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 2", "jz      short loc_37B2"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 59, 0, 0, 4, 0, 1, 7, 7, 0.0034482758620689655, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 6", "jz      short loc_37B2"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 58, 0, 0, 4, 0, 1, 8, 6, 0.0019115442278860569, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 4", "jnz     loc_38EE"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 88, 0, 0, 5, 2, 1, 2, 10, 0.0002998500749625187, ["mov     rax, [rbp+chopt]; jumptable 0000000000003211 case 7", "movzx   eax, byte ptr [rax+11h]", "xor     eax, 1", "test    al, al", "jz      short loc_34D0"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 33, 0, 1, 4, 0, 2, 12, 6, 0.0036731634182908543, ["lea     rdi, aChangingOwners; \"changing ownership of %s\"", "call    _gettext", "mov     rbx, rax", "jmp     short loc_3AA2"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.016941529235382308, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_3C9A"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [5, 0, 3, 0, 4, 19, 0, 5, 8, 2, 0.0006746626686656671, ["lea     rdi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rcx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     edx, 4; instr", "mov     rsi, rcx; p", "mov     rdi, rax; sp_0", "call    rpl_fts_set", "mov     rax, [rbp+fts]", "mov     rdi, rax", "call    rpl_fts_read", "mov     [rbp+__x], rax", "mov     eax, 0", "jmp     loc_3C86"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.0008995502248875561, ["mov     eax, 1", "jmp     loc_3C86"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.00044977511244377805, ["mov     eax, 1", "jmp     loc_3C86"], ["mov~eax,0", "jmp~FOO"]], [6, 0, 3, 0, 3, 16, 0, 4, 3, 2, 0.00044977511244377805, ["mov     rax, [rbp+file_full_name]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "lea     rdi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     loc_3C86"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [4, 0, 3, 0, 2, 9, 0, 3, 11, 2, 0.0010494752623688155, ["lea     rdi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     loc_3C86"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 75, 0, 1, 9, 1, 2, 6, 11, 0.008395802098950524, ["mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "lea     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, [rbp+file]; filename", "mov     ecx, 0; flag", "mov     edi, eax; fildes", "call    fstatat", "test    eax, eax", "jz      short loc_36F7"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 6, 4, 0.0013493253373313343, ["mov     rax, [rbp+file_full_name]", "lea     rsi, asc_DD2E; \"/\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_32DB"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 33, 0, 1, 3, 0, 1, 12, 6, 0.0036731634182908543, ["lea     rdi, aChangingGroupO; \"changing group of %s\"", "call    _gettext", "mov     rbx, rax"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax"]], [0, 0, 0, 0, 0, 5, 0, 0, 5, 0, 0.0, ["lea     rsp, [rbp-10h]", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["lea~rsp,[rbp-10h]+0]", "pop~rbx", "pop~r12", "pop~rbp", "retn"]], [1, 0, 74, 0, 0, 5, 2, 1, 7, 12, 0.004347826086956522, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+11h]", "xor     eax, 1", "test    al, al", "jz      short loc_36F0"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 32, 0, 2, 8, 0, 2, 13, 5, 0.007196401799100449, ["call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [7, 0, 4, 0, 4, 20, 0, 4, 10, 3, 0.0022488755622188904, ["lea     rdx, asc_DD2E; \"/\"", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rax, [rbp+file_full_name]", "mov     rdx, rax; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbx, rax", "lea     rdi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "call    _gettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [4, 0, 87, 0, 2, 14, 0, 2, 3, 10, 0.0, ["mov     rax, [rbp+file_full_name]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rdx, rax", "mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "mov     rcx, rdx", "lea     rdx, aS; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 5, 5, 0.1892053973013493, ["cmp     [rbp+do_chown], 0", "jz      loc_3AC0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 3, 9, 0.012893553223388305, ["mov     [rbp+ok], 0", "jmp     loc_35AE"], ["mov~[rbp+0],0", "jmp~FOO"]], [4, 0, 4, 0, 3, 14, 0, 4, 7, 3, 0.0003748125937031484, ["mov     rax, [rbp+file_full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_3339"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 8, 7, 0.03193403298350824, ["cmp     [rbp+ok], 0", "jz      short loc_3B2A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 7, 7, 0.12593703148425786, ["cmp     [rbp+do_chown], 0", "jz      short loc_3B2A"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 73, 0, 4, 16, 0, 4, 8, 12, 0.0, ["mov     rax, [rbp+file_full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "lea     rdi, aCannotDerefere; \"cannot dereference %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 88, 0, 0, 5, 2, 1, 2, 10, 0.0002998500749625187, ["mov     rax, [rbp+chopt]; jumptable 0000000000003211 case 4", "movzx   eax, byte ptr [rax+11h]", "xor     eax, 1", "test    al, al", "jz      short loc_3532"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 72, 0, 0, 1, 0, 0, 8, 11, 0.010794602698650674, ["mov     [rbp+ok], 0"], ["mov~[rbp+0],0"]], [1, 0, 27, 0, 0, 2, 0, 1, 10, 8, 0.021889055472263868, ["cmp     [rbp+uid], 0FFFFFFFFh", "jz      short loc_3B08"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 9, 7, 0.026986506746626684, ["cmp     [rbp+symlink_changed], 0", "jz      short loc_3B2A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 4, 6, 0.1982758620689655, ["cmp     [rbp+ok], 0", "jz      loc_38EE"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 71, 0, 0, 2, 0, 0, 7, 10, 0.02128935532233883, ["lea     rax, [rbp+stat_buf]", "mov     [rbp+file_stats], rax"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 26, 0, 0, 4, 0, 1, 11, 7, 0.006371814092953522, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+1Ch]", "cmp     [rbp+uid], eax", "jnz     short loc_3B23"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 49, 0, 0, 5, 2, 1, 6, 7, 0.06626686656671664, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+10h]", "xor     eax, 1", "test    al, al", "jz      short loc_3971"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 5, 9, 0.05745877061469265, ["cmp     [rbp+ok], 0", "jz      short loc_374B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 11, 7, 0.006596701649175412, ["cmp     [rbp+gid], 0FFFFFFFFh", "jz      short loc_3B2A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 6, 10, 0.010194902548725637, ["cmp     [rbp+required_uid], 0FFFFFFFFh", "jz      short loc_3729"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 12, 7, 7.496251874062968e-05, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+20h]", "cmp     [rbp+gid], eax", "jz      short loc_3B2A"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 68, 0, 0, 4, 0, 1, 7, 9, 0.0024737631184407792, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+1Ch]", "cmp     [rbp+required_uid], eax", "jnz     short loc_374B"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 12, 6, 0.003298350824587706, ["mov     eax, 1", "jmp     short loc_3B2F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 8, 6, 0.09220389805097451, ["mov     eax, 0"], ["mov~eax,0"]], [3, 0, 87, 0, 3, 15, 0, 3, 3, 10, 0.0, ["mov     rax, [rbp+file_full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aCannotReadDire; \"cannot read directory %s\"", "call    _gettext", "mov     rdx, rax; format", "mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "mov     rcx, rbx", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rcx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 7, 9, 0.007796101949025486, ["cmp     [rbp+required_gid], 0FFFFFFFFh", "jz      short loc_3744"], ["cmp~[rbp+0],0", "jz~FOO"]], [7, 0, 4, 0, 4, 20, 0, 4, 7, 3, 0.0003748125937031484, ["lea     rdx, asc_DD2E; \"/\"", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax; sp_0", "mov     rax, [rbp+file_full_name]", "mov     rdx, rax; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbx, rax", "lea     rdi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "call    _gettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 3, 9, 0.012893553223388305, ["mov     [rbp+ok], 0", "jmp     short loc_35AE"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 66, 0, 0, 4, 0, 1, 8, 9, 7.496251874062968e-05, ["mov     rax, [rbp+file_stats]", "mov     eax, [rax+20h]", "cmp     [rbp+required_gid], eax", "jnz     short loc_374B"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [2, 0, 21, 0, 0, 4, 1, 1, 9, 5, 0.09287856071964018, ["mov     [rbp+changed], al", "and     [rbp+changed], 1", "cmp     [rbp+changed], 0", "jnz     short loc_3B56"], ["mov~[rbp+0],al", "and~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 8, 0.009595202398800599, ["mov     eax, 1", "jmp     short loc_3750"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 64, 0, 0, 1, 0, 0, 6, 8, 0.057008995502248874, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 63, 0, 0, 2, 1, 0, 7, 7, 0.07320089955022488, ["mov     [rbp+do_chown], al", "and     [rbp+do_chown], 1"], ["mov~[rbp+0],al", "and~[rbp+0],0"]], [1, 0, 19, 0, 0, 4, 2, 1, 10, 10, 0.07893553223388305, ["movzx   eax, [rbp+ok]", "xor     eax, 1", "test    al, al", "jz      short loc_3B6B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 63, 0, 0, 3, 0, 1, 3, 7, 0.09760119940029985, ["mov     [rbp+do_chown], 0", "mov     [rbp+file_stats], 0", "jmp     loc_375D"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 11, 9, 0.043478260869565216, ["mov     eax, 3", "jmp     short loc_3B9A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 17, 0, 0, 4, 2, 1, 11, 10, 0.024587706146926534, ["movzx   eax, [rbp+symlink_changed]", "xor     eax, 1", "test    al, al", "jz      short loc_3B80"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, 9, 0.0009745127436281858, ["mov     eax, 1", "jmp     short loc_3B9A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 13, 9, 0.0004872563718140929, ["mov     eax, 2"], ["mov~eax,0"]], [1, 0, 15, 0, 0, 4, 2, 1, 12, 10, 0.012443778110944527, ["movzx   eax, [rbp+changed]", "xor     eax, 1", "test    al, al", "jz      short loc_3B95"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 13, 9, 0.0004872563718140929, ["mov     eax, 4", "jmp     short loc_3B9A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 86, 0, 0, 2, 0, 1, 1, 9, 0.012443778110944527, ["nop; jumptable 0000000000003211 default case", "jmp     short loc_35AE"], ["nop", "jmp~FOO"]], [0, 0, 86, 0, 0, 2, 0, 1, 3, 9, 0.0062218890554722635, ["nop", "jmp     short loc_35AE"], ["nop", "jmp~FOO"]], [0, 0, 86, 0, 0, 2, 0, 1, 3, 9, 0.0062218890554722635, ["nop", "jmp     short loc_35AE"], ["nop", "jmp~FOO"]], [1, 0, 88, 0, 0, 5, 2, 1, 2, 3, 0.0005247376311844077, ["mov     rax, [rbp+chopt]; jumptable 0000000000003211 case 6", "movzx   eax, byte ptr [rax+4]", "xor     eax, 1", "test    al, al", "jz      loc_35AA"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 86, 0, 0, 1, 0, 0, 3, 9, 0.0062218890554722635, ["nop"], ["nop"]], [1, 0, 85, 0, 0, 4, 2, 1, 2, 8, 0.12586206896551724, ["movzx   eax, [rbp+ok]", "xor     eax, 1", "test    al, al", "jz      short loc_35D3"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 13, 7, 0.015142428785607195, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 9, 0, 0, 3, 0, 1, 14, 6, 0.024962518740629682, ["mov     [rbp+old_usr], rax", "cmp     [rbp+file_stats], 0", "jz      short loc_3BE6"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [57, 49, 150, 1, 117, 187, 1, 631, 0.02088, 14, 7], "succs": [[31, 7], [0, 31], [14, 71], [2, 71], [113, 60], [16, 4, 12, 77, 109, 112, 54], [5, 109], [17, 31], [56], [8, 15], [23], [10, 19, 18, 22, 13], [21, 110], [23], [69, 39], [43, 44], [9, 15], [81], [23], [], [11, 19], [34, 58], [23], [36, 30], [25, 23], [26, 23], [23], [35], [27], [27], [36, 38], [42, 85], [33, 31], [1, 31], [58, 46], [45, 47], [75, 35], [35, 101], [48, 36], [61], [116], [40, 115], [85, 63], [114], [43], [47], [64, 58], [56], [65, 55], [3, 71], [49, 51], [49, 52], [49, 53], [49, 71], [72, 70], [68], [66, 62], [56], [56], [56], [56], [56], [], [82, 67], [73, 94], [68], [], [76, 78], [36], [61], [72], [84, 36], [114], [57], [80, 91], [74, 91], [78], [92, 95], [82], [83, 86], [91, 79], [50, 71], [85], [90, 86], [24, 20], [99, 87], [88, 91], [89, 93], [90, 91], [99, 93], [97], [97], [95], [96, 98], [57], [114], [98, 99], [37, 101], [100], [100], [81], [104, 103], [81], [41], [105, 107], [41], [41], [106, 108], [41], [114], [114], [114], [59, 111], [114], [32, 102], [116], [28, 29]], "fname": "change_file_owner", "n_num": 117}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 12, 0, 0, 4, 0, 1, 0, 0, 0.014285714285714287, ["mov     rax, [rbp+chopt]", "mov     eax, [rax]", "cmp     eax, 2", "jz      short loc_3CEF"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 1, 1, 2, 6, 0.01904761904761905, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jnz     short loc_3CE8"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 6, 0, 0.0, ["movzx   eax, [rbp+ok]", "mov     rbx, [rbp+var_8]", "leave", "retn"], ["movzx~eax,[rbp+0]", "mov~rbx,[rbp+0]", "leave", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 5, 1, 0.12380952380952381, ["nop", "mov     rax, [rbp+fts]", "mov     rdi, rax; sp_0", "call    rpl_fts_close", "test    eax, eax", "jz      short loc_3DFE"], ["nop", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 1, 0, 3, 11, 0, 3, 6, 1, 0.0, ["lea     rdi, aFtsCloseFailed; \"fts_close failed\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ok], 0"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0"]], [2, 1, 15, 1, 0, 13, 0, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 48h", "mov     [rbp+files], rdi", "mov     [rbp+bit_flags], esi", "mov     [rbp+uid], edx", "mov     [rbp+gid], ecx", "mov     [rbp+required_uid], r8d", "mov     [rbp+required_gid], r9d", "mov     [rbp+ok], 1", "cmp     [rbp+required_uid], 0FFFFFFFFh", "jnz     short loc_3CE8"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],edx", "mov~[rbp+0],ecx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 9, 0, 1, 6, 0, 2, 3, 3, 0.30000000000000004, ["mov     rax, [rbp+fts]", "mov     rdi, rax", "call    rpl_fts_read", "mov     [rbp+ent], rax", "cmp     [rbp+ent], 0", "jnz     short loc_3D7B"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 9, 2, 1, 20, 2, 2, 4, 4, 0.0, ["mov     r8d, [rbp+required_gid]", "mov     edi, [rbp+required_uid]", "mov     ecx, [rbp+gid]; gid", "mov     edx, [rbp+uid]; uid", "mov     rsi, [rbp+ent]; ent", "mov     rax, [rbp+fts]", "sub     rsp, 8", "push    [rbp+chopt]; chopt", "mov     r9d, r8d; required_gid", "mov     r8d, edi; required_uid", "mov     rdi, rax; fts", "call    change_file_owner", "add     rsp, 10h", "movzx   edx, [rbp+ok]", "movzx   eax, al", "and     eax, edx", "test    eax, eax", "setnz   al", "mov     [rbp+ok], al", "jmp     loc_3D16"], ["mov~r8d,[rbp+0]", "mov~edi,[rbp+0]", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,r8d", "mov~r8d,edi", "mov~rdi,rax", "call~FOO", "add~rsp,0", "movzx~edx,[rbp+0]", "movzx~eax,al", "and~eax,edx", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 9, 0, 1, 10, 1, 1, 2, 4, 0.2571428571428572, ["mov     [rbp+stat_flags], eax", "mov     eax, [rbp+bit_flags]", "or      eax, [rbp+stat_flags]", "mov     ecx, eax", "mov     rax, [rbp+files]", "mov     edx, 0; compar", "mov     esi, ecx; options", "mov     rdi, rax; argv", "call    xfts_open", "mov     [rbp+fts], rax"], ["mov~[rbp+0],eax", "mov~eax,[rbp+0]", "or~eax,[rbp+0]", "mov~ecx,eax", "mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 5, 0.16666666666666669, ["mov     eax, 0", "jmp     short loc_3CF4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 6, 0.014285714285714287, ["cmp     [rbp+required_gid], 0FFFFFFFFh", "jnz     short loc_3CE8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 4, 5, 0.02380952380952381, ["mov     eax, 8"], ["mov~eax,0"]], [2, 0, 4, 0, 3, 10, 0, 3, 6, 3, 0.0, ["lea     rdi, aFtsReadFailed; \"fts_read failed\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 5, 0, 0, 5, 2, 1, 5, 3, 0.09523809523809525, ["mov     rax, [rbp+chopt]", "movzx   eax, byte ptr [rax+11h]", "xor     eax, 1", "test    al, al", "jz      short loc_3D75"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 4, 2, 0.2571428571428572, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      loc_3DBF"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.028571428571428574, ["mov     [rbp+ok], 0", "jmp     short loc_3DBF"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [11, 8, 22, 1, 16, 23, 1, 104, 0.08125, 2, 3], "succs": [[9, 11], [0, 9], [], [2, 4], [2], [9, 10], [14, 7], [6], [6], [8], [9, 1], [8], [15], [12, 15], [3, 13], [3]], "fname": "chown_files", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     cs:file_name, rax", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 8, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+ignore], al", "movzx   eax, [rbp+ignore]", "mov     cs:ignore_EPIPE, al", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~<TAG>,al", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 8, 0, 0, 4, 2, 1, 0, 0, 0.06944444444444445, ["movzx   eax, cs:ignore_EPIPE", "xor     eax, 1", "test    al, al", "jnz     short loc_3E72"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 1, 9, 1, 1, 9, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      loc_3EFE"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 1, 0, 2, 9, 0, 2, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     rcx, rdx", "lea     rdx, off_DF81; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.125, ["lea     rdi, aWriteError; \"write error\"", "call    _gettext", "mov     [rbp+write_error], rax", "mov     rax, cs:file_name", "test    rax, rax", "jz      short loc_3ECB"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 7, 0, 1, 4, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 20h ; ' '", "jz      loc_3EFE"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.08333333333333333, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      short loc_3F1E"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 1, 0, 3, 15, 0, 4, 3, -1, 0.027777777777777776, ["mov     rax, cs:file_name", "mov     rdi, rax; arg", "call    quotearg_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     r8, rdx", "mov     rcx, rbx", "lea     rdx, aSS_0; \"%s: %s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_3EF1"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~r8,rdx", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 4, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [11, 5, 17, 0, 10, 12, 0, 63, 0.0375, 8, 2], "succs": [[3, 4], [0, 5], [7], [2, 6], [3, 5], [8, 9], [7], [], [], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+file], rsi", "mov     [rbp+owner], edx", "mov     [rbp+group], ecx", "mov     ecx, [rbp+group]; group", "mov     edx, [rbp+owner]; owner", "mov     rsi, [rbp+file]; file", "mov     eax, [rbp+fd]", "mov     r8d, 0; flag", "mov     edi, eax; fd", "call    _fchownat", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],ecx", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8d,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "chownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 2, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+file], rsi", "mov     [rbp+owner], edx", "mov     [rbp+group], ecx", "mov     ecx, [rbp+group]; group", "mov     edx, [rbp+owner]; owner", "mov     rsi, [rbp+file]; file", "mov     eax, [rbp+fd]", "mov     r8d, 100h; flag", "mov     edi, eax; fd", "call    _fchownat", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],ecx", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8d,<STR>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "lchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+p]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]], [8, 0, 2, 8, 0, 25, 0, 1, 1, 0, 0.5, ["mov     rcx, [rbp+i]", "mov     rdx, 0CCCCCCCCCCCCCCCDh", "mov     rax, rcx", "mul     rdx", "shr     rdx, 3", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "sub     rcx, rax", "mov     rdx, rcx", "mov     eax, edx", "add     eax, 30h ; '0'", "sub     [rbp+p], 1", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rax, [rbp+i]", "mov     rdx, 0CCCCCCCCCCCCCCCDh", "mul     rdx", "mov     rax, rdx", "shr     rax, 3", "mov     [rbp+i], rax", "cmp     [rbp+i], 0", "jnz     short loc_3FA7"], ["mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "sub~rcx,rax", "mov~rdx,rcx", "mov~eax,edx", "add~eax,0", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "mov~rdx,0", "mul~,rdx", "mov~rax,rdx", "shr~rax,0", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 2, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+i], rdi", "mov     [rbp+buf], rsi", "mov     rax, [rbp+buf]", "add     rax, 14h", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 0"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0"]]], "func_feature": [0, 0, 1, 0, 3, 3, 3, 37, 0.16667, 0, 9], "succs": [[], [0, 1], [1]], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 0, 2, 7, 0, 2, 0, 0, 0.0, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rcx, rax; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     rdi, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "call~FOO"]], [1, 1, 9, 1, 0, 6, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+argv0], rdi", "cmp     [rbp+argv0], 0", "jnz     short loc_4045"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 3, 1, 1, 8, 1, 2, 4, 1, 0.1388888888888889, ["mov     rax, [rbp+base]", "sub     rax, 7", "mov     edx, 7; n", "lea     rsi, aLibs; \"/.libs/\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_40E2"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 1, 0, 7, 0, 1, 3, 1, 0.2222222222222222, ["mov     [rbp+base], rax", "mov     rdx, [rbp+base]", "mov     rax, [rbp+argv0]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 6", "jle     short loc_40E2"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jle~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 2, 0.06944444444444445, ["mov     rax, [rbp+slash]", "add     rax, 1", "jmp     short loc_406F"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 2, 2, 0.06944444444444445, ["mov     rax, [rbp+argv0]"], ["mov~rax,[rbp+0]"]], [2, 0, 7, 0, 1, 7, 0, 2, 1, 3, 0.09722222222222221, ["mov     rax, [rbp+argv0]", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     [rbp+slash], rax", "cmp     [rbp+slash], 0", "jz      short loc_406B"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 2, 0, 1, 9, 1, 2, 5, 1, 0.08333333333333333, ["mov     rax, [rbp+base]", "mov     [rbp+argv0], rax", "mov     rax, [rbp+base]", "mov     edx, 3; n", "lea     rsi, aLt; \"lt-\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_40E2"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+argv0]", "mov     cs:program_name, rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_name@@GLIBC_2_2_5, rax", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]], [1, 0, 1, 1, 0, 5, 0, 0, 6, 1, 0.0, ["mov     rax, [rbp+base]", "add     rax, 3", "mov     [rbp+argv0], rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, rax"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax"]]], "func_feature": [5, 2, 11, 0, 10, 13, 1, 60, 0.06806, 7, 5], "succs": [[], [0, 6], [8, 7], [8, 2], [3], [3], [4, 5], [8, 9], [], [8]], "fname": "set_program_name", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 2, 11, 0, 2, 0, 0, 0.0, ["mov     esi, 38h ; '8'; s", "mov     rdi, rax; p", "call    xmemdup", "mov     [rbp+p], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+p]", "leave", "retn"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4125"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 1, 3, 1, 1, 9, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "cmp     [rbp+o], 0", "jz      short loc_411E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [3, 0, 5, 0, 4, 4, 0, 23, 0.04167, 1, 1], "succs": [[], [0], [0], [1, 2]], "fname": "clone_quoting_options", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     eax, [rax]", "pop     rbp", "retn"], ["mov~eax,<TAG>", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4165"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "cmp     [rbp+o], 0", "jz      short loc_415E"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 11, 0.04167, 1, 0], "succs": [[], [0], [0], [1, 2]], "fname": "get_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+s], esi", "cmp     [rbp+o], 0", "jz      short loc_4181"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["mov     edx, [rbp+s]", "mov     [rax], edx", "nop", "pop     rbp", "retn"], ["mov~edx,[rbp+0]", "mov~<TAG>,edx", "nop", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4188"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 14, 0.04167, 1, 0], "succs": [[2], [0, 3], [], [2]], "fname": "set_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     eax, esi", "mov     [rbp+i], edx", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "mov     [rbp+uc], al", "cmp     [rbp+o], 0", "jz      short loc_41B4"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],edx", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_41BB"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [5, 0, 0, 3, 0, 34, 5, 0, 2, 0, 0.0, ["lea     rdx, [rax+8]", "movzx   eax, [rbp+uc]", "shr     al, 5", "movzx   eax, al", "shl     rax, 2", "add     rax, rdx", "mov     [rbp+p], rax", "movzx   eax, [rbp+uc]", "and     eax, 1Fh", "mov     [rbp+shift], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "mov     [rbp+r], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+i]", "and     eax, 1", "xor     eax, [rbp+r]", "mov     esi, eax", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shl     esi, cl", "mov     eax, esi", "xor     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["lea~rdx,[rax+0]", "movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "shl~rax,0", "add~rax,rdx", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "and~eax,0", "xor~eax,[rbp+0]", "mov~esi,eax", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~esi,cl", "mov~eax,esi", "xor~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 5, 2, 0, 4, 4, 2, 47, 0.04167, 1, 3], "succs": [[3], [0, 2], [3], []], "fname": "set_char_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+i], esi", "cmp     [rbp+o], 0", "jnz     short loc_4237"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+o]", "mov     eax, [rax+4]", "mov     [rbp+r], eax", "mov     rax, [rbp+o]", "mov     edx, [rbp+i]", "mov     [rax+4], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 3, 3, 0, 17, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_quoting_flags", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 3, 0, 0, 4, 0, 1, 0, 0, 0.30000000000000004, ["mov     rax, [rbp+o]", "mov     dword ptr [rax], 0Ah", "cmp     [rbp+left_quote], 0", "jz      short loc_428E"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 5, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "cmp     [rbp+o], 0", "jnz     short loc_4276"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 3, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, 1, 0.15000000000000002, ["cmp     [rbp+right_quote], 0", "jnz     short loc_4293"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+o]", "mov     rdx, [rbp+left_quote]", "mov     [rax+28h], rdx", "mov     rax, [rbp+o]", "mov     rdx, [rbp+right_quote]", "mov     [rax+30h], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [1, 0, 4, 0, 6, 7, 1, 26, 0.075, 1, 1], "succs": [[3, 5], [0, 2], [0], [4, 5], [], []], "fname": "set_custom_quoting", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[8, 1, 4, 1, 0, 17, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+var_48], rdi", "mov     [rbp+style], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     qword ptr [rbp+o.style], 0", "mov     qword ptr [rbp+o.quote_these_too], 0", "mov     qword ptr [rbp+o.quote_these_too+8], 0", "mov     qword ptr [rbp+o.quote_these_too+10h], 0", "mov     qword ptr [rbp+o.quote_these_too+18h], 0", "mov     [rbp+o.left_quote], 0", "mov     [rbp+o.right_quote], 0", "cmp     [rbp+style], 0Ah", "jnz     short loc_430F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 21, 1, 1, 0, 1, 0.16666666666666666, ["mov     eax, [rbp+style]", "mov     [rbp+o.style], eax", "mov     rcx, [rbp+var_48]", "mov     rax, qword ptr [rbp+o.style]", "mov     rdx, qword ptr [rbp+o.quote_these_too]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+8]", "mov     rdx, qword ptr [rbp+o.quote_these_too+10h]", "mov     [rcx+10h], rax", "mov     [rcx+18h], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+18h]", "mov     rdx, [rbp+o.left_quote]", "mov     [rcx+20h], rax", "mov     [rcx+28h], rdx", "mov     rax, [rbp+o.right_quote]", "mov     [rcx+30h], rax", "mov     rax, [rbp+var_48]", "mov     rdx, [rbp+var_8]", "xor     rdx, fs:28h", "jz      short locret_4368"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~rcx,[rbp+0]", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[rbp+0]", "mov~[rcx+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "xor~rdx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 4, 2, 5, 4, 3, 42, 0.03333, 1, 1], "succs": [[1, 2], [3, 4], [], [], []], "fname": "quoting_options_from_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.004807692307692308, ["lea     rax, unk_E07E", "jmp     short locret_4423"], ["lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.041666666666666664, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_4404"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_E082", "jmp     short locret_4423"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00641025641025641, ["mov     rax, [rbp+translation]", "jmp     locret_4423"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00641025641025641, ["lea     rax, unk_E06E", "jmp     short locret_4423"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00641025641025641, ["lea     rax, unk_E072", "jmp     short locret_4423"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_E085", "jmp     short locret_4423"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.004807692307692308, ["lea     rax, asc_E087; \"'\""], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 4, 0, 1, 2, 2, 0.03205128205128205, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_43D0"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 11, 0, 2, 8, 1, 3, 1, 3, 0.0641025641025641, ["call    locale_charset", "mov     [rbp+locale_code], rax", "mov     rax, [rbp+locale_code]", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_43D9"], ["call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.041666666666666664, ["cmp     [rbp+s], 9", "jnz     short loc_441C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 3, 0.07692307692307693, ["mov     rax, [rbp+locale_code]", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_440D"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 13, 1, 1, 12, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+msgid], rdi", "mov     [rbp+s], esi", "mov     rax, [rbp+msgid]", "mov     rdi, rax; msgid", "call    _gettext", "mov     [rbp+translation], rax", "mov     rax, [rbp+translation]", "cmp     rax, [rbp+msgid]", "jz      short loc_439C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]]], "func_feature": [4, 2, 16, 0, 14, 19, 2, 51, 0.02106, 8, 1], "succs": [[3], [0, 2], [3], [], [3], [3], [3], [3], [3], [5, 6], [9, 12], [8, 7], [1, 11], [10, 4]], "fname": "gettext_quote", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 13, 1, 0.0070665988815455, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_5405"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [0, 0, 281, 0, 0, 4, 1, 1, 6, 12, 0.023525673614641585, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_45CB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 1, 5, 13, 0.012506354855109304, ["mov     rax, [rbp+left_quote]", "mov     [rbp+quote_string], rax", "jmp     short loc_45F9"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 281, 2, 0, 2, 0, 0, 8, 13, 0.007079308591764108, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [3, 0, 281, 2, 0, 6, 1, 1, 21, 12, 0.05510930350788002, ["add     [rbp+len], 1", "movzx   eax, [rbp+c]", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rbp+c], al", "jmp     short loc_4F85"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "and~eax,0", "add~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.0543467208947636, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4F44"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 9, 1, 0, 21, 13, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 3", "and     eax, 7", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "and~eax,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [1, 0, 281, 1, 0, 1, 0, 0, 18, 12, 1.2709710218607015e-05, ["add     [rbp+m], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 2, 0, 8, 1, 1, 17, 12, 0.0063294356888662934, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_4D01"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_481B"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 16, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_47F8"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 1, 0, 3, 0, 1, 17, 11, 0.0347864768683274, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0", "jmp     loc_504B"], ["add~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.034023894255210976, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4C00"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 9, 0.0005147432638535841, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_504C"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.04452846975088968, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_504C"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4EBE"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 16, 0.029067107269954245, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4A12"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 19, 9, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 9, 0.037201321809862735, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5013"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 10, 0.012874936451448906, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 0000000000004789 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_504C"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 10, 7, 0.36952211489578035, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E0B8", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E0B8", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 11, 0.17469496695475342, ["cmp     [rbp+unibyte_locale], 0; jumptable 0000000000004789 default case", "jz      short loc_4C4F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 8, 0, 1, 9, 8, 0.5461616675139807, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "cmp     eax, 7Eh ; '~'; switch 127 cases", "ja      loc_4C17; jumptable 0000000000004789 default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 10, 5, 0.12071682765632943, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      loc_52F9"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 5, 0.15413701067615657, ["cmp     [rbp+quoting_style], 2", "jnz     loc_52F9"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 11, 3, 0.009456024402643618, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5364"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 4, 0.0313421453990849, ["cmp     [rbp+quote_string], 0", "jz      short loc_5346"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 2, 1, 11, 4, 0.01601423487544484, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_5346"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 13, 4, 0.010027961362480934, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_530D"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 3, 0, 1, 11, 6, 0.07682257244534824, ["mov     eax, [rbp+quoting_style]; jumptable 0000000000004789 case 63", "cmp     eax, 2", "jz      short loc_4911"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 14, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 15, 0.029829689883070665, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4A35"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 1, 8, 0, 2, 5, 11, 0.02793594306049822, ["mov     [rbp+backslash_escapes], 1", "mov     rax, [rbp+right_quote]", "mov     [rbp+quote_string], rax", "mov     rax, [rbp+quote_string]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+quote_string_len], rax", "jmp     short loc_4694"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 4, 12, 0.025648195221148955, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_4604"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 15, 0.0, ["mov     [rbp+backslash_escapes], 1; jumptable 000000000000450D case 3"], ["mov~[rbp+0],0"]], [0, 0, 281, 1, 0, 8, 0, 1, 2, 12, 0.1197508896797153, ["mov     eax, [rbp+quoting_style]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E08C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E08C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 281, 1, 0, 7, 1, 1, 6, 8, 0.35229410269445854, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_5237"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 5, 9, 0.7073843416370107, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_5229"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 14, 0.003546009150991357, ["mov     [rbp+elide_outer_quotes], 1; jumptable 000000000000450D case 1"], ["mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.03326131164209456, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4BDD"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.0002846975088967971, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.018485002541942044, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_516B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 13, 0.06750127097102186, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4842"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 13, 14, 0.06406964921199797, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_4824"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 14, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_4824"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 3, 0, 8, 0, 1, 19, 8, 0.03796390442297915, ["add     [rbp+len], 1", "add     [rbp+i], 1", "mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "jmp     loc_4E1F"], ["add~[rbp+0],0", "add~[rbp+0],0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 12, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4FC6"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 10, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_4FF2"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 6, 8, 0.35229410269445854, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+argsize]", "setnz   al"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setnz~al"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 13, 0.01021860701576004, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 000000000000450D case 4", "xor     eax, 1", "test    al, al", "jz      short loc_463C; jumptable 000000000000450D case 2"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 17, 14, 0.1396733604473818, ["nop", "jmp     store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 11, 0.1770017793594306, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+ilim], rax", "jbe     loc_5036"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 4, 13, 0.0, ["mov     [rbp+backslash_escapes], 1"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 2, 1, 1, 7, 7, 0.7085282155566853, ["test    al, al", "jnz     loc_46A1"], ["test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 5, 0.05713650228774784, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_537F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 6, 0.05999618708693442, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_4F58"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.07590238942552109, ["nop", "jmp     short loc_504C"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 11, 0.07169547534316217, ["mov     [rbp+c], 30h ; '0'", "jmp     loc_503C"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 11, 0.020297407219115403, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_503C"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.020411794611082865, ["nop", "jmp     short loc_504C"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 7, 0.06609049313675648, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_503F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 8, 6, 0.1599517031011693, ["cmp     [rbp+len], 0", "jnz     short loc_5259"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 6, 0.009938993390950685, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_5259"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 5, 0.006856888662938485, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5385"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.013408744280630401, ["nop", "jmp     short loc_504C"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 1, 1, 13, 9, 0.013739196746314183, ["test    al, al", "jnz     loc_5042"], ["test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 14, 0.030592272496187085, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4A58"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.003393492628368073, ["nop", "jmp     short loc_504C"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.0037747839349262834, ["cmp     [rbp+i], 0; jumptable 0000000000004789 cases 35,126", "jnz     loc_5045"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 4, 1, 0, 4, 0, 0, 12, 3, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 0"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.010294865277071682, ["nop", "jmp     short loc_504C"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.013540925266903914, ["cmp     [rbp+quoting_style], 2; jumptable 0000000000004789 cases 33,34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_5048"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.003906964921199796, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_5048"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 281, 2, 1, 13, 2, 2, 11, 10, 0.10008896797153025, ["mov     [rbp+m], 1", "call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+c]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "setnz   al", "mov     [rbp+printable], al", "jmp     loc_4DE9"], ["mov~[rbp+0],0", "call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,<STR>", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 10, 0.04150991357397051, ["nop"], ["nop"]], [3, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.04040925266903914, ["mov     [rbp+encountered_single_quote], 1; jumptable 0000000000004789 case 39", "mov     [rbp+c_and_shell_quote_compat], 1", "cmp     [rbp+quoting_style], 2", "jnz     loc_504B"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 0, 0, 5, 0, 1, 4, 11, 0.017602948652770716, ["mov     [rbp+backslash_escapes], 1", "lea     rax, unk_E085", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     loc_4694"], ["mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 12, 0.016077783426537873, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 000000000000450D case 5", "xor     eax, 1", "test    al, al", "jz      short loc_454B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [2, 0, 281, 1, 0, 3, 0, 1, 15, 12, 0.06826385358413828, ["add     [rbp+len], 1", "cmp     [rbp+quoting_style], 2", "jz      loc_48DD"], ["add~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 0, 0, 5, 2, 1, 3, 12, 0.02648703609557702, ["mov     [rbp+quoting_style], 2; jumptable 000000000000450D case 2", "movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_4674"], ["mov~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.006596339603457041, ["nop", "jmp     loc_504C"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.009689883070665987, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_4A62"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 23, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_4EC7"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 17, 16, 0.04938993390950686, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_4EC7"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 4, 10, 0.13004575495678697, ["mov     [rbp+i], 0", "jmp     loc_5207"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 14, 10, 0.5733985765124555, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_466F"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 23, 13, 0.031354855109303505, ["add     [rbp+len], 1", "jmp     short loc_4A60"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 9, 0.0031456532791052363, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_506B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 9, 0.32878749364514487, ["movzx   eax, [rbp+backslash_escapes]", "xor     eax, 1", "test    al, al", "jnz     short loc_5060"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 13, 0.009633960345704117, ["nop; jumptable 00000000000049A8 default case"], ["nop"]], [2, 0, 281, 2, 0, 9, 0, 1, 16, 7, 0.04378495170310117, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 21h ; '!'; switch 30 cases", "cmp     eax, 1Dh", "ja      loc_4A5F; jumptable 00000000000049A8 default case"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 17, 6, 0.03468479918657855, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E2B4", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E2B4", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 12, 0.0449288256227758, ["jmp     short loc_4A68"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.02188612099644128, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+argsize], rax", "jbe     short loc_48DD"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4E78"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 8, 0, 0, 20, 14, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 6", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 14, 0.053584138281647174, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4F13"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 14, 11, 0.058070665988815454, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 10, 0.05540162684290798, ["mov     eax, [rbp+flags]", "and     eax, 4", "test    eax, eax", "jz      loc_4A68"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 14, 9, 0.04956786985256736, ["mov     rax, [rbp+i]", "add     rax, 2", "cmp     [rbp+argsize], rax", "jbe     loc_4A68"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 15, 8, 0.04668276563294357, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Fh ; '?'", "jnz     loc_4A68"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 14, 10, 0.06814946619217081, ["jmp     loc_504C"], ["jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.0061387900355871884, ["jmp     loc_4A69"], ["jmp~FOO"]], [3, 1, 3, 2, 1, 17, 1, 1, 13, 2, 0.007416115912557193, ["mov     eax, [rbp+flags]", "and     eax, 0FFFFFFFDh", "mov     r8d, eax", "mov     edi, [rbp+quoting_style]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    0; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~r8d,eax", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~r9d,r8d", "mov~r8d,edi", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 0, 2, 0, 1, 12, 3, 0.017329689883070664, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_539F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 13, 3, 0.003355363497712252, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_539F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.0, ["mov     [rbp+quoting_style], 4"], ["mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 1, 0, 2, 0, 1, 17, 14, 0.06698017285205897, ["add     [rbp+len], 1", "jmp     short store_c"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.06621759023894255, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5164"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 61h ; 'a'; jumptable 0000000000004789 case 7", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.004971614980511778, ["cmp     [rbp+quote_these_too], 0", "jz      short loc_50A7"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 8, 0.3245721064226402, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jnz     short loc_50A7"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.1183019827147941, ["cmp     [rbp+buffersize], 0", "jnz     short loc_52F9"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 3, 0.1212061514997458, ["cmp     [rbp+all_c_and_shell_quote_compat], 0", "jz      short loc_52D0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 62h ; 'b'; jumptable 0000000000004789 case 8", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [5, 0, 281, 0, 1, 9, 0, 2, 11, 12, 0.07180986273512964, ["lea     rax, [rbp+mbstate]", "mov     edx, 8; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     [rbp+m], 0", "mov     [rbp+printable], 1", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4C91"], ["lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 17, 12, 0.018797661413319774, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jle     short loc_48DD"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 66h ; 'f'; jumptable 0000000000004789 case 12", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 4, 0.12095195729537365, ["cmp     [rbp+encountered_single_quote], 0", "jz      short loc_52F9"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 12, 0.5514616166751398, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_51EE"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 6Eh ; 'n'; jumptable 0000000000004789 case 10", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 4, 11, 0.02801220132180986, ["lea     rax, asc_E087; \"'\"", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     short loc_4694"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4E9B"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 72h ; 'r'; jumptable 0000000000004789 case 13", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+elide_outer_quotes], 0; jumptable 000000000000450D case 0", "jmp     short loc_4694"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 000000000000450D default case"], ["call~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 1, 13, 0.12255973563802745, ["cmp     [rbp+quoting_style], 0Ah; switch 11 cases", "ja      loc_468F; jumptable 000000000000450D default case"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 74h ; 't'; jumptable 0000000000004789 case 9", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 14, 6, 0.006494661921708185, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5331"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 7, 0, 1, 18, 12, 0.015696492119979664, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 39h ; '9'", "jg      short loc_48DD"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 76h ; 'v'; jumptable 0000000000004789 case 11", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.034448398576512454, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5379"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+backslash_escapes], 1; jumptable 000000000000450D case 7", "mov     [rbp+elide_outer_quotes], 0", "jmp     loc_4694"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 14, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_48B5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 4, 0, 0, 13, 8, 0.13445602440264362, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "mov     [rbp+ilim], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 281, 0, 0, 4, 0, 1, 12, 9, 0.18070665988815454, ["movzx   eax, [rbp+printable]", "mov     [rbp+c_and_shell_quote_compat], al", "cmp     [rbp+m], 1", "ja      short loc_4E10"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "ja~FOO"]], [3, 0, 281, 1, 0, 15, 3, 1, 15, 7, 0.00023301135400779526, ["movzx   eax, [rbp+c]", "shr     al, 5", "movzx   eax, al", "lea     rdx, ds:0[rax*4]", "mov     rax, [rbp+quote_these_too]", "add     rax, rdx", "mov     edx, [rax]", "movzx   eax, [rbp+c]", "and     eax, 1Fh", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "test    eax, eax", "jnz     short loc_50B6"], ["movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,<TAG>", "movzx~eax,[rbp+0]", "and~eax,0", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.03424504321301474, ["movzx   eax, [rbp+c]; jumptable 0000000000004789 case 92", "mov     [rbp+esc], al", "cmp     [rbp+quoting_style], 2", "jnz     short loc_4AB7"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 14, 0.3029422979156075, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 7, 0.33018132519911875, ["movzx   eax, [rbp+is_right_quote]", "xor     eax, 1", "test    al, al", "jnz     loc_5171"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [4, 0, 281, 0, 0, 5, 0, 1, 8, 9, 0.5457803762074225, ["mov     [rbp+is_right_quote], 0", "mov     [rbp+escaping], 0", "mov     [rbp+c_and_shell_quote_compat], 0", "cmp     [rbp+backslash_escapes], 0", "jz      loc_4747"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 15, 0.05282155566853076, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4EE5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 13, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 14, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_51C4"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 8, 0.012963904422979155, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_4ACE"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 9, 0.031113370615149974, ["cmp     [rbp+quoting_style], 2", "jz      loc_4747"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 8, 0.009367056431113371, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_4ACE"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 22, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_48D8"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.009278088459583122, ["cmp     [rbp+quote_string_len], 0", "jnz     loc_516E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 9, 0.02806304016268429, ["cmp     [rbp+quote_string_len], 0", "jz      short loc_4747"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 1, 3, 2, 1, 15, 0, 2, 13, 2, 9.532282663955262e-05, ["mov     edi, [rbp+flags]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+orig_buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    [rbp+quote_these_too]; quote_these_too", "mov     r9d, edi; flags", "mov     r8d, 5; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "jmp     loc_53F1"], ["mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "mov~r9d,edi", "mov~r8d,0", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 15, 16, 0.06278596847991866, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_5146"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.07177808845958311, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5382"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 7, 0.001741230299949161, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 7, 0.17635993899339095, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_4F58"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 6, 0.025050838840874428, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_4AE2"], ["cmp~[rbp+0],0", "jnz~FOO"]], [11, 0, 281, 1, 1, 36, 3, 1, 0, 14, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+quoting_style], r8d", "mov     [rbp+flags], r9d", "mov     rax, [rbp+arg_0]", "mov     [rbp+quote_these_too], rax", "mov     rax, [rbp+arg_8]", "mov     [rbp+left_quote], rax", "mov     rax, [rbp+arg_10]", "mov     [rbp+right_quote], rax", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+len], 0", "mov     [rbp+orig_buffersize], 0", "mov     [rbp+quote_string], 0", "mov     [rbp+quote_string_len], 0", "mov     [rbp+backslash_escapes], 0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "setz    al", "mov     [rbp+unibyte_locale], al", "mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "setnz   al", "mov     [rbp+elide_outer_quotes], al", "mov     [rbp+pending_shell_escape_end], 0", "mov     [rbp+encountered_single_quote], 0", "mov     [rbp+all_c_and_shell_quote_compat], 1"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "call~FOO", "cmp~rax,0", "setz~al", "mov~[rbp+0],al", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 1, 0, 0, 21, 12, 0.014107778342653787, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.0038891713268937467, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5376"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 3, 1, 20, 0, 2, 12, 11, 0.07458057956278596, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+argsize]", "sub     rax, rdx", "mov     rdi, rax", "mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "lea     rsi, [rdx+rax]; s", "lea     rdx, [rbp+mbstate]", "lea     rax, [rbp+w]", "mov     rcx, rdx; ps", "mov     rdx, rdi; n", "mov     rdi, rax; pwc", "call    rpl_mbrtowc", "mov     [rbp+bytes], rax", "cmp     [rbp+bytes], 0", "jz      loc_4DE5"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "sub~rax,rdx", "mov~rdi,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 1, 1, 7, 1, 2, 17, 11, 0.03379511947127605, ["mov     rax, [rbp+bytes]", "add     [rbp+m], rax", "lea     rax, [rbp+mbstate]", "mov     rdi, rax; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_4C91"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 281, 0, 1, 4, 0, 1, 12, 12, 0.0, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 281, 0, 0, 5, 0, 1, 11, 9, 0.024999999999999998, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+quote_string_len]", "lea     rbx, [rdx+rax]", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4707"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rbx,<TAG>", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 15, 14, 0.11860701576004067, ["mov     rax, [rbp+orig_buffersize]", "mov     [rbp+buffersize], rax", "mov     [rbp+len], 0", "jmp     process_input"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 17, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_50F7"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 16, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_5146"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 9, 0.0031647178444331467, ["cmp     [rbp+quote_string_len], 1", "jbe     short loc_4707"], ["cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 8, 0.021822572445348246, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 11, 0.06198525673614641, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4CF4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.016853075749872902, ["jmp     loc_5202"], ["jmp~FOO"]], [2, 0, 281, 1, 0, 5, 2, 1, 16, 11, 0.5522241992882562, ["add     [rbp+len], 1", "movzx   eax, [rbp+c_and_shell_quote_compat]", "xor     eax, 1", "test    al, al", "jz      short loc_5202"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 11, 0.0, ["mov     [rbp+all_c_and_shell_quote_compat], 0"], ["mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.00327910523640061, ["mov     [rbp+printable], 0", "jmp     loc_4DE9"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.09025673614641586, ["cmp     [rbp+backslash_escapes], 0; jumptable 0000000000004789 case 0", "jz      loc_48E6"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 1, 13, 6, 0.04288256227758007, ["movzx   eax, [rbp+esc]", "mov     [rbp+c], al", "jmp     store_escape"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 11, 0.05591001525165226, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh", "jnz     short loc_4D3F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.11839095068632435, ["cmp     [rbp+orig_buffersize], 0", "jz      short loc_52F9"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.018848500254194205, ["mov     [rbp+printable], 0", "jmp     short loc_4D06"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 11, 0.012595322826639553, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh; jumptable 0000000000004789 cases 123,125", "jnz     short loc_4B18"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 1, 6, 0, 2, 13, 8, 0.001766649720386375, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax", "mov     rax, [rbp+argsize]", "jmp     short loc_470E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 8, 0.020818505338078292, ["mov     rax, [rbp+argsize]"], ["mov~rax,[rbp+0]"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 11, 0.06433655312658872, ["cmp     eax, 5", "jz      short loc_4920"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 0, 13, 7, 0.02652516522623284, ["cmp     rax, rbx", "jb      short loc_4747"], ["cmp~rax,rbx", "jb~FOO"]], [1, 0, 281, 1, 0, 6, 1, 1, 12, 10, 0.004899593289273005, ["mov     rax, [rbp+arg]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_4B23"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_511A"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 11, 0.022801220132180985, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "cmp     [rbp+argsize], rax", "jbe     loc_4DE8"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [2, 0, 281, 0, 0, 2, 0, 0, 3, 13, 0.0, ["mov     [rbp+quoting_style], 5; jumptable 000000000000450D case 6", "mov     [rbp+elide_outer_quotes], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.0002846975088967971, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 10, 0.004899593289273005, ["cmp     [rbp+argsize], 1", "setnz   al"], ["cmp~[rbp+0],0", "setnz~al"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_513D"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 10, 1, 0, 6, 0, 0, 15, 6, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4546"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 11, 7, 0.0006990340620233858, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 0000000000004789 case 32"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 1, 10, 1, 2, 14, 6, 0.00992628368073208, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+quote_string_len]; n", "mov     rax, [rbp+quote_string]", "mov     rsi, rax; s2", "mov     rdi, rcx; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_4747"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 11, 0.0035205897305541434, ["jmp     loc_4DE8"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 5, 0.006875953228266395, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_536D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 16, 9, 0.0034443314692425013, ["mov     [rbp+is_right_quote], 1"], ["mov~[rbp+0],0"]], [0, 0, 10, 0, 0, 1, 0, 1, 12, 5, 0.012862226741230299, ["jmp     short loc_533B"], ["jmp~FOO"]], [2, 0, 10, 2, 0, 2, 0, 0, 15, 5, 0.00019064565327910524, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 7, 0, 0, 2, 0, 1, 21, 4, 0.0007117437722419928, ["nop; jumptable 0000000000004DA3 cases 91,92,94,96,124", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 20, 5, 0.0038002033553634976, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E32C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E32C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 9, 0.018912048805287237, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_4DB5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 10, 0.034265378749364514, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_4DB5"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.0008185053380782919, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 16, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.00028469750889679714, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 4, 0.000800711743772242, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.0002846975088967971, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 17, 4, 0.0049377224199288255, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 15, 4, 0.006183274021352313, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 11, 4, 0.00376842907981698, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 8, 0.015899847483477374, ["mov     [rbp+j], 1", "jmp     short loc_4DAB"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 12, 2, 0.0029740721911540417, ["mov     rax, [rbp+len]", "jmp     loc_53F1"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.11680859176410777, ["cmp     [rbp+is_right_quote], 0", "jz      short loc_4F85"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 1, 0, 2, 0, 0, 17, 12, 0.007079308591764108, ["add     [rbp+len], 1", "mov     [rbp+is_right_quote], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4F7C"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 14, 0.015391459074733096, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.06716319267920691, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5370"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 11, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 11, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4FE9"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 18, 5, 0.03173614641586172, ["cmp     [rbp+elide_outer_quotes], 0; jumptable 00000000000049A8 cases 33,39-41,45,47,60-62", "jnz     loc_5373"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 13, 0.5487925775292323, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_51CD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 15, 14, 0.009189120488052873, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 13, 0.024885612608032535, ["cmp     [rbp+quoting_style], 0Ah; jumptable 000000000000450D cases 8-10", "jz      short loc_45B3"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 15, 0.031354855109303505, ["cmp     [rbp+buffersize], 0", "jz      short loc_4B9C"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 4, 0, 12, 0, 1, 19, 6, 0.010015251652262329, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+j]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 5Bh ; '['; switch 34 cases", "cmp     eax, 21h ; '!'", "ja      short loc_4DA5; jumptable 0000000000004DA3 default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 7, 0.026715810879511945, ["mov     rax, [rbp+j]", "cmp     rax, [rbp+bytes]", "jb      short loc_4D58"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 15, 0.0031647178444331467, ["cmp     [rbp+orig_buffersize], 0", "jnz     short loc_4B9C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 20, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_51A1"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 13, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_51CD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 3, 0, 0, 15, 15, 0.0, ["mov     rax, [rbp+buffersize]", "mov     [rbp+orig_buffersize], rax", "mov     [rbp+buffersize], 0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 10, 0.03453228266395526, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_4FF2"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 2, 0, 0, 20, 8, 0.006875953228266395, ["nop; jumptable 0000000000004DA3 default case", "add     [rbp+j], 1"], ["nop", "add~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 14, 0.032498729028978136, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4BBA"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 2, 10, 0, 2, 4, 13, 0.0, ["mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_E089; \"`\"", "call    gettext_quote", "mov     [rbp+left_quote], rax", "mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_E087; \"'\"", "call    gettext_quote", "mov     [rbp+right_quote], rax"], ["mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 10, 0.03216827656329436, ["jmp     short loc_4DE9"], ["jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.00979918657854601, ["nop", "jmp     short loc_4DE9"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 10, 0.020754956786985256, ["nop"], ["nop"]], [0, 0, 281, 0, 1, 5, 1, 2, 16, 12, 0.033032536858159635, ["mov     eax, [rbp+w]", "mov     edi, eax; wc", "call    _iswprint", "test    eax, eax", "jnz     short loc_4DC7"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 17, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_47D5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 12, 0.0, ["mov     [rbp+printable], 0"], ["mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 7, 14, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_45EF"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 6, 0.024955516014234874, ["nop"], ["nop"]], [1, 0, 281, 2, 0, 10, 0, 0, 19, 17, 0.02830452465683782, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "add     [rbp+i], 2", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_49EF"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 6, 0, 0, 8, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [2, 0, 281, 1, 0, 2, 0, 0, 21, 10, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 14, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]]], "func_feature": [16, 60, 177, 2, 282, 444, 7, 994, 0.05056, 8, 114], "succs": [[], [0, 281], [275, 38], [2], [2], [59], [5, 7], [5], [210], [8, 219], [26, 36], [10, 12], [10], [83], [13, 15], [13], [153, 100], [16, 100], [169], [169, 18], [37], [20, 37], [52], [52, 22], [100], [80, 130, 35, 133, 137, 202, 148, 140, 77, 144, 156, 84, 24, 217, 27, 124, 197], [36], [82, 131], [25, 27], [32, 134], [32, 29], [78, 239], [33, 31], [222, 31], [145, 31], [91, 205], [49], [75, 53], [95], [3, 38], [44], [40, 44, 141, 89, 211, 86, 151, 57, 253], [61], [56, 42], [57], [46, 14], [14], [116], [245, 47], [88, 67], [49, 51], [272, 49], [177], [75], [248, 146], [54, 23], [61], [89, 60], [250], [58, 262], [89], [70, 159], [235, 94], [241, 62], [100], [64], [64, 193], [88], [100], [68, 198], [30, 71], [72, 30], [237, 30], [100], [73, 77], [98, 92], [100], [217, 76], [239], [100], [81, 79], [229, 79], [154], [100], [83, 150], [95], [216, 85], [85], [105, 65], [97, 138], [100], [90, 212], [98], [106, 162], [162, 93], [43], [43], [120, 119], [104], [125, 126], [99, 126], [104], [101, 103], [249, 101], [109], [65, 132], [139, 127], [6], [107, 6], [113], [109, 111], [112, 109], [109, 102], [100], [113], [1], [115, 117], [115, 118], [115], [120], [138], [250], [121, 123], [121], [69], [155, 158], [125, 158], [139], [32, 200], [128, 173], [69], [185, 183], [65, 147], [69], [32, 129], [194], [194, 135], [179], [95], [19, 149], [179], [95], [], [41, 142], [179], [223, 215], [248], [152, 65], [69], [19], [234, 254], [95], [160, 170], [177], [153, 17], [276, 158], [48, 166], [250], [276, 157], [28, 167], [170], [108], [161, 108], [136], [163, 165], [163], [168, 176], [28, 172], [176, 171], [162], [178, 181], [176, 251], [186, 28], [1], [122, 189], [236, 174], [179], [241, 63], [181], [182, 191], [143], [65], [233, 191], [192, 269], [268, 183], [183], [204, 190], [143], [209, 242], [122, 188], [203, 204], [69], [196, 199], [96], [96, 195], [96], [154], [66, 246], [175], [201, 228], [32, 187], [210], [213, 207], [206], [206], [114, 110], [218, 28], [74], [214], [208, 214], [9, 270], [86], [116], [74], [240, 258], [223], [224, 87], [80], [28, 220], [270], [221, 230], [28], [34], [34], [87], [116], [264, 225], [238, 271], [227, 271], [116], [116], [116], [116], [116], [116], [116], [116], [116], [256], [1], [258], [59, 244], [209], [59], [243, 252], [250], [50, 231], [280], [280, 247], [232, 277], [136, 260], [250], [243], [266, 39], [257, 265], [264, 226], [271, 255], [265, 261], [122], [164, 263], [136, 259], [265], [55, 23], [164], [256], [267, 45], [39], [45], [154], [154], [154], [184, 273], [274, 11], [184], [11], [4, 279], [175], [21, 278], [21], [4], [23], []], "fname": "quotearg_buffer_restyled", "n_num": 282}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 1, 3, 1, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+o], r8", "cmp     [rbp+o], 0", "jz      short loc_5434"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_543B"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 1, 0, 2, 3, 34, 0, 3, 2, 0, 0.0, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r9d, [rax+4]; flags", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+r], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+r]", "leave", "retn"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [3, 0, 5, 0, 4, 4, 0, 47, 0.04167, 1, 3], "succs": [[3], [0, 2], [3], []], "fname": "quotearg_buffer", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+o], rdx", "mov     rdx, [rbp+o]", "mov     rsi, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rcx, rdx; o", "mov     edx, 0; size", "mov     rdi, rax; arg", "call    quotearg_alloc_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.07500000000000001, ["mov     rax, [rbp+o]", "jmp     short loc_550D"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [2, 0, 5, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+size], rdx", "mov     [rbp+o], rcx", "cmp     [rbp+o], 0", "jz      short loc_5506"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07500000000000001, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [0, 0, 1, 0, 0, 4, 0, 0, 3, 1, 0.0, ["mov     rax, [rbp+bufsize]", "lea     rdx, [rax-1]", "mov     rax, [rbp+size]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]], [7, 2, 2, 5, 5, 67, 1, 6, 2, 1, 0.30000000000000004, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     edx, [rax+4]", "cmp     [rbp+size], 0", "setz    al", "movzx   eax, al", "or      eax, edx", "mov     [rbp+flags], eax", "mov     rax, [rbp+p]", "mov     rsi, [rax+30h]", "mov     rax, [rbp+p]", "mov     rcx, [rax+28h]", "mov     rax, [rbp+p]", "lea     r9, [rax+8]", "mov     rax, [rbp+p]", "mov     edi, [rax]", "mov     r8d, [rbp+flags]", "mov     rdx, [rbp+argsize]", "mov     rax, [rbp+arg]", "sub     rsp, 8", "push    rsi; right_quote", "push    rcx; left_quote", "push    r9; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rcx, rdx; argsize", "mov     rdx, rax; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "add     rax, 1", "mov     [rbp+bufsize], rax", "mov     rax, [rbp+bufsize]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+buf], rax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+bufsize]; buffersize", "mov     rax, [rbp+buf]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "cmp     [rbp+size], 0", "jz      short loc_5609"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "or~eax,edx", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rsi,[rax+0]", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "lea~r9,[rax+0]", "mov~rax,[rbp+0]", "mov~edi,<TAG>", "mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~rsi", "push~rcx", "push~r9", "mov~r9d,r8d", "mov~r8d,edi", "mov~rcx,rdx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "add~rsp,<STR>", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+buf]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [5, 1, 8, 0, 6, 7, 1, 86, 0.075, 1, 6], "succs": [[4], [0, 2], [4], [5], [3, 5], []], "fname": "quotearg_alloc_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "jz      short loc_56BD"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 4, 0, 0, 5, 0, 1, 2, 2, 0.2857142857142857, ["mov     rax, [rbp+sv]", "mov     rdx, [rax+8]", "lea     rax, slot0", "cmp     rdx, rax", "jz      short loc_5696"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 1, 3, 0, 1, 7, 0, 1, 3, 2, 0.0, ["mov     rax, [rbp+sv]", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~<TAG>,<STR>", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["mov     cs:nslots, 1", "nop", "leave", "retn"], ["mov~<TAG>,0", "nop", "leave", "retn"]], [0, 0, 1, 0, 1, 5, 0, 1, 4, 1, 0.0, ["mov     rax, [rbp+sv]", "mov     rdi, rax; ptr", "call    free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [2, 0, 7, 1, 0, 7, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "mov     [rbp+i], 1", "jmp     short loc_564E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 7, 3, 1, 10, 0, 1, 2, 4, 0.0, ["mov     eax, [rbp+i]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "add     [rbp+i], 1"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],0"]], [0, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.26190476190476186, ["mov     eax, cs:nslots", "cmp     [rbp+i], eax", "jl      short loc_562B"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]]], "func_feature": [3, 0, 7, 0, 8, 10, 0, 44, 0.09821, 5, 4], "succs": [[3, 4], [0, 2], [0], [], [3], [7], [7], [1, 6]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[4, 0, 5, 5, 1, 20, 0, 1, 0, 0, 0.14285714285714288, ["mov     eax, [rbp+n]", "lea     edx, [rax+1]", "mov     eax, cs:nslots", "sub     edx, eax", "mov     eax, edx", "cdqe", "shl     rax, 4", "mov     rdx, rax; n", "mov     eax, cs:nslots", "cdqe", "shl     rax, 4", "mov     rcx, rax", "mov     rax, [rbp+sv]", "add     rax, rcx", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, [rbp+n]", "add     eax, 1", "mov     cs:nslots, eax"], ["mov~eax,[rbp+0]", "lea~edx,[rax+0]", "mov~eax,<TAG>", "sub~edx,eax", "mov~eax,edx", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~eax,<TAG>", "cdqe~", "shl~rax,0", "mov~rcx,rax", "mov~rax,[rbp+0]", "add~rax,rcx", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 7, 0, 1, 8, 0, 2, 5, 3, 0.1523809523809524, ["mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+sv], rax", "mov     rax, [rbp+sv]", "mov     cs:slotvec_0, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_578E"], ["mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 6, 3, 0.0, ["mov     rcx, [rbp+sv]", "mov     rax, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [rcx], rax", "mov     [rcx+8], rdx"], ["mov~rcx,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx"]], [2, 1, 1, 4, 2, 33, 0, 2, 4, 1, 0.009523809523809525, ["mov     rax, [rbp+size]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+val], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+val]", "mov     [rdx+8], rax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rdx+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [2, 0, 3, 3, 0, 14, 0, 1, 3, 2, 0.09523809523809525, ["mov     rax, [rbp+qsize]", "add     rax, 1", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+size]", "mov     [rdx], rax", "lea     rax, slot0", "cmp     [rbp+val], rax", "jz      short loc_58B4"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 4, 2, 0.0, ["mov     rax, [rbp+val]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [4, 1, 4, 6, 1, 45, 1, 2, 2, 1, 0.17142857142857143, ["mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     [rbp+val], rax", "mov     rax, [rbp+options]", "mov     eax, [rax+4]", "or      eax, 1", "mov     [rbp+flags], eax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+qsize], rax", "mov     rax, [rbp+size]", "cmp     rax, [rbp+qsize]", "ja      loc_592A"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "or~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [3, 0, 10, 2, 0, 7, 0, 1, 3, 5, 0.09523809523809525, ["mov     eax, [rbp+n]", "add     eax, 1", "cdqe", "shl     rax, 4", "mov     rdx, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_5751"], ["mov~eax,[rbp+0]", "add~eax,0", "cdqe~", "shl~rax,0", "mov~rdx,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 8, 0, 1, 2, 6, 0.06666666666666668, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "setz    al", "mov     [rbp+preallocated], al", "mov     [rbp+nmax], 7FFFFFFEh", "mov     eax, [rbp+nmax]", "cmp     eax, [rbp+n]", "jge     short loc_5735"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "setz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 0, 0, 1, 7, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+val]", "leave", "retn"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 13, 0, 0, 3, 0, 1, 1, 2, 0.06190476190476191, ["mov     eax, cs:nslots", "cmp     [rbp+n], eax", "jl      loc_57D6"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]], [1, 1, 15, 1, 1, 14, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     [rbp+options], rcx", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "cmp     [rbp+n], 0", "jns     short loc_5701"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 4, 0.05238095238095239, ["mov     eax, 0", "jmp     short loc_5755"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, 4, 0.05238095238095239, ["mov     rax, [rbp+sv]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 1, 17, 0, 16, 20, 8, 172, 0.05625, 5, 21], "succs": [[6], [0, 2], [0], [9], [3, 5], [3], [9, 4], [12, 14], [13, 7], [], [8, 6], [10, 15], [1], [], [1], []], "fname": "quotearg_n_options", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 2, 1, 2, 24, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rdx, [rbp+o]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_5A40"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 5, 27, 0.0, 1, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 2, 1, 2, 24, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_5AA2"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 1, 27, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 10, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[3, 0, 2, 1, 2, 39, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     eax, edx", "mov     [rbp+ch_0], al", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+options.right_quote], rax", "movsx   ecx, [rbp+ch_0]", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, ecx; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rcx, [rbp+options]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_5BA9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "movsx~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 1], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     eax, esi", "mov     [rbp+ch_0], al", "movsx   edx, [rbp+ch_0]; ch_0", "mov     rax, [rbp+arg]", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "movsx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     esi, 3Ah ; ':'; ch_0", "mov     rdi, rax; arg", "call    quotearg_char", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rcx, [rbp+argsize]", "mov     rax, [rbp+arg]", "mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, rcx; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,<STR>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 2, 2, 1, 3, 43, 2, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 90h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+var_90]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "mov     rax, qword ptr [rbp+var_90.style]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too]", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+8]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too+10h]", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+18h]", "mov     rdx, [rbp+var_90.left_quote]", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, [rbp+var_90.right_quote]", "mov     [rbp+options.right_quote], rax", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rdx, [rbp+options]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_5CDA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 2, 5, 2, 3, 2, 2, 46, 0.0, 1, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_colon", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rsi, [rbp+left_quote]; left_quote", "mov     eax, [rbp+n]", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 1, 2, 40, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     [rbp+argsize], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+o.style], rax", "mov     qword ptr [rbp+o.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+o.quote_these_too+8], rax", "mov     qword ptr [rbp+o.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+o.quote_these_too+18h], rax", "mov     [rbp+o.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+o.right_quote], rax", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rcx, [rbp+left_quote]", "lea     rax, [rbp+o]", "mov     rsi, rcx; left_quote", "mov     rdi, rax; o", "call    set_custom_quoting", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_5DCA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 0, 1, 1, 17, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rsi, [rbp+argsize]", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     r8, rsi; argsize", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 17, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, quote_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 14, 0.0, 1, 1], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rcx, [rbp+arg]", "mov     eax, [rbp+n]", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, rcx; arg", "mov     edi, eax; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rdx,0", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 3, 10, 0.0, 0, 1], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 5, 1, 1, 13, 2, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0B0h", "mov     [rbp+root_d_i], rdi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+statbuf]", "mov     rsi, rax; stat_buf", "lea     rdi, filename; \"/\"", "call    lstat", "test    eax, eax", "jz      short loc_5F14"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_5F52"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.07500000000000001, ["mov     eax, 0", "jmp     short loc_5F3E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 7, 0, 0, 0, 2, 0.07500000000000001, ["mov     rdx, [rbp+statbuf.st_ino]", "mov     rax, [rbp+root_d_i]", "mov     [rax], rdx", "mov     rdx, [rbp+statbuf.st_dev]", "mov     rax, [rbp+root_d_i]", "mov     [rax+8], rdx", "mov     rax, [rbp+root_d_i]"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 3, 5, 1, 6, 6, 1, 28, 0.075, 2, 1], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 21, 0, 1, 4, 0, 2, 0, 0, 0.04327876984126984, ["mov     rax, [rbp+g]", "mov     rdi, rax; name", "call    _getgrnam", "jmp     short loc_61F2"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 23, 0, 0, 4, 0, 1, 11, 9, 0.10168650793650794, ["mov     rax, [rbp+g]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Bh ; '+'", "jz      short loc_61ED"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 12, 2, 0.02232142857142857, ["mov     rax, [rbp+error_msg]", "mov     rdi, rax; msgid", "call    _gettext", "jmp     short loc_630C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 2, 8, 0, 3, 11, 3, 0.07316468253968253, ["mov     rax, [rbp+u]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+gname]", "mov     rdi, rax; ptr", "call    free", "cmp     [rbp+error_msg], 0", "jz      short loc_6307"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 49, 1, 0, 3, 0, 1, 8, 7, 0.006076388888888888, ["mov     rax, [rbp+separator]", "add     rax, 1", "jmp     short loc_608E"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [1, 0, 51, 1, 0, 5, 1, 1, 7, 8, 0.003224206349206349, ["mov     rax, [rbp+separator]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_6089"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 4, 10, 0.09895833333333333, ["mov     [rbp+u], 0", "cmp     [rbp+separator], 0", "jnz     short loc_6027"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 3, 11, 0.07316468253968253, ["cmp     [rbp+groupname], 0", "jz      short loc_5FFB"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 0, 4, 11, 0.0, ["mov     rax, [rbp+groupname]", "mov     qword ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 49, 0, 0, 1, 0, 0, 7, 7, 0.1640625, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 52, 0, 0, 2, 0, 1, 6, 8, 0.15476190476190477, ["cmp     [rbp+separator], 0", "jz      short loc_6089"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 30, 0, 1, 9, 0, 2, 14, 9, 0.017113095238095236, ["mov     rax, [rbp+pwd]", "mov     eax, [rax+14h]", "mov     [rbp+gnum], eax", "mov     eax, [rbp+gnum]", "mov     edi, eax; gid", "call    _getgrgid", "mov     [rbp+grp], rax", "cmp     [rbp+grp], 0", "jz      short loc_6196"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 13, 7, 0.021825396825396824, ["cmp     [rbp+separator], 0", "jz      short loc_61B9"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 5, 0, 1, 11, 6, 0.06572420634920635, ["mov     rax, [rbp+uid]", "mov     edx, [rbp+unum]", "mov     [rax], edx", "cmp     [rbp+gid], 0", "jz      short loc_629A"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 4, 0.15476190476190477, ["cmp     [rbp+error_msg], 0", "jnz     short loc_62DA"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 13, 0, 2, 5, 0, 2, 15, 5, 0.03224206349206349, ["call    _endgrent", "mov     rax, [rbp+g]", "mov     rdi, rax; string", "call    xstrdup", "mov     [rbp+gname], rax"], ["call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 14, 0, 0, 3, 0, 1, 17, 6, 0.001736111111111111, ["mov     rax, [rbp+tmp]", "mov     [rbp+gnum], eax", "jmp     short loc_625C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 15, 6, 0.008680555555555556, ["mov     rax, cs:E_invalid_group_4954", "mov     [rbp+error_msg], rax", "jmp     short loc_625C"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 14, 6, 0.02405753968253968, ["mov     rax, [rbp+grp]", "mov     eax, [rax+10h]", "mov     [rbp+gnum], eax"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax"]], [0, 0, 54, 0, 0, 4, 1, 1, 5, 9, 0.054563492063492064, ["mov     rax, [rbp+spec]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_6069"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 0, 1, 15, 8, 0.006324404761904762, ["mov     rax, [rbp+grp]", "mov     rax, [rax]", "jmp     short loc_61A8"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 48, 0, 0, 3, 0, 1, 8, 6, 0.19047619047619047, ["mov     [rbp+g], rax", "cmp     [rbp+u], 0", "jz      loc_61BE"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 12, 6, 0.0, ["mov     rax, [rbp+gid]", "mov     edx, [rbp+gnum]", "mov     [rax], edx"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx"]], [0, 0, 2, 0, 0, 3, 1, 1, 13, 1, 0.030753968253968252, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_6320"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 12, 2, 0.02232142857142857, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 14, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 9, 0, 0, 2, 0, 1, 12, 5, 0.04389880952380952, ["cmp     [rbp+username], 0", "jz      short loc_62BA"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 28, 0, 1, 5, 0, 1, 15, 8, 0.006324404761904762, ["mov     eax, [rbp+gnum]", "lea     rdx, [rbp+buf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr"], ["mov~eax,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 53, 0, 1, 5, 0, 2, 6, 9, 0.0, ["mov     rax, [rbp+spec]", "mov     rdi, rax; string", "call    xstrdup", "mov     [rbp+u], rax", "jmp     short loc_6069"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 47, 0, 0, 4, 0, 1, 9, 10, 0.08854166666666666, ["mov     rax, [rbp+u]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Bh ; '+'", "jz      short loc_60B6"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [2, 0, 31, 0, 1, 10, 1, 2, 15, 8, 0.025793650793650792, ["lea     rdx, [rbp+tmp]", "mov     rax, [rbp+u]", "lea     r8, valid_suffixes; valid_suffixes", "mov     rcx, rdx; val", "mov     edx, 0Ah; strtol_base", "mov     esi, 0; ptr", "mov     rdi, rax; s", "call    xstrtoul", "test    eax, eax", "jnz     short loc_6149"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~r8,<TAG>", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 33, 0, 0, 4, 1, 1, 14, 8, 0.06398809523809523, ["mov     [rbp+use_login_group], al", "and     [rbp+use_login_group], 1", "cmp     [rbp+use_login_group], 0", "jz      short loc_6101"], ["mov~[rbp+0],al", "and~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 27, 0, 2, 4, 0, 2, 16, 7, 0.020089285714285712, ["mov     rdi, rax; string", "call    xstrdup", "mov     [rbp+gname], rax", "call    _endgrent"], ["mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO"]], [3, 0, 64, 1, 0, 18, 1, 1, 0, 14, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     [rbp+spec], rdi", "mov     [rbp+separator], rsi", "mov     [rbp+uid], rdx", "mov     [rbp+gid], rcx", "mov     [rbp+username], r8", "mov     [rbp+groupname], r9", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+gname], 0", "mov     rax, [rbp+uid]", "mov     eax, [rax]", "mov     [rbp+unum], eax", "cmp     [rbp+gid], 0", "jz      short loc_5FBB"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 10, 5, 0.10912698412698413, ["cmp     [rbp+error_msg], 0", "jnz     loc_6271"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 18, 0, 1, 10, 1, 2, 14, 7, 0.04464285714285714, ["lea     rdx, [rbp+tmp]", "mov     rax, [rbp+g]", "lea     r8, valid_suffixes; valid_suffixes", "mov     rcx, rdx; val", "mov     edx, 0Ah; strtol_base", "mov     esi, 0; ptr", "mov     rdi, rax; s", "call    xstrtoul", "test    eax, eax", "jnz     short loc_6245"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~r8,<TAG>", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 13, 7, 0.08606150793650794, ["mov     [rbp+grp], rax", "cmp     [rbp+grp], 0", "jnz     short loc_6252"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 0, 13, 5, 0.0, ["mov     rax, [rbp+username]", "mov     rdx, [rbp+u]", "mov     [rax], rdx", "mov     [rbp+u], 0"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~[rbp+0],0"]], [0, 0, 45, 0, 1, 4, 0, 2, 10, 9, 0.04563492063492063, ["mov     rax, [rbp+u]", "mov     rdi, rax; name", "call    _getpwnam", "jmp     short loc_60BB"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 30, 0, 0, 4, 0, 1, 16, 8, 0.013392857142857142, ["mov     rdx, [rbp+tmp]", "mov     eax, 0FFFFFFFFh", "cmp     rdx, rax", "ja      short loc_6149"], ["mov~rdx,[rbp+0]", "mov~eax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 45, 0, 0, 1, 0, 0, 10, 9, 0.04563492063492063, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 62, 0, 0, 3, 0, 1, 1, 13, 0.007688492063492063, ["mov     rax, [rbp+gid]", "mov     eax, [rax]", "jmp     short loc_5FC0"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 16, 7, 0.011656746031746032, ["mov     rax, [rbp+tmp]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_6245"], ["mov~rax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 17, 0, 0, 4, 0, 1, 15, 7, 0.022817460317460316, ["mov     rdx, [rbp+tmp]", "mov     eax, 0FFFFFFFFh", "cmp     rdx, rax", "ja      short loc_6245"], ["mov~rdx,[rbp+0]", "mov~eax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 62, 0, 0, 1, 0, 0, 1, 13, 0.007688492063492063, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [1, 0, 54, 1, 0, 7, 0, 1, 5, 9, 0.054563492063492064, ["mov     rdx, [rbp+separator]", "mov     rax, [rbp+spec]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+ulen], rax", "cmp     [rbp+ulen], 0", "jz      short loc_6069"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.020089285714285712, ["cmp     [rbp+groupname], 0", "jz      short loc_62DA"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 9, 5, 0.24181547619047616, ["cmp     [rbp+g], 0", "jz      loc_6271"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 26, 0, 1, 1, 0, 1, 13, 6, 0.13541666666666666, ["call    _endpwent"], ["call~FOO"]], [1, 0, 44, 0, 0, 3, 0, 1, 11, 8, 0.10863095238095237, ["mov     [rbp+pwd], rax", "cmp     [rbp+pwd], 0", "jnz     loc_6156"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 27, 0, 0, 3, 0, 1, 18, 7, 0.0033482142857142855, ["mov     rax, [rbp+tmp]", "mov     [rbp+unum], eax", "jmp     short loc_61B9"], ["mov~rax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 17, 8, 0.006944444444444444, ["mov     rax, [rbp+tmp]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_6149"], ["mov~rax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 12, 10, 0.05208333333333333, ["cmp     [rbp+separator], 0", "jz      short loc_60DF"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 0, 14, 4, 0.0, ["mov     rax, [rbp+groupname]", "mov     rdx, [rbp+gname]", "mov     [rax], rdx", "mov     [rbp+gname], 0"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~[rbp+0],0"]], [2, 0, 61, 0, 0, 4, 0, 1, 2, 12, 0.04538690476190476, ["mov     [rbp+gnum], eax", "mov     [rbp+error_msg], 0", "cmp     [rbp+username], 0", "jz      short loc_5FE3"], ["mov~[rbp+0],eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 27, 0, 0, 3, 0, 1, 16, 7, 0.016741071428571428, ["mov     rax, cs:E_invalid_user_4953", "mov     [rbp+error_msg], rax", "jmp     short loc_61B9"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 13, 10, 0.005456349206349206, ["cmp     [rbp+g], 0", "jnz     short loc_60DF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 27, 0, 0, 3, 0, 1, 15, 7, 0.033482142857142856, ["mov     rax, cs:E_bad_spec_4955", "mov     [rbp+error_msg], rax", "jmp     loc_61B9"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 32, 0, 0, 5, 0, 1, 12, 7, 0.05704365079365079, ["mov     rax, [rbp+pwd]", "mov     eax, [rax+10h]", "mov     [rbp+unum], eax", "cmp     [rbp+g], 0", "jnz     short loc_61B9"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 0, 3, 12, 0.0, ["mov     rax, [rbp+username]", "mov     qword ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 34, 0, 0, 2, 0, 1, 14, 9, 0.004216269841269841, ["mov     eax, 1", "jmp     short loc_60E4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 13, 9, 0.049107142857142856, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 53, 1, 1, 11, 0, 1, 6, 9, 0.0, ["mov     rax, [rbp+ulen]", "lea     rdx, [rax+1]", "mov     rax, [rbp+spec]", "mov     rsi, rdx; s", "mov     rdi, rax; p", "call    xmemdup", "mov     [rbp+u], rax", "mov     rdx, [rbp+u]", "mov     rax, [rbp+ulen]", "add     rax, rdx", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 21, 0, 0, 1, 0, 0, 12, 8, 0.04327876984126984, ["mov     eax, 0"], ["mov~eax,0"]]], "func_feature": [17, 7, 63, 1, 65, 96, 2, 242, 0.04449, 5, 5], "succs": [[37], [0, 64], [23], [24, 2], [21], [9, 4], [19, 46], [8, 6], [6], [21], [9, 5], [28, 20], [49, 11], [27, 22], [3, 13], [14], [15], [15], [15], [10, 29], [33], [48, 30], [27], [25, 26], [23], [], [], [38, 47], [33], [10], [41, 39], [40, 56], [58, 31], [49], [42, 45], [1, 14], [17, 44], [18, 36], [47], [50], [56, 52], [50], [55], [16, 17], [17, 43], [55], [10, 63], [3, 54], [35, 14], [48], [59, 53], [49], [56, 51], [57, 62], [3], [60, 7], [49], [61, 62], [49], [49, 12], [7], [32], [32], [10], [37]], "fname": "parse_with_separator", "n_num": 65}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 9, 1, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+spec], rdi", "mov     [rbp+uid], rsi", "mov     [rbp+gid], rdx", "mov     [rbp+username], rcx", "mov     [rbp+groupname], r8", "cmp     [rbp+gid], 0", "jz      short loc_6358"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 1, 12, 1, 2, 0, 1, 0.09722222222222221, ["mov     r8, [rbp+groupname]", "mov     rdi, [rbp+username]", "mov     rcx, [rbp+gid]; gid", "mov     rdx, [rbp+uid]; uid", "mov     rsi, [rbp+dot]; separator", "mov     rax, [rbp+spec]", "mov     r9, r8; groupname", "mov     r8, rdi; username", "mov     rdi, rax; spec", "call    parse_with_separator", "test    rax, rax", "jnz     short loc_63EF"], ["mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jnz~FOO"]], [2, 0, 3, 0, 1, 7, 0, 2, 0, 1, 0.16666666666666666, ["mov     rax, [rbp+spec]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, rax; s", "call    _strchr", "mov     [rbp+dot], rax", "cmp     [rbp+dot], 0", "jz      short loc_63EF"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     [rbp+error_msg], 0"], ["mov~[rbp+0],0"]], [1, 0, 6, 0, 1, 14, 0, 2, 0, 1, 0.25, ["mov     [rbp+colon], rax", "mov     r8, [rbp+groupname]", "mov     rdi, [rbp+username]", "mov     rcx, [rbp+gid]; gid", "mov     rdx, [rbp+uid]; uid", "mov     rsi, [rbp+colon]; separator", "mov     rax, [rbp+spec]", "mov     r9, r8; groupname", "mov     r8, rdi; username", "mov     rdi, rax; spec", "call    parse_with_separator", "mov     [rbp+error_msg], rax", "cmp     [rbp+gid], 0", "jz      short loc_63EF"], ["mov~[rbp+0],rax", "mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 7, 0, 1, 5, 0, 2, 0, 2, 0.048611111111111105, ["mov     rax, [rbp+spec]", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; s", "call    _strchr", "jmp     short loc_635D"], ["mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 0, 2, 0.048611111111111105, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+error_msg]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 1, 0.2222222222222222, ["cmp     [rbp+colon], 0", "jnz     short loc_63EF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.20833333333333331, ["cmp     [rbp+error_msg], 0", "jz      short loc_63EF"], ["cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [4, 1, 11, 0, 10, 15, 2, 57, 0.10417, 0, 1], "succs": [[5, 6], [3, 7], [1, 7], [7], [8, 7], [4], [4], [], [9, 7], [2, 7]], "fname": "parse_user_spec", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[5, 2, 1, 6, 2, 33, 0, 3, 0, 0, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 6", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, r15", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,r15", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 11, 1, 0, 8, 0, 1, 3, 2, 0.16666666666666666, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E64C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E64C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.0004166666666666667, ["nop; jumptable 00000000000064E6 case 0"], ["nop"]], [6, 3, 1, 8, 2, 43, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 8", "add     rax, 38h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    [rbp+var_68]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_70]", "mov     r8, [rbp+var_78]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 1, 16, 1, 0, 16, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 58h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], r9", "cmp     [rbp+command_name], 0", "jz      short loc_644E"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "cmp~[rbp+0],0", "jz~FOO"]], [5, 2, 1, 6, 2, 29, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 5", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r13", "mov     r9, r15", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r13", "mov~r9,r15", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [3, 0, 13, 0, 4, 18, 0, 5, 2, 2, 0.1625, ["lea     rdi, aC; \"(C)\"", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     ecx, 7E3h", "lea     rsi, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "lea     rdi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     rsi, rax; stream", "mov     rdi, rdx; s", "call    _fputs_unlocked", "cmp     [rbp+n_authors], 9; switch 10 cases", "ja      loc_68CD; jumptable 00000000000064E6 default case"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "cmp~[rbp+0],0", "ja~FOO"]], [9, 2, 1, 10, 2, 49, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 9", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdx, [rax]", "mov     [rbp+var_80], rdx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdx,<TAG>", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 14, 0, 1, 7, 0, 1, 1, 3, 0.029166666666666667, ["mov     rcx, [rbp+version]", "mov     rdx, [rbp+package]", "mov     rax, [rbp+stream]", "lea     rsi, aSS_1; \"%s %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [1, 0, 14, 0, 1, 10, 0, 2, 1, 3, 0.029166666666666667, ["mov     rsi, [rbp+version]", "mov     rcx, [rbp+package]", "mov     rdx, [rbp+command_name]", "mov     rax, [rbp+stream]", "mov     r8, rsi", "lea     rsi, aSSS; \"%s (%s) %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     short loc_646E"], ["mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [6, 3, 1, 8, 2, 39, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 7", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_70], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, [rbp+var_70]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [3, 0, 1, 2, 2, 19, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 3", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 4, 0, 0.0, ["nop", "lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["nop", "lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 1, 0, 2, 12, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 1", "mov     rbx, [rax]", "lea     rdi, aWrittenByS; \"Written by %s.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+stream]", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 1, 2, 15, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 2", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [3, 1, 1, 3, 2, 23, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 case 4", "add     rax, 18h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r9, r14", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6981"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r9,r14", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [9, 2, 1, 10, 2, 49, 0, 3, 3, 1, 0.016666666666666666, ["mov     rax, [rbp+authors]; jumptable 00000000000064E6 default case", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdi, [rax]", "mov     [rbp+var_80], rdi", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     short loc_6981"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,<TAG>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]]], "func_feature": [26, 0, 40, 4, 17, 27, 2, 380, 0.02402, 16, 56], "succs": [[12], [0, 2, 3, 5, 7, 10, 11, 13, 14, 15], [12], [12], [8, 9], [12], [16, 1], [12], [6], [6], [12], [12], [], [12], [12], [12], [12]], "fname": "version_etc_arn", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 1, 0, 7, 1, 1, 0, 0, 0.5, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+authors]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_69B7"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 3, 1, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], 0", "jmp     short loc_69BC"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 1, 0, 1, 0, 0, 2, 2, 0.0, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 1, 13, 0, 1, 2, 0, 0.0, ["mov     r8, [rbp+n_authors]", "mov     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "leave", "retn"], ["mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 31, 0.125, 0, 3], "succs": [[2, 3], [0], [0], []], "fname": "version_etc_ar", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 9, 1, 0, 1, 0, 0, 0, 0, 0.15277777777777776, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]], [0, 0, 9, 0, 0, 7, 1, 1, 4, 2, 0.29166666666666663, ["mov     rdx, [rax]", "mov     rax, [rbp+n_authors]", "mov     [rbp+rax*8+authtab], rdx", "mov     rax, [rbp+n_authors]", "mov     rax, [rbp+rax*8+authtab]", "test    rax, rax", "jnz     short loc_6A41"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 9, 0, 0, 5, 0, 0, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rax, [rax+8]", "lea     rcx, [rax+8]", "mov     rdx, [rbp+authors]", "mov     [rdx+8], rcx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rcx,[rax+0]", "mov~rdx,[rbp+0]", "mov~[rdx+0],rcx"]], [1, 0, 9, 0, 0, 4, 0, 1, 2, 4, 0.20833333333333331, ["mov     rax, [rbp+authors]", "mov     eax, [rax]", "cmp     eax, 2Fh ; '/'", "ja      short loc_6A8B"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 9, 1, 0, 12, 0, 1, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+authors]", "mov     eax, [rax]", "mov     eax, eax", "add     rax, rdx", "mov     rdx, [rbp+authors]", "mov     edx, [rdx]", "lea     ecx, [rdx+8]", "mov     rdx, [rbp+authors]", "mov     [rdx], ecx", "jmp     short loc_6AA5"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~eax,eax", "add~rax,rdx", "mov~rdx,[rbp+0]", "mov~edx,<TAG>", "lea~ecx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,ecx", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, 2, 0.3055555555555555, ["cmp     [rbp+n_authors], 9", "ja      short loc_6ABF"], ["cmp~[rbp+0],0", "ja~FOO"]], [2, 0, 9, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+n_authors], 0", "jmp     short loc_6A46"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 2, 0, 1, 14, 1, 2, 2, 1, 0.19444444444444442, ["mov     r8, [rbp+n_authors]", "lea     rdi, [rbp+authtab]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_6B00"], ["mov~r8,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 3, 8, 1, 10, 12, 1, 61, 0.13056, 1, 3], "succs": [[5], [0, 7], [1], [2, 4], [1], [3, 7], [5], [8, 9], [], []], "fname": "version_etc_va", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 1, 2, 0, 1, 21, 2, 2, 1, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+authors.gp_offset], 20h ; ' '", "mov     [rbp+authors.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+authors.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+authors.reg_save_area], rax", "lea     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_va", "nop", "mov     rax, [rbp+var_B8]", "xor     rax, fs:28h", "jz      short locret_6BE0"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],<STR>", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 1, 4, 1, 0, 11, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_6B5B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 0, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 43, 0.06667, 1, 1], "succs": [[], [0, 4], [1, 3], [1], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[4, 0, 0, 2, 6, 28, 0, 6, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "lea     rdi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "call    _gettext", "lea     rsi, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "lea     rdi, aSHomePageS; \"%s home page: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg_0; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, aGnuCoreutils_0; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 28, 0.0, 7, 2], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 4, 0, 0, 2, 1, 0, 1, 2, 0.26666666666666666, ["test    rax, rax", "jns     short loc_6C86"], ["test~rax,rax", "jns~FOO"]], [0, 0, 0, 1, 1, 6, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 0, 2, 0, 0, 4, 2, 1, 2, 1, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_6C95"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 6, 2, 0, 9, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_6C7C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]]], "func_feature": [2, 3, 3, 0, 7, 8, 0, 24, 0.07619, 0, 3], "succs": [[3], [0, 3], [], [2, 4], [], [1, 6], [1]], "fname": "xnmalloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 0, 0, 4, 2, 1, 0, 0, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_6CE9"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 1, 2, 0.26666666666666666, ["test    rax, rax", "jns     short loc_6CDA"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 9, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 1, 6, 2, 0, 10, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "mov     [rbp+s], rdx", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_6CD0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]]], "func_feature": [2, 3, 3, 0, 7, 8, 0, 28, 0.07619, 0, 3], "succs": [[3, 4], [0, 2], [0], [], [], [1, 6], [1]], "fname": "xnrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 6, 1, 0, 4, 0, 0, 0, 0, 0.12878787878787878, ["mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_6D68"], ["mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 4, 0.05303030303030303, ["cmp     [rbp+n], 0", "jnz     short loc_6D54"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 7, 2, 0, 8, 0, 0, 2, 4, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     [rbp+s]", "mov     [rbp+n], rax", "cmp     [rbp+n], 0", "setz    al", "movzx   eax, al", "add     [rbp+n], rax"], ["mov~eax,<STR>", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "add~[rbp+0],rax"]], [1, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 12, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     [rbp+s], rdx", "mov     rax, [rbp+pn]", "mov     rax, [rax]", "mov     [rbp+n], rax", "cmp     [rbp+p], 0", "jnz     short loc_6D81"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 3, 2, 0.14393939393939395, ["test    rax, rax", "jns     short loc_6D72"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 1, 2, 0, 7, 0, 0, 2, 1, 0.015151515151515152, ["mov     rax, [rbp+n]", "shr     rax, 1", "mov     rdx, rax", "mov     rax, [rbp+n]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+n], rax"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 2, 0.022727272727272728, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     [rbp+s]", "cmp     [rbp+n], rax", "jb      short loc_6D9F"], ["mov~rax,0", "mov~edx,0", "div~,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 2, 0, 0, 4, 2, 1, 4, 1, 0.09848484848484848, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_6DB8"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 12, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+pn]", "mov     rdx, [rbp+n]", "mov     [rax], rdx", "mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [3, 3, 6, 0, 13, 16, 1, 59, 0.03555, 0, 8], "succs": [[3, 5], [0, 2], [0], [5], [8, 1], [9, 6], [9], [12], [11, 7], [10, 12], [], [], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 9, 0.0, 0, 1], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.16666666666666666, ["cmp     [rbp+n], 0", "jz      short loc_6E29"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 3, 1, 1, 10, 0, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; size", "call    _malloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_6E29"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 4, 0, 4, 4, 5, 16, 0.04167, 0, 1], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.07142857142857142, ["cmp     [rbp+n], 0", "jz      short loc_6E8A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 1, 8, 0, 2, 1, 2, 0.15476190476190477, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+p]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_6E8A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 7, 1, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "cmp     [rbp+n], 0", "jnz     short loc_6E60"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05952380952380952, ["mov     rax, [rbp+p]"], ["mov~rax,[rbp+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.03571428571428571, ["cmp     [rbp+p], 0", "jz      short loc_6E60"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 1, 5, 0, 2, 2, 1, 0.03571428571428571, ["mov     rax, [rbp+p]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0", "jmp     short locret_6E8E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 0, 8, 0, 8, 10, 3, 28, 0.04464, 0, 1], "succs": [[3, 4], [0, 4], [1, 5], [], [6], [1, 7], [], [6]], "fname": "xrealloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     rcx, [rbp+pn]", "mov     rax, [rbp+p]", "mov     edx, 1; s", "mov     rsi, rcx; pn", "mov     rdi, rax; p", "call    x2nrealloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "x2realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 1, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], rdi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rax, [rbp+s]", "mov     rdx, rax; n", "mov     esi, 0; c", "mov     rdi, rcx; s", "call    _memset", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.2857142857142857, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jnz     short loc_6F41"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 1, 3, 0.23809523809523808, ["test    rax, rax", "jns     short loc_6F19"], ["test~rax,rax", "jns~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 0, 1, 8, 0, 2, 3, 1, 0.11904761904761904, ["mov     rdx, [rbp+s]", "mov     rax, [rbp+n]", "mov     rsi, rdx; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_6F46"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 7, 2, 0, 9, 0, 0, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_6F0F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 1, 4, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 3, 4, 0, 8, 10, 0, 29, 0.08036, 0, 2], "succs": [[3, 4], [0, 2], [0], [], [3, 7], [1, 6], [1], []], "fname": "xcalloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 2, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+s], rsi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rdx, [rbp+s]; n", "mov     rax, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    _memcpy", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 16, 0.0, 0, 1], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 2, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+string], rdi", "mov     rax, [rbp+string]", "mov     rdi, rax; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     rax, [rbp+string]", "mov     rsi, rdx; s", "mov     rdi, rax; p", "call    xmemdup", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 8, 14, 0.0, 0, 1], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 0, 3, 13, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, aMemoryExhauste; \"memory exhausted\"", "call    _gettext", "mov     rdx, rax", "mov     eax, cs:exit_failure", "mov     rcx, rdx", "lea     rdx, off_E780; format", "mov     esi, 0; errnum", "mov     edi, eax; status", "mov     eax, 0", "call    _error", "call    _abort"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~eax,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 9, 13, 0.0, 3, 0], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 0, 1, 4, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jnz     short loc_7049"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [3, 0, 4, 1, 1, 17, 1, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+argv], rdi", "mov     [rbp+options], esi", "mov     [rbp+compar], rdx", "mov     eax, [rbp+options]", "or      ah, 2", "mov     ecx, eax", "mov     rdx, [rbp+compar]", "mov     rax, [rbp+argv]", "mov     esi, ecx", "mov     rdi, rax", "call    rpl_fts_open", "mov     [rbp+fts], rax", "cmp     [rbp+fts], 0", "jnz     short loc_704E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~eax,[rbp+0]", "or~ah,0", "mov~ecx,eax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3260; \"xfts_open\"", "mov     edx, 29h ; ')'; line", "lea     rsi, file; \"lib/xfts.c\"", "lea     rdi, assertion; \"errno != EINVAL\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+fts]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [4, 1, 6, 0, 5, 4, 1, 30, 0.03333, 3, 1], "succs": [[2, 4], [0, 3], [], [], []], "fname": "xfts_open", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.047619047619047616, ["mov     rax, [rbp+ent]", "mov     rax, [rax+58h]", "test    rax, rax", "jz      short loc_70AC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 2, 1, 2, 2, 0.09523809523809523, ["mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_70AC"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 0, 5, 2, 1, 1, 2, 0.15476190476190477, ["mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_70AC"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 9, 2, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_707C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 0, 5, 2, 1, 1, 2, 0.03571428571428571, ["mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_70A5"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.07142857142857142, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.047619047619047616, ["mov     eax, 1", "jmp     short loc_70B1"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 3, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 10, 6, 0, 8, 12, 1, 34, 0.05655, 0, 0], "succs": [[5, 6], [0, 5], [1, 5], [2, 4], [2, 6], [7], [7], []], "fname": "cycle_warning_required", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 3, 1, 1, 0, 0, 0.30000000000000004, ["mov     rax, rcx", "test    rax, rax", "jz      short loc_70F7"], ["mov~rax,rcx", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 1, 0, 11, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+scale_factor], esi", "mov     rax, [rbp+x]", "mov     rax, [rax]", "mov     edx, [rbp+scale_factor]", "movsxd  rdx, edx", "mov     ecx, 0", "mul     rdx", "jno     short loc_70DD"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~edx,[rbp+0]", "movsxd~rdx,edx", "mov~ecx,0", "mul~,rdx", "jno~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 1, 1, 0, 8, 0, 0, 2, 1, 0.07500000000000001, ["mov     rax, [rbp+x]", "mov     rdx, [rax]", "mov     eax, [rbp+scale_factor]", "cdqe", "imul    rdx, rax", "mov     rax, [rbp+x]", "mov     [rax], rdx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~eax,[rbp+0]", "cdqe~", "imul~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [2, 0, 1, 0, 0, 4, 0, 1, 2, 1, 0.07500000000000001, ["mov     rax, [rbp+x]", "mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_7113"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 1, 2, 0, 6, 7, 4, 29, 0.075, 0, 2], "succs": [[3, 5], [0, 2], [0], [4], [], [4]], "fname": "bkm_scale", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 1, 0, 0, 0.0, ["mov     edx, [rbp+base]", "mov     rax, [rbp+x]", "mov     esi, edx; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "or      [rbp+err], eax"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "or~[rbp+0],eax"]], [0, 0, 3, 0, 0, 5, 1, 1, 1, 1, 0.5, ["mov     eax, [rbp+power]", "lea     edx, [rax-1]", "mov     [rbp+power], edx", "test    eax, eax", "jnz     short loc_7130"], ["mov~eax,[rbp+0]", "lea~edx,[rax-1]+0]", "mov~[rbp+0],edx", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, [rbp+err]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 1, 3, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     [rbp+base], esi", "mov     [rbp+power], edx", "mov     [rbp+err], 0", "jmp     short loc_7144"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],edx", "mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [1, 2, 3, 0, 4, 4, 8, 22, 0.125, 0, 1], "succs": [[1], [0, 2], [], [1]], "fname": "bkm_scale_by_power", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 39, 0, 1, 10, 1, 2, 0, 0, 0.02506265664160401, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rax, [rbp+valid_suffixes]", "mov     esi, edx; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_728C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 40, 0, 0, 5, 1, 1, 9, 3, 0.017543859649122806, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_728C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 19, 1, 0, 8, 0, 1, 14, 3, 0.1444235588972431, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E8B0", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E8B0", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 20, 1, 0, 7, 0, 1, 13, 3, 0.1694862155388471, ["mov     rax, [rbp+p]; jumptable 0000000000007368 default case", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 42h ; 'B'; switch 54 cases", "cmp     eax, 35h ; '5'", "ja      loc_753C; jumptable 0000000000007402 default case"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 15, 4, 0.0020885547201336674, ["lea     rax, [rbp+tmp]; jumptable 0000000000007402 case 119", "mov     esi, 2; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "mov     [rbp+overflow], eax", "jmp     short loc_754F"], ["lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 11, 2, 0.014097744360902255, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]"]], [0, 0, 34, 0, 0, 5, 1, 1, 10, 3, 0.17481203007518797, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_757D"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 5, 1, 0, 14, 2, 1, 16, 3, 0.03352130325814536, ["mov     eax, [rbp+overflow]", "or      [rbp+err], eax", "mov     rax, [rbp+p]", "mov     rdx, [rax]", "mov     eax, [rbp+suffixes]", "cdqe", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_757D"], ["mov~eax,[rbp+0]", "or~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~eax,[rbp+0]", "cdqe~", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 1, 0, 17, 3, 0.0, ["or      [rbp+err], 2"], ["or~[rbp+0],0"]], [1, 0, 37, 0, 0, 2, 0, 1, 11, 4, 0.03195488721804511, ["mov     [rbp+tmp], 1", "jmp     short loc_72BE"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 57, 1, 0, 14, 1, 1, 0, 9, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+s], rdi", "mov     [rbp+ptr], rsi", "mov     [rbp+strtol_base], edx", "mov     [rbp+val], rcx", "mov     [rbp+valid_suffixes], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+err], 0", "cmp     [rbp+strtol_base], 0", "js      short loc_7193"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 10, 4, 0.010651629072681704, ["mov     [rbp+err], 1"], ["mov~[rbp+0],0"]], [1, 0, 39, 0, 1, 4, 0, 2, 9, 3, 0.0073621553884711775, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 22h ; '\"'", "jz      short loc_72B7"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0037593984962406013, ["mov     eax, 4", "jmp     loc_758B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 8, 3, 0.013471177944862155, ["cmp     [rbp+valid_suffixes], 0", "jz      short loc_728C"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 51, 2, 1, 10, 2, 2, 5, 4, 0.10933583959899748, ["call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+ch_0]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 2000h", "test    eax, eax", "jnz     short loc_71E6"], ["call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 51, 0, 1, 9, 0, 2, 4, 5, 0.07988721804511278, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+s]", "mov     [rbp+q], rax", "mov     rax, [rbp+q]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "jmp     short loc_71F5"], ["mov~[rbp+0],rax", "call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 51, 1, 0, 4, 0, 0, 6, 5, 0.0, ["add     [rbp+q], 1", "mov     rax, [rbp+q]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al"]], [1, 1, 33, 0, 1, 12, 1, 2, 11, 3, 0.17261904761904762, ["mov     [rbp+base], 400h", "mov     [rbp+suffixes], 1", "mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rax, [rbp+valid_suffixes]", "mov     esi, edx; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jnz     short loc_732E"], ["mov~[rbp+0],<STR>", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 cases 75,107", "lea     rax, [rbp+tmp]", "mov     edx, 1; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 1, 6, 0, 1, 6, 0, 2, 15, 4, 0.0020885547201336674, ["lea     rax, [rbp+tmp]; jumptable 0000000000007402 case 98", "mov     esi, 200h; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "mov     [rbp+overflow], eax", "jmp     loc_754F"], ["lea~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 16, 6, 0.03759398496240601, ["cmp     eax, 69h ; 'i'", "jz      short loc_73A2"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 28, 1, 0, 7, 0, 1, 15, 5, 0.05043859649122807, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 44h ; 'D'", "jz      short loc_73BA"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "add~rax,0", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 6, 3, 0.12030075187969924, ["cmp     [rbp+ch_0], 2Dh ; '-'", "jnz     short loc_7226"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 8, 1, 0.03383458646616541, ["mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_759F"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 17, 5, 0.012531328320802004, ["cmp     eax, 42h ; 'B'", "jz      short loc_73BA"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 40, 0, 1, 4, 1, 2, 8, 4, 0.11591478696741854, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_72BE"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 46, 0, 1, 11, 0, 2, 7, 4, 0.1212406015037594, ["mov     edx, [rbp+strtol_base]; base", "mov     rcx, [rbp+p]", "mov     rax, [rbp+s]", "mov     rsi, rcx; endptr", "mov     rdi, rax; nptr", "call    _strtoul", "mov     [rbp+tmp], rax", "mov     rax, [rbp+p]", "mov     rax, [rax]", "cmp     [rbp+s], rax", "jnz     short loc_7296"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 1, 18, 4, 0.005482456140350877, ["jmp     short loc_73C8; jumptable 0000000000007368 default case"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.008458646616541353, ["mov     eax, 4", "jmp     loc_758B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 case 69", "lea     rax, [rbp+tmp]", "mov     edx, 6; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.0014097744360902255, ["mov     eax, 4", "jmp     loc_758B"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 10, 2, 0.003289473684210526, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "jmp     loc_758B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 1, 1, 12, 2, 0.0009398496240601503, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "or      eax, 2", "jmp     loc_758B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "or~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 1, 1, 14, 2, 0.012218045112781954, ["mov     rdx, [rbp+tmp]; jumptable 0000000000007402 default case", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "or      eax, 2", "jmp     short loc_758B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "or~eax,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3655; \"xstrtoul\"", "mov     edx, 54h ; 'T'; line", "lea     rsi, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     rdi, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 1, 8, 0.017230576441102756, ["cmp     [rbp+strtol_base], 24h ; '$'", "jle     short loc_71B2"], ["cmp~[rbp+0],0", "jle~FOO"]], [0, 1, 6, 0, 1, 6, 0, 2, 15, 4, 0.0020885547201336674, ["lea     rax, [rbp+tmp]; jumptable 0000000000007402 case 66", "mov     esi, 400h; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "mov     [rbp+overflow], eax", "jmp     loc_754F"], ["lea~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 cases 77,109", "lea     rax, [rbp+tmp]", "mov     edx, 2; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 2, 7, 0.03383458646616541, ["cmp     [rbp+ptr], 0", "jnz     short loc_71BF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 22, 1, 0, 2, 0, 1, 18, 5, 0.0, ["add     [rbp+suffixes], 2", "jmp     short loc_73C7"], ["add~[rbp+0],0", "jmp~FOO"]], [2, 0, 23, 1, 0, 6, 0, 1, 17, 5, 0.017857142857142856, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "add     rax, 2", "movzx   eax, byte ptr [rax]", "cmp     al, 42h ; 'B'", "jnz     short loc_73C7"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 case 90", "lea     rax, [rbp+tmp]", "mov     edx, 7; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 case 89", "lea     rax, [rbp+tmp]", "mov     edx, 8; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 52, 0, 0, 2, 0, 1, 3, 6, 0.02443609022556391, ["lea     rax, [rbp+t_ptr]", "jmp     short loc_71C3"], ["lea~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 52, 0, 0, 1, 0, 0, 3, 6, 0.02443609022556391, ["mov     rax, [rbp+ptr]"], ["mov~rax,[rbp+0]"]], [2, 0, 31, 1, 0, 7, 0, 1, 12, 4, 0.1694862155388471, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 45h ; 'E'; switch 48 cases", "cmp     eax, 2Fh ; '/'", "ja      loc_73C8; jumptable 0000000000007368 default case"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 9, 3, 0.17810150375939848, ["cmp     [rbp+valid_suffixes], 0", "jnz     short loc_72D8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 21, 1, 0, 3, 0, 1, 16, 4, 0.01206140350877193, ["mov     [rbp+base], 3E8h", "add     [rbp+suffixes], 1", "jmp     short loc_73C8; jumptable 0000000000007368 default case"], ["mov~[rbp+0],<STR>", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 18, 4, 0.015350877192982455, ["nop"], ["nop"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 cases 71,103", "lea     rax, [rbp+tmp]", "mov     edx, 3; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 30, 1, 0, 8, 0, 1, 13, 4, 0.05921052631578947, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E7F0", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E7F0", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 29, 0, 1, 6, 1, 2, 14, 4, 0.05513784461152882, ["mov     rax, [rbp+valid_suffixes]; jumptable 0000000000007368 cases 69,71,75,77,80,84,89,90,103,107,109,116", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_73C8; jumptable 0000000000007368 default case"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 9, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 cases 84,116", "lea     rax, [rbp+tmp]", "mov     edx, 4; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.0020885547201336674, ["mov     [rbp+overflow], 0; jumptable 0000000000007402 case 99", "jmp     loc_754F"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.0020885547201336674, ["mov     ecx, [rbp+base]; jumptable 0000000000007402 case 80", "lea     rax, [rbp+tmp]", "mov     edx, 5; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_754F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]]], "func_feature": [21, 15, 70, 1, 58, 91, 2, 301, 0.03731, 6, 13], "succs": [[9, 13], [0, 13], [51, 35, 4, 38, 39, 43, 44, 19, 20, 55, 56, 57, 31], [2, 35], [7], [25], [18, 5], [8, 5], [5], [48], [36, 37], [48], [32, 11], [25], [1, 13], [17, 23], [15], [15], [34, 47], [7], [7], [26, 42], [49, 21], [28, 30], [], [24, 54], [49, 29], [48, 12], [27, 14], [3], [25], [7], [25], [25], [25], [25], [], [40, 36], [7], [7], [45, 46], [50], [41, 50], [7], [7], [16], [16], [3, 52], [33, 6], [3], [3], [7], [3, 53], [3, 22], [], [7], [7], [7]], "fname": "xstrtoul", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 4, 0, 0, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+y]", "mov     [rbp+ay], rax", "mov     rax, [rbp+ax_0]", "mov     rdx, [rax+8]", "mov     rax, [rbp+ay]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_75EC"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.041666666666666664, ["mov     eax, 1", "jmp     short loc_75F1"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 2, 0.08333333333333333, ["mov     rax, [rbp+ax_0]", "mov     rdx, [rax]", "mov     rax, [rbp+ay]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_75EC"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 26, 0.05, 0, 0], "succs": [[2, 3], [4], [1, 3], [4], []], "fname": "AD_compare", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 0, 13, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+ax_0]", "mov     rax, [rax+8]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.019841269841269837, ["mov     eax, 0", "jmp     short locret_76C0"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 14, 1, 2, 1, 2, 0.06349206349206349, ["mov     rax, cs:data_freer", "mov     r8, rax; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "mov     rdx, rax", "mov     rax, [rbp+fts]", "mov     [rax+58h], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_76BB"], ["mov~rax,<TAG>", "mov~r8,rax", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.031746031746031744, ["mov     eax, 0", "jmp     short locret_76C0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.04365079365079365, ["mov     eax, 1"], ["mov~eax,0"]], [0, 1, 4, 0, 1, 9, 1, 2, 1, 2, 0.055555555555555546, ["mov     edi, 20h ; ' '; size", "call    _malloc", "mov     rdx, rax", "mov     rax, [rbp+fts]", "mov     [rax+58h], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_76AB"], ["mov~edi,<STR>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 7, 1, 0, 9, 2, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fts], rdi", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      short loc_7682"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 2, 2, 0.023809523809523808, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdi, rax; state", "call    cycle_check_init"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [3, 4, 8, 0, 8, 10, 2, 43, 0.02976, 3, 1], "succs": [[2], [0, 4], [], [2], [2], [3, 7], [1, 5], [4]], "fname": "setup_dir", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 10, 1, 0, 10, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      loc_7795"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 5, 0, 0, 0, 2, 0.0, ["mov     rax, [rbp+ent]", "mov     rdx, [rbp+ent]", "mov     [rax], rdx", "mov     rax, [rbp+ent]", "mov     word ptr [rax+70h], 2"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0"]], [0, 0, 3, 0, 1, 9, 1, 2, 0, 2, 0.02777777777777778, ["mov     rax, [rbp+ent]", "lea     rdx, [rax+78h]", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rsi, rdx; sb", "mov     rdi, rax; state", "call    cycle_check", "test    al, al", "jz      short loc_77C9"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [2, 1, 7, 1, 1, 8, 0, 2, 0, 2, 0.061111111111111116, ["mov     rax, [rbp+ent]", "add     rax, 78h", "mov     [rbp+st], rax", "mov     edi, 18h; size", "call    _malloc", "mov     [rbp+ad], rax", "cmp     [rbp+ad], 0", "jnz     short loc_7711"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~edi,<STR>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.05, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 1, 21, 0, 2, 0, 2, 0.07777777777777778, ["mov     rax, [rbp+st]", "mov     rdx, [rax]", "mov     rax, [rbp+ad]", "mov     [rax], rdx", "mov     rax, [rbp+st]", "mov     rdx, [rax+8]", "mov     rax, [rbp+ad]", "mov     [rax+8], rdx", "mov     rax, [rbp+ad]", "mov     rdx, [rbp+ent]", "mov     [rax+10h], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rbp+ad]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_insert", "mov     [rbp+ad_from_table], rax", "mov     rax, [rbp+ad_from_table]", "cmp     rax, [rbp+ad]", "jz      short loc_77C9"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [1, 0, 2, 0, 0, 7, 0, 1, 0, 2, 0.011111111111111112, ["mov     rax, [rbp+ad_from_table]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+ent]", "mov     [rax], rdx", "mov     rax, [rbp+ent]", "mov     word ptr [rax+70h], 2", "jmp     short loc_77C9"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.016666666666666666, ["mov     eax, 0", "jmp     locret_77CE"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.011111111111111112, ["mov     eax, 0", "jmp     short locret_77CE"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 0, 2, 0.06666666666666667, ["mov     rax, [rbp+ad]", "mov     rdi, rax; ptr", "call    free", "cmp     [rbp+ad_from_table], 0", "jnz     short loc_777A"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [4, 3, 12, 0, 11, 15, 2, 72, 0.02929, 0, 2], "succs": [[2, 3], [4], [1, 4], [5, 7], [8], [10, 4], [4], [8], [], [8], [9, 6]], "fname": "enter_dir", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 0, 0.11538461538461538, ["nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_78FF"], ["nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 5, 0, 1, 15, 0, 2, 1, 0, 0.01282051282051282, ["mov     rax, [rbp+st]", "mov     rax, [rax]", "mov     [rbp+obj.dev], rax", "mov     rax, [rbp+st]", "mov     rax, [rax+8]", "mov     [rbp+obj.ino], rax", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "lea     rdx, [rbp+obj]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_delete", "mov     [rbp+found], rax", "cmp     [rbp+found], 0", "jnz     short loc_7849"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 13, 2, 0, 16, 3, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+ent]", "add     rax, 78h", "mov     [rbp+st], rax", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      short loc_785A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 7, 0, 0, 5, 1, 1, 3, 0, 0.07692307692307693, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_7890"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 5, 0, 0, 7, 0, 1, 4, 0, 0.07051282051282051, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rax]", "mov     rax, [rbp+st]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_78EA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 10, 0, 0, 6, 0, 0.0, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rbp+parent]", "mov     rdx, [rdx+78h]", "mov     [rax+8], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rbp+parent]", "mov     rdx, [rdx+80h]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~<TAG>,rdx"]], [0, 0, 4, 0, 0, 7, 0, 1, 5, 0, 0.03205128205128205, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rax+8]", "mov     rax, [rbp+st]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_78EA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 9, 0, 0, 5, 0, 1, 1, 0, 0.05769230769230769, ["mov     rax, [rbp+ent]", "mov     rax, [rax+8]", "mov     [rbp+parent], rax", "cmp     [rbp+parent], 0", "jz      short loc_78EA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 2, 0, 0.019230769230769232, ["mov     rax, [rbp+found]", "mov     rdi, rax; ptr", "call    free", "jmp     loc_78EA"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 2, 0, 0.0641025641025641, ["mov     rax, [rbp+parent]", "mov     rax, [rax+58h]", "test    rax, rax", "js      short loc_78EA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 6, 14, 1, 14, 18, 4, 82, 0.03205, 1, 2], "succs": [[], [0, 13], [11, 6], [2, 10], [], [4, 7], [], [1, 9], [1], [8, 1], [1, 12], [1], [1, 5], []], "fname": "leave_dir", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.125, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+58h]", "test    rax, rax", "jz      short loc_794C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 4, 1, 0, 9, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+sp_0], rdi", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      short loc_793C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 2, 1, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+58h]", "mov     rdi, rax; table", "call    hash_free", "jmp     short loc_794C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 1, 0, 1, 4, 0, 1, 1, 1, 0.041666666666666664, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+58h]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 2, 25, 0.03333, 0, 1], "succs": [[2, 3], [0, 4], [3], [], [3]], "fname": "free_dir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 4, 0, 1, 6, 0, 2, 0, 0, 0.16666666666666666, ["mov     rax, [rbp+fd_ring]", "mov     rdi, rax; ir", "call    i_ring_pop", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "js      short loc_797C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 4, 0, 1, 6, 2, 2, 1, 1, 0.5, ["mov     rax, [rbp+fd_ring]", "mov     rdi, rax; ir", "call    i_ring_empty", "xor     eax, 1", "test    al, al", "jnz     short loc_795D"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 1, 4, 1, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd_ring], rdi", "jmp     short loc_797C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 3, 2, 0.0, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [3, 2, 6, 0, 5, 6, 2, 23, 0.13333, 0, 1], "succs": [[1, 4], [0, 2], [], [1], [1]], "fname": "fd_ring_clear", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05, ["mov     edx, 2", "jmp     short loc_79C8"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.15000000000000002, ["cmp     [rbp+required], 0", "jz      short loc_79C3"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05, ["mov     edx, 1"], ["mov~edx,0"]], [2, 0, 5, 1, 0, 10, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     eax, esi", "mov     [rbp+required], al", "mov     rax, [rbp+p]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 0Bh", "jz      short loc_79B6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+p]", "mov     [rax+0A8h], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~[rax+0],rdx", "nop", "leave", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 2, 21, 0.04167, 0, 1], "succs": [[5], [0, 2], [5], [1, 4], [], []], "fname": "fts_set_stat_required", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.013888888888888888, ["cmp     [rbp+old], 0FFFFFF9Ch", "jz      short loc_7A07"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 9, 1, 0, 13, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+fd], esi", "mov     eax, edx", "mov     [rbp+chdir_down_one], al", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     [rbp+old], eax", "mov     eax, [rbp+old]", "cmp     eax, [rbp+fd]", "jnz     short loc_7A07"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+sp_0]", "mov     edx, [rbp+fd]", "mov     [rax+2Ch], edx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "nop", "leave", "retn"]], [1, 0, 2, 0, 1, 9, 0, 2, 2, 1, 0.0625, ["mov     rax, [rbp+sp_0]", "lea     rdx, [rax+60h]", "mov     eax, [rbp+old]", "mov     esi, eax; val", "mov     rdi, rdx; ir", "call    i_ring_push", "mov     [rbp+prev_fd_in_slot], eax", "cmp     [rbp+prev_fd_in_slot], 0", "js      short loc_7A55"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~rdi,rdx", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.0, ["mov     eax, [rbp+prev_fd_in_slot]", "mov     edi, eax; fd", "call    _close", "jmp     short loc_7A55"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 2, 1, 2, 1, 0.10416666666666666, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_7A55"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, 1, 0.05555555555555555, ["cmp     [rbp+old], 0", "js      short loc_7A55"], ["cmp~[rbp+0],0", "js~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 4, 1, 0.0, ["mov     eax, [rbp+old]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.16666666666666666, ["cmp     [rbp+chdir_down_one], 0", "jz      short loc_7A37"], ["cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [4, 2, 11, 0, 10, 14, 4, 47, 0.04028, 0, 1], "succs": [[8, 9], [0, 9], [], [2, 4], [2], [2, 6], [2, 7], [2], [], [3, 5]], "fname": "cwd_advance_fd", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.022095959595959596, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "jmp     short loc_7AAA"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "jmp~FOO"]], [0, 1, 5, 0, 0, 5, 2, 1, 2, 4, 0.05176767676767677, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_7AA5"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 3, 0.022095959595959596, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [0, 1, 11, 0, 0, 5, 2, 1, 1, 5, 0.06818181818181818, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_7ABF"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 1, 12, 1, 0, 9, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_7AEF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 1, 8, 0, 1, 2, 0, 0.0, ["mov     [rbp+fail], eax", "mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; fd_ring", "call    fd_ring_clear", "mov     eax, [rbp+fail]", "leave", "retn"], ["mov~[rbp+0],eax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.017676767676767676, ["mov     eax, 1", "jmp     short loc_7AF4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.05808080808080808, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 6, 0, 0, 5, 2, 1, 2, 4, 0.06944444444444445, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_7AD8"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, 2, 0.09217171717171717, ["mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_7AEF"], ["mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 3, 3, 0.034722222222222224, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "jmp     short loc_7ADD"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 3, 3, 0.034722222222222224, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [1, 0, 2, 0, 1, 6, 0, 2, 4, 2, 0.05176767676767677, ["mov     rcx, [rbp+sp_0]", "mov     edx, 1; chdir_down_one", "mov     esi, eax; fd", "mov     rdi, rcx; sp_0", "call    cwd_advance_fd", "jmp     short loc_7AEF"], ["mov~rcx,[rbp+0]", "mov~edx,0", "mov~esi,eax", "mov~rdi,rcx", "call~FOO", "jmp~FOO"]]], "func_feature": [3, 9, 12, 0, 13, 17, 3, 53, 0.04021, 0, 2], "succs": [[12], [0, 2], [12], [8, 1], [3, 7], [], [5], [5], [10, 11], [6, 7], [9], [9], [7]], "fname": "restore_initial_cwd", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 1, 9, 0, 2, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     edx, [rbp+open_flags]; flags", "mov     rcx, [rbp+dir]", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    openat_safer", "jmp     short loc_7B78"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [3, 2, 3, 2, 0, 16, 4, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+dir], rsi", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "shl     eax, 0Dh", "and     eax, 20000h", "or      eax, 90900h", "mov     [rbp+open_flags], eax", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_7B62"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "shl~eax,0", "and~eax,0", "or~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 1, 1, 1, 0.08333333333333333, ["mov     edx, [rbp+open_flags]", "mov     rax, [rbp+dir]", "mov     esi, edx; flags", "mov     rdi, rax; file", "mov     eax, 0", "call    open_safer"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["mov     [rbp+fd], eax", "mov     eax, [rbp+fd]", "leave", "retn"], ["mov~[rbp+0],eax", "mov~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 4, 4, 0, 4, 4, 5, 35, 0.04167, 0, 2], "succs": [[3], [0, 2], [3], []], "fname": "diropen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 52, 0, 0, 4, 2, 1, 0, 0, 0.048088972431077695, ["mov     eax, r14d", "and     eax, 12h", "test    eax, eax", "jnz     short loc_7C17"], ["mov~eax,r14d", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 55, 0, 0, 4, 2, 1, 1, 3, 0.016917293233082706, ["mov     eax, r14d", "and     eax, 4", "test    eax, eax", "jz      short loc_7BF8"], ["mov~eax,r14d", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 1, 54, 0, 0, 4, 2, 1, 2, 2, 0.0007832080200501253, ["mov     eax, r14d", "and     eax, 200h", "test    eax, eax", "jz      short loc_7BF8"], ["mov~eax,r14d", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 2, 6, 0, 3, 14, 3, 0.02412280701754386, ["mov     rdi, root", "call    fts_lfree", "mov     rax, [rbp+parent]", "mov     rdi, rax; ptr", "call    free", "jmp     short mem2"], ["mov~rdi,root", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 13, 4, 0.019580200501253132, ["nop", "jmp     short mem3"], ["nop", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 13, 4, 0.01331453634085213, ["nop", "jmp     short mem3"], ["nop", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 4, 0.0009398496240601503, ["nop"], ["nop"]], [0, 1, 39, 0, 0, 4, 2, 1, 8, 9, 0.0037593984962406013, ["mov     eax, [sp_0+48h]", "and     eax, 400h", "test    eax, eax", "jz      short loc_7D0D"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 7, 9, 0.12844611528822053, ["cmp     [rbp+compar], 0", "jz      short loc_7D06"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 10, 0, 1, 11, 2, 2, 13, 3, 0.07988721804511278, ["mov     rax, [sp_0]", "mov     [rax+10h], root", "mov     rax, [sp_0]", "mov     word ptr [rax+70h], 9", "mov     rax, [sp_0]", "mov     qword ptr [rax+58h], 1", "mov     rdi, sp_0; fts", "call    setup_dir", "xor     eax, 1", "test    al, al", "jnz     short loc_7F16"], ["mov~rax,<TAG>", "mov~[rax+0],root", "mov~rax,<TAG>", "mov~[ord ptr [rax+0],0", "mov~rax,<TAG>", "mov~[word ptr [rax+0],0", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 36, 0, 1, 5, 0, 1, 14, 10, 0.10855263157894736, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax"]], [2, 0, 36, 0, 0, 7, 0, 1, 13, 11, 0.1237468671679198, ["mov     qword ptr [p+58h], 0", "mov     rax, [rbp+parent]", "mov     [p+8], rax", "lea     rax, [p+108h]", "mov     [p+30h], rax", "cmp     [rbp+defer_stat], 0", "jz      short loc_7DF8"], ["mov~[word ptr [p+0],0", "mov~rax,[rbp+0]", "mov~[p+0],rax", "lea~rax,[p+0]", "mov~[p+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 14, 11, 0.010338345864661654, ["test    root, root", "jz      short loc_7DF8"], ["test~root,root", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 8, 8, 0.13549498746867167, ["mov     eax, 1", "jmp     short loc_7D12"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 9, 8, 0.005795739348370927, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 1, 0, 1, 6, 0, 2, 15, 1, 0.008145363408521303, ["lea     rax, [sp_0+60h]", "mov     esi, 0FFFFFFFFh; default_val", "mov     rdi, rax; ir", "call    i_ring_init", "mov     rax, sp_0", "jmp     short loc_7F4A"], ["lea~rax,[sp_0+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,sp_0", "jmp~FOO"]], [1, 0, 5, 0, 0, 4, 2, 1, 14, 2, 0.05701754385964912, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_7EFA"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 1, 4, 0, 0, 4, 2, 1, 15, 2, 0.02568922305764411, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_7EFA"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 1, 7, 1, 1, 16, 2, 0.013157894736842105, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [sp_0+28h], eax", "mov     eax, [sp_0+28h]", "test    eax, eax", "jns     short loc_7EFA"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],eax", "mov~eax,[sp_0+0]", "test~eax,eax", "jns~FOO"]], [1, 0, 2, 0, 0, 3, 1, 0, 17, 2, 0.0, ["mov     eax, [sp_0+48h]", "or      eax, 4", "mov     [sp_0+48h], eax"], ["mov~eax,[sp_0+0]", "or~eax,0", "mov~[sp_0+0],eax"]], [0, 0, 36, 0, 1, 9, 1, 2, 12, 5, 0.15397869674185463, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdx, [rbp+len]", "mov     rsi, rax", "mov     rdi, sp_0", "call    fts_alloc", "mov     p, rax; head", "test    p, p", "jz      loc_7F10"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~p,rax", "test~p,p", "jz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.00046992481203007516, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_7F4A"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 36, 1, 0, 7, 0, 1, 16, 6, 0.010338345864661654, ["mov     rax, [rbp+len]", "lea     rdx, [rax-2]", "mov     rax, [rbp+v]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_7D73"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-2]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 0, 15, 6, 0.040726817042606514, ["cmp     [rbp+len], 1", "jbe     short loc_7D95"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 12, 0, 1, 8, 1, 2, 12, 4, 0.11387844611528822, ["mov     edx, 0", "lea     rsi, unk_E994", "mov     rdi, sp_0", "call    fts_alloc", "mov     [sp_0], rax", "mov     rax, [sp_0]", "test    rax, rax", "jz      short loc_7F13"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 11, 5, 0.13549498746867167, ["cmp     [rbp+compar], 0", "jz      short loc_7E79"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 0, 12, 5, 0.011278195488721804, ["cmp     nitems, 1", "jbe     short loc_7E79"], ["cmp~nitems,0", "jbe~FOO"]], [0, 0, 13, 0, 1, 5, 0, 1, 13, 5, 0.0, ["mov     rdx, nitems", "mov     rsi, root", "mov     rdi, sp_0", "call    fts_sort", "mov     root, rax"], ["mov~rdx,nitems", "mov~rsi,root", "mov~rdi,sp_0", "call~FOO", "mov~root,rax"]], [2, 1, 48, 0, 1, 11, 2, 2, 4, 4, 0.07362155388471178, ["mov     edx, 80h; n", "mov     esi, 0; c", "mov     rdi, sp_0; s", "call    _memset", "mov     rax, [rbp+compar]", "mov     [sp_0+40h], rax", "mov     [sp_0+48h], r14d", "mov     eax, [sp_0+48h]", "and     eax, 2", "test    eax, eax", "jz      short loc_7C6D"], ["mov~edx,<STR>", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~rax,[rbp+0]", "mov~[sp_0+0],rax", "mov~[sp_0+0],r14d", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 1, 50, 0, 1, 5, 1, 2, 3, 2, 0.06140350877192982, ["mov     edi, 80h; size", "call    _malloc", "mov     sp_0, rax; p", "test    sp_0, sp_0", "jnz     short loc_7C33"], ["mov~edi,<STR>", "call~FOO", "mov~sp_0,rax", "test~sp_0,sp_0", "jnz~FOO"]], [0, 0, 36, 0, 0, 3, 0, 1, 16, 8, 0.09398496240601503, ["mov     [p+10h], root", "mov     root, p", "jmp     short loc_7E42"], ["mov~[p+0],root", "mov~root,p", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 15, 9, 0.125, ["cmp     [rbp+compar], 0", "jz      short loc_7E1F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 7, 1, 0.006265664160401002, ["mov     rdi, sp_0; ptr", "call    free", "mov     eax, 0"], ["mov~rdi,sp_0", "call~FOO", "mov~eax,0"]], [0, 0, 2, 0, 1, 4, 0, 2, 9, 2, 0.016290726817042606, ["mov     rax, [sp_0+20h]", "mov     rdi, rax; ptr", "call    free", "jmp     short mem1"], ["mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, 2, 0.003446115288220551, ["nop"], ["nop"]], [3, 0, 36, 0, 0, 5, 1, 1, 9, 7, 0.15977443609022557, ["mov     [rbp+defer_stat], al", "and     [rbp+defer_stat], 1", "mov     r13d, 0", "mov     r15d, 0", "jmp     loc_7E4B"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~r13d,0", "mov~r15d,0", "jmp~FOO"]], [4, 0, 46, 0, 2, 14, 2, 3, 5, 3, 0.09931077694235588, ["mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "mov     rax, [rbp+argv]", "mov     rdi, rax; argv", "call    fts_maxarglen", "mov     [rbp+maxarglen], rax", "mov     eax, 1000h", "cmp     [rbp+maxarglen], 1000h", "cmovnb  rax, [rbp+maxarglen]", "mov     rsi, rax; more", "mov     rdi, sp_0; sp_0", "call    fts_palloc", "xor     eax, 1", "test    al, al", "jnz     loc_7F3C"], ["mov~[word ptr [sp_0+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovnb~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [2, 0, 47, 0, 0, 6, 2, 0, 5, 4, 0.0, ["mov     eax, [sp_0+48h]", "or      eax, 4", "mov     [sp_0+48h], eax", "mov     eax, [sp_0+48h]", "and     ah, 0FDh", "mov     [sp_0+48h], eax"], ["mov~eax,[sp_0+0]", "or~eax,0", "mov~[sp_0+0],eax", "mov~eax,[sp_0+0]", "and~ah,0", "mov~[sp_0+0],eax"]], [1, 0, 36, 0, 0, 3, 1, 1, 16, 9, 0.020676691729323307, ["mov     qword ptr [p+10h], 0", "test    root, root", "jnz     short loc_7E36"], ["mov~[word ptr [p+0],0", "test~root,root", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 8, 3, 0.0043859649122807015, ["nop"], ["nop"]], [2, 0, 43, 0, 1, 7, 0, 2, 7, 4, 0.009085213032581453, ["mov     edx, 0", "lea     rsi, unk_E994", "mov     rdi, sp_0", "call    fts_alloc", "mov     [rbp+parent], rax", "cmp     [rbp+parent], 0", "jz      loc_7F2D"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.0003132832080200501, ["mov     eax, 0", "jmp     loc_7F4A"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 36, 0, 1, 5, 0, 2, 15, 10, 0.005169172932330827, ["mov     word ptr [p+70h], 0Bh", "mov     esi, 1; required", "mov     rdi, p; p", "call    fts_set_stat_required", "jmp     short loc_7E0E"], ["mov~[ord ptr [p+0],0", "mov~esi,0", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 36, 0, 1, 9, 2, 2, 11, 6, 0.15178571428571427, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     eax, r14d", "and     eax, 800h", "test    eax, eax", "jnz     short loc_7D95"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,r14d", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 5, 0, 0, 12, 6, 0.047619047619047616, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     [rbp+v], rax", "cmp     [rbp+len], 2", "jbe     short loc_7D95"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 36, 1, 0, 7, 0, 1, 13, 6, 0.03853383458646616, ["mov     rax, [rbp+len]", "lea     rdx, [rax-1]", "mov     rax, [rbp+v]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_7D95"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 36, 1, 0, 1, 0, 0, 17, 7, 0.0003132832080200501, ["sub     [rbp+len], 1"], ["sub~[rbp+0],0"]], [0, 0, 36, 0, 0, 3, 0, 1, 17, 8, 0.005169172932330827, ["mov     root, p", "mov     [rbp+tmp], root", "jmp     short loc_7E42"], ["mov~root,p", "mov~[rbp+0],root", "jmp~FOO"]], [0, 0, 44, 0, 0, 4, 1, 1, 6, 5, 0.10526315789473684, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_7CF3"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 36, 0, 0, 3, 0, 0, 17, 8, 0.005169172932330827, ["mov     rax, [rbp+tmp]", "mov     [rax+10h], p", "mov     [rbp+tmp], p"], ["mov~rax,[rbp+0]", "mov~[rax+0],p", "mov~[rbp+0],p"]], [3, 1, 57, 1, 0, 17, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    nitems", "push    options", "push    root", "push    p", "push    sp_0", "sub     rsp, 48h", "mov     [rbp+argv], rdi", "mov     r14d, esi", "mov     [rbp+compar], rdx", "mov     [rbp+parent], 0", "mov     [rbp+tmp], 0", "mov     eax, r14d", "and     eax, 0FFFFF000h", "test    eax, eax", "jz      short loc_7BCD"], ["push~rbp", "mov~rbp,rsp", "push~nitems", "push~options", "push~root", "push~p", "push~sp_0", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~r14d,esi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,r14d", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 36, 0, 0, 4, 1, 1, 10, 6, 0.29793233082706766, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_7D2A"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.0003132832080200501, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_7F4A"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 36, 2, 0, 2, 0, 0, 17, 7, 0.12656641604010024, ["add     [rbp+argv], 8", "add     nitems, 1"], ["add~[rbp+0],0", "add~nitems,0"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "pop     sp_0", "pop     p", "pop     root", "pop     options", "pop     nitems", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~sp_0", "pop~p", "pop~root", "pop~options", "pop~nitems", "pop~rbp", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.00046992481203007516, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_7F4A"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 41, 0, 0, 4, 0, 0, 8, 10, 0.011904761904761904, ["mov     rax, [rbp+parent]", "mov     qword ptr [rax+58h], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+parent]", "mov     qword ptr [rax+68h], 0FFFFFFFFFFFFFFFFh"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 7, 0.02913533834586466, ["jmp     short loc_7D78"], ["jmp~FOO"]]], "func_feature": [21, 34, 61, 0, 58, 86, 1, 268, 0.04808, 2, 7], "succs": [[21, 29], [0, 2], [0, 55], [33], [3], [3], [3], [13, 14], [13, 7], [16, 6], [31], [10, 12], [10, 42], [35], [35], [54], [17, 15], [18, 15], [19, 15], [15], [11, 4], [54], [20, 46], [20, 22], [9, 5], [24, 26], [24, 27], [24], [36, 37], [41, 28], [53], [38, 30], [54], [32], [32], [51], [48, 34], [36], [49, 47], [33], [56, 39], [54], [31], [44, 20], [20, 45], [57, 20], [23], [53], [8, 40], [53], [1, 52], [25, 43], [54], [51], [], [54], [8], [23]], "fname": "rpl_fts_open", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 1, 2, 10, 0, 2, 0, 0, 0.041666666666666664, ["add     cp, 1", "mov     rdi, cp; s", "call    _strlen", "mov     len, rax", "lea     rdx, [len+1]; n", "lea     rax, [p+108h]", "mov     rsi, cp; src", "mov     rdi, rax; dest", "call    _memmove", "mov     [p+60h], len"], ["add~cp,0", "mov~rdi,cp", "call~FOO", "mov~len,rax", "lea~rdx,[len+0]", "lea~rax,[p+0]", "mov~rsi,cp", "mov~rdi,rax", "call~FOO", "mov~[p+0],len"]], [0, 0, 3, 0, 0, 3, 0, 1, 1, 2, 0.16666666666666666, ["lea     rax, [p+108h]", "cmp     cp, rax", "jnz     short loc_7FCB"], ["lea~rax,[p+0]", "cmp~cp,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.041666666666666664, ["lea     rax, [cp+1]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_7FF4"], ["lea~rax,[cp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 1, 4, 1, 2, 25, 1, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "push    len", "push    cp", "push    p", "sub     rsp, 18h", "mov     [rbp+sp_0], rdi", "mov     p, rsi", "mov     rax, [p+60h]", "mov     [p+48h], rax", "mov     len, [p+48h]", "lea     rdx, [len+1]; n", "lea     rcx, [p+108h]", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memmove", "lea     rax, [p+108h]", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     cp, rax", "test    cp, cp", "jz      short loc_7FF4"], ["push~rbp", "mov~rbp,rsp", "push~len", "push~cp", "push~p", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~p,rsi", "mov~rax,[p+0]", "mov~[p+0],rax", "mov~len,[p+0]", "lea~rdx,[len+0]", "lea~rcx,[p+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "lea~rax,[p+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~cp,rax", "test~cp,cp", "jz~FOO"]], [0, 1, 0, 1, 0, 12, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     [p+38h], rax", "mov     rax, [p+38h]", "mov     [p+30h], rax", "nop", "add     rsp, 18h", "pop     p", "pop     cp", "pop     len", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "mov~[p+0],rax", "nop", "add~rsp,<STR>", "pop~p", "pop~cp", "pop~len", "pop~rbp", "retn"]]], "func_feature": [4, 2, 7, 0, 5, 7, 1, 54, 0.05, 0, 3], "succs": [[4], [0, 2], [0, 4], [1, 4], []], "fname": "fts_load", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 10, 0, 1, 6, 1, 2, 0, 0, 0.08, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_8111"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 0, 0, 5, 2, 1, 3, 4, 0.14666666666666667, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8133"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 16, 0, 1, 4, 0, 1, 2, 6, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+8]", "mov     rdi, rax", "call    fts_lfree"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 1, 6, 0.22666666666666668, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_808E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 1, 3, 0, 1, 5, 5, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 0, 1, 0, 1, 6, 0, 2, 6, 1, 0.01916666666666667, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0FFFFFFFFh", "jmp     short loc_8197"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 5, 2, 0.11, ["mov     rax, [rbp+sp_0]", "mov     rdi, rax; sp_0", "call    free_dir", "mov     rax, [rbp+sp_0]", "mov     rdi, rax; ptr", "call    free", "cmp     [rbp+saved_errno], 0", "jz      short loc_8192"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.01916666666666667, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 0, 1, 0, 5, 0, 0, 7, 0, 0.0, ["add     rsp, 20h", "pop     p", "pop     freep", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p", "pop~freep", "pop~rbp", "retn"]], [0, 0, 8, 0, 1, 6, 1, 2, 5, 4, 0.06666666666666667, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "mov     edi, eax; fd", "call    _close", "test    eax, eax", "jz      short loc_8133"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 1, 3, 0, 1, 5, 9, 0.10666666666666667, ["mov     p, rax", "mov     rdi, freep; ptr", "call    free"], ["mov~p,rax", "mov~rdi,freep", "call~FOO"]], [0, 0, 24, 0, 0, 2, 0, 1, 4, 10, 0.02, ["mov     rax, [p+10h]", "jmp     short loc_8055"], ["mov~rax,[p+0]", "jmp~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 4, 10, 0.02, ["mov     rax, [p+8]"], ["mov~rax,[p+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 6, 4, 0.025, ["cmp     [rbp+saved_errno], 0", "jnz     short loc_8133"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 1, 7, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 1, 25, 1, 0, 11, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    freep", "push    p", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+saved_errno], 0", "mov     rax, [rbp+sp_0]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_8071"], ["push~rbp", "mov~rbp,rsp", "push~freep", "push~p", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 15, 0, 2, 13, 2, 3, 2, 5, 0.25, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_80E7"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 9, 0.01, ["mov     rax, [rbp+sp_0]", "mov     p, [rax]", "jmp     short loc_8060"], ["mov~rax,[rbp+0]", "mov~p,<TAG>", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 4, 0.09166666666666667, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "test    eax, eax", "js      short loc_8133"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "js~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 3, 11, 0.021666666666666667, ["mov     freep, p; head", "mov     rax, [p+10h]", "test    rax, rax", "jz      short loc_8051"], ["mov~freep,p", "mov~rax,[p+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 0, 2, 8, 0.18500000000000003, ["mov     rax, [p+58h]", "test    rax, rax", "jns     short loc_803F"], ["mov~rax,[p+0]", "test~rax,rax", "jns~FOO"]], [1, 0, 5, 1, 1, 8, 1, 2, 4, 3, 0.16666666666666669, ["mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; fd_ring", "call    fd_ring_clear", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "test    rax, rax", "jz      short loc_8160"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 4, 4, 0.02, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     edi, eax; fd", "call    _close", "test    eax, eax", "jz      short loc_8133"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 2, 5, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "jmp     short loc_8133"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, 3, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "mov     rdi, rax; table", "call    hash_free"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 18, 0, 1, 2, 0, 1, 3, 7, 0.18000000000000002, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]]], "func_feature": [16, 13, 32, 0, 26, 38, 1, 121, 0.06788, 0, 3], "succs": [[9, 4], [0, 21], [16], [16, 2], [9], [8], [5, 7], [8], [], [13, 21], [20], [10], [10], [21, 14], [21], [17, 3], [1, 18], [20], [21, 22], [11, 12], [25, 19], [24, 6], [21, 23], [21], [6], [3]], "fname": "rpl_fts_close", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+ax_0]", "mov     rax, [rax]", "mov     [rbp+dev], rax", "mov     rax, [rbp+dev]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "dev_type_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+y]", "mov     [rbp+ay], rax", "mov     rax, [rbp+ax_0]", "mov     rdx, [rax]", "mov     rax, [rbp+ay]", "mov     rax, [rax]", "cmp     rdx, rax", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 16, 0.0, 0, 0], "succs": [[]], "fname": "dev_type_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 14, 0, 1, 11, 0, 2, 0, 0, 0.024853801169590642, ["mov     rax, [rbp+p]", "mov     rax, [rax+78h]", "mov     [rbp+tmp.st_dev], rax", "lea     rdx, [rbp+tmp]", "mov     rax, [rbp+h]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_lookup", "mov     [rbp+ent], rax", "cmp     [rbp+ent], 0", "jz      short loc_8312"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 2, 4, 0.12280701754385964, ["cmp     [rbp+h], 0", "jz      short loc_8312"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 8, 3, 0.03508771929824561, ["mov     rax, [rbp+ent]", "cmp     rax, [rbp+t2]", "jz      short loc_83D8"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 15, 0, 2, 7, 4, 0.07894736842105263, ["mov     rax, [rbp+p]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+t2]", "mov     [rax], rdx", "mov     rdx, [rbp+fs_buf.f_type]", "mov     rax, [rbp+t2]", "mov     [rax+8], rdx", "mov     rdx, [rbp+t2]", "mov     rax, [rbp+h]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_insert", "mov     [rbp+ent], rax", "cmp     [rbp+ent], 0", "jz      short loc_83C9"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 1, 5, 0.04093567251461988, ["cmp     [rbp+h], 0", "jnz     short loc_82BC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 16, 0, 1, 13, 0, 1, 2, 5, 0.0, ["mov     rax, cs:data_freer", "mov     r8, rax; data_freer", "lea     rcx, dev_type_compare; comparator", "lea     rdx, dev_type_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "mov     rdx, rax", "mov     rax, [rbp+sp_0]", "mov     [rax+50h], rdx", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "mov     [rbp+h], rax"], ["mov~rax,<TAG>", "mov~r8,rax", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 3, 0.12280701754385964, ["cmp     [rbp+h], 0", "jz      loc_83D8"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 11, 0, 1, 7, 1, 2, 4, 3, 0.12280701754385964, ["lea     rdx, [rbp+fs_buf]", "mov     eax, [rbp+fd]", "mov     rsi, rdx; buf", "mov     edi, eax; fildes", "call    _fstatfs", "test    eax, eax", "jz      short loc_833D"], ["lea~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.008771929824561403, ["mov     eax, 0", "jmp     loc_83DC"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 19, 1, 0, 19, 3, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0C0h", "mov     [rbp+p], rdi", "mov     [rbp+fd], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+p]", "mov     rax, [rax+50h]", "mov     [rbp+sp_0], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "mov     [rbp+h], rax", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_826B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.0935672514619883, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_83F0"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.021929824561403508, ["mov     rax, [rbp+ent]", "mov     rax, [rax+8]", "jmp     loc_83DC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03070175438596491, ["mov     eax, 0", "jmp     loc_83DC"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 6, 2, 0.043859649122807015, ["mov     rax, [rbp+fs_buf.f_type]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.14473684210526316, ["cmp     [rbp+fd], 0", "js      short loc_8333"], ["cmp~[rbp+0],0", "js~FOO"]], [2, 0, 8, 0, 1, 5, 0, 2, 6, 3, 0.0935672514619883, ["mov     edi, 10h; size", "call    _malloc", "mov     [rbp+t2], rax", "cmp     [rbp+t2], 0", "jz      short loc_83D8"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 8, 3, 0.005847953216374269, ["mov     rax, [rbp+t2]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [8, 5, 22, 1, 20, 28, 2, 99, 0.04956, 4, 1], "succs": [[16, 12], [0, 16], [19, 14], [2, 18], [1, 5], [1], [17, 14], [13, 6], [11], [8, 4], [], [10, 15], [11], [11], [11], [], [13, 7], [3, 14], [14], []], "fname": "filesystem_type", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     edx, 0FF534D42h", "cmp     rax, rdx", "jz      short loc_842C"], ["mov~edx,0", "cmp~rax,rdx", "jz~FOO"]], [2, 0, 5, 1, 1, 12, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+dir_fd], esi", "mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+p]", "mov     esi, edx; fd", "mov     rdi, rax; p", "call    filesystem_type", "cmp     rax, 1021994h", "jz      short loc_842C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.1, ["cmp     rax, 6969h", "jnz     short loc_8433"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.125, ["mov     eax, 0", "jmp     short locret_8438"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.025, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 0, 5, 0, 6, 8, 1, 22, 0.05833, 0, 1], "succs": [[2, 3], [0, 3], [3, 4], [5], [5], []], "fname": "dirent_inode_sort_may_be_useful", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 13, 1, 1, 12, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+dir_fd], esi", "mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+p]", "mov     esi, edx; fd", "mov     rdi, rax; p", "call    filesystem_type", "cmp     rax, 52654973h", "jz      short loc_849D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.016025641025641024, ["mov     eax, 2", "jmp     short locret_84B0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 2, 0.05448717948717949, ["cmp     rax, 58465342h", "jz      short loc_849D"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 3, 0.0641025641025641, ["cmp     rax, 52654973h", "jg      short loc_8481"], ["cmp~rax,0", "jg~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.035256410256410256, ["mov     eax, 0", "jmp     short locret_84B0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.060897435897435896, ["cmp     rax, 6969h", "jz      short loc_84A4"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 2, 0.05128205128205128, ["cmp     rax, 9FA0h", "jz      short loc_84A4"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 2, 0.04487179487179487, ["test    rax, rax", "jz      short loc_84A4"], ["test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 0, 2, 0.05769230769230769, ["mov     edx, 0FF534D42h", "cmp     rax, rdx", "jz      short loc_84A4"], ["mov~edx,0", "cmp~rax,rdx", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 2, 0.04487179487179487, ["cmp     rax, 5346414Fh", "jz      short loc_84A4"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.01282051282051282, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 2, 0, 0, 1, 0, 1, 0, 2, 0.02564102564102564, ["jmp     short loc_84AB"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 0, 2, 0.02564102564102564, ["jmp     short loc_84AB"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 1, 13, 0, 14, 21, 2, 36, 0.03526, 0, 1], "succs": [[1, 3], [13], [8, 1], [2, 5], [13], [4, 6], [4, 7], [11, 4], [9, 4], [12, 4], [13], [10], [10], []], "fname": "leaf_optimization_0", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rax, [sp_0+8]", "mov     rdi, rax", "call    fts_lfree", "mov     qword ptr [sp_0+8], 0"], ["mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO", "mov~[word ptr [sp_0+0],0"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, 2, 0.002445272473218444, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_860B"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 25, 0, 0, 3, 0, 1, 10, 6, 0.035398230088495575, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 0Bh", "jnz     short loc_8A5D"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 27, 0, 1, 7, 0, 2, 9, 2, 0.03662733529990166, ["mov     p, [t+8]", "mov     [sp_0], p", "mov     rdi, t; ptr", "call    free", "mov     rax, [p+58h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_8A4E"], ["mov~p,[t+0]", "mov~<TAG>,p", "mov~rdi,t", "call~FOO", "mov~rax,[p+0]", "cmp~rax,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 9, 1, 0.0032603632976245926, ["mov     rax, p", "jmp     loc_8BA7"], ["mov~rax,p", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, 2, 0.027130880298090358, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     short loc_8A03"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 3, 0, 1, 6, 2, 2, 10, 2, 0.00535631113181183, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    enter_dir", "xor     eax, 1", "test    al, al", "jz      short loc_8A03"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 74, 0, 0, 3, 0, 1, 9, 7, 0.01304145319049837, ["movzx   eax, word ptr [p+74h]", "cmp     ax, 4", "jnz     short loc_880F"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [0, 0, 74, 0, 1, 6, 1, 2, 8, 3, 0.022188583553278473, ["mov     [sp_0], p", "mov     rdi, t; ptr", "call    free", "mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8800"], ["mov~<TAG>,p", "mov~rdi,t", "call~FOO", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 6, 0, 1, 14, 3, 0.0, ["mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+parent]", "mov     [rax+68h], rdx", "jmp     short loc_89C0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 13, 3, 0.004580034156186927, ["mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_89C0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 10, 6, 0.006598354292811675, ["jmp     next"], ["jmp~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 10, 3, 0.004191895668374476, ["nop", "jmp     short cd_dot_dot"], ["nop", "jmp~FOO"]], [0, 1, 30, 0, 0, 4, 2, 1, 9, 2, 0.004683537752936914, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      loc_8A0B"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 28, 0, 0, 1, 0, 0, 8, 3, 0.029485587124152564, ["nop"], ["nop"]], [0, 0, 74, 0, 0, 3, 1, 1, 7, 4, 0.048103296589556484, ["mov     p, [p+10h]; p", "test    p, p", "jz      loc_8A0E"], ["mov~p,[p+0]", "test~p,p", "jz~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 10, 8, 0.010013972985561248, ["movzx   eax, word ptr [p+74h]", "cmp     ax, 2", "jnz     short loc_8881"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 8, 1, 0.0007374631268436578, ["mov     word ptr [p+70h], 6", "mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     rax, p", "jmp     loc_8BA7"], ["mov~[ord ptr [p+0],0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~rax,p", "jmp~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 7, 5, 0.017776742741810278, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_865F"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 47, 0, 0, 4, 2, 1, 6, 5, 0.01296382549293588, ["mov     eax, [sp_0+48h]", "and     eax, 40h", "test    eax, eax", "jz      short loc_8624"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 46, 0, 0, 4, 0, 1, 7, 4, 0.0004657661853749418, ["mov     rdx, [p+78h]", "mov     rax, [sp_0+18h]", "cmp     rdx, rax", "jz      short loc_8624"], ["mov~rdx,[p+0]", "mov~rax,[sp_0+0]", "cmp~rdx,rax", "jz~FOO"]], [2, 0, 29, 0, 1, 8, 0, 2, 11, 8, 0.005822077317186772, ["mov     edx, 1", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     short loc_8879"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 39, 0, 0, 4, 2, 1, 8, 5, 0.0008539046731873933, ["mov     eax, [sp_0+48h]", "and     eax, 1000h", "test    eax, eax", "jz      short loc_865F"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 28, 0, 0, 4, 2, 1, 12, 8, 0.0037261294829995344, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8879"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [3, 0, 1, 0, 2, 7, 0, 3, 10, 1, 0.000375200538218703, ["mov     rdi, p; ptr", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "mov     eax, 0", "jmp     loc_8BA7"], ["mov~rdi,p", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 11, 9, 0.0064430988976866945, ["test    p, p", "jnz     short loc_86A4"], ["test~p,p", "jnz~FOO"]], [1, 0, 28, 0, 1, 8, 1, 2, 10, 10, 0.0034932463903120633, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "movzx   eax, word ptr [p+72h]", "or      eax, 1", "mov     [p+72h], ax", "mov     p, [sp_0+8]", "jmp     short loc_86B4"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "movzx~eax,[ord ptr [p+0]", "or~eax,0", "mov~[p+0],ax", "mov~p,[sp_0+0]", "jmp~FOO"]], [0, 0, 28, 0, 0, 4, 0, 0, 12, 10, 0.0, ["mov     rax, [p+8]", "mov     rax, [rax+30h]", "mov     [p+30h], rax", "mov     p, [p+10h]"], ["mov~rax,[p+0]", "mov~rax,[rax+0]", "mov~[p+0],rax", "mov~p,[p+0]"]], [2, 0, 38, 0, 1, 7, 1, 1, 9, 5, 0.0, ["mov     eax, [sp_0+48h]", "and     ah, 0EFh", "mov     [sp_0+48h], eax", "mov     rax, [sp_0+8]", "mov     rdi, rax", "call    fts_lfree", "mov     qword ptr [sp_0+8], 0"], ["mov~eax,[sp_0+0]", "and~ah,0", "mov~[sp_0+0],eax", "mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO", "mov~[word ptr [sp_0+0],0"]], [1, 0, 16, 0, 0, 4, 2, 1, 13, 5, 0.010246856078248719, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8B0C"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 20, 0, 0, 5, 2, 1, 12, 5, 0.016301816488122962, ["movzx   eax, word ptr [p+72h]", "movzx   eax, ax", "and     eax, 2", "test    eax, eax", "jz      short loc_8B18"], ["movzx~eax,[ord ptr [p+0]", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 27, 0, 1, 7, 1, 1, 13, 9, 0.00263934171712467, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [p+44h], eax", "mov     eax, [p+44h]", "test    eax, eax", "jns     short loc_886E"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],eax", "mov~eax,[p+0]", "test~eax,eax", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 9, 3, 0.004580034156186927, ["mov     rax, [p+0A8h]", "cmp     rax, 1", "jz      short loc_89C0"], ["mov~rax,[p+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 8, 4, 0.02406458624437199, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_86BB"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 25, 0, 1, 5, 0, 2, 14, 8, 0.0009703462195311287, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     word ptr [p+70h], 7", "jmp     short loc_8879"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~[ord ptr [p+0],0", "jmp~FOO"]], [1, 0, 23, 1, 0, 7, 1, 1, 11, 5, 0.03423381462505822, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+48h]", "add     rax, rdx", "mov     byte ptr [rax], 0", "mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8AA1"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 25, 0, 0, 3, 1, 0, 14, 8, 0.0009703462195311287, ["movzx   eax, word ptr [p+72h]", "or      eax, 2", "mov     [p+72h], ax"], ["movzx~eax,[ord ptr [p+0]", "or~eax,0", "mov~[p+0],ax"]], [1, 0, 24, 0, 0, 2, 0, 1, 12, 7, 0.009315323707498836, ["mov     word ptr [p+74h], 3", "jmp     short name"], ["mov~[ord ptr [p+0],0", "jmp~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 11, 7, 0.004269523365936966, ["nop"], ["nop"]], [1, 0, 29, 0, 1, 8, 1, 2, 9, 8, 0.011139574600217358, ["mov     rax, [p+30h]", "mov     rcx, rax; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_8719"], ["mov~rax,[p+0]", "mov~rcx,rax", "mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 10, 0, 1, 7, 1, 2, 13, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "jmp     loc_8B5C"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "jmp~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 12, 4, 0.016457071883247944, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jz      loc_8B5C"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 23, 2, 0, 10, 0, 1, 10, 6, 0.04688712932774414, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+8]", "mov     rcx, [rax+38h]", "mov     rax, [p+8]", "mov     rax, [rax+48h]", "sub     rax, 1", "add     rax, rcx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_88B3"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "mov~rcx,[rax+0]", "mov~rax,[p+0]", "mov~rax,[rax+0]", "sub~rax,0", "add~rax,rcx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 10, 7, 0.02359882005899705, ["mov     p, [sp_0+8]", "mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~p,[sp_0+0]", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 24, 0, 1, 3, 0, 2, 9, 7, 0.00520105573668685, ["mov     rdi, t; ptr", "call    free", "jmp     name"], ["mov~rdi,t", "call~FOO", "jmp~FOO"]], [1, 0, 21, 1, 0, 4, 0, 1, 11, 5, 0.021308802980903586, ["mov     rax, [p+8]", "mov     rax, [rax+48h]", "sub     rax, 1", "jmp     short loc_88BB"], ["mov~rax,[p+0]", "mov~rax,[rax+0]", "sub~rax,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 11, 5, 0.021308802980903586, ["mov     rax, [p+8]", "mov     rax, [rax+48h]"], ["mov~rax,[p+0]", "mov~rax,[rax+0]"]], [0, 0, 25, 0, 0, 1, 0, 1, 12, 8, 0.005822077317186772, ["jmp     short loc_8719"], ["jmp~FOO"]], [0, 1, 15, 0, 0, 4, 2, 1, 14, 7, 0.007141748175749107, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_8AE2"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 1, 114, 1, 0, 10, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    t", "push    sp_0", "push    p", "sub     rsp, 18h", "mov     sp_0, rdi; head", "mov     rax, [sp_0]", "test    rax, rax", "jz      short loc_84D9"], ["push~rbp", "mov~rbp,rsp", "push~t", "push~sp_0", "push~p", "sub~rsp,<STR>", "mov~sp_0,rdi", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 31, 0, 1, 7, 1, 2, 9, 3, 0.013623660922217047, ["mov     esi, 3", "mov     rdi, sp_0", "call    fts_build", "mov     [sp_0+8], rax", "mov     rax, [sp_0+8]", "test    rax, rax", "jnz     short loc_8719"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "mov~rax,[sp_0+0]", "test~rax,rax", "jnz~FOO"]], [0, 1, 113, 0, 0, 4, 2, 1, 1, 2, 0.008616674429436423, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      short loc_84E3"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.0001552553951249806, ["mov     eax, 0", "jmp     loc_8BA7"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 15, 6, 0.0022900170780934636, ["mov     eax, [p+44h]", "mov     edx, 1; chdir_down_one", "mov     esi, eax; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "mov     eax, 0", "jmp     short loc_8AF1"], ["mov~eax,[p+0]", "mov~edx,0", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 20, 0, 1, 11, 0, 2, 12, 4, 0.04269523365936966, ["lea     t, [rdx+rax]", "mov     rax, t", "lea     t, [rax+1]", "mov     byte ptr [rax], 2Fh ; '/'", "mov     rax, [p+60h]", "lea     rdx, [rax+1]; n", "lea     rax, [p+108h]", "mov     rsi, rax; src", "mov     rdi, t; dest", "call    _memmove", "jmp     short check_for_dir"], ["lea~t,<TAG>", "mov~rax,t", "lea~t,[rax+0]", "mov~<TAG>,0", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "lea~rax,[p+0]", "mov~rsi,rax", "mov~rdi,t", "call~FOO", "jmp~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 6, 4, 0.016728768824716658, ["nop"], ["nop"]], [2, 0, 25, 0, 1, 8, 0, 2, 5, 5, 0.011294829995342337, ["mov     edx, 1", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     loc_88E5"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 4, 2, 1, 6, 5, 0.0016301816488122963, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     loc_88E5"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 21, 0, 1, 5, 0, 2, 8, 5, 0.0008150908244061481, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     word ptr [p+70h], 7", "jmp     loc_88E5"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~[ord ptr [p+0],0", "jmp~FOO"]], [1, 0, 21, 0, 0, 4, 1, 1, 8, 5, 0.0008150908244061481, ["movzx   eax, word ptr [p+72h]", "or      eax, 2", "mov     [p+72h], ax", "jmp     loc_88E5"], ["movzx~eax,[ord ptr [p+0]", "or~eax,0", "mov~[p+0],ax", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 3, 0.014671634839310665, ["mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_89DC"], ["mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 11, 1, 0.0004657661853749418, ["mov     eax, 0", "jmp     loc_8BA7"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 6, 0, 0, 4, 2, 1, 10, 2, 0.006210215804999223, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      short loc_86EF"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 1, 5, 1, 1, 15, 6, 0.0022900170780934636, ["mov     eax, [p+44h]", "mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "setnz   al"], ["mov~eax,[p+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "setnz~al"]], [1, 0, 14, 0, 0, 4, 2, 1, 10, 4, 0.008228535941623972, ["mov     eax, [sp_0+48h]", "and     eax, 8", "test    eax, eax", "jz      short loc_894E"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 15, 0, 0, 6, 1, 1, 9, 4, 0.03229312218599596, ["mov     rax, [p+8]", "mov     [rbp+parent], rax", "mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "test    rax, rax", "jnz     short loc_894E"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 19, 0, 0, 4, 0, 1, 7, 3, 0.07199968948920975, ["mov     [sp_0], p", "movzx   eax, word ptr [p+70h]", "cmp     ax, 0Bh", "jnz     loc_89C0"], ["mov~<TAG>,p", "movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [0, 0, 20, 0, 3, 8, 0, 4, 10, 4, 0.011799410029498525, ["mov     rdi, sp_0; sp_0", "call    free_dir", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_load", "mov     rdi, sp_0; fts", "call    setup_dir", "jmp     check_for_dir"], ["mov~rdi,sp_0", "call~FOO", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 16, 5, 0.004580034156186927, ["test    al, al", "jz      short loc_8B0C"], ["test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 11, 2, 0.0037261294829995344, ["mov     eax, [p+40h]", "test    eax, eax", "jz      short loc_8706"], ["mov~eax,[p+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 111, 0, 0, 5, 0, 1, 2, 2, 0.017078093463747866, ["mov     p, [sp_0]; p", "movzx   r13d, word ptr [p+74h]", "mov     word ptr [p+74h], 3", "cmp     r13w, 1", "jnz     short loc_8515"], ["mov~p,<TAG>", "movzx~r13d,[ord ptr [p+0]", "mov~[ord ptr [p+0],0", "cmp~r13w,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 12, 2, 0.001319670858562335, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 4", "jz      short loc_8706"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 13, 2, 0.0, ["mov     word ptr [p+70h], 7"], ["mov~[ord ptr [p+0],0"]], [1, 0, 18, 0, 0, 3, 0, 1, 8, 4, 0.04354913833255705, ["mov     rax, [p+0A8h]", "cmp     rax, 2", "jnz     loc_89AE"], ["mov~rax,[p+0]", "cmp~rax,0", "jnz~FOO"]], [0, 1, 11, 0, 1, 6, 1, 1, 17, 5, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax"]], [1, 0, 1, 0, 1, 7, 0, 2, 3, 1, 7.76276975624903e-05, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "mov     rax, p", "jmp     loc_8BA7"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "mov~rax,p", "jmp~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 12, 1, 0.0002328830926874709, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     rax, p", "jmp     loc_8BA7"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~rax,p", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 14, 4, 0.004657661853749418, ["mov     eax, [p+44h]", "mov     edi, eax; fd", "call    _close", "jmp     short loc_8B5C"], ["mov~eax,[p+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 109, 0, 0, 2, 0, 1, 3, 6, 0.025151374010246856, ["cmp     r13w, 2", "jnz     loc_85A4"], ["cmp~r13w,0", "jnz~FOO"]], [1, 0, 12, 0, 0, 5, 2, 1, 13, 4, 0.004191895668374476, ["movzx   eax, word ptr [p+72h]", "movzx   eax, ax", "and     eax, 1", "test    eax, eax", "jnz     short loc_8B5C"], ["movzx~eax,[ord ptr [p+0]", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 108, 0, 0, 3, 0, 1, 4, 6, 0.00807328054649899, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 0Ch", "jz      short loc_8534"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 0, 5, 6, 0.030818195932308647, ["nop"], ["nop"]], [1, 0, 100, 0, 0, 3, 0, 1, 4, 5, 0.03737773637633908, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     loc_872C"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 107, 0, 0, 3, 0, 1, 5, 6, 0.006287843502561714, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 0Dh", "jnz     short loc_85A4"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 2, 1, 11, 4, 0.004191895668374476, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_894E"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 4, 1, 1, 6, 5, 0.047818661698494025, ["mov     t, p", "mov     rax, [p+10h]", "test    rax, rax", "jnz     short loc_879B"], ["mov~t,p", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 11, 0, 1, 8, 1, 2, 14, 4, 0.0017854370439372767, ["mov     rax, [p+8]", "lea     rcx, off_E997; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      short loc_8B5C"], ["mov~rax,[p+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 4, 1, 1, 7, 4, 0.008254411840811467, ["mov     rax, [p+8]", "mov     rax, [rax+18h]", "test    rax, rax", "jz      short loc_879B"], ["mov~rax,[p+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 7, 0, 2, 12, 3, 0.000271696941468716, ["mov     edx, [sp_0+2Ch]", "mov     rax, [rbp+parent]", "mov     esi, edx; dir_fd", "mov     rdi, rax; p", "call    leaf_optimization_0", "cmp     eax, 2", "jz      short loc_89C0"], ["mov~edx,[sp_0+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 1, 10, 0, 1, 6, 1, 1, 15, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax"]], [1, 0, 9, 0, 0, 3, 0, 1, 13, 3, 0.022279149200434716, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 2", "jz      short loc_8B8F"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 14, 5, 0.01086787765874864, ["mov     eax, [p+40h]", "test    eax, eax", "jz      short loc_8B74"], ["mov~eax,[p+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 55, 1, 1, 12, 1, 2, 8, 3, 0.007943901050561506, ["mov     p, [t+8]; sp_0", "mov     [sp_0], p", "mov     rdx, [sp_0+20h]", "mov     rax, [p+48h]", "add     rax, rdx", "mov     byte ptr [rax], 0", "mov     esi, 3", "mov     rdi, sp_0", "call    fts_build", "mov     p, rax", "test    p, p", "jnz     short loc_878E"], ["mov~p,[t+0]", "mov~<TAG>,p", "mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~p,rax", "test~p,p", "jnz~FOO"]], [1, 2, 11, 0, 1, 9, 1, 2, 10, 3, 0.018747088961341408, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "mov     eax, [p+90h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_89C0"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "mov~eax,[p+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 15, 4, 0.0029498525073746312, ["mov     eax, 6"], ["mov~eax,0"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.01327433628318584, ["mov     rax, [p+58h]", "test    rax, rax", "jz      short loc_89C0"], ["mov~rax,[p+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 23, 0, 1, 7, 1, 1, 7, 6, 0.0012420431609998447, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [p+44h], eax", "mov     eax, [p+44h]", "test    eax, eax", "jns     short loc_8594"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],eax", "mov~eax,[p+0]", "test~eax,eax", "jns~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 16, 3, 0.003881384878124515, ["mov     [p+70h], ax", "mov     eax, [p+40h]", "test    eax, eax", "jnz     short loc_8B8F"], ["mov~[p+0],ax", "mov~eax,[p+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.0029498525073746312, ["mov     eax, 7", "jmp     short loc_8B79"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 12, 3, 0.009004812917248875, ["mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "test    rax, rax", "jz      short loc_89C0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 10, 1, 0.0003363866894374579, ["mov     eax, 0", "jmp     loc_8BA7"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 17, 3, 0.0, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO"]], [0, 1, 3, 0, 0, 4, 2, 1, 14, 2, 0.00784039745381152, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jnz     short loc_8BA2"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 15, 1, 0.0008539046731873933, ["mov     rax, p", "jmp     short loc_8BA7"], ["mov~rax,p", "jmp~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     p", "pop     sp_0", "pop     t", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p", "pop~sp_0", "pop~t", "pop~rbp", "retn"]], [1, 1, 1, 0, 0, 5, 1, 1, 10, 1, 0.0002975728406562128, ["mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "mov     eax, 0", "jmp     loc_8BA7"], ["mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 11, 1, 0.00011644154634373545, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0", "jmp     loc_8BA7"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 15, 1, 0.0008539046731873933, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 48, 0, 0, 2, 0, 1, 5, 4, 0.013235522434404595, ["cmp     r13w, 4", "jz      short loc_85D3"], ["cmp~r13w,0", "jz~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 9, 2, 0.01271800445065466, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jz      short loc_87E0"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.0, ["mov     rax, [p+78h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p+0]", "mov~[sp_0+0],rax"]], [1, 0, 5, 0, 0, 5, 2, 1, 6, 3, 0.0035320602390933086, ["movzx   eax, word ptr [p+72h]", "movzx   eax, ax", "and     eax, 2", "test    eax, eax", "jz      short loc_85EB"], ["movzx~eax,[ord ptr [p+0]", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 7, 3, 0.0, ["mov     eax, [p+44h]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[p+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [41, 68, 133, 0, 115, 177, 2, 489, 0.01045, 2, 7], "succs": [[17], [0, 17], [37, 31], [24, 2], [106], [4, 62], [108, 4], [16, 11], [111, 7], [5], [9, 5], [87], [3], [12, 102], [3], [8, 14], [40, 21], [106], [35, 22], [18, 20], [113, 18], [39, 23], [35, 28], [32, 39], [106], [49, 27], [25], [25], [35], [50, 79], [81, 29], [], [36, 38], [], [33, 5], [41, 52], [39], [43, 30], [39], [44], [44], [26, 45], [92], [42, 92], [48, 47], [44], [44], [56], [56], [45], [65, 55], [53, 54], [64, 45], [72, 54], [106], [70], [68], [68], [57, 59], [57, 98], [57], [57], [112, 6], [106], [71, 63], [70], [86, 95], [66, 95], [75, 5], [68], [76, 79], [73, 78], [80, 77], [74, 78], [78], [34, 67], [79], [106], [106], [92], [82, 84], [88, 92], [58, 85], [87], [83, 110], [58, 84], [90, 95], [89, 15], [91, 92], [94, 15], [5, 95], [92], [104, 93], [96, 100], [13, 46], [97, 5], [99], [101, 5], [60, 61], [104, 103], [99], [10, 5], [106], [104], [105, 109], [106], [], [106], [106], [106], [113, 19], [107, 69], [6], [1, 114], [1]], "fname": "rpl_fts_read", "n_num": 115}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.09523809523809523, ["cmp     [rbp+instr], 4", "jz      short loc_8BF5"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 2, 0.14285714285714285, ["cmp     [rbp+instr], 3", "jz      short loc_8BF5"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 0, 1, 1, 0.10714285714285714, ["mov     eax, [rbp+instr]", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax+74h], dx", "mov     eax, 0"], ["mov~eax,[rbp+0]", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dx", "mov~eax,0"]], [1, 1, 7, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+p], rsi", "mov     [rbp+instr], edx", "cmp     [rbp+instr], 0", "jz      short loc_8BF5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.09523809523809523, ["cmp     [rbp+instr], 1", "jz      short loc_8BF5"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     [rbp+instr], 2", "jz      short loc_8BF5"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 5, 1, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "jmp     short locret_8C07"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [1, 0, 7, 0, 8, 12, 3, 27, 0.0744, 0, 1], "succs": [[2, 7], [0, 2], [6], [2, 4], [2, 5], [1, 2], [], [6]], "fname": "rpl_fts_set", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 19, 0, 0, 3, 0, 1, 0, 0, 0.11076923076923077, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jz      short loc_8C8E"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 2, 2, 0.09230769230769231, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 9", "jnz     short loc_8C78"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.0015384615384615385, ["mov     eax, 0", "jmp     loc_8D9B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 3, 12, 0, 4, 13, 1, 0.0023076923076923075, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     short loc_8D9B"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 12, 2, 0.04692307692307692, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_8D8D"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 13, 2, 0.0015384615384615385, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 4, 5, 0.12307692307692308, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_8CA3"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 13, 1, 0.0038461538461538464, ["mov     rax, [sp_0+8]"], ["mov~rax,[sp_0+0]"]], [1, 0, 2, 0, 1, 6, 0, 2, 12, 2, 0.023846153846153847, ["mov     eax, [rbp+fd]", "mov     edx, 1; chdir_down_one", "mov     esi, eax; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "jmp     short loc_8D97"], ["mov~eax,[rbp+0]", "mov~edx,0", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [0, 0, 16, 0, 1, 3, 0, 1, 5, 5, 0.0, ["mov     rax, [sp_0+8]", "mov     rdi, rax", "call    fts_lfree"], ["mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, 0, 0.0, ["add     rsp, 20h", "pop     sp_0", "pop     p", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~sp_0", "pop~p", "pop~rbp", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 2, 1, 0.0023076923076923075, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_8D9B"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.0023076923076923075, ["mov     eax, 0", "jmp     loc_8D9B"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.0015384615384615385, ["mov     rax, [p+10h]", "jmp     loc_8D9B"], ["mov~rax,[p+0]", "jmp~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 8, 1, 0.012307692307692308, ["mov     eax, [rbp+instr]", "mov     esi, eax", "mov     rdi, sp_0", "call    fts_build", "mov     [sp_0+8], rax", "mov     rax, [sp_0+8]", "jmp     loc_8D9B"], ["mov~eax,[rbp+0]", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "mov~rax,[sp_0+0]", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 11, 1, 0.0015384615384615385, ["mov     qword ptr [sp_0+8], 0", "mov     eax, 0", "jmp     short loc_8D9B"], ["mov~[word ptr [sp_0+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 1, 6, 0, 1, 10, 2, 0.14, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_8D26"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 1, 2, 0.0023076923076923075, ["cmp     [rbp+instr], 1000h", "jz      short loc_8C3E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 26, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p", "push    sp_0", "sub     rsp, 20h", "mov     sp_0, rdi; sp_0", "mov     [rbp+instr], esi", "cmp     [rbp+instr], 0", "jz      short loc_8C3E"], ["push~rbp", "mov~rbp,rsp", "push~p", "push~sp_0", "sub~rsp,<STR>", "mov~sp_0,rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.15384615384615385, ["cmp     [rbp+instr], 1000h", "jnz     short loc_8CBE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 13, 0, 0, 5, 1, 1, 6, 3, 0.07615384615384616, ["mov     eax, [sp_0+48h]", "or      ah, 10h", "mov     [sp_0+48h], eax", "mov     [rbp+instr], 2", "jmp     short loc_8CC5"], ["mov~eax,[sp_0+0]", "or~ah,0", "mov~[sp_0+0],eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 6, 3, 0.07615384615384616, ["mov     [rbp+instr], 1"], ["mov~[rbp+0],0"]], [0, 1, 6, 0, 1, 9, 2, 2, 11, 3, 0.1076923076923077, ["mov     eax, [rbp+instr]", "mov     esi, eax", "mov     rdi, sp_0", "call    fts_build", "mov     [sp_0+8], rax", "mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_8D57"], ["mov~eax,[rbp+0]", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 7, 2, 0.17692307692307693, ["mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8CE5"], ["mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 1, 23, 0, 1, 7, 2, 2, 1, 2, 0.06846153846153846, ["mov     p, [sp_0]; head", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      short loc_8C62"], ["mov~p,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 0, 1, 8, 2, 0.1523076923076923, ["mov     rax, [p+30h]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_8CE5"], ["mov~rax,[p+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 2, 1, 9, 2, 0.14769230769230768, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_8CFF"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]]], "func_feature": [12, 10, 33, 0, 27, 39, 0, 116, 0.05658, 1, 2], "succs": [[2, 6], [0, 13], [10], [10], [3, 5], [7], [9, 19], [10], [7], [19], [], [10], [10], [10], [10], [10], [22, 15], [24, 11], [24, 17], [20, 21], [23], [23], [8, 4], [25, 14], [1, 12], [26, 14], [16, 14]], "fname": "rpl_fts_children", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 3, 0, 0, 12, 0, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+b]", "mov     rax, [rax]", "mov     rax, [rax+80h]", "cmp     rdx, rax", "jb      short loc_8DF8"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~rdx,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 0, 1, 0, 0, 10, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+b]", "mov     rax, [rax]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rax, [rax+80h]", "cmp     rdx, rax", "setb    al", "movzx   eax, al", "jmp     short loc_8DFD"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~rdx,rax", "setb~al", "movzx~eax,al", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 4, 4, 0, 25, 0.04167, 0, 0], "succs": [[2], [0, 3], [], [2]], "fname": "fts_compare_ino", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.001388888888888889, ["mov     [rbp+type], 2000h; jumptable 0000000000008E32 case 2", "jmp     short loc_8E7A"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [0, 0, 9, 1, 0, 8, 0, 1, 1, 2, 0.07777777777777778, ["mov     eax, [rbp+dtype]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E99C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E99C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+st]", "mov     edx, [rbp+type]", "mov     [rax+18h], edx", "nop", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "nop", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 6000h; jumptable 0000000000008E32 case 6", "jmp     short loc_8E7A"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 4000h; jumptable 0000000000008E32 case 4", "jmp     short loc_8E7A"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 1000h; jumptable 0000000000008E32 case 1", "jmp     short loc_8E7A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 0A000h; jumptable 0000000000008E32 case 10", "jmp     short loc_8E7A"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 8000h; jumptable 0000000000008E32 case 8", "jmp     short loc_8E7A"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 0C000h; jumptable 0000000000008E32 case 12", "jmp     short loc_8E7A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.0125, ["mov     [rbp+type], 0; jumptable 0000000000008E32 default case"], ["mov~[rbp+0],0"]], [1, 0, 10, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     [rbp+dtype], esi", "cmp     [rbp+dtype], 0Ch; switch 13 cases", "ja      short loc_8E73; jumptable 0000000000008E32 default case"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "ja~FOO"]]], "func_feature": [0, 0, 9, 0, 11, 18, 1, 35, 0.00909, 1, 1], "succs": [[2], [0, 3, 4, 5, 6, 7, 8, 9], [], [2], [2], [2], [2], [2], [2], [2], [1, 9]], "fname": "set_stat_type", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.018454801376290273, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jz      short loc_9819"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 19, 4, 0.029715358148263996, ["cmp     [rbp+sort_by_inode], 0", "jz      short loc_97F9"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 8, 0, 1, 20, 4, 0.0, ["lea     rax, fts_compare_ino", "mov     [sp_0+40h], rax", "mov     rdx, nitems", "mov     rsi, head", "mov     rdi, sp_0", "call    fts_sort", "mov     head, rax", "mov     qword ptr [sp_0+40h], 0"], ["lea~rax,<TAG>", "mov~[sp_0+0],rax", "mov~rdx,nitems", "mov~rsi,head", "mov~rdi,sp_0", "call~FOO", "mov~head,rax", "mov~[word ptr [sp_0+0],0"]], [0, 0, 91, 0, 1, 3, 0, 1, 13, 14, 0.0, ["mov     eax, [rbp+dir_fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [0, 0, 92, 0, 0, 3, 1, 1, 12, 14, 0.001981023876550933, ["mov     eax, [rbp+dir_fd]", "test    eax, eax", "js      short loc_9206"], ["mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [1, 0, 121, 0, 0, 4, 0, 1, 6, 5, 0.061724533416744866, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 0Bh", "jnz     short loc_9028"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jnz~FOO"]], [0, 0, 125, 0, 1, 12, 1, 2, 5, 4, 0.0590657908455844, ["lea     rdx, [rbp+dir_fd]", "mov     rcx, rdx; pnew_fd", "mov     edx, edi; extra_flags", "mov     edi, eax; dir_fd", "call    opendirat", "mov     rdx, rax", "mov     rax, [rbp+cur]", "mov     [rax+18h], rdx", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "jnz     short loc_8FFA"], ["lea~rdx,[rbp+0]", "mov~rcx,rdx", "mov~edx,edi", "mov~edi,eax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 83, 0, 1, 5, 0, 1, 21, 12, 0.06944010009383797, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax"]], [0, 1, 83, 0, 0, 4, 2, 1, 20, 13, 0.06996142216661454, ["mov     eax, [sp_0+48h]", "and     eax, 400h", "test    eax, eax", "jz      loc_95FF"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 12, 13, 0.02815139192993431, ["mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "jmp     short loc_921B"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [3, 1, 93, 0, 1, 17, 3, 2, 11, 14, 0.019862370972786987, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+72h]", "or      eax, 1", "mov     edx, eax", "mov     rax, [rbp+cur]", "mov     [rax+72h], dx", "mov     [rbp+descend], 0", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_9206"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "or~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 23, 0, 0, 4, 2, 1, 17, 5, 0.11244917109790428, ["movzx   eax, [rbp+continue_readdir]", "xor     eax, 1", "test    al, al", "jz      loc_9789"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 28, 0, 0, 4, 2, 1, 16, 6, 0.1325200708998019, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_96F7"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 0, 19, 6, 0.0037535189239912416, ["mov     rax, [rbp+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 90, 0, 0, 1, 0, 0, 11, 13, 0.01876759461995621, ["mov     [rbp+descend], 1"], ["mov~[rbp+0],0"]], [1, 0, 98, 0, 1, 8, 1, 2, 10, 14, 0.01579605880512981, ["mov     edx, [rbp+dir_fd]; fd", "mov     rax, [rbp+cur]", "mov     ecx, 0; dir", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_9214"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 0, 1, 22, 3, 0.0, ["mov     rdx, nitems", "mov     rsi, head", "mov     rdi, sp_0", "call    fts_sort", "mov     head, rax"], ["mov~rdx,nitems", "mov~rsi,head", "mov~rdi,sp_0", "call~FOO", "mov~head,rax"]], [1, 0, 5, 0, 0, 2, 0, 0, 21, 3, 0.006099468251485767, ["cmp     nitems, 1", "jbe     short loc_9819"], ["cmp~nitems,0", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 21, 2, 0.000781983109164842, ["mov     rax, head"], ["mov~rax,head"]], [1, 0, 83, 0, 0, 3, 1, 1, 22, 11, 0.0981649463038265, ["mov     qword ptr [p+10h], 0", "test    head, head", "jnz     short loc_9633"], ["mov~[word ptr [p+0],0", "test~head,head", "jnz~FOO"]], [4, 0, 83, 0, 2, 21, 4, 3, 22, 12, 0.024606401835053696, ["mov     [rbp+skip_stat], al", "and     [rbp+skip_stat], 1", "mov     word ptr [p+70h], 0Bh", "mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+12h]", "movzx   edx, al", "lea     rax, [p+78h]", "mov     esi, edx; dtype", "mov     rdi, rax; st", "call    set_stat_type", "movzx   eax, [rbp+skip_stat]", "test    eax, eax", "setnz   al", "xor     eax, 1", "movzx   eax, al", "and     eax, 1", "movzx   eax, al", "mov     esi, eax; required", "mov     rdi, p; p", "call    fts_set_stat_required", "jmp     short loc_9615"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~[ord ptr [p+0],0", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~edx,al", "lea~rax,[p+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "movzx~eax,[rbp+0]", "test~eax,eax", "setnz~al", "xor~eax,0", "movzx~eax,al", "and~eax,0", "movzx~eax,al", "mov~esi,eax", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 117, 0, 1, 9, 0, 2, 7, 17, 0.032686893963090394, ["mov     rax, [rbp+cur]", "mov     edx, 0", "mov     rsi, rax", "mov     rdi, sp_0", "call    fts_stat", "mov     edx, eax", "mov     rax, [rbp+cur]", "mov     [rax+70h], dx", "jmp     short loc_9082"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dx", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.01428422479407778, ["mov     rcx, [rbp+var_28]", "xor     rcx, fs:28h", "jz      short loc_9830"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0006255864873318737, ["mov     eax, 0", "jmp     loc_981C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.0018767594619956208, ["mov     eax, 0", "jmp     loc_981C"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 9, 2, 0.0004691898654989052, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0", "jmp     loc_981C"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [3, 1, 3, 0, 5, 24, 1, 6, 16, 2, 0.010478573662808882, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rdi, p; ptr", "call    free", "mov     rdi, head", "call    fts_lfree", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 7", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     loc_981C"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rdi,p", "call~FOO", "mov~rdi,head", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [4, 1, 3, 0, 4, 19, 1, 5, 17, 2, 0.0009383797309978104, ["mov     rdi, p; ptr", "call    free", "mov     rdi, head", "call    fts_lfree", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 7", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "mov     eax, 0", "jmp     loc_981C"], ["mov~rdi,p", "call~FOO", "mov~rdi,head", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 1, 3, 0, 1, 9, 1, 2, 23, 2, 0.0007298509018871859, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 7", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "mov     rdi, head", "call    fts_lfree", "mov     eax, 0", "jmp     loc_981C"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "mov~rdi,head", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 20, 2, 0.004274840996767803, ["mov     rdi, head", "call    fts_lfree", "mov     eax, 0", "jmp     short loc_981C"], ["mov~rdi,head", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 83, 0, 0, 3, 0, 1, 23, 10, 0.04678865603169638, ["mov     [rbp+tail], p", "mov     head, [rbp+tail]", "jmp     short loc_9645"], ["mov~[rbp+0],p", "mov~head,[rbp+0]", "jmp~FOO"]], [0, 1, 119, 0, 0, 4, 2, 1, 7, 4, 0.03409446355958711, ["mov     eax, [sp_0+48h]", "and     eax, 100h", "test    eax, eax", "jz      short loc_9082"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [2, 0, 89, 2, 0, 9, 0, 1, 6, 12, 0.1971640079240955, ["mov     rax, [rbp+cur]", "mov     rdx, [rax+38h]", "mov     rax, [rbp+cur]", "mov     rax, [rax+48h]", "sub     rax, 1", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_9247"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rax,0", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 5, 13, 0.09149202377228652, ["mov     [rbp+descend], 1", "jmp     loc_921B"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 8, 13, 0.04222708789490147, ["cmp     [rbp+type], 3", "jnz     loc_921B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 83, 0, 0, 3, 0, 0, 23, 10, 0.04678865603169638, ["mov     rax, [rbp+tail]", "mov     [rax+10h], p", "mov     [rbp+tail], p"], ["mov~rax,[rbp+0]", "mov~[rax+0],p", "mov~[rbp+0],p"]], [0, 1, 0, 1, 0, 7, 0, 0, 5, 0, 0.0, ["add     rsp, 90h", "pop     sp_0", "pop     p", "pop     nitems", "pop     head", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~sp_0", "pop~p", "pop~nitems", "pop~head", "pop~rbp", "retn"]], [1, 0, 87, 1, 0, 4, 0, 1, 7, 11, 0.09860807006568657, ["mov     rax, [rbp+cur]", "mov     rax, [rax+48h]", "sub     rax, 1", "jmp     short loc_924F"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, 3, 0.00026066103638828066, ["jmp     short mem1"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 15, 3, 0.014388489208633093, ["nop"], ["nop"]], [0, 0, 87, 0, 0, 2, 0, 0, 7, 11, 0.09860807006568657, ["mov     rax, [rbp+cur]", "mov     rax, [rax+48h]"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]"]], [1, 0, 83, 0, 0, 2, 0, 1, 24, 9, 0.09769575643832759, ["cmp     nitems, 2710h", "jnz     short loc_9671"], ["cmp~nitems,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 22, 3, 0.008289020957147326, ["test    al, al", "jz      short loc_9789"], ["test~al,al", "jz~FOO"]], [0, 0, 17, 0, 1, 5, 1, 2, 21, 4, 0.0061776665624022516, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "setnz   al", "jmp     short loc_9760"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 17, 0, 1, 9, 1, 1, 21, 4, 0.0061776665624022516, ["mov     rax, [rbp+cur]", "mov     rax, [rax+8]", "lea     rcx, off_E997; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "setnz   al"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al"]], [1, 0, 83, 0, 0, 4, 0, 1, 16, 5, 0.010582838077364196, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+14h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_9376"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 83, 0, 0, 4, 1, 1, 15, 6, 0.01741215723073715, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+14h]", "test    al, al", "jz      loc_967B"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 83, 0, 0, 3, 0, 1, 17, 5, 0.016786570743405275, ["mov     rax, [sp_0+20h]", "cmp     [rbp+oldaddr], rax", "jz      short loc_9476"], ["mov~rax,[sp_0+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [2, 0, 83, 2, 1, 12, 2, 2, 16, 4, 0.02168699822750495, ["mov     rax, [sp_0+20h]", "mov     [rbp+oldaddr], rax", "mov     rdx, [rbp+d_namelen]", "mov     rax, [rbp+len]", "add     rax, rdx", "add     rax, 1", "mov     rsi, rax; more", "mov     rdi, sp_0; sp_0", "call    fts_palloc", "xor     eax, 1", "test    al, al", "jz      short loc_944C"], ["mov~rax,[sp_0+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 83, 0, 0, 3, 1, 1, 25, 9, 0.004379105411323116, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jnz     short loc_9671"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 86, 0, 0, 5, 2, 1, 8, 10, 0.20388906266291315, ["mov     [rbp+len], rax", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_927D"], ["mov~[rbp+0],rax", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 83, 0, 0, 5, 2, 1, 18, 5, 0.004379105411323116, ["mov     [rbp+doadjust], 1", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_9476"], ["mov~[rbp+0],0", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 118, 0, 3, 16, 2, 4, 8, 3, 0.0009905119382754666, ["mov     rax, [rbp+cur]", "mov     rsi, rax; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     rax, [rbp+cur]", "mov     edx, 0", "mov     rsi, rax", "mov     rdi, sp_0", "call    fts_stat", "mov     rax, [rbp+cur]", "mov     rsi, rax; ent", "mov     rdi, sp_0; fts", "call    enter_dir", "xor     eax, 1", "test    al, al", "jz      short loc_9082"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 83, 1, 0, 4, 0, 0, 19, 5, 0.0, ["mov     rdx, [sp_0+20h]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+cp], rax"], ["mov~rdx,[sp_0+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 83, 1, 0, 3, 0, 0, 25, 8, 0.09722656657282869, ["add     nitems, 1", "cmp     [rbp+max_entries], nitems", "jbe     short loc_96BA"], ["add~nitems,0", "cmp~[rbp+0],nitems", "jbe~FOO"]], [0, 0, 83, 0, 1, 6, 0, 1, 26, 9, 0.0, ["mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+cur]", "mov     esi, edx; dir_fd", "mov     rdi, rax; p", "call    dirent_inode_sort_may_be_useful", "mov     [rbp+sort_by_inode], al"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al"]], [1, 0, 84, 1, 0, 9, 0, 1, 9, 9, 0.10173600250234595, ["mov     rdx, [sp_0+20h]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+cp], rax", "mov     rax, [rbp+cp]", "lea     rdx, [rax+1]", "mov     [rbp+cp], rdx", "mov     byte ptr [rax], 2Fh ; '/'", "jmp     short loc_9285"], ["mov~rdx,[sp_0+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 84, 0, 0, 1, 0, 0, 9, 9, 0.10173600250234595, ["mov     [rbp+cp], 0"], ["mov~[rbp+0],0"]], [0, 0, 83, 1, 0, 3, 0, 0, 18, 4, 0.01631738087790637, ["mov     rax, [sp_0+30h]", "sub     rax, [rbp+len]", "mov     [rbp+maxlen], rax"], ["mov~rax,[sp_0+0]", "sub~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 83, 0, 0, 4, 1, 1, 11, 7, 0.2813053904702325, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "jnz     loc_92C9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [6, 0, 83, 3, 0, 13, 0, 1, 10, 8, 0.20967573767073297, ["add     [rbp+len], 1", "mov     rax, [sp_0+30h]", "sub     rax, [rbp+len]", "mov     [rbp+maxlen], rax", "mov     rax, [rbp+cur]", "mov     rax, [rax+58h]", "add     rax, 1", "mov     [rbp+level], rax", "mov     [rbp+doadjust], 0", "mov     r14d, 0", "mov     [rbp+tail], 0", "mov     r13d, 0", "jmp     loc_967B"], ["add~[rbp+0],0", "mov~rax,[sp_0+0]", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~r14d,0", "mov~[rbp+0],0", "mov~r13d,0", "jmp~FOO"]], [0, 0, 83, 0, 0, 1, 0, 1, 18, 8, 0.004639766447711396, ["jmp     loc_967B"], ["jmp~FOO"]], [0, 0, 116, 0, 0, 3, 1, 1, 2, 16, 0.09441142737983525, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jz      short loc_9094"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 120, 0, 1, 10, 1, 1, 1, 4, 0.006255864873318736, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     [rbp+dp], rax", "mov     rax, [rbp+dp]", "mov     rdi, rax; dirp", "call    _dirfd", "mov     [rbp+dir_fd], eax", "mov     eax, [rbp+dir_fd]", "test    eax, eax", "jns     loc_9082"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "test~eax,eax", "jns~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 12, 10, 0.09649671567094151, ["jmp     short loc_968F"], ["jmp~FOO"]], [0, 0, 34, 0, 0, 1, 0, 0, 14, 10, 0.012251068710249191, ["nop"], ["nop"]], [0, 0, 40, 0, 1, 4, 1, 2, 13, 11, 0.028516317380877905, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      loc_968E"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 16, 11, 0.007298509018871859, ["mov     rax, [rbp+cur]", "mov     [rax+70h], dx", "jmp     loc_968E"], ["mov~rax,[rbp+0]", "mov~[rax+0],dx", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 3, 15, 0.04934313418830153, ["mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_9099"], ["mov~rax,0", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 3, 15, 0.04934313418830153, ["mov     eax, 186A0h"], ["mov~eax,0"]], [0, 0, 83, 0, 0, 3, 1, 1, 19, 14, 0.09972891252215618, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jz      short loc_9574"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 83, 1, 0, 7, 0, 0, 16, 3, 0.10577624856636429, ["mov     rdx, [rbp+len]", "mov     rax, [rbp+d_namelen]", "add     rax, rdx", "mov     [rbp+new_len], rax", "mov     rax, [rbp+new_len]", "cmp     rax, [rbp+len]", "jnb     short loc_94EF"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 83, 0, 0, 3, 0, 0, 15, 4, 0.11145865915962881, ["mov     rax, [rbp+d_namelen]", "cmp     rax, [rbp+maxlen]", "jb      loc_9482"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 33, 0, 0, 4, 1, 1, 13, 9, 0.10739234699197163, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "jz      short loc_96BD"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 113, 0, 0, 3, 0, 1, 4, 14, 0.1095818996976332, ["mov     [rbp+max_entries], rax", "cmp     [rbp+continue_readdir], 0", "jz      short loc_90B2"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 31, 0, 1, 7, 0, 2, 14, 8, 0.049603795224689815, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "jmp     short break_without_closedir"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 5, 16, 0.021895527056615575, ["cmp     [rbp+type], 2", "jz      short loc_9109"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 26, 8, 0.04087165050568241, ["nop", "jmp     short break_without_closedir"], ["nop", "jmp~FOO"]], [0, 0, 31, 0, 0, 1, 0, 0, 14, 8, 0.049603795224689815, ["nop"], ["nop"]], [1, 0, 110, 0, 0, 4, 2, 1, 6, 16, 0.005473881764153894, ["mov     eax, [sp_0+48h]", "and     eax, 8", "test    eax, eax", "jz      short loc_9102"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 15, 7, 0.13981857991867375, ["cmp     [rbp+doadjust], 0", "jz      short loc_96D2"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 109, 0, 0, 4, 2, 1, 7, 16, 0.003492857887602961, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_9102"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 29, 0, 1, 3, 0, 1, 16, 7, 0.0, ["mov     rsi, head; head", "mov     rdi, sp_0; sp_0", "call    fts_padjust"], ["mov~rsi,head", "mov~rdi,sp_0", "call~FOO"]], [0, 1, 108, 0, 0, 4, 2, 1, 8, 16, 0.0025023459493274947, ["mov     eax, [sp_0+48h]", "and     eax, 20h", "test    eax, eax", "jnz     short loc_9102"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [2, 1, 139, 1, 0, 22, 2, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    head", "push    nitems", "push    p", "push    sp_0", "sub     rsp, 90h", "mov     sp_0, rdi; p", "mov     [rbp+type], esi", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "mov     rax, [sp_0]", "mov     [rbp+cur], rax", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "setnz   al", "mov     [rbp+continue_readdir], al", "mov     [rbp+sort_by_inode], 0", "cmp     [rbp+continue_readdir], 0", "jz      short loc_8F4F"], ["push~rbp", "mov~rbp,rsp", "push~head", "push~nitems", "push~p", "push~sp_0", "sub~rsp,<STR>", "mov~sp_0,rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "setnz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 27, 0, 0, 3, 0, 1, 17, 8, 0.01579605880512981, ["mov     rax, [sp_0+30h]", "cmp     [rbp+len], rax", "jz      short loc_96EB"], ["mov~rax,[sp_0+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 107, 0, 0, 4, 0, 1, 9, 16, 0.0014075695964967155, ["mov     rax, [rbp+cur]", "mov     rax, [rax+88h]", "cmp     rax, 2", "jnz     short loc_9102"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 18, 7, 0.0032843290584923363, ["test    nitems, nitems", "jnz     short loc_96F0"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 25, 1, 0, 1, 0, 0, 18, 7, 0.0032843290584923363, ["sub     [rbp+cp], 1"], ["sub~[rbp+0],0"]], [2, 0, 83, 0, 2, 9, 0, 3, 12, 6, 0.1801689083515796, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _readdir", "mov     [rbp+dp_0], rax", "cmp     [rbp+dp_0], 0", "jnz     short loc_9333"], ["call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 106, 0, 1, 7, 1, 2, 10, 16, 0.00020852882911062454, ["mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+cur]", "mov     esi, edx; dir_fd", "mov     rdi, rax; p", "call    leaf_optimization_0", "test    eax, eax", "jnz     short loc_9109"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 5, 0, 1, 8, 0, 2, 2, 3, 0.0005213220727765613, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "cmp     [rbp+type], 3", "jnz     short loc_8F45"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 7, 15, 0.02439787300594307, ["mov     eax, 1", "jmp     short loc_910E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 104, 0, 0, 1, 0, 0, 6, 15, 0.022729642373058075, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 22, 0, 0, 2, 0, 1, 18, 5, 0.038682097800020854, ["cmp     [rbp+descend], 0", "jz      short loc_9789"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 39, 0, 1, 6, 0, 2, 14, 13, 0.018142008132624336, ["call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx", "cmp     [rbp+continue_readdir], 0", "jnz     short loc_931A"], ["call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 15, 13, 0.00458763424043374, ["test    nitems, nitems", "jz      short loc_9321"], ["test~nitems,nitems", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 19, 6, 0.03346887707225524, ["cmp     [rbp+type], 1", "jz      short loc_9720"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 20, 5, 0.0006777186946095297, ["test    nitems, nitems", "jnz     short loc_9789"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 15, 12, 0.007350641226149515, ["mov     edx, 7", "jmp     short loc_9326"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 83, 0, 0, 13, 2, 1, 17, 16, 0.10019810238765509, ["mov     rax, [rbp+level]", "mov     [p+58h], rax", "mov     rax, [sp_0]", "mov     [p+8], rax", "mov     rax, [rbp+new_len]", "mov     [p+48h], rax", "mov     rax, [rbp+dp_0]", "mov     rax, [rax]", "mov     [p+80h], rax", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_954E"], ["mov~rax,[rbp+0]", "mov~[p+0],rax", "mov~rax,<TAG>", "mov~[p+0],rax", "mov~rax,[rbp+0]", "mov~[p+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[p+0],rax", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 1, 0, 0, 16, 12, 0.0009383797309978104, ["mov     edx, 4"], ["mov~edx,0"]], [2, 0, 103, 0, 0, 4, 1, 1, 7, 14, 0.05651131268897925, ["mov     [rbp+descend], al", "and     [rbp+descend], 1", "cmp     [rbp+descend], 0", "jnz     short loc_9131"], ["mov~[rbp+0],al", "and~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 20, 5, 0.022833906787613385, ["mov     rax, [rbp+cur]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_973C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 1, 83, 0, 0, 4, 2, 1, 13, 5, 0.1470128245229903, ["mov     eax, [sp_0+48h]", "and     eax, 20h", "test    eax, eax", "jnz     short loc_9376"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 1, 3, 3, 0.0, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 4", "call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [1, 0, 83, 0, 0, 4, 0, 1, 14, 5, 0.019445313314565737, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+13h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_9376"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 18, 4, 0.06829319153372954, ["test    nitems, nitems", "jnz     short loc_97CC"], ["test~nitems,nitems", "jnz~FOO"]], [0, 0, 83, 0, 1, 10, 0, 2, 18, 15, 0.047805234073610675, ["mov     rax, [p+38h]", "mov     [p+30h], rax", "mov     rax, [p+60h]", "lea     rdx, [rax+1]; n", "lea     rcx, [p+108h]", "mov     rax, [rbp+cp]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memmove", "jmp     short loc_955B"], ["mov~rax,[p+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "lea~rcx,[p+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 83, 0, 0, 2, 0, 0, 18, 15, 0.047805234073610675, ["lea     rax, [p+108h]", "mov     [p+30h], rax"], ["lea~rax,[p+0]", "mov~[p+0],rax"]], [1, 0, 134, 0, 0, 4, 2, 1, 1, 8, 0.0008862475237201543, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_8F77"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [3, 0, 100, 0, 1, 7, 0, 1, 9, 16, 0.0, ["mov     eax, [rbp+dir_fd]", "mov     edx, 3", "mov     esi, 406h; action", "mov     edi, eax; fd", "mov     eax, 0", "call    rpl_fcntl", "mov     [rbp+dir_fd], eax"], ["mov~eax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax"]], [0, 1, 101, 0, 0, 4, 2, 1, 8, 16, 0.017203628401626526, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_915F"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 133, 0, 0, 4, 2, 1, 2, 8, 0.00020852882911062454, ["mov     eax, [sp_0+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_8F70"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 99, 0, 0, 3, 1, 1, 9, 15, 0.02439787300594307, ["mov     eax, [rbp+dir_fd]", "test    eax, eax", "js      short loc_918B"], ["mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [0, 0, 83, 0, 0, 4, 1, 1, 22, 14, 0.008706078615368575, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+12h]", "test    al, al", "jz      short loc_95A7"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 83, 0, 0, 4, 2, 1, 21, 14, 0.012980919612136377, ["mov     eax, [sp_0+48h]", "and     eax, 8", "test    eax, eax", "jz      short loc_95A7"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 132, 0, 0, 4, 1, 1, 3, 8, 5.2132207277656134e-05, ["mov     rax, [rbp+cur]", "mov     rax, [rax+58h]", "test    rax, rax", "jz      short loc_8F77"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 83, 0, 0, 4, 1, 1, 17, 5, 0.006672922531539985, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+15h]", "test    al, al", "jnz     short loc_9376"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jnz~FOO"]], [1, 0, 130, 0, 0, 2, 0, 1, 3, 7, 0.010165780419142945, ["mov     edi, 20000h", "jmp     short loc_8F7C"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 130, 0, 0, 1, 0, 0, 2, 7, 0.010843499113752476, ["mov     edi, 0"], ["mov~edi,0"]], [1, 0, 83, 0, 0, 4, 2, 1, 20, 14, 0.025544781566051507, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_95A7"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 129, 0, 0, 6, 2, 1, 3, 6, 0.03425086018142008, ["mov     rax, [rbp+cur]", "mov     rsi, [rax+30h]; dir", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8F9F"], ["mov~rax,[rbp+0]", "mov~rsi,[rax+0]", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 1, 7, 3, 0.0, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 4", "call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [1, 0, 5, 0, 0, 2, 0, 1, 6, 3, 0.002710874778438119, ["cmp     [rbp+type], 3", "jnz     short loc_8FF0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 10, 15, 0.01063497028464185, ["cmp     [rbp+descend], 0", "jz      short loc_91AB"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 19, 3, 0.027421541028047128, ["cmp     [rbp+type], 3", "jnz     short loc_97BD"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 128, 0, 0, 4, 2, 1, 4, 6, 0.00036492545094359295, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_8F9F"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 95, 0, 0, 2, 0, 1, 11, 15, 0.0018246272547179647, ["cmp     [rbp+type], 3", "jnz     short loc_91AB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 126, 0, 0, 2, 0, 1, 5, 5, 0.0032843290584923363, ["mov     eax, [sp_0+2Ch]", "jmp     short loc_8FA4"], ["mov~eax,[sp_0+0]", "jmp~FOO"]], [1, 0, 83, 0, 0, 4, 0, 1, 23, 14, 0.004379105411323116, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+12h]", "cmp     al, 4", "jz      short loc_95A7"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 126, 0, 0, 1, 0, 0, 4, 5, 0.043165467625899276, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [1, 0, 6, 0, 0, 4, 0, 1, 20, 3, 0.011990407673860911, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 4", "jz      short loc_97BD"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 24, 13, 0.0020852882911062453, ["mov     eax, 1", "jmp     short loc_95AC"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 83, 0, 0, 1, 0, 0, 21, 13, 0.018402669169012616, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 94, 0, 1, 4, 0, 1, 12, 15, 0.0, ["call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx"], ["call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [1, 0, 83, 1, 2, 15, 1, 3, 14, 4, 0.1304869148159733, ["mov     rax, [rbp+dp_0]", "add     rax, 13h", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+d_namelen], rax", "mov     rax, [rbp+dp_0]", "lea     rcx, [rax+13h]", "mov     rax, [rbp+d_namelen]", "mov     rdx, rax", "mov     rsi, rcx", "mov     rdi, sp_0", "call    fts_alloc", "mov     p, rax; nitems", "test    p, p", "jz      short loc_93E5"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rsi,rcx", "mov~rdi,sp_0", "call~FOO", "mov~p,rax", "test~p,p", "jz~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 21, 3, 0.0060473360442081115, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 7", "jz      short loc_97BD"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 22, 3, 0.0, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 6"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0"]]], "func_feature": [46, 81, 148, 1, 140, 216, 4, 651, 0.03708, 3, 17], "succs": [[17, 18], [0, 2], [0], [9], [9, 3], [32, 21], [5, 125], [19], [122, 7], [33], [9, 4], [108, 95], [11, 86], [11], [33], [126, 14], [18], [16, 18], [22], [36, 31], [19], [63], [37, 30], [22], [22], [22], [22], [22], [22], [22], [], [42], [53, 63], [41, 38], [33], [33, 113], [42], [], [51], [26], [26], [51], [50, 55], [28, 108], [43], [43], [137, 119], [60, 46], [59, 52], [48, 39], [56, 55], [57, 58], [59, 54], [25, 63], [59], [60, 78], [55], [61], [61], [72], [65, 90], [60], [60], [69, 70], [92, 63], [74], [74], [96, 66], [66], [75], [75], [8, 122], [27, 101], [72, 49], [76, 79], [34, 77], [81], [80, 94], [81], [81], [82, 93], [83, 12], [84, 93], [12], [93, 87], [64, 111], [88, 89], [91, 93], [89, 13], [13], [105, 67], [93, 94], [106, 23], [103], [103], [98, 108], [97, 100], [100, 102], [104, 99], [104, 108], [68], [109, 110], [68], [113, 35], [44, 45], [137, 107], [23], [137, 47], [1, 127], [71], [71], [121, 114], [115], [112, 115], [120, 118], [126, 15], [131, 135], [116, 135], [120, 121], [137, 62], [123], [123], [117, 135], [128, 132], [24], [24, 124], [129, 10], [133, 29], [130, 132], [136, 10], [6], [134, 135], [6], [138, 29], [20], [20], [10], [40, 73], [139, 29], [29]], "fname": "fts_build", "n_num": 140}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 31, 0, 0, 5, 2, 1, 0, 0, 0.08288770053475936, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 2", "test    eax, eax", "jnz     short loc_988C"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 34, 1, 0, 13, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p", "sub     rsp, 28h", "mov     [rbp+sp_0], rdi", "mov     p, rsi", "mov     eax, edx", "mov     [rbp+follow], al", "lea     rax, [p+78h]", "mov     [rbp+sbp], rax", "mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_9878"], ["push~rbp", "mov~rbp,rsp", "push~p", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~p,rsi", "mov~eax,edx", "mov~[rbp+0],al", "lea~rax,[p+0]", "mov~[rbp+0],rax", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 33, 0, 0, 5, 2, 1, 1, 6, 0.00089126559714795, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_9878"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 32, 0, 0, 1, 0, 0, 2, 6, 0.0, ["mov     [rbp+follow], 1"], ["mov~[rbp+0],0"]], [0, 1, 24, 0, 1, 9, 1, 2, 3, 3, 0.018270944741532975, ["mov     rsi, [p+30h]; filename", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     rdx, [rbp+sbp]; stat_buf", "mov     ecx, 100h; flag", "mov     edi, eax; fildes", "call    fstatat", "test    eax, eax", "jz      short loc_9934"], ["mov~rsi,[p+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rdx,[rbp+0]", "mov~ecx,<STR>", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 2, 4, 0.00980392156862745, ["cmp     [rbp+follow], 0", "jz      short loc_98EB"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 5, 3, 0.0730837789661319, ["mov     rax, 0FFFFFFFFFFFFFFFFh"], ["mov~rax,0"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 4, 0.09982174688057041, ["mov     rax, [rbp+sbp]", "mov     rax, [rax+10h]", "cmp     rax, 1", "jbe     short loc_998C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jbe~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 5, 4, 0.0320855614973262, ["mov     rax, [p+58h]", "test    rax, rax", "jle     short loc_998C"], ["mov~rax,[p+0]", "test~rax,rax", "jle~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 4, 2, 0.006238859180035651, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.000445632798573975, ["mov     eax, 8", "jmp     short loc_9A1A"], ["mov~eax,0", "jmp~FOO"]], [0, 2, 3, 0, 0, 5, 1, 1, 5, 2, 0.0160427807486631, ["mov     rax, [rbp+sbp]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_9A15"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.000445632798573975, ["mov     eax, 3"], ["mov~eax,0"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, 0, 0.0, ["add     rsp, 28h", "pop     p", "pop     rbp", "retn"], ["add~rsp,0", "pop~p", "pop~rbp", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 5, 1, 0.002525252525252525, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0Dh", "jmp     loc_9A1A"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 1, 1, 0, 1, 7, 0, 2, 5, 1, 0.006090314913844325, ["mov     rax, [rbp+sbp]", "mov     edx, 90h; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, 0Ah", "jmp     loc_9A1A"], ["mov~rax,[rbp+0]", "mov~edx,<STR>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 9, 1, 0.000742721330956625, ["mov     eax, 1", "jmp     short loc_9A1A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 9, 1, 0.000742721330956625, ["mov     eax, 5", "jmp     short loc_9A1A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 7, 1, 0.009209744503862149, ["mov     eax, 1", "jmp     short loc_9A1A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.0029708853238265, ["mov     eax, 0Ch", "jmp     short loc_9A1A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 6, 2, 0.09982174688057041, ["mov     [p+68h], rax", "movzx   eax, byte ptr [p+108h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_99DA"], ["mov~[p+0],rax", "movzx~eax,[yte ptr [p+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 9, 1, 0, 3, 0, 1, 8, 3, 0.02406417112299465, ["sub     rdx, rax", "mov     rax, rdx", "jmp     short loc_9993"], ["sub~rdx,rax", "mov~rax,rdx", "jmp~FOO"]], [0, 0, 27, 0, 1, 7, 1, 2, 2, 4, 0.10650623885918004, ["mov     rax, [p+30h]", "mov     rdx, [rbp+sbp]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "test    eax, eax", "jz      loc_9934"], ["mov~rax,[p+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 7, 3, 0.071301247771836, ["movzx   eax, byte ptr [p+109h]", "test    al, al", "jz      short loc_99C3"], ["movzx~eax,[yte ptr [p+0]", "test~al,al", "jz~FOO"]], [1, 1, 5, 0, 0, 5, 1, 1, 4, 2, 0.030600118835412946, ["mov     rax, [rbp+sbp]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_99FB"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 2, 21, 0, 0, 5, 1, 1, 3, 3, 0.1259655377302436, ["mov     rax, [rbp+sbp]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_99E1"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 2, 4, 2, 0.006090314913844325, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "jmp     short err"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, 3, 0.021093285799168148, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 2", "jnz     short loc_98DF"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, 2, 0.01633986928104575, ["movzx   eax, byte ptr [p+109h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_99DA"], ["movzx~eax,[yte ptr [p+0]", "cmp~al,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 4, 0.0089126559714795, ["mov     eax, 0", "jmp     short loc_9984"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 7, 4, 0.0089126559714795, ["mov     eax, 2"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 2, 0.00267379679144385, ["movzx   eax, byte ptr [p+10Ah]", "test    al, al", "jnz     short loc_99DA"], ["movzx~eax,[yte ptr [p+0]", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 4, 2, 0.007872846108140224, ["mov     rax, [p+30h]", "mov     rdx, [rbp+sbp]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    lstat", "test    eax, eax", "jnz     short loc_98DF"], ["mov~rax,[p+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 8, 2, 0.03446226975638741, ["mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_99D3"], ["mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [0, 1, 12, 0, 0, 7, 2, 1, 6, 5, 0.026737967914438502, ["mov     rax, [rbp+sbp]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 20h", "test    eax, eax", "jz      short loc_997F"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]]], "func_feature": [8, 17, 36, 0, 35, 53, 8, 138, 0.02725, 0, 3], "succs": [[5, 22], [0, 2], [0, 3], [0], [9, 25], [4, 22], [20], [8, 6], [34, 6], [15], [13], [10, 12], [13], [], [13], [13], [13], [13], [13], [13], [18, 23], [20], [25, 27], [33, 28], [19, 11], [24, 7], [15], [32, 26], [18, 31], [21], [21], [33, 18], [26, 14], [16, 17], [29, 30]], "fname": "fts_stat", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 0, 1, 1, 20, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     [rbp+pa], rax", "mov     rax, [rbp+b]", "mov     [rbp+pb], rax", "mov     rax, [rbp+pa]", "mov     rax, [rax]", "mov     rax, [rax+50h]", "mov     rax, [rax+40h]", "mov     rcx, [rbp+pb]", "mov     rdx, [rbp+pa]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 20, 0.0, 0, 1], "succs": [[]], "fname": "fts_compar", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 14, 1, 0, 19, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p", "push    nitems", "push    ap", "sub     rsp, 38h", "mov     [rbp+sp_0], rdi", "mov     [rbp+head], rsi", "mov     nitems, rdx", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+40h]", "mov     [rbp+compare], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+38h]", "cmp     nitems, rax", "jbe     loc_9B35"], ["push~rbp", "mov~rbp,rsp", "push~p", "push~nitems", "push~ap", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~nitems,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~nitems,rax", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 0, 6, 0.14835164835164835, ["mov     rax, [rbp+sp_0]", "mov     ap, [rax+10h]", "mov     p, [rbp+head]", "jmp     short loc_9B51"], ["mov~rax,[rbp+0]", "mov~ap,[rax+0]", "mov~p,[rbp+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 0, 7, 0.07692307692307693, ["mov     rax, [rbp+sp_0]", "mov     rdx, [rbp+a]", "mov     [rax+10h], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "pop     ap", "pop     nitems", "pop     p", "pop     rbp", "retn"], ["add~rsp,0", "pop~ap", "pop~nitems", "pop~p", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.13186813186813187, ["mov     rcx, [rbp+var_28]", "xor     rcx, fs:28h", "jz      short loc_9BC1"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [2, 0, 3, 0, 1, 10, 0, 2, 0, 2, 0.049450549450549455, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+38h], 0", "mov     rax, [rbp+head]", "jmp     loc_9BAD"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 13, 0, 0, 8, 0, 1, 0, 3, 0.03296703296703297, ["lea     rdx, [nitems+28h]", "mov     rax, [rbp+sp_0]", "mov     [rax+38h], rdx", "mov     rax, [rbp+sp_0]", "mov     rdx, [rax+38h]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "ja      short loc_9AF8"], ["lea~rdx,[nitems+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 12, 0, 1, 11, 0, 2, 0, 3, 0.049450549450549455, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+38h]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+a], rax", "cmp     [rbp+a], 0", "jnz     short loc_9B29"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 0, 4, 0.0, ["mov     rax, [ap]", "mov     rdx, [ap+8]", "mov     [rax+10h], rdx", "add     ap, 8"], ["mov~rax,<TAG>", "mov~rdx,[ap+0]", "mov~[rax+0],rdx", "add~ap,0"]], [1, 0, 6, 1, 0, 3, 1, 1, 0, 3, 0.19230769230769232, ["sub     nitems, 1", "test    nitems, nitems", "jnz     short loc_9B86"], ["sub~nitems,0", "test~nitems,nitems", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 0, 2, 0.11538461538461539, ["mov     rax, [ap]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+head]"], ["mov~rax,<TAG>", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 6, 0.0, ["mov     rax, ap", "lea     ap, [rax+8]", "mov     [rax], p", "mov     p, [p+10h]"], ["mov~rax,ap", "lea~ap,[rax+0]", "mov~<TAG>,p", "mov~p,[p+0]"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 5, 0.2087912087912088, ["test    p, p", "jnz     short loc_9B43"], ["test~p,p", "jnz~FOO"]], [1, 0, 6, 0, 1, 13, 0, 2, 0, 4, 0.18131868131868134, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rdx, [rbp+compare]", "mov     rcx, rdx; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "mov     rdi, rax; base", "call    _qsort", "mov     rax, [rbp+sp_0]", "mov     ap, [rax+10h]", "mov     rax, [ap]", "mov     [rbp+head], rax", "jmp     short loc_9B95"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rsi,nitems", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~ap,[rax+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [4, 4, 12, 1, 15, 19, 3, 94, 0.07912, 1, 4], "succs": [[1, 6], [13], [1], [], [11, 3], [4], [5, 7], [2, 5], [9], [8, 10], [4], [], [13], [12, 14], [9]], "fname": "fts_sort", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[7, 0, 1, 0, 1, 20, 0, 1, 0, 0, 0.08333333333333333, ["lea     rax, [p+108h]", "mov     rcx, [rbp+name]", "mov     rdx, namelen; n", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     byte ptr [p+namelen+108h], 0", "mov     [p+60h], namelen", "mov     rax, [rbp+sp_0]", "mov     [p+50h], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     [p+38h], rax", "mov     dword ptr [p+40h], 0", "mov     qword ptr [p+18h], 0", "mov     word ptr [p+72h], 0", "mov     word ptr [p+74h], 3", "mov     qword ptr [p+20h], 0", "mov     qword ptr [p+28h], 0", "mov     rax, p"], ["lea~rax,[p+0]", "mov~rcx,[rbp+0]", "mov~rdx,namelen", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[yte ptr [p+0],0", "mov~[p+0],namelen", "mov~rax,[rbp+0]", "mov~[p+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[p+0],rax", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[ord ptr [p+0],0", "mov~[ord ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~rax,p"]], [1, 1, 3, 1, 1, 17, 2, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    namelen", "push    p", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+name], rsi", "mov     namelen, rdx", "lea     rax, [namelen+110h]", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     [rbp+len], rax", "mov     rax, [rbp+len]", "mov     rdi, rax; size", "call    _malloc", "mov     p, rax", "test    p, p", "jnz     short loc_9C0D"], ["push~rbp", "mov~rbp,rsp", "push~namelen", "push~p", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~namelen,rdx", "lea~rax,[namelen+0]", "and~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~p,rax", "test~p,p", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, 0", "jmp     short loc_9C75"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     p", "pop     namelen", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p", "pop~namelen", "pop~rbp", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 44, 0.04167, 0, 2], "succs": [[3], [0, 2], [3], []], "fname": "fts_alloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 5, 0, 1, 2, 0, 1, 0, 0, 0.25, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 2, 3, 0.25, ["mov     head, [head+10h]", "mov     rax, [p+18h]", "test    rax, rax", "jz      short loc_9CA4"], ["mov~head,[head+0]", "mov~rax,[p+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 1, 3, 0, 1, 3, 3, 0.0, ["mov     rax, [p+18h]", "mov     rdi, rax; dirp", "call    _closedir"], ["mov~rax,[p+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    head", "push    p", "mov     head, rdi", "jmp     short loc_9CAC"], ["push~rbp", "mov~rbp,rsp", "push~head", "push~p", "mov~head,rdi", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 1, 1, 0.5, ["mov     p, head", "test    p, p", "jnz     short loc_9C8A"], ["mov~p,head", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["nop", "pop     p", "pop     head", "pop     rbp", "retn"], ["nop", "pop~p", "pop~head", "pop~rbp", "retn"]]], "func_feature": [2, 2, 5, 0, 6, 7, 9, 23, 0.16667, 0, 0], "succs": [[4], [0, 2], [0], [4], [1, 5], []], "fname": "fts_lfree", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0.025, ["mov     rax, [rbp+sp_0]", "mov     rdx, [rbp+p]", "mov     [rax+20h], rdx", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0"]], [1, 0, 3, 0, 1, 13, 0, 2, 1, 2, 0.1, ["mov     rax, [rbp+sp_0]", "mov     rdx, [rbp+new_len]", "mov     [rax+30h], rdx", "mov     rax, [rbp+sp_0]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_9D74"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [3, 0, 1, 0, 2, 10, 0, 3, 1, 1, 0.05, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+20h], 0", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "mov     eax, 0", "jmp     short locret_9D85"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 8, 0, 2, 2, 1, 0.025, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+20h], 0", "mov     eax, 0", "jmp     short locret_9D85"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~eax,0", "jmp~FOO"]], [0, 2, 5, 3, 0, 15, 0, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+more], rsi", "mov     rax, [rbp+sp_0]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+more]", "add     rax, rdx", "add     rax, 100h", "mov     [rbp+new_len], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+30h]", "cmp     [rbp+new_len], rax", "jnb     short loc_9D1F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnb~FOO"]]], "func_feature": [4, 0, 7, 0, 6, 7, 2, 52, 0.03333, 0, 3], "succs": [[2], [0, 4], [], [2], [2], [1, 3]], "fname": "fts_palloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 13, 1, 0, 6, 0, 1, 0, 0, 0.03205128205128205, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+p]", "add     rdx, 108h", "cmp     rax, rdx", "jz      short loc_9DF0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "add~rdx,0", "cmp~rax,rdx", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 3, 0.2692307692307692, ["cmp     [rbp+p], 0", "jnz     short loc_9DAD"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 6, 0, 0, 3, 4, 0.1346153846153846, ["mov     rax, [rbp+p]", "mov     rdx, [rbp+addr]", "mov     [rax+38h], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax+10h]", "mov     [rbp+p], rax"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 13, 2, 0, 12, 0, 0, 3, 5, 0.0, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rax, [rax+38h]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+addr]", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax+30h], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 8, 0, 0, 1, 0, 0, 7, 2, 0.1346153846153846, ["mov     [rbp+p], rax"], ["mov~[rbp+0],rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 6, 3, 0.060897435897435896, ["mov     rax, [rbp+p]", "mov     rax, [rax+10h]", "jmp     short loc_9E87"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 3, 0.060897435897435896, ["mov     rax, [rbp+p]", "mov     rax, [rax+8]"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]"]], [0, 0, 13, 0, 0, 11, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+sp_0], rdi", "mov     [rbp+head], rsi", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     [rbp+addr], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+8]", "mov     [rbp+p], rax", "jmp     short loc_9E08"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 4, 5, 0.2948717948717949, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+p]", "add     rdx, 108h", "cmp     rax, rdx", "jz      short loc_9E5C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "add~rdx,0", "cmp~rax,rdx", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 0, 3, 1, 0.41025641025641024, ["mov     rax, [rbp+p]", "mov     rax, [rax+58h]", "test    rax, rax", "jns     short loc_9E19"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jns~FOO"]], [0, 0, 8, 0, 0, 7, 1, 1, 5, 4, 0.23076923076923075, ["mov     rax, [rbp+p]", "mov     rdx, [rbp+addr]", "mov     [rax+38h], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_9E7F"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 2, 0, 12, 0, 0, 5, 5, 0.0, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rax, [rax+38h]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+addr]", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax+30h], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 8, 0, 0, 3, 0, 1, 2, 2, 0.2564102564102564, ["mov     rax, [rbp+head]", "mov     [rbp+p], rax", "jmp     short loc_9E8B"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]]], "func_feature": [0, 2, 7, 0, 14, 18, 1, 78, 0.13462, 0, 6], "succs": [[2, 3], [0, 12], [1], [2], [9], [4], [4], [1], [10, 11], [8, 13], [5, 6], [10], [9], []], "fname": "fts_padjust", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.5, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_9EB1"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 1, 5, 1, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+argv], rdi", "mov     [rbp+max], 0", "jmp     short loc_9EDB"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 5, 1, 0, 1, 0, 0, 3, 2, 0.25, ["add     [rbp+argv], 8"], ["add~[rbp+0],0"]], [0, 0, 5, 0, 1, 8, 0, 1, 2, 3, 0.25, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     rax, [rbp+len]", "cmp     rax, [rbp+max]", "jbe     short loc_9ED6"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+max]", "add     rax, 1", "leave", "retn"], ["mov~rax,[rbp+0]", "add~rax,0", "leave", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+len]", "mov     [rbp+max], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [1, 1, 3, 0, 6, 7, 1, 25, 0.16667, 0, 3], "succs": [[3, 4], [0], [0], [2, 5], [], [2]], "fname": "fts_maxarglen", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 6, 0, 0, 5, 2, 1, 0, 0, 0.026737967914438502, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_9F9D"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [2, 0, 30, 0, 0, 7, 3, 1, 2, 4, 0.10695187165775401, ["mov     [rbp+is_dotdot], al", "and     [rbp+is_dotdot], 1", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_9FA7"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 4, 0.05258467023172905, ["cmp     [rbp+dir], 0", "jz      loc_A119"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 5, 5, 0.15062388591800355, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 2", "test    eax, eax", "jnz     short loc_A0A6"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [3, 0, 21, 1, 1, 8, 0, 2, 7, 5, 0.00802139037433155, ["mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; ir", "call    i_ring_pop", "mov     [rbp+parent_fd], eax", "mov     [rbp+is_dotdot], 1", "cmp     [rbp+parent_fd], 0", "js      short loc_A026"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "js~FOO"]], [2, 0, 22, 1, 1, 7, 2, 2, 6, 5, 0.0142602495543672, ["mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; ir", "call    i_ring_empty", "xor     eax, 1", "test    al, al", "jz      short loc_A026"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 3, 0.0053475935828877, ["cmp     [rbp+fd], 0", "js      short loc_9F9D"], ["cmp~[rbp+0],0", "js~FOO"]], [2, 0, 34, 1, 0, 12, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0E0h", "mov     [rbp+sp_0], rdi", "mov     [rbp+p], rsi", "mov     [rbp+fd], edx", "mov     [rbp+dir], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+dir], 0", "jz      short loc_9F51"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 6, 0, 1, 5, 0, 2, 8, 4, 0.0066844919786096255, ["call    ___errno_location", "mov     dword ptr [rax], 2", "mov     [rbp+ret], 0FFFFFFFFh", "nop", "jmp     short bail"], ["call~FOO", "mov~<TAG>,0", "mov~[rbp+0],0", "nop", "jmp~FOO"]], [0, 0, 11, 0, 0, 5, 0, 1, 7, 5, 0.03297682709447415, ["mov     rax, [rbp+p]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+sb.st_dev]", "cmp     rdx, rax", "jnz     short loc_A101"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 10, 0, 0, 5, 0, 1, 8, 4, 0.0066844919786096255, ["mov     rax, [rbp+p]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+sb.st_ino]", "cmp     rdx, rax", "jz      short loc_A119"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 5, 3, 0.0, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 0, 8, 5, 0.0, ["mov     eax, [rbp+parent_fd]", "mov     [rbp+fd], eax", "mov     [rbp+dir], 0"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~[rbp+0],0"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.0213903743315508, ["mov     eax, 0", "jmp     loc_A1AE"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 14, 0, 1, 6, 1, 2, 7, 4, 0.00445632798573975, ["mov     rax, [rbp+dir]", "lea     rsi, off_E997; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_A119"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 3, 10, 0, 3, 9, 3, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+oerrno], eax", "mov     eax, [rbp+newfd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+oerrno]", "mov     [rdx], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [1, 0, 5, 0, 0, 2, 0, 0, 8, 3, 0.053030303030303025, ["cmp     [rbp+fd], 0", "jns     short loc_A1A8"], ["cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 9, 2, 0.017379679144385027, ["mov     eax, [rbp+ret]"], ["mov~eax,[rbp+0]"]], [0, 1, 8, 0, 0, 5, 2, 1, 7, 3, 0.049910873440285206, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_A162"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 0, 3, 5, 0.09803921568627451, ["cmp     [rbp+fd], 0", "jns     short loc_A026"], ["cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 4, 5, 0.0213903743315508, ["cmp     [rbp+is_dotdot], 0", "jz      short loc_A026"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 19, 0, 0, 4, 0, 0, 4, 4, 0.1729055258467023, ["mov     eax, [rbp+fd]", "mov     [rbp+newfd], eax", "cmp     [rbp+fd], 0", "jns     short loc_A06D"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 1, 23, 0, 0, 5, 2, 1, 5, 5, 0.01871657754010695, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_A026"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.0570409982174688, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_A1C2"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0213903743315508, ["mov     eax, 0FFFFFFFFh", "jmp     loc_A1AE"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 3, 0, 1, 14, 3, 2, 8, 2, 0.014705882352941176, ["movzx   eax, [rbp+is_dotdot]", "test    eax, eax", "setnz   al", "xor     eax, 1", "movzx   eax, al", "and     eax, 1", "movzx   edx, al; chdir_down_one", "mov     ecx, [rbp+newfd]", "mov     rax, [rbp+sp_0]", "mov     esi, ecx; fd", "mov     rdi, rax; sp_0", "call    cwd_advance_fd", "mov     eax, 0", "jmp     short loc_A1AE"], ["movzx~eax,[rbp+0]", "test~eax,eax", "setnz~al", "xor~eax,0", "movzx~eax,al", "and~eax,0", "movzx~edx,al", "mov~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 13, 0, 1, 7, 1, 2, 6, 5, 0.09581105169340463, ["lea     rdx, [rbp+sb]", "mov     eax, [rbp+newfd]", "mov     rsi, rdx; stat_buf", "mov     edi, eax; fildes", "call    fstat", "test    eax, eax", "jz      short loc_A0D0"], ["lea~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 33, 0, 1, 6, 1, 2, 1, 6, 0.00089126559714795, ["mov     rax, [rbp+dir]", "lea     rsi, off_E997; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_9F51"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 7, 4, 0.044117647058823525, ["mov     [rbp+ret], 0FFFFFFFFh", "jmp     bail"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 5, 0.013814616755793225, ["mov     eax, 1", "jmp     short loc_9F56"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 1, 0, 0, 1, 5, 0.04144385026737968, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 18, 0, 1, 8, 0, 1, 5, 3, 0.029411764705882353, ["mov     rdx, [rbp+dir]", "mov     rax, [rbp+sp_0]", "mov     rsi, rdx; dir", "mov     rdi, rax; sp_0", "call    diropen", "mov     [rbp+newfd], eax", "cmp     [rbp+newfd], 0", "jns     short loc_A06D"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 8, 4, 0.0066844919786096255, ["mov     eax, [rbp+newfd]", "mov     edi, eax; fd", "call    _fchdir", "mov     [rbp+ret], eax"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax"]]], "func_feature": [14, 21, 37, 1, 35, 54, 4, 160, 0.0341, 2, 3], "succs": [[13, 6], [0, 19], [18, 14], [2, 27], [12, 21], [4, 21], [11, 13], [32, 29], [16], [8, 10], [8, 18], [13], [21], [23], [18, 27], [17], [17, 15], [23], [25, 34], [20, 21], [21, 22], [33, 3], [21, 5], [26, 28], [23], [23], [], [9, 30], [], [32, 31], [16], [1], [1], [24, 3], [16]], "fname": "fts_safe_changedir", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.1875, ["mov     rax, [rbp+ret]"], ["mov~rax,[rbp+0]"]], [1, 0, 7, 0, 1, 9, 0, 1, 1, 3, 0.19444444444444442, ["mov     rcx, [rbp+ps]; p", "mov     rdx, [rbp+n]; n", "mov     rsi, [rbp+s]; s", "mov     rax, [rbp+pwc]", "mov     rdi, rax; pwc", "call    _mbrtowc", "mov     [rbp+ret], rax", "cmp     [rbp+ret], 0FFFFFFFFFFFFFFFDh", "jbe     short loc_A250"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08333333333333333, ["cmp     [rbp+n], 0", "jz      short loc_A250"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 5, 0, 1, 5, 2, 2, 3, 3, 0.05555555555555555, ["mov     edi, 0; category", "call    hard_locale", "xor     eax, 1", "test    al, al", "jz      short loc_A250"], ["mov~edi,0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.19444444444444442, ["mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_A268"], ["mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 8, 0, 1, 4, 2, 0.020833333333333332, ["mov     rax, [rbp+s]", "movzx   eax, byte ptr [rax]", "mov     [rbp+uc], al", "movzx   edx, [rbp+uc]", "mov     rax, [rbp+pwc]", "mov     [rax], edx", "mov     eax, 1", "jmp     short loc_A254"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 9, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+pwc], rdi", "mov     [rbp+s], rsi", "mov     [rbp+n], rdx", "mov     [rbp+ps], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+pwc], 0", "jnz     short loc_A1FA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 1, 4, 0.0, ["lea     rax, [rbp+wc]", "mov     [rbp+pwc], rax"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [3, 4, 8, 1, 10, 13, 1, 45, 0.07361, 1, 1], "succs": [[5], [0, 2], [0, 3], [0, 6], [], [4, 7], [5], [], [9, 1], [1]], "fname": "rpl_mbrtowc", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     p2", "pop     p1", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p2", "pop~p1", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.023809523809523808, ["mov     eax, 0", "jmp     short loc_A2D9"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 4, 0, 0, 3, 0, 0.09523809523809523, ["movzx   edx, [rbp+c1]", "movzx   eax, [rbp+c2]", "sub     edx, eax", "mov     eax, edx"], ["movzx~edx,[rbp+0]", "movzx~eax,[rbp+0]", "sub~edx,eax", "mov~eax,edx"]], [0, 1, 7, 1, 0, 11, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p1", "push    p2", "sub     rsp, 20h", "mov     [rbp+s1], rdi", "mov     [rbp+s2], rsi", "mov     p1, [rbp+s1]", "mov     p2, [rbp+s2]", "cmp     p1, p2", "jnz     short loc_A291"], ["push~rbp", "mov~rbp,rsp", "push~p1", "push~p2", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~p1,[rbp+0]", "mov~p2,[rbp+0]", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 0, 0.047619047619047616, ["jmp     short loc_A2CD"], ["jmp~FOO"]], [2, 0, 6, 2, 0, 5, 0, 1, 2, 0, 0.047619047619047616, ["add     p1, 1", "add     p2, 1", "movzx   eax, [rbp+c1]", "cmp     al, [rbp+c2]", "jz      short loc_A291"], ["add~p1,0", "add~p2,0", "movzx~eax,[rbp+0]", "cmp~al,[rbp+0]", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 2, 0, 0.07142857142857142, ["nop"], ["nop"]], [1, 0, 6, 0, 2, 12, 0, 3, 1, 0, 0.11904761904761904, ["movzx   eax, byte ptr [p1]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c1], al", "movzx   eax, byte ptr [p2]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c2], al", "cmp     [rbp+c1], 0", "jz      short loc_A2CC"], ["movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [2, 0, 7, 0, 8, 10, 2, 41, 0.0506, 0, 5], "succs": [[], [0], [0], [1, 7], [2], [4, 7], [2], [5, 6]], "fname": "c_strcasecmp", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05357142857142857, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_A36B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 1, 2, 0.1607142857142857, ["movzx   eax, [rbp+fclose_fail]", "xor     eax, 1", "test    al, al", "jz      short loc_A35F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 2, 0, 1, 2, 0, 1, 2, 2, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05357142857142857, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.0625, ["cmp     [rbp+fclose_fail], 0", "jz      short loc_A366"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, 2, 0.026785714285714284, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 9", "jz      short loc_A366"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08928571428571427, ["cmp     [rbp+some_pending], 0", "jnz     short loc_A349"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 1, 8, 1, 3, 24, 3, 4, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+stream], rdi", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___fpending", "test    rax, rax", "setnz   al", "mov     [rbp+some_pending], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _ferror_unlocked", "test    eax, eax", "setnz   al", "mov     [rbp+prev_fail], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    rpl_fclose", "test    eax, eax", "setnz   al", "mov     [rbp+fclose_fail], al", "cmp     [rbp+prev_fail], 0", "jnz     short loc_A349"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~rax,rax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [5, 5, 11, 0, 9, 13, 2, 43, 0.0496, 0, 1], "succs": [[7], [0, 2], [0], [7], [3, 6], [1, 3], [1, 5], [], [1, 4]], "fname": "close_stream", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 1, 0, 10, 2, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+i], rdi", "mov     rax, [rbp+i]", "sub     rax, 1", "and     rax, [rbp+i]", "test    rax, rax", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "sub~rax,0", "and~rax,[rbp+0]", "test~rax,rax", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 2, 0, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "is_zero_or_power_of_two", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+state], rdi", "mov     rax, [rbp+state]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+state]", "mov     dword ptr [rax+18h], 95F616h", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 10, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.013636363636363636, ["mov     eax, 1", "jmp     short locret_A483"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 6, 0, 1, 3, 2, 0.031818181818181815, ["mov     rax, [rbp+sb]", "mov     rdx, [rax]", "mov     rax, [rbp+state]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_A424"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3559; \"cycle_check\"", "mov     edx, 3Ch ; '<'; line", "lea     rsi, aLibCycleCheckC; \"lib/cycle-check.c\"", "lea     rdi, aStateMagic9827; \"state->magic == 9827862\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [2, 0, 11, 1, 0, 9, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+state], rdi", "mov     [rbp+sb], rsi", "mov     rax, [rbp+state]", "mov     eax, [rax+18h]", "cmp     eax, 95F616h", "jz      short loc_A3E8"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.00909090909090909, ["mov     eax, 1", "jmp     short locret_A483"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.04090909090909091, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 8, 0, 0, 6, 0, 1, 2, 3, 0.03636363636363636, ["mov     rax, [rbp+sb]", "mov     rdx, [rax+8]", "mov     rax, [rbp+state]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_A424"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, 3, 0.08181818181818182, ["mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_A424"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 8, 0, 0, 4, 2, 0.00909090909090909, ["mov     rax, [rbp+sb]", "mov     rdx, [rax]", "mov     rax, [rbp+state]", "mov     [rax+8], rdx", "mov     rax, [rbp+sb]", "mov     rdx, [rax+8]", "mov     rax, [rbp+state]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]], [0, 0, 4, 0, 0, 4, 1, 1, 3, 2, 0.09090909090909091, ["mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_A460"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 5, 0, 1, 11, 1, 2, 2, 2, 0.16818181818181818, ["mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+state]", "mov     [rax+10h], rdx", "mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "mov     rdi, rax; i", "call    is_zero_or_power_of_two", "test    al, al", "jz      short loc_A47E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]]], "func_feature": [2, 3, 10, 0, 12, 16, 1, 60, 0.04015, 3, 1], "succs": [[4], [0, 11], [], [8, 2], [], [4], [4], [1, 11], [11, 7], [6], [9, 5], [10, 6]], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 7, 0, 0, 8, 3, 1, 0, 0, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+mode], 0", "mov     eax, [rbp+flags]", "and     eax, 40h", "test    eax, eax", "jz      short loc_A57B"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 1, 9, 1, 0, 11, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+file], rdi", "mov     [rbp+flags], esi", "mov     [rbp+var_A0], rdx", "mov     [rbp+var_98], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_A4DD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 2, 0, 2, 12, 1, 3, 2, 1, 0.19444444444444442, ["mov     edx, [rbp+mode]", "mov     ecx, [rbp+flags]", "mov     rax, [rbp+file]", "mov     esi, ecx; oflag", "mov     rdi, rax; file", "mov     eax, 0", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rbp+var_B8]", "xor     rsi, fs:28h", "jz      short locret_A5BB"], ["mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,ecx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.048611111111111105, ["mov     rax, [rbp+ap.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+ap.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [3, 0, 6, 0, 0, 9, 0, 1, 2, 4, 0.125, ["mov     [rbp+ap.gp_offset], 10h", "mov     [rbp+ap.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+ap.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+ap.reg_save_area], rax", "mov     eax, [rbp+ap.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_A561"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.125, ["mov     eax, [rax]", "mov     [rbp+mode], eax"], ["mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 0, 4, 2, 0, 8, 0, 1, 3, 3, 0.048611111111111105, ["mov     rax, [rbp+ap.reg_save_area]", "mov     edx, [rbp+ap.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+ap.gp_offset]", "add     edx, 8", "mov     [rbp+ap.gp_offset], edx", "jmp     short loc_A573"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 8, 14, 10, 12, 1, 64, 0.07361, 1, 3], "succs": [[4, 6], [0, 2], [0], [], [9, 3], [7], [8, 5], [4], [7], []], "fname": "open_safer", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.041666666666666664, ["mov     [rbp+hard], 0"], ["mov~[rbp+0],0"]], [0, 0, 3, 0, 1, 6, 1, 2, 1, 2, 0.16666666666666666, ["mov     rax, [rbp+p]", "lea     rsi, aC_0; \"C\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_A614"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 2, 1, 0.041666666666666664, ["mov     rax, [rbp+p]", "lea     rsi, aPosix; \"POSIX\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_A618"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 1, 4, 1, 1, 12, 0, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+category], edi", "mov     [rbp+hard], 1", "mov     eax, [rbp+category]", "mov     esi, 0; locale", "mov     edi, eax; category", "call    _setlocale", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jz      short loc_A618"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["movzx   eax, [rbp+hard]", "leave", "retn"], ["movzx~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [3, 2, 6, 0, 5, 7, 1, 28, 0.05, 2, 1], "succs": [[4], [0, 2], [0, 4], [1, 4], []], "fname": "hard_locale", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 9, 0, 0, 5, 0, 1, 0, 0, 0.40277777777777773, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_A68F"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 3, 5, 0.29166666666666663, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "mov     [rbp+bucket_length], 1", "jmp     short loc_A694"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 5, 0.0, ["add     [rbp+bucket_length], 1"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+max_bucket_length]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]], [0, 0, 9, 0, 0, 4, 0, 0, 1, 1, 0.4861111111111111, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_A671"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 9, 0, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+max_bucket_length], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_A6BE"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 3, 2, 0.3611111111111111, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 9, 0, 0, 4, 1, 1, 2, 3, 0.3611111111111111, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_A6B9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 6, 3, 0.0, ["mov     rax, [rbp+bucket_length]", "mov     [rbp+max_bucket_length], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 3, 0, 0, 5, 3, 0.29166666666666663, ["mov     rax, [rbp+bucket_length]", "cmp     rax, [rbp+max_bucket_length]", "jbe     short loc_A6B9"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]]], "func_feature": [0, 1, 4, 0, 10, 13, 1, 35, 0.21944, 0, 2], "succs": [[9, 2], [0], [0], [], [3, 7], [4], [4], [1, 6], [6], [8, 6]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 11, 0, 0, 4, 0, 0, 0, 0, 0.39999999999999997, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_A6F7"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 11, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+n_buckets_used], 0", "mov     [rbp+n_entries], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_A734"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 11, 1, 0, 1, 0, 0, 3, 4, 0.2636363636363636, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 5, 0.11818181818181818, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_A72F"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short loc_A76A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.07272727272727272, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "cmp     [rbp+n_entries], rax", "jnz     short loc_A765"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.07727272727272727, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 2, 0.2545454545454545, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "cmp     [rbp+n_buckets_used], rax", "jnz     short loc_A765"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 11, 0, 0, 5, 0, 1, 4, 5, 0.19999999999999998, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_A717"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 11, 2, 0, 5, 0, 1, 3, 6, 0.07272727272727272, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "add     [rbp+n_buckets_used], 1", "add     [rbp+n_entries], 1", "jmp     short loc_A71C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "add~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 11, 1, 0, 1, 0, 0, 5, 6, 0.0, ["add     [rbp+n_entries], 1"], ["add~[rbp+0],0"]]], "func_feature": [0, 1, 7, 0, 12, 16, 0, 42, 0.12197, 0, 4], "succs": [[3, 7], [0], [0], [2, 10], [8], [4, 6], [8], [5, 6], [], [2, 11], [9], [9]], "fname": "hash_table_ok", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.06666666666666667, ["cvtsi2sd xmm0, rax", "jmp     short loc_A819"], ["cvtsi2sd~xmm0,rax", "jmp~FOO"]], [3, 0, 6, 1, 6, 36, 1, 7, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     [rbp+stream], rsi", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_entries", "mov     [rbp+n_entries], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_buckets", "mov     [rbp+n_buckets], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_buckets_used", "mov     [rbp+n_buckets_used], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_max_bucket_length", "mov     [rbp+max_bucket_length], rax", "mov     rdx, [rbp+n_entries]", "mov     rax, [rbp+stream]", "lea     rsi, aEntriesLu; \"# entries:         %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rdx, [rbp+n_buckets]", "mov     rax, [rbp+stream]", "lea     rsi, aBucketsLu; \"# buckets:         %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rax, [rbp+n_buckets_used]", "test    rax, rax", "js      short loc_A804"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [2, 0, 1, 0, 0, 6, 2, 0, 3, 1, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2sd xmm0, rdx", "addsd   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2sd~xmm0,rdx", "addsd~xmm0,xmm0"]], [0, 0, 3, 0, 0, 5, 1, 1, 2, 2, 0.3, ["movsd   xmm1, cs:qword_EAA8", "mulsd   xmm1, xmm0", "mov     rax, [rbp+n_buckets]", "test    rax, rax", "js      short loc_A835"], ["movsd~xmm1,<TAG>", "mulsd~xmm1,xmm0", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [2, 0, 0, 0, 2, 17, 0, 2, 4, 0, 0.0, ["divsd   xmm1, xmm0", "movapd  xmm0, xmm1", "mov     rdx, [rbp+n_buckets_used]", "mov     rax, [rbp+stream]", "lea     rsi, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rdi, rax; stream", "mov     eax, 1", "call    _fprintf", "mov     rdx, [rbp+max_bucket_length]", "mov     rax, [rbp+stream]", "lea     rsi, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "nop", "leave", "retn"], ["divsd~xmm1,xmm0", "movapd~xmm0,xmm1", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "nop", "leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.06666666666666667, ["cvtsi2sd xmm0, rax", "jmp     short loc_A84A"], ["cvtsi2sd~xmm0,rax", "jmp~FOO"]], [2, 0, 4, 0, 0, 6, 2, 0, 1, 3, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2sd xmm0, rdx", "addsd   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2sd~xmm0,rdx", "addsd~xmm0,xmm0"]]], "func_feature": [8, 6, 12, 0, 7, 8, 0, 74, 0.08095, 5, 1], "succs": [[3], [0, 6], [4], [2, 5], [], [4], [3]], "fname": "hash_print_statistics", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 2, 1, 1, 18, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+key], rsi", "mov     rax, [rbp+table]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+table]", "mov     rcx, [rdx+10h]", "mov     rdx, [rbp+key]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "mov     [rbp+n], rax", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "cmp     [rbp+n], rax", "jb      short loc_A8D0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 2, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdx, [rbp+n]", "shl     rdx, 4", "add     rax, rdx", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 26, 0.0, 0, 3], "succs": [[1, 2], [], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 0, 0, 0, 0.06944444444444445, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 7, 0, 1, 10, 1, 2, 4, 2, 0.08333333333333333, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+cursor]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_A95D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.08333333333333333, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_A969"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 1, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_A91E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 2, 0.2638888888888889, ["cmp     [rbp+cursor], 0", "jnz     short loc_A928"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 7, 0, 0, 4, 0, 1, 3, 2, 0.15277777777777776, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_A954"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.013888888888888888, ["mov     eax, 0", "jmp     short locret_A975"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, 1, 0.027777777777777776, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "jmp     short locret_A975"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]]], "func_feature": [2, 2, 9, 0, 10, 13, 1, 45, 0.07361, 0, 1], "succs": [[4], [0, 9], [4], [8, 2], [5, 6], [7], [1, 9], [], [7], [7]], "fname": "hash_lookup", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "jmp     short locret_A9D1"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.17857142857142855, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_A9CA"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 8, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "test    rax, rax", "jnz     short loc_A997"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 6, 1, 0, 2, 0, 1, 4, 4, 0.03571428571428571, ["add     [rbp+bucket], 10h", "jmp     short loc_A9A2"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 2, 3, 0.25, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_A9B5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.017857142857142856, ["mov     eax, 0", "jmp     short locret_A9D1"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 4, 0.08928571428571427, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [1, 2, 6, 0, 9, 10, 0, 29, 0.07143, 0, 2], "succs": [[6], [0, 3], [8, 7], [5], [], [1, 4], [], [6], [5]], "fname": "hash_get_first", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 5, 1, 0, 5, 0, 0, 0, 0, 0.19444444444444445, ["add     [rbp+bucket], 10h", "mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_AA3E"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 3, 0.18333333333333335, ["jmp     short loc_AA53"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, 2, 0.06666666666666667, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_AA53"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.02777777777777778, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, 1, 0.03888888888888889, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "jmp     short locret_AA6B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 2, 0.061111111111111116, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_AA29"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 6, 1, 0.011111111111111112, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "jmp     short locret_AA6B"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 0, 1, 1, 3, 0.1277777777777778, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jnz     short loc_AA29"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 2, 4, 0.17777777777777778, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_AA02"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 10, 1, 1, 13, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [1, 2, 8, 0, 11, 15, 0, 46, 0.08081, 0, 2], "succs": [[2, 3], [0], [0, 7], [6], [6], [9, 4], [], [6], [9, 5], [8, 1], [8]], "fname": "hash_get_next", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 10, 0, 0, 3, 0, 0, 0, 0, 0.17777777777777778, ["mov     rax, [rbp+counter]", "cmp     rax, [rbp+buffer_size]", "jb      short loc_AAB8"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 4, 3, 0.3666666666666667, ["cmp     [rbp+cursor], 0", "jnz     short loc_AAA8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]"], ["mov~rax,[rbp+0]"]], [0, 0, 10, 0, 0, 4, 0, 0, 1, 2, 0.33333333333333337, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_AA92"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 10, 1, 0, 12, 0, 0, 6, 4, 0.06666666666666667, ["mov     rax, [rbp+counter]", "lea     rdx, [rax+1]", "mov     [rbp+counter], rdx", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+buffer]", "add     rdx, rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax]", "mov     [rdx], rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, 4, 0.17777777777777778, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_AAE9"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 4, 0.22222222222222224, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_AAF0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 10, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+buffer], rsi", "mov     [rbp+buffer_size], rdx", "mov     [rbp+counter], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_AAF5"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 3, 3, 0.2, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]", "jmp     short loc_AB07"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [0, 1, 5, 0, 11, 14, 0, 44, 0.14848, 0, 2], "succs": [[10, 4], [0, 8], [9], [2, 6], [1], [1], [8, 5], [3], [3], [], [9]], "fname": "hash_get_entries", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.3666666666666667, ["cmp     [rbp+cursor], 0", "jnz     short loc_AB48"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, 4, 0.17777777777777778, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_AB7D"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 10, 1, 0, 4, 0, 0, 6, 4, 0.06666666666666667, ["add     [rbp+counter], 1", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 1, 10, 2, 2, 5, 2, 0.17777777777777778, ["mov     rax, [rbp+cursor]", "mov     rdx, [rax]", "mov     rcx, [rbp+processor_data]", "mov     rax, [rbp+processor]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "xor     eax, 1", "test    al, al", "jz      short loc_AB6C"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 4, 0.22222222222222224, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_AB84"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]", "jmp     short locret_AB9B"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]"], ["mov~rax,[rbp+0]"]], [2, 0, 10, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+table], rdi", "mov     [rbp+processor], rsi", "mov     [rbp+processor_data], rdx", "mov     [rbp+counter], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_AB89"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 1, 2, 0.33333333333333337, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_AB32"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 3, 3, 0.2, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]]], "func_feature": [1, 3, 7, 0, 11, 14, 0, 44, 0.14848, 0, 3], "succs": [[10, 3], [0], [0], [2, 6], [1, 10], [], [5], [5], [9], [4, 7], [9]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[3, 0, 3, 5, 0, 11, 0, 0, 0, 0, 0.0, ["mov     rdx, [rbp+value]", "mov     rax, rdx", "shl     rax, 5", "sub     rax, rdx", "mov     rdx, rax", "movzx   eax, [rbp+ch_0]", "add     rax, rdx", "mov     edx, 0", "div     [rbp+n_buckets]", "mov     [rbp+value], rdx", "add     [rbp+string], 1"], ["mov~rdx,[rbp+0]", "mov~rax,rdx", "shl~rax,0", "sub~rax,rdx", "mov~rdx,rax", "movzx~eax,[rbp+0]", "add~rax,rdx", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rdx", "add~[rbp+0],0"]], [1, 0, 3, 0, 0, 5, 0, 1, 1, 1, 0.5, ["mov     rax, [rbp+string]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "cmp     [rbp+ch_0], 0", "jnz     short loc_ABB3"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+string], rdi", "mov     [rbp+n_buckets], rsi", "mov     [rbp+value], 0", "jmp     short loc_ABDD"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+value]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 25, 0.125, 0, 5], "succs": [[1], [0, 3], [1], []], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 4, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+candidate], rdi", "mov     [rbp+divisor], 3", "mov     rax, [rbp+divisor]", "imul    rax, [rbp+divisor]", "mov     [rbp+square], rax", "jmp     short loc_AC28"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 0, 1, 0.41666666666666663, ["mov     rax, [rbp+square]", "cmp     rax, [rbp+candidate]", "jnb     short loc_AC47"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [3, 0, 4, 4, 0, 5, 0, 0, 0, 2, 0.08333333333333333, ["add     [rbp+divisor], 1", "mov     rax, [rbp+divisor]", "shl     rax, 2", "add     [rbp+square], rax", "add     [rbp+divisor], 1"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "shl~rax,0", "add~[rbp+0],rax", "add~[rbp+0],0"]], [1, 0, 4, 1, 0, 6, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [rbp+candidate]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "test    rax, rax", "jnz     short loc_AC12"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 1, 0, 0, 0, 0.0, ["mov     rax, [rbp+candidate]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "test    rax, rax", "setnz   al", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "setnz~al", "pop~rbp", "retn"]]], "func_feature": [0, 2, 2, 0, 5, 6, 1, 30, 0.13333, 0, 7], "succs": [[1], [3, 4], [1], [2, 4], []], "fname": "is_prime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 4, 1, 0, 1, 0, 0, 0, 0, 0.03333333333333333, ["add     [rbp+candidate], 2"], ["add~[rbp+0],0"]], [1, 0, 4, 0, 1, 6, 2, 2, 3, 1, 0.13333333333333333, ["mov     rax, [rbp+candidate]", "mov     rdi, rax; candidate", "call    is_prime", "xor     eax, 1", "test    al, al", "jnz     short loc_AC81"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+candidate]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 1, 0.36666666666666664, ["cmp     [rbp+candidate], 0FFFFFFFFFFFFFFFFh", "jz      short loc_ACA0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.26666666666666666, ["or      [rbp+candidate], 1", "jmp     short loc_AC86"], ["or~[rbp+0],0", "jmp~FOO"]], [2, 0, 6, 1, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 8", "mov     [rbp+candidate], rdi", "cmp     [rbp+candidate], 9", "ja      short loc_AC7A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     [rbp+candidate], 0Ah"], ["mov~[rbp+0],0"]]], "func_feature": [1, 3, 5, 0, 7, 9, 1, 21, 0.11429, 0, 2], "succs": [[3], [0, 2], [], [1, 2], [3], [4, 6], [4]], "fname": "next_prime", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+tuning], rdi", "mov     rax, [rbp+tuning]", "pxor    xmm0, xmm0", "movss   dword ptr [rax], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_EAB0", "movss   dword ptr [rax+4], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_EAB4", "movss   dword ptr [rax+8], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_EAB8", "movss   dword ptr [rax+0Ch], xmm0", "mov     rax, [rbp+tuning]", "mov     byte ptr [rax+10h], 0", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "pxor~xmm0,xmm0", "movss~<TAG>,xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 20, 0.0, 3, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 1, 0, 2, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+data], rdi", "mov     [rbp+n], rsi", "mov     rax, [rbp+data]", "mov     esi, 3; n", "mov     rdi, rax; x", "call    rotr_sz", "mov     [rbp+val], rax", "mov     rax, [rbp+val]", "mov     edx, 0", "div     [rbp+n]", "mov     rax, rdx", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 16, 0.0, 0, 2], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "cmp     rax, [rbp+b]", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 6, 0, 0, 5, 0, 0, 0, 0, 0.14545454545454545, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "pxor    xmm1, xmm1", "ucomiss xmm0, xmm1", "jb      short loc_AE35"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "pxor~xmm1,xmm1", "ucomiss~xmm0,xmm1", "jb~FOO"]], [0, 0, 7, 0, 0, 7, 0, 0, 3, 2, 0.13636363636363635, ["movss   xmm1, [rbp+epsilon]", "movss   xmm0, cs:dword_EAB0", "addss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "ucomiss xmm1, xmm0", "jbe     short loc_AE35"], ["movss~xmm1,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 2, 1, 0.05909090909090909, ["mov     rax, [rbp+table]", "lea     rdx, default_tuning", "mov     [rax+28h], rdx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~[rax+0],rdx", "mov~eax,0"]], [0, 0, 9, 0, 0, 6, 0, 0, 1, 2, 0.07272727272727272, ["movss   xmm0, cs:dword_EABC", "movss   [rbp+epsilon], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax+8]", "ucomiss xmm0, [rbp+epsilon]", "jbe     loc_AE35"], ["movss~xmm0,<TAG>", "movss~[rbp+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,[word ptr [rax+0]", "ucomiss~xmm0,[rbp+0]", "jbe~FOO"]], [0, 0, 8, 0, 0, 6, 0, 0, 2, 2, 0.10909090909090909, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "movss   xmm0, cs:dword_EAB0", "subss   xmm0, [rbp+epsilon]", "ucomiss xmm0, xmm1", "jbe     loc_AE35"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "movss~xmm0,<TAG>", "subss~xmm0,[rbp+0]", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 5, 0, 0, 7, 0, 0, 5, 2, 0.13636363636363635, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "addss   xmm0, [rbp+epsilon]", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "ucomiss xmm1, xmm0", "jbe     short loc_AE35"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,[rbp+0]", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 4, 0, 0, 5, 0, 0, 6, 2, 0.10909090909090909, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "movss   xmm0, cs:dword_EAB0", "ucomiss xmm0, xmm1", "jb      short loc_AE35"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jb~FOO"]], [0, 0, 3, 0, 0, 7, 0, 0, 7, 2, 0.06363636363636363, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "addss   xmm0, [rbp+epsilon]", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "ucomiss xmm1, xmm0", "jbe     short loc_AE35"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,[rbp+0]", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 11, 0, 0, 9, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "lea     rax, default_tuning", "cmp     [rbp+tuning], rax", "jnz     short loc_AD73"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00909090909090909, ["mov     eax, 1", "jmp     loc_AE49"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short loc_AE49"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 12, 19, 3, 62, 0.07045, 3, 0], "succs": [[2, 5], [0, 2], [9], [2, 4], [1, 2], [2, 6], [2, 7], [2, 11], [10, 3], [], [9], [9]], "fname": "check_tuning", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.017463235294117647, ["mov     rax, [rbp+candidate]"], ["mov~rax,[rbp+0]"]], [1, 0, 3, 0, 0, 4, 2, 1, 3, 2, 0.12683823529411764, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_AF4E"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 2, 3, 0.18566176470588236, ["test    rax, rax", "jns     short loc_AF3D"], ["test~rax,rax", "jns~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 5, 0.19117647058823528, ["mov     rax, [rbp+candidate]", "mov     [rbp+candidate], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 4, 0, 1, 5, 6, 0.07720588235294118, ["movss   xmm0, [rbp+new_candidate]", "cvttss2si rax, xmm0", "mov     [rbp+candidate], rax", "jmp     short loc_AF03"], ["movss~xmm0,[rbp+0]", "cvttss2si~rax,xmm0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 9, 0, 0, 7, 1, 0, 5, 6, 0.07720588235294118, ["movss   xmm0, [rbp+new_candidate]", "movss   xmm1, cs:dword_EAC4", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     [rbp+candidate], rax", "mov     rax, 8000000000000000h", "xor     [rbp+candidate], rax"], ["movss~xmm0,[rbp+0]", "movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~[rbp+0],rax", "mov~rax,0", "xor~[rbp+0],rax"]], [1, 1, 17, 1, 0, 10, 2, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+candidate], rdi", "mov     [rbp+tuning], rsi", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "xor     eax, 1", "test    al, al", "jz      loc_AF0B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 4, 7, 0.15808823529411764, ["movss   xmm0, [rbp+new_candidate]", "ucomiss xmm0, cs:dword_EAC4", "jnb     short loc_AEDB"], ["movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 13, 0, 0, 7, 0, 0, 3, 2, 0.1636029411764706, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "divss   xmm0, xmm1", "movss   [rbp+new_candidate], xmm0", "movss   xmm0, [rbp+new_candidate]", "ucomiss xmm0, cs:dword_EAC0", "jb      short loc_AEBD"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "divss~xmm0,xmm1", "movss~[rbp+0],xmm0", "movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [2, 0, 7, 1, 1, 9, 0, 1, 1, 4, 0.2150735294117647, ["mov     rax, [rbp+candidate]", "mov     rdi, rax; candidate", "call    next_prime", "mov     [rbp+candidate], rax", "mov     ecx, 0", "mov     edx, 8", "mov     rax, rdx", "mul     [rbp+candidate]", "jno     short loc_AF33"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 2, 4, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 14, 0, 0, 6, 2, 0, 2, 3, 0.03768382352941176, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 16, 0, 0, 3, 1, 1, 1, 4, 0.03125, ["mov     rax, [rbp+candidate]", "test    rax, rax", "js      short loc_AE7E"], ["mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 3, 0.03768382352941176, ["cvtsi2ss xmm0, rax", "jmp     short loc_AE93"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.016544117647058824, ["mov     eax, 0", "jmp     locret_AF52"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.017463235294117647, ["mov     eax, 0", "jmp     short locret_AF52"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [1, 9, 8, 0, 18, 24, 2, 68, 0.07516, 2, 2], "succs": [[15], [0, 17], [1, 3], [1], [10], [4], [4], [10, 13], [5, 6], [8, 16], [2, 11], [2], [9], [12, 14], [9], [], [15], [15]], "fname": "compute_bucket_size", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 4, 0, 1, 12, 1, 2, 0, 0, 0.07708333333333334, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B0B4"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 12, 1, 2, 5, 3, 0.13333333333333333, ["mov     rdx, [rbp+tuning]", "mov     rax, [rbp+candidate]", "mov     rsi, rdx; tuning", "mov     rdi, rax; candidate", "call    compute_bucket_size", "mov     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax+10h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      loc_B0B1"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 4, 4, 0.0, ["lea     rax, default_tuning", "mov     [rbp+tuning], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 0, 2, 0, 1, 3, 4, 0.1875, ["cmp     [rbp+tuning], 0", "jnz     short loc_AFC5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 1, 9, 2, 2, 4, 3, 0.2125, ["mov     rax, [rbp+table]", "mov     rdx, [rbp+tuning]", "mov     [rax+28h], rdx", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "xor     eax, 1", "test    al, al", "jnz     loc_B0AE"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.020833333333333332, ["mov     eax, 0", "jmp     locret_B0C6"], ["mov~eax,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 25, 0, 1, 7, 1, 0.00625, ["mov     rax, [rbp+table]", "mov     rdx, [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "shl     rax, 4", "add     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+table]", "mov     qword ptr [rax+20h], 0", "mov     rax, [rbp+table]", "mov     rdx, [rbp+hasher]", "mov     [rax+30h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+comparator]", "mov     [rax+38h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+data_freer]", "mov     [rax+40h], rdx", "mov     rax, [rbp+table]", "mov     qword ptr [rax+48h], 0", "mov     rax, [rbp+table]", "jmp     short locret_B0C6"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "shl~rax,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 6, 1, 0.027083333333333334, ["mov     rax, [rbp+table]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [1, 1, 12, 0, 1, 5, 0, 2, 2, 2, 0.2, ["mov     edi, 50h ; 'P'; size", "call    _malloc", "mov     [rbp+table], rax", "cmp     [rbp+table], 0", "jnz     short loc_AFB3"], ["mov~edi,<STR>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 3, 0.11666666666666667, ["cmp     [rbp+comparator], 0", "jnz     short loc_AF94"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 2, 3, 0.0, ["lea     rax, raw_comparator", "mov     [rbp+comparator], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 2, 0.04583333333333333, ["nop", "jmp     short fail"], ["nop", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 6, 2, 0.00625, ["nop", "jmp     short fail"], ["nop", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.004166666666666667, ["nop"], ["nop"]], [2, 0, 16, 1, 0, 10, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+candidate], rdi", "mov     [rbp+tuning], rsi", "mov     [rbp+hasher], rdx", "mov     [rbp+comparator], rcx", "mov     [rbp+data_freer], r8", "cmp     [rbp+hasher], 0", "jnz     short loc_AF82"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 1, 4, 0.0, ["lea     rax, raw_hasher", "mov     [rbp+hasher], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [5, 4, 16, 0, 17, 23, 2, 96, 0.06103, 3, 3], "succs": [[14, 7], [0, 13], [4], [2, 4], [1, 12], [], [5], [5], [5], [3, 6], [9, 11], [9], [8], [8], [8], [16, 10], [10]], "fname": "hash_initialize", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 12, 0, 0, 4, 0, 1, 0, 0, 0.32575757575757575, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     short loc_B15E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 2, 3, 0.36363636363636365, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_B19D"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 0, 1, 6, 7, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax"]], [0, 0, 12, 0, 0, 4, 1, 1, 5, 7, 0.14393939393939395, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_B123"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 5, 0.5530303030303031, ["cmp     [rbp+cursor], 0", "jnz     short loc_B102"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 12, 0, 0, 14, 0, 0, 6, 6, 0.14393939393939395, ["mov     rax, [rbp+cursor]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+cursor]", "mov     [rax+48h], rdx", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 12, 0, 1, 6, 0, 1, 6, 4, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+bucket]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax"]], [0, 0, 12, 0, 0, 4, 1, 1, 5, 4, 0.32575757575757575, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_B186"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 0, 1, 1, 0.4545454545454546, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      loc_B0E4"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 12, 0, 0, 4, 0, 0, 6, 3, 0.32575757575757575, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+bucket]", "mov     qword ptr [rax+8], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [1, 0, 12, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     loc_B1A2"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 12, 1, 0, 1, 0, 0, 3, 2, 0.36363636363636365, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [2, 0, 0, 0, 0, 7, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+table]", "mov     qword ptr [rax+20h], 0", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "nop", "leave", "retn"]]], "func_feature": [2, 3, 8, 0, 13, 17, 0, 68, 0.23077, 0, 2], "succs": [[4], [0, 11], [5], [2, 5], [3, 7], [4], [9], [9, 6], [1, 12], [11], [8], [8], []], "fname": "hash_clear", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 16, 0, 0, 4, 0, 1, 0, 0, 0.0392156862745098, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_B244"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 1, 5, 0.022875816993464054, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "test    rax, rax", "jz      short loc_B252"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 2, 3, 0.3300653594771242, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_B25F"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 1, 4, 0.2647058823529412, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_B299"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 4, 0.05555555555555556, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [1, 0, 18, 1, 0, 8, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_B252"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 0, 1, 5, 6, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.12091503267973856, ["cmp     [rbp+cursor], 0", "jnz     short loc_B26D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 3, 6, 0.11437908496732027, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     short loc_B28D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 4, 1, 1, 4, 7, 0.06862745098039216, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B23F"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 3, 5, 0.27450980392156865, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_B202"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 16, 1, 0, 1, 0, 0, 5, 6, 0.16013071895424838, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 3, 0, 1, 8, 0, 1, 5, 2, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 1, 0.10784313725490197, ["cmp     [rbp+cursor], 0", "jnz     short loc_B2B5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 1, 9, 0, 1, 7, 8, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 16, 0, 0, 2, 0, 1, 6, 7, 0.11111111111111112, ["cmp     [rbp+cursor], 0", "jnz     short loc_B218"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.14705882352941177, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+cursor], rax", "jmp     short loc_B2D5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 5, 8, 0.0392156862745098, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_B238"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 2, 10, 0, 2, 5, 0, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+table]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [5, 3, 16, 0, 19, 26, 2, 86, 0.0977, 0, 3], "succs": [[10], [0, 3], [8, 16], [2], [2], [1, 3], [7], [4, 6], [7], [17, 11], [9, 3], [10], [13], [18, 12], [15], [11, 14], [13], [15], []], "fname": "hash_free", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 3, 1, 0, 8, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "test    rax, rax", "jz      short loc_B331"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 0, 1, 0.08333333333333333, ["mov     edi, 10h; size", "call    _malloc", "mov     [rbp+new], rax"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+new]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 8, 0, 1, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+new], rax", "mov     rax, [rbp+new]", "mov     rdx, [rax+8]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "jmp     short loc_B33F"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 4, 2, 22, 0.04167, 0, 1], "succs": [[1, 3], [2], [], [2]], "fname": "allocate_entry", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, [rbp+entry]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+entry]", "mov     [rax+48h], rdx", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 16, 0.0, 0, 0], "succs": [[]], "fname": "free_entry", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 18, 1, 1, 21, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     [rbp+bucket_head], rdx", "mov     eax, ecx", "mov     [rbp+delete], al", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket_head]", "mov     rdx, [rbp+bucket]", "mov     [rax], rdx", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_B3CC"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~eax,ecx", "mov~[rbp+0],al", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 9, 0, 1, 11, 1, 2, 0, 3, 0.026143790849673203, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx+8]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_B4EC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 5, 0, 1, 0, 3, 0.09477124183006536, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_B4A2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 2, 0, 1, 15, 0, 2, 0, 2, 0.0032679738562091504, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rcx, [rbp+bucket]", "mov     rax, [rbp+next]", "mov     rdx, [rax+8]", "mov     rax, [rax]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rdx, [rbp+next]", "mov     rax, [rbp+table]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry", "jmp     short loc_B458"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 0, 3, 0.026143790849673203, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_B44D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 12, 0, 1, 0, 2, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next_0], rax", "mov     rax, [rbp+next_0]", "mov     rdx, [rax+8]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rdx, [rbp+next_0]", "mov     rax, [rbp+table]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 2, 0.058823529411764705, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "mov     [rbp+data_0], rax", "cmp     [rbp+delete], 0", "jz      short loc_B4E6"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 5, 0, 1, 0, 2, 0.04575163398692811, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "mov     [rbp+data], rax", "cmp     [rbp+delete], 0", "jz      short loc_B458"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 1, 0, 3, 0.049019607843137254, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_B3F8"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 15, 0, 1, 10, 1, 2, 0, 3, 0.058823529411764705, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+bucket]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_B461"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 0, 3, 0.0784313725490196, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     loc_B4F8"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.013071895424836602, ["mov     rax, [rbp+data_0]", "jmp     short locret_B50E"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.0032679738562091504, ["mov     eax, 0", "jmp     locret_B50E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.0196078431372549, ["mov     rax, [rbp+data]", "jmp     locret_B50E"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.00980392156862745, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0.0032679738562091504, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 9, 0, 0, 4, 1, 1, 0, 2, 0.12745098039215685, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "test    rax, rax", "jnz     loc_B46E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 0, 3, 0.016339869281045753, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]]], "func_feature": [5, 5, 19, 0, 19, 27, 3, 114, 0.03337, 0, 1], "succs": [[8, 12], [18, 6], [1, 6], [14], [16, 3], [11], [11, 5], [4, 14], [9, 7], [10, 7], [17], [13], [13], [], [13], [13], [14], [2, 15], [17]], "fname": "hash_find_entry", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 19, 0, 0, 1, 0, 0, 0, 0, 0.11403508771929824, ["nop"], ["nop"]], [2, 0, 19, 0, 0, 7, 0, 1, 5, 4, 0.3830409356725146, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "mov     [rbp+data], rax", "mov     rax, [rbp+bucket]", "mov     qword ptr [rax+8], 0", "cmp     [rbp+safe], 0", "jnz     loc_B6C1"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 19, 1, 0, 1, 0, 0, 3, 3, 0.36549707602339176, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 19, 0, 0, 4, 1, 1, 2, 4, 0.35964912280701755, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_B6C2"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 19, 0, 0, 8, 0, 1, 8, 4, 0.17543859649122806, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+src]", "mov     rax, [rax+18h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+src]", "mov     [rax+18h], rdx", "jmp     short loc_B6C2"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 7, 6, 0.14327485380116958, ["mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 19, 0, 0, 8, 0, 1, 6, 7, 0.04239766081871345, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+cursor]", "mov     [rax+8], rdx", "jmp     short loc_B5E0"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 1, 13, 0, 1, 6, 7, 0.04239766081871345, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+dst]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+dst]", "mov     [rax+18h], rdx", "mov     rdx, [rbp+cursor]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 7, 2, 0.11403508771929824, ["mov     rax, [rbp+dst]", "mov     rdi, rax; table", "call    allocate_entry", "mov     [rbp+new_entry], rax", "cmp     [rbp+new_entry], 0", "jnz     short loc_B658"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 1, 10, 1, 2, 6, 3, 0.22807017543859648, ["mov     rdx, [rbp+data]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+new_bucket], rax", "mov     rax, [rbp+new_bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B681"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 0, 11, 0, 1, 8, 5, 0.043859649122807015, ["mov     rax, [rbp+new_entry]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+new_entry]", "mov     [rax+8], rdx", "jmp     short loc_B6A0"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 1, 16, 1, 2, 5, 8, 0.12573099415204678, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "mov     [rbp+data], rax", "mov     rdx, [rbp+data]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+new_bucket], rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+new_bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B5AE"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 5, 0.5497076023391813, ["cmp     [rbp+cursor], 0", "jnz     loc_B556"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 1, 3, 6, 0.347953216374269, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     loc_B5E8"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 1, 19, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+dst], rdi", "mov     [rbp+src], rsi", "mov     eax, edx", "mov     [rbp+safe], al", "mov     rax, [rbp+src]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     loc_B6C7"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.02631578947368421, ["mov     eax, 0", "jmp     locret_B6DE"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 1, 2, 0.4269005847953216, ["mov     rax, [rbp+src]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      loc_B535"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.023391812865497075, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 19, 0, 0, 8, 0, 0, 7, 5, 0.07309941520467836, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+dst]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+dst]", "mov     [rax+18h], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 3, 16, 0, 20, 26, 3, 121, 0.17924, 0, 2], "succs": [[2], [0, 9], [16], [2, 13], [2], [12], [5], [5], [10, 15], [8, 18], [4], [6, 7], [1, 11], [12], [16], [19], [17, 3], [19], [4], []], "fname": "transfer_entries", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.1208791208791209, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_B905"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [4, 0, 8, 2, 1, 42, 1, 2, 3, 3, 0.08241758241758243, ["mov     rax, [rbp+new_table]", "mov     rdx, [rbp+new_size]", "mov     [rax+10h], rdx", "mov     rax, [rbp+new_table]", "mov     rax, [rax]", "mov     rdx, [rbp+new_size]", "shl     rdx, 4", "add     rdx, rax", "mov     rax, [rbp+new_table]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+new_table]", "mov     qword ptr [rax+20h], 0", "mov     rax, [rbp+table]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+new_table]", "mov     [rax+28h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+new_table]", "mov     [rax+30h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+38h]", "mov     rax, [rbp+new_table]", "mov     [rax+38h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+40h]", "mov     rax, [rbp+new_table]", "mov     [rax+40h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+new_table]", "mov     [rax+48h], rdx", "mov     rcx, [rbp+table]", "mov     rax, [rbp+new_table]", "mov     edx, 0; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "test    al, al", "jz      short loc_B88A"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 1, 13, 1, 2, 2, 3, 0.07692307692307693, ["lea     rax, [rbp+storage]", "mov     [rbp+new_table], rax", "mov     rax, [rbp+new_size]", "mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     rdx, rax", "mov     rax, [rbp+new_table]", "mov     [rax], rdx", "mov     rax, [rbp+new_table]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_B77C"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.016483516483516484, ["mov     eax, 0", "jmp     loc_B8F1"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 14, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     [rbp+table], rdi", "mov     [rbp+candidate], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+table]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+candidate]", "mov     rsi, rdx; tuning", "mov     rdi, rax; candidate", "call    compute_bucket_size", "mov     [rbp+new_size], rax", "cmp     [rbp+new_size], 0", "jnz     short loc_B72B"], ["push~rbp", "mov~rbp,rsp", "add~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 1, 26, 0, 2, 4, 2, 0.016483516483516484, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+new_table]", "mov     rdx, [rax]", "mov     rax, [rbp+table]", "mov     [rax], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+8]", "mov     rax, [rbp+table]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+table]", "mov     [rax+10h], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "mov     eax, 1", "jmp     short loc_B8F1"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 0, 1, 1, 3, 0.049450549450549455, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "cmp     [rbp+new_size], rax", "jnz     short loc_B743"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 6, 2, 0.03296703296703297, ["mov     rax, [rbp+new_table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [2, 0, 5, 0, 1, 9, 2, 2, 5, 3, 0.04395604395604396, ["mov     rcx, [rbp+new_table]", "mov     rax, [rbp+table]", "mov     edx, 0; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "xor     eax, 1", "test    al, al", "jz      short loc_B8DD"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.016483516483516484, ["mov     eax, 1", "jmp     loc_B8F1"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.016483516483516484, ["mov     eax, 0", "jmp     loc_B8F1"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 6, 0, 1, 13, 2, 2, 4, 4, 0.06593406593406594, ["mov     rax, [rbp+new_table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "mov     rcx, [rbp+new_table]", "mov     rax, [rbp+table]", "mov     edx, 1; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "xor     eax, 1", "test    al, al", "jnz     short loc_B8D8"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [9, 8, 20, 1, 15, 19, 2, 142, 0.0359, 1, 3], "succs": [[], [0, 4], [13, 7], [2, 12], [], [1], [8, 5], [1], [11, 3], [1], [9, 14], [1], [1], [10, 14], []], "fname": "hash_rehash", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 30, 0, 0, 2, 0, 1, 0, 0, 0.05757575757575758, ["cvtsi2ss xmm0, rax", "jmp     short loc_BA17"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 32, 0, 1, 7, 1, 2, 7, 8, 0.10909090909090909, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_BA02"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 39, 0, 0, 4, 1, 1, 2, 8, 0.03636363636363636, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_B98A"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [2, 0, 43, 0, 1, 9, 0, 2, 1, 4, 0.021717171717171718, ["lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 0; delete", "mov     rdi, rax; table", "call    hash_find_entry", "mov     [rbp+data], rax", "cmp     [rbp+data], 0", "jz      short loc_B976"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 9, 0, 1, 8, 1, 2, 20, 4, 0.050505050505050504, ["lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 0; delete", "mov     rdi, rax; table", "call    hash_find_entry", "test    rax, rax", "jz      short loc_BB8A"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 1, 7, 2, 2, 19, 3, 0.08131313131313131, ["mov     rdx, [rbp+table]", "mov     rsi, rax; candidate", "mov     rdi, rdx; table", "call    hash_rehash", "xor     eax, 1", "test    al, al", "jz      short loc_BB67"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 14, 5, 0.029166666666666667, ["cvtsi2ss xmm0, rax", "jmp     short loc_BA9B"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 13, 6, 0.06641414141414141, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BA86"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.015151515151515152, ["mov     eax, 0FFFFFFFFh", "jmp     loc_BC2E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 16, 3, 0.13737373737373737, ["movss   [rbp+candidate], xmm0", "movss   xmm0, [rbp+candidate]", "ucomiss xmm0, cs:dword_EAC0", "jb      short loc_BB0A"], ["movss~[rbp+0],xmm0", "movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 3, 7, 0.026515151515151516, ["cvtsi2ss xmm0, rax", "jmp     short loc_B99F"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [2, 0, 30, 0, 0, 6, 2, 0, 8, 7, 0.05757575757575758, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 7, 0, 0, 4, 1, 1, 7, 3, 0.08535353535353535, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_BBF6"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 33, 0, 0, 3, 0, 0, 6, 4, 0.1303030303030303, ["mulss   xmm1, xmm2", "ucomiss xmm0, xmm1", "jbe     loc_BB8A"], ["mulss~xmm1,xmm2", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 11, 4, 0.1606060606060606, ["mulss   xmm1, xmm2", "ucomiss xmm0, xmm1", "jbe     loc_BB8A"], ["mulss~xmm1,xmm2", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 17, 5, 0.10404040404040404, ["movss   xmm0, [rbp+candidate]", "ucomiss xmm0, cs:dword_EAC4", "jnb     short loc_BB24"], ["movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 18, 0, 0, 6, 2, 0, 14, 5, 0.029166666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [1, 1, 45, 1, 0, 11, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     [rbp+matched_ent], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+entry], 0", "jnz     short loc_B936"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 21, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 18, 4, 0.04191919191919192, ["movss   xmm0, [rbp+candidate]", "cvttss2si rax, xmm0", "jmp     short loc_BB47"], ["movss~xmm0,[rbp+0]", "cvttss2si~rax,xmm0", "jmp~FOO"]], [2, 0, 37, 0, 0, 6, 2, 0, 3, 7, 0.026515151515151516, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 17, 0, 0, 4, 0, 1, 15, 4, 0.06641414141414141, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "mulss   xmm0, xmm1", "jmp     short loc_BAED"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "jmp~FOO"]], [1, 0, 3, 0, 0, 14, 0, 0, 8, 2, 0.024242424242424242, ["mov     rax, [rbp+bucket]", "mov     rdx, [rbp+entry]", "mov     [rax], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0"]], [1, 0, 5, 0, 1, 6, 0, 2, 8, 3, 0.03232323232323232, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    allocate_entry", "mov     [rbp+new_entry], rax", "cmp     [rbp+new_entry], 0", "jnz     short loc_BBB4"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 29, 0, 0, 7, 1, 1, 9, 6, 0.1393939393939394, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax+8]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BA38"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,[word ptr [rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0007575757575757576, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_BC2E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 13, 6, 0.06641414141414141, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BABE"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 25, 0, 0, 7, 1, 1, 12, 7, 0.13737373737373737, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_BAAA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 27, 0, 0, 2, 0, 1, 10, 5, 0.07045454545454545, ["cvtsi2ss xmm1, rax", "jmp     short loc_BA4D"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 36, 0, 0, 7, 1, 1, 4, 6, 0.08787878787878788, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax+8]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_B9C0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,[word ptr [rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.04141414141414142, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BC42"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.006060606060606061, ["mov     eax, 0", "jmp     loc_BC2E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 20, 2, 0.006060606060606061, ["mov     eax, 0FFFFFFFFh", "jmp     loc_BC2E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 17, 0, 1, 9, 2, 0.0007575757575757576, ["mov     rax, [rbp+new_entry]", "mov     rdx, [rbp+entry]", "mov     [rax], rdx", "mov     rax, [rbp+bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+bucket]", "mov     rdx, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     eax, 1", "jmp     short loc_BC2E"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 14, 5, 0.029166666666666667, ["cvtsi2ss xmm0, rax", "jmp     short loc_BAD3"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 5, 5, 0.05, ["cvtsi2ss xmm1, rax", "jmp     short loc_B9D5"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 12, 0, 0, 6, 1, 0, 18, 4, 0.04191919191919192, ["movss   xmm0, [rbp+candidate]", "movss   xmm1, cs:dword_EAC4", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx"], ["movss~xmm0,[rbp+0]", "movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx"]], [2, 0, 27, 0, 0, 6, 2, 0, 10, 5, 0.07045454545454545, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [2, 0, 18, 0, 0, 6, 2, 0, 14, 5, 0.029166666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 34, 0, 0, 6, 2, 0, 5, 5, 0.05, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 3, 0.00505050505050505, ["cmp     [rbp+matched_ent], 0", "jz      short loc_B96C"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+matched_ent]", "mov     rdx, [rbp+data]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]], [0, 0, 17, 0, 0, 6, 0, 0, 15, 4, 0.06641414141414141, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "mulss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "mulss   xmm0, xmm1"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1"]]], "func_feature": [8, 26, 36, 1, 46, 61, 1, 217, 0.04975, 3, 1], "succs": [[24], [0, 11], [10, 20], [2, 43], [18, 12], [33, 4], [21], [16, 6], [31], [8, 15], [30], [24], [22, 23], [1, 12], [28, 12], [19, 39], [21], [25, 3], [], [5], [30], [9], [31], [26, 34], [40, 29], [], [31], [41, 35], [27, 7], [14], [42, 37], [36, 38], [31], [31], [31], [45], [], [13], [], [5], [14], [45], [13], [32, 44], [32], [9]], "fname": "hash_insert_if_absent", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 7, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+matched_ent]; matched_ent", "mov     rcx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rcx; entry", "mov     rdi, rax; table", "call    hash_insert_if_absent", "mov     [rbp+err], eax", "cmp     [rbp+err], 0FFFFFFFFh", "jz      short loc_BC95"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.23809523809523808, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BCAE"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.03571428571428571, ["mov     rax, [rbp+matched_ent]", "jmp     short loc_BC9A"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.03571428571428571, ["mov     rax, [rbp+entry]", "jmp     short loc_BC9A"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.07142857142857142, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 3, 0.047619047619047616, ["cmp     [rbp+err], 0", "jnz     short loc_BC8F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 7, 1, 8, 9, 2, 30, 0.05357, 1, 1], "succs": [[4, 6], [5, 7], [1], [1], [1], [], [2, 3], []], "fname": "hash_insert", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 0, 0.05120910384068279, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BF80"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [2, 0, 23, 0, 0, 6, 2, 0, 10, 0, 0.09352773826458037, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [0, 0, 25, 0, 0, 7, 1, 1, 9, 0, 0.18776671408250356, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BDF5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 8, 0, 0.07965860597439545, ["cvtsi2ss xmm0, rax", "jmp     short loc_BDD5"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [2, 0, 26, 0, 0, 6, 2, 0, 8, 0, 0.07965860597439545, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 30, 0, 0, 6, 2, 0, 5, 0, 0.061166429587482224, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [0, 0, 32, 0, 0, 7, 1, 1, 4, 0, 0.10810810810810811, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BD7E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 22, 0, 0, 3, 0, 0, 11, 0, 0.20910384068278806, ["mulss   xmm1, xmm2", "ucomiss xmm1, xmm0", "jbe     loc_BF68"], ["mulss~xmm1,xmm2", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 10, 0, 0.09352773826458037, ["cvtsi2ss xmm1, rax", "jmp     short loc_BE0A"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [1, 0, 9, 0, 0, 6, 1, 1, 16, 0, 0.028627311522048365, ["movss   xmm1, cs:dword_EAC4", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx", "jmp     short loc_BF09"], ["movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 11, 0, 0, 5, 0, 0, 15, 0, 0.07930298719772404, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "mulss   xmm0, xmm1", "ucomiss xmm0, cs:dword_EAC4", "jnb     short loc_BE78"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 0, 0.1593172119487909, ["mulss   xmm1, xmm2", "ucomiss xmm1, xmm0", "jbe     loc_BF68"], ["mulss~xmm1,xmm2", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 5, 0, 0.061166429587482224, ["cvtsi2ss xmm1, rax", "jmp     short loc_BD93"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 36, 0, 0, 9, 1, 1, 1, 0, 0.023470839260312945, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_BF68"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 1, 38, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 1; delete", "mov     rdi, rax; table", "call    hash_find_entry", "mov     [rbp+data], rax", "cmp     [rbp+data], 0", "jnz     short loc_BCFD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 19, 0, 0.050497866287339974, ["cmp     [rbp+cursor], 0", "jnz     short loc_BF35"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 18, 0, 0.06401137980085349, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+cursor], rax", "jmp     short loc_BF55"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 7, 0, 1, 8, 0, 1, 20, 0, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 14, 0, 0, 4, 1, 1, 13, 0, 0.09210526315789475, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BEAC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 21, 0, 0, 7, 1, 1, 12, 0, 0.1934566145092461, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_BE98"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 9, 0, 0, 5, 1, 0, 16, 0, 0.028627311522048365, ["movss   xmm1, cs:dword_EAC4", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx"], ["movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx"]], [0, 0, 11, 0, 0, 8, 0, 0, 15, 0, 0.07930298719772404, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "mulss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "mulss   xmm0, xmm1", "ucomiss xmm0, cs:dword_EAC4", "jnb     short loc_BEEB"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 14, 0, 0.038229018492176386, ["cvtsi2ss xmm0, rax", "jmp     short loc_BEC1"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 16, 0, 0.028627311522048365, ["cvttss2si rax, xmm0", "jmp     loc_BF09"], ["cvttss2si~rax,xmm0", "jmp~FOO"]], [0, 0, 28, 0, 1, 7, 1, 2, 7, 0, 0.15362731152204837, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_BDC0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 13, 0, 0.09210526315789475, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BE43"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [2, 0, 12, 0, 0, 6, 2, 0, 14, 0, 0.038229018492176386, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 35, 0, 0, 9, 1, 1, 2, 0, 0.044096728307254626, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_BD49"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 14, 0, 0.038229018492176386, ["cvtsi2ss xmm0, rax", "jmp     short loc_BE58"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 3, 0, 0.032361308677098154, ["cvtsi2ss xmm0, rax", "jmp     short loc_BD5E"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [2, 0, 12, 0, 0, 6, 2, 0, 14, 0, 0.038229018492176386, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 0, 0.0021337126600284497, ["mov     eax, 0", "jmp     loc_BF6C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 0, 0.07041251778093884, ["mov     rax, [rbp+data]"], ["mov~rax,[rbp+0]"]], [2, 0, 33, 0, 0, 6, 2, 0, 3, 0, 0.032361308677098154, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [1, 0, 8, 0, 1, 9, 2, 2, 17, 0, 0.11948790896159318, ["mov     [rbp+candidate], rax", "mov     rdx, [rbp+candidate]", "mov     rax, [rbp+table]", "mov     rsi, rdx; candidate", "mov     rdi, rax; table", "call    hash_rehash", "xor     eax, 1", "test    al, al", "jz      short loc_BF68"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 16, 0, 0.028627311522048365, ["cvttss2si rax, xmm0", "jmp     short loc_BF09"], ["cvttss2si~rax,xmm0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 20, 0, 0.008534850640113799, ["mov     rax, [rbp+table]", "mov     qword ptr [rax+48h], 0"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 26, 28, 1, 39, 53, 1, 187, 0.06638, 2, 1], "succs": [[], [0, 38], [8], [9, 2], [3], [3], [12], [13, 6], [33, 20], [8], [35], [24, 10], [25, 33], [12], [33, 28], [32, 14], [18, 37], [16], [16], [27, 23], [26, 19], [35], [36, 21], [22], [35], [4, 5], [29, 31], [22], [34, 30], [11], [7], [11], [1], [1], [7], [33, 17], [35], [33], []], "fname": "hash_delete", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.5, ["cmp     [rbp+i], 3", "jle     short loc_BFB4"], ["cmp~[rbp+0],0", "jle~FOO"]], [4, 0, 3, 0, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ir], rdi", "mov     [rbp+default_val], esi", "mov     rax, [rbp+ir]", "mov     byte ptr [rax+1Ch], 1", "mov     rax, [rbp+ir]", "mov     dword ptr [rax+14h], 0", "mov     rax, [rbp+ir]", "mov     dword ptr [rax+18h], 0", "mov     [rbp+i], 0", "jmp     short loc_BFC8"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 1, 0, 6, 0, 0, 2, 2, 0.0, ["mov     rax, [rbp+ir]", "mov     edx, [rbp+i]", "movsxd  rdx, edx", "mov     ecx, [rbp+default_val]", "mov     [rax+rdx*4], ecx", "add     [rbp+i], 1"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "movsxd~rdx,edx", "mov~ecx,[rbp+0]", "mov~<TAG>,ecx", "add~[rbp+0],0"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+ir]", "mov     edx, [rbp+default_val]", "mov     [rax+10h], edx", "nop", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 1, 26, 0.125, 0, 1], "succs": [[2, 3], [0], [0], []], "fname": "i_ring_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ir], rdi", "mov     rax, [rbp+ir]", "movzx   eax, byte ptr [rax+1Ch]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 7, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 2, 1, 0, 28, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ir], rdi", "mov     [rbp+val], esi", "mov     rax, [rbp+ir]", "mov     edx, [rax+14h]", "mov     rax, [rbp+ir]", "movzx   eax, byte ptr [rax+1Ch]", "xor     eax, 1", "movzx   eax, al", "add     eax, edx", "and     eax, 3", "mov     [rbp+dest_idx], eax", "mov     rax, [rbp+ir]", "mov     edx, [rbp+dest_idx]", "mov     eax, [rax+rdx*4]", "mov     [rbp+old_val], eax", "mov     rax, [rbp+ir]", "mov     edx, [rbp+dest_idx]", "mov     ecx, [rbp+val]", "mov     [rax+rdx*4], ecx", "mov     rax, [rbp+ir]", "mov     edx, [rbp+dest_idx]", "mov     [rax+14h], edx", "mov     rax, [rbp+ir]", "mov     eax, [rax+18h]", "cmp     [rbp+dest_idx], eax", "jnz     short loc_C068"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "movzx~eax,al", "add~eax,edx", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~<TAG>,ecx", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+ir]", "mov     byte ptr [rax+1Ch], 0", "mov     eax, [rbp+old_val]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~eax,[rbp+0]", "pop~rbp", "retn"]], [2, 0, 1, 1, 0, 11, 2, 0, 0, 1, 0.0, ["mov     rax, [rbp+ir]", "mov     edx, [rax+18h]", "mov     rax, [rbp+ir]", "movzx   eax, byte ptr [rax+1Ch]", "xor     eax, 1", "movzx   eax, al", "add     eax, edx", "and     eax, 3", "mov     edx, eax", "mov     rax, [rbp+ir]", "mov     [rax+18h], edx"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "movzx~eax,al", "add~eax,edx", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]]], "func_feature": [0, 4, 1, 0, 3, 3, 1, 44, 0.0, 0, 2], "succs": [[1, 2], [], [1]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 1, 1, 0, 7, 1, 0, 0, 0, 0.05, ["mov     rax, [rbp+ir]", "mov     eax, [rax+14h]", "add     eax, 3", "and     eax, 3", "mov     edx, eax", "mov     rax, [rbp+ir]", "mov     [rax+14h], edx"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "add~eax,0", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [0, 0, 3, 0, 0, 19, 0, 1, 1, 2, 0.15000000000000002, ["mov     rax, [rbp+ir]", "mov     edx, [rax+14h]", "mov     rax, [rbp+ir]", "mov     edx, edx", "mov     eax, [rax+rdx*4]", "mov     [rbp+top_val], eax", "mov     rax, [rbp+ir]", "mov     ecx, [rax+14h]", "mov     rax, [rbp+ir]", "mov     edx, [rax+10h]", "mov     rax, [rbp+ir]", "mov     ecx, ecx", "mov     [rax+rcx*4], edx", "mov     rax, [rbp+ir]", "mov     edx, [rax+14h]", "mov     rax, [rbp+ir]", "mov     eax, [rax+18h]", "cmp     edx, eax", "jnz     short loc_C0DC"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~edx,edx", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~ecx,ecx", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~edx,eax", "jnz~FOO"]], [0, 1, 5, 1, 1, 9, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+ir], rdi", "mov     rax, [rbp+ir]", "mov     rdi, rax; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_C096"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, [rbp+top_val]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 2, 1, 0.05, ["mov     rax, [rbp+ir]", "mov     byte ptr [rax+1Ch], 1", "jmp     short loc_C0F2"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "jmp~FOO"]]], "func_feature": [2, 2, 5, 0, 6, 6, 2, 42, 0.04167, 0, 2], "succs": [[4], [0, 5], [1, 3], [], [], [4]], "fname": "i_ring_pop", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.3333333333333333, ["mov     rax, [rbp+codeset]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_C135"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [3, 0, 4, 1, 1, 8, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     edi, 0Eh; item", "call    _nl_langinfo", "mov     [rbp+codeset], rax", "cmp     [rbp+codeset], 0", "jnz     short loc_C11F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 1, 2, 0.0, ["lea     rax, unk_EAC8", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 1, 0, 0, 2, 0, 0, 2, 1, 0.0, ["lea     rax, aAscii; \"ASCII\"", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+codeset]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 1, 3, 0, 5, 6, 1, 19, 0.06667, 2, 1], "succs": [[3, 4], [0, 2], [0], [4], []], "fname": "locale_charset", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 4, 0, 0, 3, 0, 0, 0, 0, 0.048611111111111105, ["mov     rax, [rbp+ap.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+ap.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [2, 1, 6, 0, 0, 9, 0, 1, 2, 4, 0.125, ["mov     [rbp+ap.gp_offset], 18h", "mov     [rbp+ap.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+ap.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+ap.reg_save_area], rax", "mov     eax, [rbp+ap.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C216"], ["mov~[rbp+0],<STR>", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 2, 0, 2, 12, 1, 3, 2, 1, 0.19444444444444442, ["mov     ecx, [rbp+mode]", "mov     edx, [rbp+flags]; oflag", "mov     rsi, [rbp+file]; file", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "mov     eax, 0", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rdi, [rbp+var_B8]", "xor     rdi, fs:28h", "jz      short locret_C273"], ["mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.125, ["mov     eax, [rax]", "mov     [rbp+mode], eax"], ["mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 0, 4, 2, 0, 8, 0, 1, 3, 3, 0.048611111111111105, ["mov     rax, [rbp+ap.reg_save_area]", "mov     edx, [rbp+ap.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+ap.gp_offset]", "add     edx, 8", "mov     [rbp+ap.gp_offset], edx", "jmp     short loc_C228"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [2, 0, 7, 0, 0, 8, 3, 1, 1, 2, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+mode], 0", "mov     eax, [rbp+flags]", "and     eax, 40h", "test    eax, eax", "jz      short loc_C230"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [0, 1, 9, 1, 0, 11, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+fd], edi", "mov     [rbp+file], rsi", "mov     [rbp+flags], edx", "mov     [rbp+var_98], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_C192"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 8, 13, 10, 12, 2, 64, 0.07361, 1, 3], "succs": [[4], [0, 5], [], [9, 2], [3], [4], [1, 3], [6], [6, 7], []], "fname": "openat_safer", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.1, ["mov     rax, [rbp+dirp]"], ["mov~rax,[rbp+0]"]], [0, 0, 2, 0, 0, 4, 0, 1, 2, 2, 0.05, ["mov     rax, [rbp+pnew_fd]", "mov     edx, [rbp+new_fd]", "mov     [rax], edx", "jmp     short loc_C300"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx", "jmp~FOO"]], [0, 0, 2, 0, 3, 10, 0, 3, 2, 2, 0.05, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+fdopendir_errno], eax", "mov     eax, [rbp+new_fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+fdopendir_errno]", "mov     [rdx], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.03333333333333333, ["mov     eax, 0", "jmp     short locret_C304"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 1, 3, 0.1, ["mov     eax, [rbp+new_fd]", "mov     edi, eax; fd", "call    _fdopendir", "mov     [rbp+dirp], rax", "cmp     [rbp+dirp], 0", "jz      short loc_C2DF"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 6, 1, 1, 20, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+dir_fd], edi", "mov     [rbp+dir], rsi", "mov     [rbp+extra_flags], edx", "mov     [rbp+pnew_fd], rcx", "mov     eax, [rbp+extra_flags]", "or      eax, 90900h", "mov     [rbp+open_flags], eax", "mov     edx, [rbp+open_flags]; flags", "mov     rcx, [rbp+dir]", "mov     eax, [rbp+dir_fd]", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    openat_safer", "mov     [rbp+new_fd], eax", "cmp     [rbp+new_fd], 0", "jns     short loc_C2BF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~eax,[rbp+0]", "or~eax,0", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]]], "func_feature": [5, 1, 8, 0, 7, 8, 1, 45, 0.04762, 0, 1], "succs": [[3], [0], [0], [], [3], [1, 2], [4, 5]], "fname": "opendirat", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.16666666666666666, ["cmp     [rbp+fd], 2", "jg      short loc_C351"], ["cmp~[rbp+0],0", "jg~FOO"]], [1, 1, 3, 1, 0, 6, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "cmp     [rbp+fd], 0", "js      short loc_C351"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 1, 0, 4, 16, 0, 4, 2, 1, 0.0, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    dup_safer", "mov     [rbp+f], eax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     eax, [rbp+f]", "mov     [rbp+fd], eax"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,[rbp+0]", "mov~[rbp+0],eax"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, [rbp+fd]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [4, 0, 6, 0, 4, 5, 2, 27, 0.04167, 0, 1], "succs": [[2, 3], [0, 3], [3], []], "fname": "fd_safer", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 7, 0, 1, 5, 1, 2, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+fp]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jz      short loc_C3C6"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 9, 1, 1, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fp], rdi", "mov     [rbp+saved_errno], 0", "mov     [rbp+result], 0", "mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_C393"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, 2, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     [rbp+result], 0FFFFFFFFh"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~[rbp+0],0"]], [1, 0, 3, 0, 1, 6, 0, 2, 3, 2, 0.19444444444444442, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "mov     [rbp+result], eax", "cmp     [rbp+saved_errno], 0", "jz      short loc_C409"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 6, 0, 2, 9, 0, 3, 2, 3, 0.048611111111111105, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_C3E0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.08333333333333333, ["mov     eax, [rbp+result]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.013888888888888888, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "jmp     short locret_C40C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 3, 0.09027777777777778, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_C3E0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 3, 3, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]]], "func_feature": [9, 2, 14, 0, 10, 14, 1, 52, 0.05139, 0, 1], "succs": [[8, 4], [0, 7], [5], [2, 5], [8, 3], [6], [], [6], [9, 3], [3]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 17, 0, 0, 2, 0, 1, 0, 0, 0.02147108843537415, ["cmp     eax, 406h", "jge     short loc_C65E"], ["cmp~eax,0", "jge~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 6, 6, 0.047619047619047616, ["cmp     eax, 407h", "jg      short loc_C620"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 11, 4, 0.010629251700680272, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [1, 0, 7, 0, 0, 3, 0, 1, 10, 5, 0.04379251700680272, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C6FC"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 5, 2, 0, 8, 0, 1, 9, 4, 0.011621315192743764, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C69E"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 8, 5, 0.040674603174603176, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C68C"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 4, 0.01636904761904762, ["cmp     eax, 401h", "jz      short loc_C639"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 5, 2, 0.00510204081632653, ["mov     eax, [rax]", "mov     [rbp+target_0], eax", "mov     edx, [rbp+target_0]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD_CLOEXEC", "mov     [rbp+result], eax", "jmp     loc_C741"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 2, 0, 8, 0, 1, 4, 3, 0.00233843537414966, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C56C"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 4, 3, 0.00233843537414966, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [1, 0, 14, 0, 0, 2, 0, 1, 9, 6, 0.013605442176870748, ["cmp     eax, 402h", "jz      short loc_C65E"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 9, 4, 0.011621315192743764, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [0, 1, 13, 0, 0, 2, 0, 1, 10, 6, 0.00977891156462585, ["cmp     eax, 400h", "jz      short loc_C65E"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 6, 0.006802721088435374, ["jmp     loc_C6CE"], ["jmp~FOO"]], [1, 0, 36, 0, 0, 3, 0, 1, 4, 4, 0.07142857142857142, ["mov     eax, [rbp+action]", "cmp     eax, 0Bh", "jz      loc_C639"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 3, 5, 0.057823129251700675, ["jmp     loc_C594"], ["jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 7, 5, 0.028273809523809524, ["cmp     eax, 409h", "jz      short loc_C65E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 5, 5, 0.07653061224489796, ["cmp     eax, 0Bh", "jg      short loc_C5F8"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 4, 2, 0.007653061224489796, ["mov     eax, [rax]", "mov     [rbp+target], eax", "mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD", "mov     [rbp+result], eax", "jmp     loc_C741"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 2, 0, 8, 0, 1, 3, 3, 0.003401360544217687, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C504"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.003401360544217687, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [1, 0, 25, 0, 0, 2, 0, 1, 6, 4, 0.03784013605442177, ["cmp     eax, 3", "jz      loc_C639"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, 4, 0.022321428571428572, ["cmp     eax, 409h", "jl      short loc_C639"], ["cmp~eax,0", "jl~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.03996598639455782, ["mov     eax, [rbp+result]", "mov     rcx, [rbp+var_B8]", "xor     rcx, fs:28h", "jz      short locret_C75E"], ["mov~eax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 9, 4, 0.017006802721088433, ["cmp     eax, 40Ah", "jnz     loc_C6CE"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 7, 5, 0.04081632653061224, ["cmp     eax, 3", "jg      short loc_C5D1"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 4, 0.006377551020408163, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C55A"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 2, 5, 0.04974489795918367, ["cmp     eax, 406h", "jz      short loc_C52C"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 47, 0, 0, 13, 2, 1, 1, 5, 0.03996598639455782, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+result], 0FFFFFFFFh", "mov     [rbp+arg.gp_offset], 10h", "mov     [rbp+arg.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+arg.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+arg.reg_save_area], rax", "mov     eax, [rbp+action]", "test    eax, eax", "jz      short loc_C4C4"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "test~eax,eax", "jz~FOO"]], [0, 1, 49, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 100h", "mov     [rbp+fd], edi", "mov     [rbp+action], esi", "mov     [rbp+var_A0], rdx", "mov     [rbp+var_98], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_C465"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 48, 0, 0, 8, 0, 0, 1, 6, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 4, 0.015306122448979591, ["cmp     eax, 1", "jz      short loc_C639"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 9, 6, 0.013605442176870748, ["cmp     eax, 1", "jg      loc_C65E"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 6, 2, 0.04336734693877551, ["nop"], ["nop"]], [1, 0, 4, 0, 1, 8, 0, 2, 5, 3, 0.026077097505668934, ["mov     edx, [rbp+action]", "mov     eax, [rbp+fd]", "mov     esi, edx; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "jmp     loc_C740"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 0, 2, 10, 3, 0.016439909297052156, ["mov     eax, [rax]", "mov     [rbp+x], eax", "mov     edx, [rbp+x]", "mov     ecx, [rbp+action]", "mov     eax, [rbp+fd]", "mov     esi, ecx; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "jmp     short loc_C740"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,ecx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 0, 1, 12, 3, 0.011904761904761904, ["mov     rax, [rax]", "mov     [rbp+p], rax", "mov     rdx, [rbp+p]", "mov     ecx, [rbp+action]", "mov     eax, [rbp+fd]", "mov     esi, ecx; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "nop"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,ecx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "nop"]], [0, 0, 13, 0, 0, 2, 1, 1, 10, 6, 0.00977891156462585, ["test    eax, eax", "jz      loc_C65E"], ["test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 6, 0.006802721088435374, ["jmp     loc_C6CE"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 2, 4, 0.007653061224489796, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C4F2"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 8, 6, 0.02806122448979592, ["cmp     eax, 8", "jz      loc_C65E"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 6, 0.006802721088435374, ["jmp     loc_C6CE"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 12, 6, 0.003401360544217687, ["jmp     loc_C6CE"], ["jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 10, 4, 0.012471655328798185, ["cmp     eax, 9", "jz      short loc_C639"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, 5, 0.02565192743764172, ["cmp     eax, 8", "jg      short loc_C5E9"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 13, 0, 0, 2, 0, 1, 10, 6, 0.011479591836734693, ["cmp     eax, 4", "jz      short loc_C65E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 11, 6, 0.008503401360544217, ["cmp     eax, 0Ah", "jz      short loc_C65E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 5, 2, 0, 8, 0, 1, 11, 4, 0.010629251700680272, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C70E"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]]], "func_feature": [6, 5, 47, 14, 50, 76, 2, 192, 0.02009, 1, 9], "succs": [[5, 6], [0, 16], [37], [49, 2], [36], [11, 4], [10, 35], [24], [7], [7], [12, 5], [36], [13, 5], [3], [17, 35], [14], [5, 22], [1, 21], [24], [18], [18], [26, 35], [25, 35], [], [46, 23], [35, 3], [32, 41], [8, 9], [27, 15], [40, 28], [29, 31], [29], [33, 35], [5, 38], [24], [34], [34], [34], [5, 39], [3], [19, 20], [45, 5], [3], [3], [48, 35], [44, 47], [], [42, 5], [43, 5], [37]], "fname": "rpl_fcntl", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 1, 0, 1, 1, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+target], esi", "mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, 0; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "mov     eax, [rbp+result]", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 3, 15, 0.0, 0, 1], "succs": [[]], "fname": "rpl_fcntl_DUPFD", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[4, 0, 2, 0, 1, 10, 1, 2, 0, 0, 0.003787878787878788, ["mov     eax, [rbp+flags]", "or      eax, 1", "mov     edx, eax", "mov     eax, [rbp+result]", "mov     esi, 2; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_C88A"], ["mov~eax,[rbp+0]", "or~eax,0", "mov~edx,eax", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [3, 0, 3, 0, 1, 8, 0, 2, 4, 2, 0.13636363636363635, ["mov     eax, [rbp+result]", "mov     esi, 1; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+flags], eax", "cmp     [rbp+flags], 0", "js      short loc_C862"], ["mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 3, 1, 0.18181818181818182, ["mov     eax, cs:have_dupfd_cloexec_3019", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_C88A"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.26515151515151514, ["cmp     [rbp+result], 0", "js      short loc_C88A"], ["cmp~[rbp+0],0", "js~FOO"]], [0, 1, 12, 1, 0, 8, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+target], esi", "mov     eax, cs:have_dupfd_cloexec_3019", "test    eax, eax", "js      short loc_C801"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [1, 0, 1, 0, 3, 11, 0, 3, 5, 1, 0.003787878787878788, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     eax, [rbp+result]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     [rbp+result], 0FFFFFFFFh"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, [rbp+result]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 9, 0, 1, 4, 0, 2, 2, 3, 0.030303030303030304, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jz      short loc_C7DD"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [3, 0, 10, 0, 1, 9, 0, 1, 1, 3, 0.030303030303030304, ["mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, 406h; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "cmp     [rbp+result], 0", "jns     short loc_C7D1"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 1, 2, 0.045454545454545456, ["mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD", "mov     [rbp+result], eax"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax"]], [1, 0, 7, 0, 1, 8, 0, 2, 3, 2, 0.045454545454545456, ["mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD", "mov     [rbp+result], eax", "cmp     [rbp+result], 0", "js      short loc_C813"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 2, 0.06818181818181818, ["mov     cs:have_dupfd_cloexec_3019, 1", "jmp     short loc_C813"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, 2, 0.0, ["mov     cs:have_dupfd_cloexec_3019, 0FFFFFFFFh", "jmp     short loc_C813"], ["mov~<TAG>,0", "jmp~FOO"]]], "func_feature": [9, 2, 18, 0, 13, 20, 1, 76, 0.06235, 1, 1], "succs": [[5, 6], [0, 5], [1, 6], [2, 6], [8, 9], [6], [], [10, 11], [11, 7], [3], [3, 12], [3], [3]], "fname": "rpl_fcntl_DUPFD_CLOEXEC", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 2, 1, 0, 9, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fp], rdi", "mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 100h", "test    eax, eax", "jz      short loc_C8C0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [2, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.0, ["mov     rax, [rbp+fp]", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rax; fp", "call    rpl_fseeko"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO"]]], "func_feature": [1, 2, 2, 0, 3, 3, 1, 17, 0.0, 0, 1], "succs": [[1, 2], [], [1]], "fname": "clear_ungetc_buffer_preserving_position", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 3, 0, 1, 5, 1, 2, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jnz     short loc_C8F4"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 4, 1, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+stream], rdi", "cmp     [rbp+stream], 0", "jz      short loc_C8E6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.125, ["mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush", "jmp     short locret_C90C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 2, 6, 0, 2, 2, 1, 0.041666666666666664, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    clear_ungetc_buffer_preserving_position", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [4, 1, 7, 0, 5, 6, 1, 23, 0.05, 0, 1], "succs": [[2, 4], [0, 2], [3], [], [3]], "fname": "rpl_fflush", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 3, 0, 2, 12, 0, 3, 0, 0, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     ecx, eax", "mov     edx, [rbp+whence]; whence", "mov     rax, [rbp+offset]", "mov     rsi, rax; offset", "mov     edi, ecx; fd", "call    _lseek", "mov     [rbp+pos], rax", "cmp     [rbp+pos], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_C989"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~ecx,eax", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,ecx", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 2, 2, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rax, [rax+48h]", "test    rax, rax", "jnz     short loc_C9B0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 1, 1, 0.07142857142857142, ["mov     edx, [rbp+whence]; whence", "mov     rcx, [rbp+offset]", "mov     rax, [rbp+fp]", "mov     rsi, rcx; off", "mov     rdi, rax; stream", "call    _fseeko"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 7, 1, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fp], rdi", "mov     [rbp+offset], rsi", "mov     [rbp+whence], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_C9B0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 6, 0, 1, 1, 2, 0.09523809523809523, ["mov     rax, [rbp+fp]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+20h]", "cmp     rdx, rax", "jnz     short loc_C9B0"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_C9C6"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 1, 0, 0, 11, 1, 1, 4, 1, 0.011904761904761904, ["mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 0FFFFFFEFh", "mov     edx, eax", "mov     rax, [rbp+fp]", "mov     [rax], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rbp+pos]", "mov     [rax+90h], rdx", "mov     eax, 0", "jmp     short locret_C9C6"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 2, 9, 0, 8, 11, 1, 55, 0.05952, 0, 1], "succs": [[5, 7], [0, 2], [6], [2, 4], [1, 2], [6], [], [6]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     ecx, eax", "rol     rdx, cl", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,eax", "rol~rdx,cl", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotl64", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     ecx, eax", "ror     rdx, cl", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,eax", "ror~rdx,cl", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotr64", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], edi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     edx, [rbp+x]", "mov     ecx, eax", "rol     edx, cl", "mov     eax, edx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,eax", "rol~edx,cl", "mov~eax,edx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotl32", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], edi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     edx, [rbp+x]", "mov     ecx, eax", "ror     edx, cl", "mov     eax, edx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,eax", "ror~edx,cl", "mov~eax,edx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotr32", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     rsi, rdx", "mov     ecx, eax", "shl     rsi, cl", "mov     eax, [rbp+n]", "mov     edx, 40h ; '@'", "sub     edx, eax", "mov     eax, edx", "mov     rdx, [rbp+x]", "mov     ecx, eax", "shr     rdx, cl", "mov     rax, rdx", "or      rax, rsi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shl~rsi,cl", "mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~rdx,[rbp+0]", "mov~ecx,eax", "shr~rdx,cl", "mov~rax,rdx", "or~rax,rsi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl_sz", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, cl", "mov     eax, [rbp+n]", "mov     edx, 40h ; '@'", "sub     edx, eax", "mov     eax, edx", "mov     rdx, [rbp+x]", "mov     ecx, eax", "shl     rdx, cl", "mov     rax, rdx", "or      rax, rsi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,cl", "mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~rdx,[rbp+0]", "mov~ecx,eax", "shl~rdx,cl", "mov~rax,rdx", "or~rax,rsi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr_sz", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], ax", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 10h", "sub     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],ax", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl16", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], ax", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 10h", "sub     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],ax", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr16", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], al", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 8", "sub     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl8", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], al", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 8", "sub     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr8", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0.023809523809523808, ["jmp     short loc_CB8A"], ["jmp~FOO"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 2, 0.07142857142857142, ["sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_CB91"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.04365079365079365, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 3, 0, 1, 1, 2, 0.05158730158730158, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CB91"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 7, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 5Ah ; 'Z'", "jg      short loc_CB82"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07539682539682539, ["mov     eax, 1", "jmp     short loc_CB96"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 2, 0.06746031746031744, ["cmp     eax, 41h ; 'A'", "jge     short loc_CB8A"], ["cmp~eax,0", "jge~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 6, 0, 8, 11, 0, 20, 0.04167, 0, 2], "succs": [[5], [0, 2], [7], [2, 5], [3, 6], [7], [1, 5], []], "fname": "c_isalnum", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_CBC0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 41h ; 'A'", "jl      short loc_CBBB"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 0, 0.1, ["cmp     eax, 5Ah ; 'Z'", "jle     short loc_CBB4"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 2, 0, 0.05, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CBBB"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 16, 0.05, 0, 1], "succs": [[], [0], [0], [2, 4], [1, 5], [1, 2]], "fname": "c_isalpha", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CBE0"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "add     eax, 0", "cmp     eax, 7Fh", "ja      short loc_CBDB"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "add~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_isascii", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.125, ["mov     eax, 1", "jmp     short loc_CC01"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 4, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "cmp     [rbp+c], 20h ; ' '", "jz      short loc_CBF5"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],<STR>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.08333333333333333, ["cmp     [rbp+c], 9", "jnz     short loc_CBFC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 13, 0.05, 0, 0], "succs": [[4], [0, 2], [0, 3], [4], []], "fname": "c_isblank", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_CC2A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 2, 0.1, ["cmp     eax, 1Fh", "jle     short loc_CC1E"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.05, ["cmp     eax, 7Fh", "jnz     short loc_CC25"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 6, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "test    eax, eax", "js      short loc_CC25"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[5], [0, 2], [0, 3], [5], [1, 3], []], "fname": "c_iscntrl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CC4A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_CC45"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isdigit", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CC6A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 21h ; '!'", "cmp     eax, 5Dh ; ']'", "ja      short loc_CC65"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isgraph", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CC8A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CC85"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_islower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CCAA"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [1, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "cmp     eax, 5Eh ; '^'", "ja      short loc_CCA5"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isprint", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05555555555555555, ["mov     eax, 1", "jmp     short loc_CCE8"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 5, 0, 0, 2, 0, 1, 1, 2, 0.048611111111111105, ["cmp     eax, 3Ah ; ':'", "jge     short loc_CCDC"], ["cmp~eax,<STR>", "jge~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.013888888888888888, ["jmp     short loc_CCDC"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.041666666666666664, ["cmp     eax, 60h ; '`'", "jle     short loc_CCDC"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 3, 2, 0.013888888888888888, ["sub     eax, 7Bh ; '{'", "cmp     eax, 3", "ja      short loc_CCE3"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 2, 0.041666666666666664, ["sub     eax, 21h ; '!'", "cmp     eax, 0Eh", "ja      short loc_CCE3"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 2, 0.048611111111111105, ["cmp     eax, 5Bh ; '['", "jl      short loc_CCE3"], ["cmp~eax,0", "jl~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 9, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 40h ; '@'", "jg      short loc_CCCA"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]]], "func_feature": [0, 0, 8, 0, 10, 15, 0, 24, 0.03056, 0, 2], "succs": [[8], [0, 6], [0], [0, 4], [0, 5], [8], [2, 5], [3, 5], [], [1, 7]], "fname": "c_ispunct", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 3, 0, 0, 2, 0, 1, 0, 0, 0.05, ["cmp     eax, 20h ; ' '", "jnz     short loc_CD0A"], ["cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 2, 0.1, ["cmp     eax, 0Dh", "jle     short loc_CD03"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_CD0F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 9", "jl      short loc_CD0A"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[2, 3], [0, 2], [5], [5], [1, 3], []], "fname": "c_isspace", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CD2F"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_CD2A"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_isupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 1, 4, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'; switch 55 cases", "cmp     eax, 36h ; '6'", "ja      short loc_CD6D; jumptable 000000000000CD64 default case"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.041666666666666664, ["mov     eax, 1; jumptable 000000000000CD64 cases 48-57,65-70,97-102", "jmp     short loc_CD72"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 1, 0, 8, 0, 1, 0, 2, 0.08333333333333333, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_EAD0", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_EAD0", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.125, ["mov     eax, 0; jumptable 000000000000CD64 default case"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 3, 0, 5, 6, 0, 20, 0.05, 1, 2], "succs": [[2, 3], [4], [1, 3], [4], []], "fname": "c_isxdigit", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 1, 1, 1, 0, 3, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, [rbp+c]", "add     eax, 20h ; ' '", "jmp     short loc_CD91"], ["mov~eax,[rbp+0]", "add~eax,<STR>", "jmp~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_CD8E"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]]], "func_feature": [0, 0, 2, 0, 4, 4, 2, 13, 0.04167, 0, 2], "succs": [[2], [0, 3], [], [2]], "fname": "c_tolower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 1, 1, 1, 0, 3, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "jmp     short loc_CDB0"], ["mov~eax,[rbp+0]", "sub~eax,<STR>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CDAD"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 13, 0.04167, 0, 2], "succs": [[], [0], [0], [1, 2]], "fname": "c_toupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[4, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fd], edi", "mov     eax, [rbp+fd]", "mov     edx, 3", "mov     esi, 0; action", "mov     edi, eax; fd", "mov     eax, 0", "call    rpl_fcntl", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 12, 0.0, 0, 1], "succs": [[]], "fname": "dup_safer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_CE36"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_CE20"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__stat'", "mov     rsi, rdi; filename", "mov     edi, 1; ver", "jmp     ___xstat"], ["mov~rdx,rsi", "mov~rsi,rdi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "stat_0", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__fstat'", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstat"], ["mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "fstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__lstat'", "mov     rsi, rdi; filename", "mov     edi, 1; ver", "jmp     ___lxstat"], ["mov~rdx,rsi", "mov~rsi,rdi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "lstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[1, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.0, ["mov     r8d, ecx; flag", "mov     rcx, rdx; stat_buf", "mov     rdx, rsi; filename", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstatat"], ["mov~r8d,ecx", "mov~rcx,rdx", "mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "fstatat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn endgrent:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn printf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ferror_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn endpwent:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fstatfs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchownat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
