{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_19C2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_211D70", "jmp     cs:qword_211D78"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 72, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_19D0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 53, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 28, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 33, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 40, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdatasync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_at_line_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "error_at_line", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 105, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 31, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 25, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fsync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1ED0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_1ED0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_1F20"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1F20"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_1F53"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_1F68"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 2, 1, 0, 6, 0, 1, 0, 0, 0.5, ["movzx   edx, byte ptr [rax]", "movzx   edx, byte ptr [new_trans+rdx]", "mov     [rax], dl", "add     rax, 1", "cmp     rax, rcx", "jnz     short loc_1F88"], ["movzx~edx,<TAG>", "movzx~edx,<TAG>", "mov~<TAG>,dl", "add~rax,0", "cmp~rax,rcx", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0.0, ["lea     rax, trans_table", "lea     rcx, [rax+100h]"], ["lea~rax,<TAG>", "lea~rcx,[rax+0]"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     cs:translation_needed, 1", "retn"], ["mov~<TAG>,0", "retn"]]], "func_feature": [0, 0, 1, 0, 3, 3, 3, 10, 0.16667, 2, 1], "succs": [[0, 2], [0], []], "fname": "translate_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:interrupt_signal, edi", "retn"], ["mov~<TAG>,edi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "interrupt_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["mov     eax, cs:info_signal_count", "add     eax, 1", "mov     cs:info_signal_count, eax", "retn"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 1], "succs": [[]], "fname": "siginfo_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [2, 0, 4, 2, 0, 4, 0, 1, 1, 2, 0.16666666666666666, ["add     rdi, 1; operand", "add     rsi, 1; name", "cmp     [rdi-1], al", "jz      short operand_is"], ["add~rdi,0", "add~rsi,0", "cmp~[rdi-1]+0],al", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   eax, byte ptr [rsi]", "test    al, al", "jz      short loc_1FD3"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 0, 0, 0, 7, 2, 0, 1, 0, 0.0, ["movzx   edx, byte ptr [rdi]", "test    dl, dl", "setz    al", "cmp     dl, 3Dh ; '='", "setz    dl", "or      eax, edx", "retn"], ["movzx~edx,<TAG>", "test~dl,dl", "setz~al", "cmp~dl,0", "setz~dl", "or~eax,edx", "retn"]]], "func_feature": [0, 3, 2, 0, 4, 4, 14, 16, 0.08333, 0, 2], "succs": [[], [0, 2], [1, 3], []], "fname": "operand_is", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 2, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, offset", "add     rax, cs:input_offset", "mov     cs:input_offset, rax", "cmp     rax, offset", "jnb     short locret_2001"], ["mov~rax,offset", "add~rax,<TAG>", "mov~<TAG>,rax", "cmp~rax,offset", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]]], "func_feature": [0, 0, 0, 0, 3, 3, 4, 7, 0.0, 2, 1], "succs": [[1, 2], [], [1]], "fname": "advance_input_offset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 14, 0, 0, 7, 1, 1, 0, 0, 0.0, ["mov     ecx, 3", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_24A3"], ["mov~ecx,0", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 14, 1, 0, 4, 1, 1, 2, 4, 0.10416666666666667, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_24C2"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [4, 0, 2, 0, 2, 15, 0, 2, 5, -1, 0.052083333333333336, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rax, command_name; \"dd\"", "cmp     rbp, rax", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "cmovnz  r12, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rax,<TAG>", "cmp~rbp,rax", "lea~r12,<TAG>", "lea~rax,<TAG>", "cmovnz~r12,rax"]], [6, 0, 5, 0, 3, 15, 1, 4, 4, -1, 0.08125, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_D4A2", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_2535"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 3, 0, 2, 9, 0, 3, 6, -1, 0.020833333333333332, ["mov     r12, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, r12; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_2535"], ["mov~r12,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, -1, 0.025, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_25C1"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 1, 0.058333333333333334, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_25BA"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [6, 0, 8, 0, 3, 15, 1, 4, 4, 2, 0.10208333333333333, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_D4A2", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      loc_25EE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 6, 0, 0.008333333333333333, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"dd\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_2587"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [4, 0, 1, 0, 2, 11, 0, 3, 6, -1, 0.05416666666666667, ["mov     edx, 5; category", "lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_205A"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 1, -1, 0.004166666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, msgid; \"Try '%s --help' for more information.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 3, 0.17916666666666667, ["mov     rbp, [rdx+8]", "test    rbp, rbp", "jz      loc_2637"], ["mov~rbp,[rdx+0]", "test~rbp,rbp", "jz~FOO"]], [52, 0, 14, 0, 46, 213, 0, 46, 1, 5, 0.05416666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aUsageSOperandO; \"Usage: %s [OPERAND]...\\n  or:  %s OPTIO\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aCopyAFileConve; \"Copy a file, converting and formatting \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aIfFileReadFrom; \"  if=FILE         read from FILE instea\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNAndBytesMayBe; \"\\nN and BYTES may be followed by the fo\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aAsciiFromEbcdi; \"  ascii     from EBCDIC to ASCII\\n  ebc\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aExclFailIfTheO; \"  excl      fail if the output file alr\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aEachFlagSymbol; \"\\nEach FLAG symbol may be:\\n\\n  append \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aDirectUseDirec; \"  direct    use direct I/O for data\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aDirectoryFailU; \"  directory  fail unless a directory\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aDsyncUseSynchr; \"  dsync     use synchronized I/O for da\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aSyncLikewiseBu; \"  sync      likewise, but also for meta\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aFullblockAccum; \"  fullblock  accumulate full blocks of \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNonblockUseNon; \"  nonblock  use non-blocking I/O\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNoatimeDoNotUp; \"  noatime   do not update access time\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNocacheRequest; \"  nocache   Request to drop cache.  See\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNocttyDoNotAss; \"  noctty    do not assign controlling t\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNofollowDoNotF; \"  nofollow  do not follow symlinks\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aCountBytesTrea; \"  count_bytes  treat 'count=N' as a byt\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aSkipBytesTreat; \"  skip_bytes  treat 'skip=N' as a byte \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aSeekBytesTreat; \"  seek_bytes  treat 'seek=N' as a byte \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     edx, 5; category", "lea     rsi, aSendingASSigna; \"\\nSending a %s signal to a running 'dd'\"...", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rdx, aUsr1; \"USR1\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rax, asc_D42C; \"[\"", "mov     [rsp+98h+var_98], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+98h+var_90], rax", "lea     rax, package; \"coreutils\"", "mov     [rsp+98h+var_88], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+98h+var_80], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+98h+var_78], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+98h+var_70], rax", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+98h+var_68], rcx", "mov     [rsp+98h+var_60], rax", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+98h+var_58], rcx", "mov     [rsp+98h+var_50], rax", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+98h+var_48], rcx", "mov     [rsp+98h+var_40], rax", "mov     [rsp+98h+var_38], 0", "mov     [rsp+98h+var_30], 0", "mov     rdx, rsp", "lea     r8, command_name; \"dd\""], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rdx,rsp", "lea~r8,<TAG>"]], [4, 0, 2, 0, 2, 13, 0, 3, 5, -1, 0.027083333333333334, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"dd\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_2587"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [1, 0, 16, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     ebx, edi", "mov     rax, fs:28h", "mov     [rsp+98h+var_20], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_2061"], ["push~r12", "push~rbp", "push~rbx", "add~rsp,0", "mov~ebx,edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["lea     rbp, command_name; \"dd\""], ["lea~rbp,<TAG>"]]], "func_feature": [67, 9, 79, 15, 17, 24, 7, 354, 0.04632, 48, 2], "succs": [[1, 12], [0, 12], [10], [2, 5], [2], [2, 4], [8, 16], [14, 6], [10], [], [9], [9], [3, 7], [1], [10], [11, 13], [4]], "fname": "usage", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "call    __exit"], ["mov~edi,0", "call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 0, 0.125, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_2713"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 1, 0, 0.041666666666666664, ["call    close_stdout", "jmp     short loc_2707"], ["call~FOO", "jmp~FOO"]], [2, 0, 4, 1, 0, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "cmp     cs:close_stdout_required, 0", "jnz     short loc_270C"], ["sub~rsp,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [3, 1, 6, 0, 5, 5, 0, 13, 0.03333, 2, 2], "succs": [[], [0, 4], [4], [1, 2], []], "fname": "maybe_close_stdout", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 9, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 0D0h", "mov     ebx, edi", "mov     ebp, esi", "mov     r12, fmt", "mov     [rsp+0E8h+var_B0], rcx", "mov     [rsp+0E8h+var_A8], r8", "mov     [rsp+0E8h+var_A0], r9", "test    al, al", "jz      short loc_2779"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~ebp,esi", "mov~r12,fmt", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 0, 4, 0.125, ["mov     status, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_2809"], ["mov~status,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 0, 2, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rsp+0E8h+var_D0], rax", "xor     eax, eax", "cmp     cs:progress_len, 0", "jle     short loc_27B8"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jle~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 0D0h", "pop     status", "pop     errnum", "pop     fmt", "retn"], ["add~rsp,0", "pop~status", "pop~errnum", "pop~fmt", "retn"]], [1, 1, 2, 0, 1, 14, 1, 2, 0, 1, 0.19444444444444442, ["mov     [rsp+0E8h+ap.gp_offset], 18h", "mov     [rsp+0E8h+ap.fp_offset], 30h ; '0'", "lea     rax, [rsp+0E8h+arg_0]", "mov     [rsp+0E8h+ap.overflow_arg_area], rax", "lea     rax, [rsp+0E8h+var_C8]", "mov     [rsp+0E8h+ap.reg_save_area], rax", "mov     rcx, rsp; args", "mov     rdx, fmt; format", "mov     esi, ebp; errnum", "mov     edi, ebx; status", "call    verror", "mov     rax, [rsp+0E8h+var_D0]", "xor     rax, fs:28h", "jnz     short loc_2815"], ["mov~<TAG>,<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rcx,rsp", "mov~rdx,fmt", "mov~esi,ebp", "mov~edi,ebx", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 0, 0, 3, 0.048611111111111105, ["lea     fmt, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~fmt,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.125, ["mov     cs:progress_len, 0"], ["mov~<TAG>,0"]], [1, 0, 4, 0, 1, 3, 0, 2, 0, 3, 0.048611111111111105, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_27AE"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 0, 3, 0.0, ["movaps  [rsp+0E8h+var_98], xmm0", "movaps  [rsp+0E8h+var_88], xmm1", "movaps  [rsp+0E8h+var_78], xmm2", "movaps  [rsp+0E8h+var_68], xmm3", "movaps  [rsp+0E8h+var_58], xmm4", "movaps  [rsp+0E8h+var_48], xmm5", "movaps  [rsp+0E8h+var_38], xmm6", "movaps  [rsp+0E8h+var_28], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 3, 7, 13, 10, 12, 47, 56, 0.07361, 3, 2], "succs": [[8, 2], [5, 7], [1, 4], [], [9, 3], [6], [4], [6], [2], []], "fname": "nl_error", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 1, 4, 1, 2, 1, 0, 0.08333333333333333, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_288C"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 3, 1, 1, 7, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     edi, 0; fd", "call    _close", "test    eax, eax", "js      short loc_2843"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [5, 0, 0, 0, 4, 16, 0, 4, 1, 0, 0.0, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aClosingInputFi; \"closing input file %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]]], "func_feature": [10, 2, 12, 0, 6, 4, 2, 47, 0.01667, 4, 2], "succs": [[0], [3], [1, 4], [], []], "fname": "cleanup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 12, 0, 0, 3, 0, 1, 0, 0, 0.046703296703296704, ["mov     rdi, [rsp+38h+suffix]", "cmp     byte ptr [rdi], 78h ; 'x'", "jz      short loc_294D"], ["mov~rdi,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [2, 1, 14, 1, 1, 16, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 20h", "mov     rbx, str", "mov     rbp, invalid", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "lea     rcx, [rsp+38h+n]; val", "lea     invalid, [rsp+38h+suffix]; ptr", "lea     r8, valid_suffixes; \"bcEGkKMPTwYZ0\"", "mov     edx, 0Ah; strtol_base", "call    xstrtoumax", "cmp     eax, 2", "jz      short loc_2939"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,str", "mov~rbp,invalid", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rcx,[rsp+0]", "lea~invalid,[rsp+0]", "lea~r8,<TAG>", "mov~edx,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.03296703296703297, ["mov     dword ptr [invalid+0], 1", "mov     eax, 0", "jmp     short loc_291C"], ["mov~[word ptr [invalid+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 9, 2, 0, 7, 0, 1, 3, 3, 0.03296703296703297, ["mov     rcx, [rsp+38h+n]", "mov     multiplier, rcx", "imul    rax, multiplier", "mov     edx, 0", "div     multiplier", "cmp     rcx, rax", "jz      short loc_2988"], ["mov~rcx,[rsp+0]", "mov~multiplier,rcx", "imul~rax,multiplier", "mov~edx,0", "div~,multiplier", "cmp~rcx,rax", "jz~FOO"]], [2, 0, 6, 0, 0, 8, 1, 1, 4, 4, 0.027472527472527476, ["mov     ecx, 2", "lea     rdi, arg+1; \"0x\"", "mov     rsi, str", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      short loc_29BA"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,str", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, 4, 0.08241758241758243, ["cmp     [rsp+38h+n], 0", "jnz     short loc_29AA"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 4, 1, 0, 3, 0, 1, 4, 3, 0.08241758241758243, ["imul    multiplier, [rsp+38h+n]", "mov     [rsp+38h+n], r12", "jmp     loc_2917"], ["imul~multiplier,[rsp+0]", "mov~[rsp+0],r12", "jmp~FOO"]], [7, 0, 5, 0, 4, 20, 0, 5, 5, 4, 0.0, ["lea     rsi, arg; \"00x\"", "mov     edi, 1; n", "call    quote_n", "mov     invalid, rax", "lea     rsi, arg+1; arg", "mov     edi, 0; n", "call    quote_n", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aWarningSIsAZer; \"warning: %s is a zero multiplier; use %\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     short loc_29AA"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~invalid,rax", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.13186813186813187, ["mov     rdx, [rsp+38h+var_20]", "xor     rdx, fs:28h", "jnz     loc_2A17"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 2, 2, 0.03571428571428572, ["mov     [invalid+0], eax", "mov     eax, 0", "jmp     short loc_291C"], ["mov~[invalid+0],eax", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.07967032967032968, ["mov     rax, [rsp+38h+n]"], ["mov~rax,[rsp+0]"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.019230769230769232, ["test    eax, eax", "jnz     short loc_2943"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 10, 1, 1, 6, 1, 2, 2, 4, 0.07142857142857144, ["add     rdi, 1; str", "mov     rsi, invalid; invalid", "call    parse_integer", "mov     r12, rax", "test    multiplier, multiplier", "jz      short loc_2988"], ["add~rdi,0", "mov~rsi,invalid", "call~FOO", "mov~r12,rax", "test~multiplier,multiplier", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [7, 5, 19, 1, 15, 21, 2, 83, 0.04286, 5, 6], "succs": [[9, 12], [0, 11], [8], [2, 5], [6, 7], [4, 6], [10], [6], [13, 14], [8], [8], [9, 10], [3, 5], [], []], "fname": "parse_integer", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 16, 0, 1, 8, 2, 2, 0, 0, 0.04779411764705882, ["mov     ebp, edi", "mov     r13, name", "mov     esi, 3; action", "call    rpl_fcntl", "mov     r12d, eax", "or      ebx, eax", "test    eax, eax", "js      short loc_2AA7"], ["mov~ebp,edi", "mov~r13,name", "mov~esi,0", "call~FOO", "mov~r12d,eax", "or~ebx,eax", "test~eax,eax", "js~FOO"]], [2, 0, 17, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "mov     ebx, esi", "and     ebx, 0FFFDFEFFh", "jnz     short loc_2A6B"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~ebx,esi", "and~ebx,0", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 2, 2, 0.025735294117647058, ["cmp     eax, ebx", "jz      short loc_2A46"], ["cmp~eax,ebx", "jz~FOO"]], [5, 0, 13, 0, 4, 16, 0, 4, 2, 5, 0.2647058823529412, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     fd, rax", "mov     edx, 5; category", "lea     rsi, aSettingFlagsFo; \"setting flags for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "mov~fd,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 6, 6, 0.10477941176470588, ["jmp     loc_2AA7"], ["jmp~FOO"]], [3, 0, 13, 0, 1, 7, 0, 2, 6, 4, 0.08272058823529412, ["mov     edx, ebx", "mov     esi, 4; action", "mov     edi, ebp; fd", "mov     eax, 0", "call    rpl_fcntl", "cmp     eax, 0FFFFFFFFh", "jz      loc_2AA7"], ["mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [3, 0, 13, 0, 1, 7, 0, 2, 4, 2, 0.01838235294117647, ["mov     edx, ebx", "mov     esi, 4; action", "mov     edi, ebp; fd", "mov     eax, 0", "call    rpl_fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_2A46"], ["mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, 3, 0.025735294117647058, ["mov     eax, 1", "jmp     short loc_2B1F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.11029411764705882, ["mov     rax, [rsp+0C8h+var_30]", "xor     rax, fs:28h", "jnz     loc_2B5E"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 5, 2, 0.1838235294117647, ["test    al, al", "jnz     loc_2A46"], ["test~al,al", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 1, 1, 3, 3, 0.04779411764705882, ["test    ebx, 10000h", "jnz     short loc_2AEC"], ["test~ebx,0", "jnz~FOO"]], [1, 1, 13, 0, 0, 4, 1, 1, 4, 3, 0.19852941176470587, ["mov     eax, [rsp+0C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_2B2C"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 3, 4, 0.3235294117647059, ["mov     rdx, rsp; stat_buf", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_2B1A"], ["mov~rdx,rsp", "mov~esi,ebp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 5, 2, 0.12867647058823528, ["and     ebx, 0FFFEFFFFh", "cmp     r12d, ebx", "jz      loc_2A46"], ["and~ebx,0", "cmp~r12d,ebx", "jz~FOO"]], [1, 0, 13, 0, 1, 2, 0, 1, 5, 4, 0.011029411764705881, ["call    ___errno_location", "mov     dword ptr [rax], 14h"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 13, 0, 0, 1, 0, 0, 4, 3, 0.1213235294117647, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [10, 10, 23, 1, 18, 27, 2, 84, 0.09416, 2, 2], "succs": [[2, 3], [0, 9], [9, 11], [13], [3], [3, 7], [9, 3], [10], [], [8, 17], [9, 4], [13, 6], [14, 15], [16, 12], [9, 5], [16], [10], []], "fname": "set_fd_flags", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 0, 0.17777777777777778, ["mov     rax, rbp", "mov     rcx, [rsp+98h+var_30]", "xor     rcx, fs:28h", "jnz     short loc_2C60"], ["mov~rax,rbp", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 6, 0, 0.06666666666666667, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "jmp     loc_2BDC"], ["call~FOO", "mov~<TAG>,0", "mov~rbp,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 0, 0.11111111111111112, ["cmp     cs:status_level, 1", "jz      short loc_2C49"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 4, 0, 2, 12, 0, 2, 6, 0, 0.0, ["mov     fdesc, [rsp+98h+s2.mt_type]", "mov     edx, 5; category", "lea     rsi, aWarningWorking; \"warning: working around lseek kernel bu\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, filename", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error"], ["mov~fdesc,[rsp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,filename", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 4, 0, 0.13333333333333333, ["mov     rax, qword ptr [rsp+98h+s2.mt_fileno]", "cmp     qword ptr [rsp+98h+s1.mt_fileno], rax", "jnz     short loc_2BDC"], ["mov~rax,[word ptr [rsp+0]", "cmp~[word ptr [rsp+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 3, 0, 0.13333333333333333, ["mov     rax, [rsp+98h+s2.mt_resid]", "cmp     [rsp+98h+s1.mt_resid], rax", "jz      short loc_2BFC"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [2, 0, 10, 1, 2, 25, 2, 3, 0, 0, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 70h", "mov     r13, filename", "mov     ebx, esi", "mov     rbp, offset", "mov     r12d, ecx", "mov     rax, fs:28h", "mov     [rsp+98h+var_30], rax", "xor     eax, eax", "mov     offset, rsp", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "call    _ioctl", "mov     r14d, eax", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, ebx; fd", "call    _lseek", "mov     offset, rax", "test    new_position, new_position", "js      short loc_2BDC"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,filename", "mov~ebx,esi", "mov~rbp,offset", "mov~r12d,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~offset,rsp", "mov~esi,0", "mov~edi,ebx", "call~FOO", "mov~r14d,eax", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,ebx", "call~FOO", "mov~offset,rax", "test~new_position,new_position", "js~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 0, 0.06666666666666667, ["test    r14d, r14d", "jnz     short loc_2BDC"], ["test~r14d,r14d", "jnz~FOO"]], [2, 0, 8, 0, 1, 7, 1, 2, 2, 0, 0.11111111111111112, ["lea     rdx, [rsp+98h+s2]", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "mov     eax, 0", "call    _ioctl", "test    eax, eax", "jnz     short loc_2BDC"], ["lea~rdx,[rsp+0]", "mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 70h", "pop     rbx", "pop     rbp", "pop     whence", "pop     filename", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~whence", "pop~filename", "pop~r14", "retn"]]], "func_feature": [7, 5, 15, 1, 11, 16, 4, 70, 0.07273, 3, 2], "succs": [[], [0, 10], [1], [2, 4], [2], [1, 3], [1, 5], [8, 1], [1, 9], [1, 6], []], "fname": "skip_via_lseek", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 3, 2, 0, 7, 0, 1, 0, 0, 0.06666666666666667, ["lea     rcx, [rax+rbx+1]", "mov     rax, rcx", "mov     edx, 0", "div     rbx", "sub     rcx, rdx", "mov     cs:ibuf, rcx", "jmp     short loc_2C8B"], ["lea~rcx,[rax+0]", "mov~rax,rcx", "mov~edx,0", "div~,rbx", "sub~rcx,rdx", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 5, 0, 1, 6, 1, 2, 1, 2, 0.06666666666666667, ["mov     rbx, cs:page_size", "mov     rbp, cs:input_blocksize", "lea     rdi, [rbp+rbx*2+3]; size", "call    _malloc", "test    real_buf, real_buf", "jz      short loc_2CE5"], ["mov~rbx,<TAG>", "mov~rbp,<TAG>", "lea~rdi,[rbp+0]", "call~FOO", "test~real_buf,real_buf", "jz~FOO"]], [2, 0, 6, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "cmp     cs:ibuf, 0", "jz      short loc_2CAC"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["mov     rax, [rsp+2B8h+var_20]", "xor     rax, fs:28h", "jnz     loc_2D36"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [8, 0, 1, 0, 3, 18, 0, 3, 2, 1, 0.03333333333333333, ["mov     rsi, rsp; buf", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1F1h; opts", "mov     rdi, ibs; n", "call    human_readable", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste; \"memory exhausted by input buffer of siz\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, ibs", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,rsp", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rdi,ibs", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,ibs", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 3, 9, 1, 7, 8, 3, 47, 0.04762, 5, 4], "succs": [[4], [0, 5], [1, 4], [], [3, 6], [6], []], "fname": "alloc_ibuf", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["mov     rax, [rsp+2B8h+var_20]", "xor     rax, fs:28h", "jnz     loc_2E31"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 2, 0, 7, 0, 1, 3, 2, 0.05357142857142857, ["lea     rcx, [real_obuf+rbx-1]", "mov     real_obuf, rcx", "mov     edx, 0", "div     rbx", "sub     rcx, rdx", "mov     cs:obuf, rcx", "jmp     short loc_2D61"], ["lea~rcx,[real_obuf+0]", "mov~real_obuf,rcx", "mov~edx,0", "div~,rbx", "sub~rcx,rdx", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 2, 3, 0.07142857142857142, ["mov     rbx, cs:page_size", "mov     rbp, cs:output_blocksize", "lea     rdi, [rbx+rbp-1]; size", "call    _malloc", "test    real_obuf, real_obuf", "jz      short loc_2DC8"], ["mov~rbx,<TAG>", "mov~rbp,<TAG>", "lea~rdi,[rbx+0]", "call~FOO", "test~real_obuf,real_obuf", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 1, 3, 0.07142857142857142, ["test    byte ptr cs:conversions_mask+1, 8", "jz      loc_2E19"], ["test~<TAG>,0", "jz~FOO"]], [2, 0, 8, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "cmp     cs:obuf, 0", "jz      short loc_2D82"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 2, 2, 0.10714285714285714, ["call    alloc_ibuf", "mov     rax, cs:ibuf", "mov     cs:obuf, rax", "jmp     loc_2D61"], ["call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [8, 0, 4, 0, 3, 18, 0, 3, 3, 3, 0.017857142857142856, ["mov     rsi, rsp; buf", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1F1h; opts", "mov     rdi, obs; n", "call    human_readable", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste_0; \"memory exhausted by output buffer of si\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, obs", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,rsp", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rdi,obs", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,obs", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 4, 12, 1, 9, 11, 2, 53, 0.05952, 7, 4], "succs": [[], [0, 8], [1], [2, 7], [3, 6], [1, 4], [1], [6], []], "fname": "alloc_obuf", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 17, 0, 0, 2, 0, 0, 0, 0, 0.08455882352941177, ["lea     str, [strcomma+1]", "mov     ebp, edx"], ["lea~str,[strcomma+0]", "mov~ebp,edx"]], [0, 0, 17, 0, 0, 5, 3, 1, 6, 1, 0.11764705882352941, ["or      ebp, edx", "test    r12b, r12b", "cmovz   edx, ebp", "test    strcomma, strcomma", "jz      short loc_2F31"], ["or~ebp,edx", "test~r12b,r12b", "cmovz~edx,ebp", "test~strcomma,strcomma", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0.0, ["mov     eax, edx", "pop     str", "pop     rbp", "pop     exclusive", "pop     table", "pop     error_msgid", "retn"], ["mov~eax,edx", "pop~str", "pop~rbp", "pop~exclusive", "pop~table", "pop~error_msgid", "retn"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 7, 0.3161764705882353, ["cmp     byte ptr [entry], 0", "jz      loc_2E54"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 5, 3, 0.06985294117647059, ["cmp     dl, 2Ch ; ','", "jnz     short loc_2EE1"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 5, 8, 0.07720588235294118, ["jmp     short loc_2EE1"], ["jmp~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 5, 2, 0.21691176470588236, ["mov     edx, [entry+0Ch]", "test    edx, edx", "jnz     short loc_2F0C"], ["mov~edx,[entry+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 17, 2, 0, 4, 0, 1, 4, 5, 0.09191176470588235, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_2EF4"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 3, 4, 0.41911764705882354, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      short loc_2ECE"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [8, 0, 0, 0, 4, 19, 0, 4, 9, -1, 0.0, ["mov     rcx, slen; argsize", "mov     rdx, rbx; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "mov     rbx, rax", "mov     edx, 5; category", "mov     rsi, error_msgid; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rcx,slen", "mov~rdx,rbx", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "mov~rsi,error_msgid", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [3, 0, 1, 1, 0, 8, 0, 1, 8, -1, 0.025735294117647058, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     entry, str", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "jmp     short loc_2E5C"], ["mov~rcx,0", "mov~eax,0", "mov~entry,str", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 8, -1, 0.025735294117647058, ["sub     strcomma, str"], ["sub~strcomma,str"]], [1, 0, 17, 1, 0, 1, 0, 0, 7, 6, 0.13970588235294118, ["add     entry, 10h"], ["add~entry,0"]], [0, 0, 3, 0, 0, 2, 1, 1, 7, -1, 0.14338235294117646, ["test    strcomma, strcomma", "jz      short loc_2EB1"], ["test~strcomma,strcomma", "jz~FOO"]], [1, 0, 17, 0, 0, 11, 0, 1, 0, 7, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, str", "mov     r13, table", "mov     r14, error_msgid", "mov     r12d, edx", "mov     ebp, 0", "jmp     loc_2F1F"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,str", "mov~r13,table", "mov~r14,error_msgid", "mov~r12d,edx", "mov~ebp,0", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 2, 5, 0.375, ["mov     rcx, entry", "mov     rdx, str"], ["mov~rcx,entry", "mov~rdx,str"]], [1, 0, 17, 0, 1, 5, 0, 2, 1, 6, 0.16176470588235295, ["mov     esi, 2Ch ; ','; c", "mov     rdi, str; s", "call    _strchr", "mov     rdi, entry", "jmp     short loc_2EEE"], ["mov~esi,0", "mov~rdi,str", "call~FOO", "mov~rdi,entry", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 4, 3, 0.2977941176470588, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_2EDA"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]]], "func_feature": [5, 7, 17, 0, 18, 24, 4, 81, 0.14236, 1, 5], "succs": [[16], [0, 2], [], [12, 13], [3, 6], [3], [1, 3], [8, 5], [17, 7], [], [9], [9], [15], [10, 11], [16], [8], [15], [4, 6]], "fname": "parse_symbols", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 19, 1, 0, 2, 0, 1, 0, 0, 0.05665024630541872, ["sub     rbx, rdx", "jz      loc_3064"], ["sub~rbx,rdx", "jz~FOO"]], [2, 0, 20, 1, 0, 8, 1, 0, 3, 7, 0.04433497536945813, ["mov     rbx, rbp", "add     rbx, [rax]", "mov     rdx, rbx", "and     edx, 1FFFFh", "mov     [rax], rdx", "mov     eax, 1", "cmp     rbx, rdx", "jbe     loc_3064"], ["mov~rbx,rbp", "add~rbx,<TAG>", "mov~rdx,rbx", "and~edx,0", "mov~<TAG>,rdx", "mov~eax,0", "cmp~rbx,rdx", "jbe~FOO"]], [2, 0, 10, 0, 1, 6, 0, 2, 8, 5, 0.006157635467980296, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, r12d; fd", "call    _lseek", "mov     cs:output_offset_7179, rax", "jmp     short loc_3022"], ["mov~edx,0", "mov~esi,0", "mov~edi,r12d", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, 6, 0.04802955665024631, ["test    rax, rax", "js      short loc_306D"], ["test~rax,rax", "js~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 10, 1, 0.0006157635467980296, ["sub     offset, pending"], ["sub~offset,pending"]], [0, 0, 6, 0, 0, 2, 1, 1, 9, 2, 0.027093596059113302, ["test    rbx, rbx", "jnz     short loc_3088"], ["test~rbx,rbx", "jnz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 6, 5, 0.09605911330049262, ["mov     rax, cs:output_offset_7179", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_3022"], ["mov~rax,<TAG>", "cmp~rax,0", "jz~FOO"]], [1, 0, 15, 0, 0, 3, 0, 1, 6, 6, 0.022167487684729065, ["mov     r14, cs:o_pending_7167", "mov     edx, 1", "jmp     short loc_2FFE"], ["mov~r14,<TAG>", "mov~edx,0", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 0, 5, 6, 0.05172413793103448, ["mov     r14, rbp", "mov     edx, 0"], ["mov~r14,rbp", "mov~edx,0"]], [0, 0, 11, 0, 0, 2, 1, 1, 8, 5, 0.023399014778325122, ["test    dl, dl", "jz      short loc_3022"], ["test~dl,dl", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 5, 5, 0.07142857142857142, ["mov     r14, cs:i_pending_7166", "test    r12d, r12d", "jz      short loc_2FD4"], ["mov~r14,<TAG>", "test~r12d,r12d", "jz~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 9, 5, 0.0, ["lea     rdx, [pending+rbx]", "add     rax, rdx", "mov     cs:output_offset_7179, rax"], ["lea~rdx,<TAG>", "add~rax,rdx", "mov~<TAG>,rax"]], [0, 0, 9, 0, 0, 1, 0, 0, 7, 4, 0.07758620689655173, ["mov     rsi, cs:output_offset_7179"], ["mov~rsi,<TAG>"]], [1, 0, 8, 0, 0, 3, 1, 1, 7, 3, 0.17733990147783252, ["mov     eax, 0FFFFFFFFh", "test    offset, offset", "js      short loc_305E"], ["mov~eax,0", "test~offset,offset", "js~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 6, 4, 0.12561576354679804, ["mov     len, cs:input_offset", "cmp     cs:input_seekable, 0", "jnz     short loc_3029"], ["mov~len,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 27, 0, 0, 3, 0, 1, 1, 9, 0.0166256157635468, ["movzx   r13d, cs:o_nocache_eof", "lea     rax, o_pending_7167", "jmp     short loc_2F5D"], ["movzx~r13d,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 29, 0, 0, 9, 1, 1, 0, 10, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12d, edi", "mov     rbp, len", "test    edi, edi", "jnz     short loc_2FA5"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12d,edi", "mov~rbp,len", "test~edi,edi", "jnz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 3, 7, 0.07389162561576355, ["mov     rbx, [rax]", "test    rbx, rbx", "jnz     short loc_2FCC"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 2, 8, 0.09605911330049262, ["test    rbp, rbp", "jz      short loc_2FB6"], ["test~rbp,rbp", "jz~FOO"]], [0, 0, 7, 0, 0, 4, 2, 1, 8, 2, 0.12931034482758622, ["test    len, len", "setz    al", "test    al, r13b", "jz      short loc_3043"], ["test~len,len", "setz~al", "test~al,r13b", "jz~FOO"]], [1, 0, 20, 0, 0, 3, 1, 1, 4, 7, 0.0012315270935960591, ["mov     eax, 1", "test    r13b, r13b", "jz      loc_3064"], ["mov~eax,0", "test~r13b,r13b", "jz~FOO"]], [0, 0, 4, 2, 0, 4, 1, 1, 9, 1, 0.06096059113300493, ["sub     offset, clen", "sub     rsi, pending; offset", "test    clen, clen", "jz      short loc_308B"], ["sub~offset,clen", "sub~rsi,pending", "test~clen,clen", "jz~FOO"]], [2, 0, 3, 2, 0, 6, 0, 1, 10, 0, 0.003694581280788177, ["mov     rax, offset", "mov     edx, 0", "div     cs:page_size", "sub     offset, rdx", "mov     ebx, 0", "jmp     short loc_304E"], ["mov~rax,offset", "mov~edx,0", "div~,<TAG>", "sub~offset,rdx", "mov~ebx,0", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 4, 6, 0.10837438423645321, ["test    r12d, r12d", "jnz     short loc_2FF6"], ["test~r12d,r12d", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 5, 5, 0.06280788177339902, ["mov     r14, rbp"], ["mov~r14,rbp"]], [0, 0, 27, 0, 0, 2, 0, 0, 1, 9, 0.0166256157635468, ["movzx   r13d, cs:i_nocache_eof", "lea     rax, i_pending_7166"], ["movzx~r13d,<TAG>", "lea~rax,<TAG>"]], [1, 0, 2, 0, 1, 4, 0, 1, 10, -1, 0.012315270935960592, ["mov     ecx, 4; advise", "mov     rdx, rbx; len", "mov     edi, r12d; fd", "call    _posix_fadvise"], ["mov~ecx,0", "mov~rdx,rbx", "mov~edi,r12d", "call~FOO"]], [1, 0, 1, 0, 0, 2, 0, 0, 8, -1, 0.024630541871921183, ["cmp     eax, 0FFFFFFFFh", "setnz   al"], ["cmp~eax,0", "setnz~al"]], [2, 0, 2, 0, 1, 4, 0, 2, 7, -1, 0.009852216748768473, ["call    ___errno_location", "mov     dword ptr [rax], 1Dh", "mov     eax, 0FFFFFFFFh", "jmp     short loc_305E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     len", "pop     fd", "pop     nocache_eof", "pop     r14", "retn"], ["pop~rbx", "pop~len", "pop~fd", "pop~nocache_eof", "pop~r14", "retn"]]], "func_feature": [3, 14, 23, 0, 30, 45, 8, 99, 0.04815, 8, 8], "succs": [[10, 29], [0, 29], [12], [9, 2], [22], [4, 21], [3, 12], [6], [6], [11, 12], [14, 7], [12], [13], [19, 27], [28, 13], [18], [25, 15], [20, 23], [17, 1], [5, 21], [29, 23], [26, 22], [26], [24, 8], [14], [18], [27], [29], [27], []], "fname": "invalidate_cache", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[6, 0, 11, 2, 2, 17, 0, 2, 0, 0, 0.007275132275132275, ["mov     r13, cs:w_bytes", "mov     edx, 5; category", "lea     rsi, aLuBytesSCopied; \"%lu bytes (%s) copied, %s, %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    bytes_per_second", "lea     r9, [rsp+818h+delta_s_buf]", "mov     r8, r12", "mov     rcx, r13", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     ebx, eax", "add     rsp, 10h"], ["mov~r13,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~bytes_per_second", "lea~r9,[rsp+0]", "mov~r8,r12", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~ebx,eax", "add~rsp,0"]], [2, 1, 13, 0, 0, 8, 0, 1, 5, 6, 0.037037037037037035, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, iec", "repne scasb", "mov     rdx, rcx", "not     rdx", "cmp     byte ptr [r13+rdx-3], 20h ; ' '", "jnz     loc_33B6"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,iec", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "cmp~[yte ptr [r13+0],<STR>", "jnz~FOO"]], [5, 0, 11, 1, 2, 19, 0, 3, 6, 5, 0.007275132275132275, ["mov     r14, cs:w_bytes", "mov     edx, 5; category", "lea     rsi, aLuBytesSSCopie; \"%lu bytes (%s, %s) copied, %s, %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "push    bytes_per_second", "lea     rdx, [rsp+810h+delta_s_buf]", "push    rdx", "mov     r9, r13", "mov     r8, r12", "mov     rcx, r14", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     ebx, eax", "add     rsp, 10h", "jmp     loc_3288"], ["mov~r14,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~bytes_per_second", "lea~rdx,[rsp+0]", "push~rdx", "mov~r9,r13", "mov~r8,r12", "mov~rcx,r14", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~ebx,eax", "add~rsp,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 6, 4, 0.23809523809523808, ["test    progress_time, progress_time", "jz      loc_3435"], ["test~progress_time,progress_time", "jz~FOO"]], [4, 0, 11, 0, 2, 17, 0, 3, 5, 5, 0.2037037037037037, ["mov     r12, cs:w_bytes", "mov     r8d, 5; category", "mov     rcx, r12; n", "lea     rdx, msgid2; \"%lu bytes copied, %s, %s\"", "lea     rsi, msgid1; \"%lu byte copied, %s, %s\"", "mov     edi, 0; domainname", "call    _dcngettext", "mov     r9, bytes_per_second", "lea     r8, [rsp+808h+delta_s_buf]", "mov     rcx, r12", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     ebx, eax", "jmp     loc_3288"], ["mov~r12,<TAG>", "mov~r8d,0", "mov~rcx,r12", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,bytes_per_second", "lea~r8,[rsp+0]", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 17, 0, 0, 3, 0, 0, 5, 8, 0.017195767195767195, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Dh"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 19, 0, 0, 4, 0, 0, 4, 9, 0.03571428571428571, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_3351"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [4, 3, 15, 0, 1, 15, 0, 2, 4, 6, 0.2579365079365079, ["lea     rdi, [rsp+808h+delta_s_buf]", "movsd   xmm0, [rsp+808h+delta_s]", "mov     ecx, 18h", "mov     edx, 1", "mov     esi, 18h", "mov     eax, 1", "call    ___snprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, si_0", "repne scasb", "mov     rsi, rcx", "not     rsi", "cmp     byte ptr [r12+rsi-3], 20h ; ' '", "jz      loc_3360"], ["lea~rdi,[rsp+0]", "movsd~xmm0,[rsp+0]", "mov~ecx,<STR>", "mov~edx,0", "mov~esi,<STR>", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,si_0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "cmp~[yte ptr [r12+0],<STR>", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 7, 0.21164021164021163, ["lea     r8, aGS; \"%g s\"", "test    progress_time, progress_time", "jz      short loc_31CC"], ["lea~r8,<TAG>", "test~progress_time,progress_time", "jz~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 6, 7, 0.06349206349206349, ["lea     r8, a0fS; \"%.0f s\""], ["lea~r8,<TAG>"]], [0, 0, 6, 0, 0, 2, 1, 1, 7, 3, 0.10052910052910052, ["test    ebx, ebx", "js      short loc_32A3"], ["test~ebx,ebx", "js~FOO"]], [6, 0, 21, 0, 1, 16, 0, 1, 4, 8, 0.08333333333333333, ["divsd   xmm0, cs:qword_EF90", "movsd   [rsp+808h+delta_s], xmm0", "lea     rsi, [rsp+808h+hbuf+51Ch]; buf", "mov     ecx, 3B9ACA00h; from_block_size", "mov     edx, 1D1h; opts", "mov     rdi, cs:w_bytes; n", "call    human_readable", "mov     delta_xtime, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, bytes_per_second", "repne scasb", "mov     rdx, rcx", "not     rdx", "mov     word ptr [rbx+rdx-1], 732Fh", "mov     byte ptr [rbx+rdx+1], 0"], ["divsd~xmm0,<TAG>", "movsd~[rsp+0],xmm0", "lea~rsi,[rsp+0]", "mov~ecx,0", "mov~edx,0", "mov~rdi,<TAG>", "call~FOO", "mov~delta_xtime,rax", "mov~rcx,0", "mov~eax,0", "mov~rdi,bytes_per_second", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "mov~[ord ptr [rbx+0],0", "mov~[yte ptr [rbx+0],0"]], [2, 0, 22, 0, 0, 9, 2, 1, 3, 9, 0.016534391534391533, ["mov     rax, delta_xtime", "shr     rax, 1", "mov     rdx, delta_xtime", "and     edx, 1", "or      rax, rdx", "pxor    xmm0, xmm0", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     loc_3147"], ["mov~rax,delta_xtime", "shr~rax,0", "mov~rdx,delta_xtime", "and~edx,0", "or~rax,rdx", "pxor~xmm0,xmm0", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 3, 9, 0.016534391534391533, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, delta_xtime"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,delta_xtime"]], [0, 0, 5, 0, 0, 3, 0, 1, 8, 3, 0.026455026455026454, ["mov     ecx, cs:progress_len", "cmp     ecx, ebx", "jg      loc_340A"], ["mov~ecx,<TAG>", "cmp~ecx,ebx", "jg~FOO"]], [6, 0, 21, 0, 2, 16, 0, 3, 2, 8, 0.08333333333333333, ["mov     edx, 5; category", "lea     rsi, aInfinity; \"Infinity\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, rax", "lea     now, [rsp+808h+hbuf+51Ch]", "lea     r8, aSBS; \"%s B/s\"", "mov     ecx, 28Eh", "mov     edx, 1", "mov     esi, 28Eh", "mov     rdi, bpsbuf", "mov     eax, 0", "call    ___snprintf_chk", "pxor    xmm1, xmm1", "movsd   [rsp+808h+delta_s], xmm1", "jmp     loc_3199"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,rax", "lea~now,[rsp+0]", "lea~r8,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~rdi,bpsbuf", "mov~eax,0", "call~FOO", "pxor~xmm1,xmm1", "movsd~[rsp+0],xmm1", "jmp~FOO"]], [6, 0, 26, 0, 2, 18, 0, 3, 1, 9, 0.06878306878306878, ["lea     r13, [rsp+808h+hbuf]", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r13; buf", "mov     rdi, cs:w_bytes; n", "call    human_readable", "mov     r12, rax", "lea     rsi, [r13+28Eh]; buf", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1F1h; opts", "mov     rdi, cs:w_bytes; n", "call    human_readable", "mov     r13, rax", "mov     iec, cs:start_time", "cmp     rax, now", "jge     loc_32FE"], ["lea~r13,[rsp+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,r13", "mov~rdi,<TAG>", "call~FOO", "mov~r12,rax", "lea~rsi,[r13+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rdi,<TAG>", "call~FOO", "mov~r13,rax", "mov~iec,<TAG>", "cmp~rax,now", "jge~FOO"]], [0, 0, 27, 0, 1, 3, 0, 2, 1, 10, 0.0, ["call    gethrxtime", "mov     progress_time, rax", "jmp     loc_30D5"], ["call~FOO", "mov~progress_time,rax", "jmp~FOO"]], [1, 0, 28, 1, 0, 13, 2, 1, 0, 10, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 7E0h", "mov     rbp, progress_time", "mov     rax, fs:28h", "mov     [rsp+808h+var_30], rax", "xor     eax, eax", "mov     rbx, progress_time", "test    progress_time, progress_time", "jz      loc_32D0"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,progress_time", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbx,progress_time", "test~progress_time,progress_time", "jz~FOO"]], [2, 0, 4, 1, 1, 8, 0, 2, 9, 3, 0.0, ["sub     ecx, ebx", "lea     r8, aWrittenBySSAnd+1Bh; \"\"", "lea     rdx, aS; \"%*s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_32A3"], ["sub~ecx,ebx", "lea~r8,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 24, 1, 0, 3, 0, 1, 2, 10, 0.011904761904761904, ["sub     now, rax", "mov     r8, delta_xtime; to_block_size", "js      loc_32DD"], ["sub~now,rax", "mov~r8,delta_xtime", "js~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 9, 1, 0.06878306878306878, ["mov     rax, [rsp+808h+var_30]", "xor     rax, fs:28h", "jnz     loc_3465"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 8, 2, 0.027116402116402115, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     loc_32A9"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 8, 2, 0.027116402116402115, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_32A9"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 8, 2, 0.037037037037037035, ["mov     cs:progress_len, ebx"], ["mov~<TAG>,ebx"]], [0, 0, 5, 0, 0, 4, 0, 0, 7, 3, 0.10052910052910052, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_3456"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 17, 0, 1, 3, 0, 2, 5, 8, 0.017195767195767195, ["mov     esi, 0Dh; int", "call    ___overflow", "jmp     loc_31C5"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 10, -1, 0.0, ["add     rsp, 7E0h", "pop     stats_len", "pop     progress_time", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,0", "pop~stats_len", "pop~progress_time", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [17, 8, 36, 1, 29, 39, 2, 208, 0.06085, 16, 7], "succs": [[3], [0, 2], [3], [25, 10], [3], [9], [26, 5], [1, 4], [6, 7], [7], [24, 14], [8], [11], [11], [24, 19], [8], [20, 15], [16], [16, 17], [24], [12, 13], [27, 28], [21], [21], [21], [22, 23], [9], [], []], "fname": "print_xfer_stats", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[4, 0, 3, 0, 2, 13, 0, 3, 0, 0, 0.0, ["mov     r8d, 5; category", "mov     rcx, rbx; n", "lea     rdx, aLuTruncatedRec; \"%lu truncated records\\n\"", "lea     rsi, aLuTruncatedRec_0; \"%lu truncated record\\n\"", "mov     edi, 0; domainname", "call    _dcngettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_351E"], ["mov~r8d,0", "mov~rcx,rbx", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]], [6, 0, 4, 2, 2, 22, 1, 3, 2, -1, 0.21818181818181817, ["mov     r13, cs:w_partial", "mov     r12, cs:w_full", "mov     rbp, cs:r_partial", "mov     rbx, cs:r_full", "mov     edx, 5; category", "lea     rsi, aLuLuRecordsInL; \"%lu+%lu records in\\n%lu+%lu records out\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r13", "mov     r9, r12", "mov     r8, rbp", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     rbx, cs:r_truncate", "add     rsp, 10h", "test    rbx, rbx", "jnz     short loc_354B"], ["mov~r13,<TAG>", "mov~r12,<TAG>", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r13", "mov~r9,r12", "mov~r8,rbp", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "add~rsp,0", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, -1, 0.14545454545454545, ["cmp     cs:status_level, 2", "jz      short loc_3531"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 3, -1, 0.03636363636363636, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_34AA"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 0, 0, 2, -1, 0.05454545454545454, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_353C"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 3, -1, 0.03636363636363636, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [2, 0, 9, 1, 0, 7, 0, 1, 1, -1, 0.08181818181818182, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "cmp     cs:progress_len, 0", "jle     short loc_34B4"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "cmp~<TAG>,0", "jle~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:status_level, 1", "jz      locret_358A"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 4, -1, 0.13636363636363635, ["mov     cs:progress_len, 0"], ["mov~<TAG>,0"]], [1, 0, 1, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 0; progress_time", "call    print_xfer_stats"], ["mov~edi,0", "call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 4, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [6, 1, 12, 0, 12, 15, 5, 66, 0.05909, 11, 4], "succs": [[2], [0, 2], [9, 10], [8], [3, 5], [8], [1, 4], [11, 6], [1], [10], [], []], "fname": "print_stats", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 10, 0, 1, 6, 1, 2, 0, 0, 0.26666666666666666, ["mov     edx, 0; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "test    ebx, ebx", "jnz     short loc_360B"], ["mov~edx,0", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 10, 0, 1, 8, 1, 2, 2, 6, 0.22222222222222224, ["mov     rdx, rbp; oset", "lea     rsi, caught_signals; set", "mov     edi, 0; how", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_35AD"], ["mov~rdx,rbp", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, 6, 0.0, ["sub     eax, 1", "mov     cs:info_signal_count, eax", "jmp     short loc_35AD"], ["sub~eax,0", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 10, 0, 1, 1, 0, 1, 4, 4, 0.10555555555555556, ["call    print_stats"], ["call~FOO"]], [1, 0, 10, 1, 0, 8, 1, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+var_s88], rax", "xor     eax, eax", "mov     rbp, rsp", "jmp     short loc_35C8"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbp,rsp", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.17777777777777778, ["mov     rax, [rsp+var_s88]", "xor     rax, fs:28h", "jnz     short loc_363B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, 2, 0.23333333333333334, ["mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_361E"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 1, 3, 0.4444444444444445, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_35DC"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 10, 0, 3, 5, 0, 4, 4, 4, 0.10555555555555556, ["call    cleanup", "call    print_stats", "mov     edi, ebx; sig", "call    _raise", "jmp     short loc_35C8"], ["call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [7, 6, 15, 1, 11, 14, 6, 45, 0.14141, 4, 3], "succs": [[8, 3], [0, 2], [0], [7], [7], [9, 10], [1, 5], [1, 6], [7], [], []], "fname": "process_signals", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 3, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14d, edi", "mov     r13, file", "mov     r12d, edx", "mov     ebp, ecx"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14d,edi", "mov~r13,file", "mov~r12d,edx", "mov~ebp,ecx"]], [0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     mode", "pop     flag", "pop     file", "pop     desired_fd", "retn"], ["mov~eax,ebx", "pop~ret", "pop~mode", "pop~flag", "pop~file", "pop~desired_fd", "retn"]], [0, 0, 3, 0, 2, 9, 1, 2, 0, 1, 0.3333333333333333, ["call    process_signals", "mov     ecx, ebp; mode", "mov     edx, r12d; flags", "mov     rsi, file; file", "mov     edi, r14d; desired_fd", "call    fd_reopen", "mov     ebx, eax", "test    eax, eax", "jns     short loc_3678"], ["call~FOO", "mov~ecx,ebp", "mov~edx,r12d", "mov~rsi,file", "mov~edi,r14d", "call~FOO", "mov~ebx,eax", "test~eax,eax", "jns~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 0, 1, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_3653"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [3, 1, 4, 0, 4, 5, 3, 28, 0.08333, 0, 0], "succs": [[2], [], [1, 3], [1, 2]], "fname": "ifd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 3, 0, 2, 7, 1, 2, 0, 0, 0.3333333333333333, ["call    process_signals", "mov     rsi, length; length", "mov     edi, r12d; fd", "call    _ftruncate", "mov     ebx, eax", "test    eax, eax", "jns     short loc_36AD"], ["call~FOO", "mov~rsi,length", "mov~edi,r12d", "call~FOO", "mov~ebx,eax", "test~eax,eax", "jns~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 2, 1, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_368D"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12d, edi", "mov     rbp, length"], ["push~r12", "push~rbp", "push~rbx", "mov~r12d,edi", "mov~rbp,length"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     length", "pop     fd", "retn"], ["mov~eax,ebx", "pop~ret", "pop~length", "pop~fd", "retn"]]], "func_feature": [3, 1, 4, 0, 4, 5, 2, 20, 0.08333, 0, 0], "succs": [[1, 3], [0, 3], [0], []], "fname": "iftruncate", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["mov     cs:prev_nread_7186, rbx", "mov     rax, rbx", "add     rsp, 8", "pop     rbx", "pop     size", "pop     r12", "pop     fd", "retn"], ["mov~<TAG>,rbx", "mov~rax,rbx", "add~rsp,0", "pop~rbx", "pop~size", "pop~r12", "pop~fd", "retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 4, 5, 0.2178362573099415, ["test    nread, nread", "jle     short loc_373C"], ["test~nread,nread", "jle~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 4, 0.17543859649122806, ["cmp     cs:warn_partial_read, 0", "jz      short loc_373C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 6, 3, 0.15204678362573099, ["mov     buf, cs:prev_nread_7186", "test    r12, r12", "jle     short loc_373C"], ["mov~buf,<TAG>", "test~r12,r12", "jle~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 7, 2, 0.12280701754385964, ["cmp     r12, size", "jnb     short loc_373C"], ["cmp~r12,size", "jnb~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 6, -1, 0.007309941520467836, ["mov     dword ptr [rax], 0", "mov     ebx, 0", "jmp     short loc_373C"], ["mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 9, -1, 0.005847953216374269, ["mov     cs:warn_partial_read, 0"], ["mov~<TAG>,0"]], [0, 0, 10, 0, 0, 2, 1, 1, 3, 6, 0.22660818713450293, ["test    nread, nread", "jle     short loc_370D"], ["test~nread,nread", "jle~FOO"]], [1, 0, 19, 0, 1, 3, 0, 2, 3, 7, 0.17982456140350878, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_36FE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 2, 7, 0.06725146198830409, ["test    nread, nread", "js      short loc_36D3"], ["test~nread,nread", "js~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 5, 8, 0.024853801169590642, ["test    byte ptr cs:input_flags+1, 40h", "jz      loc_36D3"], ["test~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 3, 8, 0.04678362573099415, ["mov     rdx, cs:prev_nread_7186", "test    rdx, rdx", "jle     loc_36D3"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jle~FOO"]], [1, 0, 19, 0, 1, 3, 0, 2, 2, 8, 0.05847953216374269, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      short loc_3751"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 4, 8, 0.03654970760233918, ["cmp     rdx, size", "jnb     loc_36D3"], ["cmp~rdx,size", "jnb~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 4, 6, 0.02631578947368421, ["cmp     nread, size", "jnb     short loc_370D"], ["cmp~nread,size", "jnb~FOO"]], [1, 0, 19, 1, 0, 9, 0, 1, 0, 9, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13d, edi", "mov     r12, buf", "mov     rbp, size", "jmp     short loc_36DD"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13d,edi", "mov~r12,buf", "mov~rbp,size", "jmp~FOO"]], [0, 0, 8, 0, 1, 1, 0, 1, 5, 6, 0.0, ["call    process_signals"], ["call~FOO"]], [5, 0, 2, 0, 2, 13, 0, 3, 9, 0, 0.0, ["mov     r8d, 5; category", "mov     rcx, prev; n", "lea     rdx, aWarningPartial; \"warning: partial read (%lu bytes); sugg\"...", "lea     rsi, aWarningPartial_0; \"warning: partial read (%lu byte); sugge\"...", "mov     edi, 0; domainname", "call    _dcngettext", "mov     rcx, prev", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     loc_3735"], ["mov~r8d,0", "mov~rcx,prev", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,prev", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 1, 0.08771929824561403, ["cmp     cs:status_level, 1", "jnz     short loc_3784"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 19, 0, 2, 8, 0, 3, 1, 8, 0.11403508771929824, ["call    process_signals", "mov     rdx, size; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "mov     rbx, rax", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_36C9"], ["call~FOO", "mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "mov~rbx,rax", "cmp~rax,0", "jz~FOO"]]], "func_feature": [7, 6, 21, 0, 20, 33, 1, 73, 0.07749, 6, 2], "succs": [[], [0, 2], [0, 3], [0, 4], [0, 18], [0], [0], [1, 14], [19, 7], [8, 7], [8, 5], [8, 13], [8, 11], [8, 10], [16, 1], [19], [1], [6], [17, 6], [9, 12]], "fname": "iread", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 6, 3, 0, 4, 0, 1, 0, 0, 0.08928571428571427, ["add     nread, ncurr", "add     buf, ncurr", "sub     rbx, ncurr", "jnz     short loc_37E2"], ["add~nread,ncurr", "add~buf,ncurr", "sub~rbx,ncurr", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, 2, 0.17857142857142855, ["test    ncurr, ncurr", "jz      short loc_3810"], ["test~ncurr,ncurr", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 0, 3, 0.0, ["test    size, size", "jz      short loc_380A"], ["test~size,size", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.008928571428571428, ["mov     ncurr, nread", "jmp     short loc_3813"], ["mov~ncurr,nread", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.017857142857142856, ["mov     ncurr, nread"], ["mov~ncurr,nread"]], [0, 0, 6, 0, 1, 6, 1, 2, 2, 1, 0.2232142857142857, ["mov     rdx, size; size", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    iread", "test    ncurr, ncurr", "js      short loc_3813"], ["mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~ncurr,ncurr", "js~FOO"]], [2, 0, 6, 1, 0, 9, 0, 0, 1, 2, 0.10714285714285714, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13d, edi", "mov     rbp, buf", "mov     rbx, size", "mov     r12d, 0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13d,edi", "mov~rbp,buf", "mov~rbx,size", "mov~r12d,0"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "pop~rbx", "pop~buf", "pop~nread", "pop~fd", "retn"]]], "func_feature": [1, 3, 6, 0, 9, 11, 0, 34, 0.06944, 0, 5], "succs": [[3, 6], [0, 5], [4, 7], [8], [], [8], [8, 1], [6], []], "fname": "iread_fullblock", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.0, ["mov     rsi, total_written; len", "mov     edi, r15d; fd", "call    invalidate_cache", "jmp     short loc_39E6"], ["mov~rsi,total_written", "mov~edi,r15d", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 8, -1, 0.03103448275862069, ["test    total_written, total_written", "jnz     short loc_39F8"], ["test~total_written,total_written", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.008045977011494253, ["mov     rbx, size", "jmp     short loc_39E6"], ["mov~rbx,size", "jmp~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 1, 1, 0.16551724137931034, ["test    size, size", "jz      loc_3A05"], ["test~size,size", "jz~FOO"]], [6, 0, 26, 0, 4, 18, 0, 5, 4, 3, 0.0, ["mov     rdx, cs:output_file; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aFailedToTurnOf; \"failed to turn off O_DIRECT: %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     short loc_3899"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 3, 3, 0.0034482758620689655, ["cmp     cs:status_level, 1", "jnz     short loc_38BB"], ["cmp~<TAG>,0", "jnz~FOO"]], [7, 0, 28, 0, 2, 12, 2, 3, 2, 3, 0.006896551724137931, ["mov     esi, 3; action", "mov     edi, 1; fd", "mov     eax, 0", "call    rpl_fcntl", "and     ah, 0BFh", "mov     edx, eax", "mov     esi, 4; action", "mov     edi, 1; fd", "mov     eax, 0", "call    rpl_fcntl", "test    eax, eax", "jz      short loc_3899"], ["mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "and~ah,0", "mov~edx,eax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 29, 0, 0, 2, 0, 1, 1, 2, 0.004597701149425287, ["cmp     cs:output_blocksize, size", "ja      short loc_385F"], ["cmp~<TAG>,size", "ja~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 8, -1, 0.02310344827586207, ["mov     rdi, buf; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_397F"], ["mov~rdi,buf", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 7, -1, 0.05528735632183908, ["test    dl, 0Fh", "jz      short loc_390B"], ["test~dl,0", "jz~FOO"]], [1, 0, 22, 0, 1, 7, 1, 2, 7, -1, 0.08609195402298851, ["mov     rsi, [rsp+48h+offset]; offset", "mov     rbp, rsi", "mov     edx, 1; whence", "mov     edi, r15d; fd", "call    _lseek", "test    rax, rax", "js      short loc_39BA"], ["mov~rsi,[rsp+0]", "mov~rbp,rsi", "mov~edx,0", "mov~edi,r15d", "call~FOO", "test~rax,rax", "js~FOO"]], [2, 0, 22, 2, 0, 3, 0, 1, 6, -1, 0.16091954022988506, ["add     rsi, 1; s2", "sub     rdx, 1; n", "jz      short loc_397F"], ["add~rsi,0", "sub~rdx,0", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 8, -1, 0.04747126436781609, ["mov     cs:final_op_was_seek, 1", "test    nwritten, nwritten", "jz      loc_3917"], ["mov~<TAG>,0", "test~nwritten,nwritten", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 1, 0, 9, -1, 0.024559386973180077, ["test    nwritten, nwritten", "jns     short loc_393B"], ["test~nwritten,nwritten", "jns~FOO"]], [0, 0, 22, 1, 1, 8, 1, 2, 4, -1, 0.23980842911877392, ["mov     rdx, size", "sub     rdx, total_written; n", "lea     rsi, [buf+total_written+0]; buf", "mov     edi, r15d; fd", "call    _write", "mov     rbp, rax", "test    nwritten, nwritten", "js      short loc_39AE"], ["mov~rdx,size", "sub~rdx,total_written", "lea~rsi,[buf+0]", "mov~edi,r15d", "call~FOO", "mov~rbp,rax", "test~nwritten,nwritten", "js~FOO"]], [2, 0, 22, 0, 1, 5, 1, 2, 3, -1, 0.3137931034482759, ["call    process_signals", "mov     cs:final_op_was_seek, 0", "mov     r14d, cs:conversions_mask", "test    r14d, 10000h", "jz      short loc_3917"], ["call~FOO", "mov~<TAG>,0", "mov~r14d,<TAG>", "test~r14d,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, -1, 0.20689655172413793, ["cmp     byte ptr [rsi], 0", "jnz     short loc_3917"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 8, -1, 0.009885057471264367, ["and     r14d, 0FFFEFFFFh", "mov     cs:conversions_mask, r14d", "jmp     loc_3917"], ["and~r14d,0", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 5, -1, 0.07190293742017881, ["test    nwritten, nwritten", "jz      loc_39CD"], ["test~nwritten,nwritten", "jz~FOO"]], [1, 0, 22, 0, 1, 3, 0, 2, 5, -1, 0.16521072796934863, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_393E"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 6, -1, 0.030268199233716472, ["jmp     short loc_39D8"], ["jmp~FOO"]], [3, 1, 25, 0, 1, 6, 1, 2, 3, 2, 0.08620689655172414, ["mov     cs:o_nocache_eof, 1", "mov     esi, 0; len", "mov     edi, 1; fd", "call    invalidate_cache", "or      cs:conversions_mask, 8000h", "jmp     short loc_3847"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO", "or~<TAG>,<STR>", "jmp~FOO"]], [0, 0, 22, 1, 0, 1, 0, 0, 6, -1, 0.03530012771392081, ["add     total_written, rbp"], ["add~total_written,rbp"]], [1, 1, 30, 1, 0, 12, 1, 1, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r15d, edi", "mov     r13, buf", "mov     r12, size", "test    byte ptr cs:output_flags+1, 40h", "jz      short loc_3847"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r15d,edi", "mov~r13,buf", "mov~r12,size", "test~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 6, -1, 0.1644955300127714, ["cmp     size, total_written", "jbe     loc_39D8"], ["cmp~size,total_written", "jbe~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 6, -1, 0.029374201787994887, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 22, 0, 0, 3, 0, 1, 2, -1, 0.16896551724137931, ["mov     ebx, 0", "mov     [rsp+48h+offset], size", "jmp     loc_3947"], ["mov~ebx,0", "mov~[rsp+0],size", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.08160919540229886, ["cmp     cs:o_nocache, 0", "jz      short loc_39E6"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 4, -1, 0.18160919540229886, ["mov     rsi, buf", "mov     rdx, size"], ["mov~rsi,buf", "mov~rdx,size"]], [0, 0, 22, 0, 0, 1, 0, 1, 8, -1, 0.0034482758620689655, ["jmp     short loc_3969"], ["jmp~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["mov     rax, rbx", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     size", "pop     buf", "pop     r14", "pop     fd", "retn"], ["mov~rax,rbx", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~size", "pop~buf", "pop~r14", "pop~fd", "retn"]]], "func_feature": [14, 15, 39, 0, 31, 49, 5, 129, 0.0776, 9, 6], "succs": [[30], [0, 30], [30], [2, 26], [21], [4, 21], [5, 21], [3, 6], [10, 14], [8, 29], [17, 12], [9, 10], [13, 14], [19, 22], [18, 19], [28, 14], [11, 14], [14], [25, 22], [24, 20], [27], [3], [24], [3, 7], [27, 15], [27], [15], [1, 30], [16], [16], []], "fname": "iwrite", "n_num": 31}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 3, 6, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "call    cleanup", "call    print_stats", "call    process_signals", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "call~FOO", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 0, 3, 0, 1, 0, 5, 6, 0.0, 0, 2], "succs": [[]], "fname": "finish_up", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 2, 3, 0, 2, 0, 0, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [5, 0, 2, 0, 4, 19, 1, 5, 1, 0, 0.16666666666666666, ["mov     rbx, nwritten", "mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aWritingToS; \"writing to %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbp; fmt", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "test    nwritten, nwritten", "jz      short loc_3ABF"], ["mov~rbx,nwritten", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "test~nwritten,nwritten", "jz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [1, 0, 4, 1, 1, 10, 0, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rdx, cs:output_blocksize; size", "mov     rsi, cs:obuf; buf", "mov     edi, 1; fd", "call    iwrite", "add     cs:w_bytes, nwritten", "cmp     cs:output_blocksize, nwritten", "jnz     short loc_3A66"], ["push~r12", "push~rbp", "push~rbx", "mov~rdx,<TAG>", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "add~<TAG>,nwritten", "cmp~<TAG>,nwritten", "jnz~FOO"]], [2, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["add     cs:w_full, 1", "mov     cs:oc, 0", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~<TAG>,0", "mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [7, 1, 9, 0, 5, 5, 9, 39, 0.03333, 8, 3], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "write_output", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 14, 0, 1, 2, 0, 2, 0, 0, 0.0, ["call    write_output", "jmp     short loc_3B01"], ["call~FOO", "jmp~FOO"]], [0, 0, 14, 0, 0, 8, 0, 0, 4, -1, 0.10416666666666667, ["mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     [rcx+rdx], sil", "cmp     rax, cs:output_blocksize", "jb      short loc_3B01"], ["mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "movzx~esi,<TAG>", "mov~<TAG>,sil", "cmp~rax,<TAG>", "jb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 4, -1, 0.14166666666666666, ["cmp     rcx, rdx", "jnb     short loc_3B4A"], ["cmp~rcx,rdx", "jnb~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, -1, 0.24166666666666667, ["mov     rcx, cs:col", "mov     rdx, cs:conversion_blocksize", "cmp     rcx, rdx", "jz      short loc_3B42"], ["mov~rcx,<TAG>", "mov~rdx,<TAG>", "cmp~rcx,rdx", "jz~FOO"]], [0, 0, 14, 0, 0, 6, 0, 1, 1, -1, 0.058333333333333334, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, buf", "lea     r12, [buf+i]", "jmp     short loc_3B5B"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,buf", "lea~r12,<TAG>", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    i, i", "jz      locret_3BB3"], ["test~i,i", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, -1, 0.5083333333333333, ["movzx   eax, byte ptr [buf]", "cmp     al, byte ptr cs:newline_character; \"\\n\"", "jz      loc_3AE4"], ["movzx~eax,<TAG>", "cmp~al,<TAG>", "jz~FOO"]], [1, 0, 14, 1, 0, 3, 0, 1, 5, -1, 0.4583333333333333, ["add     buf, 1", "cmp     buf, r12", "jz      short loc_3BAE"], ["add~buf,0", "cmp~buf,r12", "jz~FOO"]], [0, 0, 14, 0, 0, 7, 0, 0, 5, -1, 0.05416666666666667, ["mov     rcx, cs:oc", "lea     rdx, [rcx+1]", "mov     cs:oc, rdx", "mov     rsi, cs:obuf", "mov     [rsi+rcx], al", "cmp     rdx, cs:output_blocksize", "jb      short loc_3B4A"], ["mov~rcx,<TAG>", "lea~rdx,[rcx+0]", "mov~<TAG>,rdx", "mov~rsi,<TAG>", "mov~<TAG>,al", "cmp~rdx,<TAG>", "jb~FOO"]], [0, 0, 14, 0, 1, 2, 0, 2, 6, -1, 0.0, ["call    write_output", "jmp     short loc_3B4A"], ["call~FOO", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 5, -1, 0.22083333333333333, ["add     cs:col, 1"], ["add~<TAG>,0"]], [1, 0, 14, 1, 0, 1, 0, 0, 4, -1, 0.0375, ["add     cs:r_truncate, 1"], ["add~<TAG>,0"]], [1, 0, 14, 1, 0, 3, 0, 0, 5, -1, 0.09583333333333333, ["add     j, 1", "cmp     cs:conversion_blocksize, j", "jbe     short loc_3AF4"], ["add~j,0", "cmp~<TAG>,j", "jbe~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 3, -1, 0.20416666666666666, ["mov     rbp, cs:col", "cmp     rbp, cs:conversion_blocksize", "jb      short loc_3B0E"], ["mov~rbp,<TAG>", "cmp~rbp,<TAG>", "jb~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 6, -1, 0.0, ["pop     buf", "pop     rbp", "pop     r12", "retn"], ["pop~buf", "pop~rbp", "pop~r12", "retn"]], [1, 0, 14, 0, 0, 2, 0, 1, 4, -1, 0.1875, ["mov     cs:col, 0", "jmp     short loc_3B52"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [2, 1, 10, 0, 17, 24, 2, 54, 0.13603, 8, 4], "succs": [[12], [0, 12], [8, 10], [2, 11], [6], [16, 4], [3, 13], [14, 6], [9, 10], [10], [7], [10], [1, 15], [1, 15], [], [7], []], "fname": "copy_with_block", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 13, 0, 0, 8, 0, 0, 0, 0, 0.10952380952380954, ["mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     [rcx+rdx], sil", "cmp     rax, cs:output_blocksize", "jb      short loc_3C9D"], ["mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "movzx~esi,<TAG>", "mov~<TAG>,sil", "cmp~rax,<TAG>", "jb~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 4, -1, 0.22380952380952382, ["cmp     cs:pending_spaces_7443, 0", "jnz     loc_3CB8"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 13, 1, 0, 5, 1, 1, 6, -1, 0.1, ["mov     rax, cs:pending_spaces_7443", "sub     rax, 1", "mov     cs:pending_spaces_7443, rax", "test    rax, rax", "jz      loc_3BEC"], ["mov~rax,<TAG>", "sub~rax,0", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 3, -1, 0.31428571428571433, ["cmp     byte ptr cs:space_character, bpl; \" \"", "jz      short loc_3C19"], ["cmp~<TAG>,bpl", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 4, -1, 0.4142857142857143, ["add     i, 1", "cmp     nread, i", "jbe     loc_3CEC"], ["add~i,0", "cmp~nread,i", "jbe~FOO"]], [0, 0, 13, 0, 0, 7, 0, 0, 5, -1, 0.20476190476190478, ["mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "mov     [rcx+rdx], bpl", "cmp     rax, cs:output_blocksize", "jb      short loc_3C21"], ["mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "mov~<TAG>,bpl", "cmp~rax,<TAG>", "jb~FOO"]], [0, 0, 13, 0, 1, 2, 0, 2, 6, -1, 0.0, ["call    write_output", "jmp     short loc_3C21"], ["call~FOO", "jmp~FOO"]], [3, 0, 13, 1, 0, 11, 0, 0, 3, -1, 0.08571428571428572, ["mov     cs:pending_spaces_7443, 0", "mov     cs:col, 0", "sub     i, 1", "mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     [rcx+rdx], sil", "cmp     rax, cs:output_blocksize", "jb      short loc_3C21"], ["mov~<TAG>,0", "mov~<TAG>,0", "sub~i,0", "mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "movzx~esi,<TAG>", "mov~<TAG>,sil", "cmp~rax,<TAG>", "jb~FOO"]], [0, 0, 13, 0, 1, 2, 0, 2, 4, -1, 0.0, ["call    write_output", "jmp     short loc_3C21"], ["call~FOO", "jmp~FOO"]], [1, 0, 13, 1, 0, 1, 0, 0, 4, -1, 0.02380952380952381, ["add     cs:pending_spaces_7443, 1"], ["add~<TAG>,0"]], [0, 0, 13, 0, 1, 2, 0, 2, 6, -1, 0.0, ["call    write_output", "jmp     short loc_3C9D"], ["call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 15, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    nread, nread", "jz      locret_3CF7"], ["test~nread,nread", "jz~FOO"]], [0, 0, 13, 0, 0, 6, 0, 0, 2, -1, 0.46666666666666673, ["movzx   ebp, byte ptr [buf+i+0]", "mov     rax, cs:col", "lea     rdx, [rax+1]", "mov     cs:col, rdx", "cmp     rax, cs:conversion_blocksize", "jb      short loc_3BD5"], ["movzx~ebp,[yte ptr [buf+0]", "mov~rax,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "cmp~rax,<TAG>", "jb~FOO"]], [2, 0, 13, 1, 0, 9, 0, 1, 1, -1, 0.06190476190476191, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, nread", "mov     r13, buf", "mov     ebx, 0", "jmp     short loc_3C2E"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,nread", "mov~r13,buf", "mov~ebx,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     i", "pop     c", "pop     nread", "pop     buf", "retn"], ["add~rsp,0", "pop~i", "pop~c", "pop~nread", "pop~buf", "retn"]]], "func_feature": [3, 2, 11, 0, 16, 23, 2, 69, 0.1253, 8, 6], "succs": [[10, 2], [0, 5], [0, 5], [1, 9], [13, 15], [4, 6], [4], [8, 4], [4], [4], [2], [], [11, 14], [3, 7], [13], []], "fname": "copy_with_unblock", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 36, 0, 0, 2, 1, 1, 0, 0, 0.012195121951219513, ["test    ebp, ebp", "jz      short loc_3D94"], ["test~ebp,ebp", "jz~FOO"]], [1, 0, 37, 2, 1, 10, 1, 2, 1, 4, 0.014329268292682927, ["mov     rax, records", "imul    rax, blocksize", "add     r14, rax", "mov     ecx, 1; whence", "mov     rdx, r14; offset", "mov     esi, ebp; fdesc", "mov     rdi, [rsp+0E8h+file]; filename", "call    skip_via_lseek", "test    rax, rax", "js      loc_3E39"], ["mov~rax,records", "imul~rax,blocksize", "add~r14,rax", "mov~ecx,0", "mov~rdx,r14", "mov~esi,ebp", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 9, 3, 0.06524390243902439, ["test    records, records", "jz      loc_3FDB"], ["test~records,records", "jz~FOO"]], [0, 0, 19, 0, 1, 3, 0, 2, 9, 4, 0.0, ["mov     rdi, nread; offset", "call    advance_input_offset", "jmp     loc_407D"], ["mov~rdi,nread", "call~FOO", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 8, 4, 0.06646341463414634, ["test    ebp, ebp", "jz      loc_3FCE"], ["test~ebp,ebp", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 5, 4, 0.15, ["mov     rax, cs:iread_fnc", "mov     rdx, blocksize", "test    records, records", "jnz     short loc_405C"], ["mov~rax,<TAG>", "mov~rdx,blocksize", "test~records,records", "jnz~FOO"]], [0, 0, 19, 0, 1, 3, 0, 2, 4, 5, 0.04847560975609756, ["call    alloc_obuf", "mov     r14, cs:obuf", "jmp     loc_4049"], ["call~FOO", "mov~r14,<TAG>", "jmp~FOO"]], [1, 0, 19, 1, 0, 2, 0, 1, 10, 4, 0.04695121951219512, ["sub     rbx, 1", "jnz     short loc_4049"], ["sub~rbx,0", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 11, 3, 0.013414634146341463, ["cmp     qword ptr [bytes+0], 0", "jnz     short loc_4049"], ["cmp~[word ptr [bytes+0],0", "jnz~FOO"]], [0, 0, 19, 0, 1, 2, 0, 1, 4, 5, 0.04847560975609756, ["call    alloc_ibuf", "mov     r14, cs:ibuf"], ["call~FOO", "mov~r14,<TAG>"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     fdesc", "pop     blocksize", "pop     bytes", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~fdesc", "pop~blocksize", "pop~bytes", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.032926829268292684, ["mov     rax, rbx", "mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_4098"], ["mov~rax,rbx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 3, 2, 0.00548780487804878, ["mov     qword ptr [bytes+0], 0", "mov     ebx, 0", "jmp     loc_3FE3"], ["mov~[word ptr [bytes+0],0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 6, 4, 0.0, ["mov     blocksize, [bytes+0]; size_t"], ["mov~blocksize,[bytes+0]"]], [0, 0, 3, 0, 0, 1, 0, 1, 12, 2, 0.0036585365853658534, ["jmp     loc_3FE3"], ["jmp~FOO"]], [6, 0, 1, 0, 3, 16, 0, 4, 4, -1, 0.003353658536585366, ["mov     rdx, [rsp+0E8h+file]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     records, rax", "mov     edx, 5; category", "lea     rsi, aSCannot_0; \"%s: cannot \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, [rsp+0E8h+lseek_errno]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     short loc_3EB6"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~records,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,[rsp+0]", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.018292682926829267, ["test    ebp, ebp", "jnz     short loc_3ECF"], ["test~ebp,ebp", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 7, 2, 0.0871951219512195, ["test    nread, nread", "jz      loc_3FE3"], ["test~nread,nread", "jz~FOO"]], [0, 0, 19, 0, 1, 5, 1, 2, 6, 3, 0.14878048780487804, ["mov     rsi, buf; char *", "mov     edi, ebp; int", "call    rax ; iread_fnc", "test    nread, nread", "js      loc_3F27"], ["mov~rsi,buf", "mov~edi,ebp", "call~rax", "test~nread,nread", "js~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 3, 6, 0.0951219512195122, ["test    ebp, ebp", "jnz     loc_3F16"], ["test~ebp,ebp", "jnz~FOO"]], [2, 0, 28, 0, 1, 7, 1, 1, 1, 8, 0.009451219512195122, ["mov     ecx, 2; whence", "mov     edx, 0; offset", "mov     esi, ebp; fdesc", "mov     rdi, [rsp+0E8h+file]; filename", "call    skip_via_lseek", "test    rax, rax", "jns     loc_3EC5"], ["mov~ecx,0", "mov~edx,0", "mov~esi,ebp", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jns~FOO"]], [4, 0, 41, 2, 1, 24, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     ebp, edi", "mov     [rsp+0E8h+file], file_0", "mov     rbx, records", "mov     r12, blocksize", "mov     r13, bytes", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     r14, [bytes]", "call    ___errno_location", "mov     r15, rax", "mov     dword ptr [rax], 0", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     edx, 0", "div     blocksize", "cmp     rax, records", "jb      loc_400F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,edi", "mov~<TAG>,file_0", "mov~rbx,records", "mov~r12,blocksize", "mov~r13,bytes", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r14,<TAG>", "call~FOO", "mov~r15,rax", "mov~<TAG>,0", "mov~rax,0", "mov~edx,0", "div~,blocksize", "cmp~rax,records", "jb~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 7, -1, 0.04878048780487805, ["test    ebp, ebp", "jnz     short loc_3F7A"], ["test~ebp,ebp", "jnz~FOO"]], [2, 0, 34, 0, 1, 6, 1, 2, 3, 4, 0.025, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     esi, 0; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_3DFA"], ["lea~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 2, 7, 0.01920731707317073, ["mov     [rsp+0E8h+lseek_errno], 0"], ["mov~[rsp+0],0"]], [6, 0, 1, 0, 3, 15, 0, 3, 4, -1, 0.003353658536585366, ["mov     rdx, [rsp+0E8h+file]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     records, rax", "mov     edx, 5; category", "lea     rsi, aSCannot; \"%s: cannot \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, [rsp+0E8h+lseek_errno]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~records,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,[rsp+0]", "mov~edi,0", "mov~eax,0", "call~FOO"]], [5, 0, 29, 0, 3, 14, 0, 3, 4, 8, 0.03170731707317073, ["mov     rsi, [rsp+0E8h+file]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     records, rax", "mov     edx, 5; category", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, [r15]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~records,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 28, 0, 1, 9, 1, 2, 2, 7, 0.06981707317073171, ["mov     eax, [r15]", "mov     [rsp+0E8h+lseek_errno], eax", "mov     ecx, 2; whence", "mov     edx, 0; offset", "mov     esi, ebp; fdesc", "mov     rdi, [rsp+0E8h+file]; filename", "call    skip_via_lseek", "test    rax, rax", "js      loc_4035"], ["mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~ecx,0", "mov~edx,0", "mov~esi,ebp", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "js~FOO"]], [6, 0, 1, 0, 3, 15, 0, 3, 8, -1, 0.0064024390243902435, ["mov     rdx, [rsp+0E8h+file]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     records, rax", "mov     edx, 5; category", "lea     rsi, aSCannot_0; \"%s: cannot \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, [rsp+0E8h+lseek_errno]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~records,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,[rsp+0]", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 1, 6, 0, 0, 5, 1, 1, 4, 3, 0.009146341463414634, ["mov     eax, [rsp+0E8h+st.st_mode]", "and     eax, 0D000h", "mov     ebx, 0", "cmp     eax, 8000h", "jnz     short loc_3DED"], ["mov~eax,[rsp+0]", "and~eax,0", "mov~ebx,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 0, 0, 2, 3, 0, 2, 5, -1, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 0, 0, 2, 3, 0, 2, 9, -1, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [6, 0, 2, 0, 3, 16, 1, 4, 8, -1, 0.01920731707317073, ["mov     rsi, [rsp+0E8h+file]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     records, rax", "mov     edx, 5; category", "lea     rsi, aErrorReadingS; \"error reading %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, [r15]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "test    byte ptr cs:conversions_mask+1, 1", "jz      short loc_3FBF"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~records,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 9, -1, 0.0, ["call    print_stats", "jmp     short loc_3FBF"], ["call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.004878048780487805, ["mov     [rsp+0E8h+lseek_errno], 4Bh ; 'K'", "jmp     short loc_3E6D"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 0, 5, 3, 0.003048780487804878, ["mov     rcx, [rsp+0E8h+st.st_size]", "mov     rsi, cs:input_offset", "lea     rax, [rsi+r14]", "cmp     rcx, rax", "jnb     short loc_3DED"], ["mov~rcx,[rsp+0]", "mov~rsi,<TAG>", "lea~rax,<TAG>", "cmp~rcx,rax", "jnb~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 10, 2, 0.00548780487804878, ["mov     qword ptr [bytes+0], 0"], ["mov~[word ptr [bytes+0],0"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.015853658536585366, ["cmp     [rsp+0E8h+lseek_errno], 0", "jnz     short loc_3E6D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 4, -1, 0.0, ["mov     [rsp+0E8h+lseek_errno], 4Bh ; 'K'"], ["mov~[rsp+0],0"]], [1, 0, 4, 3, 0, 7, 0, 0, 6, 3, 0.0, ["sub     r14, rcx", "mov     rax, r14", "mov     edx, 0", "div     blocksize", "mov     rbx, rax", "sub     rcx, rsi", "mov     r14, rcx"], ["sub~r14,rcx", "mov~rax,r14", "mov~edx,0", "div~,blocksize", "mov~rbx,rax", "sub~rcx,rsi", "mov~r14,rcx"]], [0, 0, 3, 0, 1, 3, 0, 2, 5, 2, 0.007317073170731707, ["mov     rdi, offset; offset", "call    advance_input_offset", "jmp     loc_3FE3"], ["mov~rdi,offset", "call~FOO", "jmp~FOO"]]], "func_feature": [31, 17, 57, 1, 42, 59, 2, 220, 0.02712, 10, 9], "succs": [[24, 12], [0, 28], [37, 7], [2], [2, 3], [19, 13], [5], [8, 5], [5, 14], [5], [], [17, 10], [11], [19], [11], [31], [26, 15], [], [11, 4], [18, 23], [9, 6], [25, 35], [1, 21], [33, 29], [27, 30], [20], [31], [28], [20, 38], [32], [41, 36], [], [], [32, 34], [32], [16], [40, 41], [11], [16, 39], [16], [41], [11]], "fname": "skip", "n_num": 42}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[6, 0, 18, 0, 3, 16, 0, 3, 0, 0, 0.007375415282392027, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aErrorWritingS; \"error writing %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[word ptr [rsp+0],0"]], [1, 0, 132, 1, 1, 7, 0, 2, 54, 8, 0.028305647840531564, ["mov     rdx, rbp; size", "mov     rsi, r13; buf", "mov     edi, 1; fd", "call    iwrite", "add     cs:w_bytes, rax", "cmp     rax, rbp", "jz      loc_588D"], ["mov~rdx,rbp", "mov~rsi,r13", "mov~edi,0", "call~FOO", "add~<TAG>,rax", "cmp~rax,rbp", "jz~FOO"]], [1, 0, 297, 0, 1, 37, 1, 2, 2, 46, 0.013156146179401994, ["mov     rax, cs:caught_signals.__val", "mov     rdx, cs:caught_signals.__val+8", "mov     [rsp+118h+stdout_stat.st_ino], rax", "mov     [rsp+118h+stdout_stat.st_nlink], rdx", "mov     rax, cs:caught_signals.__val+10h", "mov     rdx, cs:caught_signals.__val+18h", "mov     qword ptr [rsp+118h+stdout_stat.st_mode], rax", "mov     qword ptr [rsp+118h+stdout_stat.st_gid], rdx", "mov     rax, cs:caught_signals.__val+20h", "mov     rdx, cs:caught_signals.__val+28h", "mov     [rsp+118h+stdout_stat.st_rdev], rax", "mov     [rsp+118h+stdout_stat.st_size], rdx", "mov     rax, cs:caught_signals.__val+30h", "mov     rdx, cs:caught_signals.__val+38h", "mov     [rsp+118h+stdout_stat.st_blksize], rax", "mov     [rsp+118h+stdout_stat.st_blocks], rdx", "mov     rax, cs:caught_signals.__val+40h", "mov     rdx, cs:caught_signals.__val+48h", "mov     [rsp+118h+stdout_stat.st_atim.tv_sec], rax", "mov     [rsp+118h+stdout_stat.st_atim.tv_nsec], rdx", "mov     rax, cs:caught_signals.__val+50h", "mov     rdx, cs:caught_signals.__val+58h", "mov     [rsp+118h+stdout_stat.st_mtim.tv_sec], rax", "mov     [rsp+118h+stdout_stat.st_mtim.tv_nsec], rdx", "mov     rax, cs:caught_signals.__val+60h", "mov     rdx, cs:caught_signals.__val+68h", "mov     [rsp+118h+stdout_stat.st_ctim.tv_sec], rax", "mov     [rsp+118h+stdout_stat.st_ctim.tv_nsec], rdx", "mov     rax, cs:caught_signals.__val+70h", "mov     rdx, cs:caught_signals.__val+78h", "mov     [rsp+118h+stdout_stat.__glibc_reserved], rax", "mov     [rsp+118h+stdout_stat.__glibc_reserved+8], rdx", "mov     esi, 0Ah; signo", "lea     rdi, caught_signals; set", "call    _sigismember", "test    eax, eax", "jnz     loc_4365"], ["mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~[word ptr [rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 299, 0, 1, 6, 0, 2, 1, 47, 0.006622369878183832, ["lea     rdx, [rsp+118h+stdout_stat]; oact", "mov     esi, 0; act", "mov     edi, 2; sig", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      short loc_4117"], ["lea~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 298, 0, 1, 3, 0, 1, 2, 47, 0.0, ["mov     esi, 2; signo", "lea     rdi, caught_signals; set", "call    _sigaddset"], ["mov~esi,0", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 138, 0, 1, 7, 0, 2, 45, 8, 0.011622369878183832, ["mov     rbx, [rsp+118h+bytes]", "mov     rdx, rbx; size", "mov     rsi, cs:obuf; buf", "mov     edi, 1; fd", "call    iwrite", "cmp     rbx, rax", "jnz     short loc_5251"], ["mov~rbx,[rsp+0]", "mov~rdx,rbx", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "cmp~rbx,rax", "jnz~FOO"]], [0, 0, 144, 0, 0, 2, 1, 1, 44, 9, 0.019435215946843856, ["test    rbx, rbx", "jz      short loc_51EC"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 136, 0, 0, 1, 0, 0, 46, 7, 0.01054263565891473, ["mov     [rsp+118h+bytes], 0"], ["mov~[rsp+0],0"]], [5, 0, 197, 0, 2, 9, 0, 2, 26, 22, 0.12485566629752669, ["mov     edx, 5; category", "lea     rsi, aCannotCombineL; \"cannot combine lcase and ucase\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 209, 0, 0, 5, 2, 1, 25, 23, 0.12426504245108887, ["mov     eax, ebx", "and     eax, 60h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_4DE3"], ["mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [5, 0, 197, 0, 2, 9, 0, 2, 25, 23, 0.08555777039497979, ["mov     edx, 5; category", "lea     rsi, aCannotCombineB; \"cannot combine block and unblock\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 215, 1, 0, 4, 0, 0, 24, 27, 0.0017497231450719823, ["mov     rax, cs:max_records", "sub     rax, 1", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "jbe     loc_5E79"], ["mov~rax,<TAG>", "sub~rax,0", "cmp~rax,0", "jbe~FOO"]], [1, 0, 216, 0, 0, 2, 0, 1, 23, 27, 0.0034551495016611295, ["cmp     cs:skip_records, 0", "jnz     loc_5E79"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 229, 0, 0, 3, 0, 1, 18, 31, 0.0007419712070874862, ["mov     rax, [rsp+118h+var_100]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_49A8"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 230, 0, 0, 2, 1, 1, 17, 31, 0.1681063122923588, ["test    cl, 4", "jz      loc_49A8"], ["test~cl,0", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 0, 49, 12, 0.009712070874861574, ["cmp     rbx, cs:conversion_blocksize", "jnb     short loc_5AE3"], ["cmp~rbx,<TAG>", "jnb~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 48, 11, 0.053759689922480626, ["mov     rbx, cs:col", "test    rbx, rbx", "jnz     loc_5AA6"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 49, 1, 0, 1, 0, 0, 51, 13, 0.0010299003322259137, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 17, 0, 0, 2, 0, 1, 53, 6, 0.036002214839424146, ["cmp     cs:max_records, 0", "jz      loc_5D51"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 21, 0, 0, 2, 1, 1, 52, 7, 0.02435215946843854, ["test    byte ptr cs:conversions_mask+1, 80h", "jz      loc_580B"], ["test~<TAG>,<STR>", "jz~FOO"]], [1, 0, 21, 0, 1, 4, 1, 2, 53, 7, 0.006057585825027686, ["mov     edi, 1; fd", "call    _fsync", "test    eax, eax", "jz      loc_580B"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [6, 0, 18, 0, 3, 17, 0, 4, 55, 7, 9.966777408637874e-05, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aFsyncFailedFor; \"fsync failed for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_580B"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [6, 0, 18, 0, 3, 17, 0, 4, 52, 7, 0.014152823920265782, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aErrorWritingS; \"error writing %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_580B"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 53, 7, 0.0006976744186046512, ["mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_580B"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 212, 0, 0, 3, 0, 1, 24, 26, 0.005869324473975637, ["mov     cs:warn_partial_read, 1", "lea     rax, iread", "jmp     loc_4A69"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 214, 0, 0, 4, 2, 1, 25, 27, 0.0008859357696566999, ["mov     eax, esi", "or      eax, ecx", "test    ah, 40h", "jnz     loc_5E79"], ["mov~eax,esi", "or~eax,ecx", "test~ah,0", "jnz~FOO"]], [0, 2, 32, 0, 0, 4, 1, 1, 52, 9, 0.011572535991140644, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_5A03"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [2, 0, 34, 0, 1, 6, 1, 2, 51, 9, 0.02, ["lea     rdx, [rsp+118h+stdout_stat]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_5C79"], ["lea~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 10, 43, 0.009856035437430787, ["mov     rsi, r15; name", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      short loc_445F"], ["mov~rsi,r15", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 289, 0, 1, 6, 1, 2, 9, 43, 0.01647840531561462, ["lea     rbx, [rax+1]", "mov     rsi, r13; name", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      short loc_440A"], ["lea~rbx,[rax+0]", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 289, 0, 0, 1, 0, 0, 11, 42, 0.0028460686600221487, ["mov     cs:output_file, rbx"], ["mov~<TAG>,rbx"]], [0, 0, 289, 0, 1, 5, 1, 2, 16, 46, 0.018205980066445183, ["lea     rsi, aObs; \"obs\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      short loc_4648"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 289, 0, 2, 10, 1, 3, 15, 46, 0.006256921373200443, ["mov     dword ptr [rsp+118h+bytes], 0", "mov     rsi, [rsp+118h+invalid]; invalid", "mov     rdi, rbx; str", "call    parse_integer", "mov     [rsp+118h+var_118], rax", "lea     rsi, aIbs; \"ibs\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      loc_460A"], ["mov~[word ptr [rsp+0],0", "mov~rsi,[rsp+0]", "mov~rdi,rbx", "call~FOO", "mov~<TAG>,rax", "lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [7, 0, 289, 0, 3, 17, 0, 3, 19, 47, 0.011638981173864896, ["mov     rdi, rbx; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aInvalidNumber; \"invalid number\"", "mov     edi, 0; domainname", "call    _dcgettext", "cmp     dword ptr [rsp+118h+bytes], 1", "mov     esi, 4Bh ; 'K'", "mov     edx, 0", "cmovnz  esi, edx; errnum", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "cmp~[word ptr [rsp+0],0", "mov~esi,0", "mov~edx,0", "cmovnz~esi,edx", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 295, 0, 1, 5, 1, 2, 3, 45, 0.019601328903654486, ["mov     esi, 2; signo", "lea     rdi, caught_signals; set", "call    _sigismember", "test    eax, eax", "jnz     loc_4395"], ["mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 296, 0, 1, 8, 0, 2, 3, 46, 0.0, ["lea     rax, siginfo_handler", "mov     [rsp+118h+stdout_stat.st_dev], rax", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0", "lea     rsi, [rsp+118h+stdout_stat]; act", "mov     edx, 0; oact", "mov     edi, 0Ah; sig", "call    _sigaction", "jmp     loc_420B"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~[word ptr [rsp+0],0", "lea~rsi,[rsp+0]", "mov~edx,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [6, 0, 0, 0, 4, 15, 0, 4, 9, -1, 0.0, ["mov     rdi, rbp; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aUnrecognizedOp; \"unrecognized operand %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rdi,rbp", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 289, 0, 1, 6, 1, 2, 8, 44, 0.014318936877076412, ["mov     rbp, [r12]", "mov     esi, 3Dh ; '='; c", "mov     rdi, rbp; s", "call    _strchr", "test    rax, rax", "jz      short loc_43C5"], ["mov~rbp,<TAG>", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 54, 5, 0.01853156146179406, ["cmp     cs:i_nocache, 0", "jnz     short loc_582B"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 54, 5, 0.01155703211517167, ["cmp     cs:max_bytes, 0", "jnz     loc_5819"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 154, 2, 0, 5, 0, 1, 40, 9, 0.0023754152823920265, ["imul    rbx, r13", "lea     rax, [rbp+r12+0]", "add     rax, rbx", "cmp     rax, cs:input_offset", "jz      short loc_507E"], ["imul~rbx,r13", "lea~rax,[rbp+0]", "add~rax,rbx", "cmp~rax,<TAG>", "jz~FOO"]], [1, 0, 155, 0, 1, 11, 1, 2, 39, 10, 0.00611295681063123, ["mov     r13, cs:input_blocksize", "mov     rbp, cs:input_offset", "mov     r12, cs:skip_bytes", "lea     r8, skip_bytes; bytes", "mov     rcx, r13; blocksize", "mov     rdx, rbx; records", "mov     rsi, cs:input_file; file", "mov     edi, 0; fdesc", "call    skip", "test    rax, rax", "jnz     short loc_502C"], ["mov~r13,<TAG>", "mov~rbp,<TAG>", "mov~r12,<TAG>", "lea~r8,<TAG>", "mov~rcx,r13", "mov~rdx,rbx", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 134, 0, 0, 2, 0, 1, 43, 5, 0.017829457364341085, ["cmp     cs:max_bytes, 0", "jz      loc_5D61"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 135, 0, 0, 2, 0, 1, 42, 6, 0.23920265780730898, ["cmp     cs:max_records, 0", "jnz     short loc_522B"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 289, 1, 0, 3, 0, 1, 11, 41, 0.10439645625692139, ["add     r12, 8", "cmp     r14, r12", "jz      loc_476A"], ["add~r12,0", "cmp~r14,r12", "jz~FOO"]], [0, 0, 289, 0, 0, 2, 0, 1, 10, 42, 0.008792912513842746, ["mov     cs:input_file, rbx", "jmp     short loc_4420"], ["mov~<TAG>,rbx", "jmp~FOO"]], [1, 0, 289, 0, 1, 7, 0, 2, 15, 42, 0.0029346622369878185, ["lea     rcx, error_msgid; \"invalid status level\"", "mov     edx, 1; exclusive", "lea     rsi, statuses; table", "mov     rdi, rbx; str", "call    parse_symbols", "mov     cs:status_level, eax", "jmp     loc_4420"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 289, 0, 1, 7, 1, 2, 12, 42, 0.002868217054263566, ["lea     rcx, aInvalidConvers; \"invalid conversion\"", "mov     edx, 0; exclusive", "lea     rsi, conversions; table", "mov     rdi, rbx; str", "call    parse_symbols", "or      cs:conversions_mask, eax", "jmp     loc_4420"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 289, 0, 1, 7, 1, 2, 13, 42, 0.0028903654485049834, ["lea     rcx, aInvalidInputFl; \"invalid input flag\"", "mov     edx, 0; exclusive", "lea     rsi, flags; table", "mov     rdi, rbx; str", "call    parse_symbols", "or      cs:input_flags, eax", "jmp     loc_4420"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 289, 0, 1, 7, 1, 2, 14, 42, 0.002912513842746401, ["lea     rcx, aInvalidOutputF; \"invalid output flag\"", "mov     edx, 0; exclusive", "lea     rsi, flags; table", "mov     rdi, rbx; str", "call    parse_symbols", "or      cs:output_flags, eax", "jmp     loc_4420"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 289, 0, 0, 2, 0, 1, 19, 42, 0.06104097452934663, ["cmp     dword ptr [rsp+118h+bytes], 0", "jz      loc_4420"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [1, 0, 29, 0, 1, 5, 1, 2, 55, 9, 0.0029346622369878185, ["mov     rsi, rax; length", "mov     edi, 1; fd", "call    iftruncate", "test    eax, eax", "jz      loc_5A03"], ["mov~rsi,rax", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 54, 9, 0.0058028792912513845, ["cmp     rax, [rsp+118h+stdout_stat.st_size]", "jle     loc_5A03"], ["cmp~rax,[rsp+0]", "jle~FOO"]], [1, 0, 132, 0, 0, 2, 1, 1, 53, 11, 0.010155038759689924, ["test    esi, 100h", "jnz     loc_5791"], ["test~esi,0", "jnz~FOO"]], [2, 0, 132, 1, 0, 5, 1, 1, 52, 10, 0.0493576965669989, ["add     cs:r_partial, 1", "mov     esi, cs:conversions_mask", "mov     [rsp+118h+var_118], rbx", "test    esi, 400h", "jz      loc_5591"], ["add~<TAG>,0", "mov~esi,<TAG>", "mov~<TAG>,rbx", "test~esi,0", "jz~FOO"]], [1, 0, 153, 0, 0, 2, 0, 1, 41, 9, 2.21483942414175e-05, ["cmp     cs:input_offset_overflow, 1", "jz      short loc_507E"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 212, 0, 0, 3, 0, 1, 26, 26, 0.0011738648947951275, ["mov     cs:warn_partial_read, 0", "lea     rax, iread", "jmp     short loc_4A69"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 226, 1, 0, 5, 0, 1, 19, 30, 0.0012513842746400886, ["mov     edx, 0", "div     cs:input_blocksize", "mov     cs:max_records, rax", "mov     cs:max_bytes, rdx", "jmp     loc_49BA"], ["mov~edx,0", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 51, 0, 1, 2, 0, 2, 50, 13, 0.00011074197120708749, ["call    write_output", "jmp     loc_59C9"], ["call~FOO", "jmp~FOO"]], [0, 0, 52, 0, 0, 8, 0, 0, 49, 11, 0.0035548172757475086, ["mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "movzx   esi, cs:saved_char", "mov     [rcx+rdx], sil", "cmp     rax, cs:output_blocksize", "jb      loc_59E6"], ["mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "movzx~esi,<TAG>", "mov~<TAG>,sil", "cmp~rax,<TAG>", "jb~FOO"]], [2, 0, 132, 0, 0, 5, 1, 1, 46, 16, 0.15477297895902548, ["mov     esi, cs:conversions_mask", "mov     eax, esi", "and     eax, 500h", "cmp     eax, 500h", "jz      loc_52D0"], ["mov~esi,<TAG>", "mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 132, 2, 0, 10, 1, 0, 45, 14, 0.2761461794019934, ["mov     rbx, cs:r_full", "add     rbx, cs:r_partial", "mov     r12, cs:max_bytes", "mov     rbp, cs:max_records", "test    r12, r12", "setnz   al", "movzx   eax, al", "add     rax, rbp", "cmp     rbx, rax", "jnb     loc_53D7"], ["mov~rbx,<TAG>", "add~rbx,<TAG>", "mov~r12,<TAG>", "mov~rbp,<TAG>", "test~r12,r12", "setnz~al", "movzx~eax,al", "add~rax,rbp", "cmp~rbx,rax", "jnb~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 19, 30, 0.0, ["mov     cs:max_records, rax"], ["mov~<TAG>,rax"]], [1, 0, 227, 0, 0, 3, 0, 1, 18, 30, 0.16968992248062018, ["mov     rax, [rsp+118h+var_100]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_49BA"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [5, 0, 197, 0, 2, 19, 2, 3, 36, 12, 0.16773901808785524, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, 0; fd", "call    _lseek", "mov     rdx, offset", "not     rdx", "shr     rdx, 3Fh", "mov     cs:input_seekable, dl", "test    offset, offset", "mov     edx, 0", "cmovs   offset, rdx", "mov     cs:input_offset, rax", "call    ___errno_location", "mov     [rsp+118h+var_110], rax", "mov     eax, [rax]", "mov     cs:input_seek_errno, eax", "mov     rsi, cs:output_file; file", "test    rsi, rsi", "jz      loc_4F73"], ["mov~edx,0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,offset", "not~rdx", "shr~rdx,0", "mov~<TAG>,dl", "test~offset,offset", "mov~edx,0", "cmovs~offset,rdx", "mov~<TAG>,rax", "call~FOO", "mov~[rsp+0],rax", "mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [3, 0, 197, 0, 2, 10, 0, 3, 35, 13, 0.08288113695090438, ["mov     edx, 5; category", "lea     rsi, aStandardInput; \"standard input\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     cs:input_file, rax", "mov     rdx, rax; name", "mov     esi, cs:input_flags; add_flags", "mov     edi, 0; fd", "call    set_fd_flags", "jmp     loc_4BE1"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 197, 0, 1, 6, 1, 2, 35, 13, 0.15482650424510888, ["mov     ecx, 0; mode", "mov     edx, cs:input_flags; flag", "mov     edi, 0; desired_fd", "call    ifd_reopen", "test    eax, eax", "js      loc_4F2A"], ["mov~ecx,0", "mov~edx,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 132, 0, 0, 3, 0, 1, 53, 9, 0.08086378737541529, ["mov     r13, cs:ibuf", "cmp     r13, cs:obuf", "jz      loc_579D"], ["mov~r13,<TAG>", "cmp~r13,<TAG>", "jz~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 54, 8, 0.0029900332225913625, ["mov     rax, [rsp+118h+var_110]", "cmp     dword ptr [rax], 4", "jz      short loc_5A1D"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [5, 0, 197, 0, 2, 9, 0, 2, 27, 21, 0.1649158361018824, ["mov     edx, 5; category", "lea     rsi, aCannotCombineE; \"cannot combine excl and nocreat\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 208, 0, 0, 5, 2, 1, 26, 22, 0.08700479881875219, ["mov     eax, ebx", "and     eax, 3000h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_4E10"], ["mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 0, 0, 47, 15, 0.15255813953488373, ["cmp     rbx, rbp", "jb      loc_52F3"], ["cmp~rbx,rbp", "jb~FOO"]], [0, 2, 132, 0, 1, 7, 1, 2, 47, 16, 0.0, ["and     esi, 18h", "mov     eax, 20h ; ' '", "cmovnz  esi, eax; c", "mov     rdx, cs:input_blocksize; n", "mov     rdi, cs:ibuf; s", "call    _memset", "jmp     loc_5637"], ["and~esi,<STR>", "mov~eax,<STR>", "cmovnz~esi,eax", "mov~rdx,<TAG>", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 1, 1, 51, 8, 0.03775193798449612, ["test    byte ptr cs:conversions_mask+1, 40h", "jnz     loc_5CCC"], ["test~<TAG>,0", "jnz~FOO"]], [3, 0, 31, 0, 1, 7, 1, 2, 53, 9, 0.008648947951273533, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, 1; fd", "call    _lseek", "mov     rbx, rax", "test    rax, rax", "js      loc_5A03"], ["mov~edx,0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "test~rax,rax", "js~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 50, 9, 0.06193798449612403, ["cmp     cs:final_op_was_seek, 0", "jnz     loc_5BBE"], ["cmp~<TAG>,0", "jnz~FOO"]], [5, 0, 19, 0, 3, 17, 0, 4, 56, 8, 0.00014396456256921374, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aFailedToTrunca_0; \"failed to truncate to %ld bytes in outp\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     short loc_5CBF"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 19, 0, 3, 15, 0, 3, 52, 8, 0.0030675526024363233, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [4, 0, 289, 1, 0, 15, 0, 1, 7, 45, 0.004750830564784053, ["movsxd  rdx, eax", "lea     r12, [argv+rdx*8]", "not     eax", "lea     eax, [rax+argc]", "add     rax, rdx", "lea     r14, [argv+rax*8+8]", "mov     [rsp+118h+exit_status], 0", "mov     [rsp+118h+var_100], 0FFFFFFFFFFFFFFFFh", "mov     [rsp+118h+var_110], 0", "mov     [rsp+118h+var_F8], 0", "lea     r13, aIf; \"if\"", "lea     r15, aOf; \"of\"", "lea     rax, [rsp+118h+bytes]", "mov     [rsp+118h+invalid], rax", "jmp     loc_442D"], ["movsxd~rdx,eax", "lea~r12,<TAG>", "not~eax", "lea~eax,<TAG>", "add~rax,rdx", "lea~r14,[argv+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~r13,<TAG>", "lea~r15,<TAG>", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 289, 0, 0, 8, 0, 1, 17, 45, 0.008106312292358805, ["mov     rax, cs:page_size", "neg     rax", "mov     rdi, 7FFFFFFFFFFFFFFFh", "cmp     rax, rdi", "cmova   rax, rdi", "mov     rdi, [rsp+118h+var_118]", "mov     cs:output_blocksize, rdi", "jmp     loc_45A8"], ["mov~rax,<TAG>", "neg~rax", "mov~rdi,0", "cmp~rax,rdi", "cmova~rax,rdi", "mov~rdi,<TAG>", "mov~<TAG>,rdi", "jmp~FOO"]], [3, 0, 250, 0, 0, 3, 0, 0, 7, 41, 0.03045404208194906, ["mov     [rsp+118h+var_110], 0", "mov     [rsp+118h+var_100], 0FFFFFFFFFFFFFFFFh", "mov     [rsp+118h+exit_status], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 291, 0, 0, 3, 0, 1, 6, 42, 0.03222591362126246, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     ebp, eax", "jle     loc_4833"], ["mov~eax,<TAG>", "cmp~ebp,eax", "jle~FOO"]], [1, 0, 221, 1, 0, 5, 0, 1, 21, 28, 0.0012236987818383168, ["mov     edx, 0", "div     cs:output_blocksize", "mov     cs:seek_records, rax", "mov     cs:seek_bytes, rdx", "jmp     short loc_49DB"], ["mov~edx,0", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 224, 0, 0, 3, 1, 1, 20, 29, 0.0007973421926910299, ["mov     rax, [rsp+118h+exit_status]", "test    rax, rax", "jnz     short loc_4A2F"], ["mov~rax,[rsp+0]", "test~rax,rax", "jnz~FOO"]], [6, 0, 132, 0, 3, 17, 1, 4, 52, 15, 0.027962347729789592, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aErrorReadingS; \"error reading %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "test    byte ptr cs:conversions_mask+1, 1", "jz      loc_59AB"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [1, 0, 132, 0, 0, 2, 1, 1, 51, 16, 0.05508305647840532, ["test    byte ptr cs:conversions_mask+1, 1", "jz      short loc_567C"], ["test~<TAG>,0", "jz~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 52, 16, 0.024119601328903655, ["cmp     cs:status_level, 1", "jz      short loc_56CF"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 132, 0, 2, 7, 0, 3, 43, 16, 0.22066445182724254, ["call    alloc_ibuf", "call    alloc_obuf", "mov     eax, dword ptr [rsp+118h+var_100]", "mov     dword ptr [rsp+118h+exit_status], eax", "mov     [rsp+118h+var_118], 0", "lea     r15, trans_table", "jmp     loc_55E1"], ["call~FOO", "call~FOO", "mov~eax,[word ptr [rsp+0]", "mov~[word ptr [rsp+0],eax", "mov~<TAG>,0", "lea~r15,<TAG>", "jmp~FOO"]], [5, 0, 197, 0, 2, 9, 0, 2, 28, 20, 0.2090808416389812, ["mov     edx, 5; category", "lea     rsi, aCannotCombineD; \"cannot combine direct and nocache\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 207, 0, 0, 5, 2, 1, 27, 21, 0.048960132890365424, ["mov     eax, ecx", "and     eax, 4002h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_4E3D"], ["mov~eax,ecx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 206, 0, 0, 6, 2, 1, 28, 21, 0.008970099667774087, ["mov     eax, esi", "and     eax, 4002h", "lea     edx, [rax-1]", "and     edx, eax", "mov     dword ptr [rsp+118h+var_100], edx", "jnz     loc_4E3D"], ["mov~eax,esi", "and~eax,0", "lea~edx,[rax-1]+0]", "and~edx,eax", "mov~[word ptr [rsp+0],edx", "jnz~FOO"]], [1, 0, 132, 0, 1, 5, 0, 1, 48, 14, 0.07444629014396456, ["mov     rdx, r12; size_t", "mov     rsi, cs:ibuf; char *", "mov     edi, 0; int", "call    cs:iread_fnc", "mov     rbx, rax"], ["mov~rdx,r12", "mov~rsi,<TAG>", "mov~edi,0", "call~<TAG>", "mov~rbx,rax"]], [2, 0, 3, 0, 1, 3, 0, 1, 57, 2, 0.001607973421926911, ["mov     esi, 0; len", "mov     edi, 1; fd", "call    invalidate_cache"], ["mov~esi,0", "mov~edi,0", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 56, 3, 0.00942857142857141, ["cmp     cs:o_nocache, 0", "jnz     short loc_584C"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 57, 2, 0.001607973421926911, ["cmp     cs:o_nocache_eof, 0", "jz      short loc_585B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 51, 8, 0.017187153931339978, ["cmp     rax, cs:oc", "jz      loc_59F6"], ["cmp~rax,<TAG>", "jz~FOO"]], [7, 0, 6, 0, 3, 18, 0, 4, 47, 3, 0.0, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aFailedToDiscar; \"failed to discard cache for: %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_5D72"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 7, 0, 1, 5, 1, 2, 46, 3, 0.0031229235880398673, ["mov     esi, 0; len", "mov     edi, 0; fd", "call    invalidate_cache", "test    al, al", "jnz     loc_5D72"], ["mov~esi,0", "mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 17, 45, 0.012270210409745293, ["lea     rsi, aCbs+1; name", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      short loc_468B"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 49, 13, 0.1492358803986711, ["test    rbx, rbx", "jg      loc_5314"], ["test~rbx,rbx", "jg~FOO"]], [1, 0, 132, 0, 1, 6, 0, 2, 48, 14, 0.07444629014396456, ["mov     rdx, cs:input_blocksize; size_t", "mov     rsi, cs:ibuf; char *", "mov     edi, 0; int", "call    cs:iread_fnc", "mov     rbx, rax", "jmp     loc_5658"], ["mov~rdx,<TAG>", "mov~rsi,<TAG>", "mov~edi,0", "call~<TAG>", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 197, 0, 0, 2, 1, 1, 31, 19, 0.017452934662236987, ["test    bl, 1", "jnz     loc_4E6A"], ["test~bl,0", "jnz~FOO"]], [1, 0, 201, 0, 0, 2, 1, 1, 30, 20, 0.01293466223698782, ["test    sil, 2", "jz      short loc_4B62"], ["test~sil,0", "jz~FOO"]], [2, 0, 198, 0, 0, 4, 2, 0, 32, 20, 0.004385382059800665, ["mov     cs:o_nocache_eof, al", "and     cs:o_nocache_eof, 1", "and     esi, 0FFFFFFFDh", "mov     cs:output_flags, esi"], ["mov~<TAG>,al", "and~<TAG>,0", "and~esi,0", "mov~<TAG>,esi"]], [2, 0, 249, 0, 0, 3, 1, 1, 8, 40, 0.03431893687707641, ["or      cs:conversions_mask, 800h", "cmp     cs:input_blocksize, 0", "jnz     short loc_486D"], ["or~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 12, 40, 0.10018826135105205, ["mov     rax, [rsp+118h+var_F8]", "test    rax, rax", "jz      loc_484E"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 1, 248, 0, 0, 1, 0, 0, 9, 40, 0.0, ["mov     cs:input_blocksize, 200h"], ["mov~<TAG>,<STR>"]], [2, 0, 24, 1, 0, 6, 1, 1, 53, 9, 0.005869324473975637, ["mov     rax, [rsp+118h+var_110]", "mov     eax, [rax]", "mov     dword ptr [rsp+118h+var_118], eax", "sub     eax, 16h", "test    eax, 0FFFFFFEFh", "jnz     short loc_5D01"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~<TAG>,eax", "sub~eax,0", "test~eax,0", "jnz~FOO"]], [1, 0, 25, 0, 1, 4, 1, 2, 52, 8, 0.00877076411960133, ["mov     edi, 1; fildes", "call    _fdatasync", "test    eax, eax", "jz      loc_5A10"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 50, 16, 0.06719822812846069, ["test    rbx, rbx", "jz      loc_539C"], ["test~rbx,rbx", "jz~FOO"]], [2, 0, 212, 0, 0, 6, 1, 0, 22, 26, 0.1807751937984496, ["mov     cs:warn_partial_read, 0", "mov     eax, ecx", "and     eax, 1", "lea     rax, iread_fullblock", "lea     rdx, iread", "cmovz   rax, rdx"], ["mov~<TAG>,0", "mov~eax,ecx", "and~eax,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovz~rax,rdx"]], [1, 0, 220, 0, 0, 3, 1, 1, 21, 27, 0.1851605758582503, ["mov     ebx, cs:conversions_mask", "test    bh, 8", "jnz     short loc_4A4B"], ["mov~ebx,<TAG>", "test~bh,0", "jnz~FOO"]], [0, 0, 289, 0, 0, 3, 0, 1, 20, 43, 0.0031229235880398673, ["mov     rax, [rsp+118h+var_118]", "mov     [rsp+118h+var_110], rax", "jmp     loc_46B2"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 19, 44, 0.0029346622369878185, ["lea     rsi, aSkip; \"skip\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jnz     loc_5E5D"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 4, 0, 1, 5, 1, 2, 47, 2, 0.0031561461794019936, ["mov     esi, 0; len", "mov     edi, 1; fd", "call    invalidate_cache", "test    al, al", "jnz     loc_585B"], ["mov~esi,0", "mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 46, 2, 0.012642303433001122, ["cmp     cs:o_nocache, 0", "jz      loc_585B"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 132, 1, 0, 4, 0, 0, 58, 20, 0.0, ["sub     rbp, 1", "movzx   eax, byte ptr [r13+rbp+0]", "mov     cs:saved_char, al", "mov     cs:char_is_saved, 1"], ["sub~rbp,0", "movzx~eax,[yte ptr [r13+0]", "mov~<TAG>,al", "mov~<TAG>,0"]], [1, 0, 132, 0, 0, 2, 1, 1, 57, 20, 0.015382059800664453, ["test    bpl, 1", "jz      short loc_5919"], ["test~bpl,0", "jz~FOO"]], [3, 2, 197, 0, 0, 13, 4, 1, 37, 13, 0.02308970099667774, ["mov     eax, cs:conversions_mask", "mov     edx, eax", "and     edx, 1000h", "mov     edx, 40h ; '@'", "mov     edi, dword ptr [rsp+118h+var_100]", "cmovnz  edx, edi", "mov     ebx, eax", "sar     ebx, 6", "and     ebx, 80h", "or      ebx, cs:output_flags", "or      ebx, edx", "cmp     cs:seek_records, 0", "jnz     loc_5E8C"], ["mov~eax,<TAG>", "mov~edx,eax", "and~edx,<STR>", "mov~edx,0", "mov~edi,[word ptr [rsp+0]", "cmovnz~edx,edi", "mov~ebx,eax", "sar~ebx,0", "and~ebx,<STR>", "or~ebx,<TAG>", "or~ebx,edx", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 11, 43, 0.009180509413067552, ["lea     rsi, aConv; \"conv\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jnz     short loc_44D9"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 132, 0, 0, 2, 1, 1, 56, 17, 0.03338870431893688, ["test    sil, 8", "jnz     loc_5946"], ["test~sil,0", "jnz~FOO"]], [1, 0, 132, 1, 0, 2, 0, 1, 59, 18, 0.009844961240310078, ["add     r13, 1", "jmp     loc_55C2"], ["add~r13,0", "jmp~FOO"]], [0, 1, 132, 0, 0, 3, 1, 1, 55, 18, 0.04335548172757475, ["mov     esi, cs:conversions_mask", "test    sil, 80h", "jnz     loc_58D9"], ["mov~esi,<TAG>", "test~sil,<STR>", "jnz~FOO"]], [1, 0, 247, 0, 0, 2, 0, 1, 9, 39, 0.03870431893687708, ["cmp     cs:output_blocksize, 0", "jnz     loc_4786"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 197, 0, 1, 3, 0, 2, 29, 19, 0.20987818383167223, ["lea     rdi, ebcdic_to_ascii; new_trans", "call    translate_charset", "jmp     loc_4B6B"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 42, 0, 0, 8, 0, 0, 50, 11, 0.0027796234772978962, ["mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     [rcx+rdx], sil", "cmp     rax, cs:output_blocksize", "jb      loc_59E6"], ["mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "movzx~esi,<TAG>", "mov~<TAG>,sil", "cmp~rax,<TAG>", "jb~FOO"]], [1, 0, 43, 0, 0, 2, 1, 1, 49, 11, 0.005537098560354375, ["test    byte ptr cs:conversions_mask, 10h", "jz      loc_59E6"], ["test~<TAG>,0", "jz~FOO"]], [7, 0, 151, 0, 3, 15, 0, 3, 41, 9, 0.0, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aSCannotSkipToS; \"%s: cannot skip to specified offset\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 152, 0, 0, 2, 0, 1, 40, 9, 0.0023975636766334443, ["cmp     cs:status_level, 1", "jz      short loc_507E"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 197, 0, 0, 2, 1, 1, 31, 17, 0.2264230343300111, ["test    bl, 20h", "jz      loc_4BA2"], ["test~bl,<STR>", "jz~FOO"]], [1, 0, 197, 0, 0, 2, 1, 1, 30, 18, 0.2301107419712071, ["test    bl, 40h", "jz      loc_4E7B"], ["test~bl,0", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 0, 1, 56, 15, 0.01959579180509413, ["cmp     rbp, rax", "jz      loc_576F"], ["cmp~rbp,rax", "jz~FOO"]], [3, 0, 132, 0, 1, 6, 1, 2, 55, 16, 0.02194905869324474, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, 0; fd", "call    _lseek", "test    rax, rax", "js      loc_570B"], ["mov~edx,0", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 2, 197, 0, 0, 4, 2, 0, 38, 13, 0.005780730897009967, ["and     eax, 200h", "mov     eax, 200h", "cmovnz  eax, edi", "or      ebx, eax"], ["and~eax,<STR>", "mov~eax,<STR>", "cmovnz~eax,edi", "or~ebx,eax"]], [0, 0, 289, 0, 1, 5, 1, 2, 12, 43, 0.008482834994462903, ["lea     rsi, aIflag; \"iflag\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jnz     short loc_44FF"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 211, 0, 0, 9, 3, 1, 23, 25, 0.19861572535991143, ["mov     cs:iread_fnc, rax", "mov     eax, ecx", "and     eax, 0FFFFFFFEh", "mov     cs:input_flags, eax", "mov     eax, ebx", "and     eax, 7", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_4D89"], ["mov~<TAG>,rax", "mov~eax,ecx", "and~eax,0", "mov~<TAG>,eax", "mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 212, 0, 0, 3, 0, 1, 23, 26, 0.002347729789590255, ["mov     cs:warn_partial_read, 0", "lea     rax, iread_fullblock", "jmp     loc_4A69"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [2, 0, 289, 2, 0, 10, 0, 1, 18, 45, 5.5370985603543746e-05, ["mov     rax, cs:page_size", "add     rax, 2", "add     rax, rax", "neg     rax", "mov     rdi, 7FFFFFFFFFFFFFFFh", "cmp     rax, rdi", "cmova   rax, rdi", "mov     rdi, [rsp+118h+var_118]", "mov     [rsp+118h+var_F8], rdi", "jmp     loc_45A8"], ["mov~rax,<TAG>", "add~rax,0", "add~rax,rax", "neg~rax", "mov~rdi,0", "cmp~rax,rdi", "cmova~rax,rdi", "mov~rdi,<TAG>", "mov~[rsp+0],rdi", "jmp~FOO"]], [0, 0, 150, 0, 0, 3, 1, 1, 40, 8, 0.23655961609449985, ["mov     rdx, cs:seek_records; records", "test    rdx, rdx", "jnz     short loc_5098"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [1, 0, 156, 0, 0, 2, 0, 1, 39, 9, 0.22811000369139908, ["cmp     cs:skip_bytes, 0", "jz      loc_507E"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 22, 0, 0, 2, 1, 1, 54, 8, 0.00048726467331118497, ["or      cs:conversions_mask, 8000h", "jmp     loc_5A10"], ["or~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 48, -1, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 47, 1, 0.006489479512735327, ["call    finish_up", "mov     eax, dword ptr [rsp+118h+exit_status]", "mov     rbx, [rsp+118h+var_40]", "xor     rbx, fs:28h", "jnz     loc_5EC0"], ["call~FOO", "mov~eax,[word ptr [rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 197, 0, 1, 3, 0, 1, 32, 19, 0.002912513842746401, ["call    ___ctype_tolower_loc", "lea     rdx, trans_table", "lea     rdi, [rdx+100h]"], ["call~FOO", "lea~rdx,<TAG>", "lea~rdi,[rdx+0]"]], [0, 0, 132, 0, 0, 2, 0, 0, 58, 16, 0.004473975636766335, ["cmp     rbx, rbp", "jb      loc_5542"], ["cmp~rbx,rbp", "jb~FOO"]], [0, 0, 132, 1, 0, 2, 0, 1, 57, 17, 0.01513842746400886, ["sub     rbp, rax", "js      loc_5542"], ["sub~rbp,rax", "js~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 41, 7, 0.21687707641196013, ["cmp     cs:seek_bytes, 0", "jz      loc_5213"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 0, 1, 55, 17, 0.01725359911406423, ["cmp     cs:input_blocksize, rbp", "jz      short loc_58A3"], ["cmp~<TAG>,rbp", "jz~FOO"]], [0, 1, 210, 0, 0, 5, 2, 1, 24, 24, 0.1612539682539686, ["mov     eax, ebx", "and     eax, 18h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_4DB6"], ["mov~eax,ebx", "and~eax,<STR>", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 13, 43, 0.007763012181616833, ["lea     rsi, aOflag; \"oflag\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jnz     loc_4525"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 18, 44, 0.014385382059800665, ["lea     rsi, aCbs; \"cbs\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      short loc_46C2"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 51, 0, 1, 4, 0, 2, 49, 13, 0.00011074197120708749, ["mov     esi, 1; nread", "lea     rdi, saved_char; buf", "call    copy_with_unblock", "jmp     loc_59C9"], ["mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 54, 0, 0, 2, 1, 1, 48, 12, 0.008361018826135106, ["test    al, 10h", "jnz     loc_5A8C"], ["test~al,0", "jnz~FOO"]], [1, 0, 132, 1, 0, 2, 0, 1, 56, 16, 0.006794019933554818, ["add     cs:w_partial, 1", "jmp     loc_55E1"], ["add~<TAG>,0", "jmp~FOO"]], [3, 0, 197, 0, 1, 8, 2, 2, 39, 12, 0.00871077888519749, ["or      ebx, 1", "mov     edx, ebx; flag", "mov     ecx, 1B6h; mode", "mov     rsi, cs:output_file; file", "mov     edi, 1; desired_fd", "call    ifd_reopen", "test    eax, eax", "js      loc_50E0"], ["or~ebx,0", "mov~edx,ebx", "mov~ecx,0", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 197, 0, 0, 1, 0, 1, 39, 13, 6.18309339239572e-05, ["jmp     loc_4C84"], ["jmp~FOO"]], [0, 0, 49, 0, 0, 8, 0, 0, 50, 14, 0.005459579180509413, ["mov     rdx, cs:oc", "lea     rax, [rdx+1]", "mov     cs:oc, rax", "mov     rcx, cs:obuf", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     [rcx+rdx], sil", "cmp     rax, cs:output_blocksize", "jb      short loc_5AA2"], ["mov~rdx,<TAG>", "lea~rax,[rdx+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "movzx~esi,<TAG>", "mov~<TAG>,sil", "cmp~rax,<TAG>", "jb~FOO"]], [0, 0, 49, 0, 1, 2, 0, 2, 51, 14, 0.0, ["call    write_output", "jmp     short loc_5AA2"], ["call~FOO", "jmp~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 43, 7, 0.00301218161683278, ["jmp     loc_5213"], ["jmp~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 48, 7, 0.0045182724252491695, ["jmp     short loc_5213"], ["jmp~FOO"]], [0, 0, 197, 0, 0, 3, 1, 1, 34, 14, 0.2384828349944629, ["mov     rsi, cs:input_file; file", "test    rsi, rsi", "jz      loc_4EF5"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [2, 0, 197, 0, 1, 5, 0, 2, 33, 15, 0.11672757475083056, ["lea     rdi, ascii_to_ebcdic; new_trans", "call    translate_charset", "mov     byte ptr cs:newline_character, 25h ; '%'; \"\\n\"", "mov     byte ptr cs:space_character, 40h ; '@'; \" \"", "jmp     loc_4BB4"], ["lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 197, 0, 1, 5, 0, 2, 34, 15, 0.0, ["lea     rdi, ascii_to_ibm; new_trans", "call    translate_charset", "mov     byte ptr cs:newline_character, 25h ; '%'; \"\\n\"", "mov     byte ptr cs:space_character, 40h ; '@'; \" \"", "jmp     loc_4BB4"], ["lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 197, 0, 0, 2, 1, 1, 33, 15, 0.11818936877076412, ["test    bl, 4", "jnz     loc_4ED6"], ["test~bl,0", "jnz~FOO"]], [3, 0, 197, 0, 1, 7, 2, 1, 38, 12, 0.01653377630121816, ["mov     edx, ebx", "or      edx, 2; flag", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "call    ifd_reopen", "test    eax, eax", "jns     loc_4CA7"], ["mov~edx,ebx", "or~edx,0", "mov~ecx,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 197, 1, 0, 7, 0, 1, 33, 18, 0.003610188261351052, ["movzx   esi, byte ptr [rdx]", "mov     rcx, [rax]", "mov     ecx, [rcx+rsi*4]", "mov     [rdx], cl", "add     rdx, 1", "cmp     rdi, rdx", "jnz     short loc_4E97"], ["movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~ecx,<TAG>", "mov~<TAG>,cl", "add~rdx,0", "cmp~rdi,rdx", "jnz~FOO"]], [1, 0, 132, 1, 0, 2, 0, 1, 56, 16, 0.006794019933554818, ["add     cs:w_full, 1", "jmp     loc_55E1"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 289, 0, 0, 4, 1, 1, 19, 43, 0.01362126245847176, ["mov     rax, [rsp+118h+var_118]", "mov     cs:conversion_blocksize, rax", "test    rax, rax", "jz      loc_45B3"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 14, 43, 0.007021040974529347, ["lea     rsi, aStatus; \"status\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      loc_454B"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 239, 0, 0, 3, 1, 1, 13, 35, 0.15615725359911406, ["mov     ecx, cs:input_flags", "test    cl, 10h", "jnz     loc_48DB"], ["mov~ecx,<TAG>", "test~cl,0", "jnz~FOO"]], [1, 0, 241, 0, 0, 3, 1, 1, 12, 36, 0.1547951273532669, ["mov     esi, cs:output_flags", "test    sil, 1", "jnz     loc_488B"], ["mov~esi,<TAG>", "test~sil,0", "jnz~FOO"]], [1, 0, 197, 0, 0, 2, 0, 1, 34, 17, 0.004307862679955704, ["mov     cs:translation_needed, 1", "jmp     loc_4BA2"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 132, 0, 1, 7, 1, 1, 59, 15, 0.01070874861572536, ["mov     ecx, 1; whence", "mov     rdx, rbp; offset", "mov     esi, 0; fdesc", "mov     rdi, cs:input_file; filename", "call    skip_via_lseek", "test    rax, rax", "jns     loc_576F"], ["mov~ecx,0", "mov~rdx,rbp", "mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jns~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 58, 16, 0.007021040974529347, ["cmp     cs:status_level, 1", "jz      loc_5497"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 132, 0, 2, 10, 0, 3, 59, 16, 0.0, ["mov     edx, 5; category", "lea     rsi, aWarningInvalid; \"warning: invalid file offset after fail\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     loc_5497"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 289, 0, 0, 3, 0, 1, 22, 43, 0.0031672203765227024, ["mov     rax, [rsp+118h+var_118]", "mov     [rsp+118h+var_100], rax", "jmp     short loc_46B2"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 289, 0, 0, 2, 0, 0, 18, 43, 0.023543743078626802, ["cmp     [rsp+118h+var_118], rax", "jbe     loc_46B2"], ["cmp~<TAG>,rax", "jbe~FOO"]], [0, 0, 289, 0, 0, 3, 0, 1, 21, 43, 0.0031450719822812847, ["mov     rax, [rsp+118h+var_118]", "mov     [rsp+118h+exit_status], rax", "jmp     loc_46B2"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 132, 0, 1, 4, 0, 2, 50, 12, 0.07837209302325582, ["mov     rdi, rbx; offset", "call    advance_input_offset", "cmp     cs:i_nocache, 0", "jnz     short loc_538D"], ["mov~rdi,rbx", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 218, 0, 0, 2, 1, 1, 22, 27, 0.005116279069767442, ["test    cl, 1", "jnz     loc_5EAD"], ["test~cl,0", "jnz~FOO"]], [0, 0, 289, 0, 0, 1, 0, 1, 20, 48, 0.0011960132890365448, ["jmp     loc_45BB"], ["jmp~FOO"]], [1, 0, 197, 0, 0, 2, 1, 1, 40, 11, 0.01249261720191953, ["test    byte ptr cs:conversions_mask+1, 2", "jnz     loc_4FA3"], ["test~<TAG>,0", "jnz~FOO"]], [0, 0, 197, 0, 0, 3, 1, 1, 39, 11, 0.02175433739387228, ["mov     rbx, cs:seek_records", "test    rbx, rbx", "jz      loc_4FA3"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [7, 0, 3, 0, 3, 18, 0, 4, 48, 2, 0.0, ["mov     rdx, cs:output_file; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aFailedToDiscar; \"failed to discard cache for: %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_585B"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 48, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 132, 0, 0, 3, 0, 1, 60, 17, 0.002679955703211517, ["mov     rax, [rsp+118h+var_110]", "cmp     dword ptr [rax], 0", "jnz     loc_570B"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 132, 0, 1, 9, 2, 2, 54, 17, 0.028687707641196016, ["mov     rdi, rbx; offset", "call    advance_input_offset", "mov     rbp, cs:input_offset", "mov     rax, rbp", "shr     rax, 3Fh", "or      al, cs:input_offset_overflow", "mov     cs:input_offset_overflow, al", "test    al, al", "jnz     loc_54F9"], ["mov~rdi,rbx", "call~FOO", "mov~rbp,<TAG>", "mov~rax,rbp", "shr~rax,0", "or~al,<TAG>", "mov~<TAG>,al", "test~al,al", "jnz~FOO"]], [1, 0, 148, 0, 1, 10, 1, 2, 41, 9, 0.018287190845330384, ["mov     rax, cs:seek_bytes", "mov     [rsp+118h+bytes], rax", "lea     r8, [rsp+118h+bytes]; bytes", "mov     rcx, cs:output_blocksize; blocksize", "mov     rsi, cs:output_file; file", "mov     edi, 1; fdesc", "call    skip", "mov     rbx, rax", "test    rax, rax", "jnz     loc_519F"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "lea~r8,[rsp+0]", "mov~rcx,<TAG>", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jnz~FOO"]], [1, 0, 132, 1, 1, 4, 0, 2, 46, 15, 0.0, ["mov     rdi, rax; progress_time", "call    print_xfer_stats", "add     cs:next_time, 3B9ACA00h", "jmp     loc_55EE"], ["mov~rdi,rax", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [0, 0, 132, 0, 1, 3, 0, 2, 45, 15, 0.0025470653377630123, ["call    gethrxtime", "cmp     rax, cs:next_time", "jl      loc_55EE"], ["call~FOO", "cmp~rax,<TAG>", "jl~FOO"]], [1, 0, 289, 0, 0, 2, 0, 1, 19, 48, 0.00017718715393134, ["mov     dword ptr [rsp+118h+bytes], 1", "jmp     loc_45BB"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 289, 0, 0, 1, 0, 0, 18, 48, 0.0012070874861572537, ["mov     dword ptr [rsp+118h+bytes], 4"], ["mov~[word ptr [rsp+0],0"]], [1, 0, 197, 0, 0, 2, 1, 1, 32, 16, 0.23569213732004432, ["test    bl, 2", "jnz     loc_4EB7"], ["test~bl,0", "jnz~FOO"]], [1, 0, 132, 1, 0, 6, 0, 1, 57, 20, 0.003975636766334441, ["movzx   edx, byte ptr [rax]", "movzx   edx, byte ptr [r15+rdx]", "mov     [rax], dl", "add     rax, 1", "cmp     rax, rcx", "jnz     short loc_58C1"], ["movzx~edx,<TAG>", "movzx~edx,<TAG>", "mov~<TAG>,dl", "add~rax,0", "cmp~rax,rcx", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 0, 0, 56, 21, 0.005083056478405316, ["lea     rcx, [r13+rbp+0]", "mov     rax, r13"], ["lea~rcx,[r13+0]", "mov~rax,r13"]], [8, 0, 293, 2, 7, 37, 0, 7, 4, 44, 0.025957918050941307, ["mov     rdi, [argv]; argv0", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, package; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, package; \"coreutils\"", "call    _textdomain", "lea     rdi, maybe_close_stdout", "call    atexit", "call    _getpagesize", "cdqe", "mov     cs:page_size, rax", "sub     rsp, 8", "push    0", "lea     rax, aStuartKemp; \"Stuart Kemp\"", "push    rax", "lea     rax, aDavidMackenzie; \"David MacKenzie\"", "push    rax", "lea     rax, aPaulRubin; \"Paul Rubin\"", "push    rax", "lea     rax, usage", "push    rax; usage_func", "mov     r9d, 1; scan_all", "mov     r8, cs:Version; version", "lea     rcx, package; \"coreutils\"", "lea     rdx, command_name; \"dd\"", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "mov     eax, 0", "call    parse_gnu_standard_options_only", "mov     cs:close_stdout_required, 0", "add     rsp, 30h", "mov     eax, 0", "lea     rdx, trans_table"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "call~FOO", "cdqe~", "mov~<TAG>,rax", "sub~rsp,0", "push~0", "lea~rax,<TAG>", "push~rax", "lea~rax,<TAG>", "push~rax", "lea~rax,<TAG>", "push~rax", "lea~rax,<TAG>", "push~rax", "mov~r9d,0", "mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,argv", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~eax,0", "lea~rdx,<TAG>"]], [3, 0, 294, 0, 1, 8, 0, 2, 4, 45, 0.0, ["lea     rax, interrupt_handler", "mov     [rsp+118h+stdout_stat.st_dev], rax", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0C0000000h", "lea     rsi, [rsp+118h+stdout_stat]; act", "mov     edx, 0; oact", "mov     edi, 2; sig", "call    _sigaction", "jmp     loc_4224"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~[word ptr [rsp+0],0", "lea~rsi,[rsp+0]", "mov~edx,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 45, 3, 0.021811738648947903, ["cmp     cs:i_nocache, 0", "jnz     short loc_5DEE"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 146, 0, 0, 3, 1, 1, 42, 8, 0.009958471760797344, ["mov     rdx, [rsp+118h+bytes]", "test    rdx, rdx", "jnz     loc_51A6"], ["mov~rdx,[rsp+0]", "test~rdx,rdx", "jnz~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 56, 21, 0.017596899224806204, ["cmp     cs:char_is_saved, 0", "jz      short loc_58FC"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 0, 52, 14, 0.004584717607973422, ["mov     ebx, dword ptr [rsp+118h+var_100]", "or      ebx, eax", "setnz   cs:o_nocache_eof"], ["mov~ebx,[word ptr [rsp+0]", "or~ebx,eax", "setnz~<TAG>"]], [1, 0, 60, 0, 0, 5, 1, 1, 51, 15, 0.008438538205980067, ["movzx   eax, cs:i_nocache", "or      cs:i_nocache_eof, al", "movzx   eax, cs:o_nocache_eof", "cmp     cs:o_nocache, 0", "jz      short loc_53CA"], ["movzx~eax,<TAG>", "or~<TAG>,al", "movzx~eax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 59, 0, 0, 4, 1, 0, 52, 15, 0.0, ["test    byte ptr cs:conversions_mask+1, 2", "setz    bl", "movzx   ebx, bl", "mov     dword ptr [rsp+118h+var_100], ebx"], ["test~<TAG>,0", "setz~bl", "movzx~ebx,bl", "mov~[word ptr [rsp+0],ebx"]], [0, 0, 132, 0, 1, 2, 0, 2, 59, 17, 0.0, ["call    write_output", "jmp     short loc_5956"], ["call~FOO", "jmp~FOO"]], [0, 0, 132, 5, 1, 17, 0, 2, 58, 17, 0.005083056478405316, ["mov     r14, cs:output_blocksize", "mov     r12, cs:oc", "mov     rbx, r14", "sub     rbx, r12", "cmp     rbx, rbp", "cmova   rbx, rbp", "mov     rdi, r12", "add     rdi, cs:obuf; dest", "mov     rdx, rbx; n", "mov     rsi, r13; src", "call    _memcpy", "sub     rbp, rbx", "add     r13, rbx", "add     rbx, r12", "mov     cs:oc, rbx", "cmp     r14, rbx", "ja      short loc_5956"], ["mov~r14,<TAG>", "mov~r12,<TAG>", "mov~rbx,r14", "sub~rbx,r12", "cmp~rbx,rbp", "cmova~rbx,rbp", "mov~rdi,r12", "add~rdi,<TAG>", "mov~rdx,rbx", "mov~rsi,r13", "call~FOO", "sub~rbp,rbx", "add~r13,rbx", "add~rbx,r12", "mov~<TAG>,rbx", "cmp~r14,rbx", "ja~FOO"]], [1, 0, 301, 1, 2, 19, 2, 3, 0, 48, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0E8h", "mov     ebp, edi", "mov     rbx, argv", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "lea     argc, name; \"POSIXLY_CORRECT\"", "call    _getenv", "mov     r12, rax", "lea     rdi, caught_signals; set", "call    _sigemptyset", "test    r12, r12", "jz      loc_434F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,edi", "mov~rbx,argv", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~argc,<TAG>", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "test~r12,r12", "jz~FOO"]], [2, 0, 197, 0, 1, 8, 1, 2, 43, 12, 0.009302325581395349, ["mov     rax, [rsp+118h+var_110]", "mov     ebx, [rax]", "lea     rdx, [rsp+118h+stdout_stat]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_5159"], ["mov~rax,[rsp+0]", "mov~ebx,<TAG>", "lea~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 197, 0, 1, 5, 1, 2, 42, 11, 0.011882613510520487, ["mov     rsi, size; length", "mov     edi, 1; fd", "call    iftruncate", "test    eax, eax", "jz      loc_4FA3"], ["mov~rsi,size", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 205, 0, 0, 2, 1, 1, 29, 21, 0.00806201550387597, ["test    cl, 2", "jz      short loc_4B23"], ["test~cl,0", "jz~FOO"]], [2, 0, 293, 1, 0, 4, 0, 1, 5, 43, 0.029102990033222594, ["mov     [rdx+i], al", "add     rax, 1", "cmp     rax, 100h", "jnz     short loc_42DD"], ["mov~<TAG>,al", "add~rax,0", "cmp~rax,0", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 48, 11, 0.053039867109634556, ["cmp     cs:col, 0", "jz      loc_59E6"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 50, 0, 0, 2, 1, 1, 47, 12, 0.10966777408637875, ["test    byte ptr cs:conversions_mask, 8", "jz      loc_5AE3"], ["test~<TAG>,0", "jz~FOO"]], [0, 0, 222, 0, 0, 3, 1, 1, 20, 28, 0.17824473975636768, ["mov     rax, [rsp+118h+exit_status]", "test    rax, rax", "jz      short loc_49DB"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 225, 0, 0, 2, 1, 1, 19, 29, 0.17691029900332228, ["test    sil, 10h", "jz      short loc_49CA"], ["test~sil,0", "jz~FOO"]], [2, 0, 197, 3, 0, 9, 0, 1, 41, 12, 0.011551310446659286, ["mov     r12, cs:output_blocksize", "mov     rbp, rbx", "imul    rbp, r12", "add     rbp, cs:seek_bytes", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     edx, 0", "div     obs", "cmp     rbx, rax", "ja      loc_5126"], ["mov~r12,<TAG>", "mov~rbp,rbx", "imul~rbp,r12", "add~rbp,<TAG>", "mov~rax,0", "mov~edx,0", "div~,obs", "cmp~rbx,rax", "ja~FOO"]], [2, 0, 132, 1, 2, 8, 0, 3, 53, 16, 0.04726467331118494, ["call    print_stats", "mov     rbx, cs:input_blocksize", "sub     rbx, [rsp+118h+var_118]", "mov     rsi, rbx; len", "mov     edi, 0; fd", "call    invalidate_cache", "cmp     cs:input_seekable, 0", "jnz     loc_5435"], ["call~FOO", "mov~rbx,<TAG>", "sub~rbx,<TAG>", "mov~rsi,rbx", "mov~edi,0", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 55, 4, 0.006209302325581389, ["cmp     cs:i_nocache_eof, 0", "jz      short loc_583A"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 132, 1, 0, 5, 0, 0, 57, 21, 0.0, ["movzx   eax, cs:saved_char", "mov     [r13-1], al", "add     rbp, 1", "mov     cs:char_is_saved, 0", "lea     r13, [r13-1]"], ["movzx~eax,<TAG>", "mov~[r13-1]+0],al", "add~rbp,0", "mov~<TAG>,0", "lea~r13,[r13-1]+0]"]], [0, 0, 132, 0, 0, 1, 0, 1, 58, 19, 0.002868217054263566, ["jmp     loc_55B2"], ["jmp~FOO"]], [6, 0, 23, 0, 3, 17, 0, 4, 54, 9, 0.0, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aFdatasyncFaile; \"fdatasync failed for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     short loc_5CF2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 204, 0, 0, 4, 0, 1, 30, 22, 0.0020376522702104096, ["mov     cs:i_nocache, 1", "mov     eax, dword ptr [rsp+118h+var_100]", "cmp     cs:max_records, 0", "jnz     short loc_4B0D"], ["mov~<TAG>,0", "mov~eax,[word ptr [rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 21, 44, 0.0010077519379844962, ["lea     rsi, aCount; \"count\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jz      short loc_470E"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 289, 0, 1, 5, 1, 2, 20, 44, 0.001982281284606866, ["lea     rsi, aSeek; \"seek\"", "mov     rdi, rbp; operand", "call    operand_is", "test    al, al", "jnz     loc_5E6B"], ["lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 132, 0, 0, 3, 0, 1, 54, 15, 0.01491140642303433, ["mov     eax, cs:input_seek_errno", "cmp     eax, 1Dh", "jz      short loc_576F"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 300, 0, 1, 4, 0, 2, 1, 48, 0.0, ["mov     esi, 0Ah; signo", "lea     rdi, caught_signals; set", "call    _sigaddset", "jmp     loc_40EA"], ["mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [6, 0, 0, 0, 4, 16, 0, 4, 13, -1, 0.0, ["lea     rdi, aFullblock; \"fullblock\"", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aInvalidOutputF; \"invalid output flag\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 6, 0, 1, 3, 0, 1, 55, 4, 0.006209302325581389, ["mov     esi, 0; len", "mov     edi, 0; fd", "call    invalidate_cache"], ["mov~esi,0", "mov~edi,0", "call~FOO"]], [0, 0, 132, 0, 0, 2, 0, 0, 55, 17, 0.0012347729789590255, ["mov     rbx, [rsp+118h+var_110]", "mov     [rbx], eax"], ["mov~rbx,[rsp+0]", "mov~<TAG>,eax"]], [1, 0, 203, 0, 0, 3, 0, 0, 31, 22, 0.0, ["cmp     cs:max_bytes, 0", "setz    al", "movzx   eax, al"], ["cmp~<TAG>,0", "setz~al", "movzx~eax,al"]], [5, 0, 159, 0, 4, 16, 0, 4, 36, 12, 0.07135289774824659, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aFailedToOpenS; \"failed to open %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 132, 0, 0, 2, 1, 1, 57, 17, 0.010121816168327797, ["test    sil, 10h", "jz      loc_595F"], ["test~sil,0", "jz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 53, 14, 0.0019269102990033223, ["mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_53D7"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [5, 0, 197, 0, 3, 15, 0, 3, 45, 25, 0.007065337763012182, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     obs, rax", "mov     edx, 5; category", "lea     rsi, aFailedToTrunca; \"failed to truncate to %lu bytes in outp\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, size", "mov     rdx, rax; fmt", "mov     esi, ebx; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~obs,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,size", "mov~rdx,rax", "mov~esi,ebx", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 1, 197, 1, 0, 5, 2, 1, 44, 11, 0.009756367663344407, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "sub     eax, 4000h", "test    eax, 0FFFFBFFFh", "jnz     loc_4FA3"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "sub~eax,0", "test~eax,0", "jnz~FOO"]], [2, 0, 202, 0, 0, 4, 2, 0, 31, 21, 0.004473975636766335, ["mov     cs:i_nocache_eof, al", "and     cs:i_nocache_eof, 1", "and     ecx, 0FFFFFFFCh", "mov     cs:input_flags, ecx"], ["mov~<TAG>,al", "and~<TAG>,0", "and~ecx,0", "mov~<TAG>,ecx"]], [1, 0, 132, 0, 0, 3, 0, 1, 58, 19, 0.013167220376522702, ["mov     rax, rbp", "shr     rax, 1", "jz      short loc_593D"], ["mov~rax,rbp", "shr~rax,0", "jz~FOO"]], [5, 0, 148, 0, 3, 15, 0, 3, 40, 14, 0.0033397932816537474, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aFailedToOpenS; \"failed to open %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 1, 246, 0, 0, 2, 0, 1, 10, 39, 0.0, ["mov     cs:output_blocksize, 200h", "jmp     loc_4786"], ["mov~<TAG>,<STR>", "jmp~FOO"]], [6, 0, 0, 0, 4, 16, 0, 4, 14, -1, 0.0, ["lea     rdi, aSeekBytes; \"seek_bytes\"", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aInvalidInputFl; \"invalid input flag\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 132, 1, 0, 4, 0, 0, 59, 20, 0.0025470653377630123, ["mov     rdx, rax", "neg     rdx", "lea     rdx, [rbp+rdx*2+0]", "add     rdx, r13"], ["mov~rdx,rax", "neg~rdx", "lea~rdx,[rbp+0]", "add~rdx,r13"]], [5, 0, 197, 0, 2, 9, 0, 2, 24, 24, 0.04650904392764863, ["mov     edx, 5; category", "lea     rsi, aCannotCombineA; \"cannot combine any two of {ascii,ebcdic\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 132, 0, 0, 4, 0, 0, 51, 11, 0.08972314507198229, ["mov     rbp, rbx", "mov     r12, cs:input_blocksize", "cmp     rbx, r12", "jnb     loc_5581"], ["mov~rbp,rbx", "mov~r12,<TAG>", "cmp~rbx,r12", "jnb~FOO"]], [1, 0, 132, 0, 1, 4, 0, 2, 51, 12, 0.0, ["mov     rsi, rbx; len", "mov     edi, 0; fd", "call    invalidate_cache", "jmp     short loc_5325"], ["mov~rsi,rbx", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 57, 12, 0.012115171650055372, ["mov     ebx, 0", "jmp     loc_5325"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 46, 13, 0.12544850498338872, ["cmp     cs:char_is_saved, 0", "jz      loc_59C9"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 51, 0, 1, 3, 0, 1, 48, 13, 0.00011074197120708749, ["mov     esi, 1; nread", "lea     rdi, saved_char; buf", "call    copy_with_block"], ["mov~esi,0", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 41, 0, 1, 2, 0, 2, 51, 11, 0.0, ["call    write_output", "jmp     loc_59E6"], ["call~FOO", "jmp~FOO"]], [1, 0, 132, 1, 0, 4, 0, 1, 60, 19, 0.0014396456256921375, ["movzx   ecx, byte ptr [rdx+rax*2-2]", "mov     [rdx+rax*2], cl", "sub     rax, 1", "jnz     short loc_592F"], ["movzx~ecx,[yte ptr [rdx+0]", "mov~<TAG>,cl", "sub~rax,0", "jnz~FOO"]], [2, 0, 200, 0, 0, 4, 0, 1, 31, 21, 0.00212624584717608, ["mov     cs:o_nocache, 1", "mov     eax, dword ptr [rsp+118h+var_100]", "cmp     cs:max_records, 0", "jnz     short loc_4B4C"], ["mov~<TAG>,0", "mov~eax,[word ptr [rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [6, 0, 132, 0, 3, 15, 0, 4, 55, 16, 0.003073089700996678, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aOffsetOverflow; \"offset overflow while reading file %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     loc_5756"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 132, 0, 2, 10, 0, 3, 61, 17, 0.0, ["mov     edx, 5; category", "lea     rsi, aCannotWorkArou; \"cannot work around kernel bug after all\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "jmp     loc_570B"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 199, 0, 0, 3, 0, 0, 32, 21, 0.0, ["cmp     cs:max_bytes, 0", "setz    al", "movzx   eax, al"], ["cmp~<TAG>,0", "setz~al", "movzx~eax,al"]], [6, 0, 0, 0, 4, 15, 0, 4, 22, -1, 0.0, ["mov     rdi, rbp; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aUnrecognizedOp; \"unrecognized operand %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rdi,rbp", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [6, 0, 132, 0, 3, 16, 0, 3, 56, 16, 0.004396456256921373, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aSCannot_0; \"%s: cannot \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [5, 0, 147, 0, 2, 11, 0, 2, 41, 13, 0.0038501291989664088, ["mov     edx, 5; category", "lea     rsi, aOffsetTooLarge; \"offset too large: cannot truncate to a \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, obs", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,obs", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 38, 1, 0, 1, 0, 0, 51, 9, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [1, 0, 39, 1, 1, 6, 1, 2, 50, 9, 0.021993355481727577, ["mov     rsi, cs:obuf; buf", "mov     edi, 1; fd", "call    iwrite", "add     cs:w_bytes, rax", "test    rax, rax", "jz      short loc_5B5E"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "add~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 289, 0, 0, 2, 0, 1, 17, 44, 0.022270210409745295, ["cmp     [rsp+118h+var_118], 0", "jnz     loc_4753"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 59, 16, 0.002868217054263566, ["test    rbp, rbp", "jz      loc_55E1"], ["test~rbp,rbp", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 55, 4, 0.008578073089701014, ["jmp     short loc_5D69"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 1, 1, 0, 11, 38, 0.0, ["and     cs:conversions_mask, 0FFFFFFE7h"], ["and~<TAG>,0"]], [1, 0, 245, 0, 0, 2, 0, 1, 10, 38, 0.14651162790697675, ["cmp     cs:conversion_blocksize, 0", "jnz     short loc_4797"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 55, 19, 0.007607973421926911, ["test    rbp, rbp", "jz      loc_55B2"], ["test~rbp,rbp", "jz~FOO"]], [3, 0, 132, 0, 0, 3, 0, 0, 56, 15, 0.007812846068660022, ["mov     cs:input_seekable, 0", "mov     cs:input_seek_errno, 1Dh", "mov     dword ptr [rsp+118h+exit_status], 1"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[word ptr [rsp+0],0"]], [0, 1, 132, 1, 0, 4, 1, 1, 54, 11, 0.005083056478405316, ["mov     rdx, r12", "sub     rdx, rbx; n", "and     esi, 18h", "jz      short loc_5372"], ["mov~rdx,r12", "sub~rdx,rbx", "and~esi,<STR>", "jz~FOO"]], [0, 1, 132, 0, 0, 1, 0, 0, 55, 11, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [0, 0, 9, 0, 0, 2, 0, 0, 44, 4, 0.016146179401993355, ["mov     eax, dword ptr [rsp+118h+var_100]", "mov     dword ptr [rsp+118h+exit_status], eax"], ["mov~eax,[word ptr [rsp+0]", "mov~[word ptr [rsp+0],eax"]], [1, 0, 132, 0, 0, 2, 0, 1, 44, 15, 0.279468438538206, ["cmp     cs:status_level, 4", "jz      loc_52A6"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 132, 0, 0, 2, 1, 1, 55, 14, 0.029545957918050942, ["test    byte ptr cs:conversions_mask+1, 4", "jz      loc_55E1"], ["test~<TAG>,0", "jz~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 56, 13, 0.01407530454042082, ["cmp     [rsp+118h+var_118], 0", "jnz     loc_55E1"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 132, 0, 1, 4, 0, 2, 57, 16, 0.019601328903654486, ["mov     rsi, rbp; nread", "mov     rdi, r13; buf", "call    copy_with_block", "jmp     loc_55E1"], ["mov~rsi,rbp", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 132, 0, 1, 3, 0, 1, 58, 16, 0.0014064230343300112, ["mov     rsi, rbp; nread", "mov     rdi, r13; buf", "call    copy_with_unblock"], ["mov~rsi,rbp", "mov~rdi,r13", "call~FOO"]], [0, 0, 246, 0, 0, 2, 0, 0, 13, 39, 0.10079734219269104, ["mov     cs:output_blocksize, rax", "mov     cs:input_blocksize, rax"], ["mov~<TAG>,rax", "mov~<TAG>,rax"]], [0, 0, 197, 0, 1, 3, 0, 1, 31, 19, 0.002912513842746401, ["call    ___ctype_toupper_loc", "lea     rdx, trans_table", "lea     rdi, [rdx+100h]"], ["call~FOO", "lea~rdx,<TAG>", "lea~rdi,[rdx+0]"]], [7, 0, 0, 0, 4, 19, 1, 4, 15, -1, 0.0, ["and     esi, 4", "lea     rdi, aCountBytes; \"count_bytes\"", "lea     rax, aSkipBytes; \"skip_bytes\"", "cmovz   rdi, rax; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aInvalidOutputF; \"invalid output flag\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, format; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["and~esi,0", "lea~rdi,<TAG>", "lea~rax,<TAG>", "cmovz~rdi,rax", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 237, 0, 0, 2, 1, 1, 14, 34, 0.15747508305647842, ["test    sil, 0Ch", "jnz     loc_492B"], ["test~sil,0", "jnz~FOO"]], [0, 0, 132, 1, 1, 6, 0, 2, 55, 10, 0.002868217054263566, ["mov     rdi, rbp", "add     rdi, cs:ibuf; s", "call    _memset", "mov     [rsp+118h+var_118], rbp", "mov     rbp, r12", "jmp     loc_5591"], ["mov~rdi,rbp", "add~rdi,<TAG>", "call~FOO", "mov~<TAG>,rbp", "mov~rbp,r12", "jmp~FOO"]], [2, 0, 132, 1, 0, 2, 0, 0, 52, 10, 0.03669988925802879, ["add     cs:r_full, 1", "mov     [rsp+118h+var_118], 0"], ["add~<TAG>,0", "mov~<TAG>,0"]], [0, 0, 132, 0, 0, 3, 0, 1, 54, 10, 0.0014064230343300112, ["mov     [rsp+118h+var_118], rbx", "mov     rbp, r12", "jmp     loc_5591"], ["mov~<TAG>,rbx", "mov~rbp,r12", "jmp~FOO"]], [1, 0, 197, 1, 0, 7, 0, 1, 32, 18, 0.003610188261351052, ["movzx   esi, byte ptr [rdx]", "mov     rcx, [rax]", "mov     ecx, [rcx+rsi*4]", "mov     [rdx], cl", "add     rdx, 1", "cmp     rdx, rdi", "jnz     short loc_4B87"], ["movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~ecx,<TAG>", "mov~<TAG>,cl", "add~rdx,0", "cmp~rdx,rdi", "jnz~FOO"]], [5, 0, 146, 0, 3, 15, 0, 3, 42, 12, 0.004215577703949797, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     ftruncate_errno, rax", "mov     edx, 5; category", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~ftruncate_errno,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 197, 0, 0, 1, 0, 0, 33, 17, 0.004307862679955704, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [3, 0, 158, 0, 2, 9, 0, 2, 37, 11, 0.2169656699889258, ["mov     edx, 5; category", "lea     rsi, aStandardOutput; \"standard output\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     cs:output_file, rax", "mov     rdx, rax; name", "mov     esi, cs:output_flags; add_flags", "mov     edi, 1; fd", "call    set_fd_flags"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "call~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 42, 11, 0.012533222591362128, ["mov     rdx, cs:output_blocksize; n"], ["mov~rdx,<TAG>"]], [1, 0, 289, 1, 0, 9, 0, 0, 16, 45, 0.00504983388704319, ["mov     rcx, cs:page_size", "lea     rax, [rcx+2]", "add     rax, rax", "neg     rax", "mov     rcx, 7FFFFFFFFFFFFFFFh", "cmp     rax, rcx", "cmova   rax, rcx", "mov     rdi, [rsp+118h+var_118]", "mov     cs:input_blocksize, rdi"], ["mov~rcx,<TAG>", "lea~rax,[rcx+0]", "add~rax,rax", "neg~rax", "mov~rcx,0", "cmp~rax,rcx", "cmova~rax,rcx", "mov~rdi,<TAG>", "mov~<TAG>,rdi"]], [1, 0, 243, 0, 0, 3, 1, 1, 11, 37, 0.15069767441860465, ["mov     eax, cs:input_flags", "test    eax, 101000h", "jz      short loc_47AF"], ["mov~eax,<TAG>", "test~eax,0", "jz~FOO"]], [1, 0, 231, 1, 0, 5, 0, 1, 17, 32, 0.0012790697674418606, ["mov     edx, 0", "div     cs:input_blocksize", "mov     cs:skip_records, rax", "mov     cs:skip_bytes, rdx", "jmp     loc_47FC"], ["mov~edx,0", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 234, 0, 0, 3, 1, 1, 16, 33, 0.0006866002214839424, ["mov     rax, [rsp+118h+var_110]", "test    rax, rax", "jnz     loc_4989"], ["mov~rax,[rsp+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 242, 0, 0, 2, 1, 0, 12, 37, 0.0, ["or      eax, 101000h", "mov     cs:input_flags, eax"], ["or~eax,0", "mov~<TAG>,eax"]], [1, 0, 132, 0, 0, 2, 0, 1, 54, 19, 0.04889258028792913, ["cmp     cs:translation_needed, 0", "jnz     loc_58B0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 144, 0, 1, 3, 0, 1, 43, 10, 0.01940199335548173, ["mov     esi, 0; c", "mov     rdi, cs:obuf; s", "call    _memset"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO"]], [1, 0, 144, 1, 0, 2, 0, 1, 46, 9, 0.004950166112956811, ["sub     rbx, 1", "jnz     short loc_51B7"], ["sub~rbx,0", "jnz~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 47, 8, 0.004728682170542636, ["cmp     [rsp+118h+bytes], 0", "jnz     short loc_51B7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 56, 0, 0, 3, 1, 1, 47, 13, 0.013122923588039868, ["mov     eax, cs:conversions_mask", "test    al, 8", "jnz     loc_59B8"], ["mov~eax,<TAG>", "test~al,0", "jnz~FOO"]], [1, 0, 157, 1, 1, 7, 1, 2, 38, 10, 0.2354743447766704, ["call    gethrxtime", "mov     cs:start_time, rax", "add     rax, 3B9ACA00h", "mov     cs:next_time, rax", "mov     rbx, cs:skip_records", "test    rbx, rbx", "jnz     short loc_4FD6"], ["call~FOO", "mov~<TAG>,rax", "add~rax,0", "mov~<TAG>,rax", "mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [6, 0, 0, 0, 5, 18, 0, 5, 46, -1, 0.0, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aWritingToS; \"writing to %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_110]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    nl_error", "call    finish_up", "mov     edi, 1; status", "call    _exit"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 144, 0, 1, 7, 0, 2, 45, 10, 0.005952380952380953, ["mov     rbp, cs:output_blocksize", "mov     rdx, rbp; size", "mov     rsi, cs:obuf; buf", "mov     edi, 1; fd", "call    iwrite", "cmp     rbp, rax", "jnz     short loc_5251"], ["mov~rbp,<TAG>", "mov~rdx,rbp", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "cmp~rbp,rax", "jnz~FOO"]], [0, 0, 221, 0, 0, 1, 0, 0, 21, 28, 0.0, ["mov     cs:seek_records, rax"], ["mov~<TAG>,rax"]], [1, 0, 235, 0, 0, 2, 1, 1, 15, 33, 0.15874861572535992, ["test    cl, 8", "jz      short loc_47EB"], ["test~cl,0", "jz~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 49, 10, 0.08854928017718716, ["mov     rdx, cs:oc; size", "test    rdx, rdx", "jnz     loc_5B39"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 232, 0, 0, 3, 1, 1, 16, 32, 0.16058139534883722, ["mov     rax, [rsp+118h+var_110]", "test    rax, rax", "jz      short loc_47FC"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 231, 0, 0, 1, 0, 0, 17, 32, 0.0, ["mov     cs:skip_records, rax"], ["mov~<TAG>,rax"]]], "func_feature": [187, 137, 410, 5, 302, 467, 0, 1583, 0.0373, 132, 51], "succs": [[18], [0, 147], [34, 35], [2, 4], [2], [295, 7], [296, 5], [43], [69], [8, 70], [8], [24, 25], [24, 11], [57, 63], [13, 63], [210, 156], [299, 15], [15], [38, 39], [18, 20], [18, 68], [18], [18], [18], [135], [24, 56], [73, 74], [26, 77], [30, 119], [28, 45], [44], [98, 79], [284, 31], [31], [195, 196], [34], [], [36, 29], [216, 226], [259, 38], [138, 55], [40, 128], [266, 87], [42, 87], [105, 37], [44], [44], [44], [44], [44], [180, 44], [73, 76], [73, 51], [264, 278], [67, 53], [128, 138], [135], [213], [211], [58, 299], [72, 71], [244, 60], [213], [213, 62], [282, 118], [64], [64, 229], [1, 289], [20, 21], [88], [89, 69], [91, 100], [71], [19, 108], [73, 52], [73, 27], [23], [23], [37], [257], [104], [80, 78], [111], [82, 212], [231, 215], [84, 86], [84, 215], [267], [124], [88, 90], [88, 208], [99], [142], [92, 94], [92, 142], [75, 22], [115], [96, 115], [137, 150], [178, 109], [99], [130, 124], [248, 101], [101], [106, 123], [104, 272], [123], [219, 140], [19, 107], [201, 85], [135], [179, 110], [50], [112, 222], [142, 183], [114, 142], [235], [235, 116], [164, 133], [134, 47], [270, 230], [120], [120, 199], [237, 261], [130], [299, 246], [299, 125], [138], [138, 127], [192, 143], [129, 273], [145, 268], [131, 253], [154], [48, 149], [240, 148], [135], [257], [146, 187], [41, 138], [19], [], [184, 141], [165], [172, 173], [144, 173], [43, 187], [153, 166], [9, 10], [168, 49], [113, 167], [211], [59, 151], [267], [236, 182], [154], [17, 157], [17], [43], [43], [65, 66], [160], [160], [160, 162], [155, 182], [171, 165], [267], [50, 191], [32, 46], [275, 238], [169, 225], [192], [185, 268], [172, 174], [172], [50], [50, 190], [50], [241, 242], [136, 12], [33], [294, 214], [181, 294], [142], [], [250, 253], [249, 132], [283, 198], [61], [188, 61], [33], [33], [161, 163], [193, 218], [193], [209], [195], [97, 115], [290, 158], [217, 117], [244], [200, 202], [200], [258], [258, 203], [224, 3], [280, 233], [294, 206], [220, 102], [209, 81], [299, 126], [16, 210], [297, 111], [83, 212], [254, 207], [186, 223], [226, 93], [117], [122], [140], [234, 228], [252, 175], [177, 221], [227, 268], [3], [], [93], [253], [234], [282], [204, 271], [244], [240], [232, 294], [102], [121, 239], [254], [261], [], [247], [10], [277, 54], [241], [241], [211, 293], [211], [299], [121, 247], [251, 103], [263], [253], [103], [], [263], [280], [95], [95, 255], [176, 191], [267, 204], [197], [285], [260, 285], [194, 122], [268], [265, 276], [276], [197], [189, 61], [267, 269], [267, 243], [267], [267], [261], [279], [], [274, 298], [67], [67], [67], [281, 279], [283], [192], [294], [290], [257], [288, 170], [14], [300, 286], [170], [122, 262], [6], [292, 6], [6, 159], [152, 245], [41, 139], [], [291, 295], [111], [300, 287], [256, 75], [301, 14], [14]], "fname": "main", "n_num": 302}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 1, 6, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "setnz   al", "movzx   eax, al", "neg     eax", "jmp     short loc_5F1A"], ["call~FOO", "cmp~<TAG>,0", "setnz~al", "movzx~eax,al", "neg~eax", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.047619047619047616, ["mov     eax, 0FFFFFFFFh", "test    r12, r12", "jnz     short loc_5F1A"], ["mov~eax,0", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 0.07142857142857142, ["test    eax, eax", "jz      short loc_5F1A"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, stream", "call    ___fpending", "mov     r12, rax", "mov     ebx, [stream+0]", "and     ebx, 20h", "mov     rdi, stream; fp", "call    rpl_fclose", "test    ebx, ebx", "jnz     short loc_5F06"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,stream", "call~FOO", "mov~r12,rax", "mov~ebx,[stream+0]", "and~ebx,<STR>", "mov~rdi,stream", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_5F1F"], ["test~eax,eax", "jnz~FOO"]], [2, 0, 1, 0, 1, 3, 0, 1, 2, -1, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_5F1A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 10, 0, 8, 11, 3, 34, 0.02381, 0, 0], "succs": [[7], [0, 7], [1, 7], [2, 4], [5, 6], [7], [7], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 1, 0, 3, 10, 0, 3, 0, 0, 0.027777777777777776, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, write_error", "mov     rcx, rbp", "lea     rdx, format; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,write_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, -1, 0.125, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name; arg", "test    rdi, rdi", "jz      short loc_5FD5"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 9, 1, 1, 7, 1, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_5F5F"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 1, 0.08333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_5FF7"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 7, 0, 1, 3, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_5F7A"], ["call~FOO", "cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.06944444444444445, ["cmp     cs:ignore_EPIPE, 0", "jz      short loc_5F7A"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [2, 0, 1, 0, 2, 8, 0, 3, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     rcx, write_error", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_5FCA"], ["call~FOO", "mov~rcx,write_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [11, 3, 17, 0, 10, 12, 1, 50, 0.0375, 8, 2], "succs": [[7], [0, 8], [4, 6], [], [9, 3], [1, 4], [1, 5], [], [7], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 3, 11, 0, 3, 0, 0, 0.0, ["mov     esi, ebp; fd2", "mov     edi, eax; fd", "call    _dup2", "mov     r12d, eax", "call    ___errno_location", "mov     desired_fd, rax", "mov     r13d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r13d", "mov     ebx, r12d"], ["mov~esi,ebp", "mov~edi,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~desired_fd,rax", "mov~r13d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~[rbp+0],r13d", "mov~ebx,r12d"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    eax, eax", "js      short loc_604E"], ["test~eax,eax", "js~FOO"]], [2, 0, 3, 1, 1, 14, 0, 2, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebp, edi", "mov     desired_fd, file; file", "mov     esi, edx; oflag", "mov     edx, ecx", "mov     eax, 0", "call    _open", "mov     ebx, eax", "cmp     ebp, eax", "jz      short loc_604E"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,edi", "mov~desired_fd,file", "mov~esi,edx", "mov~edx,ecx", "mov~eax,0", "call~FOO", "mov~ebx,eax", "cmp~ebp,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~eax,ebx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 1, 6, 0, 4, 5, 1, 34, 0.04167, 0, 2], "succs": [[3], [0, 3], [1, 3], []], "fname": "fd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[5, 0, 3, 7, 0, 14, 0, 0, 0, 0, 0.07500000000000001, ["mov     rcx, [rsp+28h+ts.tv_nsec]", "mov     rdx, 112E0BE826D694B3h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 1Ah", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "add     rax, [rsp+28h+ts.tv_sec]", "imul    rax, 3B9ACA00h", "imul    rdx, 3B9ACA00h", "sub     rcx, rdx", "add     rax, rcx"], ["mov~rcx,[rsp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "add~rax,<TAG>", "imul~rax,,0", "imul~rdx,,0", "sub~rcx,rdx", "add~rax,rcx"]], [2, 0, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     rsi, rsp; tp", "mov     edi, 1; clock_id", "call    _clock_gettime", "test    eax, eax", "jnz     short loc_60D3"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rsi,rsp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.30000000000000004, ["mov     rdi, [rsp+28h+var_10]", "xor     rdi, fs:28h", "jnz     short loc_611B"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [5, 0, 3, 7, 1, 17, 0, 2, 1, 2, 0.07500000000000001, ["mov     rdi, rsp; ts", "call    gettime", "mov     rcx, [rsp+28h+ts.tv_nsec]", "mov     rdx, 112E0BE826D694B3h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 1Ah", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "add     rax, [rsp+28h+ts.tv_sec]", "imul    rax, 3B9ACA00h", "imul    rdx, 3B9ACA00h", "sub     rcx, rdx", "add     rax, rcx", "jmp     short loc_60BE"], ["mov~rdi,rsp", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "add~rax,<TAG>", "imul~rax,,0", "imul~rdx,,0", "sub~rcx,rdx", "add~rax,rcx", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 3, 6, 1, 6, 6, 3, 46, 0.075, 1, 16], "succs": [[2], [0, 3], [4, 5], [2], [], []], "fname": "gethrxtime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, ts; tp", "mov     edi, 0; clock_id", "call    _clock_gettime", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,ts", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 0, 2], "succs": [[]], "fname": "gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 1, 1, 11, 2, 2, 0, 0, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     rdi, rsp; ts", "call    gettime", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_6170"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdi,rsp", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 2, 3, 1, 3, 2, 0, 14, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 7, 0, 0, 3, 1, 1, 0, 0, 0.25, ["mov     eax, 0", "test    edi, edi", "jnz     short loc_61E5"], ["mov~eax,0", "test~edi,edi", "jnz~FOO"]], [2, 0, 8, 0, 0, 13, 2, 1, 3, 4, 0.08333333333333334, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fsub    cs:flt_F030", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rdx, [rsp+var_18]", "mov     rax, 8000000000000000h", "xor     rdx, rax", "jmp     short loc_61BA"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fsub~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rdx,[rsp+0]", "mov~rax,0", "xor~rdx,rax", "jmp~FOO"]], [1, 0, 8, 0, 0, 9, 1, 0, 3, 4, 0.08333333333333334, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rdx, [rsp+var_18]"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rdx,[rsp+0]"]], [1, 0, 3, 0, 0, 7, 0, 1, 6, 2, 0.045454545454545456, ["fucomip st, st(1)", "fstp    st", "setp    al", "movzx   eax, al", "mov     ecx, 1", "cmovnz  eax, ecx", "jmp     short loc_61E7"], ["fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "movzx~eax,al", "mov~ecx,0", "cmovnz~eax,ecx", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.0, ["fadd    cs:flt_F034", "jmp     short loc_61D1"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, 3, 0.09090909090909091, ["mov     [rsp+var_20], u", "fild    [rsp+var_20]", "test    u, u", "js      short loc_6235"], ["mov~[rsp+0],u", "fild~<TAG>,[rsp+0]", "test~u,u", "js~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.12121212121212122, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 11, 0, 0, 3, 0, 0, 1, 6, 0.07575757575757576, ["fld     cs:tbyte_F010", "fucomip st, st(1)", "jbe     short locret_61FA"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 0, 7, 0.0, ["fld     [rsp+value.value]", "cmp     edi, 1", "jz      short locret_61FA"], ["fld~<TAG>,[rsp+0]", "cmp~edi,0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 7, 0, 0.0, ["fadd    cs:flt_F034", "jmp     short locret_61FA"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 2, 1, 0, 6, 1, 1, 6, 1, 0.13636363636363635, ["cdqe", "add     rax, u", "mov     [rsp+var_20], rax", "fild    [rsp+var_20]", "test    rax, rax", "js      short loc_623D"], ["cdqe~", "add~rax,u", "mov~[rsp+0],rax", "fild~<TAG>,[rsp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 10, 0, 0, 5, 0, 0, 2, 5, 0.13636363636363635, ["fld     cs:flt_F030", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jnb     short loc_61FC"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 4, 13, 18, 3, 59, 0.07867, 3, 1], "succs": [[5, 6], [0], [0], [10], [3], [3, 4], [10], [11, 12], [12, 7], [12], [9, 12], [1, 2], []], "fname": "adjust_value", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     psuffix_0, [rsi+2]", "mov     byte ptr [rsi+1], 69h ; 'i'", "jmp     loc_66B8"], ["lea~psuffix_0,[rsi+0]", "mov~[yte ptr [rsi+0],0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 18, 3, 0.00983756577442233, ["cmp     [rsp+0C8h+var_88], 0", "jnz     loc_69F8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 47, 2, 1, 12, 0, 2, 15, 10, 0.03225806451612903, ["mov     rax, [rsp+0C8h+buf]", "lea     rbx, [rax+286h]", "add     ecx, 30h ; '0'", "mov     [rax+286h], cl", "sub     p_0, decimal_pointlen", "mov     rdx, decimal_pointlen; n", "mov     rounding, decimal_point; src", "mov     rdi, p_0; dest", "call    _memcpy", "mov     esi, 0", "mov     ecx, 0", "jmp     short loc_6839"], ["mov~rax,[rsp+0]", "lea~rbx,[rax+0]", "add~ecx,0", "mov~[rax+0],cl", "sub~p_0,decimal_pointlen", "mov~rdx,decimal_pointlen", "mov~rounding,decimal_point", "mov~rdi,p_0", "call~FOO", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 50, 0, 0, 2, 1, 1, 14, 11, 0.03197208876687257, ["test    ecx, ecx", "jnz     short loc_67D2"], ["test~ecx,ecx", "jnz~FOO"]], [1, 0, 49, 0, 0, 3, 1, 1, 15, 11, 0.0029741477922672157, ["mov     ecx, [rsp+0C8h+opts]", "and     ecx, 8", "jnz     loc_68AE"], ["mov~ecx,[rsp+0]", "and~ecx,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.0013726835964310226, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_66C4"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 8, 0, 0, 5, 1, 1, 16, 3, 0.03980782429649966, ["mov     rsi, [rsp+0C8h+psuffix]", "lea     rdx, [rsi+1]", "mov     [rsi], cl", "test    eax, eax", "jz      loc_6A05"], ["mov~rsi,[rsp+0]", "lea~rdx,[rsi+0]", "mov~<TAG>,cl", "test~eax,eax", "jz~FOO"]], [2, 0, 55, 1, 0, 6, 1, 1, 12, 13, 0.01138183482040723, ["mov     eax, ecx", "and     eax, 1", "add     eax, esi", "cmp     eax, 2", "setnle  al", "jmp     short loc_67B0"], ["mov~eax,ecx", "and~eax,0", "add~eax,esi", "cmp~eax,0", "setnle~al", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 11, 14, 0.02059025394646534, ["cmp     [rsp+0C8h+exponent], 1", "jz      short loc_6804"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 14, 3, 0.019560741249142075, ["mov     rdx, [rsp+0C8h+psuffix]", "test    eax, eax", "jnz     loc_66B8"], ["mov~rdx,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 13, 4, 0.1013498055364905, ["test    r15d, r15d", "jz      loc_6A0F"], ["test~r15d,r15d", "jz~FOO"]], [0, 0, 32, 3, 1, 8, 0, 1, 7, 4, 0.08053077099062, ["mov     decimal_point, [rsp+0C8h+psuffix]", "sub     r13, buflen", "mov     rdx, buflen; n", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdi, p_0; dest", "call    _memmove", "sub     buflen, nonintegerlen", "add     rbx, p_0"], ["mov~decimal_point,[rsp+0]", "sub~r13,buflen", "mov~rdx,buflen", "mov~rsi,[rsp+0]", "mov~rdi,p_0", "call~FOO", "sub~buflen,nonintegerlen", "add~rbx,p_0"]], [1, 0, 35, 0, 0, 2, 1, 1, 10, 5, 0.013383665065202471, ["test    byte ptr [rsp+0C8h+opts], 8", "jz      loc_65FF"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 5, 0.00011439029970258523, ["cmp     byte ptr [rdx+buflen-1], 30h ; '0'", "jnz     loc_65FF"], ["cmp~[yte ptr [rdx+0],0", "jnz~FOO"]], [7, 0, 33, 1, 2, 27, 0, 3, 10, 5, 0.011324639670555938, ["fld     [rsp+0C8h+damt.value]", "fld     cs:tbyte_F020", "fmulp   st(1), st", "lea     rsp, [rsp-10h]", "fstp    [rsp+0D8h+value.value]; value", "mov     edi, [rsp+0D8h+exponent]; inexact_style", "call    adjust_value", "fld     cs:tbyte_F020", "fdivp   st(1), st", "fstp    [rsp+0D8h+value.value]", "lea     rcx, a0lf; \"%.0Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     buflen, [rsp+0D8h+buf]", "mov     rdi, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, rbx", "repne scasb", "mov     rbx, rcx", "not     rbx", "lea     rbx, [rbx-1]", "add     rsp, 10h", "mov     r14d, 0", "jmp     loc_65FF"], ["fld~<TAG>,[rsp+0]", "fld~<TAG>,<TAG>", "fmulp~<TAG>,<TAG>", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,[rsp+0]", "call~FOO", "fld~<TAG>,<TAG>", "fdivp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~buflen,[rsp+0]", "mov~rdi,rbx", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rbx,rcx", "not~rbx", "lea~rbx,[rbx-1]+0]", "add~rsp,0", "mov~r14d,0", "jmp~FOO"]], [7, 0, 33, 1, 2, 22, 0, 2, 6, 5, 0.04529855868222375, ["lea     rsp, [rsp-10h]", "fstp    [rsp+0D8h+value.value]; value", "mov     edi, [rsp+0D8h+exponent]; inexact_style", "call    adjust_value", "fstp    [rsp+0D8h+value.value]", "lea     rcx, a0lf; \"%.0Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     from_block_size, [rsp+0D8h+buf]", "mov     rdi, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     to_block_size_0, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rcx, r15", "mov     rdi, rbx", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rbx, [rax+r15]", "add     rsp, 10h", "mov     r14d, 0"], ["lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,[rsp+0]", "call~FOO", "fstp~<TAG>,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~from_block_size,[rsp+0]", "mov~rdi,rbx", "mov~eax,0", "call~FOO", "mov~to_block_size_0,0", "mov~eax,0", "mov~rcx,r15", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rbx,<TAG>", "add~rsp,0", "mov~r14d,0"]], [2, 0, 51, 1, 0, 3, 0, 0, 15, 11, 0.005433539235872798, ["add     r12, 1", "cmp     amt, 9", "jbe     short loc_67C5"], ["add~r12,0", "cmp~amt,0", "jbe~FOO"]], [3, 0, 53, 1, 0, 4, 0, 1, 14, 12, 0.00503317318691375, ["add     ecx, 1", "mov     esi, 0", "cmp     ecx, 0Ah", "jz      short loc_6813"], ["add~ecx,0", "mov~esi,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 15, 2, 0.0006863417982155113, ["jmp     loc_66C4"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 10, 1, 0.02104781514527568, ["mov     rax, [rsp+0C8h+psuffix]", "mov     byte ptr [rax], 0", "mov     rax, p_0", "mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "jnz     loc_6A21"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~rax,p_0", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 8, 3, 0.22340425531914895, ["test    byte ptr [rsp+0C8h+opts], 4", "jnz     loc_690E"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 32, 0, 0, 1, 0, 1, 10, 4, 0.1262868908716541, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 12, 4, 0.012811713566689545, ["lea     decimal_point, [integerlim-1]", "mov     byte ptr [integerlim-1], 31h ; '1'", "jmp     do_grouping"], ["lea~decimal_point,[integerlim-1]+0]", "mov~[yte ptr [integerlim-1]+0],0", "jmp~FOO"]], [2, 0, 47, 0, 0, 4, 0, 1, 16, 10, 0.008064516129032258, ["mov     rbx, [rsp+0C8h+psuffix]", "mov     esi, 0", "mov     ecx, 0", "jmp     short loc_6839"], ["mov~rbx,[rsp+0]", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 9, 2, 0.1921757035003432, ["test    byte ptr [rsp+0C8h+opts], 80h", "jz      loc_66C4"], ["test~[yte ptr [rsp+0],<STR>", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 1, 12, 3, 0.014298787462823153, ["mov     r15d, [rsp+0C8h+exponent]", "jmp     loc_6628"], ["mov~r15d,[rsp+0]", "jmp~FOO"]], [1, 0, 47, 0, 0, 2, 0, 0, 6, 10, 0.005376344086021506, ["mov     rbx, [rsp+0C8h+psuffix]", "mov     r15d, 0"], ["mov~rbx,[rsp+0]", "mov~r15d,0"]], [0, 0, 66, 0, 0, 4, 0, 1, 5, 11, 0.021734156943491192, ["mov     r8d, [rsp+0C8h+base]", "mov     edi, r8d", "cmp     rdi, amt", "ja      loc_682E"], ["mov~r8d,[rsp+0]", "mov~edi,r8d", "cmp~rdi,amt", "ja~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 10, 3, 0.162434225577671, ["test    r15d, r15d", "js      loc_69B5"], ["test~r15d,r15d", "js~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 5, 9, 0.13955616563715398, ["cmp     [rsp+0C8h+exponent], 1", "jz      short loc_68BD"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 67, 0, 0, 5, 1, 1, 4, 10, 0.05067490276824525, ["mov     from_block_size, [rsp+0C8h+psuffix]", "mov     r15d, 0FFFFFFFFh", "mov     ebp, [rsp+0C8h+opts]", "and     ebp, 10h", "jz      loc_6839"], ["mov~from_block_size,[rsp+0]", "mov~r15d,0", "mov~ebp,[rsp+0]", "and~ebp,0", "jz~FOO"]], [1, 0, 58, 0, 0, 3, 0, 1, 10, 10, 0.05364905056051247, ["mov     rbx, [rsp+0C8h+psuffix]", "cmp     r12, 9", "ja      loc_6839"], ["mov~rbx,[rsp+0]", "cmp~r12,0", "ja~FOO"]], [1, 0, 47, 0, 0, 3, 0, 1, 16, 10, 0.002688172043010753, ["mov     rbx, [rsp+0C8h+psuffix]", "mov     ecx, 0", "jmp     loc_6839"], ["mov~rbx,[rsp+0]", "mov~ecx,0", "jmp~FOO"]], [2, 0, 44, 0, 0, 3, 0, 1, 6, 9, 0.007092198581560284, ["mov     eax, 0", "cmp     [rsp+0C8h+exponent], 0", "jnz     short loc_6856"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 17, 0, 0, 6, 2, 1, 11, 2, 0.12537176847403342, ["mov     esi, [rsp+0C8h+opts]", "mov     eax, esi", "and     eax, 100h", "mov     ebx, eax", "or      ebx, r15d", "jz      short loc_66C4"], ["mov~esi,[rsp+0]", "mov~eax,esi", "and~eax,0", "mov~ebx,eax", "or~ebx,r15d", "jz~FOO"]], [0, 0, 21, 1, 0, 3, 0, 0, 12, 3, 0.018760009151223975, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_663C"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 14, 3, 0.001029512697323267, ["jmp     loc_663C"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 12, 3, 0.001029512697323267, ["mov     r15d, 0", "jmp     loc_663C"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 1, 1, 12, 5, 0.11599176389842142, ["test    sil, 40h", "jz      short loc_666C"], ["test~sil,0", "jz~FOO"]], [0, 0, 43, 1, 0, 4, 1, 0, 7, 9, 0.0, ["add     ecx, esi", "test    ecx, ecx", "setnle  al", "movzx   eax, al"], ["add~ecx,esi", "test~ecx,ecx", "setnle~al", "movzx~eax,al"]], [1, 0, 42, 0, 0, 1, 1, 0, 7, 8, 0.009608785175017159, ["and     eax, 1"], ["and~eax,0"]], [0, 0, 41, 0, 0, 2, 1, 1, 7, 7, 0.14584763212079616, ["test    al, al", "jz      short loc_6874"], ["test~al,al", "jz~FOO"]], [2, 0, 42, 2, 0, 10, 1, 1, 6, 8, 0.13063372226035233, ["mov     rax, amt", "and     eax, 1", "movsxd  rounding, esi", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     ecx, eax", "cmp     ecx, 5", "setnle  al", "jmp     short loc_6859"], ["mov~rax,amt", "and~eax,0", "movsxd~rounding,esi", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~ecx,eax", "cmp~ecx,0", "setnle~al", "jmp~FOO"]], [1, 0, 40, 1, 0, 3, 1, 1, 8, 7, 0.02059025394646534, ["add     amt, 1", "test    ebp, ebp", "jz      short loc_6874"], ["add~amt,0", "test~ebp,ebp", "jz~FOO"]], [0, 1, 15, 0, 0, 4, 0, 0, 13, 5, 0.0, ["mov     rbx, [rsp+0C8h+buf]", "lea     rsi, [rbx+288h]", "mov     [rsp+0C8h+psuffix], rsi", "mov     byte ptr [rbx+287h], 20h ; ' '"], ["mov~rbx,[rsp+0]", "lea~rsi,[rbx+0]", "mov~[rsp+0],rsi", "mov~[yte ptr [rbx+0],<STR>"]], [0, 0, 39, 0, 0, 3, 0, 1, 9, 7, 0.016929764355982615, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jnz     short loc_6874"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 10, 6, 0.01487073896133608, ["cmp     r15d, 7", "jle     short loc_68D9"], ["cmp~r15d,0", "jle~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 8, 6, 0.12788835506749027, ["mov     decimal_point, integerlim", "mov     rcx, 0CCCCCCCCCCCCCCCDh"], ["mov~decimal_point,integerlim", "mov~rcx,0"]], [8, 0, 36, 2, 2, 32, 0, 2, 9, 6, 0.02470830473575841, ["fdivp   st(1), st", "fld     st", "fstp    [rsp+0C8h+damt.value]", "lea     rsp, [rsp-10h]", "fstp    [rsp+0D8h+value.value]; value", "mov     edi, [rsp+0D8h+exponent]; inexact_style", "call    adjust_value", "fstp    [rsp+0D8h+value.value]", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     from_block_size, [rsp+0D8h+buf]", "mov     rdi, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdx, rbx", "mov     [rsp+0D8h+buf], rbx", "mov     rdi, rbx", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbx, [rsi-1]", "add     decimal_pointlen, 1", "add     rsp, 10h", "cmp     [rsp+0C8h+var_88], 0", "setz    al", "movzx   eax, al", "lea     rax, [nonintegerlen+rax+1]", "cmp     rax, buflen", "jb      short loc_648A"], ["fdivp~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,[rsp+0]", "call~FOO", "fstp~<TAG>,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~from_block_size,[rsp+0]", "mov~rdi,rbx", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdx,rbx", "mov~[rsp+0],rbx", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbx,[rsi-1]+0]", "add~decimal_pointlen,0", "add~rsp,0", "cmp~[rsp+0],0", "setz~al", "movzx~eax,al", "lea~rax,[nonintegerlen+0]", "cmp~rax,buflen", "jb~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 14, 5, 0.06485929993136583, ["cmp     [rsp+0C8h+var_88], 0", "jnz     short loc_6687"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 10, 0, 0, 3, 0, 1, 15, 4, 0.02367879203843514, ["mov     ecx, 6Bh ; 'k'", "cmp     r15d, 1", "jz      short loc_6695"], ["mov~ecx,0", "cmp~r15d,0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 15, 4, 0.02367879203843514, ["movsxd  rdx, r15d", "lea     rcx, power_letter", "movzx   ecx, byte ptr [rcx+rdx]"], ["movsxd~rdx,r15d", "lea~rcx,<TAG>", "movzx~ecx,<TAG>"]], [3, 0, 34, 5, 0, 12, 1, 1, 9, 5, 0.12720201326927477, ["sub     p_0, 1", "mov     rax, amt", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     r12d, 30h ; '0'", "mov     [p_0+0], r12b", "mov     r12, rdx", "test    amt, amt", "jnz     short loc_6881"], ["sub~p_0,0", "mov~rax,amt", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~r12d,0", "mov~[p_0+0],r12b", "mov~r12,rdx", "test~amt,amt", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 17, 3, 0.01990391214824983, ["test    r15d, r15d", "jz      short loc_66B8"], ["test~r15d,r15d", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 9, 7, 0.004232441088995654, ["fstp    st", "jmp     short loc_63F3"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 8, 7, 0.013955616563715398, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 3, 0, 0, 3, 0, 0, 15, 2, 0.0017158544955387784, ["lea     rax, [psuffix_0+1]", "mov     [rsp+0C8h+psuffix], rax", "mov     byte ptr [rdx], 42h ; 'B'"], ["lea~rax,[psuffix_0+0]", "mov~[rsp+0],rax", "mov~<TAG>,0"]], [2, 0, 34, 1, 0, 3, 1, 1, 11, 5, 0.014413177762525738, ["add     r15d, 1", "test    byte ptr [rsp+0C8h+opts], 8", "jz      short loc_68F1"], ["add~r15d,0", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 33, 1, 1, 9, 0, 2, 12, 5, 0.0, ["mov     byte ptr [rbx-1], 30h ; '0'", "mov     rax, decimal_pointlen", "not     rax", "add     rbx, rax", "mov     rdx, decimal_pointlen; n", "mov     rsi, decimal_point; src", "mov     rdi, p_0; dest", "call    _memcpy", "jmp     short loc_68E4"], ["mov~[yte ptr [rbx-1]+0],0", "mov~rax,decimal_pointlen", "not~rax", "add~rbx,rax", "mov~rdx,decimal_pointlen", "mov~rsi,decimal_point", "mov~rdi,p_0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 68, 0, 0, 2, 0, 0, 3, 11, 0.012354152367879205, ["mov     esi, 0", "mov     ecx, 0"], ["mov~esi,0", "mov~ecx,0"]], [2, 0, 87, 3, 0, 11, 0, 1, 2, 10, 0.008464882177991307, ["mov     rax, from_block_size", "mov     edx, 0", "div     to_block_size_0", "mov     rcx, rax", "mov     buf_0, n", "imul    r12, multiplier", "mov     multiplier, amt", "mov     edx, 0", "div     multiplier", "cmp     rax, n", "jz      loc_66F8"], ["mov~rax,from_block_size", "mov~edx,0", "div~,to_block_size_0", "mov~rcx,rax", "mov~buf_0,n", "imul~r12,multiplier", "mov~multiplier,amt", "mov~edx,0", "div~,multiplier", "cmp~rax,n", "jz~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 1, 10, 0.0033173186913749717, ["test    from_block_size, from_block_size", "jz      loc_6376"], ["test~from_block_size,from_block_size", "jz~FOO"]], [14, 1, 94, 4, 1, 63, 4, 2, 0, 11, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rbp, n", "mov     r12, buf_0", "mov     [rsp+0C8h+buf], buf_0", "mov     eax, edx", "mov     [rsp+0C8h+opts], edx", "mov     rbx, from_block_size", "mov     r15, to_block_size_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "mov     buf_0, fs:28h", "mov     [rsp+0C8h+var_40], buf_0", "xor     esi, esi", "mov     edi, edx", "and     edi, 3", "mov     [rsp+0C8h+exponent], edi", "and     eax, 20h", "mov     [rsp+0C8h+var_88], eax", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     rdx, rax", "mov     r13, [l]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, r13", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "lea     r14, [rsi-1]", "sub     rcx, 2", "cmp     rcx, 10h", "mov     eax, 1", "cmovnb  pointlen, rax", "lea     rax, asc_EFA9; \".\"", "cmovnb  r13, rax", "mov     rax, [l+10h]", "mov     [rsp+0C8h+grouping], rax", "mov     rdi, [l+8]", "mov     l, rdi", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     rax, 11h", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "cmovb   rax, rdx", "mov     [rsp+0C8h+thousands_sep], rax", "lea     thousands_sep_0, [buf_0+287h]", "mov     [rsp+0C8h+psuffix], rax", "cmp     to_block_size_0, from_block_size", "ja      loc_6501"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,n", "mov~r12,buf_0", "mov~[rsp+0],buf_0", "mov~eax,edx", "mov~[rsp+0],edx", "mov~rbx,from_block_size", "mov~r15,to_block_size_0", "mov~[rsp+0],to_block_size_0", "mov~buf_0,<TAG>", "mov~[rsp+0],buf_0", "xor~esi,esi", "mov~edi,edx", "and~edi,0", "mov~[rsp+0],edi", "and~eax,<STR>", "mov~[rsp+0],eax", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~rdx,rax", "mov~r13,<TAG>", "mov~rcx,0", "mov~eax,0", "mov~rdi,r13", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "lea~r14,[rsi-1]+0]", "sub~rcx,0", "cmp~rcx,0", "mov~eax,0", "cmovnb~pointlen,rax", "lea~rax,<TAG>", "cmovnb~r13,rax", "mov~rax,[l+0]", "mov~[rsp+0],rax", "mov~rdi,[l+0]", "mov~l,rdi", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~rax,0", "lea~rax,<TAG>", "cmovb~rax,rdx", "mov~[rsp+0],rax", "lea~thousands_sep_0,[buf_0+0]", "mov~[rsp+0],rax", "cmp~to_block_size_0,from_block_size", "ja~FOO"]], [0, 0, 68, 0, 0, 4, 1, 1, 4, 11, 0.008007320979180966, ["test    r2, r2", "setnz   sil", "movzx   esi, sil", "jmp     use_integer_arithmetic"], ["test~r2,r2", "setnz~sil", "movzx~esi,sil", "jmp~FOO"]], [1, 0, 68, 1, 0, 5, 0, 1, 4, 11, 0.008007320979180966, ["cmp     divisor, r2", "setb    sil", "movzx   esi, sil", "add     esi, 2", "jmp     use_integer_arithmetic"], ["cmp~divisor,r2", "setb~sil", "movzx~esi,sil", "add~esi,0", "jmp~FOO"]], [1, 0, 89, 1, 0, 5, 1, 1, 2, 10, 0.004804392587508579, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "mov     edx, 0", "div     from_block_size", "test    rdx, rdx", "jnz     loc_6376"], ["mov~psuffix_0,[rsp+0]", "mov~edx,0", "div~,from_block_size", "test~rdx,rdx", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 6, 14, 0.02139098604438344, ["mov     r15d, 0", "jmp     short loc_6752"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 64, 2, 0, 5, 0, 0, 8, 12, 0.015843056508808052, ["add     esi, edx", "cmp     esi, r8d", "setnbe  sil", "movzx   esi, sil", "add     esi, 2"], ["add~esi,edx", "cmp~esi,r8d", "setnbe~sil", "movzx~esi,sil", "add~esi,0"]], [3, 0, 64, 2, 0, 15, 0, 0, 7, 13, 0.028140013726835965, ["mov     rax, amt", "mov     edx, 0", "div     rdi", "mov     r9, rax", "lea     eax, [rdx+rdx*4]", "lea     eax, [tenths+rax*2]", "mov     edx, 0", "div     r8d", "mov     ecx, esi", "sar     ecx, 1", "lea     edx, [rcx+rdx*2]", "mov     amt, r9", "mov     ecx, eax", "cmp     r8d, edx", "jbe     short loc_6733"], ["mov~rax,amt", "mov~edx,0", "div~,rdi", "mov~r9,rax", "lea~eax,<TAG>", "lea~eax,<TAG>", "mov~edx,0", "div~,r8d", "mov~ecx,esi", "sar~ecx,0", "lea~edx,<TAG>", "mov~amt,r9", "mov~ecx,eax", "cmp~r8d,edx", "jbe~FOO"]], [2, 0, 64, 1, 0, 3, 0, 1, 9, 11, 0.04426904598490048, ["add     r15d, 1", "cmp     r15d, 7", "jg      short loc_678B"], ["add~r15d,0", "cmp~r15d,0", "jg~FOO"]], [0, 0, 64, 1, 0, 4, 0, 1, 8, 12, 0.015843056508808052, ["add     esi, edx", "setnz   sil", "movzx   esi, sil", "jmp     short loc_6743"], ["add~esi,edx", "setnz~sil", "movzx~esi,sil", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 10, 11, 0.0008007320979180966, ["cmp     rdi, amt", "ja      short loc_678B"], ["cmp~rdi,amt", "ja~FOO"]], [3, 0, 70, 5, 0, 17, 0, 0, 3, 12, 0.008922443376801648, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     edx, 0", "div     from_block_size", "mov     rsi, rax", "mov     divisor, n", "mov     edx, 0", "div     divisor", "mov     n, rax", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "mov     edx, 0", "div     divisor", "add     rdx, rdx", "mov     buf_0, rbp", "mov     ecx, eax", "cmp     divisor, r2", "jbe     short loc_656A"], ["mov~rax,[rsp+0]", "mov~edx,0", "div~,from_block_size", "mov~rsi,rax", "mov~divisor,n", "mov~edx,0", "div~,divisor", "mov~n,rax", "lea~rax,<TAG>", "add~rax,rax", "mov~edx,0", "div~,divisor", "add~rdx,rdx", "mov~buf_0,rbp", "mov~ecx,eax", "cmp~divisor,r2", "jbe~FOO"]], [3, 0, 30, 1, 1, 21, 0, 2, 9, 6, 0.036604895904827274, ["mov     r12, integerlim", "sub     r12, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rcx, rbp", "mov     rdi, [rsp+0C8h+thousands_sep]", "repne scasb", "mov     rax, rcx", "not     rax", "lea     r14, [rax+rbp]", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r12", "mov     rsi, p_0", "call    ___memcpy_chk", "lea     rax, [rsp+0C8h+var_78]", "mov     [rsp+0C8h+exponent], r15d", "mov     p_0, integerlim", "mov     exponent_0, [rsp+0C8h+grouping]", "mov     integerlim, rax", "jmp     short loc_6994"], ["mov~r12,integerlim", "sub~r12,p_0", "mov~rbp,0", "mov~eax,0", "mov~rcx,rbp", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~r14,<TAG>", "lea~rdi,[rsp+0]", "mov~ecx,0", "mov~rdx,r12", "mov~rsi,p_0", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],r15d", "mov~p_0,integerlim", "mov~exponent_0,[rsp+0]", "mov~integerlim,rax", "jmp~FOO"]], [1, 0, 88, 1, 0, 5, 1, 1, 1, 10, 0.007206588881262869, ["mov     psuffix_0, from_block_size", "mov     edx, 0", "div     to_block_size_0", "test    rdx, rdx", "jnz     short loc_6376"], ["mov~psuffix_0,from_block_size", "mov~edx,0", "div~,to_block_size_0", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 30, 2, 1, 10, 1, 2, 11, 4, 0.026996110729810112, ["cmp     rbp, r12", "cmova   rbp, r12", "sub     r13, rbp", "sub     r12, rbp", "lea     rsi, [rbx+r12]; src", "mov     rdx, rbp; n", "mov     rdi, r13; dest", "call    _memcpy", "test    r12, r12", "jz      short loc_69AB"], ["cmp~rbp,r12", "cmova~rbp,r12", "sub~r13,rbp", "sub~r12,rbp", "lea~rsi,<TAG>", "mov~rdx,rbp", "mov~rdi,r13", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 10, 5, 0.03591855410661176, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_6960"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 30, 1, 0, 5, 0, 1, 11, 5, 0.0, ["movzx   ebp, al", "cmp     al, 7Fh", "cmovnb  rbp, r12", "add     r15, 1", "jmp     short loc_6960"], ["movzx~ebp,al", "cmp~al,0", "cmovnb~rbp,r12", "add~r15,0", "jmp~FOO"]], [0, 0, 49, 0, 0, 4, 1, 1, 2, 9, 0.02802562342713338, ["mov     qword ptr [rsp+0C8h+damt.value], from_block_size", "fild    qword ptr [rsp+0C8h+damt.value]", "test    from_block_size, from_block_size", "js      loc_657D"], ["mov~[word ptr [rsp+0],from_block_size", "fild~<TAG>,[word ptr [rsp+0]", "test~from_block_size,from_block_size", "js~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 3, 9, 0.0, ["fadd    cs:flt_F034", "jmp     loc_6388"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 4, 8, 0.0, ["fadd    cs:flt_F034", "jmp     loc_639F"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 47, 0, 0, 5, 1, 1, 3, 8, 0.03763440860215054, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     qword ptr [rsp+0C8h+damt.value], rax", "fild    qword ptr [rsp+0C8h+damt.value]", "test    rax, rax", "js      loc_6588"], ["mov~rax,[rsp+0]", "mov~[word ptr [rsp+0],rax", "fild~<TAG>,[word ptr [rsp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 30, 1, 1, 5, 0, 1, 12, 6, 0.00034317089910775565, ["sub     r13, r14", "mov     rdx, r14; n", "mov     rsi, [rsp+0C8h+thousands_sep]; src", "mov     rdi, r13; dest", "call    _memcpy"], ["sub~r13,r14", "mov~rdx,r14", "mov~rsi,[rsp+0]", "mov~rdi,r13", "call~FOO"]], [0, 0, 44, 0, 0, 2, 0, 1, 5, 7, 0.0, ["fadd    cs:flt_F034", "jmp     loc_63B3"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 45, 0, 0, 5, 1, 1, 4, 7, 0.04632807137954702, ["fdivp   st(1), st", "mov     qword ptr [rsp+0C8h+damt.value], n", "fild    qword ptr [rsp+0C8h+damt.value]", "test    n, n", "js      loc_6593"], ["fdivp~<TAG>,<TAG>", "mov~[word ptr [rsp+0],n", "fild~<TAG>,[word ptr [rsp+0]", "test~n,n", "js~FOO"]], [1, 0, 55, 0, 0, 5, 2, 0, 12, 13, 0.01138183482040723, ["cmp     [rsp+0C8h+exponent], 0", "setz    al", "test    esi, esi", "setnle  dl", "and     eax, edx"], ["cmp~[rsp+0],0", "setz~al", "test~esi,esi", "setnle~dl", "and~eax,edx"]], [0, 0, 54, 0, 0, 2, 1, 1, 13, 12, 0.032944406314344546, ["test    al, al", "jz      short loc_67C1"], ["test~al,al", "jz~FOO"]], [1, 0, 43, 0, 0, 3, 1, 1, 5, 6, 0.05410661175932281, ["fmulp   st(1), st", "test    byte ptr [rsp+0C8h+opts], 10h", "jz      loc_659E"], ["fmulp~<TAG>,<TAG>", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [3, 0, 22, 0, 0, 6, 0, 0, 11, 4, 0.032944406314344546, ["mov     r15d, 1", "mov     eax, 1", "mov     edx, [rsp+0C8h+base]", "mov     rcx, [rsp+0C8h+to_block_size]", "cmp     [rsp+0C8h+to_block_size], 1", "jbe     short loc_69ED"], ["mov~r15d,0", "mov~eax,0", "mov~edx,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~[rsp+0],0", "jbe~FOO"]], [1, 0, 41, 0, 0, 5, 0, 0, 6, 9, 0.01098146877144818, ["fld1", "mov     r15d, 0", "mov     eax, [rsp+0C8h+base]", "mov     qword ptr [rsp+0C8h+damt.value], rax", "fild    qword ptr [rsp+0C8h+damt.value]"], ["fld1~<TAG>", "mov~r15d,0", "mov~eax,[rsp+0]", "mov~[word ptr [rsp+0],rax", "fild~<TAG>,[word ptr [rsp+0]"]], [2, 0, 21, 1, 0, 3, 0, 1, 13, 4, 0.008464882177991307, ["add     r15d, 1", "cmp     r15d, 8", "jnz     short loc_69D1"], ["add~r15d,0", "cmp~r15d,0", "jnz~FOO"]], [1, 0, 41, 1, 0, 8, 0, 0, 7, 8, 0.014298787462823153, ["fmul    st(1), st", "add     r15d, 1", "fld     st", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "fstp    st(3)", "jb      short loc_63F1"], ["fmul~<TAG>,<TAG>", "add~r15d,0", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 8, 8, 0.001601464195836193, ["cmp     r15d, 7", "jle     short loc_63D5"], ["cmp~r15d,0", "jle~FOO"]]], "func_feature": [14, 40, 85, 3, 95, 146, 5, 524, 0.0325, 8, 53], "succs": [[57], [0, 57], [30], [2, 4], [33, 2], [20], [5, 54], [88], [87, 7], [57, 18], [9, 50], [21], [11, 13], [11, 14], [11], [11], [24, 4], [16, 3], [20], [], [19, 60], [25, 75], [21], [21], [30], [20, 29], [25], [30], [27, 68], [90, 35], [34, 43], [28, 30], [8, 30], [30], [40, 41], [20, 39], [35, 92], [35], [35], [10, 45], [41], [42], [48, 44], [42], [48, 46], [10], [48, 47], [48, 58], [53], [12, 14], [51, 52], [52, 6], [6], [53, 22], [1, 57], [49], [49], [20], [59, 23], [23], [], [31], [80, 61], [80, 67], [76, 63], [31], [31], [80, 74], [70], [71], [72, 69], [32, 73], [71], [32, 70], [65, 66], [78], [80, 62], [26, 84], [77, 79], [77], [81, 83], [83], [86], [82, 86], [78], [89], [89, 85], [88], [17, 3], [91, 15], [36, 38], [93], [36, 37], [56, 94], [93, 55]], "fname": "human_readable", "n_num": 95}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.07971014492753624, ["cmp     byte ptr [rdx-1], 42h ; 'B'", "jz      short loc_6B9B"], ["cmp~[yte ptr [rdx-1]+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 5, 5, 0.10144927536231885, ["mov     rdx, [rsp+38h+var_38]", "cmp     rbx, rdx", "jz      short loc_6B7C"], ["mov~rdx,<TAG>", "cmp~rbx,rdx", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.009057971014492754, ["cmp     rbx, rdx", "jnz     short loc_6B65"], ["cmp~rbx,rdx", "jnz~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 7, 5, 0.021739130434782608, ["or      bpl, 80h"], ["or~bpl,<STR>"]], [0, 0, 7, 0, 0, 1, 0, 1, 8, 5, 0.0018115942028985507, ["jmp     short loc_6B86"], ["jmp~FOO"]], [1, 1, 8, 0, 0, 3, 1, 1, 7, 4, 0.03260869565217391, ["or      ebp, 180h", "cmp     byte ptr [rdx-2], 69h ; 'i'", "jnz     loc_6A93"], ["or~ebp,<STR>", "cmp~[yte ptr [rdx-2]+0],0", "jnz~FOO"]], [2, 0, 20, 0, 0, 3, 0, 1, 1, 6, 0.08303140096618358, ["mov     ebp, 0", "cmp     byte ptr [rbx], 27h ; '''", "jz      loc_6B22"], ["mov~ebp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 1, 6, 0.007548309178743962, ["lea     rdi, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "mov     spec, rax", "test    rax, rax", "jnz     loc_6A4E"], ["lea~rdi,<TAG>", "call~FOO", "mov~spec,rax", "test~rax,rax", "jnz~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 2, 5, 0.018417874396135268, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "mov     rbx, rax", "test    rax, rax", "jnz     loc_6A4E"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jnz~FOO"]], [0, 1, 24, 1, 0, 13, 2, 1, 0, 7, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, spec", "mov     r13, opts", "mov     r12, block_size", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      short loc_6AC6"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,spec", "mov~r13,opts", "mov~r12,block_size", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 8, 4, 0.021739130434782608, ["or      ebp, 20h", "jmp     loc_6A93"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 1, 0, 3, 4, 0.022946859903381644, ["cdqe", "lea     rdx, block_size_opts", "or      ebp, [rdx+rax*4]", "mov     qword ptr [block_size], 1"], ["cdqe~", "lea~rdx,<TAG>", "or~ebp,<TAG>", "mov~<TAG>,0"]], [1, 0, 18, 0, 1, 7, 1, 2, 2, 5, 0.13737922705314012, ["mov     ecx, 4; valsize", "lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      loc_6B30"], ["mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 3, 0.02566425120772947, ["mov     dword ptr [opts+0], 0", "jmp     loc_6A9C"], ["mov~[word ptr [opts+0],0", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 3, 4, 0.12530193236714976, ["mov     rsi, rsp; ptr", "lea     r8, aEeggkkmmppttyy; \"eEgGkKmMpPtTyYzZ0\"", "mov     rcx, block_size; val", "mov     edx, 0; strtol_base", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_6B8E"], ["mov~rsi,rsp", "lea~r8,<TAG>", "mov~rcx,block_size", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.13737922705314012, ["mov     [opts+0], ebp", "mov     eax, 0"], ["mov~[opts+0],ebp", "mov~eax,0"]], [2, 2, 6, 1, 1, 9, 1, 2, 3, 4, 0.02566425120772947, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     ebp, 0", "jmp     loc_6A93"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~ebp,0", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 0, 4, 4, 0.10326086956521739, ["movzx   eax, byte ptr [rbx]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_6A93"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [3, 0, 13, 2, 0, 5, 0, 0, 6, 4, 0.03804347826086957, ["add     rbx, 1", "movzx   eax, byte ptr [rbx]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_6A93"], ["add~rbx,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 2, 0.14492753623188406, ["cmp     qword ptr [block_size], 0", "jz      loc_6BAD"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 19, 1, 0, 3, 0, 1, 2, 6, 0.0, ["add     rbx, 1", "mov     ebp, 4", "jmp     loc_6A5C"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, 1, 0.07971014492753624, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_6BD9"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 2, 0.0, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_6AA7"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 7, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 13, 25, 2, 25, 37, 0, 105, 0.0487, 7, 8], "succs": [[3, 5], [0, 18], [0, 18], [10], [10], [4, 15], [12, 20], [8, 6], [16, 6], [6, 7], [15], [15], [11, 14], [19], [17, 13], [19], [15], [1, 15], [2, 15], [21, 22], [12], [24, 23], [21], [], []], "fname": "human_options", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.016666666666666666, ["mov     edi, 0", "call    usage_func", "jmp     loc_6C59"], ["mov~edi,0", "call~usage_func", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "jz      short loc_6CFD"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+0F8h+var_A8], xmm0", "movaps  [rsp+0F8h+var_98], xmm1", "movaps  [rsp+0F8h+var_88], xmm2", "movaps  [rsp+0F8h+var_78], xmm3", "movaps  [rsp+0F8h+var_68], xmm4", "movaps  [rsp+0F8h+var_58], xmm5", "movaps  [rsp+0F8h+var_48], xmm6", "movaps  [rsp+0F8h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 10, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0D0h", "mov     rbp, command_name", "mov     r12, package", "mov     r13, version", "mov     r14, usage_func", "test    al, al", "jz      short loc_6C34"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,command_name", "mov~r12,package", "mov~r13,version", "mov~r14,usage_func", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.15555555555555556, ["mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     cs:optind@@GLIBC_2_2_5, 0", "mov     rax, [rsp+0F8h+var_E0]", "xor     rax, fs:28h", "jnz     loc_6D0A"], ["mov~<TAG>,ebx", "mov~<TAG>,0", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 8, 0, 0, 7, 1, 1, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+0F8h+var_E0], rax", "xor     eax, eax", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 0", "cmp     edi, 2", "jz      short loc_6C8D"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~ebx,<TAG>", "mov~<TAG>,0", "cmp~edi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 0D0h", "pop     saved_opterr", "pop     command_name", "pop     package", "pop     version", "pop     usage_func", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~command_name", "pop~package", "pop~version", "pop~usage_func", "retn"]], [2, 0, 7, 0, 1, 6, 0, 2, 2, 2, 0.13333333333333333, ["mov     r8d, 0; longind", "lea     package, long_options; longopts", "lea     command_name, shortopts; \"+\"", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_6C59"], ["mov~r8d,0", "lea~package,<TAG>", "lea~command_name,<TAG>", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.07222222222222223, ["cmp     eax, 76h ; 'v'", "jnz     short loc_6C59"], ["cmp~eax,0", "jnz~FOO"]], [3, 0, 0, 0, 2, 14, 0, 2, 5, -1, 0.0, ["mov     [rsp+0F8h+authors.gp_offset], 30h ; '0'", "mov     [rsp+0F8h+authors.fp_offset], 30h ; '0'", "lea     c, [rsp+0F8h+arg_0]", "mov     [rsp+0F8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0F8h+var_D8]", "mov     [rsp+0F8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    version_etc_va", "mov     edi, 0; status", "call    _exit"], ["mov~<TAG>,0", "mov~[rsp+0],0", "lea~c,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~rdi,<TAG>", "call~FOO", "mov~edi,0", "call~FOO"]]], "func_feature": [5, 3, 12, 10, 11, 14, 0, 67, 0.06263, 6, 2], "succs": [[5], [0, 9], [6], [2, 6], [], [4, 7], [8, 5], [], [1, 5], [10, 5], []], "fname": "parse_long_options", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 9, 0, 0, 8, 0, 0, 0, 0, 0.0, ["movaps  [rsp+0F8h+var_A8], xmm0", "movaps  [rsp+0F8h+var_98], xmm1", "movaps  [rsp+0F8h+var_88], xmm2", "movaps  [rsp+0F8h+var_78], xmm3", "movaps  [rsp+0F8h+var_68], xmm4", "movaps  [rsp+0F8h+var_58], xmm5", "movaps  [rsp+0F8h+var_48], xmm6", "movaps  [rsp+0F8h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 10, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0D0h", "mov     r12, command_name", "mov     r13, package", "mov     r14, version", "mov     rbp, [rsp+0F8h+usage_func]", "test    al, al", "jz      short loc_6D6A"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,command_name", "mov~r13,package", "mov~r14,version", "mov~rbp,[rsp+0]", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.15555555555555556, ["mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     rax, [rsp+0F8h+var_E0]", "xor     rax, fs:28h", "jnz     short loc_6E3F"], ["mov~<TAG>,ebx", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [3, 0, 8, 0, 1, 14, 2, 2, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+0F8h+var_E0], rax", "xor     eax, eax", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 1", "test    r9b, r9b", "lea     command_name, aWrittenBySSAnd+1Bh; \"\"", "lea     rax, shortopts; \"+\"", "cmovz   rdx, rax; shortopts", "mov     r8d, 0; longind", "lea     package, long_options; longopts", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_6DD1"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~ebx,<TAG>", "mov~<TAG>,0", "test~r9b,r9b", "lea~command_name,<TAG>", "lea~rax,<TAG>", "cmovz~rdx,rax", "mov~r8d,0", "lea~package,<TAG>", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 4, 2, 0.03333333333333333, ["mov     edi, cs:exit_failure", "call    rbp", "jmp     short loc_6DD1"], ["mov~edi,<TAG>", "call~rbp", "jmp~FOO"]], [1, 0, 3, 0, 1, 2, 0, 1, 3, 2, 0.03333333333333333, ["mov     edi, 0", "call    rbp"], ["mov~edi,0", "call~rbp"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 3, 0.08888888888888889, ["cmp     eax, 76h ; 'v'", "jz      short loc_6DF7"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "jz      short loc_6DCA"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 0D0h", "pop     saved_opterr", "pop     rbp", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~rbp", "pop~command_name", "pop~package", "pop~version", "retn"]], [3, 0, 0, 0, 2, 14, 0, 2, 4, -1, 0.0, ["mov     [rsp+0F8h+authors.gp_offset], 30h ; '0'", "mov     [rsp+0F8h+authors.fp_offset], 30h ; '0'", "lea     c, [rsp+0F8h+arg_8]", "mov     [rsp+0F8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0F8h+var_D8]", "mov     [rsp+0F8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    version_etc_va", "mov     edi, 0; status", "call    _exit"], ["mov~<TAG>,0", "mov~[rsp+0],0", "lea~c,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~rdi,<TAG>", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 4, 12, 10, 11, 13, 1, 69, 0.05657, 7, 2], "succs": [[3], [0, 3], [8, 10], [2, 7], [2], [2], [9, 4], [5, 6], [], [], []], "fname": "parse_gnu_standard_options_only", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 0, 2, 6, 0, 2, 0, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~argv0,<TAG>", "call~FOO", "call~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0, ["push    rbx", "test    argv0, argv0", "jz      short loc_6EC6"], ["push~rbx", "test~argv0,argv0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 4, 1, 1, 11, 1, 2, 1, 0, 0.13333333333333333, ["mov     rbx, argv0", "mov     esi, 2Fh ; '/'; c", "call    _strrchr", "lea     rdx, [slash+1]", "test    slash, slash", "mov     slash, rdx", "cmovz   rax, argv0", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_6EB6"], ["mov~rbx,argv0", "mov~esi,0", "call~FOO", "lea~rdx,[slash+0]", "test~slash,slash", "mov~slash,rdx", "cmovz~rax,argv0", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 2, 0, 0.13333333333333333, ["lea     rsi, [base-7]", "mov     ecx, 7", "lea     rdi, aLibs; \"/.libs/\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_6EB6"], ["lea~rsi,[base-7]+0]", "mov~ecx,0", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 2, 0, 0, 9, 1, 1, 3, 0, 0.1, ["mov     ecx, 3", "lea     rdi, aLt; \"lt-\"", "mov     rsi, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "mov     rbx, base", "test    dl, dl", "jnz     short loc_6EB6"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "mov~rbx,base", "test~dl,dl", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 4, 0, 0.0, ["lea     rbx, [base+3]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[base+0]", "mov~<TAG>,argv0"]]], "func_feature": [3, 4, 7, 0, 7, 9, 1, 43, 0.05238, 7, 1], "succs": [[], [0, 3], [], [2, 4], [2, 5], [2, 6], [2]], "fname": "set_program_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 19, 0, 0, 3, 0, 1, 0, 0, 0.08384615384615385, ["cmp     [s1+5], cl", "setz    dl", "jmp     loc_6F3B"], ["cmp~[s1+0],cl", "setz~dl", "jmp~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 4, 13, 0.15384615384615385, ["lea     eax, [s25-41h]", "cmp     al, 19h", "ja      loc_6FFB"], ["lea~eax,[s25-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 24, 0, 0, 4, 1, 0, 1, 16, 0.01846153846153846, ["movzx   eax, byte ptr [s1+4]", "and     eax, 0FFFFFFDFh", "cmp     al, dl", "setz    r10b"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,dl", "setz~r10b"]], [2, 0, 26, 1, 0, 5, 0, 1, 0, 17, 0.0, ["sub     rsp, 8", "mov     r11d, [rsp+8+s28]", "lea     eax, [s24-41h]", "cmp     al, 19h", "ja      loc_6FEF"], ["sub~rsp,0", "mov~r11d,[rsp+0]", "lea~eax,[s24-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 12, 5, 0.23076923076923078, ["lea     eax, [s27-41h]", "cmp     al, 19h", "ja      loc_7012"], ["lea~eax,[s27-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 12, 0, 0, 3, 1, 1, 11, 6, 0.23692307692307693, ["mov     eax, 1", "test    r8b, r8b", "jz      short loc_6FEA"], ["mov~eax,0", "test~r8b,r8b", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 9, 8, 0.11076923076923077, ["cmp     [s1+6], r8b", "setz    dl", "jmp     loc_6F6E"], ["cmp~[s1+0],r8b", "setz~dl", "jmp~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 8, 9, 0.23076923076923078, ["lea     eax, [s26-41h]", "cmp     al, 19h", "ja      loc_7006"], ["lea~eax,[s26-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 23, 0, 0, 3, 1, 1, 2, 15, 0.10615384615384615, ["mov     eax, 0", "test    r10b, r10b", "jz      loc_6FEA"], ["mov~eax,0", "test~r10b,r10b", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 16, 0.01846153846153846, ["cmp     [s1+4], dl", "setz    r10b", "jmp     loc_6F09"], ["cmp~[s1+0],dl", "setz~r10b", "jmp~FOO"]], [1, 0, 9, 0, 0, 4, 1, 0, 13, 4, 0.09923076923076923, ["movzx   eax, byte ptr [s1+7]", "and     eax, 0FFFFFFDFh", "cmp     al, r9b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r9b", "setz~dl"]], [0, 0, 9, 0, 0, 3, 0, 1, 13, 4, 0.09923076923076923, ["cmp     [s1+7], r9b", "setz    dl", "jmp     loc_6F9A"], ["cmp~[s1+0],r9b", "setz~dl", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 3, 14, 0.12923076923076923, ["mov     eax, 1", "test    dl, dl", "jz      loc_6FEA"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 14, 3, 0.19846153846153847, ["mov     eax, 0", "test    dl, dl", "jz      short loc_6FEA"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 17, 0, 0.04923076923076923, ["cmp     [s1+8], r11b", "setz    dl", "jmp     short loc_6FC2"], ["cmp~[s1+0],r11b", "setz~dl", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 16, 1, 0.15384615384615385, ["lea     eax, [r11-41h]", "cmp     al, 19h", "ja      short loc_701E"], ["lea~eax,[r11-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, 2, 0.1753846153846154, ["mov     eax, 1", "test    r9b, r9b", "jz      short loc_6FEA"], ["mov~eax,0", "test~r9b,r9b", "jz~FOO"]], [1, 0, 19, 0, 0, 4, 1, 0, 5, 12, 0.08384615384615385, ["movzx   eax, byte ptr [s1+5]", "and     eax, 0FFFFFFDFh", "cmp     al, cl", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,cl", "setz~dl"]], [1, 0, 4, 0, 0, 4, 1, 0, 17, -1, 0.04923076923076923, ["movzx   eax, byte ptr [s1+8]", "and     eax, 0FFFFFFDFh", "cmp     al, r11b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r11b", "setz~dl"]], [1, 0, 18, 0, 0, 3, 1, 1, 6, 11, 0.21384615384615385, ["mov     eax, 0", "test    dl, dl", "jz      loc_6FEA"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.07538461538461538, ["mov     eax, 0", "test    dl, dl", "jz      short loc_6FEA"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 7, 10, 0.22153846153846155, ["mov     eax, 1", "test    cl, cl", "jz      loc_6FEA"], ["mov~eax,0", "test~cl,cl", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 19, -1, 0.03692307692307692, ["mov     eax, 1", "test    r11b, r11b", "jz      short loc_6FEA"], ["mov~eax,0", "test~r11b,r11b", "jz~FOO"]], [2, 0, 1, 2, 1, 6, 1, 1, 20, -1, 0.0, ["add     s2, 9; s2", "add     s1, 9; s1", "call    c_strcasecmp", "test    eax, eax", "setz    al", "movzx   eax, al"], ["add~s2,0", "add~s1,0", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al"]], [1, 0, 14, 0, 0, 4, 1, 0, 9, 8, 0.11076923076923077, ["movzx   eax, byte ptr [s1+6]", "and     eax, 0FFFFFFDFh", "cmp     al, r8b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r8b", "setz~dl"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 13, 0, 0, 3, 1, 1, 10, 7, 0.24461538461538462, ["mov     eax, 0", "test    dl, dl", "jz      short loc_6FEA"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]]], "func_feature": [1, 16, 21, 0, 27, 41, 2, 90, 0.11595, 0, 4], "succs": [[19], [0, 17], [8], [9, 2], [10, 11], [25, 4], [26], [24, 6], [25, 12], [8], [13], [13], [1, 25], [16, 25], [20], [18, 14], [25, 15], [19], [20], [25, 21], [25, 22], [25, 7], [25, 23], [25], [26], [], [25, 5]], "fname": "strcaseeq4", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.049450549450549455, ["cmp     ebp, 9", "lea     rax, asc_F08D; \"\\\"\"", "lea     rdx, asc_F08B; \"'\"", "cmovnz  rax, rdx", "jmp     loc_7049"], ["cmp~ebp,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 0, 0.0631868131868132, ["cmp     dl, 47h ; 'G'", "jnz     loc_7149"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 0, 0.06593406593406594, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     loc_7149"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 0, 0.06593406593406594, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     loc_7149"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 0, 0.05494505494505495, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     loc_7149"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 6, 0, 0.03296703296703297, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 30h ; '0'; s26", "mov     ecx, 33h ; '3'; s25", "mov     edx, 30h ; '0'; s24", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      loc_7149"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 0, 0.0521978021978022, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_7149"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 3, 0, 0.049450549450549455, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     short loc_7149"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 0, 0.04395604395604396, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     short loc_7149"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 5, 0, 0.027472527472527476, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 0; s26", "mov     ecx, 0; s25", "mov     edx, 38h ; '8'; s24", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      short loc_7149"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [2, 0, 13, 0, 1, 5, 1, 2, 1, 0, 0.06593406593406594, ["call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_70DE"], ["call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, 0, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_F093", "lea     rdx, unk_F084", "cmovnz  rax, rdx", "jmp     loc_7049"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [3, 0, 14, 1, 1, 11, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, msgid", "mov     ebp, esi", "mov     edx, 5; category", "mov     s, msgid; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "cmp     msgid, translation", "jz      short loc_7050"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,msgid", "mov~ebp,esi", "mov~edx,0", "mov~s,msgid", "mov~edi,0", "call~FOO", "cmp~msgid,translation", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     msgid", "pop     s", "retn"], ["add~rsp,0", "pop~msgid", "pop~s", "retn"]], [1, 0, 1, 0, 0, 5, 0, 1, 7, 0, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_F08F", "lea     rdx, unk_F088", "cmovnz  rax, rdx", "jmp     loc_7049"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]]], "func_feature": [4, 6, 18, 0, 15, 25, 2, 79, 0.03846, 8, 6], "succs": [[13], [0, 2], [0, 3], [0, 4], [0, 5], [0, 14], [0, 7], [0, 8], [0, 9], [0, 11], [1, 6], [13], [10, 13], [], [13]], "fname": "gettext_quote", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.0058909065115619235, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 5, 0.06049912517141911, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_8041"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 10, 0.035905802241452685, ["lea     rdx, [r14+2]", "cmp     len_0, rax", "jnb     short loc_7A13"], ["lea~rdx,[r14+0]", "cmp~len_0,rax", "jnb~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 5Ch ; '\\'", "mov     rax, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_79FF"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_79FF"], ["mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 13, 11, 0.016896013618953043, ["mov     eax, 0", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     short loc_7A3A"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+2], 27h ; '''"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [3, 0, 266, 0, 0, 7, 2, 1, 11, 8, 0.3504882489241973, ["movzx   eax, [rsp+0E8h+backslash_escapes]", "xor     eax, 1", "cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "or      eax, edx", "cmp     al, 1", "jnz     short loc_7818"], ["movzx~eax,[rsp+0]", "xor~eax,0", "cmp~[rsp+0],0", "setz~dl", "or~eax,edx", "cmp~al,0", "jnz~FOO"]], [3, 0, 266, 1, 0, 8, 0, 1, 16, 9, 0.018357213789189954, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "cmp     al, 9", "ja      loc_77FB"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "cmp~al,0", "ja~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 19, 9, 0.014895729890764646, ["lea     r14, [rdx+3]", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_77FB"], ["lea~r14,[rdx+0]", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.0008263583487019434, ["movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     ebp, ebx", "mov     [rsp+0E8h+c], 0", "jmp     loc_77FB"], ["movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005107107391119308, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005305717122996169, ["mov     ebp, eax", "mov     ebx, eax", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_77FB"], ["mov~ebp,eax", "mov~ebx,eax", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.0034898567172648603, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 5, 0, 1, 22, 9, 0.033125265995176616, ["add     r14, 4", "movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "mov     ebp, ebx", "mov     r13, i", "jmp     loc_77FB"], ["add~r14,0", "movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~r13,i", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 11, 9, 0.0018158604057313093, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 1, 1, 10, 5, 0.013845935593701234, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000007958 case 32", "setz    bl", "and     bl, [rsp+0E8h+elide_outer_quotes]", "jz      loc_77FB"], ["cmp~[rsp+0],0", "setz~bl", "and~bl,[rsp+0]", "jz~FOO"]], [2, 0, 266, 0, 0, 4, 0, 1, 11, 9, 0.0034898567172648603, ["mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     ebx, 0", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_77FB"], ["mov~[rsp+0],bpl", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 1, 0, 9, 0, 1, 15, 9, 0.03672861398779969, ["add     r14, 3", "movzx   esi, [rsp+0E8h+elide_outer_quotes]", "mov     ebx, esi", "mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     [rsp+0E8h+pending_shell_escape_end], sil", "mov     [rsp+0E8h+orig_buffersize], r15", "mov     r15, rax", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_77FB"], ["add~r14,0", "movzx~esi,[rsp+0]", "mov~ebx,esi", "mov~[rsp+0],bpl", "mov~[rsp+0],sil", "mov~[rsp+0],r15", "mov~r15,rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 11, 8, 0.15643353667186832, ["mov     ebx, ebp", "xor     ebx, 1", "and     bl, [rsp+0E8h+backslash_escapes]", "jz      loc_77FB"], ["mov~ebx,ebp", "xor~ebx,0", "and~bl,[rsp+0]", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 9, 0.004184990778833877, ["mov     ebx, 0; jumptable 0000000000007958 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_77FB"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.04254504184990779, ["mov     ebp, ebx", "movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_77FB"], ["mov~ebp,ebx", "movzx~ebx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 16, 9, 0.0018300468151510852, ["movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_77FB"], ["movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 9, 0.003433111079585757, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 14, 9, 0.0034614838984253085, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 16, 9, 0.007050645481628599, ["mov     ebp, 0; jumptable 00000000000076CA default case", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 12, 9, 0.010767484749609873, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_77FB"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 12, 9, 0.02601314607272899, ["mov     ebp, edi", "mov     ebx, edi"], ["mov~ebp,edi", "mov~ebx,edi"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len_0", "jbe     short loc_7602"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 10, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [10, 0, 266, 1, 1, 37, 2, 1, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     [rsp+0E8h+buffer], buffer_0", "mov     r14, buffersize_0", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+argsize], argsize_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     ebx, r9d", "mov     [rsp+0E8h+flags], r9d", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+var_A8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_1], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "mov     [rsp+0E8h+var_80], rax", "mov     eax, ebx", "shr     eax, 1", "and     eax, 1", "mov     [rsp+0E8h+elide_outer_quotes], al", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+quote_string], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     r15, buffersize_0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],buffer_0", "mov~r14,buffersize_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~[rsp+0],r8d", "mov~ebx,r9d", "mov~[rsp+0],r9d", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],rax", "mov~eax,ebx", "shr~eax,0", "and~eax,0", "mov~[rsp+0],al", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15,buffersize_0"]], [2, 0, 266, 0, 0, 7, 0, 1, 4, 9, 0.003702652858561498, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08D; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_7260"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013306852035749751, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000007231 case 5", "jnz     loc_73EF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 7, 0.16817397266751796, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_7839"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 14, 10, 0.06860547595403603, ["lea     r14, [len_0+1]", "test    bl, bl", "jz      loc_7E0B"], ["lea~r14,[len_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 11, 9, 0.016782522343594834, ["test    byte ptr [rsp+0E8h+flags], 1", "jnz     loc_78DB"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.08733153638814016, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 0000000000007958 case 0", "jz      loc_7615"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 1, 11, 0.1265002127961413, ["mov     eax, [rsp+0E8h+quoting_style]", "cmp     eax, 0Ah; switch 11 cases", "ja      loc_73D5; jumptable 0000000000007231 default case"], ["mov~eax,[rsp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 12, 12, 0.1223152220173074, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     process_input"], ["mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 12, 7, 0.17940606232562523, ["mov     rcx, [rsp+0E8h+var_A8]", "test    rcx, rcx", "jz      short loc_7839"], ["mov~rcx,[rsp+0]", "test~rcx,rcx", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.03614697120158888, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_7FAD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 1, 1, 12, 1, 2, 12, 10, 0.09128954461625761, ["lea     rbx, [i+m+0]", "mov     rax, [rsp+0E8h+arg]", "lea     r14, [rax+rbx]", "mov     rdx, [rsp+0E8h+argsize]", "sub     rdx, rbx; n", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rsi, r14; s", "mov     rdi, [rsp+0E8h+pwc]; pwc", "call    rpl_mbrtowc", "mov     r12, rax", "test    bytes, bytes", "jz      loc_7CA8"], ["lea~rbx,[i+0]", "mov~rax,[rsp+0]", "lea~r14,<TAG>", "mov~rdx,[rsp+0]", "sub~rdx,rbx", "mov~rcx,[rsp+0]", "mov~rsi,r14", "mov~rdi,[rsp+0]", "call~FOO", "mov~r12,rax", "test~bytes,bytes", "jz~FOO"]], [1, 0, 266, 0, 0, 9, 0, 1, 11, 11, 0.0888352957866364, ["mov     esi, 0", "lea     rax, [rsp+0E8h+mbstate]", "mov     [rsp+0E8h+ps], rax", "lea     rax, [rsp+0E8h+w]", "mov     [rsp+0E8h+pwc], rax", "mov     [rsp+0E8h+len], len_0", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     buffersize_0, rsi", "jmp     loc_7BF4"], ["mov~esi,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],len_0", "mov~[rsp+0],buffersize_0", "mov~buffersize_0,rsi", "jmp~FOO"]], [1, 0, 266, 1, 2, 10, 2, 3, 16, 10, 0.02850049652432969, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "mov     rdi, [rsp+0E8h+ps]; ps", "call    _mbsinit", "test    eax, eax", "jnz     short loc_7C61"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 12, 0.006681798836714427, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 5Ch ; '\\'", "jmp     store_c"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 9, 0.006667612427294652, ["cmp     byte ptr [rsp+0E8h+ps], 0", "jnz     loc_7E84"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 9, 6, 0.3594978011065399, ["movzx   eax, r12b", "lea     rsi, off_F1A4", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["movzx~eax,r12b", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.02312384735423464, ["lea     rax, [i+1]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_7E1C"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 16, 10, 0.030827067669172932, ["mov     edx, ebx", "xor     edx, 1", "and     dl, r9b", "jz      loc_7DF9"], ["mov~edx,ebx", "xor~edx,0", "and~dl,r9b", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 11, 0.11495247552844373, ["lea     r8, [i+1]", "cmp     r8, ilim", "jnb     loc_7DDB"], ["lea~r8,[i+0]", "cmp~r8,ilim", "jnb~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 2, 10, 0.1235494396368279, ["mov     edx, eax", "lea     rcx, off_F100", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["mov~edx,eax", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.062391828628174203, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_7B4D"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 10, 0.06876152645765357, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_7C76"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 3, 10, 0.0, ["mov     [rsp+0E8h+backslash_escapes], 1; jumptable 0000000000007231 case 3"], ["mov~[rsp+0],0"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 9, 0.010270960419917718, ["movzx   esi, [rsp+0E8h+elide_outer_quotes]", "test    [rsp+0E8h+backslash_escapes], sil", "jz      short loc_776B"], ["movzx~esi,[rsp+0]", "test~[rsp+0],sil", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.032841537806781104, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000007958 case 92", "jz      short loc_7772"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 266, 2, 0, 6, 1, 0, 19, 10, 0.06083132359199886, ["add     r14, 3", "and     eax, 7", "add     eax, 30h ; '0'", "lea     r8, [i+1]", "cmp     ilim, r8", "jbe     short loc_7DE9"], ["add~r14,0", "and~eax,0", "add~eax,0", "lea~r8,[i+0]", "cmp~ilim,r8", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 11, 0.06000851184565186, ["lea     r8, [r14+2]", "cmp     r15, len_0", "jbe     short loc_7DBE"], ["lea~r8,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [3, 0, 266, 1, 0, 5, 1, 0, 19, 11, 0.0, ["mov     r8d, eax", "shr     r8b, 3", "and     r8d, 7", "add     r8d, 30h ; '0'", "mov     [r10+r14+2], r8b"], ["mov~r8d,eax", "shr~r8b,0", "and~r8d,0", "add~r8d,0", "mov~[r10+0],r8b"]], [1, 0, 266, 0, 0, 8, 0, 0, 13, 6, 0.008033054333948072, ["movzx   edi, [rsp+0E8h+c]", "mov     eax, edi", "shr     al, 5", "movzx   eax, al", "mov     eax, [rcx+rax*4]", "mov     ecx, edi", "bt      eax, ecx", "jb      short store_escape"], ["movzx~edi,[rsp+0]", "mov~eax,edi", "shr~al,0", "movzx~eax,al", "mov~eax,<TAG>", "mov~ecx,edi", "bt~eax,ecx", "jb~FOO"]], [3, 0, 266, 0, 0, 6, 0, 1, 5, 9, 0.0018655128387005248, ["mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08D; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     loc_7260"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.006667612427294652, ["test    buffersize_0, buffersize_0", "jz      loc_7418"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 12, 9, 0.061909490707901825, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      loc_7E2B"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.00489431124982267, ["mov     len_0, r15", "jmp     force_outer_quoting_style"], ["mov~len_0,r15", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 5, 0.06291672577670591, ["test    r12b, r12b", "jnz     loc_8039"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 10, 0.06995318484891473, ["cmp     eax, 5", "jz      short loc_766E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 10, 6, 0.0813164987941552, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 0000000000007958 case 63", "cmp     eax, 2", "jz      short loc_7653"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 6, 0.3438312763039677, ["cmp     [rsp+0E8h+is_right_quote], 0", "jz      store_c"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 9, 1, 0, 3, 0, 1, 12, 6, 0.01361895304298482, ["mov     rdx, len_0", "sub     rax, len_0", "jmp     short loc_7F6E"], ["mov~rdx,len_0", "sub~rax,len_0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.016952759256632144, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_7F80"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 13, 0.013264292807490424, ["cmp     buffersize_0, len_0", "jbe     short loc_7A49"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 12, 6, 0.03531470184896203, ["mov     [rsp+0E8h+c], al", "mov     ebp, 0", "jmp     store_escape"], ["mov~[rsp+0],al", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 8, 0.016711590296495955, ["cmp     bytes, 1", "jbe     short loc_7BCD"], ["cmp~bytes,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.019889346006525747, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_7BCD"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.00292594694282877, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 8, 5, 0.00621010072350688, ["test    [rsp+0E8h+elide_outer_quotes], al", "jnz     loc_8049"], ["test~[rsp+0],al", "jnz~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 11, 2, 0.00776705915732728, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "and     r9d, 0FFFFFFFDh; flags", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, buffersize_0; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     r15, rax", "add     rsp, 20h"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~0", "mov~r9d,[rsp+0]", "and~r9d,0", "mov~r8d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,buffersize_0", "mov~rdi,[rsp+0]", "call~FOO", "mov~r15,rax", "add~rsp,<STR>"]], [1, 0, 5, 0, 0, 3, 0, 1, 10, 3, 0.014321180309263725, ["mov     edi, [rsp+0E8h+quoting_style]", "cmp     edi, 2", "jnz     short loc_7FD4"], ["mov~edi,[rsp+0]", "cmp~edi,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 18, 3, 0.00035466023549439636, ["mov     len_0, buffersize_0", "jmp     loc_7FD4"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 11, 3, 0.0, ["cmp     [rsp+0E8h+backslash_escapes], 0", "mov     eax, 4", "cmovz   eax, edi", "mov     [rsp+0E8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,edi", "mov~[rsp+0],eax"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 12, 0.014087104553837423, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_7A67"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 4, 0.0331394524045964, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000076CA cases 0,6-8,12,14,27-29", "jnz     loc_8051"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 11, 2, 6.383884238899135e-05, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    [rsp+100h+var_A8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     r8d, 5; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     buffersize_0, rax", "add     rsp, 20h", "jmp     loc_8011"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,0", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~buffersize_0,rax", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 3, 0.12524471556249112, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     short loc_7EF9"], ["cmp~[rsp+0],0", "jnz~FOO"]], [4, 0, 266, 0, 0, 6, 0, 0, 3, 9, 0.012367002411689601, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 0000000000007231 case 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08B; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.008426727195346857, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "test    al, al", "jnz     loc_7FA3"], ["movzx~eax,[rsp+0]", "test~al,al", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 13, 5, 0.010341892467016597, ["cmp     buffersize_0, len_0", "jbe     short loc_7F62"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 14, 4, 0.003674280039721946, ["add     len_0, 1", "movzx   ecx, byte ptr [rax+len_0]", "test    cl, cl", "jz      short loc_7F7D"], ["add~len_0,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 266, 2, 0, 5, 0, 1, 18, 7, 0.013519648177046388, ["mov     bytes, [rsp+0E8h+arg]", "lea     rdx, [rax+rbx+1]", "add     rax, bytes", "add     rbx, rax", "jmp     loc_7BB0"], ["mov~bytes,[rsp+0]", "lea~rdx,[rax+0]", "add~rax,bytes", "add~rbx,rax", "jmp~FOO"]], [3, 0, 266, 0, 0, 6, 0, 1, 4, 9, 0.003688466449141722, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08B; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_7260"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.006667612427294652, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000007231 case 4", "jnz     loc_743D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 14, 13, 0.051657445500543804, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   edx, [rsp+0E8h+pending_shell_escape_end]", "xor     edx, 1", "and     al, dl", "jz      short loc_78A2"], ["cmp~[rsp+0],0", "setz~al", "movzx~edx,[rsp+0]", "xor~edx,0", "and~al,dl", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 6, 0.0427152787629451, ["movzx   ecx, byte ptr [rsi+rax]", "lea     edx, [rcx-21h]", "cmp     dl, 1Dh; switch 30 cases", "ja      loc_7E53; jumptable 00000000000076CA default case"], ["movzx~ecx,<TAG>", "lea~edx,[rcx-21h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 16, 5, 0.03627464888636686, ["movzx   edx, dl", "lea     rsi, off_F12C", "movsxd  rdx, dword ptr [rsi+rdx*4]", "add     rdx, rsi", "jmp     rdx; switch jump"], ["movzx~edx,dl", "lea~rsi,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,rsi", "jmp~rdx"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 16, 0.019790041140587317, ["cmp     buffersize_0, len_0", "jbe     short loc_7872"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 4, 8, 0.1354802099588594, ["mov     r13d, 0", "jmp     loc_78DF"], ["mov~r13d,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000007231 case 0", "mov     r14d, 0", "jmp     short loc_7260"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 8, 0, 1, 5, 9, 0.0018655128387005248, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08D; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     short loc_7260"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 1, 0, 12, 0, 1, 5, 9, 0.033210384451695274, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+quote_string_0]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+quote_string_len], rax", "mov     rdi, [rsp+0E8h+quote_string_0]", "mov     [rsp+0E8h+quote_string], rdi", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_7260"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "mov~rdi,[rsp+0]", "mov~[rsp+0],rdi", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 266, 0, 0, 9, 0, 1, 5, 9, 0.0037239324726911615, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 27h ; '''", "mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08B; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_7260"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 4, 9, 0.003702652858561498, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08B; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_7260"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000007231 case 7", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     r14d, 0", "jmp     loc_7260"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 7, 0, 1, 5, 9, 0.0037239324726911615, ["mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08B; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_7260"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 266, 0, 0, 8, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 0000000000007231 case 6", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_F08D; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_7260"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 14, 5, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     [rsi+len_0], cl", "jmp     short loc_7F62"], ["mov~rsi,[rsp+0]", "mov~<TAG>,cl", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 16, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+len_0], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 1, 1, 11, 7, 0.010781671159029648, ["test    al, al", "jnz     loc_7E67"], ["test~al,al", "jnz~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 17, 9, 0.02686905944105547, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "jmp     short loc_7CBB"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 15, 0.020612852886934315, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_7886"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 9, 10, 0.18792736558377074, ["mov     rbx, [rsp+0E8h+var_80]; jumptable 0000000000007958 default case", "cmp     rbx, 1", "jnz     short loc_7ADE"], ["mov~rbx,[rsp+0]", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 266, 1, 0, 7, 0, 1, 8, 7, 0.5493828911902398, ["mov     rax, [rsp+0E8h+arg]", "add     rax, i", "mov     [rsp+0E8h+var_B0], rax", "movzx   r12d, byte ptr [rax]", "mov     [rsp+0E8h+c], r12b", "cmp     r12b, 7Eh ; '~'; switch 127 cases", "ja      loc_7A71; jumptable 0000000000007958 default case"], ["mov~rax,[rsp+0]", "add~rax,i", "mov~[rsp+0],rax", "movzx~r12d,<TAG>", "mov~[rsp+0],r12b", "cmp~r12b,0", "ja~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 7, 0.06426443467158462, ["movzx   edi, [rsp+0E8h+backslash_escapes]", "test    dil, dil", "jnz     loc_7E76"], ["movzx~edi,[rsp+0]", "test~dil,dil", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 15, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 24h ; '$'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 8, 0.05553979287842247, ["lea     rax, [i+2]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_7E3F"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [0, 0, 266, 0, 0, 1, 0, 0, 17, 11, 0.013250106398070647, ["mov     rsi, [rsp+0E8h+var_B0]"], ["mov~rsi,[rsp+0]"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 10, 0.019860973187686197, ["cmp     byte ptr [rsi], 0", "jz      loc_7C97"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 11, 1, 0.007462051354802099, ["mov     rax, r15", "mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_808B"], ["mov~rax,r15", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.010384451695275925, ["test    buffersize_0, buffersize_0", "jz      loc_7465"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 14, 9, 0.0034331110795857572, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     ebp, 0", "jmp     short loc_7CBB"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 14, 7, 0.04914172223010356, ["mov     rsi, [rsp+0E8h+arg]", "cmp     byte ptr [rsi+i+1], 3Fh ; '?'", "jz      short loc_76A9"], ["mov~rsi,[rsp+0]", "cmp~[yte ptr [rsi+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 14, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 14, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_789A"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.007036459072208823, ["mov     ebp, 0", "jmp     short loc_7CBB"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 8, 0, 0, 15, 10, 0.02983401900978862, ["mov     rsi, r14", "mov     bytes, m", "mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     rcx, [rsp+0E8h+argsize]", "cmp     rbx, rcx", "jnb     loc_7C90"], ["mov~rsi,r14", "mov~bytes,m", "mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~rbx,rcx", "jnb~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 19, 9, 0.014895729890764646, ["add     r14, 2", "mov     edx, esi", "mov     i, r8", "mov     r9d, esi"], ["add~r14,0", "mov~edx,esi", "mov~i,r8", "mov~r9d,esi"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rdx, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_7D10"], ["lea~rdx,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 10, 0.0, ["mov     byte ptr [r10+r14+1], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "movzx   ecx, [rsp+0E8h+c]", "mov     [rax+len_0], cl"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~<TAG>,cl"]], [0, 0, 266, 0, 0, 2, 0, 0, 14, 10, 0.5604482905376649, ["cmp     len_0, buffersize_0", "jnb     short loc_78C8"], ["cmp~len_0,buffersize_0", "jnb~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 15, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     r15, len_0", "jbe     short loc_7D77"], ["lea~len_0,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 16, 0.020612852886934315, ["lea     pending_shell_escape_end_0, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_7D68"], ["lea~pending_shell_escape_end_0,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 16, 0.0, ["mov     byte ptr [r10+r14+1], 24h ; '$'"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.003674280039721946, ["mov     ebp, 0", "jmp     short loc_7CBB"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 18, 13, 0.022258476379628314, ["add     r14, 3", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["add~r14,0", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 1, 0, 1, 15, 9, 0.055284437508866496, ["jmp     loc_7A97"], ["jmp~FOO"]], [2, 0, 266, 0, 1, 7, 1, 1, 10, 9, 0.09697829479358774, ["call    ___ctype_b_loc", "movzx   r12d, r12b", "mov     rax, [rax]", "movzx   ebp, word ptr [rax+r12*2]", "shr     bp, 0Eh", "and     ebp, 1", "mov     rdi, rbx"], ["call~FOO", "movzx~r12d,r12b", "mov~rax,<TAG>", "movzx~ebp,<TAG>", "shr~bp,0", "and~ebp,0", "mov~rdi,rbx"]], [1, 0, 266, 0, 0, 4, 0, 1, 8, 8, 0.026372535111363313, ["mov     rax, [rsp+0E8h+quote_string_len]", "lea     rdx, [i+rax+0]", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_74C9"], ["mov~rax,[rsp+0]", "lea~rdx,[i+0]", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 266, 0, 0, 9, 2, 1, 7, 8, 0.549553128103277, ["cmp     [rsp+0E8h+quoting_style], 2", "setnz   bl", "and     bl, [rsp+0E8h+backslash_escapes]", "cmp     [rsp+0E8h+quote_string_len], 0", "setnz   byte ptr [rsp+0E8h+ps]", "movzx   eax, byte ptr [rsp+0E8h+ps]", "and     al, bl", "mov     [rsp+0E8h+is_right_quote], al", "jnz     loc_7492"], ["cmp~[rsp+0],0", "setnz~bl", "and~bl,[rsp+0]", "cmp~[rsp+0],0", "setnz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "and~al,bl", "mov~[rsp+0],al", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 12, 0.0549486924859318, ["cmp     buffersize_0, len_0", "jbe     short loc_78B1"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 19, 9, 0.007419492126542772, ["mov     rdi, m", "mov     ebp, 0", "jmp     short loc_7CBB"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 18, 10, 0.0136898850900837, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     rcx, rdx", "jbe     loc_7C9E"], ["add~m,0", "lea~rdx,[i+0]", "cmp~rcx,rdx", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 15, 0.0, ["mov     byte ptr [r10+r14+2], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 9, 8, 0.003333806213647326, ["cmp     rax, 1", "jbe     short loc_74C9"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 11, 0.0557715042322788, ["add     len_0, 1"], ["add~len_0,0"]], [1, 0, 266, 0, 0, 4, 1, 1, 7, 5, 0.16603418924670166, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    len_0, len_0", "jnz     short loc_7EC2"], ["cmp~[rsp+0],0", "setz~al", "test~len_0,len_0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 6, 6, 0.7185239040998723, ["test    bpl, bpl", "jz      loc_7EAB"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 11, 0.49803754669693096, ["cmp     bl, 1", "jz      loc_78B5"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.01652716697403887, ["cmp     [rsp+0E8h+pending_shell_escape_end], 0", "jz      loc_78B5"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 266, 1, 0, 3, 0, 1, 17, 11, 0.014895729890764646, ["add     r14, 2", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "jmp     loc_78B5"], ["add~r14,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 3, 11, 0.029507731593133777, ["mov     ebx, [rsp+0E8h+quoting_style]; jumptable 0000000000007231 cases 8-10", "cmp     ebx, 0Ah", "jnz     short loc_7302"], ["mov~ebx,[rsp+0]", "cmp~ebx,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 8, 0.0947084692864236, ["cmp     m, 1", "ja      loc_7AA6"], ["cmp~m,0", "ja~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.003716839267981274, ["mov     rdi, m", "mov     ebp, 0", "jmp     loc_7CBB"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 9, 0.019591431408710454, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]"]], [2, 0, 266, 0, 0, 7, 0, 0, 10, 8, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "mov     [rsp+0E8h+argsize], rax"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "mov~[rsp+0],rax"]], [1, 0, 266, 0, 0, 4, 2, 1, 8, 4, 0.160568875017733, ["movzx   edx, [rsp+0E8h+elide_outer_quotes]", "xor     edx, 1", "test    al, dl", "jz      short loc_7F3C"], ["movzx~edx,[rsp+0]", "xor~edx,0", "test~al,dl", "jz~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 4, 10, 0.030330543339480775, ["mov     r14d, 0", "cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_732A"], ["mov~r14d,0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 2, 9, 0, 3, 4, 11, 0.0, ["mov     esi, ebx; s", "lea     rdi, asc_F0A5; \"`\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_1], rax", "mov     esi, ebx; s", "lea     rdi, asc_F08B; \"'\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     short loc_72BF"], ["mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 12, 0.11330685203574972, ["test    dl, dl", "jz      short loc_7CDC"], ["test~dl,dl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 13, 6, 0.1791601645623493, ["test    cl, cl", "jz      short loc_7CCA"], ["test~cl,cl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 9, 7, 0.027606752730883814, ["cmp     rdx, [rsp+0E8h+argsize]", "ja      short loc_74FF"], ["cmp~rdx,[rsp+0]", "ja~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 16, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.006653426017874876, ["cmp     r15, len_0", "jbe     short loc_7CD8"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 5, 1, 0, 15, 9, 0.5612711022840119, ["add     len_0, 1", "test    bpl, bpl", "movzx   eax, [rsp+0E8h+all_c_and_shell_quote_compat]", "cmovz   eax, ebp", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], al"], ["add~len_0,0", "test~bpl,bpl", "movzx~eax,[rsp+0]", "cmovz~eax,ebp", "mov~[rsp+0],al"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 12, 0.007476237764221875, ["add     len_0, 1"], ["add~len_0,0"]], [2, 0, 266, 1, 0, 13, 2, 1, 12, 7, 0.12964959568733156, ["add     m, i", "mov     ebx, 0", "mov     ecx, ebp", "xor     ecx, 1", "and     cl, [rsp+0E8h+backslash_escapes]", "mov     esi, ecx", "movzx   r12d, [rsp+0E8h+elide_outer_quotes]", "movzx   r9d, [rsp+0E8h+pending_shell_escape_end]", "movzx   eax, [rsp+0E8h+c]", "movzx   edx, [rsp+0E8h+is_right_quote]", "mov     r10, [rsp+0E8h+buffer]", "mov     r11, [rsp+0E8h+arg]", "jmp     loc_7D2E"], ["add~m,i", "mov~ebx,0", "mov~ecx,ebp", "xor~ecx,0", "and~cl,[rsp+0]", "mov~esi,ecx", "movzx~r12d,[rsp+0]", "movzx~r9d,[rsp+0]", "movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 9, 4, 0.12499645339764505, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      short loc_7F3C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 12, 8, 0.5780500780252518, ["add     i, 1"], ["add~i,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 13, 0.02983401900978862, ["mov     [rsp+0E8h+c], cl", "cmp     buffersize_0, len_0", "jbe     short loc_76EA"], ["mov~[rsp+0],cl", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 2, 0.006667612427294652, ["cmp     buffersize_0, len_0", "jbe     loc_8011"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 0", "jmp     short loc_8011"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.0032959757885279235, ["mov     eax, 6Eh ; 'n'; jumptable 0000000000007958 case 10", "jmp     short c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 13, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+len_0], 3Fh ; '?'"], ["mov~rsi,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 1, 7, 1, 2, 10, 6, 0.010341892467016597, ["mov     rax, [rsp+0E8h+arg]", "lea     rdi, [rax+i]; s1", "mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+quote_string]; s2", "call    _memcmp", "test    eax, eax", "jnz     short loc_7509"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 266, 0, 0, 6, 2, 1, 11, 4, 0.12223010356078876, ["test    buffersize_0, buffersize_0", "setz    cl", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   al", "test    cl, al", "jz      short loc_7F3C"], ["test~buffersize_0,buffersize_0", "setz~cl", "cmp~[rsp+0],0", "setnz~al", "test~cl,al", "jz~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 5, 7, 0.7177010923535253, ["mov     rax, [rsp+0E8h+argsize]", "cmp     rax, i", "setnz   bpl", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_7E98"], ["mov~rax,[rsp+0]", "cmp~rax,i", "setnz~bpl", "cmp~rax,0", "jz~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 10, 12, 0.0880124840402894, ["mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jz      short loc_7B29"], ["mov~[word ptr [rsp+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.005589445311391686, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      loc_7926"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 20, 12, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 22h ; '\"'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 19, 12, 0.03065683075613562, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_76FE"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.0005107107391119308, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 11, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     r15, len_0", "jbe     short loc_7D01"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 4, 1, 1, 8, 10, 0.011193077032203149, ["add     len_0, 1", "movzx   eax, byte ptr [rdx+len_0]", "test    al, al", "jz      short loc_72CC"], ["add~len_0,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 6, 10, 0.003688466449141722, ["mov     r14d, 0", "jmp     loc_72CC"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.014328273513973613, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_7926"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 20, 11, 0.03147964250248262, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_7712"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 12, 0, 0, 6, 1, 1, 9, 3, 0.03311107958575684, ["mov     rax, buffersize_0", "mov     buffersize_0, len_0", "mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+quote_string]", "test    rax, rax", "jz      short loc_7F80"], ["mov~rax,buffersize_0", "mov~buffersize_0,len_0", "mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.058362888352957866, ["cmp     r15, len_0", "jbe     short loc_7D88"], ["cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 15, 14, 0.05507164136756987, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    bl", "mov     r8d, r9d", "xor     r8d, 1", "and     r8b, bl", "jz      short loc_7D7E"], ["cmp~[rsp+0],0", "setz~bl", "mov~r8d,r9d", "xor~r8d,0", "and~r8b,bl", "jz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 14, 0.022258476379628314, ["add     r14, 3", "mov     r9d, r8d"], ["add~r14,0", "mov~r9d,r8d"]], [1, 0, 266, 0, 0, 2, 0, 0, 21, 11, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+2], 22h ; '\"'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 15, 10, 0.029621222868491982, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short loc_7BCD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 8, 0.0018158604057313093, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_7926"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, 3, 0.02025819265143992, ["test    dl, dl", "jz      short loc_7F80"], ["test~dl,dl", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 15, 3, 0.0002837281883955171, ["mov     r15, len_0"], ["mov~r15,len_0"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     i", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~i", "pop~r14", "pop~r15", "retn"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.0032959757885279235, ["mov     eax, 72h ; 'r'; jumptable 0000000000007958 case 13", "jmp     c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 21, 10, 0.03230245424882962, ["lea     len_0, [r14+3]", "cmp     buffersize_0, len_0", "jbe     short loc_7726"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 18, 8, 0.04451695275925663, ["cmp     r15, len_0", "jbe     short loc_7D25"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.007050645481628599, ["mov     ebx, esi", "mov     i, r8", "jmp     loc_7D1C"], ["mov~ebx,esi", "mov~i,r8", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.014640374521208682, ["mov     i, r8", "jmp     loc_7D1C"], ["mov~i,r8", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 22, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+3], 3Fh ; '?'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 1, 0, 0, 19, 8, 0.0, ["mov     [r10+len_0], al"], ["mov~<TAG>,al"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 62h ; 'b'; jumptable 0000000000007958 case 8", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 266, 1, 0, 9, 0, 1, 11, 12, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+argsize], rax", "jmp     short loc_7AF2"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 7, 0.045339764505603626, ["add     len_0, 1", "movzx   eax, byte ptr [r11+i]"], ["add~len_0,0", "movzx~eax,<TAG>"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 12, 0.059185700099304864, ["lea     r8, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_7DA1"], ["lea~r8,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.06761242729465172, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_7F95"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 4, 1, 1, 5, 11, 0.016541353383458645, ["mov     rdx, [rsp+0E8h+quote_string_1]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_7355"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 6, 12, 0.009916300184423322, ["mov     rcx, [rsp+0E8h+buffer]", "jmp     short loc_734A"], ["mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 66h ; 'f'; jumptable 0000000000007958 case 12", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 7, 11, 0.01037026528585615, ["cmp     buffersize_0, len_0", "jbe     short loc_733D"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 8, 11, 0.0, ["mov     [rcx+len_0], al", "jmp     short loc_733D"], ["mov~<TAG>,al", "jmp~FOO"]], [2, 0, 266, 0, 0, 7, 2, 1, 12, 12, 0.06449141722230103, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   ecx, [rsp+0E8h+pending_shell_escape_end]", "xor     ecx, 1", "mov     rdx, len_0", "and     al, cl", "jz      short loc_7593"], ["cmp~[rsp+0],0", "setz~al", "movzx~ecx,[rsp+0]", "xor~ecx,0", "mov~rdx,len_0", "and~al,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 17, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 17, 0.019790041140587317, ["cmp     r15, len_0", "jbe     short loc_7D59"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 15, 0.019790041140587317, ["cmp     buffersize_0, r14", "jbe     short loc_7563"], ["cmp~buffersize_0,r14", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, 4, 0.00042559228259327563, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 5, 0.003688466449141722, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_795A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 15, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 61h ; 'a'; jumptable 0000000000007958 case 7", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 14, 0.020612852886934315, ["lea     len_0, [r14+1]", "cmp     buffersize_0, len_0", "jbe     short loc_7577"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 4, 11, 4.255922825932756e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 266, 0, 0, 2, 1, 1, 12, 12, 0.03302596112923819, ["test    buffersize_0, buffersize_0", "jz      short loc_7A3A"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 8, 0.001063980706483189, ["mov     eax, 5Ch ; '\\'", "jmp     short c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 14, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+1], 24h ; '$'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013221733579231097, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000007231 case 2", "jz      short loc_7370"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.019633990636969783, ["movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "test    bl, bl", "jnz     loc_7FA8"], ["movzx~ebx,[rsp+0]", "test~bl,bl", "jnz~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 10, 8, 0.009958859412682649, ["mov     rcx, [rsp+0E8h+argsize]; jumptable 0000000000007958 cases 123,125", "cmp     rcx, 1", "setnz   al", "cmp     rcx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_799A"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "setnz~al", "cmp~rcx,0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 13, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_758B"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 11, 8, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al", "jmp     short loc_797E"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 12, 12, 0.016512980564619095, ["mov     ebp, ebx", "mov     [rsp+0E8h+c], 5Ch ; '\\'"], ["mov~ebp,ebx", "mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [0, 0, 266, 0, 0, 3, 0, 1, 16, 12, 0.0811888211093772, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 20, 12, 0.05084409136047666, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "mov     ebx, ecx", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "mov~ebx,ecx", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 19, 10, 0.003333806213647326, ["cmp     byte ptr [rsi+m], 0", "jnz     short loc_7B82"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.022258476379628314, ["lea     len_0, [r14+3]", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["lea~len_0,[r14+0]", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 2, 1, 1, 10, 6, 0.003674280039721946, ["test    i, i; jumptable 0000000000007958 cases 35,126", "jz      short loc_79AD; jumptable 0000000000007958 case 32"], ["test~i,i", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 11, 0.06778266420768903, ["cmp     buffersize_0, len_0", "jbe     short loc_75A1"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 1, 0, 4, 0, 0, 18, 12, 0.0, ["mov     r8d, eax", "shr     r8b, 6", "add     r8d, 30h ; '0'", "mov     [r10+r14+1], r8b"], ["mov~r8d,eax", "shr~r8b,0", "add~r8d,0", "mov~[r10+0],r8b"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 6, 0, 0, 4, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_77A9"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 6, 0.0, ["mov     ebp, 0; jumptable 0000000000007958 cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["mov~ebp,0"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 1, 0, 3, 0, 1, 20, 7, 0.010895162434387855, ["add     rdx, 1; jumptable 0000000000007BCB default case", "cmp     rdx, rbx", "jz      short loc_7BCD"], ["add~rdx,0", "cmp~rdx,rbx", "jz~FOO"]], [2, 0, 266, 1, 0, 4, 0, 1, 19, 6, 0.014072918144417646, ["movzx   eax, byte ptr [rdx]", "sub     eax, 5Bh ; '['", "cmp     al, 21h ; '!'; switch 34 cases", "ja      short loc_7BA7; jumptable 0000000000007BCB default case"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 20, 5, 0.00390126259043836, ["movzx   eax, al", "lea     rdi, off_F3A0", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 12, 0.014072918144417646, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_77BD"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 76h ; 'v'; jumptable 0000000000007958 case 11", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 21, 4, 0.0006383884238899134, ["mov     r14, [rsp+0E8h+buffersize]; jumptable 0000000000007BCB cases 0,1,3,5,33"], ["mov~r14,[rsp+0]"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 12, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 27h ; '''"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [0, 0, 6, 0, 0, 2, 0, 1, 11, 4, 0.0009363030217052064, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.04257341466874734, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000007958 case 39", "jz      short loc_79E2"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 6, 7, 0.0, ["mov     argsize_0, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl", "jmp     loc_78F5"], ["mov~argsize_0,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 7, 0.0032959757885279235, ["mov     eax, 74h ; 't'; jumptable 0000000000007958 case 9"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 0000000000007231 default case"], ["call~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 6, 0.017818130231238474, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_75EF"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 30h ; '0'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]]], "func_feature": [12, 58, 180, 4, 267, 417, 7, 919, 0.04717, 8, 40], "succs": [[79], [0, 93], [18, 6], [2], [2], [72, 2], [18], [33, 39], [265, 7], [7], [7], [7], [7], [7], [7], [7], [259, 7], [7], [7], [168, 7], [7], [7], [7], [7], [7], [7], [7], [7], [9, 29], [9], [37], [97], [62, 31], [68, 39], [48, 21], [10, 170], [35, 212], [51, 263], [37], [68, 60], [79], [40, 229], [156, 53], [42], [42, 109], [150], [45, 230], [256, 226, 67, 36, 262, 200, 234, 174, 207, 16, 243, 20, 215, 56, 260, 250, 111], [8, 22], [185, 204], [49, 239], [32, 98, 54, 103, 232, 105, 86, 153, 92], [195, 126], [121, 52], [86], [230, 46], [233, 55], [240, 203], [57, 59], [57], [1, 68], [97], [99, 61], [115, 23], [79], [64, 192], [11, 63], [66, 87], [1, 150], [88], [172, 69], [82], [82, 71], [1], [90, 44], [74, 44], [79], [76, 158], [119], [81, 78], [78], [78], [3, 4], [80, 171], [119], [177, 84], [97], [216, 12], [89, 106], [88, 198], [253], [97], [91, 228], [96, 141], [25, 95], [25, 83], [107, 110], [178], [97], [97], [97], [97], [97], [97], [97], [97], [89], [110], [26, 243], [154], [114, 124], [138, 179], [47, 111], [73, 27], [124], [24, 122], [143], [116, 135], [], [118, 199], [104, 101], [154], [13, 94], [136], [136, 123], [154], [125, 117], [202], [129, 127], [127], [166], [130, 166], [144, 193], [132, 134], [132], [154], [141], [19], [19], [145, 163], [112, 139], [146, 147], [154], [241, 142], [193], [163, 157], [147], [131], [77, 158], [140, 148], [131, 151], [249, 131], [131], [160, 159], [168, 137], [154], [154], [163], [169, 190], [100, 213], [159], [50, 165], [161, 65], [176, 188], [167], [164, 167], [170], [50], [162], [85, 190], [178], [182, 175], [173, 119], [119], [264], [182], [196, 180], [190, 38], [149, 261], [208, 43], [112, 183], [189], [181, 189], [79], [128], [184, 128], [217, 100], [100], [112], [201, 194], [172, 197], [210, 211], [221, 191], [191], [201], [75, 44], [112], [172, 70], [172], [], [264], [205, 14], [209, 206], [202], [202], [14], [209], [113], [43], [162], [58, 245], [210], [219, 247], [187, 214], [217], [113], [79], [186, 218], [186], [244, 222], [133], [220, 133], [225, 227], [79], [113, 223], [227], [113], [235, 231], [120], [72, 5], [113], [235], [120, 102], [251, 237], [236, 108], [242, 238], [108], [150], [242], [150], [150], [155, 143], [244], [16, 15], [34, 246], [58], [34], [79], [255], [248, 255], [16], [79], [44, 253], [252, 254], [257, 252], [152, 258], [113], [79], [152], [79], [17, 41], [149], [264], [], [224, 113], [266, 28], [28]], "fname": "quotearg_buffer_restyled", "n_num": 267}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 18, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     ebx, edi", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+argsize], argsize_0", "mov     rbp, options", "call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "mov     [rsp+58h+e], eax", "mov     r12, cs:slotvec_0", "test    ebx, ebx", "js      loc_81F9"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~rbp,options", "call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~r12,<TAG>", "test~ebx,ebx", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r14], eax", "mov     rax, val", "add     rsp, 28h", "pop     rbx", "pop     options", "pop     val", "pop     size", "pop     r14", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~rax,val", "add~rsp,0", "pop~rbx", "pop~options", "pop~val", "pop~size", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 23, 1, 2, 2, -1, 0.1794871794871795, ["movsxd  n, ebx", "shl     n, 4", "add     rbx, sv", "mov     r13, [rbx]", "mov     sv, [rbx+8]", "mov     eax, [options+4]", "or      eax, 1", "mov     [rsp+58h+flags], eax", "lea     r15, [options+8]", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, val; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "cmp     size, qsize", "ja      short loc_81E0"], ["movsxd~n,ebx", "shl~n,0", "add~rbx,sv", "mov~r13,<TAG>", "mov~sv,[rbx+0]", "mov~eax,[options+0]", "or~eax,0", "mov~[rsp+0],eax", "lea~r15,[options+0]", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,eax", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,val", "call~FOO", "add~rsp,<STR>", "cmp~size,qsize", "ja~FOO"]], [1, 1, 1, 2, 2, 16, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, size; n", "call    xmalloc", "mov     val, rax", "mov     [rbx+8], rax", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,size", "call~FOO", "mov~val,rax", "mov~[rbx+0],rax", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.07051282051282051, ["cmp     cs:nslots, ebx", "jg      short loc_8138"], ["cmp~<TAG>,ebx", "jg~FOO"]], [3, 0, 5, 4, 1, 11, 0, 1, 5, -1, 0.1282051282051282, ["mov     edi, cs:nslots", "mov     edx, r13d", "sub     edx, edi", "movsxd  rdx, edx", "shl     rdx, 4; n", "movsxd  rdi, edi", "shl     rdi, 4", "add     rdi, sv; s", "mov     esi, 0; c", "call    _memset", "mov     cs:nslots, r13d"], ["mov~edi,<TAG>", "mov~edx,r13d", "sub~edx,edi", "movsxd~rdx,edx", "shl~rdx,0", "movsxd~rdi,edi", "shl~rdi,0", "add~rdi,sv", "mov~esi,0", "call~FOO", "mov~<TAG>,r13d"]], [1, 0, 6, 0, 1, 9, 0, 2, 4, 0, 0.04487179487179487, ["mov     edi, 0; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     sv, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [sv], rax", "mov     [sv+8], rdx", "jmp     loc_810B"], ["mov~edi,0", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv", "mov~sv,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[sv+0],rdx", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, 1, 0.08974358974358974, ["lea     r13d, [n+1]", "movsxd  rsi, r13d", "shl     rsi, 4; n", "lea     e_0, slotvec0", "cmp     sv, rax", "jz      loc_8203"], ["lea~r13d,[n+0]", "movsxd~rsi,r13d", "shl~rsi,0", "lea~e_0,<TAG>", "cmp~sv,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 2, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_81FE"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     size, [qsize+1]", "mov     [rbx], size", "lea     qsize, slot0", "cmp     val, rax", "jz      short loc_81A3"], ["lea~size,[qsize+0]", "mov~<TAG>,size", "lea~qsize,<TAG>", "cmp~val,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "call    _free"], ["mov~rdi,val", "call~FOO"]]], "func_feature": [10, 2, 17, 0, 14, 17, 8, 111, 0.05266, 5, 13], "succs": [[], [0, 5], [], [2, 12], [2], [10, 3], [3], [6], [9, 7], [6], [8, 11], [], [4, 13], [4]], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     rbp, p", "mov     r12d, [p]", "test    o, o", "lea     p, default_quoting_options", "cmovz   o, p", "mov     esi, 38h ; '8'; s", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~rbp,p", "mov~r12d,<TAG>", "test~o,o", "lea~p,<TAG>", "cmovz~o,p", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["test    p, p", "lea     rax, default_quoting_options", "cmovz   p, rax", "mov     eax, esi", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     ecx, esi", "and     ecx, 1Fh", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "and     eax, 1", "retn"], ["test~p,p", "lea~rax,<TAG>", "cmovz~p,rax", "mov~eax,esi", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~ecx,esi", "and~ecx,0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "and~eax,0", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 2, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     r, default_quoting_options", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["test~o,o", "lea~r,<TAG>", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     dword ptr [o], 0Ah", "test    left_quote, left_quote", "jz      short loc_82FC"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,0", "test~left_quote,left_quote", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_82FC"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 1, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 1, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     [rsp+48h+buffer], buffer_0", "mov     r13, buffersize", "mov     r14, arg", "mov     r15, argsize", "mov     rbx, o", "test    o, o", "lea     r, default_quoting_options", "cmovz   rbx, r", "call    ___errno_location", "mov     rbp, r", "mov     r12d, [r]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "lea     r, [p+8]", "push    r; quote_these_too", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, [rsp+68h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffersize", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],buffer_0", "mov~r13,buffersize", "mov~r14,arg", "mov~r15,argsize", "mov~rbx,o", "test~o,o", "lea~r,<TAG>", "cmovz~rbx,r", "call~FOO", "mov~rbp,r", "mov~r12d,<TAG>", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "lea~r,[p+0]", "push~r", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffersize", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_40]", "mov     [size], rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]], [5, 2, 2, 5, 4, 57, 4, 5, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     r14, arg_0", "mov     [rsp+68h+argsize], argsize_0", "mov     r12, size", "mov     rbx, o", "test    o, o", "lea     rax, default_quoting_options", "cmovz   rbx, rax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     [rsp+68h+e], eax", "test    size, size", "setz    bpl", "movzx   ebp, bpl", "or      ebp, [p+4]", "lea     r15, [p+8]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     [rsp+88h+arg], arg_0", "mov     rdx, arg_0; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "mov     [rsp+88h+var_40], rax", "lea     arg_0, [rax+1]", "add     rsp, 20h", "mov     rdi, bufsize; n", "call    xmalloc", "mov     [rsp+68h+var_50], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     rdx, [rsp+88h+arg]; arg", "mov     rsi, bufsize; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "mov     edx, [rsp+88h+e]", "mov     [r13+0], edx", "add     rsp, 20h", "test    size, size", "jz      short loc_844C"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,arg_0", "mov~[rsp+0],argsize_0", "mov~r12,size", "mov~rbx,o", "test~o,o", "lea~rax,<TAG>", "cmovz~rbx,rax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "test~size,size", "setz~bpl", "movzx~ebp,bpl", "or~ebp,[p+0]", "lea~r15,[p+0]", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~[rsp+0],arg_0", "mov~rdx,arg_0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "lea~arg_0,[rax+0]", "add~rsp,<STR>", "mov~rdi,bufsize", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,bufsize", "mov~rdi,rax", "call~FOO", "mov~edx,[rsp+0]", "mov~[r13+0],edx", "add~rsp,<STR>", "test~size,size", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, 0, 0.0, ["mov     rax, [rsp+68h+var_50]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     bufsize", "pop     r15", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~bufsize", "pop~r15", "retn"]]], "func_feature": [4, 4, 5, 2, 3, 3, 1, 68, 0.0, 1, 6], "succs": [[2], [0, 2], []], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, o; o", "mov     edx, 0; size", "call    quotearg_alloc_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,o", "mov~edx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     sv, rax", "jz      short loc_84FF"], ["lea~rax,<TAG>", "cmp~sv,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rax, slot0", "cmp     rdi, rax", "jz      short loc_84DD"], ["mov~rdi,[sv+0]", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 1, 2, 2, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, cs:slotvec_0", "mov     eax, cs:nslots", "cmp     eax, 1", "jle     short loc_84AE"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "call    _free", "add     rbx, 10h", "cmp     rbx, rbp", "jnz     short loc_849D"], ["mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 1, 4, 0.023809523809523808, ["lea     rbx, [sv+18h]", "lea     eax, [rax-2]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]"], ["lea~rbx,[sv+0]", "lea~eax,[rax-2]+0]", "shl~rax,0", "lea~rbp,[sv+0]"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     cs:nslots, 1", "pop     rbx", "pop     rbp", "pop     sv", "retn"], ["mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~sv", "retn"]], [0, 0, 1, 0, 1, 4, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rdi,sv", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 36, 0.08333, 5, 2], "succs": [[6, 7], [0, 2], [0], [1, 5], [1, 4], [4], [], [6]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 1, 4, 1, 0, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      loc_8612"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [12, 0, 2, 0, 1, 19, 1, 2, 0, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_8617"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 2, 30, 0.03333, 1, 2], "succs": [[2, 3], [], [1, 4], [], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 8, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_86B8"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [11, 0, 2, 0, 1, 18, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_86BD"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~s,arg", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 2, 30, 0.03333, 1, 2], "succs": [[], [0, 3], [], [2, 4], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 19, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 2, 1, 2, 36, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rbp, arg", "mov     r12, argsize", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "mov     rcx, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+58h+options.style], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+58h+options.quote_these_too+8], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+58h+options.quote_these_too+18h], rcx", "mov     [rsp+58h+options.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+58h+options.right_quote], rax", "movsx   esi, dl; c", "mov     rbx, rsp", "mov     edx, 1; i", "mov     arg, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rdi, [rsp+58h+var_20]", "xor     rdi, fs:28h", "jnz     short loc_87A5"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,arg", "mov~r12,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "movsx~esi,dl", "mov~rbx,rsp", "mov~edx,0", "mov~arg,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,0", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     arg", "pop     argsize", "retn"], ["add~rsp,0", "pop~rbx", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 2], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "movsx   edx, sil; ch_0", "mov     ch_0, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "movsx~edx,sil", "mov~ch_0,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 3Ah ; ':'; ch_0", "call    quotearg_char", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3Ah ; ':'; ch_0", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[13, 1, 2, 0, 2, 27, 1, 3, 0, 0, 0.16666666666666666, ["mov     ebp, edi", "mov     r12, arg", "mov     [rsp+58h+options.style], esi", "mov     [rsp+58h+options.flags], 0", "mov     [rsp+58h+options.quote_these_too], 0", "mov     [rsp+58h+options.quote_these_too+4], 0", "mov     [rsp+58h+options.quote_these_too+8], 0", "mov     [rsp+58h+options.quote_these_too+0Ch], 0", "mov     [rsp+58h+options.quote_these_too+10h], 0", "mov     [rsp+58h+options.quote_these_too+14h], 0", "mov     [rsp+58h+options.quote_these_too+18h], 0", "mov     [rsp+58h+options.quote_these_too+1Ch], 0", "mov     [rsp+58h+options.left_quote], 0", "mov     [rsp+58h+options.right_quote], 0", "mov     rbx, rsp", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     n, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rcx, [rsp+58h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_88B3"], ["mov~ebp,edi", "mov~r12,arg", "mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rbx,rsp", "mov~edx,0", "mov~esi,<STR>", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,0", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 0, 9, 1, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_88AE"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     n", "pop     arg", "retn"], ["add~rsp,0", "pop~rbx", "pop~n", "pop~arg", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 2, 6, 1, 5, 4, 8, 43, 0.03333, 1, 2], "succs": [[2, 4], [0, 3], [], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     n", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~n", "pop~arg", "pop~argsize", "retn"]], [0, 1, 2, 1, 2, 36, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     ebp, edi", "mov     r12, arg", "mov     r13, argsize", "mov     rax, fs:28h", "mov     [rsp+68h+var_30], rax", "xor     eax, eax", "mov     arg, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+68h+o.style], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+68h+o.quote_these_too+8], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     [rsp+68h+o.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+68h+o.right_quote], rax", "mov     rbx, rsp", "mov     n, rbx; o", "call    set_custom_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rdi, [rsp+68h+var_30]", "xor     rdi, fs:28h", "jnz     short loc_8963"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~r12,arg", "mov~r13,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~arg,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rbx,rsp", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 9, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, quote_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 1, 2], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 4, 5, 0.0, 0, 2], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quote_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 8, 6, 0.0, 0, 2], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.05, ["mov     rcx, message", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     esi, r13d; errnum", "mov     edi, r12d; status", "mov     eax, 0", "call    _error", "jmp     short loc_8A5D"], ["mov~rcx,message", "lea~rdx,<TAG>", "mov~esi,r13d", "mov~edi,r12d", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, -1, 0.15000000000000002, ["mov     rbx, message", "test    file, file", "jz      short loc_8A6E"], ["mov~rbx,message", "test~file,file", "jz~FOO"]], [0, 0, 0, 0, 1, 8, 0, 1, 3, -1, 0.0, ["mov     rdi, message; ptr", "call    _free", "pop     message", "pop     file", "pop     status", "pop     errnum", "pop     line_number", "retn"], ["mov~rdi,message", "call~FOO", "pop~message", "pop~file", "pop~status", "pop~errnum", "pop~line_number", "retn"]], [1, 0, 1, 0, 1, 8, 0, 1, 2, -1, 0.05, ["mov     r9, message", "lea     r8, aLuBytesSCopied+1Bh; format", "mov     ecx, r14d; lineno", "mov     rdx, file; fname", "mov     esi, r13d; errnum", "mov     edi, r12d; status", "mov     eax, 0", "call    _error_at_line"], ["mov~r9,message", "lea~r8,<TAG>", "mov~ecx,r14d", "mov~rdx,file", "mov~esi,r13d", "mov~edi,r12d", "mov~eax,0", "call~FOO"]], [0, 0, 5, 0, 1, 14, 1, 2, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12d, edi", "mov     r13d, esi", "mov     rbp, file", "mov     r14d, ecx", "mov     errnum, args; args", "mov     status, format; format", "call    xvasprintf", "test    message, message", "jz      short loc_8A8A"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12d,edi", "mov~r13d,esi", "mov~rbp,file", "mov~r14d,ecx", "mov~errnum,args", "mov~status,format", "call~FOO", "test~message,message", "jz~FOO"]], [4, 0, 0, 0, 4, 12, 0, 4, 1, 0, 0.0, ["mov     edx, 5; category", "lea     rsi, aUnableToDispla; \"unable to display error message\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "call    _abort"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [8, 2, 11, 0, 6, 6, 1, 52, 0.04167, 2, 0], "succs": [[2], [0, 3], [], [2], [1, 5], []], "fname": "verror_at_line", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[4, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, format; format", "mov     r9, args; args", "mov     ecx, 0; line_number", "mov     edx, 0; file", "call    verror_at_line", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,format", "mov~r9,args", "mov~ecx,0", "mov~edx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 8, 0.0, 0, 2], "succs": [[]], "fname": "verror", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[6, 0, 1, 2, 2, 31, 0, 3, 0, 0, 0.0, ["mov     r15, [authors+38h]; jumptable 0000000000008B8F case 8", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     n_authors, [authors+20h]", "mov     rax, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+10h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+8]", "mov     [rsp+58h+var_48], rdi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+80h+var_58]", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 4, 0, 1, 3, -1, 0.18095238095238098, ["lea     rdx, off_F784", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 1, 1, 1, 2, 27, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+30h]; jumptable 0000000000008B8F case 7", "mov     r14, [authors+28h]", "mov     r13, [authors+20h]", "mov     n_authors, [authors+18h]", "mov     rax, [authors+10h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+8]", "mov     [rsp+58h+var_50], rcx", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r9, [rsp+78h+var_58]", "mov     r8, [rsp+78h+var_50]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 1, 1, 2, 21, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+20h]; jumptable 0000000000008B8F case 5", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 14, 0, 3, 4, -1, 0.0, ["mov     n_authors, [authors+8]; jumptable 0000000000008B8F case 2", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 16, 0, 3, 4, -1, 0.0, ["mov     r13, [authors+10h]; jumptable 0000000000008B8F case 3", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 1, 2, 0.030952380952380953, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_8B1E"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 15, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rbp, stream", "mov     rbx, authors", "mov     r12, n_authors", "test    command_name, command_name", "jz      loc_8B91"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,stream", "mov~rbx,authors", "mov~r12,n_authors", "test~command_name,command_name", "jz~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 3, 0, 0.009523809523809525, ["mov     r15, [authors+40h]; jumptable 0000000000008B8F default case", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [8, 0, 12, 0, 4, 20, 0, 5, 2, 1, 0.17142857142857143, ["mov     edx, 5; category", "lea     rsi, aC_0; \"(C)\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8d, 7E3h", "mov     rcx, rax", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     edx, 5; category", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_8EEC; jumptable 0000000000008B8F default case"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8d,0", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000008B8F case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [6, 0, 1, 2, 2, 20, 0, 3, 4, -1, 0.0, ["mov     r14, [authors+18h]; jumptable 0000000000008B8F case 4", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 1, 1, 2, 2, 25, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+28h]; jumptable 0000000000008B8F case 6", "mov     r14, [authors+20h]", "mov     r13, [authors+18h]", "mov     n_authors, [authors+10h]", "mov     rax, [authors+8]", "mov     [rsp+58h+var_58], rax", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, r12", "mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,r12", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+40h]; jumptable 0000000000008B8F case 9", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_8BE3; jumptable 0000000000008B8F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 4, -1, 0.0, ["mov     authors, [authors]; jumptable 0000000000008B8F case 1", "mov     edx, 5; category", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO"]], [2, 0, 13, 0, 1, 7, 0, 1, 1, 2, 0.030952380952380953, ["mov     n_authors, version", "mov     authors, package", "mov     version, command_name", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~n_authors,version", "mov~authors,package", "mov~version,command_name", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO"]]], "func_feature": [26, 1, 39, 4, 16, 26, 2, 289, 0.02649, 16, 13], "succs": [[10], [0, 2, 3, 4, 5, 10, 11, 12, 13, 14], [10], [10], [10], [10], [9], [6, 15], [10], [8, 1], [], [10], [10], [10], [10], [9]], "fname": "version_etc_arn", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 4, 1, 0, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "cmp     qword ptr [authors], 0", "jz      short loc_8F98"], ["sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 2, 1, 0, 3, 0, 1, 0, -1, 0.08333333333333333, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_8F83"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 0, -1, 0.08333333333333333, ["mov     r9d, 0"], ["mov~r9d,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     r9d, 0", "jmp     short loc_8F8E"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 0, 1, 1, 3, 0, 1, 0, -1, 0.0, ["call    version_etc_arn", "add     rsp, 8", "retn"], ["call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 5, 6, 0, 12, 0.05, 0, 3], "succs": [[2, 3], [1, 4], [1], [4], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0.09821428571428571, ["mov     rax, [authors+8]", "lea     r10, [rax+8]", "mov     [authors+8], r10"], ["mov~rax,[authors+0]", "lea~r10,[rax+0]", "mov~[authors+0],r10"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 4, 0.25, ["mov     r10d, [authors]", "cmp     r10d, 2Fh ; '/'", "ja      short loc_8FBC"], ["mov~r10d,<TAG>", "cmp~r10d,0", "ja~FOO"]], [2, 0, 8, 1, 0, 6, 1, 1, 0, 5, 0.0, ["sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     r9d, 0", "jmp     short loc_8FDE"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,0", "jmp~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jz      short loc_8FF7"], ["add~n_authors,0", "cmp~n_authors,0", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, 1, 0.21428571428571427, ["mov     authors, rsp; authors", "call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_9014"], ["mov~authors,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 2, 0.3571428571428571, ["mov     rax, [rax]", "mov     [rsp+n_authors*8+68h+authtab], rax", "test    rax, rax", "jz      short loc_8FF7"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 2, 0, 5, 0, 1, 2, 3, 0.09821428571428571, ["mov     eax, r10d", "add     rax, [authors+10h]", "add     r10d, 8", "mov     [authors], r10d", "jmp     short loc_8FC8"], ["mov~eax,r10d", "add~rax,[authors+0]", "add~r10d,0", "mov~<TAG>,r10d", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 8, 1, 9, 11, 3, 32, 0.12698, 1, 5], "succs": [[5], [0, 6], [1], [1, 4], [8, 7], [3, 4], [5], [], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "lea     rax, [rsp+0D8h+arg_0]", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_90BB"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "test    al, al", "jz      short loc_9065"], ["sub~rsp,0", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 0, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[10, 0, 0, 0, 6, 30, 0, 6, 0, 0, 0.0, ["push    rbx", "mov     edx, 5; category", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     edx, 5; category", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_D4A2", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "pop     rbx", "retn"], ["push~rbx", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "pop~rbx", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 30, 0.0, 7, 0], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_9165"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_9163"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 8, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 2, 2, 0, 10, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_9198"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 2, 1, 4, 0, 1, 0, -1, 0.0, ["imul    n, s; n", "call    xmalloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 15, 0.0, 0, 4], "succs": [[1, 2], [], []], "fname": "xnmalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 2], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.18333333333333332, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_91CB"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, n", "test    n, n", "jnz     short loc_91B9"], ["push~rbx", "mov~rbx,n", "test~n,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_91CD"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_91D9"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, -1, 0.016666666666666666, ["call    _free", "mov     eax, 0", "jmp     short loc_91CB"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 4, 8, 0, 7, 9, 5, 18, 0.04762, 0, 0], "succs": [[3, 4], [0, 2], [0, 5], [4, 6], [], [4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 2, 2, 0, 11, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, s", "mov     rax, n", "mul     rcx", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_920F"], ["sub~rsp,0", "mov~rcx,s", "mov~rax,n", "mul~,rcx", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [1, 0, 0, 2, 1, 4, 0, 1, 1, 0, 0.0, ["imul    n, s; n", "call    xrealloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 16, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnrealloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.026785714285714284, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 1, 0.04464285714285714, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     s", "cmp     rax, n", "jbe     short loc_929B"], ["mov~rax,0", "mov~edx,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     r9, s", "mov     rcx, [pn]", "test    p, p", "jz      short loc_9259"], ["sub~rsp,0", "mov~r9,s", "mov~rcx,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 1, 0, 9, 2, 1, 2, -1, 0.09821428571428571, ["mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jz      short loc_9245"], ["mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jz~FOO"]], [1, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.0625, ["test    n, n", "jnz     short loc_927A"], ["test~n,n", "jnz~FOO"]], [1, 1, 3, 1, 0, 7, 1, 0, 2, -1, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     s", "test    n, n", "setz    r8b", "movzx   r8d, r8b", "lea     rcx, [r8+n]"], ["mov~eax,<STR>", "mov~edx,0", "div~,s", "test~n,n", "setz~r8b", "movzx~r8d,r8b", "lea~rcx,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 6, 0, 9, 10, 0, 39, 0.02579, 0, 6], "succs": [[5], [0, 8], [1, 6], [], [3, 5], [], [4, 7], [4], []], "fname": "x2nrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.03333333333333333, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.06666666666666667, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_92EC"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 1, 2, 0, 0, 5, 2, 0, 1, -1, 0.06666666666666667, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_92C6"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     rax, [pn]", "test    p, p", "jz      short loc_92D6"], ["sub~rsp,0", "mov~rax,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["mov     [pn], rax", "mov     pn, rax; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 3, 5, 0, 7, 7, 0, 22, 0.02381, 0, 2], "succs": [[6], [0, 5], [4, 6], [1, 2], [], [], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "pop     s", "retn"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "mov~esi,0", "mov~rdi,rax", "call~FOO", "pop~s", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 3, 2, 0, 10, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_933B"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_933B"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 3, 4, 0, 4, 4, 0, 16, 0.04167, 0, 3], "succs": [[1, 2], [], [1, 3], []], "fname": "xcalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, p", "mov     rbx, s", "mov     p, s; n", "call    xmalloc", "mov     rdx, s; n", "mov     rsi, p; src", "mov     rdi, rax; dest", "call    _memcpy", "add     rsp, 8", "pop     s", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,p", "mov~rbx,s", "mov~p,s", "call~FOO", "mov~rdx,s", "mov~rsi,p", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~s", "pop~p", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 15, 0.0, 0, 2], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[4, 0, 0, 2, 1, 11, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, string", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rsi, rcx; s", "mov     rdi, rdx; p", "call    xmemdup", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,string", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rsi,rcx", "mov~rdi,rdx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 11, 0.0, 0, 2], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[5, 0, 0, 1, 3, 12, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste_1; \"memory exhausted\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "mov     rcx, rax", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     esi, 0; errnum", "mov     eax, 0", "call    _error", "call    _abort"], ["sub~rsp,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edi,<TAG>", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 11, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 5, 1, 0, 4, 1, 1, 0, 0, 0.21428571428571427, ["or      r9d, eax", "sub     r8d, 1", "cmp     r8d, 0FFFFFFFFh", "jz      short loc_942A"], ["or~r9d,eax", "sub~r8d,0", "cmp~r8d,0", "jz~FOO"]], [0, 0, 5, 1, 0, 4, 0, 1, 3, 2, 0.07142857142857142, ["imul    rcx, base", "mov     [x], rcx", "mov     eax, r10d", "jmp     short loc_93FC"], ["imul~rcx,base", "mov~<TAG>,rcx", "mov~eax,r10d", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 3, 2, 0.07142857142857142, ["mov     [x], rbx", "mov     eax, r11d"], ["mov~<TAG>,rbx", "mov~eax,r11d"]], [1, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     r9d, 0", "mov     eax, r9d", "retn"], ["mov~r9d,0", "mov~eax,r9d", "retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    edx, edx", "jz      short loc_9420"], ["test~edx,edx", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 0.0, ["mov     eax, r9d", "pop     rbx", "retn"], ["mov~eax,r9d", "pop~rbx", "retn"]], [0, 0, 5, 1, 0, 4, 0, 0, 2, 3, 0.2857142857142857, ["mov     rcx, [x]", "mov     rax, rcx", "mul     base", "jo      short loc_93F6"], ["mov~rcx,<TAG>", "mov~rax,rcx", "mul~,base", "jo~FOO"]], [4, 0, 5, 0, 0, 8, 0, 1, 1, 4, 0.11904761904761904, ["push    rbx", "lea     r8d, [rdx-1]", "mov     r9d, 0", "movsxd  base, esi", "mov     r10d, 0", "mov     rbx, 0FFFFFFFFFFFFFFFFh", "mov     r11d, 1", "jmp     short loc_9409"], ["push~rbx", "lea~r8d,[rdx-1]+0]", "mov~r9d,0", "movsxd~base,esi", "mov~r10d,0", "mov~rbx,0", "mov~r11d,0", "jmp~FOO"]]], "func_feature": [0, 2, 4, 0, 8, 9, 8, 30, 0.09524, 0, 3], "succs": [[5, 6], [0], [0], [], [3, 7], [], [1, 2], [6]], "fname": "bkm_scale_by_power", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 48, 0, 0, 3, 0, 1, 0, 0, 0.0028161802355350742, ["mov     r13d, 4", "cmp     edx, 22h ; '\"'", "jnz     loc_97EA"], ["mov~r13d,0", "cmp~edx,0", "jnz~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 3, 0.072452636968766, ["mov     edx, [r15]", "test    edx, edx", "jz      short loc_954A"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 14, 4, 0.0011947431302270011, ["mov     eax, 0; jumptable 0000000000009631 case 33"], ["mov~eax,0"]], [0, 0, 30, 1, 0, 5, 0, 1, 13, 3, 0.18228366615463387, ["movzx   r12d, r12b", "lea     rdx, off_F8F8", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~r12d,r12b", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     loc_97C2"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_9675"], ["test~rsi,rsi", "jnz~FOO"]], [2, 0, 32, 0, 0, 6, 0, 1, 15, 4, 0.004096262160778289, ["cmp     byte ptr [rbx+2], 42h ; 'B'", "setz    bl", "movzx   ebx, bl", "lea     ebx, [rbx+rbx+1]", "mov     esi, 400h", "jmp     short loc_9611"], ["cmp~[yte ptr [rbx+0],0", "setz~bl", "movzx~ebx,bl", "lea~ebx,[rbx+0]", "mov~esi,0", "jmp~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 14, 5, 0.010752688172043012, ["cmp     al, 69h ; 'i'", "jz      short loc_95F2"], ["cmp~al,0", "jz~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_97C2"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_9778"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 cases 9,41", "mov     edx, 1; power", "call    bkm_scale_by_power", "jmp     loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 case 23", "mov     edx, 8; power", "call    bkm_scale_by_power", "jmp     short loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 7, 4, 0.011264720942140297, ["mov     r13d, 1", "jmp     short loc_9550"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 61, 0, 2, 14, 1, 3, 1, 4, 0.01561699948796723, ["mov     r12, s", "mov     rbp, ptr", "mov     r14d, edx", "lea     rax, [rsp+68h+t_ptr]", "test    ptr, ptr", "cmovz   rbp, rax", "call    ___errno_location", "mov     r15, rax", "mov     dword ptr [rax], 0", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_94B6"], ["mov~r12,s", "mov~rbp,ptr", "mov~r14d,edx", "lea~rax,[rsp+0]", "test~ptr,ptr", "cmovz~rbp,rax", "call~FOO", "mov~r15,rax", "mov~<TAG>,0", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 63, 1, 0, 14, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     [rsp+68h+val], val_0", "mov     [rsp+68h+valid_suffixes], valid_suffixes_0", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      short loc_9490"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],val_0", "mov~<TAG>,valid_suffixes_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     p", "pop     r12", "pop     r13", "pop     strtol_base", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~r13", "pop~strtol_base", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.030721966205837174, ["mov     eax, r13d", "mov     rdi, [rsp+68h+var_40]", "xor     rdi, fs:28h", "jnz     short loc_981C"], ["mov~eax,r13d", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0006400409626216078, ["mov     r13d, 4", "jmp     short loc_97EA"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 3, 0.00819252432155658, ["mov     rdi, [rsp+68h+valid_suffixes]; s", "test    rdi, rdi", "jz      loc_980C"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 40, 1, 0, 5, 0, 1, 11, 5, 0.03225806451612903, ["movzx   eax, al", "lea     rdx, off_F838", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 41, 0, 0, 3, 0, 1, 10, 5, 0.16129032258064516, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'; switch 48 cases", "ja      loc_9607; jumptable 0000000000009594 default case"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 57, 0, 1, 9, 0, 2, 4, 4, 0.06912442396313365, ["mov     ecx, 0; group", "mov     edx, r14d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    ___strtoul_internal", "mov     [rsp+68h+tmp], rax", "mov     ch_0, [p+0]", "cmp     rbx, s", "jz      short loc_950E"], ["mov~ecx,0", "mov~edx,r14d", "mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~[rsp+0],rax", "mov~ch_0,[p+0]", "cmp~rbx,s", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_9656"], ["mov~esi,0", "jmp~FOO"]], [1, 1, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 0000000000009631 case 32", "mov     esi, 0", "mov     edx, 200h", "mov     rax, rdx", "mul     rcx", "jo      short loc_966E"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,<STR>", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [2, 0, 31, 1, 0, 3, 0, 1, 12, 3, 0.19713261648745517, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      loc_97AA; jumptable 0000000000009631 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [3, 0, 33, 0, 0, 4, 0, 1, 15, 4, 0.004352278545826932, ["mov     ebx, 1", "mov     esi, 400h", "cmp     al, 42h ; 'B'", "jnz     short loc_9611"], ["mov~ebx,0", "mov~esi,0", "cmp~al,0", "jnz~FOO"]], [1, 1, 32, 0, 0, 3, 0, 1, 14, 4, 0.008192524321556578, ["mov     ebx, 2", "mov     esi, 3E8h", "jmp     short loc_9611"], ["mov~ebx,0", "mov~esi,<STR>", "jmp~FOO"]], [2, 0, 32, 0, 0, 3, 0, 1, 13, 4, 0.008192524321556578, ["mov     ebx, 1", "mov     esi, 400h", "jmp     short loc_9611"], ["mov~ebx,0", "mov~esi,0", "jmp~FOO"]], [2, 0, 32, 0, 0, 2, 0, 0, 11, 4, 0.1385048643113159, ["mov     ebx, 1; jumptable 0000000000009594 default case", "mov     esi, 400h; base"], ["mov~ebx,0", "mov~esi,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 2, 0.0007680491551459293, ["mov     r13d, 4", "jmp     short loc_97EA"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 47, 0, 1, 4, 1, 2, 7, 3, 0.025601638504864313, ["movsx   esi, sil; c", "call    _strchr", "test    rax, rax", "jz      loc_9814"], ["movsx~esi,sil", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["add     rcx, rcx", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     short loc_97C2"], ["add~rcx,rcx", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 cases 11,43", "mov     edx, 2; power", "call    bkm_scale_by_power", "jmp     loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 0000000000009631 case 0", "mov     esi, 0", "mov     edx, 400h", "mov     rax, rdx", "mul     rcx", "jo      short loc_96B7"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 8, 2, 0.002304147465437788, ["mov     rsi, [rsp+68h+val]", "mov     [rsi], rax", "jmp     loc_97EA"], ["mov~rsi,[rsp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 7, 3, 0.11162314388120839, ["cmp     [rsp+68h+valid_suffixes], 0", "jz      short loc_9596"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 4, 1, 0, 8, 2, 0, 15, 3, 0.027905785970302098, ["or      r13d, eax", "movsxd  suffixes, ebx", "add     suffixes, [p+0]", "mov     [p+0], rbx", "mov     eax, r13d", "or      eax, 2", "cmp     byte ptr [rbx], 0", "cmovnz  r13d, eax"], ["or~r13d,eax", "movsxd~suffixes,ebx", "add~suffixes,[p+0]", "mov~[p+0],rbx", "mov~eax,r13d", "or~eax,0", "cmp~<TAG>,0", "cmovnz~r13d,eax"]], [2, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["shl     rcx, 9", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     loc_97C2"], ["shl~rcx,0", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [2, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["shl     rcx, 0Ah", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     loc_97C2"], ["shl~rcx,0", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     loc_97C2"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 case 3", "mov     edx, 6; power", "call    bkm_scale_by_power", "jmp     loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 cases 5,37", "mov     edx, 3; power", "call    bkm_scale_by_power", "jmp     loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 case 14", "mov     edx, 5; power", "call    bkm_scale_by_power", "jmp     loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 cases 18,50", "mov     edx, 4; power", "call    bkm_scale_by_power", "jmp     short loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000009631 case 24", "mov     edx, 7; power", "call    bkm_scale_by_power", "jmp     short loc_97C2"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 6, 2, 0.016769073220686125, ["movzx   esi, byte ptr [rbx]", "test    sil, sil", "jz      loc_97EA"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_96BE"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_969F"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 61, 1, 0, 2, 0, 0, 3, 4, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 61, 0, 0, 3, 1, 1, 2, 3, 0.04582693292370712, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_94AF"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val_0, __PRETTY_FUNCTION___4162; \"xstrtoumax\"", "mov     edx, 54h ; 'T'; line", "lea     ptr, file; \"lib/xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "call    ___assert_fail"], ["lea~val_0,<TAG>", "mov~edx,0", "lea~ptr,<TAG>", "lea~s,<TAG>", "call~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 10, 2, 0.0007680491551459293, ["mov     rax, [rsp+68h+tmp]", "mov     rsi, [rsp+68h+val]", "mov     [rsi], rax", "or      r13d, 2", "jmp     loc_97EA"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~<TAG>,rax", "or~r13d,0", "jmp~FOO"]], [0, 0, 43, 0, 1, 5, 1, 2, 9, 3, 0.1597542242703533, ["movsx   esi, r12b; c", "mov     rdi, [rsp+68h+valid_suffixes]; s", "call    _strchr", "test    rax, rax", "jz      short loc_95A3"], ["movsx~esi,r12b", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 13, 2, 0.009216589861751152, ["mov     rax, [rsp+68h+tmp]; jumptable 0000000000009631 default case", "mov     base, [rsp+68h+val]", "mov     [rsi], rax", "or      r13d, 2", "jmp     short loc_97EA"], ["mov~rax,[rsp+0]", "mov~base,[rsp+0]", "mov~<TAG>,rax", "or~r13d,0", "jmp~FOO"]], [1, 0, 38, 0, 1, 5, 1, 2, 12, 5, 0.029185867895545316, ["mov     esi, 30h ; '0'; jumptable 0000000000009594 cases 0,2,6,8,11,15,20,21,34,38,40,47", "mov     rdi, [rsp+68h+valid_suffixes]; s", "call    _strchr", "test    rax, rax", "jz      short loc_9633"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_975D"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 0000000000009631 case 53", "mov     esi, 0", "mov     edx, 2", "mov     rax, rdx", "mul     rcx", "jo      short loc_9771"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [2, 0, 45, 0, 0, 3, 0, 1, 8, 4, 0.03225806451612903, ["mov     [rsp+68h+tmp], 1", "mov     r13d, 0", "jmp     short loc_9557"], ["mov~[rsp+0],0", "mov~r13d,0", "jmp~FOO"]], [2, 0, 58, 0, 0, 3, 0, 1, 3, 2, 0.059395801331285206, ["mov     r13d, 4", "cmp     bl, 2Dh ; '-'", "jz      loc_97EA"], ["mov~r13d,0", "cmp~bl,0", "jz~FOO"]], [1, 0, 47, 0, 0, 1, 0, 0, 6, 4, 0.07885304659498207, ["mov     r13d, 0"], ["mov~r13d,0"]], [1, 0, 36, 0, 0, 3, 0, 1, 13, 5, 0.02048131080389145, ["movzx   eax, byte ptr [rbx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_95E6"], ["movzx~eax,[yte ptr [rbx+0]", "cmp~al,0", "jz~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 8, 3, 0.15821812596006143, ["movzx   r12d, byte ptr [rbx]", "test    r12b, r12b", "jz      loc_97DD"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 9, 2, 0.020737327188940093, ["mov     rax, [rsp+68h+tmp]", "mov     rsi, [rsp+68h+val]", "mov     [rsi], rax"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~<TAG>,rax"]]], "func_feature": [16, 18, 68, 1, 64, 99, 2, 251, 0.03007, 6, 13], "succs": [[16, 12], [0, 60], [36], [32, 33, 2, 43, 40, 41, 10, 11, 44, 54, 23, 57, 42], [36], [4, 37], [24], [25, 6], [36], [8, 31], [36], [36], [35], [49], [51, 13], [], [50, 15], [16], [17, 45], [28, 55], [19, 28], [1, 18], [5], [5, 22], [3, 54], [24, 26], [24], [24], [24], [16], [58, 29], [36], [36], [46, 47], [16], [34, 62], [63], [36], [36], [36], [36], [36], [36], [36], [36], [16, 30], [38, 39], [46], [49], [48, 59], [], [], [16], [20, 52], [16], [27, 61], [9], [56, 9], [62], [16, 21], [35], [26, 7], [53, 63], [16]], "fname": "xstrtoumax", "n_num": 64}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0.042279411764705885, ["mov     rax, [args+8]", "lea     rdx, [rax+8]", "mov     [args+8], rdx"], ["mov~rax,[args+0]", "lea~rdx,[rax+0]", "mov~[args+0],rdx"]], [1, 0, 8, 0, 0, 3, 0, 1, 7, 5, 0.13970588235294118, ["mov     edx, [args+0]", "cmp     edx, 2Fh ; '/'", "ja      short loc_98DA"], ["mov~edx,[args+0]", "cmp~edx,0", "ja~FOO"]], [2, 0, 8, 1, 1, 6, 0, 2, 6, 6, 0.125, ["add     rdi, 1; n", "call    xmalloc", "mov     r15, rax", "mov     r12, p", "mov     r14, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_9914"], ["add~rdi,0", "call~FOO", "mov~r15,rax", "mov~r12,p", "mov~r14,0", "jmp~FOO"]], [2, 0, 8, 2, 1, 14, 0, 2, 9, 3, 0.09558823529411764, ["mov     rsi, [rax]; src", "mov     eax, 0", "mov     rcx, r14", "mov     rdi, rsi", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rbx, [rax-1]", "mov     rdx, len; n", "mov     rdi, p; dest", "call    _memcpy", "add     p, len", "sub     rbp, 1", "jz      short loc_993C"], ["mov~rsi,<TAG>", "mov~eax,0", "mov~rcx,r14", "mov~rdi,rsi", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rbx,[rax-1]+0]", "mov~rdx,len", "mov~rdi,p", "call~FOO", "add~p,len", "sub~rbp,0", "jz~FOO"]], [1, 0, 15, 2, 0, 5, 0, 1, 3, 5, 0.058823529411764705, ["mov     ecx, edi", "add     rcx, r9", "add     edi, 8", "mov     [rsp+58h+ap.gp_offset], edi", "jmp     short loc_988E"], ["mov~ecx,edi", "add~rcx,r9", "add~edi,0", "mov~<TAG>,edi", "jmp~FOO"]], [1, 0, 15, 0, 0, 3, 0, 1, 2, 6, 0.10294117647058823, ["mov     edi, [rsp+58h+ap.gp_offset]", "cmp     edi, 2Fh ; '/'", "ja      short loc_9880"], ["mov~edi,<TAG>", "cmp~edi,0", "ja~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 5, 3, 0.20588235294117646, ["cmp     rdi, 7FFFFFFFh", "ja      loc_98C7"], ["cmp~rdi,0", "ja~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.11029411764705882, ["mov     rax, r15", "mov     rbx, [rsp+58h+var_40]", "xor     rbx, fs:28h", "jnz     short loc_9988"], ["mov~rax,r15", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 3, 5, 0.058823529411764705, ["mov     rcx, [rsp+58h+ap.overflow_arg_area]", "lea     rdi, [rcx+8]", "mov     [rsp+58h+ap.overflow_arg_area], rdi"], ["mov~rcx,[rsp+0]", "lea~rdi,[rcx+0]", "mov~[rsp+0],rdi"]], [1, 0, 8, 2, 0, 5, 0, 1, 8, 4, 0.042279411764705885, ["mov     eax, edx", "add     rax, [args+10h]", "add     edx, 8", "mov     [args+0], edx", "jmp     short loc_98E6"], ["mov~eax,edx", "add~rax,[args+0]", "add~edx,0", "mov~[args+0],edx", "jmp~FOO"]], [1, 0, 15, 1, 0, 10, 0, 1, 4, 4, 0.20220588235294118, ["mov     rdi, [rcx]", "mov     rcx, r8", "repne scasb", "not     rcx", "lea     rdi, [totalsize+rcx-1]", "cmp     rdi, totalsize", "cmovb   rdi, r8", "mov     rdx, totalsize", "sub     rsi, 1", "jz      loc_9963"], ["mov~rdi,<TAG>", "mov~rcx,r8", "scasb~<TAG>,", "not~rcx", "lea~rdi,[totalsize+0]", "cmp~rdi,totalsize", "cmovb~rdi,r8", "mov~rdx,totalsize", "sub~rsi,0", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 6, 2, 0.0661764705882353, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "mov     r15d, 0", "jmp     short loc_9941"], ["call~FOO", "mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.07720588235294118, ["mov     byte ptr [p], 0"], ["mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 15, 0, 0, 8, 0, 1, 1, 7, 0.04044117647058824, ["mov     rbp, i", "mov     r13, args", "mov     r9, rax", "mov     args, i", "mov     edx, 0", "mov     r8, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "jmp     short loc_98B2"], ["mov~rbp,i", "mov~r13,args", "mov~r9,rax", "mov~args,i", "mov~edx,0", "mov~r8,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 1, 3, 0.014705882352941176, ["mov     edi, 1; n", "call    xmalloc", "mov     r12, rax", "mov     r15, p"], ["mov~edi,0", "call~FOO", "mov~r12,rax", "mov~r15,p"]], [1, 0, 17, 1, 0, 18, 2, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     rax, [args]", "mov     rdx, [args+8]", "mov     qword ptr [rsp+58h+ap.gp_offset], rax", "mov     [rsp+58h+ap.overflow_arg_area], rdx", "mov     rax, [args+10h]", "mov     [rsp+58h+ap.reg_save_area], rax", "test    i, i", "jz      loc_992C"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,[args+0]", "mov~<TAG>,rax", "mov~[rsp+0],rdx", "mov~rax,[args+0]", "mov~[rsp+0],rax", "test~i,i", "jz~FOO"]]], "func_feature": [5, 3, 17, 1, 18, 23, 1, 102, 0.0768, 1, 10], "succs": [[3], [0, 10], [1], [1, 13], [11], [9, 4], [2, 12], [], [14, 7], [11], [3], [5, 6], [8], [8], [], [5], [13], [16, 15]], "fname": "xstrcat", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 0, 0.10833333333333334, ["mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_9A21"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 0, 0.16041666666666665, ["mov     rdi, rsp; resultp", "mov     rdx, args; args", "mov     args, format; args", "call    rpl_vasprintf", "test    eax, eax", "js      short loc_9A0B"], ["mov~rdi,rsp", "mov~rdx,args", "mov~args,format", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 1, 0, 0.041666666666666664, ["mov     r8, f", "cmp     al, 25h ; '%'", "jnz     short loc_99D4"], ["mov~r8,f", "cmp~al,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 0, 0.0375, ["cmp     byte ptr [format+1], 73h ; 's'", "jnz     short loc_99D4"], ["cmp~[yte ptr [format+0],0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 5, 0, 0.0625, ["cmp     cl, 25h ; '%'", "jnz     short loc_99D4"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 0, 0.008333333333333333, ["cmp     byte ptr [format+argcount*2+1], 73h ; 's'", "jz      short loc_99BA"], ["cmp~[yte ptr [format+0],0", "jz~FOO"]], [1, 0, 12, 1, 0, 4, 1, 1, 4, 0, 0.09791666666666667, ["add     argcount, 1", "movzx   ecx, byte ptr [format+argcount*2]", "test    cl, cl", "jz      short loc_9A04"], ["add~argcount,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 12, 0, 0, 1, 0, 0, 3, 0, 0.04583333333333333, ["mov     edi, 0"], ["mov~edi,0"]], [0, 1, 16, 1, 0, 7, 2, 1, 0, 0, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "movzx   eax, byte ptr [f]", "test    al, al", "jz      short loc_99FF"], ["sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 0, 0.05625, ["mov     rax, [rsp+18h+result]"], ["mov~rax,<TAG>"]], [1, 0, 5, 0, 1, 3, 0, 2, 3, 0, 0.06666666666666667, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jz      short loc_9A1C"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 2, 0, 0.05625, ["call    xstrcat", "jmp     short loc_99EA"], ["call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 1, 0, 0.016666666666666666, ["mov     edi, 0; argcount"], ["mov~edi,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 0, 0.0125, ["mov     eax, 0", "jmp     short loc_99EA"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 4, 0, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [5, 5, 16, 1, 17, 23, 1, 43, 0.04534, 1, 3], "succs": [[], [0, 16], [10, 11], [2, 4], [8, 2], [2, 6], [2, 7], [12, 5], [7], [3, 13], [1], [14, 15], [1], [12], [1], [], []], "fname": "xvasprintf", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 6, 0, 1, 4, 1, 2, 0, 0, 0.08928571428571427, ["mov     rdi, fp; fp", "call    ___freading", "test    eax, eax", "jz      short loc_9A61"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "js      short loc_9A90"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.0863095238095238, ["call    ___errno_location", "mov     rbp, rax", "mov     r12d, [rax]", "mov     rdi, fp; stream", "call    _fclose", "test    r12d, r12d", "jz      short loc_9AA2"], ["call~FOO", "mov~rbp,rax", "mov~r12d,<TAG>", "mov~rdi,fp", "call~FOO", "test~r12d,r12d", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.1369047619047619, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_9A9A"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     fp", "pop     rbp", "pop     r12", "retn"], ["pop~fp", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 1, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_9AA2"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 1, 0.017857142857142856, ["mov     rdi, fp; stream", "call    _fclose", "jmp     short loc_9AA2"], ["mov~rdi,fp", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 3, 1, 0.038690476190476185, ["mov     rdi, fp; stream", "call    _fclose"], ["mov~rdi,fp", "call~FOO"]], [3, 0, 5, 0, 2, 8, 0, 3, 2, 2, 0.023809523809523808, ["mov     rdi, fp; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_9A9A"], ["mov~rdi,fp", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]]], "func_feature": [9, 4, 16, 0, 9, 13, 1, 42, 0.04365, 0, 0], "succs": [[8, 3], [0, 6], [4, 5], [2, 7], [], [4], [4], [4], [3, 7]], "fname": "rpl_fclose", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 33, 0, 0, 2, 0, 1, 0, 0, 0.023222060957910014, ["cmp     esi, 0Bh", "jz      loc_9D66"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 1, 4, 0.016690856313497822, ["cmp     esi, 406h", "jz      loc_9BA6"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.009796806966618287, ["cmp     esi, 406h", "jge     short loc_9CC9"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 5, 0.02177068214804064, ["cmp     esi, 407h", "jg      short loc_9D4A"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 6, 3, 0.006168359941944848, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     short loc_9BE1"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 10, 0, 1, 8, 1, 2, 5, 3, 0.008708272859216255, ["mov     edx, r12d", "mov     esi, 406h; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      short loc_9BFD"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 10, 2, 0.006531204644412192, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_9B77"], ["mov~rdx,<TAG>", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 9, 3, 0.00634978229317852, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_9D34"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 9, 3, 0.00634978229317852, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03701015965166909, ["mov     eax, ebx", "mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "jnz     loc_9D9C"], ["mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.001632801161103048, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_9B77"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 7, 0, 1, 8, 1, 2, 7, 2, 0.005624092888243832, ["mov     edx, r12d", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      loc_9B77"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [2, 0, 7, 0, 1, 8, 1, 2, 5, 2, 0.013062409288824383, ["mov     edx, r12d", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      loc_9B77"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, 2, 0.007619738751814224, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_9B77"], ["cmp~<TAG>,0", "jnz~FOO"]], [4, 0, 4, 0, 1, 8, 1, 2, 8, 2, 0.0010885341074020319, ["or      eax, 1", "mov     edx, eax", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     eax, 0", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_9B77"], ["or~eax,0", "mov~edx,eax", "mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 8, 2, 0.0010885341074020319, ["call    ___errno_location", "mov     fd, rax", "mov     r12d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r12d", "mov     ebx, 0FFFFFFFFh", "jmp     loc_9B77"], ["call~FOO", "mov~fd,rax", "mov~r12d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~[rbp+0],r12d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 8, 2, 0.009433962264150943, ["mov     edx, [rax]", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_9B77"], ["mov~edx,<TAG>", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 3, 2, 0.015965166908563134, ["mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_9B77"], ["mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [2, 0, 3, 0, 1, 6, 0, 1, 3, 2, 0.0039912917271407835, ["mov     edx, [rax]", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax"], ["mov~edx,<TAG>", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 3, 0.01741654571843251, ["cmp     esi, 3", "jz      loc_9D66"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 8, 3, 0.007982583454281567, ["cmp     esi, 9", "jz      loc_9D66"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 3, 0.009433962264150943, ["cmp     esi, 1", "jz      loc_9D66"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.007982583454281567, ["cmp     esi, 401h", "jz      short loc_9D66"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 6, 3, 0.013062409288824383, ["cmp     esi, 409h", "jl      short loc_9D66"], ["cmp~esi,0", "jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 3, 0.010159651669085631, ["cmp     esi, 40Ah", "jnz     short loc_9D1F"], ["cmp~esi,0", "jnz~FOO"]], [2, 0, 5, 0, 1, 6, 1, 2, 7, 3, 0.009796806966618287, ["mov     esi, 1; cmd", "mov     edi, ebx; fd", "mov     eax, 0", "call    _fcntl", "test    eax, eax", "js      short loc_9C90"], ["mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 3, 4, 0.030478955007256895, ["cmp     esi, 0Bh", "jg      loc_9CF7"], ["cmp~esi,0", "jg~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.001451378809869376, ["jmp     short loc_9CC9"], ["jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, 5, 0.00725689404934688, ["test    esi, esi", "jnz     short loc_9D1F"], ["test~esi,esi", "jnz~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 7, 3, 0.007801161103047896, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 6, 0, 0, 3, 0, 1, 6, 4, 0.03011611030478955, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      loc_9D79"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, 4, 0.027213352685050797, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_9D8C"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 5, 0.0043541364296081275, ["cmp     esi, 400h", "jz      short loc_9CC9"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.006894049346879536, ["cmp     esi, 402h", "jz      short loc_9CC9"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 4, 0.02104499274310595, ["cmp     esi, 3", "jle     loc_9CB0"], ["cmp~esi,0", "jle~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 3, 0.0012699564586357039, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_9B62"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 4, 0.00181422351233672, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_9B96"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 9, 5, 0.006168359941944848, ["cmp     esi, 0Ah", "jnz     loc_9D1F"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 5, 0.005805515239477504, ["cmp     esi, 4", "jnz     short loc_9D1F"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 5, 0.015239477503628448, ["cmp     esi, 8", "jz      loc_9CC9"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.009433962264150943, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_9BED"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 7, 3, 0.007801161103047896, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     loc_9CE2"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, 4, 0.003265602322206096, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     short loc_9C5C"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 7, 4, 0.013788098693759071, ["cmp     esi, 8", "jle     loc_9CC4"], ["cmp~esi,0", "jle~FOO"]], [1, 0, 14, 2, 0, 4, 0, 0, 3, 4, 0.006531204644412192, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 4, 2, 0, 4, 0, 0, 2, 3, 0.0012699564586357039, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.009433962264150943, ["cmp     esi, 1", "jg      short loc_9CC9"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 4, 3, 0.021407837445573296, ["mov     r12d, [rax]", "cmp     cs:have_dupfd_cloexec_3326, 0", "js      short loc_9C31"], ["mov~r12d,<TAG>", "cmp~<TAG>,0", "js~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 4, 0.006531204644412192, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_9BBB"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 10, 5, 0.002902757619738752, ["jmp     loc_9CC9"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 4, 0.015239477503628448, ["cmp     esi, 409h", "jz      loc_9CC9"], ["cmp~esi,0", "jz~FOO"]], [1, 1, 53, 1, 0, 19, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 50h", "mov     ebp, edi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+var_20], r9", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "mov     [rsp+68h+arg.gp_offset], 10h", "lea     rax, [rsp+68h+arg_0]", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+arg.reg_save_area], rax", "test    esi, esi", "jz      short loc_9B4D"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "test~esi,esi", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [13, 9, 60, 6, 54, 87, 5, 198, 0.01005, 2, 10], "succs": [[17, 26], [0, 41], [22, 30], [2, 51], [10, 11], [10, 4], [9], [6], [6], [32, 53], [9], [9, 43], [9, 13], [9, 25], [9, 15], [9], [9], [9], [9], [17, 35], [17, 38], [17, 47], [17, 34], [24, 17], [17, 31], [14, 15], [3, 19], [30], [27, 31], [16], [42, 29], [8, 7], [], [30, 31], [33, 30], [40, 21], [18], [36, 46], [50, 31], [30, 31], [44, 30], [49, 45], [16], [25], [20, 39], [48], [18], [28, 30], [12, 5], [48], [30], [30, 23], [1, 37], []], "fname": "rpl_fcntl", "n_num": 54}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 2, 0, 1, 5, 0, 2, 0, 0, 0.0, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, stream; fp", "call    rpl_fseeko", "jmp     short loc_9DC5"], ["mov~edx,0", "mov~esi,0", "mov~rdi,stream", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 0, 0.13333333333333333, ["test    dword ptr [stream], 100h", "jnz     short loc_9DCF"], ["test~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 2, 1, 0, 0.1, ["call    ___freading", "test    eax, eax", "jnz     short loc_9DBD"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, stream", "test    stream, stream", "jz      short loc_9DB3"], ["push~rbx", "mov~rbx,stream", "test~stream,stream", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 3, 0, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush", "jmp     short loc_9DBB"], ["mov~rdi,stream", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush"], ["mov~rdi,stream", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     stream", "retn"], ["pop~stream", "retn"]]], "func_feature": [4, 3, 9, 0, 7, 9, 1, 21, 0.05238, 0, 0], "succs": [[4], [0, 4], [1, 5], [2, 5], [6], [6], []], "fname": "rpl_fflush", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 1, 0, 0, 0.07142857142857142, ["mov     edx, r12d; whence", "mov     offset, rbp; off", "mov     fp, rbx; stream", "call    _fseeko"], ["mov~edx,r12d", "mov~offset,rbp", "mov~fp,rbx", "call~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [rdi+20h]", "cmp     [rdi+28h], rax", "jnz     short loc_9DFA"], ["mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [rdi+48h], 0", "jnz     short loc_9DFA"], ["cmp~[word ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "mov     rbp, offset", "mov     r12d, edx", "mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_9E0D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "mov~rbp,offset", "mov~r12d,edx", "mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 1, 1, 4, -1, 0.011904761904761904, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "mov     eax, 0", "jmp     short loc_9E08"], ["and~<TAG>,0", "mov~[fp+0],pos", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 2, 7, 0, 3, 3, 1, 0.14285714285714285, ["call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_9E47"], ["call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_9E08"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]]], "func_feature": [3, 1, 9, 0, 8, 11, 1, 35, 0.05952, 0, 0], "succs": [[7], [0, 2], [0, 5], [0, 1], [7], [4, 6], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     [pwc], eax", "mov     ebp, 1"], ["movzx~eax,[yte ptr [s+0]", "mov~<TAG>,eax", "mov~ebp,0"]], [1, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.06666666666666667, ["mov     edi, 0; category", "call    hard_locale", "test    al, al", "jnz     short loc_9EAD"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,<STR>", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.26666666666666666, ["mov     rax, rbp", "mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_9ECB"], ["mov~rax,rbp", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 1, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, pwc", "mov     r13, s", "mov     r12, n", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "mov     rbp, rax", "cmp     ret, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_9EAD"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,pwc", "mov~r13,s", "mov~r12,n", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "mov~rbp,rax", "cmp~ret,0", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_9EAD"], ["test~n,n", "jz~FOO"]]], "func_feature": [3, 5, 6, 1, 7, 9, 1, 39, 0.05714, 1, 2], "succs": [[3], [0, 3], [], [2, 4], [], [3, 6], [1, 3]], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 7, 1, 1, 14, 2, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 10h", "mov     rbx, resultp", "mov     rax, format", "mov     rcx, fs:28h", "mov     [rsp+18h+var_10], rcx", "xor     ecx, ecx", "mov     format, rsp; lengthp", "mov     rcx, args; args", "mov     args, format; format", "mov     edi, 0; resultbuf", "call    vasnprintf", "test    result, result", "jz      short loc_9F45"], ["push~rbx", "sub~rsp,0", "mov~rbx,resultp", "mov~rax,format", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~format,rsp", "mov~rcx,args", "mov~args,format", "mov~edi,0", "call~FOO", "test~result,result", "jz~FOO"]], [2, 0, 3, 0, 2, 6, 0, 3, 0, 2, 0.03571428571428571, ["mov     rdi, result; ptr", "call    _free", "call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "mov     eax, 0FFFFFFFFh", "jmp     short loc_9F15"], ["mov~rdi,result", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 0, 3, 0.047619047619047616, ["mov     rdx, [rsp+18h+length]", "cmp     rdx, 7FFFFFFFh", "ja      short loc_9F2B"], ["mov~rdx,<TAG>", "cmp~rdx,0", "ja~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.23809523809523808, ["mov     resultp, [rsp+18h+var_10]", "xor     resultp, fs:28h", "jnz     short loc_9F4C"], ["mov~resultp,[rsp+0]", "xor~resultp,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 0, 2, 0.03571428571428571, ["mov     [resultp], result", "mov     eax, edx"], ["mov~<TAG>,result", "mov~eax,edx"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.07142857142857142, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_9F15"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [4, 3, 9, 1, 8, 9, 1, 34, 0.05357, 1, 2], "succs": [[2, 7], [4], [1, 6], [], [3, 5], [], [4], [4]], "fname": "rpl_vasprintf", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 1; status", "call    usage"], ["sub~rsp,0", "mov~edi,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 3, 0.0, 0, 1], "succs": [[]], "fname": "__argmatch_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0.05303030303030303, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 11, 2, 0, 5, 1, 1, 3, 2, 0.34090909090909094, ["add     i, 1", "mov     rbx, [arglist+i*8]", "add     r13, valsize", "test    rbx, rbx", "jz      short loc_A04F"], ["add~i,0", "mov~rbx,<TAG>", "add~r13,valsize", "test~rbx,rbx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.015151515151515152, ["mov     [rsp+58h+var_58], i", "jmp     loc_A064"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 11, 1, 0, 8, 0, 1, 3, 2, 0.33333333333333337, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rbx, rcx", "not     rbx", "sub     rbx, 1", "cmp     rbx, arglen", "jz      short loc_9FBD"], ["mov~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rbx,rcx", "not~rbx", "sub~rbx,0", "cmp~rbx,arglen", "jz~FOO"]], [1, 0, 11, 2, 1, 12, 1, 2, 6, 3, 0.030303030303030304, ["mov     rdi, [rsp+58h+var_58]", "imul    rdi, valsize", "add     rdi, rax; s1", "mov     rdx, valsize; n", "mov     rsi, r13; s2", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     edx, 1", "cmovnz  eax, edx", "mov     [rsp+58h+ambiguous], al", "jmp     short loc_9FCA"], ["mov~rdi,<TAG>", "imul~rdi,valsize", "add~rdi,rax", "mov~rdx,valsize", "mov~rsi,r13", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~edx,0", "cmovnz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 5, 4, 0.12121212121212122, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      short loc_A045"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 5, 3, 0.06818181818181818, ["mov     [rsp+58h+var_58], i"], ["mov~<TAG>,i"]], [1, 0, 11, 0, 0, 2, 0, 1, 4, 4, 0.25, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jz      short loc_9FC6"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 1, 6, 1, 2, 2, 3, 0.3787878787878788, ["mov     rdx, arglen; n", "mov     rsi, [rsp+58h+s2]; s2", "mov     rdi, rbx; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_9FCA"], ["mov~rdx,arglen", "mov~rsi,[rsp+0]", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, 3, 0.030303030303030304, ["mov     [rsp+58h+ambiguous], 1", "jmp     loc_9FCA"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 11, 0, 0, 9, 0, 1, 1, 4, 0.07575757575757576, ["not     rcx", "lea     r12, [rcx-1]", "mov     [rsp+58h+vallist], vallist_0", "mov     r15, arglist", "mov     [rsp+58h+s2], r8", "mov     r13, vallist_0", "mov     [rsp+58h+ambiguous], 0", "mov     ebp, 0", "jmp     short loc_9FDA"], ["not~rcx", "lea~r12,[rcx-1]+0]", "mov~[rsp+0],vallist_0", "mov~r15,arglist", "mov~[rsp+0],r8", "mov~r13,vallist_0", "mov~[rsp+0],0", "mov~ebp,0", "jmp~FOO"]], [4, 0, 12, 1, 0, 16, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r8, arg", "mov     r14, valsize", "mov     valsize, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rbx, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    rbx, rbx", "jz      loc_A064"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r8,arg", "mov~r14,valsize", "mov~valsize,0", "mov~eax,0", "scasb~<TAG>,", "mov~rbx,<TAG>", "mov~<TAG>,0", "test~rbx,rbx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, 0, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     valsize", "pop     r15", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~valsize", "pop~r15", "retn"]]], "func_feature": [2, 5, 12, 1, 13, 18, 2, 79, 0.13054, 0, 7], "succs": [[12], [0, 8], [12], [2, 7], [1], [9, 4], [1], [5, 6], [1, 3], [1], [8], [10, 12], []], "fname": "argmatch", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 1, 0, 1, 6, 0, 2, 0, 0, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_A0A0"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, context", "mov     r12, value", "cmp     problem, 0FFFFFFFFFFFFFFFFh", "jz      short loc_A0E4"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,context", "mov~r12,value", "cmp~problem,0", "jz~FOO"]], [6, 0, 0, 0, 3, 19, 0, 3, 2, 0, 0.0, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     context, rax", "mov     rdx, value; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, format; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "pop     format", "pop     rbp", "pop     value", "retn"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~context,rax", "mov~rdx,value", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,format", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "pop~format", "pop~rbp", "pop~value", "retn"]], [2, 0, 1, 0, 1, 5, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax"]]], "func_feature": [5, 0, 7, 0, 4, 4, 1, 37, 0.04167, 2, 0], "succs": [[2], [0, 3], [], [2]], "fname": "argmatch_invalid", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_A1FE"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [3, 0, 10, 1, 2, 21, 1, 3, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, arglist", "mov     rbp, vallist", "mov     r13, valsize", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r12, [arglist]", "test    r12, r12", "jz      loc_A1D3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,arglist", "mov~rbp,vallist", "mov~r13,valsize", "mov~rbx,<TAG>", "mov~edx,0", "lea~vallist,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 4, 2, 0.3, ["add     i, 1", "mov     r12, [arglist+i*8]", "add     rbp, valsize", "test    r12, r12", "jz      short loc_A1D3"], ["add~i,0", "mov~r12,<TAG>", "add~rbp,valsize", "test~r12,r12", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 4, 0.05555555555555556, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A157"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 4, 0.2111111111111111, ["test    i, i", "jz      short loc_A157"], ["test~i,i", "jz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.044444444444444446, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_A1EF"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.044444444444444446, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [2, 0, 9, 0, 2, 9, 0, 3, 4, 3, 0.03333333333333333, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aLuBytesSCopied+19h; \", %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_A182"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 9, 0, 2, 9, 0, 2, 3, 3, 0.15555555555555556, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     last_val, rbp"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~last_val,rbp"]], [2, 0, 9, 0, 0, 3, 0, 1, 1, 5, 0.05555555555555556, ["mov     r14d, 0", "mov     ebx, 0", "jmp     short loc_A192"], ["mov~r14d,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]]], "func_feature": [8, 4, 15, 0, 11, 15, 1, 73, 0.10303, 4, 4], "succs": [[5, 6], [0, 9], [0, 4], [8, 7], [8, 3], [10], [10], [2], [2], [4], []], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     valsize", "pop     arg", "pop     exit_fn", "pop     context", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~valsize", "pop~arg", "pop~exit_fn", "pop~context", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_A240"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, context", "mov     r13, arg", "mov     rbx, arglist", "mov     rbp, vallist", "mov     r12, valsize", "mov     r14, exit_fn", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "mov     arg, arglist; arglist", "mov     context, arg; arg", "call    argmatch", "test    res, res", "js      short loc_A24F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,context", "mov~r13,arg", "mov~rbx,arglist", "mov~rbp,vallist", "mov~r12,valsize", "mov~r14,exit_fn", "mov~vallist,valsize", "mov~arglist,vallist", "mov~arg,arglist", "mov~context,arg", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 0, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.15000000000000002, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_A2B5"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     r12d, 0", "jmp     short loc_A2B5"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, -1, 0.0, ["mov     r12, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r12, r12", "jnz     short loc_A294"], ["mov~r12,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, -1, 0.1, ["mov     r13, valsize", "mov     r14, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]"], ["mov~r13,valsize", "mov~r14,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]"]], [0, 0, 5, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, [arglist]", "test    r12, r12", "jz      short loc_A2C1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 6, 8, 0, 32, 0.05, 0, 2], "succs": [[], [0, 3], [0], [0, 1], [1], [2, 4]], "fname": "argmatch_to_argument", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 1, 0, 3, 0, 0, 0, 0, 0.16666666666666666, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [4, 0, 4, 2, 0, 14, 1, 1, 1, 2, 0.16666666666666666, ["movzx   edx, byte ptr [p1]", "movzx   eax, dl", "sub     edx, 41h ; 'A'", "lea     ecx, [rax+20h]", "cmp     dl, 1Ah", "cmovb   eax, ecx", "movzx   ecx, byte ptr [p2]", "movzx   edx, cl", "sub     ecx, 41h ; 'A'", "lea     r9d, [rdx+20h]", "cmp     cl, 1Ah", "cmovb   edx, r9d", "test    al, al", "jz      short loc_A309"], ["movzx~edx,<TAG>", "movzx~eax,dl", "sub~edx,0", "lea~ecx,[rax+0]", "cmp~dl,0", "cmovb~eax,ecx", "movzx~ecx,<TAG>", "movzx~edx,cl", "sub~ecx,0", "lea~r9d,[rdx+0]", "cmp~cl,0", "cmovb~edx,r9d", "test~al,al", "jz~FOO"]], [2, 0, 4, 2, 0, 4, 0, 1, 2, 2, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jz      short loc_A2D3"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     eax, 0", "cmp     p1, p2", "jz      short locret_A311"], ["mov~eax,0", "cmp~p1,p2", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 3, 0, 5, 7, 1, 25, 0.06667, 0, 5], "succs": [[4], [0, 2], [0, 1], [1, 4], []], "fname": "c_strcasecmp", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[3, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.16666666666666666, ["mov     ecx, 2", "lea     rdi, aC; \"C\"", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "mov     eax, 0", "test    cl, cl", "jz      short loc_A369"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "mov~eax,0", "test~cl,cl", "jz~FOO"]], [3, 0, 3, 1, 1, 7, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "mov     esi, 0; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_A369"], ["sub~rsp,0", "mov~esi,0", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 1, 0, 0, 8, 1, 0, 2, 1, 0.0, ["mov     ecx, 6", "lea     rdi, aPosix; \"POSIX\"", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]]], "func_feature": [1, 3, 3, 0, 4, 5, 1, 26, 0.04167, 2, 2], "succs": [[2, 3], [0, 2], [], [2]], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.08333333333333333, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx"]], [2, 0, 3, 1, 1, 5, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_A394"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["lea     codeset, aAscii; \"ASCII\"", "jmp     short loc_A38F"], ["lea~codeset,<TAG>", "jmp~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 4, 1, 12, 0.04167, 1, 2], "succs": [[2], [0, 3], [], [2]], "fname": "locale_charset", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 3, 0, 1, 3, 0, 1, 0, 0, 0.0032420206081930133, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     [rbp+saved_errno], 0"], ["call~FOO", "mov~<TAG>,0", "mov~[rbp+0],0"]], [0, 0, 5, 0, 0, 4, 0, 1, 4, 3, 0.0077657702940437294, ["mov     rdi, [rbp+a.arg]; ptr", "lea     rax, [rbp+a.direct_alloc_arg]", "cmp     rdi, rax", "jz      short loc_BFF9"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 5, 3, 0.0, ["call    _free"], ["call~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B08C"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 329, 0, 1, 5, 0, 2, 19, 9, 0.001365502219988272, ["mov     rsi, memory_size; size", "mov     rdi, [rbp+saved_errno]; ptr", "call    _realloc", "mov     r12, rax", "jmp     short loc_A820"], ["mov~rsi,memory_size", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 18, 10, 0.002002178101700595, ["test    cl, cl", "jnz     short loc_A815"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_AF07"], ["cmp~eax,0", "jb~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 4", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_AF45"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 329, 0, 1, 3, 0, 1, 18, 9, 0.028524754963558684, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r12, rax"], ["mov~rdi,memory_size", "call~FOO", "mov~r12,rax"]], [0, 0, 329, 0, 0, 7, 1, 1, 17, 10, 0.030426405294462597, ["mov     rax, [rbp+saved_errno]", "mov     rdi, [rbp+result]", "cmp     rax, rdi", "setz    byte ptr [rbp+result_0]", "movzx   ecx, byte ptr [rbp+result_0]", "test    rax, rax", "jz      short loc_A815"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "cmp~rax,rdi", "setz~[yte ptr [rbp+0]", "movzx~ecx,[yte ptr [rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 19, 8, 0.03337521990449862, ["test    r12, r12", "jz      loc_C1A5"], ["test~r12,r12", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 20, 14, 0.03154896540169222, ["test    length, length", "jz      short loc_A837"], ["test~length,length", "jz~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B8B9"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 21, 14, 0.002002178101700595, ["cmp     byte ptr [rbp+result_0], 0", "jnz     short loc_A8B3"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.005361481109156405, ["mov     rax, [rbp+saved_errno]", "mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_C2E5"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B00B"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 32, 7, 0.0003267152550892184, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 2, 0, 1, 31, 8, 0.00620758984669515, ["cmp     length, rdx", "ja      loc_C038"], ["cmp~length,rdx", "ja~FOO"]], [1, 0, 329, 0, 0, 3, 0, 0, 14, 12, 0.04374633492502305, ["mov     rax, [rbp+saved_errno]", "mov     byte ptr [rax+length], 25h ; '%'", "mov     [rbp+result_0], rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~[rbp+0],rax"]], [0, 0, 329, 0, 0, 5, 0, 0, 13, 10, 0.040160844433274695, ["lea     r13, [length+1]", "cmp     length, r13", "cmova   r13, rax", "cmp     allocated, r13", "jnb     loc_A83E"], ["lea~r13,[length+0]", "cmp~length,r13", "cmova~r13,rax", "cmp~allocated,r13", "jnb~FOO"]], [0, 0, 329, 0, 1, 6, 0, 2, 22, 13, 0.001365502219988272, ["mov     rdx, length; n", "mov     rsi, [rbp+saved_errno]; src", "mov     rdi, r12; dest", "call    _memcpy", "mov     [rbp+saved_errno], r12", "jmp     loc_A83E"], ["mov~rdx,length", "mov~rsi,[rbp+0]", "mov~rdi,r12", "call~FOO", "mov~[rbp+0],r12", "jmp~FOO"]], [0, 0, 329, 0, 0, 1, 0, 0, 21, 13, 0.02964731507078831, ["mov     [rbp+saved_errno], r12"], ["mov~[rbp+0],r12"]], [0, 0, 13, 0, 0, 3, 0, 1, 34, 7, 0.0003267152550892184, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 33, 8, 0.01523833458993047, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_C04B"], ["cmp~memory_size,0", "jz~FOO"]], [1, 1, 329, 2, 0, 4, 0, 0, 15, 11, 0.2694060484208763, ["mov     rax, [dp+8]", "mov     [rbp+fbp], rax", "add     [rbp+i], 1", "add     dp, 58h"], ["mov~rax,[dp+0]", "mov~[rbp+0],rax", "add~[rbp+0],0", "add~dp,<STR>"]], [0, 0, 329, 0, 0, 6, 0, 1, 16, 12, 0.0013738795342213286, ["mov     rax, [rax+10h]; jumptable 000000000000A8FF case 0", "mov     [rax], bl", "mov     r13, length", "mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     loc_A850"], ["mov~rax,[rax+0]", "mov~<TAG>,bl", "mov~r13,length", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 6, 0, 1, 16, 12, 0.0013738795342213286, ["mov     rax, [rax+10h]; jumptable 000000000000A8FF case 1", "mov     [rax], bx", "mov     r13, length", "mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     loc_A850"], ["mov~rax,[rax+0]", "mov~<TAG>,bx", "mov~r13,length", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 6, 0, 1, 16, 12, 0.0013738795342213286, ["mov     rax, [rax+10h]; jumptable 000000000000A8FF case 2", "mov     [rax], ebx", "mov     r13, length", "mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     loc_A850"], ["mov~rax,[rax+0]", "mov~<TAG>,ebx", "mov~r13,length", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 6, 0, 1, 16, 12, 0.0013738795342213286, ["mov     rax, [rax+10h]; jumptable 000000000000A8FF case 3", "mov     [rax], length", "mov     r13, length", "mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     loc_A850"], ["mov~rax,[rax+0]", "mov~<TAG>,length", "mov~r13,length", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 6, 0, 1, 16, 12, 0.0013738795342213286, ["mov     rax, [rax+10h]; jumptable 000000000000A8FF case 4", "mov     [rax], length", "mov     r13, length", "mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     loc_A850"], ["mov~rax,[rax+0]", "mov~<TAG>,length", "mov~r13,length", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 6, 0, 1, 40, 12, 0.20156655776158164, ["cdqe", "lea     maxlen, [rax+length]", "mov     rax, [rbp+saved_errno]", "mov     ebx, [rbp+orig_errno]", "mov     [rax], ebx", "jmp     loc_A850"], ["cdqe~", "lea~maxlen,<TAG>", "mov~rax,[rbp+0]", "mov~ebx,[rbp+0]", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 34, 7, 0.0005445254251486973, ["mov     memory_1, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~memory_1,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 3, 1, 1, 33, 8, 0.03896288849794756, ["mov     rax, [rbp+result_0]", "test    rax, rax", "jz      loc_C05E"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B838"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 329, 0, 0, 4, 0, 1, 8, 10, 0.30274775906844265, ["mov     r12, [dp]", "mov     rax, [rbp+fbp]", "cmp     r12, rax", "jz      loc_A776"], ["mov~r12,<TAG>", "mov~rax,[rbp+0]", "cmp~r12,rax", "jz~FOO"]], [2, 0, 329, 0, 0, 11, 0, 1, 7, 11, 0.029848370612381676, ["mov     r13, [rbp+d.dir]", "mov     rax, [rbp+result]", "mov     [rbp+result_0], rax", "mov     ebx, 0", "mov     [rbp+i], 0", "lea     rax, [rbp+count]", "mov     [rbp+var_3F8], rax", "mov     [rbp-418h], rax", "mov     r14, dp", "mov     dp, rbx", "jmp     loc_A867"], ["mov~r13,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~ebx,0", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp-418h]+0],rax", "mov~r14,dp", "mov~dp,rbx", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 5", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B049"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 44, 0, 0, 7, 0, 0, 11, 7, 0.06362570160006702, ["mov     dp, length", "lea     length, [length+1]", "cmp     length, rbx", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovbe  rax, rbx", "cmp     allocated, rax", "jnb     short loc_C0D3"], ["mov~dp,length", "lea~length,[length+0]", "cmp~length,rbx", "mov~rax,0", "cmovbe~rax,rbx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 329, 0, 0, 3, 0, 1, 10, 8, 0.31240680237915724, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_C071"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 43, 0, 0, 2, 1, 1, 12, 9, 0.04121638602663986, ["test    allocated, allocated", "jz      loc_C285"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 329, 1, 0, 7, 0, 0, 9, 9, 0.03169975705788724, ["sub     r12, rax", "lea     rbx, [length+n+0]", "cmp     length, rbx", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmova   rbx, rax", "cmp     allocated, rbx", "jnb     loc_A5D3"], ["sub~r12,rax", "lea~rbx,[length+0]", "cmp~length,rbx", "mov~rax,0", "cmova~rbx,rax", "cmp~allocated,rbx", "jnb~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 13, 8, 0.00892183965820558, ["test    allocated, allocated", "js      loc_C1B8"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 10, 8, 0.026019938007874676, ["test    allocated, allocated", "jz      loc_A53E"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 39, 1, 0, 3, 0, 0, 14, 9, 0.004289184887325124, ["add     allocated, allocated", "cmp     allocated, rax", "jb      loc_C291"], ["add~allocated,allocated", "cmp~allocated,rax", "jb~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 11, 7, 0.004632654770880456, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 15, 9, 0.002404289184887325, ["jmp     loc_C29D"], ["jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 6", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B14D"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 329, 1, 0, 5, 0, 1, 32, 14, 0.3626204238921002, ["mov     eax, eax", "lea     rsi, off_FA7C", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 329, 1, 0, 2, 0, 1, 12, 8, 0.0026304766691798613, ["add     allocated, allocated", "jmp     loc_A544"], ["add~allocated,allocated", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 13", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B876"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 29, 0, 1, 3, 0, 1, 15, 9, 0.013600569657367848, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r12, rax"], ["mov~rdi,memory_size", "call~FOO", "mov~r12,rax"]], [0, 0, 32, 0, 0, 6, 1, 1, 14, 10, 0.019519142163022536, ["mov     rax, [rbp+saved_errno]", "mov     rcx, [rbp+result]", "cmp     rax, rcx", "setz    r13b", "test    rax, rax", "jz      loc_C0AE"], ["mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "cmp~rax,rcx", "setz~r13b", "test~rax,rax", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 1, 1, 15, 10, 0.0021027058724972774, ["test    r13b, r13b", "jnz     loc_C0AE"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B190"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B10F"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 16, 8, 0.012080087124068025, ["test    r12, r12", "jz      loc_C1F1"], ["test~r12,r12", "jz~FOO"]], [0, 0, 29, 0, 1, 5, 0, 2, 16, 9, 0.0001214710563793248, ["mov     rsi, memory_size; size", "mov     rdi, [rbp+saved_errno]; ptr", "call    _realloc", "mov     r12, rax", "jmp     loc_C0B9"], ["mov~rsi,memory_size", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 17, 8, 0.00749769623858591, ["test    length, length", "jz      short loc_C0CC"], ["test~length,length", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 18, 8, 0.002144592443662562, ["test    r13b, r13b", "jnz     short loc_C140"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 3, 0, 1, 12, 16, 0.2047834464270755, ["mov     rax, [dp+50h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_A8D1"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 4, 2, 0.00012565971349585324, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     [rbp+saved_errno], 0", "jmp     loc_C00F"], ["call~FOO", "mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 44, 2, 0.00330485046494094, ["mov     rax, [rbp+saved_errno]", "mov     [rax], ebx", "mov     [rbp+saved_errno], 0", "jmp     loc_C00F"], ["mov~rax,[rbp+0]", "mov~<TAG>,ebx", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 45, 2, 0.000389545111837145, ["mov     rax, [rbp+saved_errno]", "mov     dword ptr [rax], 4Bh ; 'K'", "mov     [rbp+saved_errno], 0", "jmp     loc_C00F"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 16, 2, 0.0008042221663734606, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_C00F"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 2.5131942699170645e-05, ["mov     [rbp+saved_errno], 0", "jmp     loc_C00F"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 14", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B97A"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B93C"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 12, 0, 0, 4, 0, 1, 12, 6, 0.020105554159336517, ["mov     rax, [rbp+saved_errno]", "mov     byte ptr [rax+length], 0", "cmp     rax, [rbp+result]", "jz      short loc_C0ED"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~rax,[rbp+0]", "jz~FOO"]], [0, 0, 13, 0, 1, 6, 0, 2, 19, 7, 5.445254251486973e-05, ["mov     rdx, length; n", "mov     rsi, [rbp+saved_errno]; src", "mov     rdi, r12; dest", "call    _memcpy", "mov     [rbp+saved_errno], memory", "jmp     loc_C0D3"], ["mov~rdx,length", "mov~rsi,[rbp+0]", "mov~rdi,r12", "call~FOO", "mov~[rbp+0],memory", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 18, 7, 0.0012524084778420038, ["mov     [rbp+saved_errno], r12"], ["mov~[rbp+0],r12"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B9BD"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 329, 2, 0, 6, 0, 1, 14, 14, 0.015456144759989947, ["shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     edi, [rax]", "lea     edx, [rdi-12h]", "cmp     edx, 4; switch 5 cases", "ja      loc_A990; jumptable 000000000000A8FF default case"], ["shl~rax,0", "add~rax,[rbp+0]", "mov~edi,<TAG>", "lea~edx,[rdi-12h]+0]", "cmp~edx,0", "ja~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 13, 15, 0.2035017173494178, ["cmp     dl, 6Eh ; 'n'", "jz      loc_A8D6"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 13, 6, 0.002178101700594789, ["cmp     allocated, rbx", "ja      short loc_C15E"], ["cmp~allocated,rbx", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 13, 5, 0.013822568484543855, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_C101"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 1, 8, 1, 2, 14, 6, 0.0, ["mov     rsi, rbx; size", "mov     rbx, rax", "mov     rdi, rax; ptr", "call    _realloc", "test    memory, memory", "cmovz   memory, rbx", "mov     [rbp+saved_errno], rax", "jmp     loc_C0ED"], ["mov~rsi,rbx", "mov~rbx,rax", "mov~rdi,rax", "call~FOO", "test~memory,memory", "cmovz~memory,rbx", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 14, 5, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 329, 1, 0, 5, 0, 1, 15, 13, 0.014174415682332245, ["mov     edx, edx", "lea     rcx, off_FA68", "movsxd  rdx, dword ptr [rcx+rdx*4]", "add     rdx, rcx", "jmp     rdx; switch jump"], ["mov~edx,edx", "lea~rcx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,rcx", "jmp~rdx"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 14, 4, 0.009550138225684845, ["mov     rdi, [rbp+d.dir]; ptr", "lea     rax, [rbp+d.direct_alloc_dir]", "cmp     rdi, rax", "jz      short loc_C119"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 15, 4, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 15, 3, 0.00521068945296138, ["mov     rdi, [rbp+a.arg]; ptr", "lea     rax, [rbp+a.direct_alloc_arg]", "cmp     rdi, rax", "jz      short loc_C131"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 16, 3, 0.0, ["call    _free"], ["call~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    _abort; jumptable 000000000000A8FF default case"], ["call~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 16, 7, 0.0005445254251486973, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 15, 8, 0.004448353857753205, ["test    allocated, allocated", "js      loc_C17F"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 14, 9, 0.002002178101700595, ["test    cl, cl", "jnz     short loc_A595"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 329, 0, 0, 7, 1, 1, 13, 9, 0.026639859261120884, ["mov     rax, [rbp+result_0]", "mov     rdi, [rbp+result]", "cmp     rax, rdi", "setz    byte ptr [rbp+prefix_count]", "movzx   ecx, byte ptr [rbp+prefix_count]", "test    rax, rax", "jz      short loc_A595"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "cmp~rax,rdi", "setz~[yte ptr [rbp+0]", "movzx~ecx,[yte ptr [rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 17, 7, 0.0003267152550892184, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 329, 0, 0, 4, 0, 1, 16, 8, 0.03203484962720952, ["cmp     allocated, r13", "cmovb   allocated, r13", "cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_C192"], ["cmp~allocated,r13", "cmovb~allocated,r13", "cmp~memory_size,0", "jz~FOO"]], [1, 0, 329, 0, 0, 5, 0, 1, 15, 23, 0.09274943453128927, ["mov     rdi, [rbp+buf]", "lea     rcx, [rdi+2]", "mov     [rbp+fbp], rcx", "mov     byte ptr [rdi+1], 27h ; '''", "jmp     loc_A66A"], ["mov~rdi,[rbp+0]", "lea~rcx,[rdi+0]", "mov~[rbp+0],rcx", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [3, 0, 329, 1, 0, 9, 1, 1, 14, 24, 0.1867722208260032, ["mov     r12, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r12+rax]", "mov     [rbp+type], eax", "mov     eax, [dp+10h]", "mov     rcx, [rbp+buf]", "mov     byte ptr [rcx], 25h ; '%'", "test    al, 1", "jnz     loc_A995"], ["mov~r12,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[dp+0]", "mov~rcx,[rbp+0]", "mov~<TAG>,0", "test~al,0", "jnz~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 7", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B251"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 20, 7, 0.0005445254251486973, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B213"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 4, 0, 0, 26, 15, 0.0, ["mov     rax, [rbp+fbp]; jumptable 000000000000A774 cases 2,3", "mov     byte ptr [rax], 6Ch ; 'l'", "lea     rax, [rax+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "lea~rax,[rax+0]", "mov~[rbp+0],fbp_0"]], [0, 0, 329, 1, 0, 5, 0, 1, 25, 14, 0.0059981569908687275, ["mov     eax, eax", "lea     rcx, off_FA40", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B294"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B5A0"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 14, 7, 0.0008879953087040295, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 329, 0, 0, 4, 0, 0, 26, 14, 0.0027393817542096005, ["mov     rax, [rbp+fbp]; jumptable 000000000000A774 cases 0,1,7,9", "mov     byte ptr [rax], 6Ch ; 'l'", "lea     rax, [rax+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "lea~rax,[rax+0]", "mov~[rbp+0],fbp_0"]], [0, 0, 13, 0, 0, 3, 0, 1, 15, 7, 0.0003267152550892184, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 14, 8, 0.006391890759822401, ["cmp     length, rbx", "ja      loc_C1CB"], ["cmp~length,rbx", "ja~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 15", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_BA7E"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_BA40"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 17, 7, 0.0003267152550892184, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 16, 8, 0.0031414928373963307, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_C1DE"], ["cmp~memory_size,0", "jz~FOO"]], [2, 0, 329, 0, 0, 7, 0, 1, 25, 13, 0.20446510848621932, ["movzx   eax, byte ptr [dp+48h]; jumptable 000000000000A774 default case", "mov     rdi, [rbp+fbp]", "mov     [rdi], al", "mov     byte ptr [rdi+1], 0", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_AAB3"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdi,[rbp+0]", "mov~<TAG>,al", "mov~[yte ptr [rdi+0],0", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 329, 1, 0, 4, 0, 1, 24, 14, 0.20077909022367432, ["mov     eax, [rbp+type]", "sub     eax, 7", "cmp     eax, 9; switch 10 cases", "ja      loc_A9DA; jumptable 000000000000A774 default case"], ["mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 329, 0, 0, 5, 0, 1, 26, 14, 0.0, ["mov     rax, [rbp+fbp]; jumptable 000000000000A774 case 5", "mov     byte ptr [rax], 4Ch ; 'L'", "lea     rax, [rax+1]", "mov     [rbp+fbp], fbp_0", "jmp     loc_A9DA; jumptable 000000000000A774 default case"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "lea~rax,[rax+0]", "mov~[rbp+0],fbp_0", "jmp~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 17, 7, 0.0005445254251486973, ["mov     memory, [rbp+saved_errno]", "mov     [rbp+result_0], rax", "jmp     out_of_memory"], ["mov~memory,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 329, 2, 0, 4, 0, 1, 26, 13, 0.004012733517634246, ["shl     rax, 5", "add     rax, r12", "cmp     dword ptr [rax], 5", "jnz     loc_AAAE"], ["shl~rax,0", "add~rax,r12", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 14, 6, 0.0, ["mov     rdi, rax; ptr", "call    _free", "jmp     loc_BFB5"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 13, 6, 0.0022367429002261873, ["test    rax, rax", "jnz     loc_C204"], ["test~rax,rax", "jnz~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 329, 0, 0, 3, 0, 0, 27, 12, 0.002731004439976544, ["mov     eax, [rax+10h]", "mov     [rbp+prefixes], eax", "mov     [rbp+prefix_count], 1"], ["mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~[rbp+0],0"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_AE83"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_AE02"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 346, 1, 1, 21, 2, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 3F8h", "mov     [rbp+result], resultbuf_0", "mov     [rbp+lengthp], lengthp_0", "mov     resultbuf_0, format_0; format", "mov     [rbp+fbp], format_0", "mov     rbx, args", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "lea     format_0, [rbp+a]; a", "lea     lengthp_0, [rbp+d]; d", "call    printf_parse", "test    eax, eax", "js      loc_C211"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],resultbuf_0", "mov~[rbp+0],lengthp_0", "mov~resultbuf_0,format_0", "mov~[rbp+0],format_0", "mov~rbx,args", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~format_0,[rbp+0]", "lea~lengthp_0,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 329, 0, 0, 3, 0, 1, 27, 11, 0.20539499036608863, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_AA56"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 26, 12, 0.19917902320516043, ["mov     [rbp+prefix_count], 0", "jmp     loc_AA1D"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 329, 0, 0, 3, 0, 0, 30, 9, 0.027695400854486053, ["mov     r15d, 0Ch", "cmp     rax, 0Ch", "jbe     short loc_C243"], ["mov~r15d,0", "cmp~rax,0", "jbe~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 29, 9, 0.040529446259529193, ["test    allocated, allocated", "jz      loc_C221"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 329, 1, 0, 3, 0, 0, 31, 9, 0.006576191672949655, ["add     allocated, allocated", "cmp     allocated, rax", "jb      loc_C22D"], ["add~allocated,allocated", "cmp~allocated,rax", "jb~FOO"]], [2, 0, 329, 2, 0, 4, 0, 1, 28, 12, 0.004012733517634246, ["shl     rax, 5", "add     r12, rax", "cmp     dword ptr [r12], 5", "jnz     loc_AAC2"], ["shl~rax,0", "add~r12,rax", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 329, 0, 0, 1, 0, 0, 32, 9, 0.004599145513948228, ["mov     r15, rdx"], ["mov~r15,rdx"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_BAC1"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 329, 0, 0, 1, 0, 1, 32, 9, 0.007154226355030579, ["jmp     loc_C239"], ["jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 329, 0, 0, 6, 0, 0, 29, 11, 0.002731004439976543, ["mov     ecx, [rbp+prefix_count]", "mov     eax, ecx", "mov     edx, [r12+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rcx+1]", "mov     [rbp+prefix_count], eax"], ["mov~ecx,[rbp+0]", "mov~eax,ecx", "mov~edx,[r12+0]", "mov~[rbp+0],edx", "lea~eax,[rcx+0]", "mov~[rbp+0],eax"]], [0, 0, 329, 0, 0, 6, 1, 1, 31, 10, 0.03601407388791154, ["mov     rax, [rbp+saved_errno]", "mov     rcx, [rbp+result]", "cmp     rax, rcx", "setz    r12b", "test    rax, rax", "jz      loc_AAC7"], ["mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "cmp~rax,rcx", "setz~r12b", "test~rax,rax", "jz~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384716, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 32, 10, 0.002002178101700595, ["test    r12b, r12b", "jnz     loc_AAC7"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 329, 0, 0, 6, 0, 0, 28, 10, 0.20558766859344899, ["lea     rdx, [length+2]", "cmp     length, rdx", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovbe  rax, rdx", "cmp     allocated, rax", "jnb     loc_AB04"], ["lea~rdx,[length+0]", "cmp~length,rdx", "mov~rax,0", "cmovbe~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 30, 8, 0.011560693641618497, ["test    allocated, allocated", "js      loc_BF8B"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 329, 0, 1, 5, 0, 2, 33, 9, 0.0013655022199882715, ["mov     rsi, memory_size; size", "mov     fbp_0, [rbp+saved_errno]; ptr", "call    _realloc", "mov     [rbp+result_0], rax", "jmp     loc_AAD6"], ["mov~rsi,memory_size", "mov~fbp_0,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 15, 9, 0.0022367429002261873, ["mov     r15, rbx"], ["mov~r15,rbx"]], [0, 0, 0, 0, 1, 1, 0, 1, 27, -1, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 8", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B355"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384716, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B317"], ["cmp~eax,0", "jb~FOO"]], [2, 0, 38, 0, 0, 3, 0, 0, 13, 9, 0.028583396163190083, ["mov     r15d, 0Ch", "cmp     rax, 0Ch", "jbe     short loc_C2A7"], ["mov~r15d,0", "cmp~rax,0", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 29, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B398"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 329, 0, 1, 3, 0, 1, 32, 9, 0.03411242355700762, ["mov     fbp_0, memory_size; size", "call    _malloc", "mov     [rbp+result_0], rax"], ["mov~fbp_0,memory_size", "call~FOO", "mov~[rbp+0],rax"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 16", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_BB82"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 329, 0, 1, 4, 0, 2, 18, 10, 0.0, ["mov     rdx, length; n", "mov     rsi, [rbp+result_0]; src", "call    _memcpy", "jmp     short loc_A5E1"], ["mov~rdx,length", "mov~rsi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 17, 10, 0.002002178101700595, ["cmp     byte ptr [rbp+prefix_count], 0", "jz      short loc_A5E1"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 34, 17, 0.03713663399514116, ["test    length, length", "jz      short loc_AB12"], ["test~length,length", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_BB44"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 35, 17, 0.002002178101700595, ["test    r12b, r12b", "jz      short loc_AB12"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_BBC5"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 329, 0, 1, 5, 0, 2, 36, 17, 0.0, ["mov     rdx, length; n", "mov     rsi, [rbp+saved_errno]; src", "mov     rdi, rax; dest", "call    _memcpy", "jmp     short loc_AB12"], ["mov~rdx,length", "mov~rsi,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_BC48"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 329, 0, 0, 2, 0, 0, 29, 17, 0.1637848705704951, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 329, 0, 1, 7, 0, 2, 30, 16, 0.20588087459160592, ["mov     rax, [rbp+result_0]", "mov     byte ptr [rax+length], 0", "call    ___errno_location", "mov     [rbp+saved_errno], rax", "mov     eax, [rax]", "mov     [rbp+orig_errno], eax", "jmp     loc_BE82"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "call~FOO", "mov~[rbp+0],rax", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 329, 0, 0, 4, 0, 1, 23, 15, 0.1993046829186563, ["mov     rsi, [dp+30h]; src", "mov     rax, [dp+38h]", "cmp     rsi, rax", "jz      short loc_A752"], ["mov~rsi,[dp+0]", "mov~rax,[dp+0]", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 329, 0, 0, 4, 0, 1, 22, 16, 0.1978302756136383, ["mov     rsi, [dp+18h]; src", "mov     rax, [dp+20h]", "cmp     rsi, rax", "jz      short loc_A729"], ["mov~rsi,[dp+0]", "mov~rax,[dp+0]", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 329, 2, 1, 6, 0, 1, 23, 16, 0.0, ["sub     rax, rsi", "mov     r13, rax", "mov     rdx, n; n", "mov     rdi, [rbp+fbp]; dest", "call    _memcpy", "add     [rbp+fbp], n"], ["sub~rax,rsi", "mov~r13,rax", "mov~rdx,n", "mov~rdi,[rbp+0]", "call~FOO", "add~[rbp+0],n"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 1", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_AC36"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_ABB2"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_AC79"], ["cmp~eax,0", "jnz~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 9", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B459"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     short loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B41B"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B49C"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 17", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_BC86"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [5, 0, 329, 2, 1, 11, 0, 1, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0"]], [0, 0, 329, 0, 0, 3, 1, 1, 35, 11, 0.4042221663734607, ["mov     edx, [rbp+count]", "test    edx, edx", "js      loc_BCD8"], ["mov~edx,[rbp+0]", "test~edx,edx", "js~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 329, 2, 1, 12, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 14, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 1", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [3, 0, 329, 0, 1, 10, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "mov     r9, [rbp-418h]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 1", "call    ___snprintf_chk", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "mov~r9,[rbp-418h]+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 329, 2, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 1", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 0, 329, 2, 1, 17, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "lea     rsp, [rsp-18h]", "fstp    [rsp+448h+var_440]", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 30h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "lea~rsp,[rsp-18h]+0]", "fstp~<TAG>,[rsp+0]", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 35, 12, 0.0027142498115104298, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "lea     rsp, [rsp-10h]", "fstp    [rsp+430h+var_430]", "mov     r9, [rbp-418h]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~r9,[rbp-418h]+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 329, 2, 1, 15, 0, 2, 34, 12, 0.010207511001384721, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "lea     rsp, [rsp-10h]", "fstp    [rsp+440h+var_440]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [4, 1, 329, 2, 1, 16, 0, 2, 36, 12, 0.0027310044399765435, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "sub     rsp, 8", "push    [rbp+var_3F8]", "push    arg", "mov     eax, [rbp+prefixes+4]", "push    rax", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rsp,0", "push~[rbp+0]", "push~arg", "mov~eax,[rbp+0]", "push~rax", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [4, 0, 329, 1, 1, 13, 0, 2, 34, 12, 0.010207511001384718, ["mov     rax, [rbp+result_0]", "lea     rdi, [rax+length]", "push    [rbp+var_3F8]", "push    arg", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 10h", "jmp     loc_ABEB"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "push~[rbp+0]", "push~arg", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_BCC9"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 329, 0, 0, 3, 0, 0, 36, 11, 0.26572003015833123, ["mov     ecx, edx", "cmp     rcx, maxlen", "jnb     short loc_AC18"], ["mov~ecx,edx", "cmp~rcx,maxlen", "jnb~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 1, 5, 0.002856664153472397, ["lea     rsi, [rbp+a]; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      short loc_A46E"], ["lea~rsi,[rbp+0]", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 329, 0, 0, 5, 0, 1, 37, 11, 0.002010555415933652, ["movsxd  rcx, edx", "mov     rdi, [rbp+result_0]", "lea     rsi, [rdi+length]", "cmp     byte ptr [rsi+rcx], 0", "jnz     loc_BCD3"], ["movsxd~rcx,edx", "mov~rdi,[rbp+0]", "lea~rsi,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 329, 0, 0, 2, 0, 1, 37, 10, 0.2651755047331825, ["cmp     edx, eax", "jge     loc_BCF3"], ["cmp~edx,eax", "jge~FOO"]], [0, 0, 329, 0, 0, 3, 1, 0, 38, 9, 0.13313227779173997, ["mov     [rbp+count], eax", "test    eax, eax", "jns     loc_BCF9"], ["mov~[rbp+0],eax", "test~eax,eax", "jns~FOO"]], [3, 0, 338, 2, 0, 7, 0, 0, 2, 5, 0.005612800536148112, ["mov     rax, [rbp+d.max_width_length]", "add     rax, 7", "cmp     rax, 6", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~rax,0", "mov~rdx,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 39, 8, 0.00043980899723548633, ["mov     maxlen, dp", "jmp     loc_BD70"], ["mov~maxlen,dp", "jmp~FOO"]], [0, 0, 337, 0, 0, 3, 0, 1, 3, 5, 0.008268409148027145, ["lea     rdi, [rax+6]; size", "cmp     rax, rdi", "ja      out_of_memory_1"], ["lea~rdi,[rax+0]", "cmp~rax,rdi", "ja~FOO"]], [1, 0, 336, 0, 0, 2, 0, 1, 4, 6, 0.010991036273770632, ["cmp     rdi, 0F9Fh", "ja      short loc_A4B9"], ["cmp~rdi,0", "ja~FOO"]], [4, 0, 332, 2, 0, 8, 2, 1, 5, 13, 0.013571249057552151, ["add     rdi, 1Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     rax, [rsp+420h+var_411]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "mov     [rbp+buf_malloced], 0", "jmp     short loc_A4DF"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 334, 0, 0, 2, 0, 1, 5, 5, 0.00015079165619502388, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 2, 4, 9.215045656362571e-05, ["mov     rdi, [rbp+d.dir]; ptr", "lea     rax, [rbp+d.direct_alloc_dir]", "cmp     rdi, rax", "jz      short loc_A486"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 3, 4, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 3, 3, 0.00014241434196196699, ["mov     rdi, [rbp+a.arg]; ptr", "lea     rax, [rbp+a.direct_alloc_arg]", "cmp     rdi, rax", "jz      short loc_A49E"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, 3, 0.0, ["call    _free"], ["call~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 2", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_AD3B"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_ACFD"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_AD7E"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 10", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B55D"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B51F"], ["cmp~eax,0", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 32, -1, 0.0, ["call    _abort; jumptable 000000000000BECF default case"], ["call~FOO"]], [5, 0, 329, 1, 0, 11, 0, 1, 31, 15, 0.36389377565552483, ["mov     [rbp+count], 0FFFFFFFFh", "mov     r12, allocated", "sub     r12, length", "cmp     maxlen, 7FFFFFFFh", "mov     r13d, 7FFFFFFFh", "cmovbe  r13, maxlen", "mov     rax, [rbp+saved_errno]", "mov     dword ptr [rax], 0", "mov     eax, [rbp+type]", "cmp     eax, 11h; switch 18 cases", "ja      loc_BCCE; jumptable 000000000000BECF default case"], ["mov~[rbp+0],0", "mov~r12,allocated", "sub~r12,length", "cmp~maxlen,0", "mov~r13d,0", "cmovbe~r13,maxlen", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 333, 0, 1, 4, 1, 2, 6, 5, 0.0027645136969087717, ["call    _malloc", "mov     [rbp+buf], rax", "test    buf_0, buf_0", "jz      out_of_memory_1"], ["call~FOO", "mov~[rbp+0],rax", "test~buf_0,buf_0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 38, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 332, 0, 0, 1, 0, 0, 7, 13, 0.00542849962302086, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [1, 0, 329, 0, 0, 3, 0, 1, 36, 10, 0.13722878445170478, ["mov     rcx, [rbp+fbp]", "cmp     byte ptr [rcx+1], 0", "jnz     short loc_BD64"], ["mov~rcx,[rbp+0]", "cmp~[yte ptr [rcx+0],0", "jnz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 37, 9, 0.03216050934070537, ["test    eax, eax", "js      loc_BD6D"], ["test~eax,eax", "js~FOO"]], [2, 0, 331, 0, 0, 3, 0, 1, 6, 12, 0.024486889503225272, ["mov     r15d, 0", "cmp     [rbp+result], 0", "jz      short loc_A4F9"], ["mov~r15d,0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 329, 0, 0, 1, 0, 0, 38, 9, 0.13763089553489152, ["mov     eax, [rbp+count]"], ["mov~eax,[rbp+0]"]], [0, 0, 329, 0, 0, 1, 0, 0, 38, 10, 0.004113261288430929, ["mov     [rbp+count], eax"], ["mov~[rbp+0],eax"]], [0, 0, 330, 0, 0, 2, 0, 0, 7, 12, 0.0, ["mov     rax, [rbp+lengthp]", "mov     r15, [rax]"], ["mov~rax,[rbp+0]", "mov~r15,<TAG>"]], [0, 0, 329, 0, 0, 4, 0, 0, 39, 8, 0.27178939432018095, ["mov     ecx, eax", "lea     edx, [rax+1]", "cmp     rdx, maxlen", "jb      loc_BEEC"], ["mov~ecx,eax", "lea~edx,[rax+0]", "cmp~rdx,maxlen", "jb~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 40, 7, 0.06894948479517467, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [1, 0, 329, 0, 0, 1, 0, 0, 11, 8, 0.020113931473569574, ["mov     r15d, 0Ch"], ["mov~r15d,0"]], [2, 0, 329, 1, 0, 13, 1, 0, 41, 9, 0.04933400351847198, ["lea     rax, [allocated+allocated]", "test    allocated, allocated", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "cmovs   rax, rdx", "lea     edx, [rcx+2]", "add     rdx, length", "cmp     length, rdx", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "cmova   rdx, rcx", "cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_BE82"], ["lea~rax,<TAG>", "test~allocated,allocated", "mov~rdx,0", "cmovs~rax,rdx", "lea~edx,[rcx+0]", "add~rdx,length", "cmp~length,rdx", "mov~rcx,0", "cmova~rdx,rcx", "cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 42, 8, 0.03598894194521236, ["test    allocated, allocated", "jz      loc_BE13"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 329, 0, 0, 4, 0, 1, 12, 7, 0.0262293708637011, ["cmp     allocated, rbx", "cmovb   allocated, rbx", "cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~allocated,rbx", "cmovb~allocated,rbx", "cmp~memory_size,0", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 43, 7, 0.012691631063081176, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 329, 1, 0, 2, 0, 1, 44, 8, 0.0026304766691798596, ["add     allocated, allocated", "jmp     loc_BE19"], ["add~allocated,allocated", "jmp~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 37, 16, 0.10379492334757477, ["mov     byte ptr [rcx+1], 0", "jmp     loc_BE82"], ["mov~[yte ptr [rcx+0],0", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 38, 8, 0.02676551897461674, ["mov     maxlen, dp"], ["mov~maxlen,dp"]], [0, 0, 14, 0, 0, 4, 1, 1, 39, 7, 0.025420960040211108, ["mov     retcount, [rbp+saved_errno]", "mov     ebx, [rax]", "test    ebx, ebx", "jnz     short loc_BD94"], ["mov~retcount,[rbp+0]", "mov~ebx,<TAG>", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [4, 0, 13, 0, 0, 6, 1, 0, 40, 7, 0.0, ["movzx   eax, byte ptr [dp+48h]", "and     eax, 0FFFFFFEFh", "cmp     al, 63h ; 'c'", "mov     ebx, 54h ; 'T'", "mov     eax, 16h", "cmovnz  ebx, eax"], ["movzx~eax,[yte ptr [dp+0]", "and~eax,0", "cmp~al,0", "mov~ebx,0", "mov~eax,0", "cmovnz~ebx,eax"]], [0, 0, 329, 0, 1, 5, 0, 2, 15, 8, 0.001365502219988272, ["mov     rsi, memory_size; size", "mov     rdi, [rbp+result_0]; ptr", "call    _realloc", "mov     [rbp+saved_errno], rax", "jmp     short loc_A5A4"], ["mov~rsi,memory_size", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 329, 0, 1, 3, 0, 1, 14, 8, 0.024738208930216974, ["mov     rdi, memory_size; size", "call    _malloc", "mov     [rbp+saved_errno], rax"], ["mov~rdi,memory_size", "call~FOO", "mov~[rbp+0],rax"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 3", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_AE40"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 1, 40, 6, 0.02155064086453883, ["mov     rax, [rbp+result_0]", "mov     rdi, [rbp+result]", "cmp     rax, rdi", "jz      short loc_BDAC"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "cmp~rax,rdi", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 41, 6, 0.002060819301331993, ["test    rax, rax", "jnz     short loc_BE09"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 329, 0, 0, 3, 1, 1, 15, 7, 0.029588673871156906, ["mov     rdi, [rbp+saved_errno]; dest", "test    rdi, rdi", "jz      out_of_memory"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 41, 5, 0.015619502387534557, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_BDC0"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 42, 6, 0.0, ["mov     rdi, rax; ptr", "call    _free", "jmp     short loc_BDAC"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 16, 10, 0.02978135209851722, ["test    length, length", "jz      short loc_A5E1"], ["test~length,length", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 42, 5, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 11", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B655"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B61E"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B69A"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 42, 4, 0.01158163692720114, ["mov     rdi, [rbp+d.dir]; ptr", "lea     rax, [rbp+d.direct_alloc_dir]", "cmp     rdi, rax", "jz      short loc_BDD8"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 43, 4, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 329, 0, 0, 2, 0, 0, 10, 10, 0.00440646728658792, ["mov     rax, [rbp+result_0]", "mov     [rbp+saved_errno], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 5, 0, 0, 4, 0, 1, 43, 3, 0.007476752953003267, ["mov     rdi, [rbp+a.arg]; ptr", "lea     rax, [rbp+a.direct_alloc_arg]", "cmp     rdi, rax", "jz      short loc_BDF0"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 44, 3, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 329, 0, 1, 5, 0, 1, 11, 9, 0.03914718941107482, ["mov     rax, [rbp+saved_errno]", "lea     rdi, [rax+length]; dest", "mov     rdx, n; n", "mov     rsi, [rbp+fbp]; src", "call    _memcpy"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "mov~rdx,n", "mov~rsi,[rbp+0]", "call~FOO"]], [0, 0, 329, 0, 0, 4, 0, 1, 9, 9, 0.26977465024713077, ["mov     rbx, length", "mov     cp_0, [rbp+result_0]", "mov     [rbp+saved_errno], rax", "jmp     loc_A5FB"], ["mov~rbx,length", "mov~cp_0,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 329, 0, 0, 1, 0, 0, 43, 8, 0.022023959118706544, ["mov     r15d, 0Ch"], ["mov~r15d,0"]], [1, 0, 329, 0, 0, 3, 0, 1, 11, 12, 0.24749937170143252, ["movzx   edx, byte ptr [dp+48h]", "cmp     dl, 25h ; '%'", "jz      loc_A78C"], ["movzx~edx,[yte ptr [dp+0]", "cmp~dl,0", "jz~FOO"]], [1, 0, 329, 0, 0, 4, 0, 1, 44, 7, 0.02813939850883807, ["cmp     allocated, rax", "cmovb   allocated, rax", "cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~allocated,rax", "cmovb~allocated,rax", "cmp~memory_size,0", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 14, 9, 0.0316494931724889, ["test    allocated, allocated", "jz      short loc_A7C2"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 329, 0, 0, 6, 1, 1, 45, 9, 0.028549886906257853, ["mov     rax, [rbp+result_0]", "mov     rdi, [rbp+result]", "cmp     rax, rdi", "setz    r13b", "test    rax, rax", "jz      short loc_BE5D"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "cmp~rax,rdi", "setz~r13b", "test~rax,rax", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 46, 9, 0.002002178101700595, ["test    r13b, r13b", "jnz     short loc_BE5D"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 329, 0, 1, 5, 0, 2, 47, 8, 0.0013655022199882717, ["mov     rsi, memory_size; size", "mov     rdi, [rbp+result_0]; ptr", "call    _realloc", "mov     r12, rax", "jmp     short loc_BE68"], ["mov~rsi,memory_size", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [1, 0, 329, 1, 0, 2, 0, 0, 15, 23, 0.09274943453128927, ["add     rcx, 1", "mov     [rbp+fbp], fbp_0"], ["add~rcx,0", "mov~[rbp+0],fbp_0"]], [0, 0, 329, 0, 1, 3, 0, 1, 46, 8, 0.026648236575353937, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r12, rax"], ["mov~rdi,memory_size", "call~FOO", "mov~r12,rax"]], [0, 0, 329, 0, 0, 2, 1, 1, 47, 7, 0.03149870151629387, ["test    r12, r12", "jz      out_of_memory"], ["test~r12,r12", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 1, 1, 16, 22, 0.1889838317835302, ["test    al, 2", "jz      short loc_A683"], ["test~al,0", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 48, 17, 0.03169137974365418, ["test    length, length", "jz      short loc_BE7B"], ["test~length,length", "jz~FOO"]], [0, 0, 329, 0, 0, 2, 1, 1, 49, 17, 0.002002178101700595, ["test    r13b, r13b", "jnz     short loc_BED1"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 329, 0, 0, 1, 0, 0, 49, 16, 0.02978972941275027, ["mov     [rbp+result_0], r12"], ["mov~[rbp+0],r12"]], [1, 0, 329, 0, 0, 4, 0, 0, 17, 22, 0.0, ["mov     rdi, [rbp+fbp]", "mov     byte ptr [rdi], 2Dh ; '-'", "lea     rdi, [rdi+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rdi,[rbp+0]", "mov~<TAG>,0", "lea~rdi,[rdi+0]", "mov~[rbp+0],fbp_0"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 1, 1, 17, 21, 0.19045823908854825, ["test    al, 4", "jz      short loc_A69C"], ["test~al,0", "jz~FOO"]], [1, 0, 329, 0, 0, 4, 0, 0, 18, 21, 0.0, ["mov     rcx, [rbp+fbp]", "mov     byte ptr [rcx], 2Bh ; '+'", "lea     rdi, [rcx+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rcx,[rbp+0]", "mov~<TAG>,0", "lea~rdi,[rcx+0]", "mov~[rbp+0],fbp_0"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 329, 0, 0, 2, 1, 1, 18, 20, 0.19193264639356625, ["test    al, 8", "jz      short loc_A6B5"], ["test~al,0", "jz~FOO"]], [0, 1, 329, 0, 0, 4, 0, 0, 19, 20, 0.0, ["mov     rdi, [rbp+fbp]", "mov     byte ptr [rdi], 20h ; ' '", "lea     rcx, [rdi+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rdi,[rbp+0]", "mov~<TAG>,<STR>", "lea~rcx,[rdi+0]", "mov~[rbp+0],fbp_0"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_AF88"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 329, 0, 0, 2, 1, 1, 19, 19, 0.19340705369858427, ["test    al, 10h", "jz      short loc_A6CE"], ["test~al,0", "jz~FOO"]], [0, 0, 329, 0, 1, 6, 0, 2, 50, 16, 0.0013655022199882717, ["mov     rdx, length; n", "mov     rsi, [rbp+result_0]; src", "mov     rdi, r12; dest", "call    _memcpy", "mov     [rbp+result_0], memory", "jmp     short loc_BE82"], ["mov~rdx,length", "mov~rsi,[rbp+0]", "mov~rdi,r12", "call~FOO", "mov~[rbp+0],memory", "jmp~FOO"]], [2, 0, 329, 2, 0, 7, 0, 1, 33, 13, 0.019481197857378663, ["mov     rax, [dp+50h]; jumptable 000000000000BECF case 12", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B766"], ["mov~rax,[dp+0]", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 329, 0, 0, 2, 0, 0, 34, 13, 0.008000335092569323, ["cmp     eax, 1", "jb      short loc_B723"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 329, 0, 0, 4, 0, 0, 20, 19, 0.0, ["mov     rcx, [rbp+fbp]", "mov     byte ptr [rcx], 23h ; '#'", "lea     rdi, [rcx+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rcx,[rbp+0]", "mov~<TAG>,0", "lea~rdi,[rcx+0]", "mov~[rbp+0],fbp_0"]], [1, 0, 329, 0, 0, 2, 0, 1, 35, 13, 0.004012733517634246, ["cmp     eax, 2", "jnz     loc_B7B3"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 329, 0, 0, 2, 1, 1, 20, 18, 0.1948814610036023, ["test    al, 40h", "jz      short loc_A6E7"], ["test~al,0", "jz~FOO"]], [1, 0, 329, 0, 0, 4, 0, 0, 21, 18, 0.0, ["mov     rdi, [rbp+fbp]", "mov     byte ptr [rdi], 49h ; 'I'", "lea     rcx, [rdi+1]", "mov     [rbp+fbp], fbp_0"], ["mov~rdi,[rbp+0]", "mov~<TAG>,0", "lea~rcx,[rdi+0]", "mov~[rbp+0],fbp_0"]], [0, 1, 329, 0, 0, 2, 1, 1, 21, 17, 0.19635586830862026, ["test    al, 20h", "jz      short loc_A700"], ["test~al,<STR>", "jz~FOO"]], [1, 0, 329, 0, 0, 4, 0, 0, 22, 17, 0.0, ["mov     flags, [rbp+fbp]", "mov     byte ptr [rax], 30h ; '0'", "lea     rax, [rax+1]", "mov     [rbp+fbp], fbp_0"], ["mov~flags,[rbp+0]", "mov~<TAG>,0", "lea~rax,[rax+0]", "mov~[rbp+0],fbp_0"]], [0, 0, 12, 0, 0, 4, 0, 1, 41, 6, 0.018333752199044987, ["mov     rax, [rbp+result_0]", "mov     length, [rbp+result]", "cmp     rax, rbx", "jz      short loc_BF2A"], ["mov~rax,[rbp+0]", "mov~length,[rbp+0]", "cmp~rax,rbx", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 42, 6, 0.0020273100443997656, ["test    rax, rax", "jz      short loc_BF2A"], ["test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 1, 2, 0, 1, 43, 6, 0.0, ["mov     rdi, [rbp+result_0]; ptr", "call    _free"], ["mov~rdi,[rbp+0]", "call~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 42, 5, 0.012503141492837396, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_BF3E"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 43, 5, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 329, 2, 1, 6, 0, 1, 24, 15, 0.0, ["sub     rax, rsi", "mov     r13, rax", "mov     rdx, n; n", "mov     rdi, [rbp+fbp]; dest", "call    _memcpy", "add     [rbp+fbp], n"], ["sub~rax,rsi", "mov~r13,rax", "mov~rdx,n", "mov~rdi,[rbp+0]", "call~FOO", "add~[rbp+0],n"]], [0, 0, 7, 0, 0, 4, 0, 1, 43, 4, 0.008532294546368434, ["mov     rdi, [rbp+d.dir]; ptr", "lea     rax, [rbp+d.direct_alloc_dir]", "cmp     rdi, rax", "jz      short loc_BF56"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 44, 4, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 44, 3, 0.004494429086035017, ["mov     rdi, [rbp+a.arg]; ptr", "lea     rax, [rbp+a.direct_alloc_arg]", "cmp     rdi, rax", "jz      short loc_BF6E"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 45, 3, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 31, 7, 0.003702772891011142, ["mov     rax, [rbp+saved_errno]", "mov     [rbp+result_0], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 329, 0, 0, 3, 0, 1, 12, 11, 0.0414425735109324, ["mov     rax, [dp+50h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_A7BD"], ["mov~rax,[dp+0]", "cmp~rax,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 1, 12, 6, 0.022652257686185808, ["mov     rax, [rbp+result_0]", "mov     rbx, [rbp+result]", "cmp     rax, rbx", "jz      short loc_BFB5"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "cmp~rax,rbx", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 36, -1, 0.0, ["fstp    st", "call    _abort"], ["fstp~<TAG>,<TAG>", "call~FOO"]], [0, 0, 329, 1, 0, 2, 0, 1, 16, 9, 0.0026220993549468047, ["add     allocated, allocated", "jmp     short loc_A7C8"], ["add~allocated,allocated", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 13, 5, 0.016193348412498955, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 329, 0, 0, 1, 0, 0, 15, 9, 0.02592778755131105, ["mov     r15d, 0Ch"], ["mov~r15d,0"]], [0, 0, 8, 0, 1, 2, 0, 1, 14, 5, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 3, 4, 0.01222250146602999, ["mov     rdi, [rbp+d.dir]; ptr", "lea     rax, [rbp+d.direct_alloc_dir]", "cmp     rdi, rax", "jz      short loc_BFE1"], ["mov~rdi,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 4, 4, 0.0, ["call    _free"], ["call~FOO"]]], "func_feature": [118, 61, 354, 4, 347, 510, 1, 1674, 0.03049, 4, 148], "succs": [[17], [0, 2], [0], [201], [3, 45], [11], [9, 5], [314, 210], [211, 7], [11], [9, 6], [108, 12], [25, 15], [201], [13, 61], [24, 25], [], [16, 168], [201], [18, 4], [338], [20, 143], [28], [296, 22], [22], [22], [338], [26, 149], [39], [28], [28], [28], [28], [28], [28], [338], [35, 171], [201], [37, 14], [292, 47], [39], [201], [41, 19], [77, 46], [43, 294], [], [48, 162], [288, 49], [50, 117], [51, 262], [120, 52], [338, 55], [124], [97, 63], [57, 107, 167, 8, 42, 75, 191, 242, 275, 53, 246, 249, 121, 186, 283, 317, 199, 159], [265], [201], [56, 38], [64], [58, 60], [65, 58], [], [88, 100], [94, 62], [128, 66], [64], [67, 79], [78, 79], [], [82, 68], [17], [17], [17], [17], [17], [76, 109], [80, 96], [83, 84], [77], [77], [93, 111], [95, 87], [81, 106], [84, 85], [89, 86], [84], [89], [32, 33, 29, 30, 31], [201], [90, 91], [91], [73, 92], [73], [201], [201], [], [201], [201], [338], [98, 340], [], [273, 274], [274, 101], [338], [10, 103], [303], [105, 300], [150, 110], [338], [201], [114, 147], [], [118], [112, 125, 118, 127], [156, 132], [], [115, 214], [338], [125], [338], [157, 119], [160, 122], [153, 145], [338], [59, 123], [129, 138], [113, 125], [125], [338], [133, 158], [342], [130, 342], [201], [137], [308, 206], [134, 207], [74, 227], [152, 142], [137], [21, 149], [154, 139], [146, 21], [164, 148], [27], [201], [144, 163], [27], [201], [152], [166, 151], [201], [155, 166], [178, 140], [201], [336, 141], [36], [], [124], [], [192, 161], [201], [185, 165], [120, 59], [], [], [193, 179], [36], [195, 172], [], [291], [169, 291], [180, 173], [189, 174], [180, 175], [184, 197], [180], [201], [176, 225], [180], [201], [250], [330, 126], [181, 183], [181], [201], [201], [202, 187], [200, 188], [194, 237], [201], [201], [196, 190], [201], [], [201], [201], [213, 198], [], [243, 212], [224, 177], [201], [226, 254], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [201], [248, 223], [228, 229], [238, 231], [252, 229], [257, 230], [232, 260], [233, 345], [270], [345, 234], [235, 236], [256], [345, 251], [], [240, 239], [240], [241, 70], [70], [244, 205], [], [204, 245], [203, 271], [216, 247], [116, 215], [], [], [249, 54], [345, 253], [], [256], [268, 255], [258, 269], [40, 259], [260], [257], [40], [34, 261], [325, 263], [265], [264, 250], [266, 293], [338, 102], [338, 267], [295], [250], [270], [272, 276], [], [276], [278], [278], [208, 135], [277, 279], [280, 279], [281, 338], [282, 286], [279], [170, 291], [286], [219, 284], [218, 285], [217, 311], [289, 287], [289], [291], [290, 71], [71], [44], [44], [295], [337, 69], [297, 338], [99, 343], [298, 301], [299, 301], [302], [303], [302], [304, 338], [307, 309], [305, 306], [306, 316], [250], [309], [], [312, 310], [312], [], [313, 315], [315], [209, 335], [321, 319], [250], [222, 318], [320, 221], [321], [339, 220], [322, 323], [323], [324, 182], [182], [328, 326], [328, 327], [328], [329, 331], [331], [126], [332, 333], [333], [72, 334], [72], [], [338], [341, 23], [131, 342], [], [104], [], [344, 345], [104], [345], [1, 346], [1]], "fname": "vasnprintf", "n_num": 347}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[1, 0, 90, 2, 0, 4, 0, 0, 0, 0, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 5", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C40D"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C624"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 90, 1, 0, 4, 0, 1, 3, 1, 0.8816292403248924, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C403"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 5, 1, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C611"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 6", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C43C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C432"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 17", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C655"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C649"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 7", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C46D"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [1, 0, 92, 0, 0, 3, 0, 1, 0, 3, 0.0, ["mov     rax, [a+8]", "cmp     qword ptr [a], 0", "jz      loc_C75E"], ["mov~rax,[a+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C461"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 18", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C686"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C67A"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 8", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C49E"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C492"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 19", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C6B7"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C6AB"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 9", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C4CF"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C4C3"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 20", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C6E8"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C6DC"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 10", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C500"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C4F4"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 21", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C719"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 90, 0, 0, 5, 0, 1, 1, 2, 0.01075011944577162, ["mov     ecx, 0", "lea     r8, off_FAD0", "lea     r10, wide_null_string_2696", "lea     r9, aNull; \"(NULL)\"", "jmp     short loc_C341"], ["mov~ecx,0", "lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "jmp~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C70D"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args+4]; jumptable 000000000000C353 case 11", "cmp     r11d, 0AFh", "ja      short loc_C538"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 1", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C355"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 2, 0, 0, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], dl"], ["mov~edx,<TAG>", "mov~[ap+0],dl"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C32B"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 22", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C74A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_C330"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C52A"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 1, 90, 2, 0, 4, 0, 0, 5, 2, 0.8815097945532727, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "jbe     loc_C758"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "jbe~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     short loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [2, 0, 90, 1, 0, 8, 1, 1, 4, 3, 0.001075011944577162, ["mov     rdx, [args+8]; jumptable 000000000000C353 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "jmp     loc_C330"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "jmp~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     loc_C330"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 90, 0, 0, 5, 1, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 90, 0, 0, 3, 0, 1, 6, 3, 0.03129479216435738, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     loc_C330"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 2, 1, 0.8922599139990444, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      loc_C764; jumptable 000000000000C353 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C73E"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 6, -1, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 000000000000C353 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 2", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C381"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 13", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C585"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C37A"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C57B"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 3", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C3AE"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 14", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C5B4"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C3A6"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C5AA"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 4", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C3DE"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 4, 5, 0.03129479216435738, ["mov     r11d, [args]; jumptable 000000000000C353 case 15", "cmp     r11d, 2Fh ; '/'", "ja      short loc_C5EC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 90, 2, 0, 4, 0, 0, 5, 4, 0.010332059245102722, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C3D3"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 90, 0, 0, 4, 0, 1, 5, 4, 0.010332059245102722, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_C5D9"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]]], "func_feature": [0, 3, 67, 0, 93, 136, 1, 329, 0.04748, 3, 46], "succs": [[4], [0, 5], [8, 6], [1, 2, 9, 13, 17, 23, 27, 31, 35, 39, 43, 47, 52, 53, 58, 65, 74, 75, 76, 81, 82, 87, 88], [61], [4], [7], [61], [7], [10, 12], [11], [61], [11], [16, 14], [15], [61], [15], [20, 22], [], [49, 18], [21], [61], [21], [24, 26], [25], [61], [25], [28, 30], [29], [61], [29], [32, 34], [33], [61], [33], [36, 38], [37], [61], [37], [40, 42], [41], [61], [41], [44, 46], [45], [61], [45], [48, 51], [50], [70], [61], [50], [60, 54], [57, 55], [59], [56], [61], [56], [72, 71], [61], [59], [73, 70], [61], [61], [61], [61], [61], [61], [61], [61], [74, 3], [69], [69], [], [], [77, 79], [80, 78], [62], [66], [62], [66], [83, 85], [84, 86], [63], [67], [63], [67], [89, 91], [90, 92], [64], [68], [64], [68]], "fname": "printf_fetchargs", "n_num": 93}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 226, 0, 0, 3, 0, 0, 0, 0, 0.1262930186823992, ["mov     rax, [a]", "cmp     n, rax", "jb      short loc_CA21"], ["mov~rax,<TAG>", "cmp~n,rax", "jb~FOO"]], [0, 0, 226, 0, 0, 4, 0, 0, 15, 4, 0.13793510324483776, ["mov     r13, [dp+28h]", "mov     rax, [rsp+88h+var_88]", "cmp     n, rax", "jb      short loc_C9FB"], ["mov~r13,[dp+0]", "mov~rax,<TAG>", "cmp~n,rax", "jb~FOO"]], [0, 0, 226, 0, 0, 2, 0, 0, 23, 12, 0.04176991150442478, ["mov     rax, [rsp+88h+memory]", "mov     [a+8], rax"], ["mov~rax,[rsp+0]", "mov~[a+0],rax"]], [2, 0, 226, 1, 0, 5, 0, 0, 17, 7, 0.04808259587020649, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_CBF6"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 16, 8, 0.0471976401179941, ["mov     rdx, cp_0"], ["mov~rdx,cp_0"]], [0, 0, 7, 0, 0, 2, 0, 1, 30, 2, 0.00019862340216322515, ["mov     n_0, d", "jmp     out_of_memory"], ["mov~n_0,d", "jmp~FOO"]], [0, 0, 226, 0, 0, 4, 0, 0, 29, 3, 0.0036007866273353, ["lea     a_allocated, [n_0+1]", "mov     [rsp+88h+var_88], rax", "cmp     n_0, rax", "jbe     loc_CD99"], ["lea~a_allocated,[n_0+0]", "mov~<TAG>,rax", "cmp~n_0,rax", "jbe~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 18, 6, 0.04896755162241888, ["mov     edx, 0", "cmp     cl, 24h ; '$'", "jnz     loc_CB21"], ["mov~edx,0", "cmp~cl,0", "jnz~FOO"]], [0, 0, 226, 0, 0, 1, 0, 1, 19, 11, 0.03734513274336283, ["jmp     loc_D2E7"], ["jmp~FOO"]], [2, 0, 226, 1, 0, 8, 0, 0, 28, 7, 0.0, ["mov     rdx, [a+8]", "lea     rcx, [rax+1]", "mov     [a], rcx", "shl     rax, 5", "mov     dword ptr [rdx+rax], 0", "mov     rax, [a]", "cmp     rax, n_0", "jbe     short loc_CDF9"], ["mov~rdx,[a+0]", "lea~rcx,[rax+0]", "mov~<TAG>,rcx", "shl~rax,0", "mov~<TAG>,0", "mov~rax,<TAG>", "cmp~rax,n_0", "jbe~FOO"]], [0, 0, 226, 0, 0, 3, 0, 0, 27, 7, 0.1572566371681416, ["mov     rax, [a]", "cmp     n_0, rax", "jb      short loc_CE17"], ["mov~rax,<TAG>", "cmp~n_0,rax", "jb~FOO"]], [2, 0, 226, 1, 0, 8, 0, 1, 9, 20, 0.05183874139626352, ["mov     rsi, rax", "movsx   edx, cl", "sub     edx, 30h ; '0'", "movsxd  rdx, edx", "mov     rcx, rdi", "mov     rbx, 1999999999999999h", "cmp     n, rbx", "ja      short loc_D220"], ["mov~rsi,rax", "movsx~edx,cl", "sub~edx,0", "movsxd~rdx,edx", "mov~rcx,rdi", "mov~rbx,0", "cmp~n,rbx", "ja~FOO"]], [1, 0, 226, 0, 0, 3, 0, 1, 8, 21, 0.037699115044247784, ["mov     r12d, 0", "mov     rdi, [rsp+88h+var_48]", "jmp     loc_D1FB"], ["mov~r12d,0", "mov~rdi,[rsp+0]", "jmp~FOO"]], [1, 0, 226, 1, 0, 1, 0, 0, 12, 21, 0.008829891838741397, ["add     rax, 1"], ["add~rax,0"]], [1, 0, 226, 0, 0, 2, 0, 1, 23, 7, 0.008788375396045012, ["mov     dword ptr [rsp+88h+memory], 11h; jumptable 000000000000CD56 case 75", "jmp     loc_CD65"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 226, 1, 0, 5, 0, 1, 22, 5, 0.38285152409046214, ["movzx   eax, al", "lea     rcx, off_FB4C", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 226, 1, 0, 2, 0, 0, 10, 20, 0.0, ["lea     rcx, [n+n*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [2, 0, 226, 1, 0, 8, 0, 0, 17, 11, 0.0, ["mov     rdx, [a+8]", "lea     rcx, [rax+1]", "mov     [a], rcx", "shl     rax, 5", "mov     dword ptr [rdx+rax], 0", "mov     rax, [a]", "cmp     rax, n", "jbe     short loc_CA03"], ["mov~rdx,[a+0]", "lea~rcx,[rax+0]", "mov~<TAG>,rcx", "shl~rax,0", "mov~<TAG>,0", "mov~rax,<TAG>", "cmp~rax,n", "jbe~FOO"]], [1, 0, 226, 0, 0, 4, 0, 1, 4, 15, 0.41264503441494593, ["mov     rbx, rax", "movzx   edx, byte ptr [rax]", "cmp     dl, 27h ; '''", "jz      short loc_C89F"], ["mov~rbx,rax", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [11, 0, 226, 1, 0, 19, 0, 1, 3, 16, 0.3753392330383481, ["mov     c, [d]", "lea     rcx, [rdx+rdx*4]", "lea     rcx, [rdx+rcx*2]", "mov     rdx, [d+8]", "lea     rbp, [rdx+rcx*8]", "mov     [dp+0], r13", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     qword ptr [dp+28h], 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     qword ptr [dp+40h], 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [dp+50h], 0FFFFFFFFFFFFFFFFh", "movzx   edx, byte ptr [r13+1]", "sub     edx, 30h ; '0'", "mov     r12, 0FFFFFFFFFFFFFFFFh", "cmp     dl, 9", "ja      short loc_C8A7"], ["mov~c,<TAG>", "lea~rcx,<TAG>", "lea~rcx,<TAG>", "mov~rdx,[d+0]", "lea~rbp,<TAG>", "mov~[dp+0],r13", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "movzx~edx,[yte ptr [r13+0]", "sub~edx,0", "mov~r12,0", "cmp~dl,0", "ja~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 7, 16, 0.04896755162241888, ["mov     r12, 0FFFFFFFFFFFFFFFFh", "cmp     sil, 24h ; '$'", "jnz     short loc_C8A7"], ["mov~r12,0", "cmp~sil,0", "jnz~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 13, 16, 0.03712881022615536, ["lea     rax, [rsi+2]", "jmp     loc_C8A7"], ["lea~rax,[rsi+0]", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 6, 16, 0.008220255653883972, ["mov     r12, 0FFFFFFFFFFFFFFFFh", "jmp     loc_C8A7"], ["mov~r12,0", "jmp~FOO"]], [1, 0, 226, 1, 0, 1, 0, 0, 6, 16, 0.03166175024582104, ["add     rax, 1"], ["add~rax,0"]], [1, 0, 226, 2, 0, 6, 1, 1, 28, 6, 0.15902654867256638, ["shl     n_0, 5", "mov     rax, r12", "add     rax, [a+8]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_D0B6"], ["shl~n_0,0", "mov~rax,r12", "add~rax,[a+0]", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 226, 0, 0, 5, 0, 1, 17, 6, 0.008593903638151426, ["mov     rsi, [rsp+88h+arg_posn]", "lea     rax, [rsi+1]", "mov     [dp+40h], rsi", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_D155"], ["mov~rsi,[rsp+0]", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "cmp~rsi,0", "jz~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 16, 5, 0.14057030481809243, ["cmp     qword ptr [dp+40h], 0FFFFFFFFFFFFFFFFh", "jz      loc_CC19"], ["cmp~[word ptr [dp+0],0", "jz~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 20, 11, 0.004267453294001967, ["mov     rax, [rsp+88h+var_48]"], ["mov~rax,[rsp+0]"]], [1, 0, 226, 0, 0, 4, 0, 1, 19, 12, 0.007767944936086529, ["movzx   edx, byte ptr [np]", "lea     eax, [rdx-30h]", "cmp     al, 9", "ja      short loc_D2CA"], ["movzx~edx,<TAG>", "lea~eax,[rdx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 226, 2, 0, 6, 1, 1, 17, 10, 0.128062930186824, ["shl     n, 5", "mov     rax, r13", "add     rax, [a+8]", "mov     edx, [rax]", "test    edx, edx", "jnz     short loc_CA92"], ["shl~n,0", "mov~rax,r13", "add~rax,[a+0]", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 226, 0, 0, 5, 0, 1, 25, 6, 0.009773844641101278, ["mov     rsi, [rsp+88h+arg_posn]", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_D19A"], ["mov~rsi,[rsp+0]", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "cmp~rsi,0", "jz~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 24, 6, 0.17229105211406096, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_D020"], ["cmp~arg_index,0", "jz~FOO"]], [1, 0, 226, 0, 0, 4, 0, 0, 11, 18, 0.04283185840707965, ["movzx   ecx, byte ptr [rsi+1]", "lea     edx, [rcx-30h]", "cmp     dl, 9", "jbe     short loc_D1F7"], ["movzx~ecx,[yte ptr [rsi+0]", "lea~edx,[rcx-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 226, 1, 0, 3, 0, 0, 10, 19, 0.0536086529006883, ["add     rdx, rcx", "mov     n, rdx", "jb      short loc_D1E8"], ["add~rdx,rcx", "mov~n,rdx", "jb~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 18, 5, 0.004267453294001967, ["mov     [rsp+88h+arg_posn], arg_posn_0", "jmp     loc_CB2C"], ["mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 18, 9, 0.06008849557522124, ["mov     dword ptr [rax], 5", "jmp     loc_C905"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 23, -1, 0.0008259587020648968, ["mov     arg_index, d", "jmp     error"], ["mov~arg_index,d", "jmp~FOO"]], [1, 0, 226, 0, 0, 4, 0, 1, 22, 13, 0.007767944936086529, ["movzx   eax, byte ptr [rsi+1]", "lea     edx, [rax-30h]", "cmp     dl, 9", "ja      short loc_D33C"], ["movzx~eax,[yte ptr [rsi+0]", "lea~edx,[rax-30h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 26, 5, 0.004267453294001967, ["mov     [rsp+88h+arg_posn], arg_posn_0", "jmp     loc_CD73"], ["mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 13, 9, 0.05048180924287119, ["mov     rax, cp_0"], ["mov~rax,cp_0"]], [2, 0, 226, 0, 0, 12, 1, 0, 12, 7, 0.1375811209439528, ["mov     [dp+18h], cp_0", "lea     rdi, [cp_0+1]", "mov     [dp+20h], cp_0", "mov     rsi, [rsp+88h+max_width_length]", "test    rsi, rsi", "mov     eax, 1", "cmovnz  rax, rsi", "mov     [rsp+88h+max_width_length], rax", "movzx   edx, byte ptr [rbx+1]", "lea     eax, [rdx-30h]", "cmp     al, 9", "jbe     loc_CA3D"], ["mov~[dp+0],cp_0", "lea~rdi,[cp_0+0]", "mov~[dp+0],cp_0", "mov~rsi,[rsp+0]", "test~rsi,rsi", "mov~eax,0", "cmovnz~rax,rsi", "mov~[rsp+0],rax", "movzx~edx,[yte ptr [rbx+0]", "lea~eax,[rdx-30h]+0]", "cmp~al,0", "jbe~FOO"]], [0, 0, 226, 0, 0, 4, 0, 0, 20, 3, 0.003608652900688299, ["lea     a_allocated, [n+1]", "mov     [rsp+88h+var_88], rax", "cmp     n, rax", "jbe     loc_CB52"], ["lea~a_allocated,[n+0]", "mov~<TAG>,rax", "cmp~n,rax", "jbe~FOO"]], [0, 0, 226, 1, 0, 4, 0, 0, 19, 4, 0.0456047197640118, ["add     rax, rax", "mov     [rsp+88h+var_88], rax", "cmp     n, a_allocated", "jnb     loc_CC3A"], ["add~rax,rax", "mov~<TAG>,rax", "cmp~n,a_allocated", "jnb~FOO"]], [2, 0, 226, 1, 0, 3, 0, 1, 12, 17, 0.040039331366765, ["sub     n, 1", "cmp     r12, 0FFFFFFFFFFFFFFFDh", "ja      loc_D141"], ["sub~n,0", "cmp~r12,0", "ja~FOO"]], [1, 0, 226, 1, 0, 8, 0, 0, 23, 4, 0.3837069813176008, ["mov     [dp+48h], bl; jumptable 000000000000CD56 case 0", "mov     [dp+8], cp_0", "mov     rax, [d]", "add     rax, 1", "mov     [d], rax", "mov     rsi, [rsp+88h+d_allocated]", "cmp     rax, rsi", "jb      loc_C7DE"], ["mov~[dp+0],bl", "mov~[dp+0],cp_0", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "mov~rsi,[rsp+0]", "cmp~rax,rsi", "jb~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 29, 5, 0.08074237954768929, ["cmp     edx, dword ptr [rsp+88h+memory]", "jz      loc_CE32; jumptable 000000000000CD56 case 0"], ["cmp~edx,[word ptr [rsp+0]", "jz~FOO"]], [0, 0, 226, 0, 0, 2, 0, 0, 29, 5, 0.07562930186823992, ["mov     esi, dword ptr [rsp+88h+memory]", "mov     [rax], esi"], ["mov~esi,[word ptr [rsp+0]", "mov~<TAG>,esi"]], [0, 0, 226, 1, 0, 4, 0, 0, 28, 4, 0.0456047197640118, ["add     rax, rax", "mov     [rsp+88h+var_88], rax", "cmp     n_0, a_allocated", "jnb     loc_D041"], ["add~rax,rax", "mov~<TAG>,rax", "cmp~n_0,a_allocated", "jnb~FOO"]], [2, 0, 226, 1, 0, 5, 0, 0, 14, 8, 0.05136676499508358, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_CA40"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 15, 7, 0.05225172074729597, ["cmp     cl, 24h ; '$'", "jnz     loc_C951"], ["cmp~cl,0", "jnz~FOO"]], [0, 0, 226, 0, 0, 2, 1, 1, 24, 3, 0.04271386430678466, ["test    rsi, rsi", "js      loc_D1DE"], ["test~rsi,rsi", "js~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 23, 7, 0.008788375396045012, ["mov     dword ptr [rsp+88h+memory], 0Eh; jumptable 000000000000CD56 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_CD65"], ["mov~[word ptr [rsp+0],0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 23, 2, 0.0002064896755162242, ["mov     arg_index, d", "jmp     out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 226, 0, 1, 4, 1, 2, 22, 3, 0.01905604719764012, ["call    _realloc", "mov     [rsp+88h+memory], rax", "test    memory_0, memory_0", "jz      loc_CC53"], ["call~FOO", "mov~[rsp+0],rax", "test~memory_0,memory_0", "jz~FOO"]], [0, 0, 226, 1, 0, 3, 0, 0, 18, 8, 0.05659783677482792, ["mov     n, rdx", "add     rax, rsi", "jb      short loc_D253"], ["mov~n,rdx", "add~rax,rsi", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 32, 2, 0.00019665683382497542, ["mov     n_0, d", "jmp     out_of_memory"], ["mov~n_0,d", "jmp~FOO"]], [0, 0, 226, 0, 1, 4, 1, 2, 31, 3, 0.01904621435594887, ["call    _realloc", "mov     [rsp+88h+dest], rax", "test    memory_1, memory_1", "jz      loc_D05B"], ["call~FOO", "mov~[rsp+0],rax", "test~memory_1,memory_1", "jz~FOO"]], [1, 0, 226, 0, 0, 3, 0, 1, 2, 17, 0.37805309734513276, ["lea     rax, [cp_0+1]", "cmp     dl, 25h ; '%'", "jz      short loc_C7F9"], ["lea~rax,[cp_0+0]", "cmp~dl,0", "jz~FOO"]], [1, 0, 226, 0, 0, 3, 0, 1, 16, 10, 0.04068829891838741, ["lea     rcx, [rbx+2]", "mov     eax, 0", "jmp     loc_D266"], ["lea~rcx,[rbx+0]", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 2, 0.003952802359882006, ["mov     arg_index, d", "jmp     short out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 226, 0, 0, 2, 1, 1, 18, 3, 0.05223205506391347, ["test    rax, rax", "js      loc_D1B8"], ["test~rax,rax", "js~FOO"]], [1, 0, 226, 0, 0, 3, 0, 1, 4, 18, 0.062477876106194694, ["movzx   ecx, byte ptr [np]", "cmp     dl, 9", "ja      loc_D344"], ["movzx~ecx,<TAG>", "cmp~dl,0", "ja~FOO"]], [0, 0, 226, 0, 1, 5, 1, 2, 22, 3, 0.019016715830875122, ["mov     rdi, memory_size; size", "call    _malloc", "mov     [rsp+88h+memory], rax", "test    memory_0, memory_0", "jnz     short loc_CC75"], ["mov~rdi,memory_size", "call~FOO", "mov~[rsp+0],rax", "test~memory_0,memory_0", "jnz~FOO"]], [1, 0, 226, 1, 0, 5, 0, 1, 21, 4, 0.04072763028515241, ["shl     rax, 5", "mov     rsi, rax; size", "mov     rdi, [a+8]; ptr", "cmp     [rsp+88h+src], rdi", "jz      loc_CC5B"], ["shl~rax,0", "mov~rsi,rax", "mov~rdi,[a+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 5, 18, 0.0471976401179941, ["mov     rdx, np"], ["mov~rdx,np"]], [0, 0, 7, 0, 0, 2, 0, 1, 23, 2, 0.0002064896755162242, ["mov     arg_index, d", "jmp     out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 226, 0, 1, 5, 1, 2, 31, 10, 0.019068502130449035, ["mov     rdi, memory_size; size", "call    _malloc", "mov     [rsp+88h+dest], rax", "test    memory_1, memory_1", "jz      short loc_D090"], ["mov~rdi,memory_size", "call~FOO", "mov~[rsp+0],rax", "test~memory_1,memory_1", "jz~FOO"]], [1, 0, 226, 1, 0, 5, 0, 1, 30, 4, 0.04076958374303507, ["mov     rsi, rax", "shl     rsi, 5; size", "mov     rdi, [a+8]; ptr", "cmp     [rsp+88h+src], rdi", "jz      loc_D063"], ["mov~rsi,rax", "shl~rsi,0", "mov~rdi,[a+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 226, 0, 1, 4, 0, 2, 20, 4, 0.01895771878072763, ["mov     rdi, memory_size; size", "call    _malloc", "mov     [rsp+88h+memory], rax", "jmp     loc_C9D7"], ["mov~rdi,memory_size", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 226, 1, 0, 4, 0, 1, 19, 5, 0.04057030481809243, ["shl     rsi, 5; size", "mov     rdi, [a+8]; ptr", "cmp     [rsp+88h+src], rdi", "jz      loc_CA67"], ["shl~rsi,0", "mov~rdi,[a+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [2, 0, 226, 1, 0, 5, 0, 0, 14, 10, 0.0, ["add     cp_0, 1", "movzx   esi, byte ptr [cp_0]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_CAB2"], ["add~cp_0,0", "movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 226, 0, 0, 5, 0, 1, 13, 10, 0.007020648967551622, ["mov     [dp+18h], cp_0", "movzx   esi, byte ptr [rax]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "ja      short loc_CAC1"], ["mov~[dp+0],cp_0", "movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [2, 0, 226, 1, 0, 5, 0, 0, 6, 17, 0.04808259587020649, ["add     np, 1", "movzx   esi, byte ptr [np]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     short loc_C872"], ["add~np,0", "movzx~esi,<TAG>", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 21, 2, 0.0002064896755162242, ["mov     arg_index, d", "jmp     short out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [1, 0, 226, 0, 0, 4, 0, 1, 20, 3, 0.0436086529006883, ["mov     rax, [rsp+88h+var_88]", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     rax, rsi", "ja      loc_D1BD"], ["mov~rax,<TAG>", "mov~rsi,0", "cmp~rax,rsi", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 7, -1, 0.01807276302851524, ["mov     rdi, [a+8]; ptr", "cmp     [rsp+88h+src], rdi", "jz      short loc_D172"], ["mov~rdi,[a+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 19, -1, 0.001809242871189774, ["mov     arg_index, d", "jmp     error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 30, -1, 0.001671583087512291, ["mov     r12, d", "jmp     error"], ["mov~r12,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, -1, 0.0002359882005899705, ["mov     r12, d", "jmp     short error"], ["mov~r12,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 21, -1, 0.0002359882005899705, ["mov     arg_index, d", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 14, -1, 0.0029498525073746312, ["mov     arg_index, d", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 24, -1, 0.0002359882005899705, ["mov     arg_index, d", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 18, -1, 0.0016519174041297936, ["mov     arg_index, d", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 21, -1, 0.0017109144542772862, ["mov     arg_index, d", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 23, -1, 9.832841691248771e-05, ["mov     arg_index, d; jumptable 000000000000CD56 cases 1-27,29,31,35-45,47-50,52-59,61,67,69-72,76,77,79,81,82", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 26, -1, 0.002831858407079646, ["mov     arg_index, d", "jmp     short error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.0017305801376597838, ["mov     r12, d", "jmp     short error"], ["mov~r12,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, -1, 0.0011799410029498525, ["mov     r12, d", "jmp     error"], ["mov~r12,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 20, -1, 0.0008259587020648968, ["mov     arg_index, d", "jmp     error"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 22, -1, 0.0021632251720747294, ["mov     arg_index, d; jumptable 000000000000CD56 default case"], ["mov~arg_index,d"]], [2, 0, 226, 1, 0, 8, 0, 1, 17, 9, 0.054827925270403144, ["lea     rbx, [rcx-1]", "movsx   edx, dl", "sub     edx, 30h ; '0'", "movsxd  rdx, edx", "mov     rsi, [rsp+88h+var_48]", "mov     rdi, 1999999999999999h", "cmp     n, rdi", "ja      short loc_D28E"], ["lea~rbx,[rcx-1]+0]", "movsx~edx,dl", "sub~edx,0", "movsxd~rdx,edx", "mov~rsi,[rsp+0]", "mov~rdi,0", "cmp~n,rdi", "ja~FOO"]], [1, 0, 226, 1, 0, 1, 0, 0, 20, 10, 0.008829891838741397, ["add     np, 1"], ["add~np,0"]], [1, 0, 226, 1, 1, 6, 0, 2, 23, 18, 0.01617502458210423, ["mov     rdx, [a]", "shl     rdx, 5; n", "mov     rsi, [rsp+88h+src]; src", "mov     rdi, [rsp+88h+memory]; dest", "call    _memcpy", "jmp     loc_CBA1"], ["mov~rdx,<TAG>", "shl~rdx,0", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 226, 0, 0, 3, 0, 1, 23, 18, 0.01617502458210423, ["mov     memory_0, [rsp+88h+src]", "cmp     rax, [a+8]", "jz      loc_CC75"], ["mov~memory_0,[rsp+0]", "cmp~rax,[a+0]", "jz~FOO"]], [0, 0, 226, 0, 0, 6, 0, 1, 26, 3, 0.03295968534906585, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "lea     rax, [d_allocated_0+rax*2]", "lea     d_allocated_0, ds:0[rax*8]; size", "mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_58], rdi", "jz      loc_D0D0"], ["lea~rax,<TAG>", "lea~rax,<TAG>", "lea~d_allocated_0,<TAG>", "mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [1, 0, 226, 1, 0, 5, 0, 1, 25, 3, 0.035732546705998, ["add     rsi, rsi", "mov     [rsp+88h+d_allocated], rsi", "mov     rax, 2E8BA2E8BA2E8BAh", "cmp     d_allocated_0, rax", "ja      loc_D1E3"], ["add~rsi,rsi", "mov~[rsp+0],rsi", "mov~rax,0", "cmp~d_allocated_0,rax", "ja~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 32, -1, 0.0001992789249426418, ["mov     n_0, d"], ["mov~n_0,d"]], [1, 0, 226, 0, 0, 2, 0, 1, 20, 15, 0.008652900688298918, ["cmp     edx, 5", "jnz     loc_D15A"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 226, 2, 0, 6, 1, 1, 19, 15, 0.12694198623402164, ["shl     n, 5", "mov     rax, rbx", "add     rax, [a+8]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_CC90"], ["shl~n,0", "mov~rax,rbx", "add~rax,[a+0]", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 226, 1, 0, 2, 0, 0, 18, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 226, 0, 0, 2, 0, 1, 18, 9, 0.06531956735496558, ["cmp     edx, 5", "jz      loc_C905"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 21, 14, 0.004267453294001967, ["mov     rbx, cp_0", "jmp     loc_C90E"], ["mov~rbx,cp_0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 20, -1, 0.008564405113077687, ["mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_58], rdi", "jz      short loc_D0A4"], ["mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 19, -1, 0.005991805965257295, ["jmp     loc_D093"], ["jmp~FOO"]], [0, 0, 4, 0, 1, 2, 0, 2, 19, 0, 0.006109800065552279, ["call    _free", "jmp     loc_D093"], ["call~FOO", "jmp~FOO"]], [1, 0, 226, 0, 0, 1, 1, 0, 5, 17, 0.0032841691248770895, ["or      dword ptr [dp+10h], 1"], ["or~[word ptr [dp+0],0"]], [1, 0, 226, 0, 0, 4, 0, 0, 19, 7, 0.04617502458210423, ["movzx   edx, byte ptr [np]", "lea     esi, [rdx-30h]", "cmp     sil, 9", "jbe     short loc_D262"], ["movzx~edx,<TAG>", "lea~esi,[rdx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 11, 17, 0.00025565388397246803, ["or      dword ptr [dp+10h], 40h", "jmp     short loc_C8A3"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 6, 17, 5.899705014749262e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_C8A3"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 7, 17, 9.832841691248771e-05, ["or      dword ptr [dp+10h], 4", "jmp     short loc_C8A3"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 8, 17, 0.0001376597836774828, ["or      dword ptr [dp+10h], 8", "jmp     short loc_C8A3"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 9, 17, 0.00017699115044247788, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_C8A3"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 1, 226, 0, 0, 2, 1, 1, 10, 17, 0.00021632251720747297, ["or      dword ptr [dp+10h], 20h", "jmp     short loc_C8A3"], ["or~[word ptr [dp+0],<STR>", "jmp~FOO"]], [2, 0, 226, 1, 0, 3, 0, 1, 20, 6, 0.04338249754178958, ["sub     n, 1", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "ja      loc_D146"], ["sub~n,0", "cmp~rax,0", "ja~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 24, 7, 0.010501474926253687, ["test    dl, 4", "jnz     loc_CD65"], ["test~dl,0", "jnz~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 23, 7, 0.022751010597618266, ["mov     dword ptr [rsp+88h+memory], 16h; jumptable 000000000000CD56 case 73", "cmp     edx, 0Fh", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [0, 0, 226, 0, 0, 3, 0, 1, 28, 20, 0.01216322517207473, ["mov     rax, [rsp+88h+var_58]", "cmp     rax, [d+8]", "jz      loc_D0E4"], ["mov~rax,[rsp+0]", "cmp~rax,[d+0]", "jz~FOO"]], [0, 0, 226, 0, 1, 4, 1, 2, 27, 3, 0.014995083579154375, ["call    _realloc", "mov     rbx, rax", "test    rax, rax", "jz      loc_D0C8"], ["call~FOO", "mov~rbx,rax", "test~rax,rax", "jz~FOO"]], [2, 0, 226, 1, 0, 3, 0, 0, 12, 9, 0.2495968534906588, ["sub     edx, 30h ; '0'", "cmp     dl, 9", "jbe     loc_CAA3"], ["sub~edx,0", "cmp~dl,0", "jbe~FOO"]], [2, 0, 226, 1, 0, 6, 0, 1, 15, 15, 0.010304818092428713, ["lea     rdx, [rbx+1]", "mov     [dp+30h], rbx", "movzx   eax, byte ptr [rbx+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_CCC2"], ["lea~rdx,[rbx+0]", "mov~[dp+0],rbx", "movzx~eax,[yte ptr [rbx+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 14, 7, 0.14932153392330383, ["cmp     byte ptr [rbx+1], 2Ah ; '*'", "jnz     loc_CCA1"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 21, -1, 0.0010717797443461161, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     short loc_D132"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 28, 1, 0.000491642084562438, ["mov     r12, d", "mov     rdi, [a+8]; ptr", "cmp     [rsp+88h+src], rdi", "jz      loc_D0A4"], ["mov~r12,d", "mov~rdi,[a+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 21, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 5, 14, 0.40670599803343166, ["cmp     dl, 2Dh ; '-'", "jz      short loc_C8D6"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 29, 19, 0.029616519174041296, ["mov     [d+8], rbx", "jmp     loc_C7DE"], ["mov~[d+0],rbx", "jmp~FOO"]], [1, 0, 226, 1, 1, 8, 0, 2, 28, 20, 0.012182890855457228, ["mov     rax, [d]", "lea     rdx, [rax+rax*4]", "lea     rdx, [rax+rdx*2]", "shl     rdx, 3; n", "mov     rsi, [rsp+88h+var_58]; src", "mov     rdi, rbx; dest", "call    _memcpy", "jmp     loc_CEB4"], ["mov~rax,<TAG>", "lea~rdx,<TAG>", "lea~rdx,<TAG>", "shl~rdx,0", "mov~rsi,[rsp+0]", "mov~rdi,rbx", "call~FOO", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 6, 13, 0.403992133726647, ["cmp     dl, 2Bh ; '+'", "jz      short loc_C8DC"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 226, 1, 0, 4, 0, 1, 21, 5, 0.04047197640117994, ["mov     [dp+28h], rax", "add     rbx, 2", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     loc_C970"], ["mov~[dp+0],rax", "add~rbx,0", "cmp~rax,0", "jnz~FOO"]], [0, 1, 226, 0, 0, 2, 0, 1, 7, 12, 0.40123893805309735, ["cmp     dl, 20h ; ' '", "jz      short loc_C8E2"], ["cmp~dl,<STR>", "jz~FOO"]], [3, 0, 226, 2, 0, 5, 0, 0, 16, 15, 0.0, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_CCB4"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 8, 11, 0.3984464110127827, ["cmp     dl, 23h ; '#'", "jz      short loc_C8E8"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 22, 7, 0.0007079646017699115, ["mov     rdi, cp_0", "jmp     loc_C951"], ["mov~rdi,cp_0", "jmp~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 23, 7, 0.022751010597618266, ["mov     dword ptr [rsp+88h+memory], 9; jumptable 000000000000CD56 cases 63,68", "cmp     edx, 0Fh", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 9, 10, 0.39561455260570305, ["cmp     dl, 30h ; '0'", "jz      short loc_C8EE"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 28, 2, 0.00015732546705998033, ["mov     r12, d", "jmp     out_of_memory"], ["mov~r12,d", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 10, 9, 0.3927433628318584, ["cmp     dl, 49h ; 'I'", "jnz     short loc_C8F4"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 24, 7, 0.010501474926253687, ["test    dl, 4", "jnz     loc_CD65"], ["test~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 18, 1, 0.019613897082923614, ["mov     rdi, [a+8]", "cmp     [rsp+88h+src], rdi", "jnz     loc_D36B"], ["mov~rdi,[a+0]", "cmp~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 21, 2, 0.0002064896755162242, ["mov     arg_index, d", "jmp     out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 17, 2, 0.007059980334316617, ["mov     arg_index, d", "jmp     short out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 2, 0.0002064896755162242, ["mov     arg_index, d", "jmp     short out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 2, 0.0002064896755162242, ["mov     arg_index, d", "jmp     short out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 22, 2, 0.0005506391347099312, ["mov     arg_index, d", "jmp     short out_of_memory"], ["mov~arg_index,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 30, 2, 0.00017240249098656176, ["mov     n_0, d", "jmp     short out_of_memory"], ["mov~n_0,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 25, 2, 0.0043067846607669595, ["mov     r12, d", "jmp     short out_of_memory"], ["mov~r12,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 26, 2, 9.832841691248771e-05, ["mov     r12, d", "jmp     short out_of_memory"], ["mov~r12,d", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 28, 2, 0.0033529990167158307, ["mov     n_0, d"], ["mov~n_0,d"]], [0, 0, 226, 1, 0, 3, 0, 0, 21, 9, 0.05325467059980334, ["add     rax, rcx", "mov     n, rax", "jb      short loc_D2D2"], ["add~rax,rcx", "mov~n,rax", "jb~FOO"]], [0, 0, 226, 0, 1, 5, 1, 2, 27, 2, 0.015309734513274354, ["mov     rdi, memory_size; size", "call    _malloc", "mov     rbx, rax", "test    rax, rax", "jz      loc_D359"], ["mov~rdi,memory_size", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 226, 1, 0, 9, 0, 1, 14, 9, 0.008790560471976402, ["mov     [dp+20h], cp_0", "mov     rsi, cp_0", "sub     rsi, rax", "mov     rax, width_length", "mov     width_length, [rsp+88h+max_width_length]", "cmp     rsi, width_length", "cmovnb  width_length, rsi", "mov     [rsp+88h+max_width_length], rax", "jmp     loc_C905"], ["mov~[dp+0],cp_0", "mov~rsi,cp_0", "sub~rsi,rax", "mov~rax,width_length", "mov~width_length,[rsp+0]", "cmp~rsi,width_length", "cmovnb~width_length,rsi", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 25, 7, 0.007020648967551622, ["mov     dword ptr [rsp+88h+memory], 7", "cmp     edx, 7", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [1, 0, 226, 1, 0, 1, 0, 0, 23, 11, 0.008829891838741397, ["add     r13, 1"], ["add~r13,0"]], [1, 0, 226, 0, 0, 4, 0, 0, 22, 8, 0.04283185840707965, ["movzx   eax, byte ptr [rsi+1]", "lea     ecx, [rax-30h]", "cmp     cl, 9", "jbe     short loc_D2E3"], ["movzx~eax,[yte ptr [rsi+0]", "lea~ecx,[rax-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 23, 12, 0.004267453294001967, ["mov     rdx, [rsp+88h+var_48]"], ["mov~rdx,[rsp+0]"]], [1, 0, 226, 0, 0, 2, 0, 1, 13, 8, 0.38202556538839727, ["cmp     byte ptr [cp_0], 2Eh ; '.'", "jz      loc_CAE4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 226, 1, 0, 5, 2, 0, 16, 14, 0.0033235004916420847, ["mov     ecx, edx", "and     ecx, 1", "mov     edi, esi", "shl     edi, cl", "or      edx, edi"], ["mov~ecx,edx", "and~ecx,0", "mov~edi,esi", "shl~edi,cl", "or~edx,edi"]], [1, 0, 226, 0, 0, 4, 0, 1, 15, 12, 0.40763028515240907, ["mov     r13, rax", "movzx   ebx, byte ptr [cp_0]", "cmp     bl, 68h ; 'h'", "jz      short loc_CCE5"], ["mov~r13,rax", "movzx~ebx,<TAG>", "cmp~bl,0", "jz~FOO"]], [1, 0, 226, 1, 0, 1, 0, 0, 17, 13, 0.027020648967551623, ["add     rax, 1"], ["add~rax,0"]], [1, 0, 226, 1, 0, 2, 0, 1, 20, 14, 0.00017699115044247788, ["add     edx, 8", "jmp     short loc_CCF0"], ["add~edx,0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 17, 14, 5.899705014749262e-05, ["or      edx, 4", "jmp     short loc_CCF0"], ["or~edx,0", "jmp~FOO"]], [1, 0, 226, 1, 0, 2, 0, 1, 18, 14, 9.832841691248771e-05, ["add     edx, 8", "jmp     short loc_CCF0"], ["add~edx,0", "jmp~FOO"]], [1, 0, 226, 1, 0, 2, 0, 1, 19, 14, 0.0001376597836774828, ["add     edx, 8", "jmp     short loc_CCF0"], ["add~edx,0", "jmp~FOO"]], [1, 0, 226, 1, 0, 2, 0, 1, 21, 14, 0.00021632251720747297, ["add     edx, 8", "jmp     short loc_CCF0"], ["add~edx,0", "jmp~FOO"]], [2, 0, 226, 0, 0, 3, 1, 1, 26, 7, 0.00352015732546706, ["mov     dword ptr [rsp+88h+memory], 1", "test    dl, 2", "jnz     loc_CD65"], ["mov~[word ptr [rsp+0],0", "test~dl,0", "jnz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.01048180924287119, ["mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_58], rdi", "jz      short loc_D183"], ["mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 11, 8, 0.38983284169124877, ["cmp     dl, 2Ah ; '*'", "jz      short loc_C920"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 226, 0, 0, 4, 0, 1, 14, 13, 0.3752999016715831, ["mov     rax, cp_0", "mov     edx, 0", "mov     esi, 1", "jmp     loc_CCF4"], ["mov~rax,cp_0", "mov~edx,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 16, 11, 0.4016519174041298, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_CD1D"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 226, 1, 0, 8, 0, 1, 20, 10, 0.051484759095378564, ["mov     rsi, r13", "movsx   eax, al", "sub     eax, 30h ; '0'", "cdqe", "mov     rcx, [rsp+88h+var_48]", "mov     rdi, 1999999999999999h", "cmp     n, rdi", "ja      short loc_D30D"], ["mov~rsi,r13", "movsx~eax,al", "sub~eax,0", "cdqe~", "mov~rcx,[rsp+0]", "mov~rdi,0", "cmp~n,rdi", "ja~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 17, 10, 0.39893805309734515, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_CD22"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 226, 1, 0, 2, 0, 0, 21, 10, 0.0, ["lea     rcx, [n+n*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [4, 0, 226, 1, 0, 7, 2, 1, 27, 7, 0.0, ["and     edx, 1", "cmp     edx, 1", "sbb     eax, eax", "and     eax, 2", "add     eax, 3", "mov     dword ptr [rsp+88h+memory], eax", "jmp     loc_CD65"], ["and~edx,0", "cmp~edx,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 18, 9, 0.3961848574237955, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_CD27"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 226, 0, 0, 3, 0, 1, 24, 6, 0.03712881022615536, ["mov     [dp+40h], rdx", "lea     r13, [rsi+2]", "jmp     loc_CB21"], ["mov~[dp+0],rdx", "lea~r13,[rsi+0]", "jmp~FOO"]], [2, 0, 226, 1, 0, 3, 0, 1, 23, 7, 0.040039331366765, ["sub     n, 1", "cmp     rdx, 0FFFFFFFFFFFFFFFDh", "ja      loc_D150"], ["sub~n,0", "cmp~rdx,0", "ja~FOO"]], [2, 0, 226, 0, 0, 4, 1, 1, 19, 8, 0.3933923303834808, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jnz     short loc_CD2C"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jnz~FOO"]], [1, 0, 226, 0, 0, 3, 0, 1, 20, 14, 0.11563421828908554, ["mov     dword ptr [rax], 5", "mov     rbx, cp_0", "jmp     loc_C90E"], ["mov~<TAG>,0", "mov~rbx,cp_0", "jmp~FOO"]], [0, 0, 226, 1, 0, 9, 0, 1, 16, 14, 0.012074729596853491, ["mov     [dp+38h], rdx", "mov     rax, rdx", "sub     rax, rbx", "mov     rsi, [rsp+88h+max_precision_length]", "cmp     rsi, precision_length", "cmovnb  precision_length, rsi", "mov     [rsp+88h+max_precision_length], rax", "mov     rbx, rdx", "jmp     loc_C90E"], ["mov~[dp+0],rdx", "mov~rax,rdx", "sub~rax,rbx", "mov~rsi,[rsp+0]", "cmp~rsi,precision_length", "cmovnb~precision_length,rsi", "mov~[rsp+0],rax", "mov~rbx,rdx", "jmp~FOO"]], [1, 0, 226, 0, 0, 2, 1, 1, 24, 7, 0.010501474926253687, ["test    dl, 4", "jnz     loc_CD65"], ["test~dl,0", "jnz~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 23, 7, 0.022751010597618266, ["mov     dword ptr [rsp+88h+memory], 0Ah; jumptable 000000000000CD56 cases 51,74,80,83", "cmp     edx, 0Fh", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [3, 0, 226, 0, 0, 12, 0, 0, 15, 6, 0.13636184857423794, ["mov     [dp+30h], rbx", "lea     r13, [rbx+2]", "mov     [dp+38h], cp_0", "mov     rsi, [rsp+88h+max_precision_length]", "cmp     rsi, 2", "mov     eax, 2", "cmovnb  rax, rsi", "mov     [rsp+88h+max_precision_length], rax", "movzx   eax, byte ptr [rbx+2]", "lea     edx, [rax-30h]", "cmp     dl, 9", "jbe     loc_CBF3"], ["mov~[dp+0],rbx", "lea~r13,[rbx+0]", "mov~[dp+0],cp_0", "mov~rsi,[rsp+0]", "cmp~rsi,0", "mov~eax,0", "cmovnb~rax,rsi", "mov~[rsp+0],rax", "movzx~eax,[yte ptr [rbx+0]", "lea~edx,[rax-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [2, 0, 1, 2, 0, 11, 0, 0, 2, -1, 0.0005801376597836774, ["mov     rax, [d]", "lea     rdx, [rax+rax*4]", "lea     rax, [rax+rdx*2]", "shl     rax, 3", "add     rax, [d+8]", "mov     [rax], cp_0", "mov     rax, [rsp+88h+max_width_length]", "mov     [d+10h], rax", "mov     rax, [rsp+88h+max_precision_length]", "mov     [d+18h], rax", "mov     eax, 0"], ["mov~rax,<TAG>", "lea~rdx,<TAG>", "lea~rax,<TAG>", "shl~rax,0", "add~rax,[d+0]", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],rax", "mov~rax,[rsp+0]", "mov~[d+0],rax", "mov~eax,0"]], [0, 0, 226, 0, 0, 3, 1, 1, 1, 18, 0.3813077679449361, ["movzx   edx, byte ptr [cp_0+0]", "test    dl, dl", "jz      loc_D105"], ["movzx~edx,[yte ptr [cp_0+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 20, 7, 0.3905604719764012, ["cmp     bl, 74h ; 't'", "jnz     short loc_CD36"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 25, 7, 0.007020648967551622, ["mov     dword ptr [rsp+88h+memory], 8", "cmp     edx, 7", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [0, 0, 226, 0, 0, 4, 0, 1, 17, 4, 0.13801376597836776, ["mov     rbx, [dp+40h]", "mov     rax, [rsp+88h+var_88]", "cmp     rax, n", "ja      short loc_CBAA"], ["mov~rbx,[dp+0]", "mov~rax,<TAG>", "cmp~rax,n", "ja~FOO"]], [2, 0, 226, 1, 0, 4, 0, 1, 21, 6, 0.38768928220255655, ["add     r13, 1", "lea     eax, [c-25h]", "cmp     al, 53h ; 'S'; switch 84 cases", "ja      loc_D15F; jumptable 000000000000CD56 default case"], ["add~r13,0", "lea~eax,[c-25h]+0]", "cmp~al,0", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 9, -1, 0.0027335299901671585, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     short loc_D132"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 226, 1, 1, 6, 0, 2, 32, 9, 0.01623402163225172, ["mov     rdx, [a]", "shl     rdx, 5; n", "mov     rsi, [rsp+88h+src]; src", "mov     rdi, [rsp+88h+dest]; dest", "call    _memcpy", "jmp     loc_CDE8"], ["mov~rdx,<TAG>", "shl~rdx,0", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 226, 0, 0, 3, 0, 1, 32, 9, 0.01617502458210423, ["mov     memory_1, [rsp+88h+src]", "cmp     rax, [a+8]", "jz      loc_D075"], ["mov~memory_1,[rsp+0]", "cmp~rax,[a+0]", "jz~FOO"]], [2, 0, 226, 0, 0, 3, 1, 1, 26, 7, 0.00352015732546706, ["mov     dword ptr [rsp+88h+memory], 2", "test    dl, 2", "jnz     loc_CD65"], ["mov~[word ptr [rsp+0],0", "test~dl,0", "jnz~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 5, 17, 0.012625368731563422, ["cmp     cl, 24h ; '$'", "jz      loc_D19F"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 226, 0, 0, 5, 0, 1, 13, 6, 0.10202556538839724, ["mov     rsi, [rsp+88h+arg_posn]", "lea     rax, [rsi+1]", "mov     [dp+28h], rsi", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_D14B"], ["mov~rsi,[rsp+0]", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "cmp~rsi,0", "jz~FOO"]], [1, 0, 226, 1, 1, 6, 0, 2, 23, 13, 0.0, ["mov     rdx, [a]", "shl     rdx, 5; n", "mov     rsi, rax; src", "mov     rdi, [rsp+88h+memory]; dest", "call    _memcpy", "jmp     loc_C9F2"], ["mov~rdx,<TAG>", "shl~rdx,0", "mov~rsi,rax", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 226, 0, 0, 3, 0, 1, 22, 13, 0.04, ["mov     rax, [rsp+88h+src]", "cmp     rax, [a+8]", "jz      loc_CA79"], ["mov~rax,[rsp+0]", "cmp~rax,[a+0]", "jz~FOO"]], [4, 0, 226, 1, 0, 7, 2, 1, 27, 7, 0.0, ["and     edx, 1", "cmp     edx, 1", "sbb     eax, eax", "and     eax, 2", "add     eax, 4", "mov     dword ptr [rsp+88h+memory], eax", "jmp     loc_CD65"], ["and~edx,0", "cmp~edx,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [2, 0, 226, 0, 0, 2, 0, 0, 23, 7, 0.008788375396045012, ["mov     dword ptr [rsp+88h+memory], 10h; jumptable 000000000000CD56 case 46", "mov     ebx, 73h ; 's'"], ["mov~[word ptr [rsp+0],0", "mov~ebx,0"]], [0, 0, 226, 0, 0, 4, 0, 1, 26, 4, 0.16943952802359882, ["mov     arg_index, [dp+50h]", "mov     rax, [rsp+88h+var_88]", "cmp     rax, n_0", "ja      short loc_CDF1"], ["mov~arg_index,[dp+0]", "mov~rax,<TAG>", "cmp~rax,n_0", "ja~FOO"]], [0, 0, 226, 0, 0, 2, 0, 0, 33, 8, 0.03767944936086529, ["mov     rax, [rsp+88h+dest]", "mov     [a+8], rax"], ["mov~rax,[rsp+0]", "mov~[a+0],rax"]], [2, 0, 226, 0, 0, 3, 0, 1, 23, 7, 0.01230853272151207, ["mov     dword ptr [rsp+88h+memory], 0Ch; jumptable 000000000000CD56 cases 28,32-34,60,64-66", "cmp     edx, 0Fh", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [2, 0, 226, 1, 0, 6, 1, 1, 24, 7, 0.0, ["and     edx, 4", "setnz   al", "movzx   eax, al", "add     eax, 0Bh", "mov     dword ptr [rsp+88h+memory], eax", "jmp     loc_CD65"], ["and~edx,0", "setnz~al", "movzx~eax,al", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [2, 0, 226, 1, 0, 6, 0, 1, 23, 7, 0.008788375396045012, ["cmp     edx, 7; jumptable 000000000000CD56 case 62", "setnle  al", "movzx   eax, al", "add     eax, 0Dh", "mov     dword ptr [rsp+88h+memory], eax", "jmp     loc_CD65"], ["cmp~edx,0", "setnle~al", "movzx~eax,al", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [2, 0, 226, 1, 0, 6, 0, 1, 23, 7, 0.008788375396045012, ["cmp     edx, 7; jumptable 000000000000CD56 case 78", "setnle  al", "movzx   eax, al", "add     eax, 0Fh", "mov     dword ptr [rsp+88h+memory], eax", "jmp     loc_CD65"], ["cmp~edx,0", "setnle~al", "movzx~eax,al", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [2, 0, 226, 0, 0, 3, 0, 1, 25, 7, 0.007020648967551622, ["mov     dword ptr [rsp+88h+memory], 15h", "cmp     edx, 7", "jg      loc_CD65"], ["mov~[word ptr [rsp+0],0", "cmp~edx,0", "jg~FOO"]], [1, 1, 226, 0, 0, 3, 1, 1, 26, 7, 0.00352015732546706, ["mov     dword ptr [rsp+88h+memory], 12h", "test    dl, 2", "jnz     loc_CD65"], ["mov~[word ptr [rsp+0],<STR>", "test~dl,0", "jnz~FOO"]], [3, 0, 226, 1, 0, 5, 2, 1, 27, 7, 0.0, ["and     edx, 1", "xor     edx, 1", "add     edx, 13h", "mov     dword ptr [rsp+88h+memory], edx", "jmp     loc_CD65"], ["and~edx,0", "xor~edx,0", "add~edx,0", "mov~[word ptr [rsp+0],edx", "jmp~FOO"]], [0, 0, 226, 0, 0, 2, 0, 0, 14, 5, 0.09640117994100295, ["mov     rbx, cp_0", "mov     [rsp+88h+arg_posn], arg_posn_0"], ["mov~rbx,cp_0", "mov~[rsp+0],arg_posn_0"]], [0, 0, 4, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 25, 5, 0.1598623402163225, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [0, 0, 226, 0, 0, 2, 1, 1, 16, 3, 0.0551819075712881, ["test    rax, rax", "js      loc_D1A4"], ["test~rax,rax", "js~FOO"]], [0, 0, 226, 0, 0, 2, 1, 1, 27, 3, 0.0516322517207473, ["test    rax, rax", "js      loc_D1C2"], ["test~rax,rax", "js~FOO"]], [0, 0, 226, 0, 0, 1, 0, 0, 12, 22, 0.004267453294001967, ["mov     r12, rdi"], ["mov~r12,rdi"]], [0, 0, 226, 1, 0, 4, 0, 0, 17, 4, 0.04544739429695182, ["add     rax, rax", "mov     [rsp+88h+var_88], rax", "cmp     n, a_allocated", "jb      short loc_C9A3"], ["add~rax,rax", "mov~<TAG>,rax", "cmp~n,a_allocated", "jb~FOO"]], [0, 0, 226, 0, 0, 4, 0, 1, 18, 3, 0.003608652900688299, ["lea     a_allocated, [n+1]", "mov     [rsp+88h+var_88], rax", "cmp     n, rax", "ja      loc_D1A9"], ["lea~a_allocated,[n+0]", "mov~<TAG>,rax", "cmp~n,rax", "ja~FOO"]], [0, 0, 226, 0, 0, 2, 0, 0, 24, 17, 0.0376204523107178, ["mov     rax, [rsp+88h+memory]", "mov     [a+8], rax"], ["mov~rax,[rsp+0]", "mov~[a+0],rax"]], [1, 0, 226, 0, 0, 4, 0, 1, 29, 3, 0.0436165191740413, ["mov     rax, [rsp+88h+var_88]", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     rax, rsi", "ja      loc_D1D9"], ["mov~rax,<TAG>", "mov~rsi,0", "cmp~rax,rsi", "ja~FOO"]], [1, 0, 226, 0, 0, 4, 0, 1, 11, 23, 0.008121927236971485, ["movzx   ecx, byte ptr [rsi+1]", "lea     edx, [rcx-30h]", "cmp     dl, 9", "ja      short loc_D24B"], ["movzx~ecx,[yte ptr [rsi+0]", "lea~edx,[rcx-30h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 226, 0, 0, 3, 0, 0, 18, 16, 0.12517207472959685, ["mov     rax, [a]", "cmp     n, rax", "jb      short loc_CBD0"], ["mov~rax,<TAG>", "cmp~n,rax", "jb~FOO"]], [1, 0, 226, 0, 0, 4, 0, 1, 18, 3, 0.04345132743362832, ["mov     rsi, [rsp+88h+var_88]", "mov     rdi, 7FFFFFFFFFFFFFFh", "cmp     rsi, rdi", "ja      loc_D1AE"], ["mov~rsi,<TAG>", "mov~rdi,0", "cmp~rsi,rdi", "ja~FOO"]], [1, 0, 226, 0, 0, 2, 0, 1, 21, 3, 0.0432251720747296, ["cmp     [rsp+88h+memory], 0", "jz      loc_D1B3"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 226, 0, 0, 2, 0, 1, 3, 19, 5.899705014749262e-05, ["mov     r13, cp_0", "jmp     short loc_C7DE"], ["mov~r13,cp_0", "jmp~FOO"]], [2, 0, 226, 1, 0, 8, 0, 0, 19, 16, 0.0, ["mov     rdx, [a+8]", "lea     rcx, [rax+1]", "mov     [a], rcx", "shl     rax, 5", "mov     dword ptr [rdx+rax], 0", "mov     rax, [a]", "cmp     rax, n", "jbe     short loc_CBB2"], ["mov~rdx,[a+0]", "lea~rcx,[rax+0]", "mov~<TAG>,rcx", "shl~rax,0", "mov~<TAG>,0", "mov~rax,<TAG>", "cmp~rax,n", "jbe~FOO"]], [0, 0, 226, 0, 1, 2, 0, 1, 20, 4, 0.01895771878072763, ["call    _realloc", "mov     [rsp+88h+memory], rax"], ["call~FOO", "mov~[rsp+0],rax"]], [8, 1, 226, 1, 0, 24, 0, 0, 0, 19, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     r13, format", "mov     r15, a", "mov     qword ptr [d], 0", "lea     rax, [d+20h]", "mov     [rsp+88h+var_58], rax", "mov     [d+8], rax", "mov     qword ptr [a], 0", "lea     rax, [a+10h]", "mov     [rsp+88h+src], rax", "mov     [a+8], rax", "mov     [rsp+88h+max_precision_length], 0", "mov     [rsp+88h+max_width_length], 0", "mov     [rsp+88h+var_88], 7", "mov     [rsp+88h+d_allocated], 7", "mov     [rsp+88h+arg_posn], 0", "mov     [rsp+88h+var_48], 0FFFFFFFFFFFFFFFFh", "mov     r14, d"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r13,format", "mov~r15,a", "mov~<TAG>,0", "lea~rax,[d+0]", "mov~[rsp+0],rax", "mov~[d+0],rax", "mov~<TAG>,0", "lea~rax,[a+0]", "mov~[rsp+0],rax", "mov~[a+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14,d"]]], "func_feature": [18, 39, 185, 3, 227, 355, 1, 779, 0.06442, 1, 67], "succs": [[17, 29], [0, 212], [0], [3, 7], [3], [138], [218, 5], [8, 26], [170], [24, 9], [24, 9], [16, 33], [11], [11], [31], [115, 133, 199, 204, 202, 44, 205, 14, 51, 84, 181], [33], [17, 29], [105, 124], [18, 61], [18, 12], [18], [18], [18], [45, 46], [34, 82], [25, 187], [91], [88, 27], [35, 100], [85, 38], [211, 30], [43, 13], [32, 219], [187], [155], [75], [154, 36], [200], [48], [195, 39], [74, 139], [41, 74], [21, 78], [184, 50], [44, 77], [44], [218, 6], [48, 49], [58, 195], [145, 95], [31], [138], [52, 93], [106, 28], [138], [192, 55], [19, 223], [90], [138], [42, 59], [64, 194], [65, 92], [53, 62], [72], [138], [96, 191], [56, 66], [222], [225, 68], [150, 70], [150, 70], [72, 20], [138], [73, 63], [210, 166], [75], [75], [75], [75], [75], [75], [75], [75], [75], [75], [75], [75], [75], [75], [99, 54], [90], [217], [217, 92], [149, 117], [146, 94], [102], [83, 101], [97, 178], [54], [155, 76], [168], [121, 123], [102], [102], [23], [113, 91], [23], [23], [23], [23], [23], [23], [128, 79], [206, 31], [114, 31], [125, 126], [116, 135], [155, 71], [130, 179], [182, 119], [189], [104, 121], [121], [108, 127], [184], [125], [129, 109], [1, 132], [131, 110], [130, 179], [134, 111], [195], [137, 31], [136, 112], [138], [107, 167], [31, 151], [104, 103], [138], [138], [138], [138], [138], [138], [138], [138], [138], [153, 37], [122, 126], [155], [164, 31], [170], [152, 176], [152], [120, 168], [158], [169, 156], [157], [158], [158], [158], [158], [158], [173, 31], [190], [165, 190], [40, 118], [157], [160, 171], [148, 172], [161, 174], [148], [31], [177, 162], [26], [81, 175], [185, 159], [168], [168], [186, 31], [180, 31], [26, 4], [189], [57, 183], [163, 188], [193, 31], [220, 60], [89, 15], [], [189], [201], [201, 191], [198, 31], [86, 22], [80, 209], [2], [2, 196], [31], [31], [10, 213], [10], [203, 31], [31], [31], [31], [207, 31], [208, 31], [31], [1], [166], [200], [140, 215], [147, 47], [13], [216, 221], [141, 221], [220], [144, 67], [214, 87], [224, 98], [69, 142], [197, 143], [184], [224, 98], [222], [184]], "fname": "printf_parse", "n_num": 227}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_D3D6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_D3C0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdatasync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error_at_line:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error_at_line", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dup2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fsync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
