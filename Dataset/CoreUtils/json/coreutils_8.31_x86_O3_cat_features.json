{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_147A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20BE30", "jmp     cs:qword_20BE38"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 49, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1480", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 29, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 73, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 37, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [3, 2, 3, 0, 2, 1, 1, 13, 0.0, 1, 0], "succs": [[0]], "fname": "write_pending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 126, 0, 0, 2, 0, 0, 0, 0, 0.37015439757375246, ["cmp     rbx, [rsp+188h+var_180]", "jbe     loc_1E43"], ["cmp~rbx,[rsp+0]", "jbe~FOO"]], [0, 0, 126, 0, 0, 4, 0, 0, 22, -1, 0.15740281224152192, ["cmp     r15, [rsp+188h+var_178]", "mov     eax, [rsp+188h+c]", "mov     [rsp+188h+var_184], eax", "jb      loc_1BFB"], ["cmp~r15,[rsp+0]", "mov~eax,[rsp+0]", "mov~[rsp+0],eax", "jb~FOO"]], [0, 0, 126, 0, 0, 2, 0, 0, 11, -1, 0.32780534877309075, ["cmp     r15, [rsp+188h+var_178]", "jnb     loc_1DE3"], ["cmp~r15,[rsp+0]", "jnb~FOO"]], [1, 0, 126, 0, 1, 6, 0, 2, 13, -1, 0.11397849462365592, ["mov     rdx, r13; count", "mov     rsi, rbp; buf", "mov     edi, 1; fd", "call    full_write", "cmp     r13, rax", "jnz     loc_23C3"], ["mov~rdx,r13", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "cmp~r13,rax", "jnz~FOO"]], [0, 0, 126, 2, 0, 5, 0, 0, 14, -1, 0.01315136476426799, ["add     rbp, r13", "mov     r9, r15", "sub     r9, rbp", "cmp     r13, r9", "jbe     short loc_1DF0"], ["add~rbp,r13", "mov~r9,r15", "sub~r9,rbp", "cmp~r13,r9", "jbe~FOO"]], [0, 0, 126, 0, 0, 2, 0, 0, 12, -1, 0.11331679073614558, ["mov     rbp, [rsp+188h+dest]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rbp,[rsp+0]", "nop~[word ptr [rax+0]"]], [2, 0, 126, 0, 3, 22, 3, 4, 17, -1, 0.025268817204301075, ["mov     rsi, cs:infile; arg", "mov     edi, 4; s", "mov     byte ptr [rsp+188h+var_180], r10b", "mov     [rsp+188h+var_178], rax", "mov     r15, r13", "call    quotearg_style", "lea     rsi, aCannotDoIoctlO; \"cannot do ioctl on %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     r11, [rsp+188h+var_178]", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     edi, edi; status", "mov     esi, [r11]; errnum", "call    _error", "mov     eax, [rsp+188h+var_184]", "movzx   r10d, byte ptr [rsp+188h+var_180]", "mov     cs:newlines2, eax", "jmp     loc_214C"], ["mov~rsi,<TAG>", "mov~edi,0", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],rax", "mov~r15,r13", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~r11,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~edi,edi", "mov~esi,<TAG>", "call~FOO", "mov~eax,[rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 126, 0, 0, 2, 1, 1, 16, -1, 0.06542597187758478, ["test    r10b, r10b", "jz      loc_23FB"], ["test~r10b,r10b", "jz~FOO"]], [1, 0, 126, 0, 1, 6, 1, 2, 11, -1, 0.008126550868486352, ["mov     edi, cs:input_desc; fd", "xor     esi, esi; offset", "mov     edx, 1; whence", "call    _lseek", "cmp     rax, [rsp+188h+stat_buf.st_size]", "jge     loc_1B28"], ["mov~edi,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "cmp~rax,[rsp+0]", "jge~FOO"]], [0, 0, 126, 0, 0, 3, 0, 1, 10, -1, 0.013296112489660877, ["mov     rax, [rsp+188h+var_F0]", "cmp     [rsp+188h+stat_buf.st_ino], rax", "jnz     loc_1B28"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [0, 0, 126, 0, 0, 3, 0, 0, 19, -1, 0.02377998345740281, ["lea     rax, line_buf; \"                 0\\t\"", "cmp     rdi, rax", "jbe     short loc_2047"], ["lea~rax,<TAG>", "cmp~rdi,rax", "jbe~FOO"]], [2, 0, 126, 1, 0, 4, 0, 0, 18, -1, 0.029611248966087675, ["sub     rax, 1", "mov     byte ptr [rax+1], 30h ; '0'", "cmp     rax, rdi", "jb      loc_2008"], ["sub~rax,0", "mov~[yte ptr [rax+0],0", "cmp~rax,rdi", "jb~FOO"]], [1, 0, 126, 0, 0, 3, 0, 1, 24, -1, 0.008436724565756823, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\"", "mov     rax, rdi", "jmp     loc_1F1F"], ["mov~<TAG>,0", "mov~rax,rdi", "jmp~FOO"]], [0, 0, 126, 0, 0, 3, 0, 0, 23, -1, 0.02377998345740281, ["lea     rax, line_buf; \"                 0\\t\"", "cmp     rdi, rax", "jbe     loc_1FF9"], ["lea~rax,<TAG>", "cmp~rdi,rax", "jbe~FOO"]], [2, 0, 126, 0, 0, 3, 0, 1, 13, -1, 0.13450510063413287, ["cmp     [rsp+188h+var_149], 0", "mov     [rsp+188h+var_DC], 0", "jnz     loc_1EC8"], ["cmp~[rsp+0],0", "mov~[rsp+0],0", "jnz~FOO"]], [0, 0, 126, 0, 1, 10, 0, 2, 15, -1, 0.010752688172043012, ["mov     r15, [rsp+188h+dest]", "mov     rdx, r9; n", "mov     rsi, rbp; src", "mov     [rsp+188h+var_160], r9", "mov     rdi, r15; dest", "call    _memmove", "cmp     rbx, [rsp+188h+var_180]", "mov     r9, [rsp+188h+var_160]", "lea     r15, [r15+r9]", "ja      loc_1C06"], ["mov~r15,[rsp+0]", "mov~rdx,r9", "mov~rsi,rbp", "mov~[rsp+0],r9", "mov~rdi,r15", "call~FOO", "cmp~rbx,[rsp+0]", "mov~r9,[rsp+0]", "lea~r15,<TAG>", "ja~FOO"]], [1, 0, 126, 0, 0, 3, 0, 0, 20, -1, 0.008436724565756823, ["lea     rax, [rdi-1]", "mov     byte ptr [rdi-1], 31h ; '1'", "mov     cs:line_num_start, rax"], ["lea~rax,[rdi-1]+0]", "mov~[yte ptr [rdi-1]+0],0", "mov~<TAG>,rax"]], [1, 0, 155, 0, 0, 2, 0, 1, 6, -1, 0.0014612627515853322, ["cmp     eax, 65h ; 'e'", "jz      short loc_18F3"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 155, 0, 0, 1, 0, 1, 5, -1, 0.00638268541494348, ["jle     short loc_1902"], ["jle~FOO"]], [0, 0, 126, 1, 0, 5, 0, 1, 18, -1, 0.019754618141714916, ["mov     r14, r15", "mov     r15, r13", "mov     rbx, r14", "sub     rbx, [rsp+188h+dest]", "jnz     loc_22B8"], ["mov~r14,r15", "mov~r15,r13", "mov~rbx,r14", "sub~rbx,[rsp+0]", "jnz~FOO"]], [0, 0, 126, 0, 0, 2, 1, 1, 17, -1, 0.08169285911221395, ["test    rax, rax", "jz      loc_21A2"], ["test~rax,rax", "jz~FOO"]], [0, 0, 126, 1, 0, 3, 0, 1, 14, -1, 0.0535221946512269, ["mov     rbx, r15", "sub     rbx, [rsp+188h+dest]", "jnz     loc_1F9C"], ["mov~rbx,r15", "sub~rbx,[rsp+0]", "jnz~FOO"]], [0, 0, 126, 0, 0, 1, 0, 1, 16, -1, 0.0023986765922249793, ["jmp     loc_1C1C"], ["jmp~FOO"]], [0, 0, 126, 0, 0, 1, 0, 0, 15, -1, 0.044010201268265776, ["mov     ebx, cs:input_desc"], ["mov~ebx,<TAG>"]], [1, 0, 126, 0, 1, 7, 0, 2, 15, -1, 0.006658395368072788, ["mov     r15, [rsp+188h+dest]", "mov     rdx, rbx; count", "mov     edi, (offset dword_0+1); outbuf", "mov     rsi, r15; bpout", "call    full_write", "cmp     rbx, rax", "jz      loc_1C2A"], ["mov~r15,[rsp+0]", "mov~rdx,rbx", "mov~edi,0", "mov~rsi,r15", "call~FOO", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 126, 0, 0, 3, 0, 0, 21, -1, 0.021174524400330852, ["mov     rsi, cs:line_num_print", "cmp     cs:line_num_start, rsi", "jnb     loc_1F77"], ["mov~rsi,<TAG>", "cmp~<TAG>,rsi", "jnb~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 20, -1, 0.008436724565756823, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\"", "jmp     short loc_2023"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 126, 0, 0, 1, 0, 1, 19, -1, 0.0070168183071408876, ["jmp     loc_1FBA"], ["jmp~FOO"]], [1, 0, 126, 0, 1, 6, 0, 2, 18, -1, 0.009415494899365866, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r14; count", "mov     edi, 1; fd", "call    full_write", "cmp     r14, rax", "jz      loc_213F"], ["mov~rsi,[rsp+0]", "mov~rdx,r14", "mov~edi,0", "call~FOO", "cmp~r14,rax", "jz~FOO"]], [1, 0, 126, 1, 0, 3, 0, 1, 22, -1, 0.0, ["sub     rsi, 1", "mov     cs:line_num_print, rsi", "jmp     loc_1F77"], ["sub~rsi,0", "mov~<TAG>,rsi", "jmp~FOO"]], [2, 0, 126, 1, 0, 4, 0, 0, 22, -1, 0.029611248966087675, ["sub     rax, 1", "mov     byte ptr [rax+1], 30h ; '0'", "cmp     rax, rdi", "jb      loc_1F00"], ["sub~rax,0", "mov~[yte ptr [rax+0],0", "cmp~rax,rdi", "jb~FOO"]], [1, 0, 126, 0, 1, 6, 0, 2, 16, -1, 0.11684587813620072, ["mov     rdx, [rsp+188h+count]; count", "mov     rsi, [rsp+188h+buf]; buf", "mov     edi, ebx; fd", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_20FE"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,ebx", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 126, 0, 0, 3, 1, 1, 15, -1, 0.07697132616487455, ["mov     r8d, [rsp+188h+var_DC]", "test    r8d, r8d", "jnz     loc_1C30"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 126, 1, 0, 5, 1, 1, 13, -1, 0.24466501240694788, ["add     [rsp+188h+var_184], 1", "lea     rdx, [rbx+1]", "mov     eax, [rsp+188h+var_184]", "test    eax, eax", "jle     short loc_1E77"], ["add~[rsp+0],0", "lea~rdx,[rbx+0]", "mov~eax,[rsp+0]", "test~eax,eax", "jle~FOO"]], [0, 0, 126, 0, 1, 2, 0, 1, 15, -1, 0.10434932451061482, ["mov     rdi, [rsp+188h+inbuf]; ptr", "call    _free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 126, 0, 0, 2, 1, 1, 14, -1, 0.04658808933002481, ["and     [rsp+188h+ok], al", "jmp     loc_215E"], ["and~[rsp+0],al", "jmp~FOO"]], [0, 0, 126, 0, 1, 3, 1, 1, 18, -1, 0.05346015991177281, ["mov     rdi, [rsp+188h+outbuf]; ptr", "and     [rsp+188h+ok], r10b", "call    _free"], ["mov~rdi,[rsp+0]", "and~[rsp+0],r10b", "call~FOO"]], [3, 0, 126, 0, 3, 17, 5, 4, 12, -1, 0.002956989247311828, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aSInputFileIsOu; \"%s: input file is output file\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 14, -1, 0.21753515301902399, ["cmp     eax, 1", "jz      short loc_1E6C"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.0012958367797077474, ["cmp     eax, 0FFFFFF7Eh", "jnz     short loc_2495"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 6, -1, 0.0031982354562999724, ["cmp     eax, 0FFFFFF7Dh", "mov     [rsp+188h+c], eax", "jnz     loc_245B"], ["cmp~eax,0", "mov~[rsp+0],eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 8, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [0, 0, 126, 0, 1, 8, 3, 1, 6, -1, 0.18332644058450512, ["xor     esi, esi; oflag", "mov     rdi, rax; file", "xor     eax, eax", "call    _open", "test    eax, eax", "mov     ebx, eax", "mov     cs:input_desc, eax", "jns     loc_1AC1"], ["xor~esi,esi", "mov~rdi,rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "mov~<TAG>,eax", "jns~FOO"]], [2, 0, 126, 0, 0, 9, 1, 1, 5, -1, 0.33958505652054044, ["lea     rdi, aLt+2; \"-\"", "mov     ecx, 2", "mov     rsi, rax", "repe cmpsb", "setnbe  bl", "sbb     bl, 0", "movsx   ebx, bl", "test    ebx, ebx", "jnz     loc_2050"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rax", "cmpsb~<TAG>,<TAG>", "setnbe~bl", "sbb~bl,0", "movsx~ebx,bl", "test~ebx,ebx", "jnz~FOO"]], [2, 0, 126, 0, 0, 3, 0, 1, 15, -1, 0.15256410256410258, ["cmp     byte ptr [rsp+188h+show_ends+2], 0", "mov     [rsp+188h+var_184], 2", "jnz     loc_1F91"], ["cmp~[yte ptr [rsp+0],0", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 126, 1, 0, 6, 0, 0, 18, -1, 0.055031706644609865, ["mov     rsi, [rsp+188h+buf]", "mov     rbx, [rsp+188h+var_148]", "add     rax, rsi", "mov     [rsp+188h+var_180], rax", "mov     byte ptr [rax], 0Ah", "mov     rax, rsi"], ["mov~rsi,[rsp+0]", "mov~rbx,[rsp+0]", "add~rax,rsi", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~rax,rsi"]], [0, 0, 126, 0, 0, 1, 0, 0, 17, -1, 0.13216156603253376, ["movzx   ebp, byte ptr [rax]"], ["movzx~ebp,<TAG>"]], [1, 0, 126, 0, 0, 4, 0, 1, 16, -1, 0.0728287841191067, ["mov     byte ptr [rax], 0Ah", "mov     rax, rbx", "mov     rbx, rdx", "jmp     loc_1C6C"], ["mov~<TAG>,0", "mov~rax,rbx", "mov~rbx,rdx", "jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 15, -1, 0.058726220016542596, ["cmp     byte ptr [rsp+188h+show_ends+3], 0", "jnz     loc_1F3F"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [6, 0, 126, 0, 0, 34, 6, 1, 3, -1, 0.12928039702233252, ["mov     r15, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFE0000h", "movzx   ecx, byte ptr [rsp+188h+show_ends+1]", "mov     [rsp+188h+have_read_stdin], 0", "mov     [rsp+188h+ok], 1", "lea     rdx, [r15-20000h]", "cmp     rdx, rax", "mov     eax, 20000h", "cmova   r15, rax", "movsxd  rax, ebp", "xor     ebx, 1", "mov     [rsp+188h+var_120], rax", "mov     rax, [rsp+188h+stat_buf.st_dev]", "and     ebx, ecx", "mov     [rsp+188h+var_F8], rax", "mov     out_dev_0, [rsp+188h+stat_buf.st_ino]", "mov     [rsp+188h+var_F0], rax", "mov     eax, [rsp+188h+stat_buf.st_mode]", "and     eax, 0F000h", "mov     [rsp+188h+var_100], eax", "mov     eax, ecx", "or      eax, [rsp+188h+show_ends]", "movsxd  rcx, cs:optind@@GLIBC_2_2_5", "mov     byte ptr [rsp+188h+show_ends+3], bl", "mov     [rsp+188h+var_FA], al", "lea     rax, aLt+2; \"-\"", "mov     [rsp+188h+var_130], rcx", "mov     cs:infile, rax", "movzx   eax, byte ptr [rsp+188h+show_ends+2]", "or      eax, r12d", "or      al, [rsp+188h+show_nonprinting]", "cmp     [rsp+188h+argc], ecx", "mov     [rsp+188h+var_F9], al", "jle     loc_23EF"], ["mov~r15,[rsp+0]", "mov~rax,0", "movzx~ecx,[yte ptr [rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rdx,[r15-20000h]+0]", "cmp~rdx,rax", "mov~eax,0", "cmova~r15,rax", "movsxd~rax,ebp", "xor~ebx,0", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "and~ebx,ecx", "mov~[rsp+0],rax", "mov~out_dev_0,[rsp+0]", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "and~eax,0", "mov~[rsp+0],eax", "mov~eax,ecx", "or~eax,[rsp+0]", "movsxd~rcx,<TAG>", "mov~[yte ptr [rsp+0],bl", "mov~[rsp+0],al", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "mov~<TAG>,rax", "movzx~eax,[yte ptr [rsp+0]", "or~eax,r12d", "or~al,[rsp+0]", "cmp~[rsp+0],ecx", "mov~[rsp+0],al", "jle~FOO"]], [2, 0, 127, 0, 1, 9, 1, 2, 2, -1, 0.1250620347394541, ["mov     [rsp+188h+c], eax", "lea     c_0, [rsp+188h+stat_buf]", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rsp+188h+out_dev], rax", "call    ___fxstat", "test    eax, eax", "js      loc_24A4"], ["mov~[rsp+0],eax", "lea~c_0,[rsp+0]", "mov~esi,0", "mov~edi,0", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 17, -1, 0.2874965536255859, ["cmp     bpl, 0Ah", "jz      loc_1BF0"], ["cmp~bpl,0", "jz~FOO"]], [0, 0, 126, 0, 0, 3, 0, 1, 16, -1, 0.1510339123242349, ["movzx   ebp, byte ptr [rbx]", "mov     rbx, rdx", "jmp     loc_1C6F"], ["movzx~ebp,<TAG>", "mov~rbx,rdx", "jmp~FOO"]], [6, 0, 155, 1, 6, 34, 3, 6, 0, -1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "xor     r12d, r12d", "push    rbp", "push    rbx", "mov     rbx, argv_0", "sub     rsp, 158h", "mov     [rsp+188h+argv], argv_0", "mov     [rsp+188h+argc], edi", "mov     rax, fs:28h", "mov     [rsp+188h+var_40], rax", "xor     eax, eax", "call    _getpagesize", "mov     rdi, [argv_0]; argv0", "mov     ebp, eax", "xor     ebx, ebx", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     [rsp+188h+show_nonprinting], 0", "mov     byte ptr [rsp+188h+show_ends], 0", "mov     byte ptr [rsp+188h+show_ends+2], 0", "mov     byte ptr [rsp+188h+show_ends+1], 0", "nop     dword ptr [rax+00h]"], ["push~r15", "push~r14", "push~r13", "push~r12", "xor~r12d,r12d", "push~rbp", "push~rbx", "mov~rbx,argv_0", "sub~rsp,0", "mov~[rsp+0],argv_0", "mov~[rsp+0],edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,<TAG>", "mov~ebp,eax", "xor~ebx,ebx", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[yte ptr [rsp+0],0", "nop~[word ptr [rax+0]"]], [0, 0, 126, 0, 0, 3, 1, 1, 18, -1, 0.18866832092638544, ["mov     edi, [rsp+188h+var_184]", "test    edi, edi", "js      short loc_1CD0"], ["mov~edi,[rsp+0]", "test~edi,edi", "js~FOO"]], [1, 0, 126, 0, 0, 3, 0, 1, 14, -1, 0.07543424317617867, ["cmp     byte ptr [rsp+188h+show_ends], 0", "lea     rax, [r15+1]", "jz      short loc_1EB8"], ["cmp~[yte ptr [rsp+0],0", "lea~rax,[r15+0]", "jz~FOO"]], [0, 0, 126, 0, 1, 6, 0, 2, 19, -1, 0.04487179487179487, ["mov     rdi, r15; dest", "mov     [rsp+188h+var_160], rdx", "call    _stpcpy", "mov     rdx, [rsp+188h+var_160]", "mov     r15, rax", "jmp     loc_1E77"], ["mov~rdi,r15", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r15,rax", "jmp~FOO"]], [0, 0, 126, 0, 0, 4, 0, 0, 4, -1, 0.1749862145023435, ["mov     rax, [rsp+188h+argv]", "mov     rcx, [rsp+188h+var_130]", "mov     rax, [rax+rcx*8]", "mov     cs:infile, rax"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 126, 1, 0, 4, 0, 1, 8, -1, 0.15856768679349323, ["add     [rsp+188h+var_130], 1", "mov     rax, [rsp+188h+var_130]", "cmp     [rsp+188h+argc], eax", "jg      loc_1A78"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],eax", "jg~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 9, -1, 0.04392059553349876, ["cmp     [rsp+188h+have_read_stdin], 0", "jnz     loc_22D8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 1, 0, 3, 11, 2, 3, 15, -1, 0.005086848635235732, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 126, 0, 1, 6, 0, 2, 14, -1, 0.011166253101736972, ["mov     rdx, rax; count", "mov     rsi, rbx; buf", "mov     edi, 1; fd", "call    full_write", "cmp     r13, rax", "jnz     loc_2469"], ["mov~rdx,rax", "mov~rsi,rbx", "mov~edi,0", "call~FOO", "cmp~r13,rax", "jnz~FOO"]], [0, 0, 126, 0, 0, 4, 0, 1, 15, -1, 0.03426385442514475, ["mov     rsi, rax", "mov     rax, r15", "mov     r15, rsi", "jmp     short loc_1E8A"], ["mov~rsi,rax", "mov~rax,r15", "mov~r15,rsi", "jmp~FOO"]], [2, 0, 126, 1, 0, 2, 0, 0, 15, -1, 0.03426385442514475, ["mov     byte ptr [r15], 24h ; '$'", "add     r15, 2"], ["mov~<TAG>,0", "add~r15,0"]], [0, 0, 126, 0, 0, 3, 0, 1, 20, -1, 0.05268817204301075, ["mov     rdi, cs:line_num_start", "lea     rax, line_buf+11h; \"0\\t\"", "jmp     short loc_1CB1"], ["mov~rdi,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 19, -1, 0.05831265508684864, ["cmp     byte ptr [rsp+188h+show_ends+1], 0", "jz      short loc_1CD0"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 155, 0, 1, 8, 1, 2, 1, -1, 0.14048800661703886, ["mov     rsi, [rsp+188h+argv]; argv", "mov     edi, [rsp+188h+argc]; argc", "lea     rcx, long_options_7050; longopts", "lea     rdx, shortopts; \"benstuvAET\"", "xor     r8d, r8d; longind", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1988"], ["mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 6, -1, 0.009387923904052936, ["cmp     eax, 75h ; 'u'", "jz      short loc_1878"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 9, -1, 0.006286186931348222, ["mov     [rsp+188h+show_nonprinting], 1", "jmp     short loc_1878"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 8, -1, 0.006286186931348222, ["mov     r12d, 1", "jmp     short loc_1878"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 7, -1, 0.033767576509511996, ["mov     byte ptr [rsp+188h+show_ends], 1", "jmp     loc_1878"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 4, -1, 0.02098842018196857, ["mov     byte ptr [rsp+188h+show_ends+1], 1", "jmp     loc_1878"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 5, -1, 0.01120760959470637, ["mov     byte ptr [rsp+188h+show_ends+2], 1", "jmp     loc_1878"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 155, 0, 0, 3, 0, 1, 8, -1, 0.006203473945409429, ["mov     r12d, 1", "mov     [rsp+188h+show_nonprinting], 1", "jmp     loc_1878"], ["mov~r12d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 126, 0, 3, 13, 3, 3, 7, -1, 0.03552522746071133, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0"]], [0, 0, 126, 0, 0, 1, 0, 1, 11, -1, 0.001964433416046319, ["jmp     loc_206C"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 6, 2, 1, 10, -1, 0.012158808933002481, ["movzx   eax, [rsp+188h+ok]", "xor     eax, 1", "mov     rcx, [rsp+188h+var_40]", "xor     rcx, fs:28h", "movzx   eax, al", "jnz     loc_249F"], ["movzx~eax,[rsp+0]", "xor~eax,0", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "movzx~eax,al", "jnz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 2, -1, 0.019851116625310174, ["cmp     eax, 62h ; 'b'", "jz      loc_1971"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 155, 0, 0, 1, 0, 1, 3, -1, 0.018320926385442516, ["jle     short loc_18D0"], ["jle~FOO"]], [1, 0, 126, 0, 0, 5, 0, 1, 21, -1, 0.056782464846980976, ["movzx   edx, byte ptr [rax]", "lea     ecx, [rdx+1]", "cmp     dl, 38h ; '8'", "mov     [rax], cl", "jg      short loc_1CA0"], ["movzx~edx,<TAG>", "lea~ecx,[rdx+0]", "cmp~dl,0", "mov~<TAG>,cl", "jg~FOO"]], [1, 0, 126, 1, 3, 16, 3, 4, 17, -1, 0.028246484698097603, ["mov     rdx, cs:infile; arg", "xor     edi, edi; n", "mov     esi, 3; s", "mov     r14, r15", "mov     r15, r13", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, rbx", "call    _error", "sub     r14, [rsp+188h+dest]", "jnz     loc_2298"], ["mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "mov~r14,r15", "mov~r15,r13", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,rbx", "call~FOO", "sub~r14,[rsp+0]", "jnz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 4, -1, 0.013123793768955056, ["cmp     eax, 73h ; 's'", "jz      short loc_191A"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 126, 0, 0, 8, 1, 1, 9, -1, 0.1276123518059002, ["mov     rsi, cs:infile", "lea     rdi, aLt+2; \"-\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_20A4"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 126, 0, 1, 4, 1, 1, 10, -1, 0.00791976840363937, ["mov     edi, cs:input_desc; fd", "call    _close", "test    eax, eax", "jns     loc_20A4"], ["mov~edi,<TAG>", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 155, 0, 0, 1, 0, 1, 7, -1, 0.002729528535980149, ["jl      loc_1978"], ["jl~FOO"]], [2, 0, 126, 0, 0, 2, 0, 0, 6, -1, 0.14935208161014613, ["mov     cs:input_desc, 0", "mov     [rsp+188h+have_read_stdin], 1"], ["mov~<TAG>,0", "mov~[rsp+0],0"]], [0, 0, 126, 0, 0, 1, 0, 0, 22, -1, 0.020264681555004136, ["mov     rsi, cs:line_num_print; src"], ["mov~rsi,<TAG>"]], [1, 0, 155, 0, 0, 2, 0, 1, 8, -1, 0.0009925558312655087, ["cmp     eax, 76h ; 'v'", "jnz     loc_2495"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []], [0, 0, 126, 0, 1, 3, 0, 1, 23, -1, 0.04487179487179487, ["mov     rdi, r15; dest", "call    _stpcpy", "mov     r15, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax"]], [0, 0, 126, 0, 0, 3, 0, 0, 25, -1, 0.021174524400330852, ["mov     rsi, cs:line_num_print", "cmp     rsi, rax", "jbe     loc_1CC5"], ["mov~rsi,<TAG>", "cmp~rsi,rax", "jbe~FOO"]], [1, 0, 126, 1, 0, 3, 0, 1, 26, -1, 0.0, ["sub     rsi, 1", "mov     cs:line_num_print, rsi", "jmp     loc_1CC5"], ["sub~rsi,0", "mov~<TAG>,rsi", "jmp~FOO"]], [1, 0, 126, 0, 1, 6, 0, 2, 19, -1, 0.009112213950923627, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, rbx; count", "mov     edi, 1; fd", "call    full_write", "cmp     rbx, rax", "jz      loc_21B6"], ["mov~rsi,[rsp+0]", "mov~rdx,rbx", "mov~edi,0", "call~FOO", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 4, -1, 0.009663633857182243, ["cmp     eax, 41h ; 'A'", "jz      short loc_18ED"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 155, 0, 0, 1, 0, 1, 5, -1, 0.010077198786876206, ["jle     short loc_1924"], ["jle~FOO"]], [0, 0, 126, 0, 0, 1, 0, 1, 20, -1, 0.08602150537634409, ["jmp     short loc_1D2D"], ["jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 19, -1, 0.1782464846980976, ["cmp     [rsp+188h+show_nonprinting], 0", "jz      short loc_1CFB"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 6, -1, 0.011304108078301624, ["cmp     eax, 45h ; 'E'", "jz      short loc_18F8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 7, -1, 0.0011717673007995589, ["cmp     eax, 54h ; 'T'", "jnz     loc_2495"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 126, 0, 1, 4, 2, 1, 10, -1, 0.024937965260545907, ["xor     edi, edi; fd", "call    _close", "test    eax, eax", "jns     loc_20C7"], ["xor~edi,edi", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 126, 0, 0, 2, 1, 1, 21, -1, 0.008933002481389578, ["test    r12b, r12b", "jz      short loc_1D01"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 20, -1, 0.10090984284532671, ["cmp     bpl, 9", "jz      short loc_1CE0"], ["cmp~bpl,0", "jz~FOO"]], [1, 0, 155, 0, 0, 1, 0, 0, 5, -1, 0.0040529363110008276, ["mov     r12d, 1"], ["mov~r12d,0"]], [1, 1, 126, 1, 0, 3, 0, 0, 22, -1, 0.0030190239867659225, ["mov     eax, 495Eh", "add     r15, 2", "mov     [r15-2], ax"], ["mov~eax,<STR>", "add~r15,0", "mov~[r15-2]+0],ax"]], [1, 0, 155, 0, 0, 1, 0, 0, 6, -1, 0.012799834574028123, ["mov     [rsp+188h+show_nonprinting], 1"], ["mov~[rsp+0],0"]], [1, 0, 126, 0, 0, 2, 0, 1, 17, -1, 0.03325062034739454, ["mov     [rsp+188h+var_149], 0", "jmp     loc_1EE9"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 126, 0, 1, 8, 2, 2, 14, -1, 0.08164460987041633, ["mov     ebx, cs:input_desc", "mov     rdx, [rsp+188h+var_128]", "xor     eax, eax", "mov     esi, 541Bh; request", "mov     edi, ebx; fd", "call    _ioctl", "test    eax, eax", "js      loc_1FC0"], ["mov~ebx,<TAG>", "mov~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 126, 1, 0, 2, 0, 0, 23, -1, 0.01042183622828784, ["add     rbx, 1", "movzx   ebp, byte ptr [rbx-1]"], ["add~rbx,0", "movzx~ebp,[yte ptr [rbx-1]+0]"]], [1, 0, 126, 1, 0, 3, 0, 1, 22, -1, 0.0031017369727047144, ["mov     [r15], bpl", "add     r15, 1", "jmp     short loc_1CF3"], ["mov~<TAG>,bpl", "add~r15,0", "jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 21, -1, 0.09011579818031432, ["cmp     bpl, 0Ah", "jz      loc_1DD0"], ["cmp~bpl,0", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 7, -1, 0.0035497656465398376, ["cmp     eax, 6Eh ; 'n'", "jnz     loc_2495"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 126, 0, 1, 6, 1, 2, 7, -1, 0.3025503170664461, ["mov     rdx, [rsp+188h+out_dev]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "js      loc_225B"], ["mov~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 126, 0, 3, 11, 2, 3, 11, -1, 0.023945409429280397, ["lea     rsi, aClosingStandar; \"closing standard input\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 3, -1, 0.0059966914805624485, ["mov     ebx, 1", "jmp     short loc_1910"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 126, 0, 0, 3, 0, 0, 24, -1, 0.008436724565756823, ["lea     rax, [rdi-1]", "mov     byte ptr [rdi-1], 31h ; '1'", "mov     cs:line_num_start, rax"], ["lea~rax,[rdi-1]+0]", "mov~[yte ptr [rdi-1]+0],0", "mov~<TAG>,rax"]], [2, 0, 126, 0, 3, 14, 3, 4, 8, -1, 0.010835401157981803, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 22, -1, 0.05293631100082713, ["cmp     bpl, 7Eh ; '~'", "ja      short loc_1D50"], ["cmp~bpl,0", "ja~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 21, -1, 0.14731182795698924, ["cmp     bpl, 1Fh", "ja      short loc_1D18"], ["cmp~bpl,0", "ja~FOO"]], [1, 0, 126, 1, 0, 2, 0, 0, 23, -1, 0.010297766749379652, ["mov     [r15], bpl", "add     r15, 1"], ["mov~<TAG>,bpl", "add~r15,0"]], [3, 1, 126, 0, 1, 14, 2, 2, 8, -1, 0.28480838158257515, ["mov     rcx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFE0000h", "mov     edi, ebx; fd", "lea     rdx, [rcx-20000h]", "cmp     rdx, rax", "mov     eax, 20000h", "cmovbe  rax, rcx", "xor     edx, edx; len", "xor     esi, esi; offset", "mov     ecx, 2; advice", "mov     [rsp+188h+count], rax", "call    fdadvise", "cmp     [rsp+188h+var_100], 8000h", "jz      loc_21C8"], ["mov~rcx,[rsp+0]", "mov~rax,0", "mov~edi,ebx", "lea~rdx,[rcx-20000h]+0]", "cmp~rdx,rax", "mov~eax,0", "cmovbe~rax,rcx", "xor~edx,edx", "xor~esi,esi", "mov~ecx,0", "mov~[rsp+0],rax", "call~FOO", "cmp~[rsp+0],<STR>", "jz~FOO"]], [1, 0, 126, 1, 0, 2, 0, 0, 24, -1, 0.05698924731182796, ["add     rbx, 1", "movzx   ebp, byte ptr [rbx-1]"], ["add~rbx,0", "movzx~ebp,[yte ptr [rbx-1]+0]"]], [2, 0, 126, 1, 0, 3, 0, 1, 24, -1, 0.0007237386269644334, ["mov     byte ptr [r15], 9", "add     r15, 1", "jmp     short loc_1D25"], ["mov~<TAG>,0", "add~r15,0", "jmp~FOO"]], [2, 0, 126, 2, 0, 4, 0, 1, 26, -1, 0.002543424317617866, ["add     ebp, 0FFFFFF80h", "add     r15, 3", "mov     [r15-1], bpl", "jmp     short loc_1D25"], ["add~ebp,0", "add~r15,0", "mov~[r15-1]+0],bpl", "jmp~FOO"]], [3, 0, 126, 2, 0, 5, 0, 1, 24, -1, 0.0008064516129032258, ["add     ebp, 40h ; '@'", "mov     byte ptr [r15], 5Eh ; '^'", "add     r15, 2", "mov     [r15-1], bpl", "jmp     short loc_1D25"], ["add~ebp,0", "mov~<TAG>,0", "add~r15,0", "mov~[r15-1]+0],bpl", "jmp~FOO"]], [2, 0, 126, 1, 0, 4, 0, 1, 24, -1, 0.004921422663358147, ["mov     esi, 3F5Eh", "add     r15, 2", "mov     [r15-2], si", "jmp     loc_1D25"], ["mov~esi,0", "add~r15,0", "mov~[r15-2]+0],si", "jmp~FOO"]], [3, 0, 126, 2, 0, 5, 0, 1, 25, -1, 0.00500413564929694, ["sub     ebp, 40h ; '@'", "mov     byte ptr [r15+2], 5Eh ; '^'", "add     r15, 4", "mov     [r15-1], bpl", "jmp     loc_1D25"], ["sub~ebp,0", "mov~[yte ptr [r15+0],0", "add~r15,0", "mov~[r15-1]+0],bpl", "jmp~FOO"]], [2, 0, 126, 1, 0, 4, 0, 1, 26, -1, 0.002543424317617866, ["mov     edx, 3F5Eh", "add     r15, 4", "mov     [r15-2], dx", "jmp     loc_1D25"], ["mov~edx,0", "add~r15,0", "mov~[r15-2]+0],dx", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 22, -1, 0.08746898263027296, ["cmp     bpl, 9", "jnz     short loc_1D80"], ["cmp~bpl,0", "jnz~FOO"]], [1, 0, 126, 0, 0, 4, 0, 1, 9, -1, 0.2723393989523022, ["cmp     [rsp+188h+var_FA], 0", "mov     rax, [rsp+188h+var_120]", "lea     rbx, [rax-1]", "jnz     short loc_1B49"], ["cmp~[rsp+0],0", "mov~rax,[rsp+0]", "lea~rbx,[rax-1]+0]", "jnz~FOO"]], [0, 0, 126, 0, 0, 3, 0, 1, 9, -1, 0.0184656741108354, ["mov     rax, [rsp+188h+var_F8]", "cmp     [rsp+188h+stat_buf.st_dev], rax", "jnz     loc_1B28"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [0, 0, 126, 0, 0, 2, 1, 1, 23, -1, 0.0062241521918941275, ["test    r14b, r14b", "jz      short loc_1D80"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 10, -1, 0.03899917287014061, ["cmp     [rsp+188h+var_F9], 0", "jz      loc_2313"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 126, 2, 1, 14, 1, 2, 11, -1, 0.0629652605459057, ["mov     rax, [rsp+188h+count]", "cmp     r15, rax", "cmovnb  rax, r15", "lea     rdi, [rax+rbx]; n", "mov     rbp, rax", "call    xmalloc", "lea     rcx, [rax+rbx]", "mov     [rsp+188h+inbuf], rax", "xor     edx, edx", "mov     inbuf_0, rcx", "div     [rsp+188h+var_120]", "sub     rcx, rdx", "mov     rbx, rcx", "jmp     short loc_2364"], ["mov~rax,[rsp+0]", "cmp~r15,rax", "cmovnb~rax,r15", "lea~rdi,<TAG>", "mov~rbp,rax", "call~FOO", "lea~rcx,<TAG>", "mov~[rsp+0],rax", "xor~edx,edx", "mov~inbuf_0,rcx", "div~,[rsp+0]", "sub~rcx,rdx", "mov~rbx,rcx", "jmp~FOO"]], [0, 0, 126, 0, 0, 2, 1, 1, 13, -1, 0.022994210090984284, ["test    rax, rax", "jz      short loc_23BC"], ["test~rax,rax", "jz~FOO"]], [1, 0, 126, 0, 1, 7, 0, 2, 12, -1, 0.06726633581472291, ["mov     edi, cs:input_desc; fd", "mov     rdx, insize; count", "mov     rsi, rbx; buf", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r13, rax", "jnz     short loc_2346"], ["mov~edi,<TAG>", "mov~rdx,insize", "mov~rsi,rbx", "call~FOO", "cmp~rax,0", "mov~r13,rax", "jnz~FOO"]], [0, 0, 126, 0, 0, 3, 0, 1, 16, -1, 0.05268817204301075, ["mov     rdi, cs:line_num_start", "lea     rax, line_buf+11h; \"0\\t\"", "jmp     short loc_1F61"], ["mov~rdi,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 23, -1, 0.03573200992555831, ["cmp     bpl, 7Fh", "jz      short loc_1DA0"], ["cmp~bpl,0", "jz~FOO"]], [1, 0, 126, 0, 0, 4, 0, 1, 19, -1, 0.005266060104769782, ["mov     eax, [rsp+188h+var_184]", "mov     r10d, 1", "mov     cs:newlines2, eax", "jmp     short loc_214C"], ["mov~eax,[rsp+0]", "mov~r10d,0", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 126, 0, 0, 3, 1, 0, 18, -1, 0.013454645712710229, ["mov     eax, [rsp+188h+var_184]", "xor     r10d, r10d", "mov     cs:newlines2, eax"], ["mov~eax,[rsp+0]", "xor~r10d,r10d", "mov~<TAG>,eax"]], [1, 0, 126, 0, 0, 3, 0, 1, 17, -1, 0.056782464846980976, ["movzx   esi, byte ptr [rax]", "cmp     sil, 38h ; '8'", "jg      short loc_1F50"], ["movzx~esi,<TAG>", "cmp~sil,0", "jg~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 25, -1, 0.011993382961124897, ["cmp     bpl, 0FFh", "jz      loc_1EA0"], ["cmp~bpl,0", "jz~FOO"]], [2, 0, 126, 0, 0, 4, 0, 0, 24, -1, 0.023904052936311, ["mov     ecx, 2D4Dh", "cmp     bpl, 9Fh", "mov     [r15], cx", "jbe     short loc_1DB8"], ["mov~ecx,0", "cmp~bpl,0", "mov~<TAG>,cx", "jbe~FOO"]], [2, 0, 0, 1, 2, 12, 2, 2, 7, -1, 0.0, ["sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rcx, cs:Version; version", "push    0", "lea     r9, aRichardMStallm; \"Richard M. Stallman\"", "lea     r8, aTorbjornGranlu; \"Torbjorn Granlund\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cat\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["sub~rsp,0", "mov~rdi,<TAG>", "mov~rcx,<TAG>", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 126, 1, 0, 3, 0, 0, 18, -1, 0.020264681555004136, ["add     esi, 1", "mov     [rax], sil", "mov     rsi, cs:line_num_print; src"], ["add~esi,0", "mov~<TAG>,sil", "mov~rsi,<TAG>"]], [1, 0, 126, 0, 0, 2, 0, 1, 23, -1, 0.07897022332506204, ["cmp     bpl, 0Ah", "jz      short loc_1DD0"], ["cmp~bpl,0", "jz~FOO"]], [1, 0, 126, 0, 3, 13, 4, 3, 13, -1, 0.037365591397849465, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format; format", "xor     eax, eax", "mov     rcx, rbx", "xor     edi, edi; status", "call    _error", "xor     eax, eax"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax"]], [1, 0, 126, 0, 0, 2, 0, 1, 14, -1, 0.004921422663358147, ["mov     eax, 1", "jmp     short loc_23B0"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 126, 0, 1, 2, 0, 1, 16, -1, 0.025806451612903226, ["call    write_pending", "nop"], ["call~FOO", "nop"]], [0, 0, 126, 0, 0, 1, 0, 1, 20, -1, 0.006713537358698648, ["jmp     loc_1FBA"], ["jmp~FOO"]], [2, 0, 126, 0, 1, 6, 0, 2, 15, -1, 0.06716294458229942, ["call    ___errno_location", "mov     ecx, [rax]", "cmp     ecx, 5Fh ; '_'", "setz    r10b", "cmp     ecx, 26h ; '&'", "ja      short loc_1FE6"], ["call~FOO", "mov~ecx,<TAG>", "cmp~ecx,0", "setz~r10b", "cmp~ecx,0", "ja~FOO"]], [2, 0, 126, 0, 0, 4, 2, 0, 16, -1, 0.0, ["mov     rdx, 4002480000h", "shr     rdx, cl", "and     edx, 1", "or      r10d, edx"], ["mov~rdx,0", "shr~rdx,cl", "and~edx,0", "or~r10d,edx"]], [2, 0, 126, 0, 3, 11, 2, 3, 14, -1, 0.09392059553349875, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 126, 6, 2, 42, 3, 2, 10, -1, 0.2307140887786049, ["mov     r14, [rsp+188h+var_120]", "mov     rbp, [rsp+188h+count]", "mov     rdi, r14", "add     rdi, rbp; n", "call    xmalloc", "mov     r13, rax", "mov     [rsp+188h+inbuf], rax", "lea     inbuf_0, [r14+r15+12h]", "lea     rdi, [rax+rbp*4]; n", "call    xmalloc", "mov     rcx, rax", "mov     [rsp+188h+outbuf], rax", "xor     edx, edx", "add     rcx, rbx", "mov     [rsp+188h+var_149], 1", "mov     outbuf_0, rcx", "div     r14", "sub     rcx, rdx", "xor     edx, edx", "mov     rdi, rcx", "mov     [rsp+188h+dest], rcx", "lea     rcx, [inbuf_0+rbx+0]", "mov     r13d, r12d", "mov     rax, rcx", "xor     r13d, 1", "div     r14", "mov     rax, rcx", "mov     ecx, cs:newlines2", "mov     [rsp+188h+var_184], ecx", "lea     rcx, [rdi+r15]", "sub     rax, rdx", "mov     [rsp+188h+var_178], rcx", "lea     rbx, [rax+1]", "mov     [rsp+188h+buf], rax", "mov     [rsp+188h+var_180], rax", "lea     rax, [rsp+188h+var_DC]", "mov     [rsp+188h+var_148], rbx", "mov     [rsp+188h+var_128], rax", "mov     eax, r13d", "mov     r13, r15", "mov     r14d, eax", "mov     r15, rdi"], ["mov~r14,[rsp+0]", "mov~rbp,[rsp+0]", "mov~rdi,r14", "add~rdi,rbp", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "lea~inbuf_0,[r14+0]", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "xor~edx,edx", "add~rcx,rbx", "mov~[rsp+0],0", "mov~outbuf_0,rcx", "div~,r14", "sub~rcx,rdx", "xor~edx,edx", "mov~rdi,rcx", "mov~[rsp+0],rcx", "lea~rcx,[inbuf_0+0]", "mov~r13d,r12d", "mov~rax,rcx", "xor~r13d,0", "div~,r14", "mov~rax,rcx", "mov~ecx,<TAG>", "mov~[rsp+0],ecx", "lea~rcx,<TAG>", "sub~rax,rdx", "mov~[rsp+0],rcx", "lea~rbx,[rax+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rbx", "mov~[rsp+0],rax", "mov~eax,r13d", "mov~r13,r15", "mov~r14d,eax", "mov~r15,rdi"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 158h", "pop     rbx", "pop     rbp", "pop     show_tabs", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~show_tabs", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 126, 0, 0, 2, 0, 1, 4, -1, 0.16029776674937965, ["lea     rax, aLt+2; \"-\"", "jmp     loc_1A8D"], ["lea~rax,<TAG>", "jmp~FOO"]]], "func_feature": [67, 76, 174, 15, 158, 234, 0, 742, 0.05782, 28, 39], "succs": [[33, 14], [0, 5], [0, 5], [153, 4], [3, 15], [3], [36], [106, 6], [130, 37], [8, 130], [16, 26], [10, 141], [91], [115, 12], [107, 21], [33, 14], [25], [105, 111], [17, 67], [139, 93], [19, 45], [24, 23], [21], [31], [149, 23], [56, 29], [25], [149], [27, 140], [56], [80, 13], [81, 20], [22, 31], [38, 55], [83], [34], [34], [83], [48, 44], [128, 41], [144, 39], [], [112, 74], [42, 86], [48, 52], [46], [51], [46], [137, 55], [57, 156], [49], [2, 54], [51], [66], [97, 65], [62, 63], [55], [43], [57, 59], [100, 77], [128], [136, 60], [47], [47], [80], [64, 97], [50, 78], [66, 85], [66], [66], [66], [66], [66], [66], [58], [74], [], [155, 76], [114, 79], [82, 94], [30, 87], [140, 28], [72, 18], [58, 84], [58, 75], [88, 73], [112], [90], [128, 68], [89], [97], [90, 92], [90], [139, 150], [103, 95], [40, 98], [118], [96, 102], [99, 70], [128, 69], [113, 77], [104, 110], [101, 110], [105], [108], [70], [32], [32, 151], [102], [108], [1, 109], [128, 71], [120, 116], [134], [71], [91], [83], [138, 119], [129, 117], [121], [130, 131], [118], [121], [121], [121], [121], [121], [121], [], [146, 132], [154, 133], [9, 130], [122, 146], [154, 134], [136], [148, 61], [147, 135], [141], [125, 143], [36], [36], [145, 11], [123, 127], [126, 142], [], [56], [1, 124], [35], [35], [151], [149], [152, 7], [7], [156], [2], [], [43]], "fname": "main", "n_num": 157}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2530"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2530"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2580"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2580"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_25B3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_25C8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 5, 0, 3, 12, 3, 4, 0, 0, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_28D9"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 6, 2, 1, 3, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_294B"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 2, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_286F"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 4", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_2850"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 2, 9, 1, 3, 6, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_28D9"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, 1, 0.028571428571428574, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_29E0"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, 1, 0.01904761904761905, ["lea     r12, command_name; \"cat\""], ["lea~r12,<TAG>"]], [2, 0, 1, 0, 2, 11, 2, 3, 6, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_2639"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 5, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"cat\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"cat\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_291E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 5, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"cat\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aWrittenBySSAnd+1Bh; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]], [9, 0, 13, 0, 16, 106, 10, 16, 1, 5, 0.05714285714285715, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aConcatenateFil; \"Concatenate FILE(s) to standard output.\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aWithNoFileOrWh; \"\\nWith no FILE, or when FILE is -, read\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAShowAllEquiva; \"\\n  -A, --show-all           equivalent\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTEquivalentToV; \"  -t                       equivalent t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:program_name", "lea     rsi, aExamplesSFGOut; \"\\nExamples:\\n  %s f - g  Output f's con\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "lea     rbx, command_name; \"cat\"", "call    ___printf_chk", "lea     rcx, asc_8BA3; \"[\"", "lea     rax, aTestInvocation; \"test invocation\"", "lea     rdx, [rsp+0B8h+var_A8]", "mov     [rsp+0B8h+var_B0], rcx", "lea     rcx, domainname; \"coreutils\"", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rcx", "movaps  [rsp+0B8h+var_A8], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha224sum; \"sha224sum\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha256sum; \"sha256sum\"", "movaps  [rsp+0B8h+var_98], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_20BBC0", "lea     rax, aSha384sum; \"sha384sum\"", "movaps  [rsp+0B8h+var_88], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_20BBC0", "lea     rax, aSha512sum; \"sha512sum\"", "movaps  [rsp+0B8h+var_78], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_20BBC0", "movaps  [rsp+0B8h+var_68], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "movhps  xmm0, cs:off_20BBC0", "movaps  [rsp+0B8h+var_58], xmm0", "pxor    xmm0, xmm0", "movaps  [rsp+0B8h+var_48], xmm0", "nop     word ptr [rax+rax+00h]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rax,<TAG>", "lea~rdx,[rsp+0]", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rcx", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movaps~[rsp+0],xmm0", "nop~[ord ptr [rax+0]"]], [2, 0, 15, 1, 0, 13, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 98h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_2640"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 4, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_2996"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 2, 0.0380952380952381, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_29D9"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]]], "func_feature": [35, 33, 46, 9, 16, 23, 2, 231, 0.0506, 32, 2], "succs": [[9, 5], [0, 12], [1, 3], [1, 2], [9], [9, 4], [4], [15], [7], [7], [2], [10, 14], [8, 13], [8, 6], [15], []], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 1, 7, 2, 2, 0, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, format; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_2AB2"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 0, 0.11904761904761903, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_2ABD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_2A5C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 0, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_2AB2"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 0, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_2A73"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, 0, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, aS; \"%s: \"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 0, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_2A73"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 0, 46, 0.03968, 8, 2], "succs": [[8], [0, 5], [3, 7], [8, 6], [1, 3], [8], [], [1, 4], []], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     _posix_fadvise"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "fdadvise", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.0, ["test    fp, fp", "jz      short locret_2B10"], ["test~fp,fp", "jz~FOO"]], [0, 0, 1, 0, 1, 9, 2, 2, 1, 0, 0.16666666666666666, ["push    rbx", "mov     ebx, esi", "call    _fileno", "mov     ecx, ebx; advise", "xor     edx, edx; len", "xor     esi, esi; offset", "pop     advice", "mov     edi, eax; fd", "jmp     _posix_fadvise"], ["push~rbx", "mov~ebx,esi", "call~FOO", "mov~ecx,ebx", "xor~edx,edx", "xor~esi,esi", "pop~advice", "mov~edi,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [1, 3, 3, 0, 4, 3, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 2], [3], []], "fname": "fadvise", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 5, 0, 1, 6, 0, 2, 0, 0, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_2B40"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_2B50"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_2B64"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_2B78"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_2B91"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_2B64"], ["xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 5, 42, 0.06845, 0, 6], "succs": [[3, 6], [0], [0, 6], [2, 5], [1, 7], [], [], [6]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_2C0D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_2C0D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_2C0D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_2C1D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_2C0D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 7], [0, 7], [1, 7], [5, 6], [7], [2, 7], [], []], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_2C60"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_920C", "lea     rdx, unk_9210", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_2C60"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_2C60"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_2C80"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_9214", "lea     rdx, unk_9218", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_2C60"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_2CD0"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_921B", "lea     rdx, asc_921D; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[16, 5], [0, 16], [8, 16], [16, 2], [16, 6], [16, 4], [], [16, 1], [16, 12], [16, 13], [16, 9], [], [16, 11], [16, 14], [16, 3], [10, 7], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[3, 1, 3, 2, 1, 14, 1, 1, 0, 0, 0.009946236559139785, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+118h+flags]", "mov     r8d, [rsp+118h+quoting_style]; quoting_style", "mov     rdx, [rsp+118h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.016163167776070998, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      short loc_31CD"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0003242874210616146, ["mov     rbp, argsize_0", "mov     argsize_0, r8", "jmp     loc_31CD"], ["mov~rbp,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 9, -1, 0.0, ["cmp     [rsp+0F8h+var_E1], 0", "mov     eax, 4", "cmovz   eax, [rsp+0F8h+quoting_style]", "mov     [rsp+0F8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.028123399897593444, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_3F5D"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 7, -1, 0.4379228537293052, ["xor     r10d, r10d", "jmp     loc_2FC0"], ["xor~r10d,r10d", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 6, -1, 0.5573604710701485, ["cmp     [rsp+0F8h+var_E2], 0", "mov     rdi, [rsp+0F8h+arg]; s", "lea     r9, [rdi+i]", "jz      loc_3800"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.020074351425157882, ["cmp     rbx, argsize_0", "ja      loc_3800"], ["cmp~rbx,argsize_0", "ja~FOO"]], [0, 0, 244, 0, 1, 12, 1, 2, 10, -1, 0.007567951015531656, ["mov     rdx, [rsp+0F8h+quote_string_len]; n", "mov     rsi, [rsp+0F8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "jnz     loc_3800"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 12, -1, 0.01330005120327701, ["cmp     buffersize_0, len", "jbe     short loc_402C"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 10, 1, 0, 5, 1, 1, 13, -1, 0.0033922171018945214, ["mov     [r14+len], cl", "add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_4001"], ["mov~<TAG>,cl", "add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 1, 1, 13, -1, 0.0033410138248847927, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_4001"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 10, 1, 0, 5, 1, 1, 11, -1, 0.01651305683563748, ["movzx   ecx, byte ptr [rax]", "sub     rax, r15", "mov     rdx, r15", "test    cl, cl", "jz      short loc_4019"], ["movzx~ecx,<TAG>", "sub~rax,r15", "mov~rdx,r15", "test~cl,cl", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.15974782386072708, ["mov     rsi, [rsp+0F8h+var_D8]", "test    rsi, rsi", "jz      short loc_301B"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0123410564942823, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_2FFD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.15902927120669058, ["cmp     [rsp+0F8h+var_87], 0", "jnz     loc_3306"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 1, 1, 12, 1, 2, 12, -1, 0.07457757296466974, ["mov     rax, [rsp+0F8h+arg]", "lea     r15, [i+m]", "mov     rdx, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, [rsp+0F8h+ps]; ps", "mov     rdi, [rsp+0F8h+pwc]; pwc", "lea     r13, [rax+r15]", "sub     rdx, r15; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      short loc_3BF0"], ["mov~rax,[rsp+0]", "lea~r15,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r15", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 244, 1, 2, 10, 2, 3, 16, -1, 0.017895545314900153, ["mov     edi, [rsp+0F8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0F8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_3B7F"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 12, 1, 0, 11, -1, 0.07342549923195084, ["lea     rax, [rsp+0F8h+w]", "xor     esi, esi", "mov     [rsp+0F8h+c], bl", "mov     [rsp+0F8h+var_6B], r11b", "mov     c_0, rsi", "mov     [rsp+0F8h+var_60], r9", "mov     [rsp+0F8h+pwc], rax", "mov     [rsp+0F8h+var_69], r10b", "mov     [rsp+0F8h+var_68], r15", "mov     [rsp+0F8h+var_80], r8", "mov     [rsp+0F8h+buffersize], buffersize_0", "mov     [rsp+0F8h+pending_shell_escape_end], r14"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r11b", "mov~c_0,rsi", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r8", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r14"]], [1, 0, 244, 0, 0, 4, 2, 1, 16, -1, 0.049859190988223244, ["mov     edx, r11d", "xor     edx, 1", "and     dl, [rsp+0F8h+var_E1]", "jz      short loc_343C"], ["mov~edx,r11d", "xor~edx,0", "and~dl,[rsp+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 15, -1, 0.054070660522273425, ["test    r9b, r9b", "jnz     loc_3CD0"], ["test~r9b,r9b", "jnz~FOO"]], [1, 0, 255, 0, 1, 9, 1, 2, 3, -1, 0.0001152073732718894, ["lea     rsi, asc_921F; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0F8h+quote_string_0], rax", "lea     rax, asc_921F; \"`\"", "cmp     rcx, rax", "jz      loc_4050"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [1, 0, 256, 0, 0, 2, 0, 1, 2, -1, 0.00030721966205837174, ["cmp     [rsp+0F8h+quoting_style], 0Ah; jumptable 0000000000002DC1 cases 8-10", "jz      short loc_363F"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.019162826420890938, ["cmp     r13, r15", "jbe     short loc_3417"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 6, 0, 0, 13, -1, 0.007692225635774022, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.0002560163850486431, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 6, 0, 0, 1, 0, 1, 14, -1, 7.680491551459293e-05, ["jmp     short loc_4016"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.0070916538658474144, ["mov     rsi, [rsp+0F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_40C8"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, -1, 0.0038466461853558626, ["cmp     buffersize_0, r15", "jbe     loc_3203"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_3203"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.040450588837686e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, argsize_0; argsize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+110h+var_D8]; quote_these_too", "mov     r9d, [rsp+118h+flags]; flags", "mov     rdx, [rsp+118h+arg]; arg", "mov     rsi, [rsp+118h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_3203"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,argsize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0007978110599078342, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.032954962450930214, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_3A63"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.011404783239460696, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_3A63"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.01966771206690558, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jz      loc_3165"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 17, -1, 0.013031233998975935, ["mov     rcx, [rsp+0F8h+arg]", "lea     bytes, [rcx+r15+1]", "add     rcx, bytes", "lea     r8, [rcx+r15]", "jmp     short loc_3C75"], ["mov~rcx,[rsp+0]", "lea~bytes,[rcx+0]", "add~rcx,bytes", "lea~r8,<TAG>", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.016129032258064516, ["cmp     bytes, 1", "jz      loc_3BC9"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 0, 0, 11, 1, 1, 14, -1, 0.002867383512544803, ["mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "xor     ebp, ebp", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     r14, [rsp+0F8h+pending_shell_escape_end]", "movzx   eax, [rsp+0F8h+backslash_escapes]", "jmp     loc_3C33"], ["mov~rdi,m", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~ebp,ebp", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r14,[rsp+0]", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.05403225806451613, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_3DF6"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.24687339989759344, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 13, -1, 0.0056035586277521756, ["jmp     loc_301B"], ["jmp~FOO"]], [2, 0, 244, 1, 0, 8, 2, 1, 14, -1, 0.030325140809011778, ["mov     [rsp+0F8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     r11d, r11d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_301B"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],bpl", "xor~r11d,r11d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.009927035330261137, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_301B"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 15, -1, 0.037018902543096095, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_301B"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.018906810035842294, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_3426"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 6, 2, 1, 6, -1, 0.07246543778801844, ["test    r15, r15", "mov     rbp, argsize_0", "mov     argsize_0, r8", "setz    al", "and     al, [rsp+0F8h+var_88]", "jnz     loc_40AC"], ["test~r15,r15", "mov~rbp,argsize_0", "mov~argsize_0,r8", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 5, -1, 0.6331925243215566, ["test    bpl, bpl", "jz      loc_39A0"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_3435"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 2, 0, 14, -1, 0.23159242191500257, ["xor     eax, 1", "add     i, 1", "and     eax, r11d", "mov     edx, eax"], ["xor~eax,0", "add~i,0", "and~eax,r11d", "mov~edx,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.3581669226830517, ["test    dl, dl", "jz      short loc_3054"], ["test~dl,dl", "jz~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 12, -1, 0.023655913978494623, ["add     i, 1", "mov     edx, r11d", "xor     ebp, ebp", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~edx,r11d", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 1, 0, 3, 0, 0, 16, -1, 0.1295826932923707, ["add     i, 1", "cmp     r12, ilim", "jnb     store_c"], ["add~i,0", "cmp~r12,ilim", "jnb~FOO"]], [1, 0, 244, 0, 0, 5, 3, 1, 15, -1, 0.130094726062468, ["mov     edx, esi", "xor     edx, 1", "and     edx, r11d", "test    r10b, r10b", "jz      short loc_34C3"], ["mov~edx,esi", "xor~edx,0", "and~edx,r11d", "test~r10b,r10b", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 14, -1, 0.18753200204813109, ["test    al, al", "jnz     loc_33F8"], ["test~al,al", "jnz~FOO"]], [2, 0, 244, 0, 0, 2, 0, 0, 10, -1, 0.0008829365079365061, ["mov     eax, 9; jumptable 0000000000002FDE case 9", "mov     ebx, 74h ; 't'"], ["mov~eax,0", "mov~ebx,0"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.27496842464584365, ["lea     rcx, off_92AC", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.01282642089093702, ["cmp     buffersize_0, r15", "jbe     short loc_303E"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 1, 244, 0, 0, 4, 1, 1, 10, -1, 0.001113351254480284, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 000000000000382E case 32", "mov     ebx, 20h ; ' '", "xor     r10d, r10d", "jmp     loc_3185"], ["movzx~ebp,[rsp+0]", "mov~ebx,<STR>", "xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.10265307646356028, ["lea     rcx, off_94A8", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.020636200716845667, ["cmp     [rsp+0F8h+var_88], 0", "jnz     loc_3190"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365061, ["mov     eax, 0Ah; jumptable 0000000000002FDE case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365061, ["mov     eax, 0Dh; jumptable 0000000000002FDE case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185335, ["mov     eax, 0Ah; jumptable 000000000000382E case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185335, ["mov     eax, 0Dh; jumptable 000000000000382E case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185335, ["mov     eax, 9; jumptable 000000000000382E case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.04883512544802868, ["cmp     r13, r15", "jbe     short loc_3446"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 2, 1, 3, -1, 0.016244239631336404, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_3E3C"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [0, 0, 252, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rdi, rsi; msgid", "mov     esi, [rsp+0F8h+quoting_style]; s", "call    gettext_quote", "mov     [rsp+0F8h+quote_string], rax", "jmp     loc_363F"], ["mov~rdi,rsi", "mov~esi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 253, 0, 1, 9, 1, 2, 4, -1, 0.006515616999487967, ["lea     rsi, asc_921D; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0F8h+quote_string], rax", "lea     rax, asc_921D; \"'\"", "cmp     rsi, rax", "jz      loc_403A"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.012570404505888377, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_304D"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 4, -1, 0.0005120327700972862, ["mov     rax, [rsp+0F8h+quote_string_0]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_364A"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 1, 1, 17, -1, 0.02951868919610855, ["test    dl, dl", "jz      loc_3D37"], ["test~dl,dl", "jz~FOO"]], [12, 0, 244, 0, 0, 16, 1, 1, 5, -1, 0.009331797235023042, ["lea     rax, asc_921D; \"'\"", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     r15d, 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 2", "jmp     loc_2ED8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 246, 0, 0, 2, 1, 1, 4, -1, 0.0064516129032258064, ["test    buffersize_0, buffersize_0", "jnz     loc_40DA"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 15, -1, 0.022452636968766, ["cmp     [rsp+0F8h+var_88], 0", "jnz     short loc_3C48"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.07517665130568357, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      loc_3300"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 8; jumptable 0000000000002FDE case 8", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 7; jumptable 0000000000002FDE case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Ch; jumptable 0000000000002FDE case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Bh; jumptable 0000000000002FDE case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Bh; jumptable 000000000000382E case 11", "xor     r10d, r10d", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Ch; jumptable 000000000000382E case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 8; jumptable 000000000000382E case 8", "xor     r10d, r10d", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 7; jumptable 000000000000382E case 7", "xor     r10d, r10d", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 12, -1, 0.0012800819252432156, ["mov     eax, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [10, 0, 244, 0, 0, 15, 0, 1, 6, -1, 0.023169482846902203, ["lea     rsi, asc_921D; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0F8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+s2], rsi", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+encountered_single_quote], al", "mov     [rsp+0F8h+orig_buffersize], rdx", "jmp     loc_2ED8"], ["lea~rsi,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rsi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],al", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 244, 0, 0, 6, 3, 1, 5, -1, 8.960573476702509e-05, ["mov     [rsp+0F8h+orig_buffersize], buffersize_0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r11d, r11d", "xor     edx, edx", "jmp     loc_3A00"], ["mov~[rsp+0],buffersize_0", "mov~[rsp+0],0", "xor~eax,eax", "xor~r11d,r11d", "xor~edx,edx", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 11, -1, 0.020084485407066054, ["mov     rdx, [rsp+0F8h+orig_buffersize]", "mov     buffersize_0, rdx"], ["mov~rdx,[rsp+0]", "mov~buffersize_0,rdx"]], [0, 0, 244, 0, 0, 2, 0, 0, 12, -1, 0.0030081925243215565, ["movzx   r10d, [rsp+0F8h+var_E2]", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~r10d,[rsp+0]", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.004444551117938212, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_3CD0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 12, -1, 0.068868407578085, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.483115719406042, ["cmp     r15, r13", "jnb     short loc_305D"], ["cmp~r15,r13", "jnb~FOO"]], [2, 0, 244, 2, 0, 3, 0, 1, 16, -1, 0.08147721454173067, ["add     r15, 1", "add     i, 1", "jmp     loc_3054"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [4, 0, 244, 3, 0, 6, 1, 0, 20, -1, 0.048067076292882746, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     ilim, r12", "jbe     loc_3054"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~ilim,r12", "jbe~FOO"]], [1, 0, 244, 1, 0, 2, 1, 0, 16, -1, 0.012314388120839733, ["add     r15, 2", "xor     r11d, r11d"], ["add~r15,0", "xor~r11d,r11d"]], [2, 0, 246, 0, 0, 6, 2, 0, 2, -1, 1.2800819252432156e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 1", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],esi"]], [0, 0, 278, 1, 0, 5, 0, 1, 1, 2, 0.003558627752176139, ["lea     rcx, off_9280", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.09182881037719748, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_3CC0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.08173323092677931, ["cmp     buffersize_0, r15", "jbe     short loc_32A5"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [10, 0, 244, 0, 1, 25, 4, 2, 4, -1, 0.03748079877112135, ["mov     r12, [rsp+0F8h+quote_string]", "test    ebx, ebx", "setnz   [rsp+0F8h+var_85]", "movzx   ebx, [rsp+0F8h+var_85]", "mov     rdi, r12; s", "call    _strlen", "mov     [rsp+0F8h+quote_string_len], rax", "mov     eax, [rsp+0F8h+flags]", "xor     r11d, r11d", "mov     [rsp+0F8h+c_and_shell_quote_compat], bl", "mov     [rsp+0F8h+s2], r12", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+var_E1], 0", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_2ED8"], ["mov~r12,[rsp+0]", "test~ebx,ebx", "setnz~[rsp+0]", "movzx~ebx,[rsp+0]", "mov~rdi,r12", "call~FOO", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "xor~r11d,r11d", "mov~[rsp+0],bl", "mov~[rsp+0],r12", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 245, 0, 0, 1, 0, 1, 8, -1, 0.012544802867383513, ["jmp     loc_364A"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 3, 1, 1, 13, -1, 0.00902457757296467, ["xor     edx, edx", "cmp     [rsp+0F8h+orig_buffersize], 0", "jnz     loc_3CE7"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 12, -1, 0.03147721454173067, ["test    buffersize_0, buffersize_0", "jz      loc_3CE7"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.04832309267793139, ["lea     rdx, [r15+2]", "cmp     r13, len", "jbe     short loc_3475"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.04857910906298003, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_345C"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 0, 0, 19, -1, 0.0, ["mov     edx, ebx", "shr     dl, 6", "add     edx, 30h ; '0'", "mov     [r8+r15+1], dl"], ["mov~edx,ebx", "shr~dl,0", "add~edx,0", "mov~[r8+0],dl"]], [0, 0, 254, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0F8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0F8h+quote_string_0], rax", "jmp     loc_3614"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, -1, 0.00012800819252432156, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 5", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_3F8B"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 14, -1, 0.08275729646697388, ["mov     eax, r11d", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_329B"], ["mov~eax,r11d", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [1, 0, 249, 1, 0, 5, 1, 1, 7, -1, 0.009575012800819252, ["mov     rax, [rsp+0F8h+quote_string_0]", "add     r15, 1", "movzx   eax, byte ptr [rax+len]", "test    al, al", "jnz     short loc_3E50"], ["mov~rax,[rsp+0]", "add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_3276"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [3, 0, 244, 1, 0, 5, 1, 0, 20, -1, 0.0, ["mov     edx, ebx", "shr     dl, 3", "and     edx, 7", "add     edx, 30h ; '0'", "mov     [r8+r15+2], dl"], ["mov~edx,ebx", "shr~dl,0", "and~edx,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 247, 0, 0, 2, 1, 1, 3, -1, 0.0001152073732718894, ["test    buffersize_0, buffersize_0", "jz      loc_3D3F"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.01282642089093702, ["cmp     buffersize_0, len", "jbe     short loc_3E7A"], ["cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 6, 0, 0, 16, -1, 0.016001024065540194, ["mov     rax, [rsp+0F8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0F8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_3E70"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+len], 30h ; '0'"], ["mov~<TAG>,0"]], [2, 0, 244, 1, 0, 7, 1, 1, 15, -1, 0.48285970302099335, ["movzx   edi, [rsp+0F8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    bpl, bpl", "cmovz   edi, eax", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], dil", "jmp     loc_2EE8"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~bpl,bpl", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [0, 0, 249, 0, 0, 2, 0, 0, 6, -1, 0.003533026113671275, ["cmp     buffersize_0, r15", "jbe     short loc_3E59"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.10761979433350394, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_3370; jumptable 000000000000382E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 7, -1, 0.1314447857996246, ["mov     rax, [rsp+0F8h+quote_string_len]", "test    rax, rax", "jz      loc_3810"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_3285"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 18, -1, 0.013031233998975935, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_3C68"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 244, 1, 0, 3, 0, 1, 19, -1, 0.008986175115207374, ["add     rax, 1", "cmp     r8, rax", "jz      loc_3BC9"], ["add~rax,0", "cmp~r8,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.06694359105649433, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_3CD0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.051083055982249666, ["cmp     [rsp+0F8h+backslash_escapes], 0; jumptable 0000000000002FDE case 0", "jnz     loc_387B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.03236185782556751, ["xor     r10d, r10d; jumptable 000000000000382E case 0"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.012570404505888377, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len", "jbe     short loc_3E89"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 10, -1, 7.680491551459293e-05, ["xor     r10d, r10d; jumptable 000000000000382E cases 35,126", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.04204354412015711, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 0000000000002FDE case 39", "jz      loc_3A80"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 10, -1, 0.010921979006656455, ["test    i, i; jumptable 0000000000002FDE cases 35,126", "jz      loc_3185"], ["test~i,i", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 12, -1, 0.0005120327700972862, ["jmp     short loc_3088; jumptable 0000000000002FDE cases 35,126"], ["jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 17, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_3294"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 17, -1, 0.03208311998634579, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_40BD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 19, -1, 0.03854326676907322, ["cmp     r13, r15", "jbe     short loc_3497"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 4, 2, 1, 20, -1, 0.012314388120839733, ["add     r15, 2", "xor     r10d, r10d", "xor     r11d, r11d", "jmp     short loc_348E"], ["add~r15,0", "xor~r10d,r10d", "xor~r11d,r11d", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 18, -1, 0.013325652841781874, ["xor     r10d, r10d", "jmp     loc_348E"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.006810035842293907, ["mov     esi, eax"], ["mov~esi,eax"]], [0, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 244, 0, 0, 3, 2, 1, 11, -1, 0.02067332309267793, ["xor     ebp, ebp", "xor     eax, eax", "jmp     loc_2FF2"], ["xor~ebp,ebp", "xor~eax,eax", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.012442396313364055, ["test    al, al", "jnz     short loc_3091"], ["test~al,al", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 1, 1, 19, -1, 0.012314388120839733, ["mov     eax, ebp", "lea     r15, [rdx+3]", "xor     ebp, ebp", "mov     ebx, 30h ; '0'", "jmp     loc_2FF2"], ["mov~eax,ebp", "lea~r15,[rdx+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+rdx+2], 30h ; '0'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 1, 0, 2, 0, 0, 18, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, eax"], ["add~r15,0", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_389F"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 19, -1, 0.003699436763952893, ["mov     edx, 1", "shl     rdx, cl", "mov     rcx, 20000002Bh", "test    rdx, rcx", "jz      short loc_3C68"], ["mov~edx,0", "shl~rdx,cl", "mov~rcx,0", "test~rdx,rcx", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.03828725038402458, ["movzx   ebx, byte ptr [rdi+r12]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.027208141321044547, ["cmp     [rsp+0F8h+all_c_and_shell_quote_compat], 0", "jnz     loc_4066"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 17, -1, 0.003059395801331285, ["jmp     short loc_3DE7"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.012852022529441884, ["cmp     byte ptr [rsi], 0", "jnz     short loc_3DD7"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.00015360983102918587, ["xor     r10d, r10d; jumptable 000000000000382E cases 123,125"], ["xor~r10d,r10d"]], [9, 0, 245, 0, 0, 10, 1, 0, 4, -1, 0.0015873015873015873, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_38AE"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002944188428059396, ["movzx   edx, [rsp+0F8h+encountered_single_quote]", "jmp     loc_3FE6"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 6, 2, 1, 10, -1, 0.02375832053251408, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0F8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_40A2"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, -1, 0.029653097798259087, ["mov     rax, [rsp+0F8h+s2]", "test    rax, rax", "jz      short loc_4019"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, -1, 0.019738863287250386, ["test    dl, dl", "jz      short loc_4019"], ["test~dl,dl", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.04779825908858167, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_3D73"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 244, 0, 0, 4, 0, 1, 10, -1, 0.012698412698412698, ["cmp     argsize_0, 1; jumptable 0000000000002FDE cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_30BC"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 9, -1, 0.0024193548387096775, ["xor     r10d, r10d; jumptable 000000000000382E default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, 1, 0.00010240655401945725, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 2", "mov     ecx, eax", "and     eax, 4", "and     ecx, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], ecx", "jz      loc_40F5"], ["mov~eax,[rsp+0]", "mov~ecx,eax", "and~eax,0", "and~ecx,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],ecx", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_38BD"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.006438812083973375, ["cmp     r13, r15", "jbe     short loc_34BF"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 11, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 1, 244, 0, 0, 2, 0, 1, 10, -1, 0.0011165514592933925, ["mov     ebx, 20h ; ' '; jumptable 0000000000002FDE case 32", "jmp     loc_3185"], ["mov~ebx,<STR>", "jmp~FOO"]], [1, 0, 244, 1, 0, 1, 0, 0, 17, -1, 0.006182795698924731, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.018394777265745007, ["lea     len, [r15+3]", "mov     r11d, eax"], ["lea~len,[r15+0]", "mov~r11d,eax"]], [1, 0, 244, 1, 0, 4, 0, 1, 17, -1, 0.006438812083973375, ["add     m, 1", "lea     rdx, [i+m]", "cmp     r14, rdx", "ja      short loc_3DD0"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r14,rdx", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 18, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_3DE4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.07144062553336733, ["mov     eax, [rsp+0F8h+quoting_style]; jumptable 0000000000002FDE case 63", "cmp     eax, 2", "jz      loc_3AC0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 14, -1, 0.005692097627581499, ["mov     c_and_shell_quote_compat_0, argsize_0", "mov     argsize_0, r8", "jmp     force_outer_quoting_style"], ["mov~c_and_shell_quote_compat_0,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.06386222051544632, ["cmp     buffersize_0, len", "jbe     short loc_38CE"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 12, -1, 0.06488628605564088, ["mov     eax, r11d", "mov     rdx, r15", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_38C4"], ["mov~eax,r11d", "mov~rdx,r15", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0008960573476702509, ["xor     r10d, r10d; jumptable 000000000000382E case 63"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 14, 0, 0, 15, -1, 0.02197900665642601, ["mov     r14, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, r15", "mov     rsi, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "mov     r9, [rsp+0F8h+var_60]", "cmp     rcx, r14", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "jnb     short loc_3DE7"], ["mov~r14,[rsp+0]", "mov~rcx,r15", "mov~rsi,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rcx,r14", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [4, 0, 244, 0, 0, 7, 0, 0, 5, -1, 0.009370199692780337, ["lea     rax, unk_921B", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0F8h+s2], rax", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [8, 0, 245, 0, 0, 10, 1, 1, 4, -1, 0.0015873015873015873, ["mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "jmp     loc_2EAB"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_3A9E"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.018663594470046084, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_40CD"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.028379416282642088, ["cmp     buffersize_0, r15", "jbe     short loc_3F4E"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.06360620413039768, ["cmp     [rsp+0F8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_3D20"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.030036375661375625, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 0000000000002FDE case 92", "jz      loc_3A58"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.05666922683051715, ["cmp     eax, 5", "jnz     short loc_3108"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.01282642089093702, ["cmp     r13, r15", "jbe     short loc_34E2"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 5, -1, 0.0004608294930875576, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 4, 1, 0, 3, -1, 0.13227086533538146, ["mov     r8, r14", "xor     r12d, r12d", "mov     r14, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r8,r14", "xor~r12d,r12d", "mov~r14,argsize_0", "nop~[word ptr [rax+0]"]], [14, 0, 244, 0, 0, 23, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 6", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+var_70], eax", "lea     rax, unk_921B", "and     ecx, 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 5", "jmp     loc_2ED8"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "mov~[rsp+0],eax", "lea~rax,<TAG>", "and~ecx,0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 7", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_2ED8"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 6, 1, 1, 3, -1, 0.012480798771121352, ["lea     rax, asc_921D; \"'\"", "mov     [rsp+0F8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+s2], rax", "jmp     loc_2ED8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 0", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_2ED8"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031105990783410137, ["lea     rax, asc_921D; \"'\"", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_2ED8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.003123399897593446, ["lea     rax, unk_921B", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_2ED8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.004069700460829493, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+backslash_escapes], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.02322068612391193, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_3901"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.050388291517323776, ["mov     eax, [rsp+0F8h+var_70]", "test    eax, eax", "jz      short loc_3108"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.012570404505888377, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_34F1"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019175627240143368, ["cmp     buffersize_0, r15", "jbe     short loc_3CF1"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 13, -1, 0.047405700631507085, ["lea     rdx, [i+2]", "cmp     rdx, argsize_0", "jnb     short loc_3108"], ["lea~rdx,[i+0]", "cmp~rdx,argsize_0", "jnb~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0005120327700972862, ["xor     r10d, r10d; jumptable 000000000000382E case 39"], ["xor~r10d,r10d"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000002DC1 default case"], ["call~FOO"]], [3, 0, 280, 1, 1, 29, 2, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0C8h", "mov     rax, [rsp+0F8h+quote_these_too]", "mov     [rsp+0F8h+arg], arg_0", "mov     [rsp+0F8h+quoting_style], r8d", "mov     [rsp+0F8h+flags], r9d", "mov     [rsp+0F8h+var_D8], rax", "mov     rax, [rsp+0F8h+left_quote]", "mov     [rsp+0F8h+quote_string_0], rax", "mov     rax, [rsp+0F8h+right_quote]", "mov     [rsp+0F8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0F8h+var_98], rax", "ja      loc_40F0; jumptable 0000000000002DC1 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 4, -1, 0.6334485407066052, ["cmp     argsize_0, i", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_2F03"], ["cmp~argsize_0,i", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 1, 12, -1, 0.012224782386072709, ["add     i, 1", "jmp     loc_2EE8"], ["add~i,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 5, 0, 1, 10, -1, 0.07368151561699948, ["lea     rax, [rsp+0F8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0F8h+mbstate.__count], 0", "mov     [rsp+0F8h+ps], rax", "jnz     short loc_3B34"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.17191500256016384, ["cmp     [rsp+0F8h+var_98], 1; jumptable 0000000000002FDE default case", "jnz     loc_3AD8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 4, 2, 1, 11, -1, 0.01624530636627411, ["mov     edx, [rsp+0F8h+var_84]", "xor     eax, eax", "test    edx, edx", "jnz     loc_3D2E"], ["mov~edx,[rsp+0]", "xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018919610855094728, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_3D00"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 16, -1, 0.006899641577060932, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_2FF2"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 12, -1, 0.0006539085168117425, ["nop     dword ptr [c_0+00h]"], ["nop~[word ptr [c_0+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.044410308926437964, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_3F18"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.0670762928827445, ["cmp     m, 1", "ja      loc_33DC"], ["cmp~m,0", "ja~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 16, -1, 0.021210957501280082, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp", "jmp     loc_3C33"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 11, 2, 0, 13, -1, 0.036904761904761905, ["mov     eax, ebp", "mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "xor     eax, 1", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "and     al, [rsp+0F8h+backslash_escapes]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     bytes, [rsp+0F8h+pending_shell_escape_end]"], ["mov~eax,ebp", "mov~rdi,m", "movzx~r11d,[rsp+0]", "xor~eax,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~al,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~bytes,[rsp+0]"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0014400921658986176, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 2, 0, 12, -1, 0.006706135859361665, ["mov     ebx, eax", "xor     ebp, ebp", "xor     eax, eax"], ["mov~ebx,eax", "xor~ebp,ebp", "xor~eax,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r8+0],0"]], [10, 0, 245, 0, 0, 11, 1, 0, 3, -1, 0.006259600614439324, ["mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 250, 0, 0, 8, 3, 1, 2, -1, 8.960573476702509e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 4", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_36D6"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.020451442225635774, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_2FF2"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 15, -1, 0.03960360129714969, ["movzx   ebx, byte ptr [rax+rdx]", "cmp     bl, 3Eh ; '>'", "ja      loc_3108"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.03512971496842464, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_3108"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     argsize_0", "pop     i", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~i", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [1, 0, 244, 0, 0, 4, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     byte ptr [r8+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_3A9E"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r8+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 1, 11, 0, 1, 11, -1, 0.0, ["mov     rdi, [rsp+0F8h+arg]; s", "mov     [rsp+0F8h+buffersize], r8", "mov     byte ptr [rsp+0F8h+var_80], r11b", "mov     byte ptr [rsp+0F8h+pwc], r10b", "mov     [rsp+0F8h+pending_shell_escape_end], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+var_80]", "movzx   r10d, byte ptr [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r8, [rsp+0F8h+buffersize]", "mov     r9, [rsp+0F8h+pending_shell_escape_end]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [12, 0, 245, 0, 0, 18, 3, 1, 2, -1, 2.560163850486431e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000002DC1 case 3", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_3712"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.020458376002730795, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax]", "jnz     short loc_2F65"], ["cmp~argsize_0,0", "lea~rbx,<TAG>", "jnz~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 11, -1, 0.005721966205837174, ["mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_2FF2"], ["mov~[rsp+0],bpl", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 0, 9, -1, 0.0032258064516129032, ["cmp     rax, 1", "jbe     short loc_2F65"], ["cmp~rax,0", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.001856118791602663, ["xor     r10d, r10d; jumptable 000000000000382E case 92"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.007002048131080389, ["cmp     [rsp+0F8h+var_85], 0", "jz      loc_3988"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, edx"], ["add~r15,0", "mov~r11d,edx"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, -1, 0.01607782898105479, ["mov     edx, eax"], ["mov~edx,eax"]], [1, 0, 244, 0, 0, 5, 2, 1, 7, -1, 0.0630184331797235, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "movzx   edx, [rsp+0F8h+var_E1]", "xor     eax, 1", "and     dl, al", "jz      loc_3FE4"], ["movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "xor~eax,0", "and~dl,al", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0027265745007680493, ["cmp     [rsp+0F8h+quote_string_len], 0", "jz      loc_3988"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r9, [rsp+0F8h+ps]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r9,[rsp+0]"]], [0, 0, 244, 0, 0, 3, 0, 0, 20, -1, 0.027867383512544804, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_3F6C"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r8+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 0, 1, 15, -1, 0.006477214541730671, ["jmp     loc_33CA"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     byte ptr [r8+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 21, -1, 0.02761136712749616, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_3F7B"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.4439136371394434, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_3378; jumptable 0000000000002FDE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 3.840245775729647e-05, ["xor     r10d, r10d; jumptable 000000000000382E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.004214349718381978, ["xor     ebp, ebp; jumptable 0000000000002FDE cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~ebp,ebp"]], [1, 0, 244, 1, 0, 5, 2, 1, 22, -1, 0.027355350742447517, ["add     r15, 4", "xor     ebp, ebp", "xor     eax, eax", "mov     r12, i", "jmp     loc_2FF2"], ["add~r15,0", "xor~ebp,ebp", "xor~eax,eax", "mov~r12,i", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.014460445468509945, ["cmp     [rsp+0F8h+var_88], 0", "jz      loc_2FF0; jumptable 0000000000002FDE cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 8, -1, 0.043561187916026624, ["cmp     [rsp+0F8h+encountered_single_quote], 0", "jz      loc_3FE6"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.006067588325652842, ["mov     [rsp+0F8h+var_E1], al", "mov     [rsp+0F8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],al", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 6, 0, 0, 12, -1, 0.0018657194060419868, ["movzx   eax, [rsp+0F8h+var_88]", "mov     rbp, argsize_0", "mov     [rsp+0F8h+quoting_style], 2", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "nop     word ptr [rax+rax+00000000h]"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~[rsp+0],0", "mov~argsize_0,r8", "mov~[rsp+0],al", "nop~[ord ptr [rax+0]"]], [1, 0, 247, 0, 0, 2, 0, 1, 3, 0, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 0", "jmp     loc_2DEA"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 7, 0, 1, 20, -1, 0.0005376344086021505, ["movzx   eax, [rsp+0F8h+var_88]", "mov     bytes, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     printable, [rsp+0F8h+pending_shell_escape_end]", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r13,[rsp+0]", "mov~printable,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 244, 0, 1, 15, 2, 1, 10, -1, 0.09486687147977471, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     byte ptr [rsp+0F8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   bpl", "setz    al", "and     al, [rsp+0F8h+backslash_escapes]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,0", "setnz~bpl", "setz~al", "and~al,[rsp+0]"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.10432667690732207, ["test    al, al", "jz      loc_2FF2"], ["test~al,al", "jz~FOO"]], [0, 0, 244, 1, 0, 6, 1, 1, 13, -1, 0.14626216077828982, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0F8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0F8h+arg]", "jmp     loc_34A0"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 12, -1, 0.08591909882232462, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 247, 0, 0, 1, 0, 0, 3, -1, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.006169994879672299, ["mov     rdi, m"], ["mov~rdi,m"]], [0, 0, 244, 0, 0, 3, 1, 0, 10, -1, 0.00020737327188940095, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 000000000000382E cases 37,43-58,65-90,93,95,97-122", "xor     r10d, r10d", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~ebp,[rsp+0]", "xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.02879800307219662, ["xor     eax, eax; jumptable 0000000000002FDE cases 37,43-58,65-90,93,95,97-122"], ["xor~eax,eax"]]], "func_feature": [17, 152, 176, 15, 281, 448, 49, 1104, 0.03791, 7, 41], "succs": [[29], [0, 3], [0], [0], [258], [258, 4], [263], [130, 6], [9, 6], [96, 6], [11, 12], [10, 27], [10, 28], [10, 30], [41, 26], [42, 14], [14, 15], [40, 235], [17, 235], [17], [24, 71], [212, 20], [74, 115], [72, 22], [25, 47], [47], [41, 105], [30], [27], [244, 173], [29, 31], [29], [29], [1], [33, 111], [33, 44], [33, 54], [132], [18, 37], [233], [171, 39], [105, 51], [41], [41], [41], [41], [50], [50, 46], [269, 255], [48, 7], [52, 253], [53], [253], [98, 60], [53], [53, 78], [178, 55], [56, 21], [64], [65, 66, 136, 140, 172, 141, 226, 200, 83, 84, 181, 86, 265, 280, 58, 186, 85], [75, 61], [75], [267], [67, 68, 69, 264, 137, 139, 174, 163, 190, 279, 88, 89, 87, 251, 220, 90, 62], [82, 270], [64], [64], [64], [64], [64], [113], [113, 70], [108, 76], [72], [72, 73], [77, 101], [204, 108], [101], [203, 148], [205], [93, 79], [18, 38], [97, 237], [82], [82], [82], [82], [82], [82], [82], [82], [82], [205], [92], [92], [263], [212, 95], [105], [104, 126], [98], [98, 149], [98], [239], [102, 247, 206, 175, 240, 209, 116, 23, 207], [126], [187, 117], [99], [106, 99], [205], [108], [216, 43], [216, 110], [120, 100], [112, 114], [112], [74], [122, 211], [107, 119], [109, 127], [121, 131], [100], [131], [194, 164], [138, 125], [123, 229], [138], [223], [128, 118], [118], [174, 63], [248, 129], [134, 143], [133, 158], [18, 132], [143], [212, 189], [227, 135], [135], [153, 154], [141], [249, 34], [267, 151], [141], [144, 155], [155], [2, 198], [150, 159], [146], [146], [146], [159], [16], [142, 151], [16], [153], [107], [165], [156, 165], [272, 133], [57], [32, 167], [234], [184, 161], [172], [193], [168, 177], [169], [94, 166], [177], [170, 30], [13, 30], [192, 81], [152, 179], [], [226], [210, 271], [183], [176, 183], [180, 182], [152], [182], [267], [55], [188], [185, 278], [184, 278], [201, 35], [1], [199, 191], [188, 157], [186], [199], [162, 234], [205], [193], [43], [195, 245], [5], [197, 5], [213, 45], [252, 36], [241, 214], [215], [202, 215], [127], [223], [205], [205], [205], [205], [205], [205], [1], [124, 229], [241, 219], [217, 147], [218, 228], [147], [228], [241, 231], [140], [], [221, 103], [232, 49], [223], [19, 246], [225, 273], [224, 230], [196, 238], [16], [237], [242, 236], [49], [275, 260], [233], [233], [241], [15], [196], [208], [277, 239], [16], [241, 243], [241, 145], [], [43], [19], [208], [8, 250], [16], [8, 257], [200], [256, 91], [71], [169], [268, 254], [91, 54], [8], [259, 262], [262], [274], [266], [266, 261], [226, 59], [265], [267], [16], [280, 270], [160, 169], [1], [1], [80], [1], [274], [16, 276], [57], [275], [80], [234], [280], [16]], "fname": "quotearg_buffer_restyled", "n_num": 281}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_4217"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_4217"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[4, 2, 0, 5, 4, 61, 4, 4, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r15, argsize", "sub     rsp, 28h", "test    o, o", "cmovz   rbx, rax", "call    ___errno_location", "mov     r11d, [rax]", "mov     ebp, [rbx+4]", "lea     r10, [rbx+8]", "sub     rsp, 8", "mov     r8d, [rbx]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     [rsp+60h+var_3C], r11d", "or      ebp, 1", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "push    r10; quote_these_too", "mov     r9d, ebp; flags", "mov     r13, rax", "mov     [rsp+78h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "add     rsp, 20h", "mov     rdi, rsi; n", "mov     [rsp+58h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "mov     r10, [rsp+70h+quote_these_too]", "mov     r8d, [rbx]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "mov     r12, rax", "push    r10; quote_these_too", "mov     rsi, [rsp+78h+buffersize]; buffersize", "call    quotearg_buffer_restyled", "mov     r11d, [rsp+78h+var_3C]", "mov     rax, r12", "mov     [r13+0], r11d", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "call~FOO", "mov~r11d,<TAG>", "mov~ebp,[rbx+0]", "lea~r10,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~[rsp+0],r11d", "or~ebp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "push~r10", "mov~r9d,ebp", "mov~r13,rax", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "add~rsp,<STR>", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "mov~r10,[rsp+0]", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "mov~r12,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~r11d,[rsp+0]", "mov~rax,r12", "mov~[r13+0],r11d", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [4, 4, 4, 1, 1, 0, 0, 61, 0.0, 1, 5], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_443F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 0, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 1, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,<STR>", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_44C9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_44A1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_4490"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_44E4"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, default_quoting_options.quote_these_too", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_466B"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_456F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_4688"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_46A9"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_461F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_46AE"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_4597"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[], [0, 6], [0], [12], [8, 3], [9, 13], [2, 7], [2], [12], [], [], [10, 4], [1], [1, 11]], "fname": "quotearg_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_486E"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_475D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_4735"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_4848"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_47E1"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_4869"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "lea     r15, default_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_4829"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[3, 12], [0, 10], [13], [2, 11], [9], [4, 6], [4], [], [1, 7], [], [9, 5], [13], [], [10]], "fname": "quotearg_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_49CE"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_49E8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_4901"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_48D4"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_4982"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[], [0, 6], [0], [8, 5], [1, 3], [9], [2, 7], [2], [9], [1]], "fname": "quotearg", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[4, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_4A6A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_4A97"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_4B14"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_4B5C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_4B80"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[5], [0], [0], [5, 6], [9, 7], [8, 4], [1, 2], [9], [], [8]], "fname": "quotearg_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 8, 0, 1, 4, 0, 1, 0, 0, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_4D90"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_4DD3"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_4CAA"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_4DB8"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_4C68"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_4D1A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_4D65"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 16, 0, 1, 16, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_4DC9"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_4DCE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_4DC9"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 0, 134, 0.05127, 5, 14], "succs": [[6], [0, 7], [], [1, 2], [9], [3, 4], [9], [6], [10, 11], [8, 14], [14], [10], [17, 5], [], [13, 15], [], [17, 12], []], "fname": "quotearg_n_style", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 1, 17, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_4FF8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.05514705882352941, ["cmp     r12d, 7FFFFFFFh", "jz      loc_5002"], ["cmp~r12d,0", "jz~FOO"]], [2, 1, 6, 4, 1, 21, 0, 2, 0, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, argsize; argsize", "add     rbx, r12", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_4F93"], ["shl~n,0", "sub~rsp,0", "mov~rcx,argsize", "add~rbx,r12", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_4EDF"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 0, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, ebp", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_4F4C"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.06985294117647059, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_4FC0"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 0, -1, 0.09558823529411764, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_4FFD"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 14, 0, 0, 3, 0, 1, 0, 2, 0.10294117647058823, ["cmp     r12d, cs:nslots", "mov     r8d, [rsp+88h+flags]", "jl      loc_4FE8"], ["cmp~r12d,<TAG>", "mov~r8d,<TAG>", "jl~FOO"]], [1, 0, 16, 0, 1, 18, 1, 2, 0, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  r12, edi", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+flags], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "test    r12d, r12d", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_84], eax", "js      loc_4FF8"], ["pxor~xmm0,xmm0", "movsxd~r12,edi", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],esi", "mov~<TAG>,esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "test~r12d,r12d", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_4EA0"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.034926470588235295, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 2, 18, 22, 0, 137, 0.05127, 5, 14], "succs": [[12, 14], [], [8, 1], [9, 7], [3], [3], [10], [10, 6], [13, 15], [16, 17], [9], [2, 4], [11, 14], [5], [], [5], [], []], "fname": "quotearg_n_style_mem", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 12, 0, 1, 17, 1, 2, 0, 0, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r12, arg", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+s], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+s]", "test    eax, eax", "jg      loc_5200"], ["pxor~xmm0,xmm0", "mov~r12,arg", "mov~[rsp+0],edi", "mov~[rsp+0],edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,[rsp+0]", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_5216"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_515D"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_51D0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_50AD"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [2, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_51A8"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,0", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_50F4"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_5211"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [10, 8, 18, 4, 15, 18, 1, 126, 0.05458, 5, 11], "succs": [[10, 7], [0, 5], [12], [2, 4], [2], [], [13], [8, 6], [13], [3, 12], [9], [], [11, 14], [9], []], "fname": "quotearg_style", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_5420"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_5425"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_52C1"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_53E0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 19, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+flags], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+flags]", "mov     [rsp+88h+var_84], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      loc_5410"], ["pxor~xmm0,xmm0", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],edi", "mov~<TAG>,edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_53B4"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,argsize", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_5307"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_536D"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [10, 8, 18, 5, 15, 18, 0, 129, 0.05458, 5, 11], "succs": [[], [0, 14], [8, 7], [9], [3], [3], [4, 5], [10, 6], [], [1, 12], [9], [13], [11, 13], [1], []], "fname": "quotearg_style_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_5593"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+options.flags]", "mov     r11, [rbx]", "sub     rsp, 8", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbp+8]", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdi, r12; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_55D8"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r12,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r12", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], eax", "mov     rax, r12", "jnz     short loc_562E"], ["mov~eax,[rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],eax", "mov~rax,r12", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbp, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    rbp; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbp,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbp", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_54F5"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_5608"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 43, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     ecx, edx", "push    rbp", "push    rbx", "and     ecx, 1Fh", "mov     r14, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbp, [rsp+88h+options]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+88h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     argsize, [rbp+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+18h], xmm0", "mov     edx, [rsi]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, edx", "mov     [rsi], eax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_5522"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~ecx,edx", "push~rbp", "push~rbx", "and~ecx,0", "mov~r14,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbp,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~argsize,[rbp+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,edx", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 133, 0.075, 9, 12], "succs": [[8, 3], [0, 2], [10, 11], [2], [7], [9, 4], [1, 5], [1], [3], [7], [], []], "fname": "quotearg_char_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 4, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, r15; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r15", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r15, rax", "mov     [r12], rsi", "jz      short loc_57A4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r15,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     r12, rax", "jz      loc_5818"], ["lea~rax,<TAG>", "cmp~r12,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 41, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     ecx, esi", "push    r13", "push    r12", "and     ecx, 1Fh", "push    rbp", "push    rbx", "mov     rbp, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbx, [rsp+88h+quoting_style]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+right_quote], rax", "mov     eax, esi", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     rdx, [rbx+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "mov     esi, [rdx]", "mov     eax, esi", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, esi", "mov     [rdx], eax", "call    ___errno_location", "mov     r13, rax", "mov     r14d, [rax]", "mov     eax, cs:nslots", "mov     r12, cs:slotvec_0", "test    eax, eax", "jg      short loc_572C"], ["push~r15", "push~r14", "mov~ecx,esi", "push~r13", "push~r12", "and~ecx,0", "push~rbp", "push~rbx", "mov~rbp,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,esi", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~rdx,[rbx+0]", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,esi", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~r14d,<TAG>", "mov~eax,<TAG>", "mov~r12,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], r14d", "mov     rax, r15", "jnz     short loc_583E"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],r14d", "mov~rax,r15", "jnz~FOO"]], [3, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "mov     r11, [r12]", "sub     rsp, 8", "mov     r15, [r12+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbx+8]", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r15; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_57EE"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r15,[r12+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbx+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r15", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbx, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r12+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    rbx; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r15, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbx,0", "call~FOO", "sub~rsp,0", "mov~[r12+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbx", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,rax", "call~FOO", "add~rsp,<STR>"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r12; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r12", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r12, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_56FF"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r12,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, r12; p", "mov     esi, 10h; n", "call    xrealloc", "mov     r12, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r12", "mov~esi,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     arg", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~arg", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 130, 0.075, 9, 12], "succs": [[6], [0, 6], [8, 9], [2, 5], [10, 11], [1, 4], [4], [5], [7], [7], [], []], "fname": "quotearg_char", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 5, 1, 1, 0, 0, 0.16363636363636364, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_5A3E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r14; buffer", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_59EB"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,r14", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_59A1"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 1, 11, 1, 1, 32, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_5927"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_5A18"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_58FA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 8, 15, 2, 12, 15, 1, 122, 0.075, 9, 11], "succs": [[11, 5], [0, 3], [0], [2, 4], [2], [], [8, 1], [9], [10, 7], [1], [9], []], "fname": "quotearg_colon", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 4, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_5BA4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_5C18"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 11, 1, 1, 34, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_5B2D"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_5C3E"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_5BEA"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5B00"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [9, 8, 15, 3, 12, 15, 0, 125, 0.075, 9, 11], "succs": [[4], [0, 4], [9, 10], [2, 7], [6], [], [11, 5], [1, 6], [7], [8], [8], []], "fname": "quotearg_colon_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 16, 0, 1, 17, 1, 2, 0, 0, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+options.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+options.flags], 0", "movups  xmmword ptr [rsp+88h+options.left_quote], xmm0", "movdqa  xmm0, cs:xmmword_96F0", "movups  xmmword ptr [rsp+88h+options.quote_these_too], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+options.quote_these_too+10h], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_5E71"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_5E71"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_5E76"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+options]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_5E0D"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_5E7B"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_5E60"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_5E38"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_5D52"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+options.flags]", "mov     rdx, [rsp+88h+options.right_quote]", "mov     r8d, [rsp+88h+options.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+options.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5D10"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_5DC2"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 5, 135, 0.05127, 6, 14], "succs": [[10, 7], [0, 10], [16, 17], [2, 14], [2], [], [9, 5], [11, 6], [12], [8, 13], [], [3], [3], [12], [4, 15], [4], [], []], "fname": "quotearg_n_style_colon", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[3, 1, 3, 3, 2, 18, 0, 2, 0, 0, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r14, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r15+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r14; quote_these_too", "mov     r9d, dword ptr [rsp+0A8h+left_quote]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r14,0", "call~FOO", "sub~rsp,0", "mov~[r15+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r14", "mov~r9d,[word ptr [rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [r15], rsi", "jz      short loc_601A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote_0, left_quote_0", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_60C3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote_0,left_quote_0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_60C3"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 16, 0, 1, 12, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  r15, edi", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote_0", "mov     [rsp+88h+left_quote], left_quote_0", "mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "test    r15d, r15d", "mov     rbx, rax", "mov     r13d, [rax]", "mov     r14, cs:slotvec_0", "js      loc_60C3"], ["movsxd~r15,edi", "mov~r12,arg", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "test~r15d,r15d", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~r14,<TAG>", "js~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_5FA4"], ["mov~r8d,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 2, 0.13725490196078433, ["cmp     r15d, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "mov     rsi, [rsp+88h+left_quote]", "jl      loc_60B8"], ["cmp~r15d,<TAG>", "mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "jl~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, r14; p", "call    xrealloc", "mov     r14, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r14", "call~FOO", "mov~r14,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     r14, rax", "jz      loc_6090"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~r14,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r14, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5F6F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r14,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     r15d, 7FFFFFFFh", "jz      loc_60CD"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 6, -1, 0.09150326797385622, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbx], r13d", "mov     rax, rbp", "jnz     short loc_60C8"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,r13d", "mov~rax,rbp", "jnz~FOO"]], [4, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+quoting_style+4]", "shl     n, 4", "sub     rsp, 8", "add     r15, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     r11, [r15]", "mov     rbp, [r15+8]", "or      r9d, 1; flags", "mov     dword ptr [rsp+90h+left_quote], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    rsi; left_quote", "mov     rdi, rbp; buffer", "mov     rsi, r11; buffersize", "lea     r14, [rsp+0A0h+quoting_style]", "lea     rax, [r14+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_6064"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~r15,r14", "mov~rcx,0", "mov~r11,<TAG>", "mov~rbp,[r15+0]", "or~r9d,0", "mov~[word ptr [rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~rsi", "mov~rdi,rbp", "mov~rsi,r11", "lea~r14,[rsp+0]", "lea~rax,[r14+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r14; s", "shl     rdx, 4; n", "call    _memset", "mov     rdx, [rsp+88h+var_48]", "mov     rsi, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, ebp"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r14", "shl~rdx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [11, 8, 22, 4, 19, 24, 0, 139, 0.05538, 9, 14], "succs": [[15], [0, 2], [0], [], [3, 5], [3, 6], [8, 3], [16], [13, 7], [17], [9, 11], [17], [], [10, 12], [], [18, 14], [1, 15], [16], []], "fname": "quotearg_n_custom", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+o.style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+o.right_quote], rax", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "jz      loc_6323"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_6323"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 16, 0, 1, 14, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  rbp, edi", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.left_quote], left_quote", "mov     [rsp+88h+o.right_quote], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "js      loc_6323"], ["movsxd~rbp,edi", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_62F0"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_61CB"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 6, -1, 0.09150326797385622, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_6328"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_6276"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 2, 0.13725490196078433, ["cmp     ebp, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "jl      loc_6318"], ["cmp~ebp,<TAG>", "mov~rdx,<TAG>", "jl~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     ebp, 7FFFFFFFh", "jz      loc_632D"], ["cmp~ebp,0", "jz~FOO"]], [3, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+o.flags]", "shl     n, 4", "sub     rsp, 8", "add     rbx, rbp", "mov     rcx, argsize; argsize", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    r12; left_quote", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+o]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_62BC"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~rbx,rbp", "mov~rcx,argsize", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "or~r9d,0", "mov~[rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~r12", "mov~rsi,r11", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_6202"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r12, [rsp+88h+o.left_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d", "mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "mov~r8d,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [11, 8, 22, 2, 19, 24, 0, 141, 0.05538, 9, 14], "succs": [[], [0, 2], [0, 3], [0, 12], [17], [4, 6], [17], [], [18, 7], [8], [9, 11], [9], [16, 14], [], [13, 5], [8, 10], [15], [15], []], "fname": "quotearg_n_custom_mem", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 11, 0, 1, 14, 1, 2, 0, 0, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r15, left_quote", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "test    eax, eax", "jg      short loc_6448"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r15,left_quote", "mov~r12,arg", "mov~[rsp+0],left_quote", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_655B"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_655B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_64B8"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, r14; buffer", "push    r15; left_quote", "mov     rsi, r11; buffersize", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_6502"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,r14", "push~r15", "mov~rsi,r11", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_6556"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6530"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 4, -1, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_640C"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]]], "func_feature": [10, 8, 18, 4, 15, 19, 0, 129, 0.05897, 9, 11], "succs": [[4, 7], [0, 13], [1, 13], [10, 11], [3, 6], [], [12, 5], [8, 14], [9], [4], [11], [6], [], [], [9]], "fname": "quotearg_custom", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_6776"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 4, -1, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6632"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_677B"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_677B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [1, 0, 11, 0, 1, 16, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_666E"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6750"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_66DB"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, rbp; buffer", "push    r12; left_quote", "mov     rsi, r11; buffersize", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_6721"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,rbp", "push~r12", "mov~rsi,r11", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 8, 18, 5, 15, 19, 0, 132, 0.05897, 9, 11], "succs": [[], [0, 8], [12], [2], [2], [14, 7], [5, 14], [9, 12], [], [3, 4], [13], [10, 13], [1, 11], [1], []], "fname": "quotearg_custom_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_692E"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_681D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_67F5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_6908"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_68A1"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_6929"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "lea     r15, quote_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_68E9"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[3, 12], [0, 10], [13], [2, 11], [9], [4, 6], [4], [], [1, 7], [], [9, 5], [13], [], [10]], "fname": "quote_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_6A44"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_6A8C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_699A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6AB0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_69C7"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[4], [0, 4], [], [1, 2], [2], [7], [8, 5], [3], [7], [3, 6]], "fname": "quote_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, quote_quoting_options.quote_these_too", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_6C4B"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6B4F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_6C68"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_6C89"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_6BFF"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_6C8E"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_6B77"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[], [0, 6], [0], [12], [8, 3], [9, 13], [2, 7], [2], [12], [], [], [10, 4], [1], [1, 11]], "fname": "quote_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_6DEE"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6CF4"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6E08"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_6DA2"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_6D21"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[], [0, 5], [0], [9], [8, 3], [2, 6], [2], [1, 4], [9], [1]], "fname": "quote", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_6E48"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbp, rax", "jns     short loc_6E80"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     count", "pop     rbp", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~count", "pop~rbp", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.25, ["cmp     count, 7FF00000h", "jbe     short loc_6E80"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.2, ["cmp     eax, 16h", "jnz     short loc_6E80"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FF00000h", "jmp     short loc_6E48"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 2, 33, 0.19048, 0, 2], "succs": [[2], [2, 4], [1, 3], [], [3, 5], [3, 6], [2]], "fname": "safe_read", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_6EA8"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_6EE0"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_6EE0"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.2, ["cmp     count, 7FF00000h", "jbe     short loc_6EE0"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FF00000h", "jmp     short loc_6EA8"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[2], [2, 3], [1, 4], [4, 5], [], [4, 6], [2]], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[5, 0, 17, 0, 4, 20, 3, 5, 0, 0, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_72C0; jumptable 0000000000006F94 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_6F2C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [2, 0, 2, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000006F94 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_9A00", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000006F94 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000006F94 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000006F94 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_7028"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_6FE4"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000006F94 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_7092"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000006F94 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000006F94 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_7243"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000006F94 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000006F94 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_71A6"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000006F94 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000006F94 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [18, 21, 29, 4, 21, 29, 0, 275, 0.01905, 16, 13], "succs": [[11, 4], [0], [0, 18], [8], [3, 5, 6, 7, 12, 14, 15, 17, 19, 20], [16], [18], [], [7], [1, 2], [8], [10], [10], [], [13], [13], [], [16], [], [18], [18]], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 1, 15, 1, 1, 0, 0, 0.0, ["mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 15, 1, 2, 5, -1, 0.007905138339920948, ["mov     rbx, [authors+20h]; jumptable 00000000000073CC case 5", "mov     r15, [authors+18h]", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     edx, 5; category", "mov     authors, [authors+0]", "xor     edi, edi; domainname", "call    _dcgettext", "push    rbx", "mov     r9, r14", "push    r15", "mov     r8, r13", "mov     rcx, rbp", "jmp     short loc_75E2"], ["mov~rbx,[authors+0]", "mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~edx,0", "mov~authors,[authors+0]", "xor~edi,edi", "call~FOO", "push~rbx", "mov~r9,r14", "push~r15", "mov~r8,r13", "mov~rcx,rbp", "jmp~FOO"]], [2, 0, 1, 1, 1, 13, 1, 1, 5, -1, 0.007905138339920948, ["mov     r15, [authors+18h]; jumptable 00000000000073CC case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "mov     r8, r13", "push    r15", "mov     rcx, rbx"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "mov~r8,r13", "push~r15", "mov~rcx,rbx"]], [2, 0, 2, 1, 1, 16, 1, 1, 5, -1, 0.008893280632411066, ["mov     r10, [authors+38h]; jumptable 00000000000073CC case 8", "mov     r9, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     [rsp+58h+var_48], r10", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~[rsp+0],r10", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 4, -1, 0.1768774703557312, ["lea     rdx, off_9A28", "movsxd  rax, dword ptr [rdx+rbx*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [3, 0, 1, 1, 1, 18, 2, 2, 5, -1, 0.001976284584980237, ["mov     rbx, [authors+0]; jumptable 00000000000073CC case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 6, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbp", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 5, -1, 0.007905138339920948, ["mov     r9, [authors+10h]; jumptable 00000000000073CC case 7", "mov     r14, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     edx, 5; category", "mov     r15, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_767B"], ["mov~r9,[authors+0]", "mov~r14,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "mov~r15,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 5, -1, 0.007905138339920948, ["mov     r8, [authors+8]; jumptable 00000000000073CC case 6", "mov     r13, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     edx, 5; category", "mov     r14, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    r13", "push    rbx", "push    r15"], ["mov~r8,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "xor~edi,edi", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~r13", "push~rbx", "push~r15"]], [2, 0, 23, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "mov     rbp, authors", "sub     rsp, 28h", "cmp     qword ptr [authors], 0", "jz      short loc_733C"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "mov~rbp,authors", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 5, -1, 0.001976284584980237, ["mov     r14, [authors+10h]; jumptable 00000000000073CC case 3", "mov     r13, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r14", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r14", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 5, 0.001976284584980237, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [5, 0, 17, 0, 4, 20, 3, 5, 3, 1, 0.19169960474308298, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbx, 9; switch 10 cases", "ja      loc_7700; jumptable 00000000000073CC default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbx,0", "ja~FOO"]], [1, 0, 18, 0, 1, 8, 1, 2, 2, 2, 0.06719367588932806, ["mov     r8, version", "mov     version, package", "lea     package, aSS; \"%s %s\\n\"", "mov     esi, 1", "mov     stream, r12", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_7364"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~stream,r12", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 8, 1, 1, 2, 2, 0.07509881422924901, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     stream, r12", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~stream,r12", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 3, 0.11857707509881422, ["test    command_name, command_name", "jz      loc_7458"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 22, 1, 0, 3, 0, 1, 2, 4, 0.04150197628458498, ["add     n_authors, 1", "cmp     qword ptr [rbp+n_authors*8+0], 0", "jnz     short loc_7330"], ["add~n_authors,0", "cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 5, -1, 0.001976284584980237, ["mov     r11, [authors+40h]; jumptable 00000000000073CC case 9", "mov     r10, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     authors, [authors+0]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "lea~rsi,<TAG>", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~authors,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8"]], [2, 0, 1, 1, 1, 15, 1, 1, 6, -1, 0.007905138339920948, ["mov     r10, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r10", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_58]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r10,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r10", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 5, -1, 0.014822134387351778, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r11, [rsp+58h+var_40]", "push    r11", "jmp     loc_7415"], ["xor~edi,edi", "call~FOO", "mov~r11,[rsp+0]", "push~r11", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 4, 0, 0.02075098814229249, ["mov     r11, [authors+40h]; jumptable 00000000000073CC default case", "mov     r10, [authors+38h]", "mov     edx, 5", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "jmp     loc_74C3"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "mov~edx,0", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h; jumptable 00000000000073CC case 0", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [3, 0, 1, 1, 1, 20, 2, 2, 5, -1, 0.001976284584980237, ["mov     r13, [authors+8]; jumptable 00000000000073CC case 2", "mov     rbx, [authors+0]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [18, 22, 31, 4, 24, 34, 0, 287, 0.03187, 16, 14], "succs": [[], [0], [0], [18], [1, 2, 3, 5, 7, 8, 10, 17, 21, 23], [22], [], [6], [6], [11, 15], [22], [16], [4, 20], [12], [12, 22], [13, 14], [16, 15], [19], [21], [18], [19], [], [], [22]], "fname": "version_etc_ar", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 3, 1, 1, 14, 1, 1, 0, 0, 0.0027137042062415195, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+0E8h+var_A8]", "mov     rdi, stream", "mov     r8, [rsp+0E8h+var_B0]", "mov     rcx, [rsp+0E8h+var_B8]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [2, 0, 4, 1, 1, 17, 1, 2, 7, -1, 0.005427408412483039, ["mov     r9, [rsp+0B8h+authtab+10h]; jumptable 0000000000007832 case 8", "mov     r8, [rsp+0B8h+authtab+8]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "jmp     loc_7ADA"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 7, -1, 0.007010402532790593, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+0B8h+var_A0]", "push    r10"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10"]], [1, 0, 26, 0, 0, 2, 0, 1, 4, -1, 0.02939846223428313, ["mov     ebp, 1", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 59, 0, 0, 6, 1, 1, 3, 10, 0.01594301221166893, ["lea     r11d, [rax+10h]", "mov     [authors], r11d", "mov     r9, [rdi+r10]", "test    r9, r9", "mov     [rsp+0B8h+authtab+8], r9", "jz      short loc_7880"], ["lea~r11d,[rax+0]", "mov~<TAG>,r11d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 3, -1, 0.012550881953867029, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 3, 0, 1, 10, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySSAnd; jumptable 0000000000007832 case 3", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_7E41"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 20, 1, 0, 4, 0, 1, 6, -1, 0.1824966078697422, ["lea     rdx, off_9A50", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 5, 0, 0, 16, 0, 1, 6, -1, 0.015603799185888738, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 0000000000007832 default case", "mov     r9, [rsp+0B8h+authtab+10h]", "mov     edx, 5", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     [rsp+0B8h+var_A0], r10", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "jmp     loc_7ACC"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 5, 0, 0, 15, 0, 0, 7, -1, 0.0002261420171867933, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 0000000000007832 case 9", "mov     r9, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A0], r10", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [0, 0, 41, 0, 0, 6, 1, 1, 9, 7, 0.015829941203075532, ["lea     r10d, [rax+28h]", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab+20h], r9", "jz      short loc_7970"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 0, 8, 7, 0.014699231117141566, ["cmp     r9d, 2Fh ; '/'", "jbe     short loc_7980"], ["cmp~r9d,0", "jbe~FOO"]], [1, 0, 41, 1, 0, 7, 1, 1, 4, 6, 0.04794210764360018, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+18h], rdi", "jnz     short loc_794F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 44, 1, 0, 7, 1, 1, 3, 7, 0.0407055630936228, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+10h], rdi", "jnz     short loc_78FF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 7, 7, 0.006105834464043419, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, -1, 0.01826096788783356, ["mov     rax, [rsp+0B8h+var_40]; jumptable 0000000000007832 case 0", "xor     rax, fs:28h", "jnz     loc_7E41"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 8, -1, 0.0013568521031207597, ["mov     rcx, [rsp+0D8h+var_B8]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_7B08; jumptable 0000000000007832 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 8, -1, 0.0013568521031207597, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_7B08; jumptable 0000000000007832 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 5, -1, 0.013794663048394391, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 39, 0, 0, 2, 0, 0, 10, 6, 0.009724106739032113, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_79D0"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 49, 0, 0, 8, 1, 1, 1, 9, 0.007914970601537766, ["mov     rax, [authors+8]", "mov     stream, rax", "lea     rax, [rax+8]", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab], rdi", "jnz     loc_785E"], ["mov~rax,[authors+0]", "mov~stream,rax", "lea~rax,[rax+0]", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 1, 67, 1, 0, 14, 1, 0, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 88h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "jbe     loc_7834"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 11, 5, 0.0024875621890547263, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [2, 0, 4, 1, 1, 10, 1, 2, 7, -1, 0.005314337403889643, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000007832 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "sub     rsp, 8", "jmp     short loc_7C7E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 10, 1, 1, 7, -1, 0.005314337403889643, ["mov     r15, [rsp+0B8h+authtab+20h]; jumptable 0000000000007832 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "push    r15"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15"]], [5, 0, 22, 0, 4, 20, 3, 5, 5, -1, 0.21393034825870647, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_7DF0; jumptable 0000000000007832 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 23, 0, 1, 8, 1, 2, 4, -1, 0.10696517412935323, ["mov     authors, version", "mov     version, package", "lea     package, aSS; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_77CA"], ["mov~authors,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 23, 0, 1, 8, 1, 1, 4, -1, 0.11668928086838534, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [2, 0, 25, 1, 0, 8, 2, 1, 10, -1, 0.008480325644504749, ["lea     rdi, [rax+20h]", "xor     ebp, ebp", "mov     [authors+8], rdi", "cmp     qword ptr [rax+18h], 0", "setnz   bpl", "add     rbp, 9", "test    command_name, command_name", "jnz     loc_77AB"], ["lea~rdi,[rax+0]", "xor~ebp,ebp", "mov~[authors+0],rdi", "cmp~[word ptr [rax+0],0", "setnz~bpl", "add~rbp,0", "test~command_name,command_name", "jnz~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 3, -1, 0.2233152419719584, ["test    command_name, command_name", "jz      loc_7A55"], ["test~command_name,command_name", "jz~FOO"]], [0, 0, 26, 0, 0, 1, 1, 0, 2, -1, 0.017639077340569877, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 65, 0, 0, 8, 1, 1, 1, 11, 0.0067842605156037995, ["mov     rdi, [authors+10h]", "lea     r10d, [rax+8]", "mov     r9d, eax", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab], r9", "jz      loc_77A0"], ["mov~rdi,[authors+0]", "lea~r10d,[rax+0]", "mov~r9d,eax", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 2, 10, 0.011872455902306648, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_7890"], ["cmp~r10d,0", "jbe~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, -1, 0.02939846223428313, ["mov     ebp, 2", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 6, -1, 0.02939846223428313, ["mov     ebp, 3", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.02939846223428313, ["mov     ebp, 4", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.023518769787426504, ["mov     ebp, 5", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.017639077340569877, ["mov     ebp, 6", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.0030529172320217096, ["mov     ebp, 7", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 10, 0, 0.0002261420171867933, ["mov     ebp, 8", "jmp     loc_77A2"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 18, 1, 2, 7, -1, 0.005314337403889643, ["mov     rcx, [rsp+0B8h+authtab]; jumptable 0000000000007832 case 6", "mov     r13, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14", "jmp     short loc_7BD6"], ["mov~rcx,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14", "jmp~FOO"]], [1, 0, 4, 0, 1, 19, 1, 1, 7, -1, 0.005314337403889643, ["mov     r8, [rsp+0B8h+authtab+8]; jumptable 0000000000007832 case 7", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "push    r12", "push    rbp", "mov     r9, r13", "push    r15", "push    r14", "mov     r8, [rsp+0D8h+var_B0]"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "push~rbp", "mov~r9,r13", "push~r15", "push~r14", "mov~r8,[rsp+0]"]], [1, 0, 57, 0, 0, 2, 0, 0, 4, 9, 0.015829941203075532, ["cmp     r11d, 2Fh ; '/'", "jbe     short loc_78E0"], ["cmp~r11d,0", "jbe~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 5, 8, 0.007462686567164179, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 88h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 28, 0, 0, 6, 1, 1, 9, 1, 0.014586160108548168, ["lea     rdi, [rax+18h]", "mov     [authors+8], rdi", "mov     rdi, [rax+10h]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+40h], rdi", "jz      loc_7E5A"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [0, 0, 30, 0, 0, 6, 1, 1, 8, 2, 0.022614201718679332, ["lea     rdi, [rax+10h]", "mov     [authors+8], rdi", "mov     rdi, [rax+8]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+38h], rdi", "jz      loc_7E50"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 35, 1, 0, 7, 1, 1, 6, 4, 0.04590682948891904, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+28h], rdi", "jnz     short loc_79E8"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 38, 1, 0, 7, 1, 1, 5, 5, 0.050203527815468114, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+20h], rdi", "jnz     short loc_799F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, -1, 0.009724106739032113, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 1, 1, 1, 0, 15, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 9, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySAndS; jumptable 0000000000007832 case 2", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_7E41"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenByS; jumptable 0000000000007832 case 1", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_7E41"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 32, 0, 0, 6, 1, 1, 7, 3, 0.04432383536861149, ["lea     rdi, [rax+8]", "mov     [authors+8], rdi", "mov     rdi, [rax]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+30h], rdi", "jz      loc_7E46"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [0, 0, 47, 0, 0, 6, 1, 1, 7, 8, 0.018995929443690638, ["lea     r9d, [rax+20h]", "mov     [authors], r9d", "mov     r10, [rdi+r10]", "test    r10, r10", "mov     [rsp+0B8h+authtab+18h], r10", "jz      short loc_7920"], ["lea~r9d,[rax+0]", "mov~<TAG>,r9d", "mov~r10,<TAG>", "test~r10,r10", "mov~[rsp+0],r10", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 0, 6, 8, 0.016734509271822705, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_7930"], ["cmp~r10d,0", "jbe~FOO"]], [1, 0, 47, 1, 0, 7, 1, 1, 2, 8, 0.02838082315694256, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+8], rdi", "jnz     short loc_78AF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 4, -1, 0.013116236996834011, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.004975124378109453, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 53, 0, 0, 6, 1, 1, 5, 9, 0.018995929443690638, ["lea     r10d, [rax+18h]", "mov     [authors], r10d", "mov     r9, [rdi+r11]", "test    r9, r9", "mov     [rsp+0B8h+authtab+10h], r9", "jz      short loc_78D0"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 3, 9, 0.008819538670284939, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [1, 1, 1, 1, 0, 14, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 1, 1, 1, 0, 13, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     rcx, rbp", "mov     rdi, stream", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~rcx,rbp", "mov~rdi,stream", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 35, 1, 0, 6, 1, 1, 11, 5, 0.011080958842152872, ["add     eax, 30h ; '0'", "mov     [authors], eax", "mov     rax, [rdi+r10]", "test    rax, rax", "mov     [rsp+0B8h+authtab+28h], rax", "jz      short loc_79C0"], ["add~eax,0", "mov~<TAG>,eax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 12, 4, 0.003165988240615106, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 27, 0, 0, 1, 0, 0, 6, -1, 0.014699231117141566, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]]], "func_feature": [19, 44, 60, 5, 68, 103, 0, 425, 0.02504, 17, 18], "succs": [[15], [0], [0], [29], [42, 3], [3], [50, 51], [1, 6, 40, 41, 23, 15, 52, 53, 9, 24], [2], [2], [35, 19], [10, 59], [48, 18], [58, 12], [12], [51, 44], [15], [15], [34], [65, 22], [57, 30], [20, 31], [47], [17], [17], [8, 7], [25], [25, 62], [26, 27], [26, 27], [29], [32, 30], [4, 61], [29], [29], [29], [29], [29], [29], [29], [16], [16], [43, 60], [13], [], [28, 39], [45, 38], [49, 54], [67, 47], [36], [62], [], [51, 63], [64, 51], [37, 46], [34, 11], [14, 55], [13, 5], [33], [48], [56, 33], [57], [], [62], [62], [66, 36], [54], [35]], "fname": "version_etc_va", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 29, 0, 0, 7, 1, 1, 0, 0, 0.027777777777777776, ["mov     rax, [rax]", "lea     rdi, [rsp+108h+arg_20]", "mov     ebp, 5", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_A0], rax", "jz      short loc_8000"], ["mov~rax,<TAG>", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 30, 0, 0, 7, 1, 1, 4, 4, 0.025396825396825397, ["mov     rdi, [r8]", "lea     rax, [rsp+108h+arg_18]", "mov     ebp, 4", "mov     [rsp+108h+authors.overflow_arg_area], rax", "test    rdi, rdi", "mov     [rsp+108h+var_A8], rdi", "jz      loc_8000"], ["mov~rdi,<TAG>", "lea~rax,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rax", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [2, 0, 3, 0, 2, 16, 2, 3, 6, -1, 0.0, ["mov     r13, [rsp+108h+var_B8]; jumptable 0000000000008090 case 3", "mov     r12, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbp, [rsp+108h+var_C8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r9, r13", "mov     rdx, rax", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8113; jumptable 0000000000008090 case 0"], ["mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "lea~rsi,<TAG>", "mov~rbp,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r9,r13", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 16, 1, 0, 4, 0, 1, 5, -1, 0.21865079365079365, ["lea     rdx, off_9A78", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 4, 0, 1, 11, 1, 2, 6, -1, 0.007936507936507936, ["mov     r15, [rsp+108h+var_A8]; jumptable 0000000000008090 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "push    r15", "jmp     short loc_82BB"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 7, -1, 0.009523809523809525, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+138h+var_F8]", "mov     rdi, stream", "mov     r8, [rsp+138h+var_100]", "mov     rcx, [rsp+138h+var_108]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 5, 1, 2, 6, -1, 0.013888888888888888, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+108h+var_F0]", "push    r10", "jmp     loc_80E5"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 4, 1, 1, 16, 1, 1, 6, -1, 0.008333333333333333, ["mov     r9, [rsp+108h+var_B8]; jumptable 0000000000008090 case 8", "mov     r8, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0"]], [5, 0, 18, 0, 4, 20, 3, 5, 4, -1, 0.2571428571428571, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_83D0; jumptable 0000000000008090 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 8, 0, 0.01746031746031746, ["mov     ebp, 7", "jmp     loc_8000"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 26, 0, 0, 6, 1, 1, 7, 1, 0.022222222222222223, ["lea     rax, [rsp+108h+arg_30]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+8]", "test    rax, rax", "mov     [rsp+108h+var_90], rax", "jz      loc_8453"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, -1, 0.25, ["test    command_name, command_name", "jz      loc_8140"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 2, 6, 0.024603174603174603, ["mov     rax, [rsp+108h+arg_0]", "lea     rdi, [rsp+108h+arg_8]", "mov     ebp, 2", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_B8], rax", "jz      loc_8000"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 31, 0, 0, 7, 1, 1, 3, 5, 0.02142857142857143, ["mov     rax, [rdi]", "lea     r8, [rsp+108h+arg_10]", "mov     ebp, 3", "mov     [rsp+108h+authors.overflow_arg_area], r8", "test    rax, rax", "mov     [rsp+108h+var_B0], rax", "jz      loc_8000"], ["mov~rax,<TAG>", "lea~r8,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],r8", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, -1, 0.01746031746031746, ["xor     ebp, ebp", "jmp     loc_8000"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, -1, 0.00873015873015873, ["mov     ebp, 1", "jmp     loc_8000"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.01746031746031746, ["mov     ebp, 6", "jmp     loc_8000"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, -1, 0.00873015873015873, ["mov     ebp, 8", "jmp     loc_8000"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 22, 1, 0, 6, 1, 0, 9, -1, 0.00873015873015873, ["xor     ebp, ebp", "cmp     qword ptr [rdi+18h], 0", "lea     rax, [rsp+108h+arg_40]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "setnz   bpl", "add     rbp, 9"], ["xor~ebp,ebp", "cmp~[word ptr [rdi+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "setnz~bpl", "add~rbp,0"]], [1, 0, 34, 0, 0, 5, 1, 1, 1, 7, 0.009523809523809525, ["mov     rax, [rdi+28h]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "test    rax, rax", "mov     [rsp+108h+var_C0], rax", "jz      loc_8430"], ["mov~rax,[rdi+0]", "mov~[rsp+0],0", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 7, -1, 0.004761904761904762, ["mov     rcx, [rsp+128h+var_108]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_8113; jumptable 0000000000008090 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 4, 0, 1, 20, 1, 2, 6, -1, 0.007936507936507936, ["mov     r8, [rsp+108h+var_C0]; jumptable 0000000000008090 case 7", "mov     r13, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     r12, [rsp+108h+var_98]", "mov     edx, 5; category", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "push    r12", "mov     r9, r13", "push    rbp", "push    r15", "push    r14", "mov     r8, [rsp+128h+var_100]", "jmp     short loc_8354"], ["mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~r12,[rsp+0]", "mov~edx,0", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "mov~r9,r13", "push~rbp", "push~r15", "push~r14", "mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 4, 1, 1, 17, 1, 1, 6, -1, 0.007936507936507936, ["mov     rcx, [rsp+108h+var_C8]; jumptable 0000000000008090 case 6", "mov     rbp, [rsp+108h+var_A0]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "xor     edi, edi; domainname", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14"], ["mov~rcx,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14"]], [0, 0, 28, 0, 0, 6, 1, 1, 6, 2, 0.02857142857142857, ["lea     rax, [rsp+108h+arg_28]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi]", "test    rax, rax", "mov     [rsp+108h+var_98], rax", "jz      loc_843F"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 5, -1, 0.02261904761904762, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000008090 default case", "mov     r9, [rsp+108h+var_B8]", "mov     edx, 5", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     [rsp+108h+var_F0], r10", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "jmp     loc_81B7"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 1, 3, -1, 0.12063492063492064, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, -1, 0.05396825396825397, ["mov     rax, [rsp+108h+var_70]; jumptable 0000000000008090 case 0", "xor     rax, fs:28h", "jnz     loc_843A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 2, 12, 2, 3, 6, -1, 0.0, ["mov     rbp, [rsp+108h+var_C8]; jumptable 0000000000008090 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8113; jumptable 0000000000008090 case 0"], ["mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 2, 14, 2, 3, 6, -1, 0.0, ["mov     r12, [rsp+108h+var_C0]; jumptable 0000000000008090 case 2", "mov     rbp, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8113; jumptable 0000000000008090 case 0"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 7, -1, 0.004761904761904762, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_8113; jumptable 0000000000008090 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 1, 36, 1, 0, 23, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_70], rax", "xor     eax, eax", "lea     rax, [rsp+108h+arg_0]", "mov     [rsp+108h+var_48], r8", "mov     [rsp+108h+var_40], r9", "mov     [rsp+108h+authors.gp_offset], 28h ; '('", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_68]", "mov     [rsp+108h+authors.reg_save_area], rax", "mov     stream, rax", "mov     rax, [rax+20h]", "test    rax, rax", "mov     [rsp+108h+var_C8], rax", "jz      loc_8428"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~stream,rax", "mov~rax,[rax+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 15, 0, 0, 6, -1, 0.0007936507936507937, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000008090 case 9", "mov     r9, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F0], r10", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [2, 0, 4, 1, 1, 9, 1, 1, 6, -1, 0.007936507936507936, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000008090 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 0D8h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 24, 0, 0, 6, 1, 1, 8, -1, 0.012698412698412698, ["lea     rax, [rsp+108h+arg_38]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+10h]", "test    rax, rax", "mov     [rsp+108h+var_88], rax", "jz      loc_8449"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 19, 0, 1, 8, 1, 2, 3, -1, 0.12063492063492064, ["mov     r8, version", "mov     version, package", "lea     package, aSS; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8028"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [22, 34, 50, 17, 37, 56, 1, 329, 0.03698, 17, 9], "succs": [[11, 23], [0, 11], [26], [32, 2, 4, 7, 21, 22, 26, 27, 28, 31], [29], [26], [5], [5], [24, 3], [11], [9, 35], [25, 36], [11, 13], [1, 11], [11], [11], [11], [11], [11], [12, 15], [26], [20], [20], [16, 10], [6], [8], [33, 34], [26], [26], [26], [19, 14], [6], [29], [], [], [17, 18], [8]], "fname": "version_etc", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[], [0]], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.2, ["mov     n, rbx; size", "call    _malloc", "test    rax, rax", "jnz     short loc_850C"], ["mov~n,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 1, 0.15000000000000002, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_850E"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 3, 1, 0.05, ["test    rbx, rbx", "jnz     short loc_850E"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 5, 1, 0, 7, 1, 1, 0, 1, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     rbx, rax", "seto    al", "test    rbx, rbx", "js      short loc_850E"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~rbx,rax", "seto~al", "test~rbx,rbx", "js~FOO"]]], "func_feature": [2, 4, 6, 0, 6, 8, 0, 19, 0.06667, 0, 1], "succs": [[2, 3], [0, 4], [3, 4], [], [], [1, 4]], "fname": "xnmalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.17857142857142855, ["test    rsi, rsi", "mov     rbx, rsi", "jnz     short loc_8547"], ["test~rsi,rsi", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 1, 1, 0.10714285714285714, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_8569"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 3, 0.05357142857142857, ["test    p, p", "jnz     short loc_8560"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 4, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 1, 0, 7, 1, 1, 0, 1, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_8569"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.05357142857142857, ["test    rbx, rbx", "jnz     short loc_8569"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, 2, 0.17857142857142855, ["mov     rsi, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_8559"], ["mov~rsi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 7, 9, 0, 9, 12, 0, 28, 0.06349, 0, 1], "succs": [[2, 7], [0, 4], [3, 7], [], [], [1, 4], [8, 4], [8, 6], []], "fname": "xnrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.030303030303030304, ["test    n, n", "jz      short loc_85F0"], ["test~n,n", "jz~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    p, p", "push    rbx", "mov     rcx, s", "mov     r8, [pn]", "jz      short loc_85C0"], ["test~p,p", "push~rbx", "mov~rcx,s", "mov~r8,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 4, 3, 0.09090909090909091, ["mov     [pn], n", "mov     rbx, rcx", "jmp     short loc_85AB"], ["mov~<TAG>,n", "mov~rbx,rcx", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 1, 0.09848484848484848, ["test    rax, rax", "jnz     short loc_8619"], ["test~rax,rax", "jnz~FOO"]], [0, 1, 7, 2, 0, 8, 3, 1, 2, 2, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "add     r8, n", "jmp     short loc_85C5"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "add~r8,n", "jmp~FOO"]], [1, 0, 5, 1, 0, 7, 1, 1, 2, 3, 0.06060606060606061, ["mov     rax, n", "shr     rax, 1", "lea     rbx, [rax+n+1]", "mov     [pn], n", "imul    n, s", "test    rbx, rbx", "jz      short loc_8610"], ["mov~rax,n", "shr~rax,0", "lea~rbx,[rax+0]", "mov~<TAG>,n", "imul~n,s", "test~rbx,rbx", "jz~FOO"]], [1, 0, 6, 1, 0, 5, 1, 0, 1, 1, 0.045454545454545456, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     loc_8619"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, 2, 0.13636363636363635, ["mov     pn, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_85BD"], ["mov~pn,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 1, 0, 7, 1, 1, 2, 1, 0.10606060606060606, ["mov     rax, s", "mul     n", "mov     s, rax", "seto    al", "test    rcx, rcx", "movzx   eax, al", "js      short loc_8619"], ["mov~rax,s", "mul~,n", "mov~s,rax", "seto~al", "test~rcx,rcx", "movzx~eax,al", "js~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 3, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.022727272727272728, ["test    rbx, rbx", "jnz     short loc_8619"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 12, 12, 0, 13, 18, 0, 52, 0.04545, 0, 5], "succs": [[8, 4], [0, 6], [7], [2, 10], [8], [9, 7], [10, 5], [11, 12], [10, 3], [], [], [10, 12], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_8635"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    rax, rax", "jnz     short loc_8633"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xcharalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_8653"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    n, n", "jnz     short loc_8655"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 26, 10, 0.04167, 0, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_8680"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_8691"], ["test~n,n", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_866E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_8688"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 2, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 7, 0, 7, 8, 42, 19, 0.04762, 0, 0], "succs": [[], [0, 2], [0, 6], [1, 4], [1, 5], [], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rax+rdx+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rax+0]"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 1, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_86F1"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "test    p, p", "mov     rax, [pn]", "jz      short loc_86E0"], ["sub~rsp,0", "test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 1, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_86C6"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 1, 0.16666666666666666, ["mov     [pn], rax", "mov     pn, rax; size", "call    _realloc", "test    rax, rax", "jz      short loc_86F1"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 0, 7, 9, 0, 23, 0.05238, 0, 2], "succs": [[5], [0, 4], [1, 3], [4, 5], [], [4, 6], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 1; size", "mov     rbx, s", "call    _calloc", "test    rax, rax", "jnz     short loc_8718"], ["push~rbx", "mov~esi,0", "mov~rbx,s", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.16666666666666666, ["test    s, s", "jnz     short loc_871A"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     s", "retn"], ["pop~s", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 11, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xzalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_8749"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_8749"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_8749"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    s, s", "jnz     short loc_8782"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 4, 1, 1, 9, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; size", "mov     rbx, s", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "jnz     short loc_876E"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "test~rax,rax", "jnz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 5, 1, 19, 0.05, 0, 2], "succs": [[], [0, 3], [], [2], [1, 3]], "fname": "xmemdup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, -1, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, rbx; n", "mov     rsi, string; src", "pop     rbx", "pop     string", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,rbx", "mov~rsi,string", "pop~rbx", "pop~string", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 1, 2, 10, 1, 3, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     rbp, string", "sub     rsp, 8", "call    _strlen", "lea     rbx, [rax+1]", "mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "jz      short loc_87C3"], ["push~rbp", "push~rbx", "mov~rbp,string", "sub~rsp,0", "call~FOO", "lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 3, 0, 18, 0.04167, 0, 2], "succs": [[], [0], [], [1, 2]], "fname": "xstrdup", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 20, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_888E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_8870"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_8870"], ["test~n,n", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_8870"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_88F8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_88CF"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_88D8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_8908"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_8955"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC_0; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_8960"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_89B0"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 7, 0, 2, 8, 1, 3, 0, 0, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_89DC"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 1, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_8A08"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_8A00"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_8A30"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 2, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_8A24"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_8A27"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]]], "func_feature": [7, 5, 14, 0, 10, 13, 1, 42, 0.05278, 0, 0], "succs": [[9, 7], [0, 7], [], [2], [], [4], [4, 5], [9, 6], [1, 3], [3]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_8A5A"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 0, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 0, 2, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_8A5A"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 3, 0, 0, 2, 1, 1, 0, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_8A68"], ["test~<TAG>,<STR>", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 1, 19, 0.05833, 0, 0], "succs": [[2, 4], [], [1], [1], [2, 5], [2, 3]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[1, 0, 2, 0, 2, 13, 0, 3, 0, 0, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_8AD2"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_8A8A"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_8A90"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_8A8A"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 0, 0, 3, 2, 0, 4, 1, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]]], "func_feature": [2, 2, 7, 0, 8, 10, 1, 29, 0.05655, 0, 0], "succs": [[6, 7], [0, 3], [3, 4], [5], [1, 3], [], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_8B36"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_8B20"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
