{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_197A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_211DB0", "jmp     cs:qword_211DB8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 66, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1980", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 85, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:faccessat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "faccessat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 30, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 75, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:printf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ferror_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:putc_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "putc_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fstatfs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getline_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getline", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 37, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1E20"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_1E20"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_1E70"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1E70"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_1EA3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_1EB8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 6, 0.0, 0, 0], "succs": [[]], "fname": "select_plural", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[4, 0, 8, 0, 3, 13, 0, 4, 0, 0, 0.26373626373626374, ["lea     rdi, msgid; \"\\n%s online help: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, package; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "mov     [rbp+lc_messages], rax", "cmp     [rbp+lc_messages], 0", "jz      short loc_208F"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 5, 0.2197802197802198, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_200B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 3, 5, 0.0, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "mov     [rbp+node], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 0, 1, 0, 4, 0, 0, 7, 0, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 2, 0, 2, 13, 1, 3, 6, 1, 0.13186813186813187, ["lea     rdi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+node]", "mov     rdx, rbx", "mov     rsi, rax", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "nop", "mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_211A"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rax", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 14, 0, 1, 8, 1, 2, 2, 6, 0.01098901098901099, ["mov     rax, [rbp+map_prog]", "mov     rdx, [rax]", "mov     rax, [rbp+program]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_1FB2"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 1, 6, 0.13736263736263737, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_1FE9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.08241758241758243, ["lea     rbx, aInvocation; \" invocation\"", "jmp     short loc_20DC"], ["lea~rbx,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.08241758241758243, ["lea     rbx, locale"], ["lea~rbx,<TAG>"]], [0, 0, 6, 0, 2, 6, 0, 2, 5, 4, 0.0, ["mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 4, 4, 0.038461538461538464, ["mov     rax, [rbp+lc_messages]", "mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_208F"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 14, 1, 0, 39, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+program], rdi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "lea     rax, unk_CFF0", "mov     [rbp+infomap.program], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rbp+infomap.node], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rbp+infomap.program+10h], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rbp+infomap.node+10h], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rbp+infomap.program+20h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+20h], rax", "lea     rax, aSha256sum; \"sha256sum\"", "mov     [rbp+infomap.program+30h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+30h], rax", "lea     rax, aSha384sum; \"sha384sum\"", "mov     [rbp+infomap.program+40h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+40h], rax", "lea     rax, aSha512sum; \"sha512sum\"", "mov     [rbp+infomap.program+50h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+50h], rax", "mov     [rbp+infomap.program+60h], 0", "mov     [rbp+infomap.node+60h], 0", "mov     rax, [rbp+program]", "mov     [rbp+node], rax", "lea     rax, [rbp+infomap]", "mov     [rbp+map_prog], rax", "jmp     short loc_1FBA"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 3, 7, 0.005494505494505495, ["add     [rbp+map_prog], 10h"], ["add~[rbp+0],0"]], [1, 0, 5, 0, 2, 12, 0, 3, 4, 3, 0.24725274725274726, ["lea     rdi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+program]", "mov     rdx, rax", "lea     rsi, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "mov     rax, [rbp+node]", "cmp     rax, [rbp+program]", "jnz     short loc_20D5"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "lea~rsi,<TAG>", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [12, 6, 21, 1, 15, 20, 1, 118, 0.08132, 20, 3], "succs": [[10, 13], [0, 2], [0], [], [3, 14], [1, 12], [1, 5], [4], [4], [13], [9, 13], [6], [6], [8, 7], []], "fname": "emit_ancillary_info", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 9, 1, 0, 5, 1, 1, 0, 0, 0.1111111111111111, ["mov     rax, [rbp+arg]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_2233"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 9, 1, 0, 11, 0, 1, 2, 4, 0.16666666666666666, ["mov     eax, [rbp+i]", "cdqe", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+arg], rax", "mov     rax, [rbp+arg]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Dh ; '-'", "jnz     loc_2233"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 4, 3, 0.09027777777777778, ["lea     rdx, [rbp+st]", "mov     rax, [rbp+arg]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    lstat", "test    eax, eax", "jnz     short loc_2233"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 1, 2, 0.3125, ["mov     eax, [rbp+i]", "cmp     eax, [rbp+argc]", "jl      loc_215F"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jl~FOO"]], [2, 0, 9, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 0C8h", "mov     [rbp+argc], edi", "mov     [rbp+argv], rsi", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "mov     [rbp+i], 1", "jmp     loc_223A"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 3, 3, 0.14583333333333331, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     r12", "pop     r13", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~r13", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["nop", "mov     rax, [rbp+var_28]", "xor     rax, fs:28h", "jz      short loc_2261"], ["nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [4, 0, 3, 0, 4, 24, 0, 5, 5, 2, 0.0625, ["mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     rax, [rbp+arg]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rax, [rbp+argv]", "mov     rbx, [rax]", "lea     rdi, aTrySSToRemoveT; \"Try '%s ./%s' to remove the file %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     short loc_224C"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,<TAG>", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 4, 13, 1, 10, 13, 1, 75, 0.10833, 3, 5], "succs": [[2, 5], [0, 5], [8, 5], [1, 7], [3], [3], [], [9, 6], [7], []], "fname": "diagnose_leading_hyphen", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 3, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 10h", "mov     [rbp+status], edi", "cmp     [rbp+status], 0", "jz      short loc_22B8"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 2, 11, 0, 3, 0, 1, 0.08333333333333333, ["mov     rbx, cs:program_name", "lea     rdi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_2422"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,<TAG>", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 23, 72, 0, 23, 0, 1, 0.08333333333333333, ["mov     rbx, cs:program_name", "lea     rdi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "call    _gettext", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aRemoveUnlinkTh; \"Remove (unlink) the FILE(s).\\n\\n  -f, -\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aIPromptOnceBef; \"  -I                    prompt once bef\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aOneFileSystemW; \"      --one-file-system  when removing \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aNoPreserveRoot_0; \"      --no-preserve-root  do not treat \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aRRRecursiveRem; \"  -r, -R, --recursive   remove director\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHelpDisplayThi; \"      --help     display this help and \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aVersionOutputV; \"      --version  output version informa\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aByDefaultRmDoe; \"\\nBy default, rm does not remove direct\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r12, cs:program_name", "mov     rbx, cs:program_name", "lea     rdi, aToRemoveAFileW; \"\\nTo remove a file whose name starts wi\"...", "call    _gettext", "mov     rdx, r12", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aNoteThatIfYouU; \"\\nNote that if you use rm to remove a f\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rdi, command_name; \"rm\"", "call    emit_ancillary_info"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r12,<TAG>", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,r12", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     eax, [rbp+status]", "mov     edi, eax; status", "call    _exit"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [26, 0, 28, 0, 4, 4, 4, 94, 0.04167, 16, 1], "succs": [[1, 2], [3], [3], []], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[11, 0, 0, 1, 1, 31, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+x], rdi", "mov     rax, [rbp+x]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+x]", "mov     dword ptr [rax+4], 4", "mov     rax, [rbp+x]", "mov     byte ptr [rax+8], 0", "mov     rax, [rbp+x]", "mov     byte ptr [rax+0Ah], 0", "mov     rax, [rbp+x]", "mov     byte ptr [rax+9], 0", "mov     rax, [rbp+x]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+x]", "mov     byte ptr [rax+18h], 0", "mov     edi, 0; fd", "call    _isatty", "test    eax, eax", "setnz   dl", "mov     rax, [rbp+x]", "mov     [rax+19h], dl", "mov     rax, [rbp+x]", "mov     byte ptr [rax+1Ah], 0", "mov     rax, [rbp+x]", "mov     byte ptr [rax+1Bh], 0", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~dl", "mov~rax,[rbp+0]", "mov~[rax+0],dl", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "nop", "leave", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 31, 0.0, 0, 1], "succs": [[]], "fname": "rm_option_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.020180180180180182, ["cmp     [rbp+status], 3", "jz      short loc_2A28"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 8, 0, 2, 5, 3, 0.043423423423423424, ["lea     rdx, [rbp+x]", "mov     rax, [rbp+file]", "mov     rsi, rdx; x", "mov     rdi, rax; file", "call    rm", "mov     [rbp+status], eax", "cmp     [rbp+status], 2", "jz      short loc_2A28"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 75, 0, 0, 3, 0, 1, 10, 8, 0.07855855855855856, ["mov     eax, [rbp+i]", "cmp     eax, 1", "jz      short loc_269A"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 1, 14, 0, 2, 9, 9, 0.02972972972972973, ["mov     rdx, cs:argmatch_die", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, interactive_types; vallist", "lea     rdx, interactive_args; arglist", "mov     rsi, rax; arg", "lea     rdi, context; \"--interactive\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, interactive_types", "mov     eax, [rdx+rax]", "mov     [rbp+i], eax", "jmp     short loc_267C"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 75, 0, 0, 1, 0, 0, 9, 9, 0.02972972972972973, ["mov     [rbp+i], 2"], ["mov~[rbp+0],0"]], [1, 0, 75, 0, 0, 2, 0, 1, 4, 7, 0.20477477477477476, ["cmp     eax, 81h", "jz      loc_26C0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 3, 8, 0.3108108108108108, ["cmp     eax, 69h ; 'i'", "jg      short loc_257E"], ["cmp~eax,0", "jg~FOO"]], [3, 0, 16, 0, 4, 15, 0, 4, 6, 5, 0.0, ["lea     rsi, arg; \"/\"", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "lea     rdi, aFailedToGetAtt; \"failed to get attributes of %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 17, 0, 1, 6, 1, 2, 5, 5, 0.008288288288288289, ["lea     rdi, dev_ino_buf_6127; root_d_i", "call    get_root_dev_ino", "mov     [rbp+x.root_dev_ino], rax", "mov     rax, [rbp+x.root_dev_ino]", "test    rax, rax", "jnz     short loc_290A"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [4, 0, 75, 0, 3, 13, 0, 3, 9, 7, 0.006486486486486486, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aUnrecognizedPr; \"unrecognized --preserve-root argument: \"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rax,<TAG>", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 75, 0, 1, 6, 1, 2, 8, 8, 0.014774774774774775, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "lea     rsi, aAll; \"all\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_274E"], ["mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 11, 8, 0.021981981981981983, ["cmp     eax, 2", "jz      short loc_26AB"], ["cmp~eax,0", "jz~FOO"]], [4, 1, 0, 2, 2, 19, 0, 2, 7, -1, 0.0, ["mov     rdx, cs:Version", "mov     rax, cs:stdout@@GLIBC_2_2_5", "sub     rsp, 8", "push    0", "lea     rcx, aJimMeyering; \"Jim Meyering\"", "push    rcx", "lea     rcx, aRichardMStallm; \"Richard M. Stallman\"", "push    rcx", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aPaulRubin; \"Paul Rubin\"", "mov     rcx, rdx; version", "lea     rdx, package; \"GNU coreutils\"", "lea     rsi, command_name; \"rm\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    version_etc", "add     rsp, 20h", "mov     edi, 0; status", "call    _exit"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "sub~rsp,0", "push~0", "lea~rcx,<TAG>", "push~rcx", "lea~rcx,<TAG>", "push~rcx", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "mov~edi,0", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 6, -1, 0.036756756756756756, ["cmp     eax, 0FFFFFF7Dh", "jz      loc_27B0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 75, 0, 0, 2, 1, 1, 12, 7, 0.013783783783783784, ["test    eax, eax", "jnz     short loc_26BB"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 5, 8, 0.19297297297297297, ["cmp     eax, 81h", "jg      short loc_25AA"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 8, 6, 0.0627027027027027, ["mov     [rbp+preserve_root], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 75, 0, 0, 3, 1, 1, 7, 7, 0.03963963963963964, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "test    rax, rax", "jz      short loc_278B"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 9, 7, 0.006486486486486486, ["mov     [rbp+x.preserve_all_root], 1", "jmp     short loc_278B"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 75, 0, 0, 4, 0, 1, 5, 6, 0.013063063063063063, ["mov     [rbp+x.interactive], 4", "mov     [rbp+x.ignore_missing_files], 0", "mov     [rbp+prompt_once], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 4, 7, 0.10423423423423424, ["cmp     eax, 49h ; 'I'", "jz      loc_2601"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 9, 6, 0.01882882882882883, ["mov     [rbp+x.stdin_tty], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 8, 7, 0.02153153153153153, ["cmp     eax, 84h", "jz      loc_2794"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 6, 7, 0.10576576576576577, ["cmp     eax, 76h ; 'v'", "jz      loc_279D"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 75, 0, 2, 7, 0, 2, 9, 7, 0.0, ["lea     rdi, aYouMayNotAbbre; \"you may not abbreviate the --no-preserv\"...", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 75, 2, 1, 12, 1, 2, 8, 7, 0.02063063063063063, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cdqe", "shl     rax, 3", "lea     rdx, [rax-8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "lea     rsi, aNoPreserveRoot; \"--no-preserve-root\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_2719"], ["mov~eax,<TAG>", "cdqe~", "shl~rax,0", "lea~rdx,[rax-8]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 75, 0, 0, 3, 0, 1, 13, 7, 0.0, ["mov     [rbp+x.interactive], 5", "mov     [rbp+prompt_once], 0", "jmp     short loc_26BB"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 9, 6, 0.0363963963963964, ["mov     [rbp+x.recursive], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 8, 7, 0.011531531531531532, ["cmp     eax, 52h ; 'R'", "jz      loc_2615"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 8, 7, 0.02252252252252252, ["cmp     eax, 72h ; 'r'", "jz      short loc_2615"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 6, 2, 0.005405405405405406, ["cmp     [rbp+status], 4", "setz    al", "movzx   eax, al"], ["cmp~[rbp+0],0", "setz~al", "movzx~eax,al"]], [1, 0, 5, 0, 0, 2, 0, 1, 7, 3, 0.010270270270270271, ["cmp     [rbp+status], 4", "jz      short loc_2A28"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 9, 6, 0.03216216216216216, ["mov     [rbp+preserve_root], 0", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 75, 0, 0, 2, 0, 1, 7, 8, 0.08558558558558559, ["cmp     eax, 80h", "jz      short loc_261E"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 7, 6, 0.018378378378378378, ["mov     [rbp+x.verbose], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 2, 7, 0, 2, 9, -1, 0.0, ["mov     rdx, [rbp+argv]", "mov     eax, [rbp+argc]", "mov     rsi, rdx; argv", "mov     edi, eax; argc", "call    diagnose_leading_hyphen", "mov     edi, 1; status", "call    usage"], ["mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.006126126126126126, ["jmp     loc_280E"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.0005405405405405405, ["jmp     loc_280E"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.0007207207207207207, ["jmp     loc_280E"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.0007207207207207207, ["jmp     loc_280E"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 4, 5, 0.016216216216216217, ["cmp     [rbp+preserve_root], 0", "jz      short loc_290A"], ["cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 75, 1, 7, 32, 1, 8, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 60h", "mov     [rbp+argc], edi", "mov     [rbp+argv], rsi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+preserve_root], 1", "mov     [rbp+prompt_once], 0", "mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; argv0", "call    set_program_name", "lea     rsi, locale; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rax, close_stdin", "mov     rdi, rax", "call    atexit", "lea     rax, [rbp+x]", "mov     rdi, rax; x", "call    rm_option_init", "call    priv_set_remove_linkdir", "jmp     loc_2829"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "call~FOO", "jmp~FOO"]], [0, 0, 75, 0, 0, 3, 1, 1, 8, 10, 0.06126126126126126, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "test    rax, rax", "jz      short loc_2675"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 75, 0, 0, 4, 0, 1, 11, 7, 0.05477477477477478, ["mov     [rbp+x.interactive], 4", "mov     [rbp+x.ignore_missing_files], 0", "mov     [rbp+prompt_once], 1", "jmp     short loc_26BB"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 0; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.0218018018018018, ["cmp     eax, 0FFFFFF7Eh", "jz      loc_27A6"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 6, 8, 0.08540540540540541, ["cmp     eax, 83h", "jz      loc_2722"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 10, 0, 2, 8, 0, 2, 7, 4, 0.010090090090090091, ["mov     rax, [rbp+n_files]", "mov     rdi, rax; n", "call    select_plural", "mov     rdx, rax; n", "lea     rsi, aSRemoveLuArgum_1; \"%s: remove %lu arguments? \"", "lea     rdi, aSRemoveLuArgum_2; \"%s: remove %lu argument? \"", "call    _ngettext", "mov     rsi, rax; format"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax"]], [0, 0, 12, 0, 0, 4, 1, 1, 6, 5, 0.036756756756756756, ["mov     rbx, cs:program_name", "movzx   eax, [rbp+x.recursive]", "test    al, al", "jz      short loc_298B"], ["mov~rbx,<TAG>", "movzx~eax,[rbp+0]", "test~al,al", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 3, 5, 0.12684684684684686, ["movzx   eax, [rbp+x.recursive]", "test    al, al", "jz      short loc_290A"], ["movzx~eax,[rbp+0]", "test~al,al", "jz~FOO"]], [4, 0, 0, 0, 3, 9, 0, 3, 4, -1, 0.0, ["lea     rdi, aMissingOperand; \"missing operand\"", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, 3, 0.03963963963963964, ["movzx   eax, [rbp+x.ignore_missing_files]", "test    al, al", "jz      short loc_2875"], ["movzx~eax,[rbp+0]", "test~al,al", "jz~FOO"]], [1, 0, 75, 0, 0, 3, 0, 1, 2, 7, 0.3171171171171171, ["mov     eax, [rbp+c]", "cmp     eax, 69h ; 'i'", "jz      loc_25ED"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 75, 0, 1, 10, 0, 2, 1, 5, 0.4972972972972973, ["mov     rsi, [rbp+argv]; argv", "mov     eax, [rbp+argc]", "mov     r8d, 0; longind", "lea     rcx, long_opts; longopts", "lea     rdx, shortopts; \"dfirvIR\"", "mov     edi, eax; argc", "call    _getopt_long", "mov     [rbp+c], eax", "cmp     [rbp+c], 0FFFFFFFFh", "jnz     loc_252C"], ["mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 2, 9, 0, 3, 7, 4, 0.010090090090090091, ["mov     rax, [rbp+n_files]", "mov     rdi, rax; n", "call    select_plural", "mov     rdx, rax; n", "lea     rsi, msgid2; \"%s: remove %lu arguments recursively? \"", "lea     rdi, msgid1; \"%s: remove %lu argument recursively? \"", "call    _ngettext", "mov     rsi, rax", "jmp     short loc_29B0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 7, 8, 0.043963963963963966, ["cmp     eax, 83h", "jl      loc_26C9"], ["cmp~eax,0", "jl~FOO"]], [1, 0, 15, 2, 0, 14, 0, 1, 4, 4, 0.10594594594594595, ["mov     eax, cs:optind@@GLIBC_2_2_5", "mov     edx, [rbp+argc]", "sub     edx, eax", "mov     eax, edx", "cdqe", "mov     [rbp+n_files], rax", "mov     eax, cs:optind@@GLIBC_2_2_5", "cdqe", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     [rbp+file], rax", "cmp     [rbp+prompt_once], 0", "jz      loc_29E1"], ["mov~eax,<TAG>", "mov~edx,[rbp+0]", "sub~edx,eax", "mov~eax,edx", "cdqe~", "mov~[rbp+0],rax", "mov~eax,<TAG>", "cdqe~", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.022342342342342343, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_2A46"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.024324324324324326, ["mov     eax, 0", "jmp     loc_2A32"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.002162162162162162, ["mov     eax, 0", "jmp     short loc_2A32"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6133; \"main\"", "mov     edx, 173h; line", "lea     rsi, file; \"src/rm.c\"", "lea     rdi, assertion; \"VALID_STATUS (status)\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 5, 6, 0.01, ["mov     [rbp+x.one_file_system], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 2, 4, 0.1781981981981982, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     [rbp+argc], eax", "jg      short loc_28A2"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jg~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 5, 5, 0.05297297297297297, ["movzx   eax, [rbp+x.recursive]", "test    al, al", "jnz     short loc_2955"], ["movzx~eax,[rbp+0]", "test~al,al", "jnz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 5, 8, 0.08936936936936937, ["cmp     eax, 49h ; 'I'", "jg      short loc_2566"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 6, 0, 0.0, ["lea     rsp, [rbp-10h]", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["lea~rsp,[rbp-10h]+0]", "pop~rbx", "pop~r12", "pop~rbp", "retn"]], [1, 0, 13, 0, 0, 2, 0, 0, 6, 4, 0.0014414414414414415, ["cmp     [rbp+n_files], 3", "jbe     loc_29E1"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 7, 6, 0.023063063063063063, ["mov     [rbp+x.remove_empty_directories], 1", "jmp     loc_2829"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 75, 0, 0, 4, 0, 1, 8, 6, 0.012432432432432432, ["mov     [rbp+x.interactive], 5", "mov     [rbp+x.ignore_missing_files], 1", "mov     [rbp+prompt_once], 0", "jmp     loc_2829"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 75, 0, 0, 4, 0, 1, 3, 6, 0.0045045045045045045, ["mov     [rbp+x.interactive], 3", "mov     [rbp+x.ignore_missing_files], 0", "mov     [rbp+prompt_once], 0", "jmp     loc_2829"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 75, 0, 0, 1, 0, 1, 12, 6, 0.11315315315315315, ["jmp     loc_2829"], ["jmp~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 6, 7, 0.050630630630630634, ["cmp     eax, 64h ; 'd'", "jz      short loc_25D0"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 9, 0, 2, 11, 2, 3, 8, 3, 0.014054054054054054, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, [rbp+n_files]", "mov     rcx, rdx", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "call    yesno", "xor     eax, 1", "test    al, al", "jz      short loc_29E1"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [3, 0, 75, 0, 0, 4, 0, 0, 12, 7, 0.006396396396396396, ["mov     [rbp+x.interactive], 3", "mov     [rbp+x.ignore_missing_files], 0", "mov     [rbp+prompt_once], 0", "nop"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "nop"]], [1, 0, 75, 0, 0, 2, 0, 1, 7, 7, 0.025765765765765766, ["cmp     eax, 66h ; 'f'", "jz      short loc_25D9"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [38, 14, 99, 1, 76, 108, 0, 340, 0.0486, 38, 7], "succs": [[30, 31], [0, 30], [43, 11], [2], [2], [61, 15], [20, 5], [56], [56, 7], [16], [9, 18], [73, 14], [], [12, 45], [26, 70], [46, 23], [53], [16, 10], [16], [53], [64, 19], [53], [21, 39], [33, 34], [32], [24, 32], [70], [53], [27, 37], [27, 38], [57], [60, 30], [53], [42, 29], [53], [], [35], [35], [35], [35], [8, 56], [53], [3, 4], [70], [], [36, 44], [17, 55], [72], [54, 47], [40, 56], [], [50, 58], [69, 6], [52, 62], [72], [25, 22], [1, 63], [65, 75], [57], [57], [], [53], [49, 51], [48, 66], [13, 71], [], [48, 1], [53], [53], [53], [53], [74, 67], [1, 59], [70], [28, 68], []], "fname": "main", "n_num": 76}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 10, 0, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file_name], rdi", "mov     rax, [rbp+file_name]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_2AA7"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 1, 1, 0, 1, 0.07777777777777778, ["and     eax, 1", "jmp     short loc_2AAC"], ["and~eax,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 2, 0.11111111111111112, ["mov     eax, 1", "jmp     short loc_2AA2"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 0, 2, 0.011111111111111112, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.011111111111111112, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 5, 1, 0, 6, 0, 1, 0, 3, 0.2111111111111111, ["mov     rax, [rbp+file_name]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+sep], al", "cmp     [rbp+sep], 0", "jz      short loc_2A96"], ["mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 4, 0.061111111111111116, ["mov     edx, 2", "jmp     short loc_2A7D"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 0, 4, 0.061111111111111116, ["mov     edx, 1"], ["mov~edx,0"]], [2, 0, 8, 1, 0, 5, 0, 1, 0, 5, 0.07777777777777778, ["mov     rax, [rbp+file_name]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_2A78"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 3, 0.05555555555555556, ["cmp     [rbp+sep], 2Fh ; '/'", "jnz     short loc_2A9D"], ["cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [0, 1, 7, 0, 11, 14, 2, 31, 0.06162, 0, 2], "succs": [[9, 4], [5], [1], [1], [5], [], [10, 2], [6], [6], [8, 7], [2, 3]], "fname": "dot_or_dotdot", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+dp]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [1, 0, 3, 0, 1, 6, 0, 2, 1, 0, 0.3333333333333333, ["mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _readdir", "mov     [rbp+dp], rax", "cmp     [rbp+dp], 0", "jz      short loc_2AE8"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 3, 1, 1, 7, 2, 2, 2, 0, 0.0, ["mov     rax, [rbp+dp]", "add     rax, 13h", "mov     rdi, rax; file_name", "call    dot_or_dotdot", "xor     eax, 1", "test    al, al", "jz      short loc_2ABA"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 1, 3, 1, 0, 4, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+dirp], rdi"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi"]]], "func_feature": [2, 2, 4, 0, 4, 5, 1, 20, 0.08333, 0, 2], "succs": [[], [0, 2], [0, 1], [1]], "fname": "readdir_ignoring_dot_and_dotdot", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 3, 0, 4, 14, 0, 5, 0, 0, 0.09523809523809523, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    readdir_ignoring_dot_and_dotdot", "mov     [rbp+dp], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _closedir", "cmp     [rbp+dp], 0", "jz      short loc_2B8D"], ["call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 1, 2, 0.09523809523809523, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _fdopendir", "mov     [rbp+dirp], rax", "cmp     [rbp+dirp], 0", "jnz     short loc_2B4E"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.023809523809523808, ["mov     eax, 0", "jmp     short locret_2B94"], ["mov~eax,0", "jmp~FOO"]], [4, 0, 7, 1, 1, 15, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fd_cwd], edi", "mov     [rbp+dir], rsi", "mov     rcx, [rbp+dir]", "mov     eax, [rbp+fd_cwd]", "mov     edx, 30900h; oflag", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    _openat", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_2B28"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 0", "jmp     short locret_2B94"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 5, 0, 2, 2, 1, 0.023809523809523808, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "mov     eax, 0", "jmp     short locret_2B94"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 0, 3, 1, 0.011904761904761904, ["cmp     [rbp+saved_errno], 0", "setz    al"], ["cmp~[rbp+0],0", "setz~al"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [7, 0, 12, 0, 8, 10, 2, 48, 0.03274, 0, 1], "succs": [[4, 6], [0, 5], [7], [1, 2], [7], [7], [7], []], "fname": "is_empty_dir", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.06666666666666667, ["mov     eax, 0", "jmp     short loc_2C1C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 6, 0, 1, 2, 0, 0.06666666666666667, ["mov     rax, [rbp+st]", "mov     rbx, [rax+8]", "call    ___errno_location", "mov     edx, ebx", "mov     [rax], edx", "mov     eax, 0FFFFFFFFh"], ["mov~rax,[rbp+0]", "mov~rbx,[rax+0]", "call~FOO", "mov~edx,ebx", "mov~<TAG>,edx", "mov~eax,0"]], [0, 0, 3, 0, 0, 4, 1, 1, 1, 0, 0.3, ["mov     rax, [rbp+st]", "mov     rax, [rax+30h]", "test    rax, rax", "js      short loc_2C06"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [1, 0, 4, 0, 1, 7, 0, 1, 2, 0, 0.0, ["mov     rax, [rbp+st]", "mov     qword ptr [rax+30h], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "mov     eax, [rax]", "movsxd  rdx, eax", "mov     rax, [rbp+st]", "mov     [rax+8], rdx"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "call~FOO", "mov~eax,<TAG>", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 5, 0, 1, 8, 1, 2, 1, 0, 0.03333333333333333, ["mov     ecx, [rbp+flag]; flag", "mov     rdx, [rbp+st]; stat_buf", "mov     rsi, [rbp+file]; filename", "mov     eax, [rbp+fd]", "mov     edi, eax; fildes", "call    fstatat", "test    eax, eax", "jz      short loc_2BF2"], ["mov~ecx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 6, 1, 0, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 28h", "mov     [rbp+fd], edi", "mov     [rbp+file], rsi", "mov     [rbp+st], rdx", "mov     [rbp+flag], ecx", "mov     rax, [rbp+st]", "mov     rax, [rax+30h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_2BF2"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],ecx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jnz~FOO"]]], "func_feature": [3, 2, 7, 0, 7, 9, 3, 43, 0.06667, 0, 2], "succs": [[], [0], [0], [1, 2], [3], [3, 4], [3, 5]], "fname": "cache_fstatat", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     qword ptr [rax+30h], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+st]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "cache_stat_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.00909090909090909, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_2CD7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 1, 8, 1, 2, 1, 2, 0.07272727272727272, ["mov     rdx, [rbp+buf]; st", "mov     rsi, [rbp+file]; file", "mov     eax, [rbp+fd_cwd]", "mov     ecx, 100h; flag", "mov     edi, eax; fd", "call    cache_fstatat", "test    eax, eax", "jz      short loc_2C82"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 4, 2, 0.07272727272727272, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 0Dh", "jnz     short loc_2CD2"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 1, 5, 0, 1, 8, 1, 2, 3, 2, 0.10909090909090909, ["mov     rsi, [rbp+file]; file", "mov     eax, [rbp+fd_cwd]", "mov     ecx, 200h; flag", "mov     edx, 2; type", "mov     edi, eax; fd", "call    _faccessat", "test    eax, eax", "jnz     short loc_2CBF"], ["mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,<STR>", "mov~edx,0", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short locret_2CD7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.004545454545454545, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [1, 1, 7, 0, 0, 5, 1, 1, 2, 2, 0.10909090909090909, ["mov     rax, [rbp+buf]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_2C9C"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 1, 11, 1, 1, 9, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd_cwd], edi", "mov     [rbp+file], rsi", "mov     [rbp+buf], rdx", "call    can_write_any_file", "test    al, al", "jz      short loc_2C60"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00909090909090909, ["mov     eax, 0", "jmp     short locret_2CD7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00909090909090909, ["mov     eax, 0", "jmp     short locret_2CD7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.00909090909090909, ["mov     eax, 0", "jmp     short locret_2CD7"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [4, 4, 14, 0, 12, 16, 1, 47, 0.03409, 0, 1], "succs": [[8], [0, 6], [4, 5], [2, 11], [8], [8], [10, 3], [1, 9], [], [8], [8], [8]], "fname": "write_protected_non_symlink", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 0, 3, 0, 3, 14, 0, 4, 0, 0, 0.0033898305084745766, ["lea     rdi, aCannotRemoveS; \"cannot remove %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+quoted_name]", "mov     rcx, rdx", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 4", "jmp     short loc_3183"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 11, 0, 1, 8, 1, 2, 12, 3, 0.08855932203389831, ["mov     rdx, [rbp+sbuf]; st", "mov     rsi, [rbp+filename]; file", "mov     eax, [rbp+fd_cwd]", "mov     ecx, 100h; flag", "mov     edi, eax; fd", "call    cache_fstatat", "test    eax, eax", "jz      short loc_3105"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 50, 0, 0, 4, 1, 1, 4, 3, 0.14124293785310735, ["mov     rax, [rbp+ent]", "mov     rax, [rax+20h]", "test    rax, rax", "jz      short loc_2E14"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [3, 0, 55, 0, 0, 5, 0, 1, 3, 4, 0.07768361581920905, ["mov     [rbp+dirent_type], eax", "mov     [rbp+write_protected], 0", "mov     [rbp+is_empty], 0", "cmp     [rbp+is_empty_p], 0", "jz      short loc_2DFA"], ["mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 51, 0, 0, 2, 0, 0, 6, 4, 0.043220338983050846, ["mov     rax, [rbp+is_empty_p]", "mov     [rax], edx"], ["mov~rax,[rbp+0]", "mov~<TAG>,edx"]], [1, 1, 35, 0, 0, 5, 1, 1, 11, 6, 0.01864406779661017, ["mov     rax, [rbp+sbuf]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_2F18"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 37, 0, 1, 8, 1, 2, 10, 6, 0.029661016949152543, ["mov     rdx, [rbp+sbuf]; st", "mov     rsi, [rbp+filename]; file", "mov     eax, [rbp+fd_cwd]", "mov     ecx, 100h; flag", "mov     edi, eax; fd", "call    cache_fstatat", "test    eax, eax", "jnz     short loc_2F3A"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.009322033898305085, ["mov     eax, 3", "jmp     loc_3183"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 58, 0, 1, 7, 0, 2, 1, 6, 0.0327683615819209, ["lea     rax, [rbp+st]", "mov     [rbp+sbuf], rax", "mov     rax, [rbp+sbuf]", "mov     rdi, rax; st", "call    cache_stat_init", "cmp     [rbp+is_dir], 0", "jz      short loc_2D99"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 60, 1, 0, 26, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 110h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     eax, edx", "mov     [rbp+x], rcx", "mov     [rbp+mode], r8d", "mov     [rbp+is_empty_p], r9", "mov     [rbp+is_dir], al", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "mov     [rbp+fd_cwd], eax", "mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     [rbp+full_name], rax", "mov     rax, [rbp+ent]", "mov     rax, [rax+30h]", "mov     [rbp+filename], rax", "cmp     [rbp+is_empty_p], 0", "jz      short loc_2D6C"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 0, 1, 7, 0.0, ["mov     rax, [rbp+is_empty_p]", "mov     dword ptr [rax], 2"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, 1, 0.0327683615819209, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_3197"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 25, 0, 0, 5, 2, 1, 11, 5, 0.0327683615819209, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+9]", "xor     eax, 1", "test    al, al", "jz      short loc_2FCE"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 30, 0, 0, 3, 0, 1, 10, 5, 0.0711864406779661, ["mov     eax, [rbp+dirent_type]", "cmp     eax, 4", "jz      short loc_2F83"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 12, 5, 0.004519774011299435, ["mov     [rbp+dirent_type], 0Ah", "jmp     short loc_2F51"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 2, 5, 0.023728813559322035, ["mov     eax, 4", "jmp     short loc_2D9E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 1, 0, 0, 2, 5, 0.023728813559322035, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 42, 0, 2, 10, 0, 2, 9, 5, 0.0, ["mov     rdx, [rbp+sbuf]; buf", "mov     rcx, [rbp+filename]", "mov     eax, [rbp+fd_cwd]", "mov     rsi, rcx; file", "mov     edi, eax; fd_cwd", "call    write_protected_non_symlink", "mov     [rbp+write_protected], eax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+wp_errno], eax"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 0, 43, 0, 0, 2, 0, 1, 8, 5, 0.01016949152542373, ["cmp     [rbp+dirent_type], 0Ah", "jz      short loc_2EA0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 48, 0, 0, 4, 0, 1, 5, 3, 0.1398305084745763, ["mov     rax, [rbp+x]", "mov     eax, [rax+4]", "cmp     eax, 5", "jnz     short loc_2E2D"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 7, 0, 0.0, ["add     rsp, 110h", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~rbp", "retn"]], [1, 0, 24, 0, 0, 5, 2, 1, 12, 6, 0.01694915254237288, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+0Ah]", "xor     eax, 1", "test    al, al", "jnz     short loc_2FB5"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 7, 4, 0.18672316384180793, ["cmp     [rbp+write_protected], 0", "jnz     short loc_2EBC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 46, 0, 0, 6, 2, 1, 6, 5, 0.14576271186440679, ["mov     [rbp+wp_errno], 0", "mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax]", "xor     eax, 1", "test    al, al", "jz      short loc_2EA0"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 44, 0, 0, 4, 1, 1, 8, 5, 0.005932203389830509, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+19h]", "test    al, al", "jz      short loc_2EA0"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0008474576271186442, ["mov     eax, 2", "jmp     loc_3183"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 3, 0, 2, 13, 0, 3, 11, 2, 0.01440677966101695, ["lea     rdi, aCannotRemoveS; \"cannot remove %s\"", "call    _gettext", "mov     rsi, rax", "mov     rdx, [rbp+quoted_name]", "mov     eax, [rbp+wp_errno]", "mov     rcx, rdx", "mov     rdx, rsi; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 4", "jmp     loc_3183"], ["lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rsi", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [2, 0, 20, 0, 1, 7, 0, 1, 10, 3, 0.18587570621468927, ["mov     rax, [rbp+full_name]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+quoted_name], rax", "cmp     [rbp+write_protected], 0", "jns     short loc_3030"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 1, 33, 0, 0, 5, 1, 1, 12, 5, 0.011016949152542373, ["mov     rax, [rbp+sbuf]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_2F51"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 23, 0, 0, 4, 2, 1, 13, 5, 0.0031073446327683617, ["movzx   eax, [rbp+is_empty]", "xor     eax, 1", "test    al, al", "jz      short loc_2FCE"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 40, 0, 0, 4, 0, 1, 8, 3, 0.01016949152542373, ["mov     rax, [rbp+x]", "mov     eax, [rax+4]", "cmp     eax, 3", "jnz     loc_317E"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.1556497175141243, ["cmp     [rbp+dirent_type], 4", "jnz     short loc_30A6"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mov     [rbp+dirent_type], 4", "jmp     short loc_2F51"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 12, 4, 0.05508474576271186, ["cmp     [rbp+mode], 2", "jnz     short loc_30A6"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 8, 5, 0.18785310734463279, ["cmp     [rbp+write_protected], 0", "js      loc_2F51"], ["cmp~[rbp+0],0", "js~FOO"]], [0, 0, 7, 0, 1, 3, 0, 1, 14, 5, 0.021398305084745762, ["lea     rdi, aSRemoveSS; \"%s: remove %s %s? \"", "call    _gettext", "mov     rsi, rax; format"], ["lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax"]], [1, 0, 9, 0, 1, 7, 0, 2, 13, 6, 0.06454802259887006, ["mov     rax, [rbp+sbuf]", "mov     rdi, rax; st", "call    file_type", "mov     r12, rax", "mov     rbx, cs:program_name", "cmp     [rbp+write_protected], 0", "jz      short loc_3138"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~r12,rax", "mov~rbx,<TAG>", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 1, 4, 0, 2, 14, 5, 0.021398305084745762, ["lea     rdi, aSRemoveWritePr; \"%s: remove write-protected %s %s? \"", "call    _gettext", "mov     rsi, rax", "jmp     short loc_3147"], ["lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 16, 4, 0.006355932203389831, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, [rbp+quoted_name]", "mov     rcx, rdx", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_316B"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 7, 0, 1, 4, 0, 2, 15, 5, 0.007415254237288136, ["lea     rdi, aSDescendIntoWr; \"%s: descend into write-protected direct\"...", "call    _gettext", "mov     rsi, rax", "jmp     short loc_3080"], ["lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [0, 0, 7, 0, 1, 3, 0, 1, 15, 5, 0.007415254237288136, ["lea     rdi, aSDescendIntoDi; \"%s: descend into directory %s? \"", "call    _gettext", "mov     rsi, rax; format"], ["lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax"]], [1, 0, 16, 0, 0, 4, 2, 1, 13, 4, 0.04562146892655367, ["movzx   eax, [rbp+is_empty]", "xor     eax, 1", "test    al, al", "jz      short loc_30A6"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 22, 0, 0, 3, 0, 1, 13, 5, 0.0031073446327683617, ["mov     [rbp+write_protected], 0FFFFFFFFh", "mov     [rbp+wp_errno], 15h", "jmp     short loc_2FCE"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 32, 0, 1, 4, 0, 1, 11, 5, 0.00903954802259887, ["mov     [rbp+write_protected], 0FFFFFFFFh", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+wp_errno], eax"], ["mov~[rbp+0],0", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 21, 0, 0, 2, 0, 1, 13, 4, 0.005084745762711865, ["nop", "jmp     short loc_2FCF"], ["nop", "jmp~FOO"]], [1, 0, 23, 0, 0, 4, 0, 1, 12, 3, 0.017796610169491526, ["mov     rax, [rbp+x]", "mov     eax, [rax+4]", "cmp     eax, 3", "jz      short loc_2FCB"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 12, 4, 0.023728813559322035, ["nop"], ["nop"]], [1, 0, 38, 0, 0, 2, 0, 1, 9, 5, 0.03389830508474576, ["cmp     [rbp+dirent_type], 0", "jnz     short loc_2F51"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 9, 4, 0.21497175141242938, ["cmp     [rbp+write_protected], 0", "js      short loc_2FCF"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 45, 0, 0, 4, 0, 1, 7, 6, 0.011016949152542373, ["mov     rax, [rbp+x]", "mov     eax, [rax+4]", "cmp     eax, 3", "jz      short loc_2E66"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 14, 6, 0.036016949152542374, ["mov     rbx, cs:program_name", "cmp     [rbp+write_protected], 0", "jz      short loc_3071"], ["mov~rbx,<TAG>", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.0016949152542372883, ["mov     eax, 2", "jmp     loc_3183"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.0038135593220338985, ["mov     eax, 3", "jmp     short loc_3183"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 9, 2, 0.009745762711864408, ["mov     eax, 2"], ["mov~eax,0"]], [1, 0, 54, 0, 1, 8, 0, 2, 4, 6, 0.005084745762711865, ["mov     rdx, [rbp+filename]", "mov     eax, [rbp+fd_cwd]", "mov     rsi, rdx; dir", "mov     edi, eax; fd_cwd", "call    is_empty_dir", "mov     [rbp+is_empty], al", "cmp     [rbp+is_empty], 0", "jz      short loc_2DEC"], ["mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 1, 15, 4, 0.03403954802259887, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, [rbp+quoted_name]", "mov     r8, rdx", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~r8,rdx", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 11, 4, 0.030508474576271188, ["cmp     eax, 0Ah", "jnz     short loc_2FCF"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 5, 5, 0.008192090395480226, ["mov     edx, 4", "jmp     short loc_2DF1"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 52, 0, 0, 1, 0, 0, 5, 5, 0.008192090395480226, ["mov     edx, 3"], ["mov~edx,0"]], [1, 0, 5, 0, 1, 4, 2, 2, 16, 3, 0.029661016949152543, ["call    yesno", "xor     eax, 1", "test    al, al", "jz      short loc_317E"], ["call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]]], "func_feature": [22, 20, 69, 1, 61, 92, 2, 269, 0.03971, 8, 2], "succs": [[12], [0, 37], [20, 7], [2, 55], [2], [29, 15], [44, 5], [12], [16, 17], [8, 10], [8], [], [11, 21], [22, 47], [57, 13], [49], [3], [3], [23], [18, 23], [24, 26], [], [43, 30], [35, 31], [50, 23], [19, 23], [12], [12], [32, 27], [33, 49], [43, 47], [35, 54], [1, 34], [49], [1, 42], [48, 49], [56], [36, 38], [56], [60], [39], [39], [1, 51], [47], [49], [28], [52, 45], [28], [49, 6], [28, 14], [25, 19], [40, 41], [12], [12], [12], [58, 59], [60], [28, 46], [4], [4], [53, 54]], "fname": "prompt", "n_num": 61}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.07142857142857142, ["cmp     eax, 16h", "jz      short loc_31C8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 3, 0.08928571428571427, ["cmp     eax, 14h", "jg      short loc_31BE"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.03571428571428571, ["cmp     eax, 54h ; 'T'", "jnz     short loc_31CF"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08035714285714285, ["mov     eax, 1", "jmp     short loc_31D4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+errnum], edi", "mov     eax, [rbp+errnum]", "cmp     eax, 14h", "jz      short loc_31C8"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     eax, 2", "jz      short loc_31C8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.026785714285714284, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.03571428571428571, ["jmp     short loc_31CF"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 7, 0, 9, 13, 1, 20, 0.04563, 0, 0], "succs": [[2, 3], [0, 5], [3, 6], [8], [1, 3], [3, 7], [8], [6], []], "fname": "nonexistent_file_errno", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "leave", "retn"], ["and~eax,0", "leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.041666666666666664, ["mov     eax, 1", "jmp     short loc_320A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 3, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+errnum]", "mov     edi, eax; errnum", "call    nonexistent_file_errno", "test    al, al", "jz      short loc_3205"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 4, 1, 0, 9, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+x], rdi", "mov     [rbp+errnum], esi", "mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_3205"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]]], "func_feature": [1, 3, 4, 0, 5, 6, 1, 20, 0.05, 0, 1], "succs": [[], [0], [0], [1, 2], [2, 3]], "fname": "ignorable_missing", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rcx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     edx, 4; instr", "mov     rsi, rcx; p", "mov     rdi, rax; sp_0", "call    rpl_fts_set", "mov     rax, [rbp+fts]", "mov     rdi, rax", "call    rpl_fts_read", "mov     [rbp+__x], rax", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "nop", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 8, 18, 0.0, 0, 1], "succs": [[]], "fname": "fts_skip_tree", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 6, 0, 0, 5, 0, 0, 0, 0, 0.06666666666666667, ["mov     rax, [rbp+p]", "mov     qword ptr [rax+20h], 1", "mov     rax, [rbp+p]", "mov     rax, [rax+8]", "mov     [rbp+p], rax"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 6, 0, 0, 4, 1, 1, 2, 2, 0.16666666666666666, ["mov     rax, [rbp+p]", "mov     rax, [rax+20h]", "test    rax, rax", "jnz     short loc_3294"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 0, 1, 2, 0.3333333333333333, ["mov     rax, [rbp+p]", "mov     rax, [rax+58h]", "test    rax, rax", "jns     short loc_3260"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jns~FOO"]], [0, 0, 6, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ent], rdi", "mov     rax, [rbp+ent]", "mov     rax, [rax+8]", "mov     [rbp+p], rax", "jmp     short loc_3285"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 1, 0.1, ["jmp     short loc_3295"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.03333333333333333, ["nop"], ["nop"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]]], "func_feature": [0, 2, 3, 0, 7, 8, 4, 25, 0.1, 0, 0], "succs": [[2], [0, 5], [1, 4], [2], [6], [6], []], "fname": "mark_ancestor_dirs", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 17, 0, 1, 4, 0, 2, 0, 0, 0.07977207977207977, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 1Eh", "jnz     short loc_33CA"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 24, 0, 1, 11, 1, 2, 2, 4, 0.10256410256410257, ["mov     [rbp+flag], eax", "mov     rax, [rbp+ent]", "mov     rcx, [rax+30h]", "mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "mov     edx, [rbp+flag]; flag", "mov     rsi, rcx; name", "mov     edi, eax; fd", "call    _unlinkat", "test    eax, eax", "jnz     short loc_337D"], ["mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 10, 0, 1, 4, 0, 2, 6, 5, 0.08547008547008547, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 27h ; '''", "jz      short loc_3431"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 0, 1, 5, 3, 0.10256410256410257, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 4", "jnz     short loc_3463"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jnz~FOO"]], [0, 1, 25, 0, 0, 2, 0, 1, 1, 5, 0.017806267806267807, ["mov     eax, 200h", "jmp     short loc_32E7"], ["mov~eax,<STR>", "jmp~FOO"]], [1, 0, 25, 0, 0, 1, 0, 0, 1, 5, 0.017806267806267807, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 9, 0, 1, 4, 0, 2, 7, 5, 0.03133903133903134, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 15h", "jz      short loc_3431"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 3, 0.045584045584045586, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+1Ah]", "test    al, al", "jz      short loc_3373"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 9, 3, 0.007597340930674264, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 11h", "jnz     short loc_3463"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 1, 4, 0, 2, 8, 4, 0.01899335232668566, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 14h", "jz      short loc_3431"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 16, 0, 1, 10, 1, 2, 4, 5, 0.014245014245014245, ["mov     rax, [rbp+ent]", "mov     rcx, [rax+30h]", "mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "lea     rdx, [rbp+st]; st", "mov     rsi, rcx; name", "mov     edi, eax; fd", "call    lstatat", "test    eax, eax", "jz      short loc_33BF"], ["mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 6, 0, 0.0, ["add     rsp, 0D0h", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.07122507122507123, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_34D3"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [4, 0, 3, 0, 5, 21, 0, 5, 6, 2, 0.03418803418803419, ["mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "lea     rdi, aCannotRemoveS; \"cannot remove %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rax, [rbp+ent]", "mov     rdi, rax; ent", "call    mark_ancestor_dirs", "mov     eax, 4"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [1, 0, 5, 0, 0, 4, 0, 1, 8, 3, 0.007597340930674264, ["mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "cmp     eax, 0Dh", "jnz     short loc_3463"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 0, 1, 8, 3, 0.007597340930674264, ["call    ___errno_location", "mov     rdx, rax", "mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "mov     [rdx], eax"], ["call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~<TAG>,eax"]], [1, 0, 15, 0, 1, 4, 0, 2, 5, 4, 0.009971509971509971, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 2", "jz      short loc_33CA"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 1, 7, 4, 0.04938271604938271, ["mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "cmp     eax, 1", "jz      short loc_344F"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 14, 0, 1, 2, 0, 1, 5, 4, 0.009971509971509971, ["call    ___errno_location", "mov     dword ptr [rax], 1Eh"], ["call~FOO", "mov~<TAG>,0"]], [2, 0, 7, 0, 1, 8, 0, 2, 4, 5, 0.021367521367521368, ["mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "cmp     [rbp+is_dir], 0", "jz      short loc_3357"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.038461538461538464, ["mov     eax, 2", "jmp     loc_34BF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.021367521367521368, ["mov     eax, 2", "jmp     loc_34BF"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 5, 0, 1, 3, 0, 2, 5, 4, 0.007122507122507123, ["lea     rdi, aRemovedDirecto; \"removed directory %s\\n\"", "call    _gettext", "jmp     short loc_3363"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 27, 1, 0, 15, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 0D0h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     [rbp+x], rdx", "mov     eax, ecx", "mov     [rbp+is_dir], al", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "cmp     [rbp+is_dir], 0", "jz      short loc_32E2"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~eax,ecx", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 5, 4, 0.007122507122507123, ["lea     rdi, aRemovedS; \"removed %s\\n\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]], [0, 0, 13, 0, 2, 8, 1, 3, 4, 3, 0.13105413105413105, ["call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+x]", "mov     esi, edx; errnum", "mov     rdi, rax; x", "call    ignorable_missing", "test    al, al", "jz      short loc_33F0"], ["call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 6, 3, 0.017094017094017096, ["mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf"], ["mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO"]]], "func_feature": [22, 6, 42, 1, 28, 42, 2, 145, 0.03419, 4, 2], "succs": [[10, 26], [0, 7], [17, 6], [2, 13], [1], [1], [17, 9], [19, 20], [17, 13], [8, 17], [16, 18], [], [11, 22], [12], [13, 15], [13], [18, 26], [14, 15], [26], [25, 23], [12], [12], [], [27], [4, 5], [27], [3, 21], [20]], "fname": "excise", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 17, 0, 0, 4, 1, 1, 0, 0, 0.042352941176470586, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+18h]", "test    al, al", "jz      loc_3A0E"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 5, 6, 0.04352941176470588, ["mov     rax, [rbp+x]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      loc_3873"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 23, 0, 0, 7, 0, 1, 6, 6, 0.01568627450980392, ["mov     rax, [rbp+ent]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+x]", "mov     rax, [rax+10h]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     loc_3873"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 22, 0, 0, 7, 0, 1, 7, 5, 0.014901960784313726, ["mov     rax, [rbp+ent]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+x]", "mov     rax, [rax+10h]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     loc_3873"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [5, 0, 3, 0, 4, 19, 0, 5, 6, 2, 0.00392156862745098, ["mov     rax, [rbp+ent]", "mov     rdi, rax; ent", "call    mark_ancestor_dirs", "mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 4", "jmp     loc_3D6D"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 6, 0, 1, 5, 3, 0.004705882352941176, ["mov     rax, [rbp+ent]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+fts]", "mov     rax, [rax+18h]", "cmp     rdx, rax", "jz      short loc_3B87"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 4, 2, 1, 10, 3, 0.018431372549019606, ["movzx   eax, [rbp+failed]", "xor     eax, 1", "test    al, al", "jz      short loc_39EB"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 1, 5, 0, 2, 9, 4, 0.032549019607843135, ["mov     rax, [rbp+parent]", "mov     rdi, rax; ptr", "call    free", "cmp     [rbp+failed], 0", "jnz     short loc_3979"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 5, 0, 1, 10, 4, 0.009411764705882352, ["mov     rax, [rbp+fts]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+statbuf.st_dev]", "cmp     rdx, rax", "jz      loc_3A0E"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 8, 4, 0.013725490196078431, ["mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "lea     rsi, off_DC53; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_37CB"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.003333333333333333, ["mov     eax, [rbp+s_0]", "jmp     loc_3D6D"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [4, 0, 5, 0, 1, 13, 1, 2, 5, 3, 0.013333333333333332, ["mov     [rbp+is_dir], al", "and     [rbp+is_dir], 1", "movzx   edx, [rbp+is_dir]; is_dir", "mov     rcx, [rbp+x]; x", "mov     rsi, [rbp+ent]; ent", "mov     rax, [rbp+fts]", "mov     r9d, 0; is_empty_p", "mov     r8d, 3; mode", "mov     rdi, rax; fts", "call    prompt", "mov     [rbp+s_0], eax", "cmp     [rbp+s_0], 2", "jz      short loc_3C0C"], ["mov~[rbp+0],al", "and~[rbp+0],0", "movzx~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9d,0", "mov~r8d,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [10, 0, 3, 0, 6, 34, 0, 7, 5, 2, 0.00392156862745098, ["mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rdx, rax; arg", "mov     esi, 4; s", "mov     edi, 2; n", "call    quotearg_n_style", "mov     r13, rax", "lea     rdx, base; \"..\"", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "lea     rdx, off_DC1B; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbx, rax", "lea     rdi, aRefusingToRemo; \"refusing to remove %s or %s directory: \"...", "call    _gettext", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree", "mov     eax, 4", "jmp     loc_3D6D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r13,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 26, 0, 2, 8, 1, 3, 4, 3, 0.04274509803921568, ["mov     rax, [rbp+ent]", "mov     rax, [rax+30h]", "mov     rdi, rax; name", "call    last_component", "mov     rdi, rax; file_name", "call    dot_or_dotdot", "test    al, al", "jz      loc_370E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 4, 0, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     r12", "pop     r13", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~r13", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.03764705882352941, ["mov     rcx, [rbp+var_28]", "xor     rcx, fs:28h", "jz      short loc_3D81"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 4, 4, 0.004705882352941176, ["mov     rax, [rbp+ent]", "mov     rax, [rax+58h]", "test    rax, rax", "jle     short loc_3B87"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jle~FOO"]], [0, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.00392156862745098, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+8]", "test    al, al", "jz      loc_3B87"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 3, 5, 0.014901960784313726, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 6", "jz      short loc_3BA9"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 14, 0, 0, 4, 0, 1, 2, 6, 0.008627450980392156, ["mov     rax, [rbp+ent]; jumptable 000000000000354B cases 3,4,6,8,10-13", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 6", "jnz     loc_3B87"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 6, 0, 2, 12, 0, 2, 6, 4, 0.0, ["mov     rdx, [rbp+x]; x", "mov     rsi, [rbp+ent]; ent", "mov     rax, [rbp+fts]", "mov     ecx, 1; is_dir", "mov     rdi, rax; fts", "call    excise", "mov     [rbp+s], eax", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 5, 4, 0.006666666666666666, ["mov     eax, [rbp+is_empty_directory]", "cmp     eax, 4", "jnz     short loc_3A9E"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 32, 0, 1, 10, 2, 2, 4, 5, 0.00980392156862745, ["mov     rax, [rbp+ent]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+fts]", "mov     eax, [rax+2Ch]", "mov     rsi, rdx; dir", "mov     edi, eax; fd_cwd", "call    is_empty_dir", "xor     eax, 1", "test    al, al", "jz      loc_3636"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 33, 0, 0, 5, 2, 1, 3, 5, 0.0058823529411764705, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+0Ah]", "xor     eax, 1", "test    al, al", "jnz     short loc_359F"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 1, 7, 0, 2, 6, 2, 0.003333333333333333, ["movzx   ecx, [rbp+is_dir]; is_dir", "mov     rdx, [rbp+x]; x", "mov     rsi, [rbp+ent]; ent", "mov     rax, [rbp+fts]", "mov     rdi, rax; fts", "call    excise", "jmp     loc_3D6D"], ["movzx~ecx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 51, 1, 0, 17, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 0E8h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     [rbp+x], rdx", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "movzx   eax, ax", "cmp     eax, 0Dh; switch 14 cases", "ja      loc_3D0B; jumptable 000000000000354B default case"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "movzx~eax,ax", "cmp~eax,0", "ja~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 3, 0.021176470588235293, ["cmp     [rbp+s], 2", "jz      short loc_3ACF"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 8, 0, 1, 13, 0, 2, 4, 4, 0.03411764705882353, ["lea     rcx, [rbp+is_empty_directory]", "mov     rdx, [rbp+x]", "mov     rsi, [rbp+ent]; ent", "mov     rax, [rbp+fts]", "mov     r9, rcx; is_empty_p", "mov     r8d, 2; mode", "mov     rcx, rdx; x", "mov     edx, 1; is_dir", "mov     rdi, rax; fts", "call    prompt", "mov     [rbp+s], eax", "cmp     [rbp+s], 2", "jnz     short loc_3A9E"], ["lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,rcx", "mov~r8d,0", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 4, 5, 0.0027450980392156863, ["mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 4", "jnz     short loc_3BB0"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jnz~FOO"]], [7, 0, 4, 0, 4, 21, 0, 4, 9, 3, 0.0037254901960784314, ["lea     rdx, off_DC53; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rdx, rax; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbx, rax", "lea     rdi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "call    _gettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 4, 4, 0.00784313725490196, ["mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+0Ah]", "test    al, al", "jz      short loc_35B5"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, 4, 0.011372549019607842, ["mov     eax, 1", "jmp     short loc_3BB5"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 5, 4, 0.001176470588235294, ["mov     eax, 0"], ["mov~eax,0"]], [4, 0, 3, 0, 5, 26, 0, 6, 6, 2, 0.005490196078431373, ["mov     [rbp+err], eax", "mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aCannotRemoveS; \"cannot remove %s\"", "call    _gettext", "mov     rdx, rax; format", "mov     eax, [rbp+err]", "mov     rcx, rbx", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rax, [rbp+ent]", "mov     rdi, rax; ent", "call    mark_ancestor_dirs", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree", "mov     eax, 4", "jmp     loc_3D6D"], ["mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~rcx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 3, 0.0027450980392156863, ["mov     eax, 27h ; '''", "jmp     short loc_35BA"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 5, 3, 0.0027450980392156863, ["mov     eax, 15h"], ["mov~eax,0"]], [1, 0, 3, 0, 1, 7, 0, 2, 11, 2, 0.008235294117647058, ["mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree", "mov     eax, 4", "jmp     loc_3D6D"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [7, 0, 4, 0, 5, 21, 0, 5, 11, 3, 0.0, ["mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "lea     rdi, aAndPreserveRoo; \"and --preserve-root=all is in effect\"", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [3, 0, 16, 0, 1, 10, 0, 2, 7, 6, 0.030196078431372547, ["mov     [rbp+failed], 0", "mov     rax, [rbp+ent]", "mov     rax, [rax+30h]", "mov     edx, 0; base_in_result", "lea     rsi, base; \"..\"", "mov     rdi, rax; dir", "call    file_name_concat", "mov     [rbp+parent], rax", "cmp     [rbp+parent], 0", "jz      short loc_38DA"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [8, 0, 14, 0, 4, 23, 0, 4, 8, 5, 0.013529411764705882, ["mov     rax, [rbp+ent]", "mov     rax, [rax+30h]", "mov     rdx, rax; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rax, [rbp+parent]", "mov     rdx, rax; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbx, rax", "lea     rdi, aFailedToStatSS; \"failed to stat %s: skipping %s\"", "call    _gettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+failed], 1"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 15, 0, 1, 7, 1, 2, 8, 5, 0.013529411764705882, ["lea     rdx, [rbp+statbuf]", "mov     rax, [rbp+parent]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    lstat", "test    eax, eax", "jz      short loc_3946"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 3, 4, 0.04862745098039215, ["mov     rax, [rbp+ent]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     loc_3A0E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 34, 0, 0, 5, 2, 1, 2, 5, 0.024313725490196076, ["mov     rax, [rbp+x]; jumptable 000000000000354B case 1", "movzx   eax, byte ptr [rax+9]", "xor     eax, 1", "test    al, al", "jz      loc_3636"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [6, 0, 3, 0, 4, 22, 0, 5, 2, 2, 0.001176470588235294, ["mov     rax, [rbp+ent]; jumptable 000000000000354B case 2", "mov     rax, [rax+38h]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "lea     rdi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree", "mov     eax, 4", "jmp     loc_3D6D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 50, 1, 0, 8, 0, 1, 1, 3, 0.019215686274509803, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_DE98", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_DE98", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 0, 4, 0, 3, 15, 0, 4, 9, 3, 0.0037254901960784314, ["mov     rax, [rbp+ent]", "mov     rax, [rax+38h]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "lea     rdi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_382D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 2, 8, 0, 2, 6, 3, 0.0, ["mov     rax, [rbp+ent]", "mov     rdi, rax; ent", "call    mark_ancestor_dirs", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.008627450980392156, ["mov     eax, [rbp+s]", "jmp     loc_3D6D"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [5, 0, 0, 0, 4, 21, 0, 4, 1, -1, 0.0, ["mov     rax, [rbp+ent]; jumptable 000000000000354B default case", "mov     rax, [rax+38h]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     r12, rax", "mov     rax, [rbp+ent]", "movzx   eax, word ptr [rax+70h]", "movzx   ebx, ax", "lea     rdi, aUnexpectedFail; \"unexpected failure: fts_info=%d: %s\\npl\"...", "call    _gettext", "lea     r9, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     r8, r12", "mov     ecx, ebx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "call    _abort"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "movzx~ebx,ax", "lea~rdi,<TAG>", "call~FOO", "lea~r9,<TAG>", "mov~r8,r12", "mov~ecx,ebx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "call~FOO"]], [5, 0, 3, 0, 4, 24, 0, 5, 2, 2, 0.001176470588235294, ["mov     rax, [rbp+ent]; jumptable 000000000000354B case 7", "mov     rax, [rax+38h]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "lea     rdi, aTraversalFaile; \"traversal failed: %s\"", "call    _gettext", "mov     rdx, rax; format", "mov     rax, [rbp+ent]", "mov     eax, [rax+40h]", "mov     rcx, rbx", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree", "mov     eax, 4", "jmp     short loc_3D6D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rcx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [4, 0, 3, 0, 3, 14, 0, 4, 10, 2, 0.005490196078431373, ["lea     rdi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rdx; ent", "mov     rdi, rax; fts", "call    fts_skip_tree", "mov     eax, 4", "jmp     loc_3D6D"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [62, 20, 104, 1, 52, 81, 1, 472, 0.0121, 17, 3], "succs": [[27, 38], [0, 2], [0, 3], [0, 9], [15], [18, 4], [36, 37], [8, 6], [27, 6], [29, 45], [15], [24, 10], [15], [1, 12], [], [51, 14], [18, 5], [16, 18], [28, 31], [17, 18], [26], [26, 20], [41, 30], [30, 22], [15], [48, 44], [46, 47], [26, 21], [32, 31], [50], [34, 35], [11], [11], [15], [33], [33], [15], [36], [40, 39], [7], [7, 39], [27, 13], [41, 23], [15], [48, 19, 42, 43, 49], [50], [47], [15], [], [15], [15], []], "fname": "rm_fts", "n_num": 52}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.003676470588235294, ["cmp     [rbp+rm_status], 2", "jnz     loc_3DE8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 4, 0.09375, ["cmp     [rbp+s], 3", "jnz     loc_3DE8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 5, 1, 0.09926470588235294, ["nop", "mov     rax, [rbp+fts]", "mov     rdi, rax; sp_0", "call    rpl_fts_close", "test    eax, eax", "jz      short loc_3EF3"], ["nop", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 4, 2, 0.17279411764705882, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      loc_3EB1"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [3, 0, 3, 0, 3, 12, 0, 4, 5, 2, 0.0, ["lea     rdi, aFtsReadFailed; \"fts_read failed\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+rm_status], 4", "jmp     short loc_3EB1"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 14, 0, 1, 7, 0, 1, 2, 4, 0.15073529411764705, ["mov     ecx, [rbp+bit_flags]", "mov     rax, [rbp+file]", "mov     edx, 0; compar", "mov     esi, ecx; options", "mov     rdi, rax; argv", "call    xfts_open", "mov     [rbp+fts], rax"], ["mov~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 16, 0, 0, 5, 1, 1, 1, 5, 0.05514705882352941, ["mov     [rbp+bit_flags], 218h", "mov     rax, [rbp+x]", "movzx   eax, byte ptr [rax+8]", "test    al, al", "jz      short loc_3DCE"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 1, 1, 0, 2, 5, 0.0, ["or      [rbp+bit_flags], 40h"], ["or~[rbp+0],0"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 6, 0.07352941176470588, ["cmp     [rbp+s], 3", "jz      short loc_3E8C"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 14, 0, 1, 9, 0, 2, 4, 6, 0.19852941176470587, ["mov     rdx, [rbp+x]; x", "mov     rcx, [rbp+ent]", "mov     rax, [rbp+fts]", "mov     rsi, rcx; ent", "mov     rdi, rax; fts", "call    rm_fts", "mov     [rbp+s], eax", "cmp     [rbp+s], 2", "jz      short loc_3E8C"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 3, 3, 0.40808823529411764, ["mov     rax, [rbp+fts]", "mov     rdi, rax", "call    rpl_fts_read", "mov     [rbp+ent], rax", "cmp     [rbp+ent], 0", "jnz     short loc_3E41"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6223; \"rm\"", "mov     edx, 261h; line", "lea     rsi, aSrcRemoveC; \"src/remove.c\"", "lea     rdi, aValidStatusS; \"VALID_STATUS (s)\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,<STR>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 6, 0.04044117647058824, ["cmp     [rbp+s], 4", "jz      short loc_3E8C"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 17, 1, 0, 11, 1, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 38h", "mov     [rbp+file], rdi", "mov     [rbp+x], rsi", "mov     [rbp+rm_status], 2", "mov     rax, [rbp+file]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_3EF3"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 1, 0, 3, 11, 0, 3, 6, 1, 0.0, ["lea     rdi, aFtsCloseFailed; \"fts_close failed\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+rm_status], 4"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 14, 0, 0, 3, 0, 1, 6, 4, 0.05698529411764706, ["mov     eax, [rbp+s]", "mov     [rbp+rm_status], eax", "jmp     loc_3DE8"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 5, 0.1764705882352941, ["cmp     [rbp+s], 4", "jz      short loc_3EA6"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 1, 0, 0.0, ["mov     eax, [rbp+rm_status]", "add     rsp, 38h", "pop     rbx", "pop     rbp", "retn"], ["mov~eax,[rbp+0]", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [12, 5, 25, 0, 18, 27, 1, 95, 0.08497, 5, 2], "succs": [[10, 15], [0, 10], [17, 14], [2, 4], [2], [10], [5, 7], [5], [16, 12], [8, 16], [9, 3], [], [16, 11], [17, 6], [17], [10], [1, 15], []], "fname": "rm", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     edi, 1; status", "call    usage"], ["push~rbp", "mov~rbp,rsp", "mov~edi,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "__argmatch_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 14, 0, 0, 1, 0, 0, 0, 0, 0.030219780219780223, ["mov     [rbp+ambiguous], 1"], ["mov~[rbp+0],0"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 6, 0.08241758241758243, ["cmp     [rbp+vallist], 0", "jz      short loc_4000"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 14, 2, 1, 16, 1, 2, 6, 5, 0.030219780219780223, ["mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rsi, [rdx+rax]; s2", "mov     rax, [rbp+matchind]", "imul    rax, [rbp+valsize]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rcx, [rdx+rax]", "mov     rax, [rbp+valsize]", "mov     rdx, rax; n", "mov     rdi, rcx; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_4004"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 14, 1, 1, 9, 0, 2, 3, 2, 0.23626373626373628, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "cmp     [rbp+arglen], rax", "jnz     short loc_3FAD"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 14, 1, 1, 12, 1, 2, 2, 3, 0.2527472527472528, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdx, [rbp+arglen]; n", "mov     rcx, [rbp+arg]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_4004"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 4, 6, 0.19230769230769232, ["cmp     [rbp+matchind], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_3FBE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 3, 4, 0.34065934065934067, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 5, 0.08241758241758243, ["mov     rax, [rbp+i]", "mov     [rbp+matchind], rax", "jmp     short loc_4004"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.01098901098901099, ["mov     rax, [rbp+i]", "jmp     locret_403B"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.024725274725274728, ["mov     rax, 0FFFFFFFFFFFFFFFEh", "jmp     short locret_403B"], ["mov~rax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.024725274725274728, ["mov     rax, [rbp+matchind]"], ["mov~rax,[rbp+0]"]], [4, 0, 14, 1, 1, 15, 0, 2, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+arg], rdi", "mov     [rbp+arglist], rsi", "mov     [rbp+vallist], rdx", "mov     [rbp+valsize], rcx", "mov     [rbp+matchind], 0FFFFFFFFFFFFFFFFh", "mov     [rbp+ambiguous], 0", "mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+arglen], rax", "mov     [rbp+i], 0", "jmp     loc_4009"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.15384615384615385, ["cmp     [rbp+ambiguous], 0", "jz      short loc_4037"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 14, 1, 0, 7, 1, 1, 1, 3, 0.4395604395604396, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_3F4F"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]]], "func_feature": [4, 3, 15, 0, 15, 21, 1, 77, 0.12674, 0, 7], "succs": [[6], [0, 2], [0, 6], [8, 5], [3, 6], [1, 7], [14], [6], [9], [], [9], [9], [14], [10, 11], [4, 13]], "fname": "argmatch", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[7, 0, 0, 1, 3, 25, 0, 3, 0, 0, 0.0, ["mov     [rbp+format], rax", "mov     rax, [rbp+context]", "mov     rsi, rax; arg", "mov     edi, 1; n", "call    quote_n", "mov     rbx, rax", "mov     rax, [rbp+value]", "mov     rdx, rax; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rdx, rax", "mov     rax, [rbp+format]", "mov     r8, rbx", "mov     rcx, rdx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "nop", "add     rsp, 38h", "pop     rbx", "pop     rbp", "retn"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~r8,rbx", "mov~rcx,rdx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 0, 0.08333333333333333, ["lea     rdi, aInvalidArgumen; \"invalid argument %s for %s\"", "call    _gettext", "jmp     short loc_4073"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0.08333333333333333, ["lea     rdi, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]], [2, 0, 3, 1, 0, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 38h", "mov     [rbp+context], rdi", "mov     [rbp+value], rsi", "mov     [rbp+problem], rdx", "cmp     [rbp+problem], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4067"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [5, 0, 7, 0, 4, 4, 1, 39, 0.04167, 2, 2], "succs": [[], [0], [0], [1, 2]], "fname": "argmatch_invalid", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 7, 1, 1, 12, 1, 2, 0, 0, 0.11904761904761904, ["mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+valsize]; n", "mov     rax, [rbp+last_val]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_419C"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 4, 0.3571428571428571, ["cmp     [rbp+i], 0", "jz      short loc_4147"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 7, 1, 2, 16, 0, 3, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 38h", "mov     [rbp+arglist], rdi", "mov     [rbp+vallist], rsi", "mov     [rbp+valsize], rdx", "mov     [rbp+last_val], 0", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "lea     rdi, aValidArguments; \"Valid arguments are:\"", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     [rbp+i], 0", "jmp     loc_41DD"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 7, 1, 2, 13, 0, 2, 4, 3, 0.047619047619047616, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; arg", "call    quote", "mov     rdx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aS_2; \", %s\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [0, 0, 7, 1, 0, 7, 1, 1, 1, 1, 0.5238095238095237, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_4115"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 7, 1, 0, 1, 0, 0, 4, 2, 0.3571428571428571, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [2, 0, 0, 1, 1, 9, 0, 1, 2, 0, 0.0, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rsi, rax; stream", "mov     edi, 0Ah; c", "call    _putc_unlocked", "nop", "add     rsp, 38h", "pop     rbx", "pop     rbp", "retn"], ["mov~rax,<TAG>", "mov~rsi,rax", "mov~edi,0", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 7, 3, 2, 20, 0, 3, 3, 3, 0.16666666666666666, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; arg", "call    quote", "mov     rdx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "lea     rsi, format; \"\\n  - %s\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "add     rax, rdx", "mov     [rbp+last_val], rax", "jmp     short loc_41D8"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [8, 2, 13, 0, 8, 10, 1, 80, 0.19643, 4, 9], "succs": [[3, 7], [0, 7], [4], [5], [1, 6], [4], [], [5]], "fname": "argmatch_valid", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+res]", "jmp     short locret_429C"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 3, 15, 0, 3, 1, 0, 0.08333333333333333, ["mov     rdx, [rbp+res]; problem", "mov     rcx, [rbp+arg]", "mov     rax, [rbp+context]", "mov     rsi, rcx; value", "mov     rdi, rax; context", "call    argmatch_invalid", "mov     rdx, [rbp+valsize]; valsize", "mov     rcx, [rbp+vallist]", "mov     rax, [rbp+arglist]", "mov     rsi, rcx; vallist", "mov     rdi, rax; arglist", "call    argmatch_valid", "mov     rax, [rbp+exit_fn]", "call    rax", "mov     rax, 0FFFFFFFFFFFFFFFFh"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "call~rax", "mov~rax,0"]], [2, 0, 3, 1, 1, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+context], rdi", "mov     [rbp+arg], rsi", "mov     [rbp+arglist], rdx", "mov     [rbp+vallist], rcx", "mov     [rbp+valsize], r8", "mov     [rbp+exit_fn], r9", "mov     rcx, [rbp+valsize]; valsize", "mov     rdx, [rbp+vallist]; vallist", "mov     rsi, [rbp+arglist]; arglist", "mov     rax, [rbp+arg]", "mov     rdi, rax; arg", "call    argmatch", "mov     [rbp+res], rax", "cmp     [rbp+res], 0", "js      short loc_4261"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "js~FOO"]]], "func_feature": [4, 0, 6, 0, 4, 4, 1, 37, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "__xargmatch_internal", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 6, 1, 0, 7, 1, 1, 0, 0, 0.3333333333333333, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_42C0"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 6, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+value], rdi", "mov     [rbp+arglist], rsi", "mov     [rbp+vallist], rdx", "mov     [rbp+valsize], rcx", "mov     [rbp+i], 0", "jmp     short loc_4308"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 6, 1, 0, 1, 0, 0, 3, 3, 0.06666666666666667, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 6, 1, 1, 12, 1, 2, 2, 2, 0.16666666666666666, ["mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+valsize]; n", "mov     rax, [rbp+value]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_4303"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 1, 0, 6, 0, 1, 3, 1, 0.03333333333333333, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "jmp     short locret_4328"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.1, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 2, 5, 0, 7, 8, 0, 38, 0.1, 0, 5], "succs": [[3, 5], [0], [0], [2, 4], [6], [6], []], "fname": "argmatch_to_argument", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     cs:file_name, rax", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 8, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 2, 0, 1, 3, 0, 2, 3, 0, 0.15151515151515152, ["call    close_stdout", "cmp     [rbp+fail], 0", "jz      short loc_4449"], ["call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 4, 0, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 1, 0, 0.24242424242424243, ["mov     rax, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      short loc_43AC"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 12, 1, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     [rbp+fail], 0", "mov     rax, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rax; fp", "call    freadahead", "test    rax, rax", "jz      short loc_4395"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],0", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 11, 0, 1, 7, 1, 2, 1, 0, 0.015151515151515152, ["mov     rax, cs:stdin@@GLIBC_2_2_5", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rax; fp", "call    rpl_fseeko", "test    eax, eax", "jnz     short loc_4395"], ["mov~rax,<TAG>", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 10, 0, 1, 5, 1, 2, 2, 0, 0.015151515151515152, ["mov     rax, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_4395"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 3, 0, 0.0, ["mov     [rbp+fail], 1"], ["mov~[rbp+0],0"]], [1, 0, 7, 0, 0, 1, 0, 0, 2, 0, 0.0, ["mov     [rbp+fail], 1"], ["mov~[rbp+0],0"]], [2, 0, 3, 0, 3, 15, 0, 4, 4, 0, 0.011363636363636364, ["mov     rax, cs:file_name", "mov     rdi, rax; arg", "call    quotearg_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+close_error]", "mov     r8, rdx", "mov     rcx, rbx", "lea     rdx, aSS; \"%s: %s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_4431"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~r8,rdx", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 6, 1, 2, 3, 0, 0.10606060606060606, ["lea     rdi, aErrorClosingFi; \"error closing file\"", "call    _gettext", "mov     [rbp+close_error], rax", "mov     rax, cs:file_name", "test    rax, rax", "jz      short loc_440B"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.2727272727272727, ["cmp     [rbp+fail], 0", "jz      short loc_4431"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 3, 0, 2, 9, 0, 2, 4, 0, 0.011363636363636364, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+close_error]", "mov     rcx, rdx", "lea     rdx, aS; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]]], "func_feature": [12, 5, 20, 0, 13, 18, 0, 72, 0.06352, 6, 2], "succs": [[], [0, 2], [], [8, 11], [3, 5], [3, 6], [3, 7], [3], [11], [1], [9, 12], [1, 10], [1]], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     cs:file_name_0, rax", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 8, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+ignore], al", "movzx   eax, [rbp+ignore]", "mov     cs:ignore_EPIPE, al", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~<TAG>,al", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 7, 0, 1, 4, 0, 2, 0, 0, 0.041666666666666664, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 20h ; ' '", "jz      loc_4547"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 2, 1, 1, 3, 0.06944444444444445, ["movzx   eax, cs:ignore_EPIPE", "xor     eax, 1", "test    al, al", "jnz     short loc_44BB"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 4, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [2, 0, 1, 0, 3, 15, 0, 4, 3, -1, 0.027777777777777776, ["mov     rax, cs:file_name_0", "mov     rdi, rax; arg", "call    quotearg_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     r8, rdx", "mov     rcx, rbx", "lea     rdx, aSS_0; \"%s: %s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_453A"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~r8,rdx", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 2, 9, 0, 2, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     rcx, rdx", "lea     rdx, aS_0; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 9, 1, 1, 9, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      loc_4547"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.08333333333333333, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      short loc_4567"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.125, ["lea     rdi, aWriteError; \"write error\"", "call    _gettext", "mov     [rbp+write_error], rax", "mov     rax, cs:file_name_0", "test    rax, rax", "jz      short loc_4514"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]]], "func_feature": [11, 5, 17, 0, 10, 12, 1, 63, 0.0375, 8, 2], "succs": [[9, 7], [0, 9], [], [2], [2], [1, 7], [], [8, 6], [], [3, 4]], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 7, 1, 0, 1, 0, 0, 0, 0, 0.17777777777777778, ["add     [rbp+p], 1"], ["add~[rbp+0],0"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 3, 0.044444444444444446, ["mov     [rbp+saw_slash], 1", "jmp     short loc_45C2"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 3, 0.13333333333333333, ["cmp     [rbp+saw_slash], 0", "jz      short loc_45C2"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 0, 6, 3, 0.0, ["mov     rax, [rbp+p]", "mov     [rbp+base], rax", "mov     [rbp+saw_slash], 0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 10, 0, 0, 7, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+name], rdi", "mov     rax, [rbp+name]", "mov     [rbp+base], rax", "mov     [rbp+saw_slash], 0", "jmp     short loc_458A"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 2, 4, 0.0, ["add     [rbp+base], 1"], ["add~[rbp+0],0"]], [1, 0, 10, 0, 0, 4, 0, 1, 1, 3, 0.18888888888888888, ["mov     rax, [rbp+base]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_4585"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 4, 4, 0.3111111111111111, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_45B0"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 7, 0, 0, 4, 1, 1, 3, 1, 0.45555555555555555, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_459F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 2, 0.23333333333333334, ["mov     rax, [rbp+base]", "mov     [rbp+p], rax", "jmp     short loc_45C7"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+base]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 1, 7, 0, 11, 14, 2, 34, 0.1404, 0, 2], "succs": [[8], [0], [0, 3], [0], [6], [6], [9, 5], [1, 2], [10, 7], [8], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 0, 0, 0, 0.41666666666666663, ["cmp     [rbp+len], 1", "jbe     short loc_4620"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 1, 4, 1, 1, 10, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+name], rdi", "mov     [rbp+prefix_len], 0", "mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "jmp     short loc_4603"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 4, 1, 0, 1, 0, 0, 3, 2, 0.08333333333333333, ["sub     [rbp+len], 1"], ["sub~[rbp+0],0"]], [1, 0, 4, 1, 0, 7, 0, 1, 2, 1, 0.16666666666666666, ["mov     rax, [rbp+len]", "lea     rdx, [rax-1]", "mov     rax, [rbp+name]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_45FE"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+len]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 0, 3, 0, 5, 6, 1, 23, 0.13333, 0, 3], "succs": [[3, 4], [0], [0], [2, 4], []], "fname": "base_len", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 5, 0, 0, 5, 1, 1, 0, 0, 0.07352941176470588, ["mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 1000h", "jnz     short loc_471F"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 2, 7, 0, 0, 5, 1, 1, 4, 2, 0.08823529411764705, ["mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 2000h", "jnz     short loc_46FE"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [0, 2, 3, 0, 0, 5, 1, 1, 6, 2, 0.044117647058823525, ["mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0C000h", "jnz     short loc_4740"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jnz~FOO"]], [2, 1, 17, 1, 0, 9, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_4674"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 1, 13, 0, 0, 5, 1, 1, 1, 2, 0.04534313725490196, ["mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_4698"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 2, 1, 0.003063725490196078, ["lea     rdi, aRegularEmptyFi; \"regular empty file\"", "call    _gettext", "jmp     locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 2, 1, 0.003063725490196078, ["lea     rdi, aRegularFile; \"regular file\"", "call    _gettext", "jmp     locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 2, 1, 0.004901960784313725, ["lea     rdi, aDirectory; \"directory\"", "call    _gettext", "jmp     locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 3, 1, 0.003676470588235294, ["lea     rdi, aSymbolicLink; \"symbolic link\"", "call    _gettext", "jmp     locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 4, 1, 0.003676470588235294, ["lea     rdi, aBlockSpecialFi; \"block special file\"", "call    _gettext", "jmp     short locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 5, 1, 0.003676470588235294, ["lea     rdi, aCharacterSpeci; \"character special file\"", "call    _gettext", "jmp     short locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 6, 1, 0.003676470588235294, ["lea     rdi, aFifo; \"fifo\"", "call    _gettext", "jmp     short locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 7, 1, 0.001838235294117647, ["lea     rdi, aSocket; \"socket\"", "call    _gettext", "jmp     short locret_474C"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 7, 1, 0.001838235294117647, ["lea     rdi, aWeirdFile; \"weird file\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]], [1, 1, 11, 0, 0, 5, 1, 1, 2, 2, 0.07352941176470588, ["mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_46BC"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 1, 9, 0, 0, 5, 1, 1, 3, 2, 0.08823529411764705, ["mov     rax, [rbp+st]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 6000h", "jnz     short loc_46DD"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 1, 2, 0.00980392156862745, ["mov     rax, [rbp+st]", "mov     rax, [rax+30h]", "test    rax, rax", "jnz     short loc_4663"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]]], "func_feature": [9, 8, 25, 0, 18, 25, 1, 71, 0.02512, 9, 1], "succs": [[2, 12], [0, 11], [13, 14], [17, 4], [8, 15], [], [5], [5], [5], [5], [5], [5], [5], [5], [5], [16, 9], [1, 10], [6, 7]], "fname": "file_type", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 2, 1, 1, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+dir], rdi", "mov     [rbp+base], rsi", "mov     [rbp+base_in_result], rdx", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rcx, [rbp+base]", "mov     rax, [rbp+dir]", "mov     rsi, rcx; base", "mov     rdi, rax; dir", "call    mfile_name_concat", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_4789"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 3, 0, 3, 2, 1, 19, 0.0, 0, 1], "succs": [[1, 2], [], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.06363636363636363, ["mov     eax, 0", "jmp     short locret_48D1"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 5, 3, 1, 13, 0, 2, 2, 2, 0.2727272727272727, ["cmp     [rbp+sep], 0", "setnz   al", "movzx   edx, al", "mov     rax, [rbp+dirlen]", "add     rdx, rax", "mov     rax, [rbp+baselen]", "add     rax, rdx", "add     rax, 1", "mov     rdi, rax; size", "call    _malloc", "mov     [rbp+p_concat], rax", "cmp     [rbp+p_concat], 0", "jnz     short loc_4866"], ["cmp~[rbp+0],0", "setnz~al", "movzx~edx,al", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 4, 2, 0.0, ["mov     rax, [rbp+base_in_result]", "mov     rdx, [rbp+p]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]], [2, 0, 3, 1, 1, 16, 0, 2, 3, 2, 0.12727272727272726, ["mov     rdx, [rbp+dirlen]; n", "mov     rcx, [rbp+dir]", "mov     rax, [rbp+p_concat]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _mempcpy", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "movzx   edx, [rbp+sep]", "mov     [rax], dl", "cmp     [rbp+sep], 0", "setnz   al", "movzx   eax, al", "add     [rbp+p], rax", "cmp     [rbp+base_in_result], 0", "jz      short loc_48AB"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "cmp~[rbp+0],0", "setnz~al", "movzx~eax,al", "add~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 1, 3, 0.03636363636363636, ["mov     rax, [rbp+base]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_4830"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [3, 0, 11, 3, 3, 29, 0, 4, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+dir], rdi", "mov     [rbp+base], rsi", "mov     [rbp+base_in_result], rdx", "mov     rax, [rbp+dir]", "mov     rdi, rax; name", "call    last_component", "mov     [rbp+dirbase], rax", "mov     rax, [rbp+dirbase]", "mov     rdi, rax; name", "call    base_len", "mov     [rbp+dirbaselen], rax", "mov     rdx, [rbp+dirbase]", "mov     rax, [rbp+dir]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+dirbaselen]", "add     rax, rdx", "mov     [rbp+dirlen], rax", "mov     rax, [rbp+base]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+baselen], rax", "mov     [rbp+sep], 0", "cmp     [rbp+dirbaselen], 0", "jz      short loc_4821"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 2, 3, 0.0, ["mov     [rbp+sep], 2Eh ; '.'"], ["mov~[rbp+0],0"]], [1, 0, 1, 0, 1, 10, 0, 1, 4, 1, 0.01818181818181818, ["mov     rdx, [rbp+baselen]; n", "mov     rcx, [rbp+base]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _mempcpy", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+p_concat]"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]"]], [1, 0, 8, 1, 0, 7, 0, 1, 1, 3, 0.045454545454545456, ["mov     rax, [rbp+dirlen]", "lea     rdx, [rax-1]", "mov     rax, [rbp+dir]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_4830"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 7, 0, 0, 4, 0, 1, 2, 3, 0.01818181818181818, ["mov     rax, [rbp+base]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_4830"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 3, 0.0, ["mov     [rbp+sep], 2Fh ; '/'", "jmp     short loc_4830"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [6, 0, 14, 0, 12, 17, 1, 93, 0.04848, 0, 8], "succs": [[9], [0, 3], [7], [2, 7], [1, 6], [8, 4], [1], [9], [1, 10], [], [1, 11], [1]], "fname": "mfile_name_concat", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, 0FFFFFFFFh", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 5, 0.0, 0, 0], "succs": [[]], "fname": "priv_set_remove_linkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, 0FFFFFFFFh", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 0], "succs": [[]], "fname": "priv_set_restore_linkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 1, 0, 7, 0, 1, 0, 0, 0.2222222222222222, ["mov     [rbp+base], rax", "mov     rdx, [rbp+base]", "mov     rax, [rbp+argv0]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 6", "jle     short loc_49BE"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jle~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 2, 0.06944444444444445, ["mov     rax, [rbp+slash]", "add     rax, 1", "jmp     short loc_494B"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 2, 2, 0.06944444444444445, ["mov     rax, [rbp+argv0]"], ["mov~rax,[rbp+0]"]], [2, 0, 7, 0, 1, 7, 0, 2, 1, 3, 0.09722222222222221, ["mov     rax, [rbp+argv0]", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     [rbp+slash], rax", "cmp     [rbp+slash], 0", "jz      short loc_4947"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 3, 1, 1, 8, 1, 2, 4, 1, 0.1388888888888889, ["mov     rax, [rbp+base]", "sub     rax, 7", "mov     edx, 7; n", "lea     rsi, aLibs; \"/.libs/\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_49BE"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+argv0]", "mov     cs:program_name, rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_name@@GLIBC_2_2_5, rax", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]], [1, 0, 2, 0, 1, 9, 1, 2, 5, 1, 0.08333333333333333, ["mov     rax, [rbp+base]", "mov     [rbp+argv0], rax", "mov     rax, [rbp+base]", "mov     edx, 3; n", "lea     rsi, aLt; \"lt-\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_49BE"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 1, 0, 5, 0, 0, 6, 1, 0.0, ["mov     rax, [rbp+base]", "add     rax, 3", "mov     [rbp+argv0], rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, rax"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax"]], [1, 1, 9, 1, 0, 6, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+argv0], rdi", "cmp     [rbp+argv0], 0", "jnz     short loc_4921"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 0, 0, 2, 7, 0, 2, 1, -1, 0.0, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rcx, rax; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     rdi, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "call~FOO"]]], "func_feature": [5, 2, 11, 0, 10, 13, 1, 60, 0.06806, 7, 5], "succs": [[4, 5], [0], [0], [1, 2], [5, 6], [], [5, 7], [5], [9, 3], []], "fname": "set_program_name", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4A01"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 1, 3, 1, 1, 9, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "cmp     [rbp+o], 0", "jz      short loc_49FA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 0, 0, 2, 11, 0, 2, 2, 0, 0.0, ["mov     esi, 38h ; '8'; s", "mov     rdi, rax; p", "call    xmemdup", "mov     [rbp+p], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+p]", "leave", "retn"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]]], "func_feature": [3, 0, 5, 0, 4, 4, 0, 23, 0.04167, 1, 1], "succs": [[2], [0, 3], [], [2]], "fname": "clone_quoting_options", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4A41"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "cmp     [rbp+o], 0", "jz      short loc_4A3A"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, [rax]", "pop     rbp", "retn"], ["mov~eax,<TAG>", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 11, 0.04167, 1, 0], "succs": [[2], [0, 3], [], [2]], "fname": "get_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     edx, [rbp+s]", "mov     [rax], edx", "nop", "pop     rbp", "retn"], ["mov~edx,[rbp+0]", "mov~<TAG>,edx", "nop", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4A64"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+s], esi", "cmp     [rbp+o], 0", "jz      short loc_4A5D"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 14, 0.04167, 1, 0], "succs": [[], [0], [0], [1, 2]], "fname": "set_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     eax, esi", "mov     [rbp+i], edx", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "mov     [rbp+uc], al", "cmp     [rbp+o], 0", "jz      short loc_4A90"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],edx", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [5, 0, 0, 3, 0, 34, 5, 0, 0, 0, 0.0, ["lea     rdx, [rax+8]", "movzx   eax, [rbp+uc]", "shr     al, 5", "movzx   eax, al", "shl     rax, 2", "add     rax, rdx", "mov     [rbp+p], rax", "movzx   eax, [rbp+uc]", "and     eax, 1Fh", "mov     [rbp+shift], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "mov     [rbp+r], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+i]", "and     eax, 1", "xor     eax, [rbp+r]", "mov     esi, eax", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shl     esi, cl", "mov     eax, esi", "xor     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["lea~rdx,[rax+0]", "movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "shl~rax,0", "add~rax,rdx", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "and~eax,0", "xor~eax,[rbp+0]", "mov~esi,eax", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~esi,cl", "mov~eax,esi", "xor~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_4A97"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [0, 5, 2, 0, 4, 4, 2, 47, 0.04167, 1, 3], "succs": [[1, 3], [2], [], [2]], "fname": "set_char_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+o]", "mov     eax, [rax+4]", "mov     [rbp+r], eax", "mov     rax, [rbp+o]", "mov     edx, [rbp+i]", "mov     [rax+4], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+i], esi", "cmp     [rbp+o], 0", "jnz     short loc_4B13"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [0, 0, 1, 0, 3, 3, 0, 17, 0.0, 1, 0], "succs": [[], [0, 2], [0]], "fname": "set_quoting_flags", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 3, 0, 0, 4, 0, 1, 0, 0, 0.30000000000000004, ["mov     rax, [rbp+o]", "mov     dword ptr [rax], 0Ah", "cmp     [rbp+left_quote], 0", "jz      short loc_4B6A"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 5, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "cmp     [rbp+o], 0", "jnz     short loc_4B52"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 3, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, 1, 0.15000000000000002, ["cmp     [rbp+right_quote], 0", "jnz     short loc_4B6F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+o]", "mov     rdx, [rbp+left_quote]", "mov     [rax+28h], rdx", "mov     rax, [rbp+o]", "mov     rdx, [rbp+right_quote]", "mov     [rax+30h], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [1, 0, 4, 0, 6, 7, 1, 26, 0.075, 1, 1], "succs": [[3, 5], [0, 2], [0], [4, 5], [], []], "fname": "set_custom_quoting", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 21, 1, 1, 1, 0, 0.16666666666666666, ["mov     eax, [rbp+style]", "mov     [rbp+o.style], eax", "mov     rcx, [rbp+var_48]", "mov     rax, qword ptr [rbp+o.style]", "mov     rdx, qword ptr [rbp+o.quote_these_too]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+8]", "mov     rdx, qword ptr [rbp+o.quote_these_too+10h]", "mov     [rcx+10h], rax", "mov     [rcx+18h], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+18h]", "mov     rdx, [rbp+o.left_quote]", "mov     [rcx+20h], rax", "mov     [rcx+28h], rdx", "mov     rax, [rbp+o.right_quote]", "mov     [rcx+30h], rax", "mov     rax, [rbp+var_48]", "mov     rdx, [rbp+var_8]", "xor     rdx, fs:28h", "jz      short locret_4C44"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~rcx,[rbp+0]", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[rbp+0]", "mov~[rcx+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "xor~rdx,<TAG>", "jz~FOO"]], [8, 1, 4, 1, 0, 17, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+var_48], rdi", "mov     [rbp+style], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     qword ptr [rbp+o.style], 0", "mov     qword ptr [rbp+o.quote_these_too], 0", "mov     qword ptr [rbp+o.quote_these_too+8], 0", "mov     qword ptr [rbp+o.quote_these_too+10h], 0", "mov     qword ptr [rbp+o.quote_these_too+18h], 0", "mov     [rbp+o.left_quote], 0", "mov     [rbp+o.right_quote], 0", "cmp     [rbp+style], 0Ah", "jnz     short loc_4BEB"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 4, 2, 5, 4, 3, 42, 0.03333, 1, 1], "succs": [[], [0, 4], [1, 3], [], []], "fname": "quoting_options_from_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.00641025641025641, ["mov     rax, [rbp+translation]", "jmp     locret_4CFF"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.00641025641025641, ["lea     rax, unk_E10E", "jmp     short locret_4CFF"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.00641025641025641, ["lea     rax, unk_E112", "jmp     short locret_4CFF"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.004807692307692308, ["lea     rax, unk_E11E", "jmp     short locret_4CFF"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.004807692307692308, ["lea     rax, unk_E122", "jmp     short locret_4CFF"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.004807692307692308, ["lea     rax, unk_E125", "jmp     short locret_4CFF"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 0.004807692307692308, ["lea     rax, asc_E127; \"'\""], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 4, 0, 1, 2, 0, 0.03205128205128205, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_4CAC"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 11, 0, 2, 8, 1, 3, 1, 0, 0.0641025641025641, ["call    locale_charset", "mov     [rbp+locale_code], rax", "mov     rax, [rbp+locale_code]", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_4CB5"], ["call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 13, 1, 1, 12, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+msgid], rdi", "mov     [rbp+s], esi", "mov     rax, [rbp+msgid]", "mov     rdi, rax; msgid", "call    _gettext", "mov     [rbp+translation], rax", "mov     rax, [rbp+translation]", "cmp     rax, [rbp+msgid]", "jz      short loc_4C78"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 0, 0.041666666666666664, ["cmp     [rbp+s], 9", "jnz     short loc_4CF8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 3, 0, 0.041666666666666664, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_4CE0"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 0, 0.07692307692307693, ["mov     rax, [rbp+locale_code]", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_4CE9"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]]], "func_feature": [4, 2, 16, 0, 14, 19, 2, 51, 0.02106, 8, 1], "succs": [[], [0], [0], [0], [0], [0], [0], [0], [2, 3], [8, 13], [1, 9], [6, 7], [4, 5], [11, 12]], "fname": "gettext_quote", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 281, 0, 0, 2, 1, 1, 0, 0, 0.013739196746314183, ["test    al, al", "jnz     loc_591E"], ["test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 6, 1, 1, 12, 10, 0.004899593289273005, ["mov     rax, [rbp+arg]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_53FF"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 10, 0.004899593289273005, ["cmp     [rbp+argsize], 1", "setnz   al"], ["cmp~[rbp+0],0", "setnz~al"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 12, 0.016077783426537873, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 0000000000004DE9 case 5", "xor     eax, 1", "test    al, al", "jz      short loc_4E27"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 2, 12, 0.1197508896797153, ["mov     eax, [rbp+quoting_style]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E12C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E12C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 281, 0, 0, 2, 0, 0, 3, 13, 0.0, ["mov     [rbp+quoting_style], 5; jumptable 0000000000004DE9 case 6", "mov     [rbp+elide_outer_quotes], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5A19"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_59F6"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 10, 0.05540162684290798, ["mov     eax, [rbp+flags]", "and     eax, 4", "test    eax, eax", "jz      loc_5344"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 11, 0.06433655312658872, ["cmp     eax, 5", "jz      short loc_51FC"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 10, 1, 0, 6, 0, 0, 15, 6, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [0, 0, 10, 0, 0, 3, 0, 0, 14, 6, 0.006494661921708185, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5C0D"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.0037747839349262834, ["cmp     [rbp+i], 0; jumptable 0000000000005065 cases 35,126", "jnz     loc_5921"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 10, 7, 0.36952211489578035, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E158", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E158", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4E22"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 11, 7, 0.0006990340620233858, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 0000000000005065 case 32"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 1, 10, 1, 2, 14, 6, 0.00992628368073208, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+quote_string_len]; n", "mov     rax, [rbp+quote_string]", "mov     rsi, rax; s2", "mov     rdi, rcx; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_5023"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 0, 13, 7, 0.02652516522623284, ["cmp     rax, rbx", "jb      short loc_5023"], ["cmp~rax,rbx", "jb~FOO"]], [0, 0, 281, 2, 0, 8, 1, 1, 17, 12, 0.0063294356888662934, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_55DD"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 11, 0.022801220132180985, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "cmp     [rbp+argsize], rax", "jbe     loc_56C4"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 11, 0.0035205897305541434, ["jmp     loc_56C4"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 21, 4, 0.0007117437722419928, ["nop; jumptable 000000000000567F cases 91,92,94,96,124", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 20, 5, 0.0038002033553634976, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E3CC", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E3CC", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 0, 0, 4, 0, 1, 15, 14, 0.11860701576004067, ["mov     rax, [rbp+orig_buffersize]", "mov     [rbp+buffersize], rax", "mov     [rbp+len], 0", "jmp     process_input"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.11839095068632435, ["cmp     [rbp+orig_buffersize], 0", "jz      short loc_5BD5"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 5, 0.006875953228266395, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C49"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 14, 9, 0.04956786985256736, ["mov     rax, [rbp+i]", "add     rax, 2", "cmp     [rbp+argsize], rax", "jbe     loc_5344"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.013540925266903913, ["cmp     [rbp+quoting_style], 2; jumptable 0000000000005065 cases 33,34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_5924"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 1, 0, 9, 1, 0, 21, 13, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 3", "and     eax, 7", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "and~eax,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.0543467208947636, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5820"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 10, 0, 0, 4, 1, 1, 13, 4, 0.010027961362480934, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_5BE9"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 12, 5, 0.012862226741230299, ["jmp     short loc_5C17"], ["jmp~FOO"]], [2, 0, 10, 2, 0, 2, 0, 0, 15, 5, 0.00019064565327910524, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 3, 0.1212061514997458, ["cmp     [rbp+all_c_and_shell_quote_compat], 0", "jz      short loc_5BAC"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 4, 0.12095195729537365, ["cmp     [rbp+encountered_single_quote], 0", "jz      short loc_5BD5"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.003906964921199797, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_5924"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 9, 0.018912048805287237, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_5691"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 10, 0.034265378749364514, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_5691"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 17, 4, 0.0049377224199288255, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 5, 0.05713650228774784, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C5B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.0008185053380782917, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 17, 12, 0.007079308591764108, ["add     [rbp+len], 1", "mov     [rbp+is_right_quote], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5858"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 8, 0.015899847483477374, ["mov     [rbp+j], 1", "jmp     short loc_5687"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 16, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_5A22"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 15, 16, 0.06278596847991866, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_5A22"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.11680859176410777, ["cmp     [rbp+is_right_quote], 0", "jz      short loc_5861"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 7, 0.17635993899339095, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_5834"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 6, 0.05999618708693442, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_5834"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 15, 8, 0.04668276563294357, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Fh ; '?'", "jnz     loc_5344"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.06621759023894255, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5A40"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 8, 0, 1, 9, 8, 0.5461616675139807, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "cmp     eax, 7Eh ; '~'; switch 127 cases", "ja      loc_54F3; jumptable 0000000000005065 default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [4, 0, 281, 0, 0, 5, 0, 1, 8, 9, 0.5457803762074225, ["mov     [rbp+is_right_quote], 0", "mov     [rbp+escaping], 0", "mov     [rbp+c_and_shell_quote_compat], 0", "cmp     [rbp+backslash_escapes], 0", "jz      loc_5023"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 9, 0.031113370615149974, ["cmp     [rbp+quoting_style], 2", "jz      loc_5023"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 9, 0.02806304016268429, ["cmp     [rbp+quote_string_len], 0", "jz      short loc_5023"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 16, 9, 0.0034443314692425013, ["mov     [rbp+is_right_quote], 1"], ["mov~[rbp+0],0"]], [3, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.040409252669039136, ["mov     [rbp+encountered_single_quote], 1; jumptable 0000000000005065 case 39", "mov     [rbp+c_and_shell_quote_compat], 1", "cmp     [rbp+quoting_style], 2", "jnz     loc_5927"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 12, 2, 0.0029740721911540417, ["mov     rax, [rbp+len]", "jmp     loc_5CCD"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 11, 3, 0.009456024402643618, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5C40"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 4, 1, 0, 4, 0, 0, 12, 3, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 0"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 7, 0, 0, 1, 0, 0, 11, 4, 0.00376842907981698, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 5, 0.006856888662938485, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C61"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 14, 0.015391459074733096, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.01848500254194204, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_5A47"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 16, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+backslash_escapes], 1; jumptable 0000000000004DE9 case 7", "mov     [rbp+elide_outer_quotes], 0", "jmp     loc_4F70"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 14, 0.3029422979156075, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 7, 0.3301813251991188, ["movzx   eax, [rbp+is_right_quote]", "xor     eax, 1", "test    al, al", "jnz     loc_5A4D"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [2, 0, 281, 3, 0, 8, 0, 1, 19, 8, 0.03796390442297915, ["add     [rbp+len], 1", "add     [rbp+i], 1", "mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "jmp     loc_56FB"], ["add~[rbp+0],0", "add~[rbp+0],0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 9, 0.037201321809862735, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_58EF"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 19, 9, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 18, 5, 0.03173614641586172, ["cmp     [rbp+elide_outer_quotes], 0; jumptable 0000000000005284 cases 33,39-41,45,47,60-62", "jnz     loc_5C4F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 13, 0.5487925775292323, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_5AA9"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 17, 14, 0.1396733604473818, ["nop", "jmp     store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 17, 14, 0.06698017285205897, ["add     [rbp+len], 1", "jmp     short store_c"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 15, 14, 0.009189120488052873, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 4, 0.000800711743772242, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.0038891713268937467, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C52"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.00028469750889679714, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.03444839857651245, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C55"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 13, 0.024885612608032535, ["cmp     [rbp+quoting_style], 0Ah; jumptable 0000000000004DE9 cases 8-10", "jz      short loc_4E8F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 11, 0.05591001525165226, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh", "jnz     short loc_561B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 15, 0.031354855109303505, ["cmp     [rbp+buffersize], 0", "jz      short loc_5478"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 4, 0, 12, 0, 1, 19, 6, 0.010015251652262329, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+j]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 5Bh ; '['; switch 34 cases", "cmp     eax, 21h ; '!'", "ja      short loc_5681; jumptable 000000000000567F default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 7, 0.026715810879511945, ["mov     rax, [rbp+j]", "cmp     rax, [rbp+bytes]", "jb      short loc_5634"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [2, 0, 281, 2, 0, 9, 0, 1, 16, 7, 0.04378495170310117, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 21h ; '!'; switch 30 cases", "cmp     eax, 1Dh", "ja      loc_533B; jumptable 0000000000005284 default case"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 15, 4, 0.006183274021352313, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.07177808845958311, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C5E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 15, 0.0031647178444331467, ["cmp     [rbp+orig_buffersize], 0", "jnz     short loc_5478"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 6, 0.009938993390950685, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_5B35"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.1183019827147941, ["cmp     [rbp+buffersize], 0", "jnz     short loc_5BD5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.0, ["mov     [rbp+quoting_style], 4"], ["mov~[rbp+0],0"]], [1, 0, 5, 0, 0, 2, 0, 1, 13, 3, 0.003355363497712252, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_5C7B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 10, 5, 0.12071682765632943, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      loc_5BD5"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 5, 0.15413701067615657, ["cmp     [rbp+quoting_style], 2", "jnz     loc_5BD5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5A7D"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 13, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_5AA9"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.09025673614641587, ["cmp     [rbp+backslash_escapes], 0; jumptable 0000000000005065 case 0", "jz      loc_51C2"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 3, 0, 0, 15, 15, 0.0, ["mov     rax, [rbp+buffersize]", "mov     [rbp+orig_buffersize], rax", "mov     [rbp+buffersize], 0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 6, 0, 0, 2, 0, 1, 12, 3, 0.017329689883070664, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_5C7B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.004971614980511778, ["cmp     [rbp+quote_these_too], 0", "jz      short loc_5983"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 9, 0.0031456532791052363, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_5947"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 8, 0.3245721064226402, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jnz     short loc_5983"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.06716319267920692, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_5C4C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 10, 0.03453228266395526, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_58CE"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 11, 0.1770017793594306, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+ilim], rax", "jbe     loc_5912"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 2, 0, 0, 20, 8, 0.006875953228266395, ["nop; jumptable 000000000000567F default case", "add     [rbp+j], 1"], ["nop", "add~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 14, 0.032498729028978136, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5496"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 17, 6, 0.03468479918657855, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E354", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E354", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 0, 0, 3, 0, 1, 13, 14, 0.06406964921199797, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_5100"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 2, 10, 0, 2, 4, 13, 0.0, ["mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_E129; \"`\"", "call    gettext_quote", "mov     [rbp+left_quote], rax", "mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_E127; \"'\"", "call    gettext_quote", "mov     [rbp+right_quote], rax"], ["mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 11, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 11, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_58C5"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 14, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_5100"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 9, 0.32878749364514487, ["movzx   eax, [rbp+backslash_escapes]", "xor     eax, 1", "test    al, al", "jnz     short loc_593C"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 4, 12, 0.025648195221148955, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_4EE0"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 1, 5, 1, 2, 16, 12, 0.033032536858159635, ["mov     eax, [rbp+w]", "mov     edi, eax; wc", "call    _iswprint", "test    eax, eax", "jnz     short loc_56A3"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 17, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_50B1"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 12, 0.0, ["mov     [rbp+printable], 0"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 1, 5, 13, 0.012506354855109304, ["mov     rax, [rbp+left_quote]", "mov     [rbp+quote_string], rax", "jmp     short loc_4ED5"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.03326131164209456, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_54B9"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 14, 0.053584138281647174, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_57EF"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 8, 0, 0, 20, 14, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 6", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [0, 0, 281, 0, 0, 3, 0, 1, 13, 6, 0.04288256227758007, ["movzx   eax, [rbp+esc]", "mov     [rbp+c], al", "jmp     store_escape"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 6, 0.024955516014234874, ["nop"], ["nop"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 12, 0.5514616166751398, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5ACA"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 7, 14, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4ECB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 4, 1, 1, 6, 12, 0.023525673614641585, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_4EA7"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 13, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [2, 0, 281, 1, 0, 2, 0, 0, 20, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.034023894255210976, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_54DC"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 2, 0, 10, 0, 0, 19, 17, 0.02830452465683782, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "add     [rbp+i], 2", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_52CB"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 1, 7, 1, 2, 17, 11, 0.03379511947127605, ["mov     rax, [rbp+bytes]", "add     [rbp+m], rax", "lea     rax, [rbp+mbstate]", "mov     rdi, rax; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_556D"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 10, 0.03216827656329436, ["jmp     short loc_56C5"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 16, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_50D4"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.00979918657854601, ["nop", "jmp     short loc_56C5"], ["nop", "jmp~FOO"]], [1, 0, 281, 3, 1, 20, 0, 2, 12, 11, 0.07458057956278596, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+argsize]", "sub     rax, rdx", "mov     rdi, rax", "mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "lea     rsi, [rdx+rax]; s", "lea     rdx, [rbp+mbstate]", "lea     rax, [rbp+w]", "mov     rcx, rdx; ps", "mov     rdx, rdi; n", "mov     rdi, rax; pwc", "call    rpl_mbrtowc", "mov     [rbp+bytes], rax", "cmp     [rbp+bytes], 0", "jz      loc_56C1"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "sub~rax,rdx", "mov~rdi,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 10, 0.020754956786985256, ["nop"], ["nop"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 6, 0, 0, 8, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [2, 0, 281, 1, 0, 2, 0, 0, 21, 10, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [2, 0, 281, 2, 0, 2, 0, 0, 8, 13, 0.007079308591764108, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 14, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5AA0"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.04452846975088968, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_5928"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 12, 9, 0.18070665988815454, ["movzx   eax, [rbp+printable]", "mov     [rbp+c_and_shell_quote_compat], al", "cmp     [rbp+m], 1", "ja      short loc_56EC"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.006596339603457041, ["nop", "jmp     loc_5928"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 14, 10, 0.06814946619217081, ["jmp     loc_5928"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 10, 0.012874936451448906, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 0000000000005065 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_5928"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 9, 0.0005147432638535841, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_5928"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.07590238942552109, ["nop", "jmp     short loc_5928"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.020411794611082865, ["nop", "jmp     short loc_5928"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.013408744280630401, ["nop", "jmp     short loc_5928"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.003393492628368073, ["nop", "jmp     short loc_5928"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.010294865277071682, ["nop", "jmp     short loc_5928"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 10, 0.04150991357397051, ["nop"], ["nop"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 11, 0.0, ["mov     [rbp+all_c_and_shell_quote_compat], 0"], ["mov~[rbp+0],0"]], [2, 0, 281, 1, 0, 5, 2, 1, 16, 11, 0.5522241992882562, ["add     [rbp+len], 1", "movzx   eax, [rbp+c_and_shell_quote_compat]", "xor     eax, 1", "test    al, al", "jz      short loc_5ADE"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 16, 0.029067107269954245, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_52EE"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 13, 1, 0.0070665988815455, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_5CE1"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 17, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_59D3"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_50F7"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 3, 0, 1, 17, 11, 0.0347864768683274, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0", "jmp     loc_5927"], ["add~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 8, 0.021822572445348246, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 6, 0.025050838840874428, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_53BE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 11, 0.17469496695475342, ["cmp     [rbp+unibyte_locale], 0; jumptable 0000000000005065 default case", "jz      short loc_552B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 4, 0.0313421453990849, ["cmp     [rbp+quote_string], 0", "jz      short loc_5C22"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 2, 1, 11, 4, 0.01601423487544484, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_5C22"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 14, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 15, 0.029829689883070665, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5311"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 1, 8, 0, 2, 5, 11, 0.02793594306049822, ["mov     [rbp+backslash_escapes], 1", "mov     rax, [rbp+right_quote]", "mov     [rbp+quote_string], rax", "mov     rax, [rbp+quote_string]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+quote_string_len], rax", "jmp     short loc_4F70"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 15, 0.0, ["mov     [rbp+backslash_escapes], 1; jumptable 0000000000004DE9 case 3"], ["mov~[rbp+0],0"]], [0, 0, 281, 1, 0, 7, 1, 1, 6, 8, 0.35229410269445854, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_5B13"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 5, 9, 0.7073843416370107, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_5B05"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 14, 0.003546009150991357, ["mov     [rbp+elide_outer_quotes], 1; jumptable 0000000000004DE9 case 1"], ["mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 15, 0.05282155566853076, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_57C1"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 13, 0.06750127097102186, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_511E"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 10, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_58CE"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 6, 8, 0.35229410269445854, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+argsize]", "setnz   al"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setnz~al"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 13, 0.01021860701576004, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 0000000000004DE9 case 4", "xor     eax, 1", "test    al, al", "jz      short loc_4F18; jumptable 0000000000004DE9 case 2"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 4, 13, 0.0, ["mov     [rbp+backslash_escapes], 1"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 2, 1, 1, 7, 7, 0.7085282155566853, ["test    al, al", "jnz     loc_4F7D"], ["test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 11, 0.07169547534316217, ["mov     [rbp+c], 30h ; '0'", "jmp     loc_5918"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 11, 0.020297407219115403, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_5918"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 7, 0.06609049313675648, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_591B"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 1, 3, 2, 1, 15, 0, 2, 13, 2, 9.532282663955262e-05, ["mov     edi, [rbp+flags]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+orig_buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    [rbp+quote_these_too]; quote_these_too", "mov     r9d, edi; flags", "mov     r8d, 5; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "jmp     loc_5CCD"], ["mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "mov~r9d,edi", "mov~r8d,0", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [3, 1, 3, 2, 1, 17, 1, 1, 13, 2, 0.007416115912557193, ["mov     eax, [rbp+flags]", "and     eax, 0FFFFFFFDh", "mov     r8d, eax", "mov     edi, [rbp+quoting_style]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    0; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~r8d,eax", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~r9d,r8d", "mov~r8d,edi", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 281, 0, 0, 2, 0, 1, 8, 6, 0.1599517031011693, ["cmp     [rbp+len], 0", "jnz     short loc_5B35"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 14, 0.030592272496187085, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5334"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 2, 1, 13, 2, 2, 11, 10, 0.10008896797153025, ["mov     [rbp+m], 1", "call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+c]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "setnz   al", "mov     [rbp+printable], al", "jmp     loc_56C5"], ["mov~[rbp+0],0", "call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 17, 16, 0.04938993390950686, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_57A3"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 1, 0, 3, 0, 1, 15, 12, 0.06826385358413828, ["add     [rbp+len], 1", "cmp     [rbp+quoting_style], 2", "jz      loc_51B9"], ["add~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 0, 0, 5, 2, 1, 3, 12, 0.02648703609557702, ["mov     [rbp+quoting_style], 2; jumptable 0000000000004DE9 case 2", "movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_4F50"], ["mov~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [3, 0, 281, 2, 0, 6, 1, 1, 21, 12, 0.05510930350788002, ["add     [rbp+len], 1", "movzx   eax, [rbp+c]", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rbp+c], al", "jmp     short loc_5861"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "and~eax,0", "add~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 18, 12, 1.2709710218607015e-05, ["add     [rbp+m], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 23, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 12, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_58A2"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_57A3"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 14, 10, 0.5733985765124555, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.016853075749872902, ["jmp     loc_5ADE"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.00028469750889679714, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.00028469750889679714, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.00028469750889679714, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4F4B"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 23, 13, 0.031354855109303505, ["add     [rbp+len], 1", "jmp     short loc_533C"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.00327910523640061, ["mov     [rbp+printable], 0", "jmp     loc_56C5"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 13, 0.009633960345704117, ["nop; jumptable 0000000000005284 default case"], ["nop"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 12, 0.0449288256227758, ["jmp     short loc_5344"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.02188612099644128, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+argsize], rax", "jbe     short loc_51B9"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5754"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 14, 11, 0.058070665988815454, ["nop"], ["nop"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.0061387900355871884, ["jmp     loc_5345"], ["jmp~FOO"]], [0, 0, 281, 0, 1, 6, 0, 2, 13, 8, 0.001766649720386375, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax", "mov     rax, [rbp+argsize]", "jmp     short loc_4FEA"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 9, 0.0031647178444331467, ["cmp     [rbp+quote_string_len], 1", "jbe     short loc_4FE3"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 61h ; 'a'; jumptable 0000000000005065 case 7", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 1, 4, 0, 1, 12, 12, 0.0, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [5, 0, 281, 0, 1, 9, 0, 2, 11, 12, 0.07180986273512964, ["lea     rax, [rbp+mbstate]", "mov     edx, 8; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     [rbp+m], 0", "mov     [rbp+printable], 1", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_556D"], ["lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 62h ; 'b'; jumptable 0000000000005065 case 8", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 17, 12, 0.018797661413319774, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jle     short loc_51B9"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 66h ; 'f'; jumptable 0000000000005065 case 12", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 6Eh ; 'n'; jumptable 0000000000005065 case 10", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 4, 11, 0.02801220132180986, ["lea     rax, asc_E127; \"'\"", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     short loc_4F70"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5777"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 14, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 72h ; 'r'; jumptable 0000000000005065 case 13", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+elide_outer_quotes], 0; jumptable 0000000000004DE9 case 0", "jmp     short loc_4F70"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 0000000000004DE9 default case"], ["call~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 1, 13, 0.12255973563802745, ["cmp     [rbp+quoting_style], 0Ah; switch 11 cases", "ja      loc_4F6B; jumptable 0000000000004DE9 default case"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 74h ; 't'; jumptable 0000000000005065 case 9", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 18, 12, 0.015696492119979664, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 39h ; '9'", "jg      short loc_51B9"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 76h ; 'v'; jumptable 0000000000005065 case 11", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 0, 0, 5, 0, 1, 4, 11, 0.017602948652770716, ["mov     [rbp+backslash_escapes], 1", "lea     rax, unk_E125", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     loc_4F70"], ["mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 4, 10, 0.13004575495678697, ["mov     [rbp+i], 0", "jmp     loc_5AE3"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.00968988307066599, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_533E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 14, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_5191"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [3, 0, 281, 1, 0, 15, 3, 1, 15, 7, 0.00023301135400779526, ["movzx   eax, [rbp+c]", "shr     al, 5", "movzx   eax, al", "lea     rdx, ds:0[rax*4]", "mov     rax, [rbp+quote_these_too]", "add     rax, rdx", "mov     edx, [rax]", "movzx   eax, [rbp+c]", "and     eax, 1Fh", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "test    eax, eax", "jnz     short loc_5992"], ["movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,<TAG>", "movzx~eax,[rbp+0]", "and~eax,0", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.03424504321301474, ["movzx   eax, [rbp+c]; jumptable 0000000000005065 case 92", "mov     [rbp+esc], al", "cmp     [rbp+quoting_style], 2", "jnz     short loc_5393"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_579A"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 8, 0.012963904422979155, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_53AA"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 8, 0.009367056431113371, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_53AA"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 22, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_51B4"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.009278088459583122, ["cmp     [rbp+quote_string_len], 0", "jnz     loc_5A4A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 7, 0.001741230299949161, ["nop"], ["nop"]], [0, 0, 281, 1, 0, 4, 0, 0, 13, 8, 0.13445602440264362, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "mov     [rbp+ilim], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [11, 0, 281, 1, 1, 36, 3, 1, 0, 14, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+quoting_style], r8d", "mov     [rbp+flags], r9d", "mov     rax, [rbp+arg_0]", "mov     [rbp+quote_these_too], rax", "mov     rax, [rbp+arg_8]", "mov     [rbp+left_quote], rax", "mov     rax, [rbp+arg_10]", "mov     [rbp+right_quote], rax", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+len], 0", "mov     [rbp+orig_buffersize], 0", "mov     [rbp+quote_string], 0", "mov     [rbp+quote_string_len], 0", "mov     [rbp+backslash_escapes], 0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "setz    al", "mov     [rbp+unibyte_locale], al", "mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "setnz   al", "mov     [rbp+elide_outer_quotes], al", "mov     [rbp+pending_shell_escape_end], 0", "mov     [rbp+encountered_single_quote], 0", "mov     [rbp+all_c_and_shell_quote_compat], 1"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "call~FOO", "cmp~rax,0", "setz~al", "mov~[rbp+0],al", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 1, 0, 0, 21, 12, 0.014107778342653787, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 5, 0, 1, 11, 9, 0.024999999999999998, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+quote_string_len]", "lea     rbx, [rdx+rax]", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4FE3"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rbx,<TAG>", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 11, 0.06198525673614641, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_55D0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.018848500254194205, ["mov     [rbp+printable], 0", "jmp     short loc_55E2"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 11, 0.012595322826639553, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh; jumptable 0000000000005065 cases 123,125", "jnz     short loc_53F4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 3, 0, 1, 11, 6, 0.07682257244534825, ["mov     eax, [rbp+quoting_style]; jumptable 0000000000005065 case 63", "cmp     eax, 2", "jz      short loc_51ED"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 8, 0.020818505338078292, ["mov     rax, [rbp+argsize]"], ["mov~rax,[rbp+0]"]]], "func_feature": [16, 60, 177, 2, 282, 444, 7, 994, 0.05056, 8, 114], "succs": [[164, 13], [0], [0], [257, 15], [3, 70, 198, 5, 212, 86, 250, 188, 191], [3], [140, 116], [8, 6], [6], [232, 27], [9, 233], [34], [34, 11], [16, 165], [160, 262, 103, 13, 238, 253, 16, 242, 244, 245, 182, 279, 280, 249, 28, 61, 255], [35, 31], [28], [56, 26], [56, 17], [21, 214], [19, 149], [149], [105], [113, 22], [252], [24, 183], [60, 69], [232, 53], [166, 38], [213], [29, 213], [35], [12, 63], [32], [32], [257], [96, 205], [36, 183], [43, 166], [125, 47], [125, 39], [105], [41, 210], [105], [111], [44, 46], [44], [90], [175, 55], [48, 55], [45, 111], [50, 52], [50, 42], [232, 91], [80], [80, 54], [182, 14], [56, 58], [56, 59], [56, 276], [56], [85, 167], [173], [64, 62], [62], [105], [65, 100], [78], [67, 222], [105], [258], [78], [133, 71], [51], [73, 75], [73], [105], [76, 143], [136, 102], [78], [78], [78], [105], [82, 178], [105], [88, 84], [124, 118], [40, 278], [114, 94], [113, 23], [89, 125], [115, 227], [105], [49, 92], [104, 114], [66, 100], [25, 183], [206], [97, 206], [37, 183], [99, 183], [112, 155], [136, 101], [202, 109], [114], [98, 206], [72, 261], [106, 108], [72, 106], [117, 223], [74, 195], [110, 79], [155], [90], [129, 122], [227, 77], [140], [121, 194], [124], [152], [152, 119], [194, 126], [129], [107, 108], [128, 187], [144, 127], [146, 134], [144], [138], [141, 142], [131, 30], [30], [93], [93], [146], [170], [170, 135], [153, 151], [137, 187], [136], [55], [142], [168, 177], [171, 150], [145, 148], [157], [176, 154], [157], [147, 277], [157], [171], [153], [74], [138], [176], [139, 230], [161, 123], [272, 156], [123], [123], [123], [272, 123], [123], [123], [123], [123], [123], [123], [177], [219], [169, 219], [186, 180], [], [248, 172], [7], [174, 7], [185, 181], [167], [204], [178, 83], [186], [185], [240, 209], [184, 63], [33, 63], [194], [208, 196], [258], [191], [200], [189, 197], [198], [130], [192, 130], [203, 211], [217, 74], [208], [200], [212, 199], [212], [57, 207], [162], [162, 220], [211], [163, 132], [173], [173], [100, 95], [225, 215], [157], [193, 218], [201, 229], [224, 246], [111], [20], [225], [120], [216, 120], [193, 231], [190], [219], [105], [105], [105], [236, 237], [228], [157], [228], [232], [201, 243], [139], [241, 247], [159], [159], [18], [281, 234], [237], [246], [204], [148], [148, 239], [247], [204], [201, 254], [204], [179], [258], [256, 263], [], [179], [258], [], [251, 4], [179], [201, 260], [204], [263], [258], [190], [221, 158], [265, 269], [72, 133], [266, 68], [264, 268], [268], [269], [267, 271], [270, 271], [193], [273, 275], [81, 271], [179], [51], [275], [252], [201], [281, 235], [226, 87], [20], [1, 2], [10, 259], [18]], "fname": "quotearg_buffer_restyled", "n_num": 282}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 3, 1, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+o], r8", "cmp     [rbp+o], 0", "jz      short loc_5D10"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 1, 0, 2, 3, 34, 0, 3, 0, 0, 0.0, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r9d, [rax+4]; flags", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+r], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+r]", "leave", "retn"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_5D17"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [3, 0, 5, 0, 4, 4, 0, 47, 0.04167, 1, 3], "succs": [[1, 3], [2], [], [2]], "fname": "quotearg_buffer", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+o], rdx", "mov     rdx, [rbp+o]", "mov     rsi, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rcx, rdx; o", "mov     edx, 0; size", "mov     rdi, rax; arg", "call    quotearg_alloc_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.07500000000000001, ["mov     rax, [rbp+o]", "jmp     short loc_5DE9"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [2, 0, 5, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+size], rdx", "mov     [rbp+o], rcx", "cmp     [rbp+o], 0", "jz      short loc_5DE2"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 0, 3, 1, 0.0, ["mov     rax, [rbp+bufsize]", "lea     rdx, [rax-1]", "mov     rax, [rbp+size]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]], [7, 2, 2, 5, 5, 67, 1, 6, 2, 1, 0.30000000000000004, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     edx, [rax+4]", "cmp     [rbp+size], 0", "setz    al", "movzx   eax, al", "or      eax, edx", "mov     [rbp+flags], eax", "mov     rax, [rbp+p]", "mov     rsi, [rax+30h]", "mov     rax, [rbp+p]", "mov     rcx, [rax+28h]", "mov     rax, [rbp+p]", "lea     r9, [rax+8]", "mov     rax, [rbp+p]", "mov     edi, [rax]", "mov     r8d, [rbp+flags]", "mov     rdx, [rbp+argsize]", "mov     rax, [rbp+arg]", "sub     rsp, 8", "push    rsi; right_quote", "push    rcx; left_quote", "push    r9; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rcx, rdx; argsize", "mov     rdx, rax; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "add     rax, 1", "mov     [rbp+bufsize], rax", "mov     rax, [rbp+bufsize]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+buf], rax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+bufsize]; buffersize", "mov     rax, [rbp+buf]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "cmp     [rbp+size], 0", "jz      short loc_5EE5"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "or~eax,edx", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rsi,[rax+0]", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "lea~r9,[rax+0]", "mov~rax,[rbp+0]", "mov~edi,<TAG>", "mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~rsi", "push~rcx", "push~r9", "mov~r9d,r8d", "mov~r8d,edi", "mov~rcx,rdx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "add~rsp,<STR>", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+buf]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07500000000000001, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]]], "func_feature": [5, 1, 8, 0, 6, 7, 1, 86, 0.075, 1, 6], "succs": [[3], [0, 5], [4], [2, 4], [], [3]], "fname": "quotearg_alloc_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 7, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "mov     [rbp+i], 1", "jmp     short loc_5F2A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 7, 3, 1, 10, 0, 1, 0, 4, 0.0, ["mov     eax, [rbp+i]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "add     [rbp+i], 1"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],0"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 3, 0.26190476190476186, ["mov     eax, cs:nslots", "cmp     [rbp+i], eax", "jl      short loc_5F07"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]], [0, 0, 4, 0, 0, 5, 0, 1, 0, 2, 0.2857142857142857, ["mov     rax, [rbp+sv]", "mov     rdx, [rax+8]", "lea     rax, slot0", "cmp     rdx, rax", "jz      short loc_5F72"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 1, 0, 2, 0.0, ["mov     rax, [rbp+sv]", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.0, ["mov     rax, [rbp+sv]", "mov     rdi, rax; ptr", "call    free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 0, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "jz      short loc_5F99"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     cs:nslots, 1", "nop", "leave", "retn"], ["mov~<TAG>,0", "nop", "leave", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 10, 0, 44, 0.09821, 5, 4], "succs": [[2], [2], [1, 3], [4, 6], [6], [7], [5, 7], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 3, 3, 0, 14, 0, 1, 0, 0, 0.09523809523809525, ["mov     rax, [rbp+qsize]", "add     rax, 1", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+size]", "mov     [rdx], rax", "lea     rax, slot0", "cmp     [rbp+val], rax", "jz      short loc_6190"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [4, 1, 4, 6, 1, 45, 1, 2, 2, 1, 0.17142857142857143, ["mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     [rbp+val], rax", "mov     rax, [rbp+options]", "mov     eax, [rax+4]", "or      eax, 1", "mov     [rbp+flags], eax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+qsize], rax", "mov     rax, [rbp+size]", "cmp     rax, [rbp+qsize]", "ja      loc_6206"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "or~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 1, 2, 0.06190476190476191, ["mov     eax, cs:nslots", "cmp     [rbp+n], eax", "jl      loc_60B2"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]], [4, 0, 5, 5, 1, 20, 0, 1, 6, 2, 0.14285714285714288, ["mov     eax, [rbp+n]", "lea     edx, [rax+1]", "mov     eax, cs:nslots", "sub     edx, eax", "mov     eax, edx", "cdqe", "shl     rax, 4", "mov     rdx, rax; n", "mov     eax, cs:nslots", "cdqe", "shl     rax, 4", "mov     rcx, rax", "mov     rax, [rbp+sv]", "add     rax, rcx", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, [rbp+n]", "add     eax, 1", "mov     cs:nslots, eax"], ["mov~eax,[rbp+0]", "lea~edx,[rax+0]", "mov~eax,<TAG>", "sub~edx,eax", "mov~eax,edx", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~eax,<TAG>", "cdqe~", "shl~rax,0", "mov~rcx,rax", "mov~rax,[rbp+0]", "add~rax,rcx", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "add~eax,0", "mov~<TAG>,eax"]], [3, 0, 10, 2, 0, 7, 0, 1, 3, 5, 0.09523809523809525, ["mov     eax, [rbp+n]", "add     eax, 1", "cdqe", "shl     rax, 4", "mov     rdx, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_602D"], ["mov~eax,[rbp+0]", "add~eax,0", "cdqe~", "shl~rax,0", "mov~rdx,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 8, 0, 1, 2, 6, 0.06666666666666668, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "setz    al", "mov     [rbp+preallocated], al", "mov     [rbp+nmax], 7FFFFFFEh", "mov     eax, [rbp+nmax]", "cmp     eax, [rbp+n]", "jge     short loc_6011"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "setz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 6, 3, 0.0, ["mov     rcx, [rbp+sv]", "mov     rax, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [rcx], rax", "mov     [rcx+8], rdx"], ["mov~rcx,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx"]], [1, 0, 7, 0, 1, 8, 0, 2, 5, 3, 0.1523809523809524, ["mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+sv], rax", "mov     rax, [rbp+sv]", "mov     cs:slotvec_0, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_606A"], ["mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 15, 1, 1, 14, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     [rbp+options], rcx", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "cmp     [rbp+n], 0", "jns     short loc_5FDD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 4, 0.05238095238095239, ["mov     eax, 0", "jmp     short loc_6031"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, 4, 0.05238095238095239, ["mov     rax, [rbp+sv]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 7, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+val]", "leave", "retn"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [2, 1, 1, 4, 2, 33, 0, 2, 4, 1, 0.009523809523809525, ["mov     rax, [rbp+size]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+val], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+val]", "mov     [rdx+8], rax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rdx+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 2, 0, 1, 3, 0, 1, 4, 2, 0.0, ["mov     rax, [rbp+val]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 1, 17, 0, 16, 20, 8, 172, 0.05625, 5, 21], "succs": [[13, 14], [0, 12], [1, 5], [1], [9, 11], [10, 4], [3], [3, 6], [2, 15], [7], [], [7], [], [12], [13], []], "fname": "quotearg_n_options", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 1, 2, 1, 2, 24, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rdx, [rbp+o]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_631C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 10, 27, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 1, 2, 24, 2, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_637E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 1, 27, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 10, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 2, 1, 2, 39, 2, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     eax, edx", "mov     [rbp+ch_0], al", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+options.right_quote], rax", "movsx   ecx, [rbp+ch_0]", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, ecx; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rcx, [rbp+options]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_6485"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "movsx~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 1], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     eax, esi", "mov     [rbp+ch_0], al", "movsx   edx, [rbp+ch_0]; ch_0", "mov     rax, [rbp+arg]", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "movsx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     esi, 3Ah ; ':'; ch_0", "mov     rdi, rax; arg", "call    quotearg_char", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rcx, [rbp+argsize]", "mov     rax, [rbp+arg]", "mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, rcx; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,<STR>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 2, 2, 1, 3, 43, 2, 4, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 90h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+var_90]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "mov     rax, qword ptr [rbp+var_90.style]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too]", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+8]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too+10h]", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+18h]", "mov     rdx, [rbp+var_90.left_quote]", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, [rbp+var_90.right_quote]", "mov     [rbp+options.right_quote], rax", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rdx, [rbp+options]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_65B6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 2, 5, 2, 3, 2, 3, 46, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_colon", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rsi, [rbp+left_quote]; left_quote", "mov     eax, [rbp+n]", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 1, 2, 40, 2, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     [rbp+argsize], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+o.style], rax", "mov     qword ptr [rbp+o.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+o.quote_these_too+8], rax", "mov     qword ptr [rbp+o.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+o.quote_these_too+18h], rax", "mov     [rbp+o.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+o.right_quote], rax", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rcx, [rbp+left_quote]", "lea     rax, [rbp+o]", "mov     rsi, rcx; left_quote", "mov     rdi, rax; o", "call    set_custom_quoting", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_66A6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 17, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rsi, [rbp+argsize]", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     r8, rsi; argsize", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 17, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, quote_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 14, 0.0, 1, 1], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rcx, [rbp+arg]", "mov     eax, [rbp+n]", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, rcx; arg", "mov     edi, eax; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rdx,0", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 13, 0.0, 0, 1], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 10, 0.0, 0, 1], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.30000000000000004, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_682E"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07500000000000001, ["mov     eax, 0", "jmp     short loc_681A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 7, 0, 0, 1, 2, 0.07500000000000001, ["mov     rdx, [rbp+statbuf.st_ino]", "mov     rax, [rbp+root_d_i]", "mov     [rax], rdx", "mov     rdx, [rbp+statbuf.st_dev]", "mov     rax, [rbp+root_d_i]", "mov     [rax+8], rdx", "mov     rax, [rbp+root_d_i]"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 5, 1, 1, 13, 2, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0B0h", "mov     [rbp+root_d_i], rdi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+statbuf]", "mov     rsi, rax; stat_buf", "lea     rdi, filename; filename", "call    lstat", "test    eax, eax", "jz      short loc_67F0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 3, 5, 1, 6, 6, 1, 28, 0.075, 2, 1], "succs": [[3, 5], [0], [0], [], [1, 2], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+name], rsi", "mov     [rbp+st], rdx", "mov     rdx, [rbp+st]; stat_buf", "mov     rsi, [rbp+name]; filename", "mov     eax, [rbp+fd]", "mov     ecx, 0; flag", "mov     edi, eax; fildes", "call    fstatat", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "statat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+name], rsi", "mov     [rbp+st], rdx", "mov     rdx, [rbp+st]; stat_buf", "mov     rsi, [rbp+name]; filename", "mov     eax, [rbp+fd]", "mov     ecx, 100h; flag", "mov     edi, eax; fildes", "call    fstatat", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 0, 1], "succs": [[]], "fname": "lstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 0, 1, 2, 2, 19, 0, 3, 0, 0, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 3", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 11, 1, 0, 8, 0, 1, 3, 2, 0.16666666666666666, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E6C4", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E6C4", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 0, 9, 0, 0, 4, 0, 0.0, ["nop", "lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["nop", "lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 1, 0, 2, 12, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 1", "mov     rbx, [rax]", "lea     rdi, aWrittenByS; \"Written by %s.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+stream]", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 1, 2, 15, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 2", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 3, 2, 23, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 4", "add     rax, 18h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r9, r14", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r9,r14", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [6, 1, 1, 6, 2, 29, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 5", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r13", "mov     r9, r15", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r13", "mov~r9,r15", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 2, 1, 6, 2, 33, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 6", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, r15", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,r15", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [6, 3, 1, 8, 2, 39, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 7", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_70], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, [rbp+var_70]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [6, 3, 1, 8, 2, 43, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 8", "add     rax, 38h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    [rbp+var_68]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_70]", "mov     r8, [rbp+var_78]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [9, 2, 1, 10, 2, 49, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 case 9", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdx, [rax]", "mov     [rbp+var_80], rdx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdx,<TAG>", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [9, 2, 1, 10, 2, 49, 0, 3, 3, 1, 0.016666666666666666, ["mov     rax, [rbp+authors]; jumptable 0000000000006979 default case", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdi, [rax]", "mov     [rbp+var_80], rdi", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     short loc_6E14"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,<TAG>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.0004166666666666667, ["nop; jumptable 0000000000006979 case 0"], ["nop"]], [3, 0, 13, 0, 4, 18, 0, 5, 2, 2, 0.1625, ["lea     rdi, aC; \"(C)\"", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     ecx, 7E3h", "lea     rsi, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "lea     rdi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     rsi, rax; stream", "mov     rdi, rdx; s", "call    _fputs_unlocked", "cmp     [rbp+n_authors], 9; switch 10 cases", "ja      loc_6D60; jumptable 0000000000006979 default case"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 14, 0, 1, 10, 0, 2, 1, 3, 0.029166666666666667, ["mov     rsi, [rbp+version]", "mov     rcx, [rbp+package]", "mov     rdx, [rbp+command_name]", "mov     rax, [rbp+stream]", "mov     r8, rsi", "lea     rsi, aSSS; \"%s (%s) %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     short loc_6901"], ["mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 1, 7, 0, 1, 1, 3, 0.029166666666666667, ["mov     rcx, [rbp+version]", "mov     rdx, [rbp+package]", "mov     rax, [rbp+stream]", "lea     rsi, aSS_1; \"%s %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [1, 1, 16, 1, 0, 16, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 58h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], r9", "cmp     [rbp+command_name], 0", "jz      short loc_68E1"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [26, 0, 40, 4, 17, 27, 2, 380, 0.02402, 16, 56], "succs": [[2], [0, 3, 4, 5, 6, 7, 8, 9, 10, 12], [], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [1, 11], [13], [13], [14, 15]], "fname": "version_etc_arn", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 3, 1, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], 0", "jmp     short loc_6E4F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 1, 0, 7, 1, 1, 0, 1, 0.5, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+authors]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_6E4A"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 3, 1, 0, 1, 0, 0, 0, 2, 0.0, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 1, 13, 0, 1, 0, 0, 0.0, ["mov     r8, [rbp+n_authors]", "mov     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "leave", "retn"], ["mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 31, 0.125, 0, 3], "succs": [[1], [2, 3], [1], []], "fname": "version_etc_ar", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 1, 14, 1, 2, 0, 0, 0.19444444444444442, ["mov     r8, [rbp+n_authors]", "lea     rdi, [rbp+authtab]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_6F93"], ["mov~r8,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, 2, 0.3055555555555555, ["cmp     [rbp+n_authors], 9", "ja      short loc_6F52"], ["cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 9, 0, 0, 7, 1, 1, 4, 2, 0.29166666666666663, ["mov     rdx, [rax]", "mov     rax, [rbp+n_authors]", "mov     [rbp+rax*8+authtab], rdx", "mov     rax, [rbp+n_authors]", "mov     rax, [rbp+rax*8+authtab]", "test    rax, rax", "jnz     short loc_6ED4"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 2, 4, 0.20833333333333331, ["mov     rax, [rbp+authors]", "mov     eax, [rax]", "cmp     eax, 2Fh ; '/'", "ja      short loc_6F1E"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 9, 1, 0, 12, 0, 1, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+authors]", "mov     eax, [rax]", "mov     eax, eax", "add     rax, rdx", "mov     rdx, [rbp+authors]", "mov     edx, [rdx]", "lea     ecx, [rdx+8]", "mov     rdx, [rbp+authors]", "mov     [rdx], ecx", "jmp     short loc_6F38"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~eax,eax", "add~rax,rdx", "mov~rdx,[rbp+0]", "mov~edx,<TAG>", "lea~ecx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,ecx", "jmp~FOO"]], [0, 0, 9, 0, 0, 5, 0, 0, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rax, [rax+8]", "lea     rcx, [rax+8]", "mov     rdx, [rbp+authors]", "mov     [rdx+8], rcx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rcx,[rax+0]", "mov~rdx,[rbp+0]", "mov~[rdx+0],rcx"]], [2, 0, 9, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+n_authors], 0", "jmp     short loc_6ED9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 3, 0.15277777777777776, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 3, 8, 1, 10, 12, 1, 61, 0.13056, 1, 3], "succs": [[9, 4], [0, 3], [0, 8], [5, 6], [], [2], [2], [1], [1], []], "fname": "version_etc_va", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 2, 0, 1, 21, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+authors.gp_offset], 20h ; ' '", "mov     [rbp+authors.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+authors.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+authors.reg_save_area], rax", "lea     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_va", "nop", "mov     rax, [rbp+var_B8]", "xor     rax, fs:28h", "jz      short locret_7073"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],<STR>", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 4, 1, 0, 11, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_6FEE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 43, 0.06667, 1, 1], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[4, 0, 0, 2, 6, 28, 0, 6, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "lea     rdi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "call    _gettext", "lea     rsi, aBugCoreutilsGn_0; \"bug-coreutils@gnu.org\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "lea     rdi, aSHomePageS; \"%s home page: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg_0; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, aGnuCoreutils_0; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 28, 0.0, 7, 2], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_2820", "leave", "retn"], ["movzx~eax,<TAG>", "leave", "retn"]], [2, 0, 2, 1, 0, 7, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "movzx   eax, cs:initialized_2819", "xor     eax, 1", "test    al, al", "jz      short loc_7123"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 1, 0, 1, 8, 1, 1, 1, 0, 0.0, ["mov     [rbp+can], 0", "call    _geteuid", "test    eax, eax", "setz    al", "mov     [rbp+can], al", "movzx   eax, [rbp+can]", "mov     cs:can_write_2820, al", "mov     cs:initialized_2819, 1"], ["mov~[rbp+0],0", "call~FOO", "test~eax,eax", "setz~al", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~<TAG>,al", "mov~<TAG>,0"]]], "func_feature": [1, 3, 2, 0, 3, 3, 1, 18, 0.0, 2, 1], "succs": [[], [0, 2], [0]], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 2, 0, 0, 4, 2, 1, 0, 0, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_7169"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 1, 2, 0.26666666666666666, ["test    rax, rax", "jns     short loc_715A"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 6, 2, 0, 9, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_7150"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 1, 1, 6, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 3, 3, 0, 7, 8, 0, 24, 0.07619, 0, 3], "succs": [[3, 6], [0, 2], [0], [], [1, 5], [1], []], "fname": "xnmalloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 4, 0, 0, 2, 1, 0, 0, 0, 0.26666666666666666, ["test    rax, rax", "jns     short loc_71AE"], ["test~rax,rax", "jns~FOO"]], [1, 1, 6, 2, 0, 10, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "mov     [rbp+s], rdx", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_71A4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 2, 0, 0, 4, 2, 1, 2, 1, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_71BD"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 9, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 3, 3, 0, 7, 8, 0, 28, 0.07619, 0, 3], "succs": [[3, 4], [0, 2], [0], [4], [5, 6], [], []], "fname": "xnrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 4, 0, 0, 2, 1, 0, 3, 2, 0.14393939393939395, ["test    rax, rax", "jns     short loc_7246"], ["test~rax,rax", "jns~FOO"]], [2, 1, 7, 2, 0, 8, 0, 0, 2, 4, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     [rbp+s]", "mov     [rbp+n], rax", "cmp     [rbp+n], 0", "setz    al", "movzx   eax, al", "add     [rbp+n], rax"], ["mov~eax,<STR>", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "add~[rbp+0],rax"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 4, 0.05303030303030303, ["cmp     [rbp+n], 0", "jnz     short loc_7228"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 12, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     [rbp+s], rdx", "mov     rax, [rbp+pn]", "mov     rax, [rax]", "mov     [rbp+n], rax", "cmp     [rbp+p], 0", "jnz     short loc_7255"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 1, 2, 0, 7, 0, 0, 2, 1, 0.015151515151515152, ["mov     rax, [rbp+n]", "shr     rax, 1", "mov     rdx, rax", "mov     rax, [rbp+n]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+n], rax"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 2, 0.022727272727272728, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     [rbp+s]", "cmp     [rbp+n], rax", "jb      short loc_7273"], ["mov~rax,0", "mov~edx,0", "div~,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 2, 0, 0, 4, 2, 1, 4, 1, 0.09848484848484848, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_728C"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 12, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+pn]", "mov     rdx, [rbp+n]", "mov     [rax], rdx", "mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 0, 6, 1, 0, 4, 0, 0, 2, 3, 0.12878787878787878, ["mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_723C"], ["mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 3, 6, 0, 13, 16, 1, 59, 0.03555, 0, 8], "succs": [[7], [0, 7], [10], [2, 10], [3, 6], [9], [12, 5], [8, 9], [], [], [1, 11], [1], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 9, 0.0, 0, 1], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0.16666666666666666, ["cmp     [rbp+n], 0", "jz      short loc_72FD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [1, 1, 3, 1, 1, 10, 0, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; size", "call    _malloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_72FD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 4, 4, 4, 16, 0.04167, 0, 1], "succs": [[], [0, 2], [], [1, 2]], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.04464285714285714, ["mov     rax, [rbp+p]"], ["mov~rax,[rbp+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 3, 0.03571428571428571, ["cmp     [rbp+p], 0", "jz      short loc_7334"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.026785714285714284, ["mov     rdi, rax; ptr", "call    free", "mov     eax, 0", "jmp     short locret_7362"], ["mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.0625, ["mov     rax, [rbp+p]"], ["mov~rax,[rbp+0]"]], [1, 0, 4, 0, 1, 8, 0, 2, 1, 2, 0.13392857142857142, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+p]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_735E"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 8, 1, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "cmp     [rbp+n], 0", "jnz     short loc_7334"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.05357142857142857, ["cmp     [rbp+n], 0", "jz      short loc_735E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 0, 8, 0, 9, 11, 3, 28, 0.03968, 0, 1], "succs": [[3], [0, 5], [], [2], [2], [4, 7], [1, 5], [8, 4], []], "fname": "xrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     rcx, [rbp+pn]", "mov     rax, [rbp+p]", "mov     edx, 1; s", "mov     rsi, rcx; pn", "mov     rdi, rax; p", "call    x2nrealloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "x2realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 1, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], rdi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rax, [rbp+s]", "mov     rdx, rax; n", "mov     esi, 0; c", "mov     rdi, rcx; s", "call    _memset", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 0, 0, 0, 0.23809523809523808, ["test    rax, rax", "jns     short loc_73ED"], ["test~rax,rax", "jns~FOO"]], [1, 1, 7, 2, 0, 9, 0, 0, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_73E3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 1, 4, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 2, 0, 1, 8, 0, 2, 3, 1, 0.11904761904761904, ["mov     rdx, [rbp+s]", "mov     rax, [rbp+n]", "mov     rsi, rdx; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_741A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 2, 2, 0.2857142857142857, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jnz     short loc_7415"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 4, 0, 8, 10, 0, 29, 0.08036, 0, 2], "succs": [[3, 5], [0, 2], [0], [5], [6, 7], [4, 7], [], []], "fname": "xcalloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 2, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+s], rsi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rdx, [rbp+s]; n", "mov     rax, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    _memcpy", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 16, 0.0, 0, 1], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 2, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+string], rdi", "mov     rax, [rbp+string]", "mov     rdi, rax; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     rax, [rbp+string]", "mov     rsi, rdx; s", "mov     rdi, rax; p", "call    xmemdup", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 0, 3, 13, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, aMemoryExhauste; \"memory exhausted\"", "call    _gettext", "mov     rdx, rax", "mov     eax, cs:exit_failure", "mov     rcx, rdx", "lea     rdx, off_E800; format", "mov     esi, 0; errnum", "mov     edi, eax; status", "mov     eax, 0", "call    _error", "call    _abort"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~eax,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 10, 13, 0.0, 3, 0], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 0, 4, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+argv], rdi", "mov     [rbp+options], esi", "mov     [rbp+compar], rdx", "mov     eax, [rbp+options]", "or      ah, 2", "mov     ecx, eax", "mov     rdx, [rbp+compar]", "mov     rax, [rbp+argv]", "mov     esi, ecx", "mov     rdi, rax", "call    rpl_fts_open", "mov     [rbp+fts], rax", "cmp     [rbp+fts], 0", "jnz     short loc_7522"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~eax,[rbp+0]", "or~ah,0", "mov~ecx,eax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 0, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3260; \"xfts_open\"", "mov     edx, 29h ; ')'; line", "lea     rsi, aLibXftsC; \"lib/xfts.c\"", "lea     rdi, aErrnoEinval; \"errno != EINVAL\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 2, 0, 1, 4, 0, 2, 0, -1, 0.16666666666666666, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jnz     short loc_751D"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+fts]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [4, 1, 6, 0, 5, 4, 1, 30, 0.03333, 3, 1], "succs": [[2, 4], [], [1, 3], [], []], "fname": "xfts_open", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 7, 0, 0, 9, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_7550"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.07142857142857142, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 5, 2, 1, 0, 2, 0.15476190476190477, ["mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_7580"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 2, 1, 0, 2, 0.09523809523809523, ["mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_7580"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.047619047619047616, ["mov     rax, [rbp+ent]", "mov     rax, [rax+58h]", "test    rax, rax", "jz      short loc_7580"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.047619047619047616, ["mov     eax, 1", "jmp     short loc_7585"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 5, 2, 1, 0, 2, 0.03571428571428571, ["mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_7579"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]]], "func_feature": [0, 10, 6, 0, 8, 12, 0, 34, 0.05655, 0, 0], "succs": [[2, 7], [5], [1, 3], [1, 4], [1, 6], [], [5], [2, 6]], "fname": "cycle_warning_required", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 4, 2, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+response]", "mov     rdx, [rbp+response_len]", "sub     rdx, 1", "add     rax, rdx", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "sub~rdx,0", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 5, 2, 0, 7, 0, 1, 1, 3, 0.047619047619047616, ["mov     rax, [rbp+response]", "mov     rdx, [rbp+response_len]", "sub     rdx, 1", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 0Ah", "jnz     short loc_7604"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "sub~rdx,0", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [4, 0, 7, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+response], 0", "mov     [rbp+response_size], 0", "mov     rdx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rcx, [rbp+response_size]", "lea     rax, [rbp+response]", "mov     rsi, rcx; n", "mov     rdi, rax; lineptr", "call    _getline", "mov     [rbp+response_len], rax", "cmp     [rbp+response_len], 0", "jg      short loc_75DC"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rdx,<TAG>", "lea~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jg~FOO"]], [0, 0, 3, 0, 1, 6, 1, 1, 2, 2, 0.14285714285714285, ["mov     rax, [rbp+response]", "mov     rdi, rax; response", "call    _rpmatch", "test    eax, eax", "setnle  al", "mov     [rbp+yes], al"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnle~al", "mov~[rbp+0],al"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 7, 1, 2, 2, 1, 0.23809523809523808, ["mov     rax, [rbp+response]", "mov     rdi, rax; ptr", "call    free", "movzx   eax, [rbp+yes]", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_763C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "movzx~eax,[rbp+0]", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07142857142857142, ["mov     [rbp+yes], 0", "jmp     short loc_7618"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 3, 8, 1, 8, 9, 2, 47, 0.0625, 2, 5], "succs": [[3], [0, 3], [1, 6], [5], [], [4, 7], [5], []], "fname": "yesno", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [2, 0, 2, 1, 0, 9, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fp], rdi", "mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 100h", "test    eax, eax", "jz      short loc_766F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 1, 0, 1, 5, 0, 1, 1, 0, 0.0, ["mov     rax, [rbp+fp]", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rax; fp", "call    rpl_fseeko"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO"]]], "func_feature": [1, 2, 2, 0, 3, 3, 1, 17, 0.0, 0, 1], "succs": [[], [0, 2], [0]], "fname": "clear_ungetc_buffer_preserving_position", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.125, ["mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush", "jmp     short locret_76BB"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 4, 1, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+stream], rdi", "cmp     [rbp+stream], 0", "jz      short loc_7695"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 1, 2, 0.08333333333333333, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jnz     short loc_76A3"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 2, 6, 0, 2, 2, 1, 0.041666666666666664, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    clear_ungetc_buffer_preserving_position", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [4, 1, 7, 0, 5, 6, 2, 23, 0.05, 0, 1], "succs": [[3], [0, 2], [0, 4], [], [3]], "fname": "rpl_fflush", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.05, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 4, 1, 0, 11, 2, 1, 1, 3, 0.1, ["mov     rax, [rbp+fp]", "mov     rax, [rax+10h]", "mov     rdx, rax", "mov     rax, [rbp+fp]", "mov     rax, [rax+8]", "sub     rdx, rax", "mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 100h", "test    eax, eax", "jz      short loc_7721"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 0, 9, 0, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+fp], rdi", "mov     rax, [rbp+fp]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+20h]", "cmp     rdx, rax", "jbe     short loc_76E1"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jbe~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 3, 1, 0.1, ["add     rax, rdx"], ["add~rax,rdx"]], [0, 0, 2, 1, 0, 8, 0, 1, 2, 2, 0.05, ["mov     rax, [rbp+fp]", "mov     rax, [rax+58h]", "mov     rcx, rax", "mov     rax, [rbp+fp]", "mov     rax, [rax+48h]", "sub     rcx, rax", "mov     rax, rcx", "jmp     short loc_7726"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rcx,rax", "mov~rax,rcx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.03333333333333333, ["mov     eax, 0", "jmp     short loc_7729"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 2, 3, 0, 7, 8, 1, 34, 0.04762, 0, 3], "succs": [[3], [0, 4], [1, 6], [5], [3], [], [5]], "fname": "freadahead", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_77E3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 2, 12, 0, 3, 3, 2, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     ecx, eax", "mov     edx, [rbp+whence]; whence", "mov     rax, [rbp+offset]", "mov     rsi, rax; offset", "mov     edi, ecx; fd", "call    _lseek", "mov     [rbp+pos], rax", "cmp     [rbp+pos], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_77A6"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~ecx,eax", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,ecx", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 6, 0, 1, 1, 2, 0.09523809523809523, ["mov     rax, [rbp+fp]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+20h]", "cmp     rdx, rax", "jnz     short loc_77CD"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 7, 1, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fp], rdi", "mov     [rbp+offset], rsi", "mov     [rbp+whence], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_77CD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [2, 0, 1, 0, 0, 11, 1, 1, 4, 1, 0.011904761904761904, ["mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 0FFFFFFEFh", "mov     edx, eax", "mov     rax, [rbp+fp]", "mov     [rax], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rbp+pos]", "mov     [rax+90h], rdx", "mov     eax, 0", "jmp     short locret_77E3"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 2, 2, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rax, [rax+48h]", "test    rax, rax", "jnz     short loc_77CD"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 6, 0, 1, 1, 1, 0.07142857142857142, ["mov     edx, [rbp+whence]; whence", "mov     rcx, [rbp+offset]", "mov     rax, [rbp+fp]", "mov     rsi, rcx; off", "mov     rdi, rax; stream", "call    _fseeko"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]]], "func_feature": [3, 2, 9, 0, 8, 11, 2, 55, 0.05952, 0, 1], "succs": [[6], [0, 4], [5, 7], [2, 7], [6], [1, 7], [], [6]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 4, 0, 0, 14, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+y]", "mov     [rbp+ay], rax", "mov     rax, [rbp+ax_0]", "mov     rdx, [rax+8]", "mov     rax, [rbp+ay]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_7830"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 1, 2, 0.08333333333333333, ["mov     rax, [rbp+ax_0]", "mov     rdx, [rax]", "mov     rax, [rbp+ay]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_7830"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.041666666666666664, ["mov     eax, 1", "jmp     short loc_7835"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 26, 0.05, 0, 0], "succs": [[3], [0, 2], [0, 4], [], [3]], "fname": "AD_compare", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 0, 13, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+ax_0]", "mov     rax, [rax+8]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.019841269841269837, ["mov     eax, 0", "jmp     short locret_7904"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 14, 1, 2, 1, 2, 0.06349206349206349, ["mov     rax, cs:data_freer", "mov     r8, rax; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "mov     rdx, rax", "mov     rax, [rbp+fts]", "mov     [rax+58h], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_78FF"], ["mov~rax,<TAG>", "mov~r8,rax", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.031746031746031744, ["mov     eax, 0", "jmp     short locret_7904"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.04365079365079365, ["mov     eax, 1"], ["mov~eax,0"]], [0, 1, 4, 0, 1, 9, 1, 2, 1, 2, 0.055555555555555546, ["mov     edi, 20h ; ' '; size", "call    _malloc", "mov     rdx, rax", "mov     rax, [rbp+fts]", "mov     [rax+58h], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_78EF"], ["mov~edi,<STR>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 7, 1, 0, 9, 2, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fts], rdi", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      short loc_78C6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 2, 2, 0.023809523809523808, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdi, rax; state", "call    cycle_check_init"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [3, 4, 8, 0, 8, 10, 2, 43, 0.02976, 3, 1], "succs": [[2], [0, 4], [], [2], [2], [3, 7], [1, 5], [4]], "fname": "setup_dir", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 1, 21, 0, 2, 0, 0, 0.07777777777777778, ["mov     rax, [rbp+st]", "mov     rdx, [rax]", "mov     rax, [rbp+ad]", "mov     [rax], rdx", "mov     rax, [rbp+st]", "mov     rdx, [rax+8]", "mov     rax, [rbp+ad]", "mov     [rax+8], rdx", "mov     rax, [rbp+ad]", "mov     rdx, [rbp+ent]", "mov     [rax+10h], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rbp+ad]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_insert", "mov     [rbp+ad_from_table], rax", "mov     rax, [rbp+ad_from_table]", "cmp     rax, [rbp+ad]", "jz      short loc_7A0D"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [3, 0, 7, 1, 1, 8, 0, 2, 1, 2, 0.061111111111111116, ["mov     rax, [rbp+ent]", "add     rax, 78h", "mov     [rbp+st], rax", "mov     edi, 18h; size", "call    _malloc", "mov     [rbp+ad], rax", "cmp     [rbp+ad], 0", "jnz     short loc_7955"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 10, 1, 0, 10, 2, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      loc_79D9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 5, 0, 0, 2, 2, 0.0, ["mov     rax, [rbp+ent]", "mov     rdx, [rbp+ent]", "mov     [rax], rdx", "mov     rax, [rbp+ent]", "mov     word ptr [rax+70h], 2"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0"]], [0, 0, 3, 0, 1, 9, 1, 2, 1, 2, 0.02777777777777778, ["mov     rax, [rbp+ent]", "lea     rdx, [rax+78h]", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rsi, rdx; sb", "mov     rdi, rax; state", "call    cycle_check", "test    al, al", "jz      short loc_7A0D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 2, 0, 0, 7, 0, 1, 4, 2, 0.011111111111111112, ["mov     rax, [rbp+ad_from_table]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+ent]", "mov     [rax], rdx", "mov     rax, [rbp+ent]", "mov     word ptr [rax+70h], 2", "jmp     short loc_7A0D"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.016666666666666666, ["mov     eax, 0", "jmp     locret_7A12"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.011111111111111112, ["mov     eax, 0", "jmp     short locret_7A12"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 3, 2, 0.06666666666666667, ["mov     rax, [rbp+ad]", "mov     rdi, rax; ptr", "call    free", "cmp     [rbp+ad_from_table], 0", "jnz     short loc_79BE"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [4, 3, 12, 0, 11, 15, 2, 72, 0.02929, 0, 2], "succs": [[10, 5], [0, 7], [1, 4], [5], [3, 5], [8], [5], [8], [], [8], [9, 6]], "fname": "enter_dir", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 7, 0, 0, 5, 1, 1, 0, 0, 0.07692307692307693, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_7AD4"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 2, 2, 0.0641025641025641, ["mov     rax, [rbp+parent]", "mov     rax, [rax+58h]", "test    rax, rax", "js      short loc_7B2E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.11538461538461538, ["nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_7B43"], ["nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 5, 0, 1, 15, 0, 2, 1, 3, 0.01282051282051282, ["mov     rax, [rbp+st]", "mov     rax, [rax]", "mov     [rbp+obj.dev], rax", "mov     rax, [rbp+st]", "mov     rax, [rax+8]", "mov     [rbp+obj.ino], rax", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "lea     rdx, [rbp+obj]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_delete", "mov     [rbp+found], rax", "cmp     [rbp+found], 0", "jnz     short loc_7A8D"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 13, 2, 0, 16, 3, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+fts], rdi", "mov     [rbp+ent], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+ent]", "add     rax, 78h", "mov     [rbp+st], rax", "mov     rax, [rbp+fts]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      short loc_7A9E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 2, 2, 0.019230769230769232, ["mov     rax, [rbp+found]", "mov     rdi, rax; ptr", "call    free", "jmp     loc_7B2E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 0, 5, 0, 1, 1, 2, 0.05769230769230769, ["mov     rax, [rbp+ent]", "mov     rax, [rax+8]", "mov     [rbp+parent], rax", "cmp     [rbp+parent], 0", "jz      short loc_7B2E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 7, 0, 1, 4, 2, 0.07051282051282051, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rax]", "mov     rax, [rbp+st]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_7B2E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 7, 0, 1, 5, 2, 0.03205128205128205, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rax+8]", "mov     rax, [rbp+st]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_7B2E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 10, 0, 0, 6, 2, 0.0, ["mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rbp+parent]", "mov     rdx, [rdx+78h]", "mov     [rax+8], rdx", "mov     rax, [rbp+fts]", "mov     rax, [rax+58h]", "mov     rdx, [rbp+parent]", "mov     rdx, [rdx+80h]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~<TAG>,rdx"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 6, 14, 1, 14, 18, 4, 82, 0.03205, 1, 2], "succs": [[9, 12], [0, 3], [], [2, 13], [6, 7], [8, 4], [], [3], [1, 3], [10, 3], [11, 3], [3], [], []], "fname": "leave_dir", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 0, 0.125, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+58h]", "test    rax, rax", "jz      short loc_7B90"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 2, 0, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+58h]", "mov     rdi, rax; table", "call    hash_free", "jmp     short loc_7B90"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 1, 0, 0.041666666666666664, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+58h]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]], [2, 0, 4, 1, 0, 9, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+sp_0], rdi", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 102h", "test    eax, eax", "jz      short loc_7B80"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 2, 25, 0.03333, 0, 1], "succs": [[], [0, 2], [0], [0], [1, 3]], "fname": "free_dir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 0, 1, 6, 2, 2, 0, 0, 0.5, ["mov     rax, [rbp+fd_ring]", "mov     rdi, rax; ir", "call    i_ring_empty", "xor     eax, 1", "test    al, al", "jnz     short loc_7BA1"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 1, 4, 1, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd_ring], rdi", "jmp     short loc_7BC0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 2, 2, 0.16666666666666666, ["mov     rax, [rbp+fd_ring]", "mov     rdi, rax; ir", "call    i_ring_pop", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "js      short loc_7BC0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 3, 2, 0.0, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]]], "func_feature": [3, 2, 6, 0, 5, 6, 2, 23, 0.13333, 0, 1], "succs": [[2, 4], [0], [0, 3], [0], []], "fname": "fd_ring_clear", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05, ["mov     edx, 2", "jmp     short loc_7C0C"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.15000000000000002, ["cmp     [rbp+required], 0", "jz      short loc_7C07"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05, ["mov     edx, 1"], ["mov~edx,0"]], [2, 0, 5, 1, 0, 10, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     eax, esi", "mov     [rbp+required], al", "mov     rax, [rbp+p]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 0Bh", "jz      short loc_7BFA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+p]", "mov     [rax+0A8h], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~[rax+0],rdx", "nop", "leave", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 2, 21, 0.04167, 0, 1], "succs": [[5], [0, 2], [5], [1, 4], [], []], "fname": "fts_set_stat_required", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.013888888888888888, ["cmp     [rbp+old], 0FFFFFF9Ch", "jz      short loc_7C4B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 9, 1, 0, 13, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+fd], esi", "mov     eax, edx", "mov     [rbp+chdir_down_one], al", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     [rbp+old], eax", "mov     eax, [rbp+old]", "cmp     eax, [rbp+fd]", "jnz     short loc_7C4B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+sp_0]", "mov     edx, [rbp+fd]", "mov     [rax+2Ch], edx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "nop", "leave", "retn"]], [1, 0, 2, 0, 1, 9, 0, 2, 2, 1, 0.0625, ["mov     rax, [rbp+sp_0]", "lea     rdx, [rax+60h]", "mov     eax, [rbp+old]", "mov     esi, eax; val", "mov     rdi, rdx; ir", "call    i_ring_push", "mov     [rbp+prev_fd_in_slot], eax", "cmp     [rbp+prev_fd_in_slot], 0", "js      short loc_7C99"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~rdi,rdx", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.0, ["mov     eax, [rbp+prev_fd_in_slot]", "mov     edi, eax; fd", "call    _close", "jmp     short loc_7C99"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 2, 1, 2, 1, 0.10416666666666666, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_7C99"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, 1, 0.05555555555555555, ["cmp     [rbp+old], 0", "js      short loc_7C99"], ["cmp~[rbp+0],0", "js~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 4, 1, 0.0, ["mov     eax, [rbp+old]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.16666666666666666, ["cmp     [rbp+chdir_down_one], 0", "jz      short loc_7C7B"], ["cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [4, 2, 11, 0, 10, 14, 4, 47, 0.04028, 0, 1], "succs": [[8, 9], [0, 9], [], [2, 4], [2], [2, 6], [2, 7], [2], [], [3, 5]], "fname": "cwd_advance_fd", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 2, 0, 1, 6, 0, 2, 0, 0, 0.05176767676767677, ["mov     rcx, [rbp+sp_0]", "mov     edx, 1; chdir_down_one", "mov     esi, eax; fd", "mov     rdi, rcx; sp_0", "call    cwd_advance_fd", "jmp     short loc_7D33"], ["mov~rcx,[rbp+0]", "mov~edx,0", "mov~esi,eax", "mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 3, 3, 0.022095959595959596, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "jmp     short loc_7CEE"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 3, 0.022095959595959596, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [0, 1, 5, 0, 0, 5, 2, 1, 2, 4, 0.05176767676767677, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_7CE9"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, 2, 0.09217171717171717, ["mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_7D33"], ["mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 3, 3, 0.034722222222222224, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "jmp     short loc_7D21"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 3, 3, 0.034722222222222224, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.017676767676767676, ["mov     eax, 1", "jmp     short loc_7D38"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 11, 0, 0, 5, 2, 1, 1, 5, 0.06818181818181818, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_7D03"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 1, 12, 1, 0, 9, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_7D33"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 1, 8, 0, 1, 2, 0, 0.0, ["mov     [rbp+fail], eax", "mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; fd_ring", "call    fd_ring_clear", "mov     eax, [rbp+fail]", "leave", "retn"], ["mov~[rbp+0],eax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.05808080808080809, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 6, 0, 0, 5, 2, 1, 2, 4, 0.06944444444444445, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_7D1C"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]]], "func_feature": [3, 9, 12, 0, 13, 17, 3, 53, 0.04021, 0, 2], "succs": [[11], [0], [0], [1, 2], [11, 7], [4], [4], [10], [3, 12], [8, 11], [], [10], [5, 6]], "fname": "restore_initial_cwd", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     [rbp+fd], eax", "mov     eax, [rbp+fd]", "leave", "retn"], ["mov~[rbp+0],eax", "mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 1, 0, 1, 9, 0, 2, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     edx, [rbp+open_flags]; flags", "mov     rcx, [rbp+dir]", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    openat_safer", "jmp     short loc_7DBC"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 6, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, [rbp+open_flags]", "mov     rax, [rbp+dir]", "mov     esi, edx; flags", "mov     rdi, rax; file", "mov     eax, 0", "call    open_safer"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [3, 2, 3, 2, 0, 16, 4, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+dir], rsi", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "shl     eax, 0Dh", "and     eax, 20000h", "or      eax, 90900h", "mov     [rbp+open_flags], eax", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_7DA6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "shl~eax,0", "and~eax,0", "or~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]]], "func_feature": [2, 4, 4, 0, 4, 4, 5, 35, 0.04167, 0, 2], "succs": [[], [0], [0], [1, 2]], "fname": "diropen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.003446115288220551, ["nop"], ["nop"]], [4, 0, 46, 0, 2, 14, 2, 3, 5, 3, 0.09931077694235588, ["mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "mov     rax, [rbp+argv]", "mov     rdi, rax; argv", "call    fts_maxarglen", "mov     [rbp+maxarglen], rax", "mov     eax, 1000h", "cmp     [rbp+maxarglen], 1000h", "cmovnb  rax, [rbp+maxarglen]", "mov     rsi, rax; more", "mov     rdi, sp_0; sp_0", "call    fts_palloc", "xor     eax, 1", "test    al, al", "jnz     loc_8180"], ["mov~[word ptr [sp_0+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovnb~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 36, 0, 0, 3, 0, 0, 17, 8, 0.005169172932330827, ["mov     rax, [rbp+tmp]", "mov     [rax+10h], p", "mov     [rbp+tmp], p"], ["mov~rax,[rbp+0]", "mov~[rax+0],p", "mov~[rbp+0],p"]], [1, 0, 36, 0, 0, 3, 1, 1, 16, 9, 0.020676691729323307, ["mov     qword ptr [p+10h], 0", "test    root, root", "jnz     short loc_807A"], ["mov~[word ptr [p+0],0", "test~root,root", "jnz~FOO"]], [3, 0, 10, 0, 1, 11, 2, 2, 13, 3, 0.07988721804511278, ["mov     rax, [sp_0]", "mov     [rax+10h], root", "mov     rax, [sp_0]", "mov     word ptr [rax+70h], 9", "mov     rax, [sp_0]", "mov     qword ptr [rax+58h], 1", "mov     rdi, sp_0; fts", "call    setup_dir", "xor     eax, 1", "test    al, al", "jnz     short loc_815A"], ["mov~rax,<TAG>", "mov~[rax+0],root", "mov~rax,<TAG>", "mov~[ord ptr [rax+0],0", "mov~rax,<TAG>", "mov~[word ptr [rax+0],0", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 12, 0, 1, 8, 1, 2, 12, 4, 0.11387844611528822, ["mov     edx, 0", "lea     rsi, unk_E834", "mov     rdi, sp_0", "call    fts_alloc", "mov     [sp_0], rax", "mov     rax, [sp_0]", "test    rax, rax", "jz      short loc_8157"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 7, 1, 1, 16, 2, 0.013157894736842105, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [sp_0+28h], eax", "mov     eax, [sp_0+28h]", "test    eax, eax", "jns     short loc_813E"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],eax", "mov~eax,[sp_0+0]", "test~eax,eax", "jns~FOO"]], [0, 1, 4, 0, 0, 4, 2, 1, 15, 2, 0.02568922305764411, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_813E"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 1, 9, 2, 2, 11, 6, 0.15178571428571427, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     eax, r14d", "and     eax, 800h", "test    eax, eax", "jnz     short loc_7FD9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,r14d", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 36, 0, 0, 4, 1, 1, 10, 6, 0.29793233082706766, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_7F6E"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.0003132832080200501, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_818E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [3, 1, 57, 1, 0, 17, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    nitems", "push    options", "push    root", "push    p", "push    sp_0", "sub     rsp, 48h", "mov     [rbp+argv], rdi", "mov     r14d, esi", "mov     [rbp+compar], rdx", "mov     [rbp+parent], 0", "mov     [rbp+tmp], 0", "mov     eax, r14d", "and     eax, 0FFFFF000h", "test    eax, eax", "jz      short loc_7E11"], ["push~rbp", "mov~rbp,rsp", "push~nitems", "push~options", "push~root", "push~p", "push~sp_0", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~r14d,esi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,r14d", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 0, 4, 2, 1, 14, 2, 0.05701754385964912, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_813E"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [2, 0, 43, 0, 1, 7, 0, 2, 7, 4, 0.009085213032581453, ["mov     edx, 0", "lea     rsi, unk_E834", "mov     rdi, sp_0", "call    fts_alloc", "mov     [rbp+parent], rax", "cmp     [rbp+parent], 0", "jz      loc_8171"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 44, 0, 0, 4, 1, 1, 6, 5, 0.10526315789473684, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_7F37"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 55, 0, 0, 4, 2, 1, 1, 3, 0.016917293233082706, ["mov     eax, r14d", "and     eax, 4", "test    eax, eax", "jz      short loc_7E3C"], ["mov~eax,r14d", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 2, 6, 0, 3, 14, 3, 0.02412280701754386, ["mov     rdi, root", "call    fts_lfree", "mov     rax, [rbp+parent]", "mov     rdi, rax; ptr", "call    free", "jmp     short mem2"], ["mov~rdi,root", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 13, 4, 0.019580200501253132, ["nop", "jmp     short mem3"], ["nop", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 13, 4, 0.01331453634085213, ["nop", "jmp     short mem3"], ["nop", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 4, 0.0009398496240601503, ["nop"], ["nop"]], [1, 0, 36, 0, 0, 5, 0, 0, 12, 6, 0.047619047619047616, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     [rbp+v], rax", "cmp     [rbp+len], 2", "jbe     short loc_7FD9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [2, 0, 36, 0, 0, 7, 0, 1, 13, 11, 0.1237468671679198, ["mov     qword ptr [p+58h], 0", "mov     rax, [rbp+parent]", "mov     [p+8], rax", "lea     rax, [p+108h]", "mov     [p+30h], rax", "cmp     [rbp+defer_stat], 0", "jz      short loc_803C"], ["mov~[word ptr [p+0],0", "mov~rax,[rbp+0]", "mov~[p+0],rax", "lea~rax,[p+0]", "mov~[p+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 36, 0, 1, 9, 1, 2, 12, 5, 0.15397869674185463, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdx, [rbp+len]", "mov     rsi, rax", "mov     rdi, sp_0", "call    fts_alloc", "mov     p, rax; head", "test    p, p", "jz      loc_8154"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~p,rax", "test~p,p", "jz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 7, 1, 0.006265664160401002, ["mov     rdi, sp_0; ptr", "call    free", "mov     eax, 0"], ["mov~rdi,sp_0", "call~FOO", "mov~eax,0"]], [0, 0, 2, 0, 1, 4, 0, 2, 9, 2, 0.016290726817042606, ["mov     rax, [sp_0+20h]", "mov     rdi, rax; ptr", "call    free", "jmp     short mem1"], ["mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 14, 11, 0.010338345864661654, ["test    root, root", "jz      short loc_803C"], ["test~root,root", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 11, 5, 0.13549498746867167, ["cmp     [rbp+compar], 0", "jz      short loc_80BD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 54, 0, 0, 4, 2, 1, 2, 2, 0.0007832080200501253, ["mov     eax, r14d", "and     eax, 200h", "test    eax, eax", "jz      short loc_7E3C"], ["mov~eax,r14d", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 1, 5, 0, 1, 13, 5, 0.0, ["mov     rdx, nitems", "mov     rsi, root", "mov     rdi, sp_0", "call    fts_sort", "mov     root, rax"], ["mov~rdx,nitems", "mov~rsi,root", "mov~rdi,sp_0", "call~FOO", "mov~root,rax"]], [1, 0, 14, 0, 0, 2, 0, 0, 12, 5, 0.011278195488721804, ["cmp     nitems, 1", "jbe     short loc_80BD"], ["cmp~nitems,0", "jbe~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "pop     sp_0", "pop     p", "pop     root", "pop     options", "pop     nitems", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~sp_0", "pop~p", "pop~root", "pop~options", "pop~nitems", "pop~rbp", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.00046992481203007516, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_818E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.00046992481203007516, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_818E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.0003132832080200501, ["mov     eax, 0", "jmp     loc_818E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 15, 1, 0.008145363408521303, ["lea     rax, [sp_0+60h]", "mov     esi, 0FFFFFFFFh; default_val", "mov     rdi, rax; ir", "call    i_ring_init", "mov     rax, sp_0", "jmp     short loc_818E"], ["lea~rax,[sp_0+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,sp_0", "jmp~FOO"]], [2, 0, 47, 0, 0, 6, 2, 0, 5, 4, 0.0, ["mov     eax, [sp_0+48h]", "or      eax, 4", "mov     [sp_0+48h], eax", "mov     eax, [sp_0+48h]", "and     ah, 0FDh", "mov     [sp_0+48h], eax"], ["mov~eax,[sp_0+0]", "or~eax,0", "mov~[sp_0+0],eax", "mov~eax,[sp_0+0]", "and~ah,0", "mov~[sp_0+0],eax"]], [2, 1, 48, 0, 1, 11, 2, 2, 4, 4, 0.07362155388471178, ["mov     edx, 80h; n", "mov     esi, 0; c", "mov     rdi, sp_0; s", "call    _memset", "mov     rax, [rbp+compar]", "mov     [sp_0+40h], rax", "mov     [sp_0+48h], r14d", "mov     eax, [sp_0+48h]", "and     eax, 2", "test    eax, eax", "jz      short loc_7EB1"], ["mov~edx,<STR>", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~rax,[rbp+0]", "mov~[sp_0+0],rax", "mov~[sp_0+0],r14d", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 41, 0, 0, 4, 0, 0, 8, 10, 0.011904761904761904, ["mov     rax, [rbp+parent]", "mov     qword ptr [rax+58h], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+parent]", "mov     qword ptr [rax+68h], 0FFFFFFFFFFFFFFFFh"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [1, 0, 36, 1, 0, 7, 0, 1, 13, 6, 0.03853383458646616, ["mov     rax, [rbp+len]", "lea     rdx, [rax-1]", "mov     rax, [rbp+v]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_7FD9"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 7, 0.02913533834586466, ["jmp     short loc_7FBC"], ["jmp~FOO"]], [2, 0, 36, 0, 1, 5, 0, 2, 15, 10, 0.005169172932330827, ["mov     word ptr [p+70h], 0Bh", "mov     esi, 1; required", "mov     rdi, p; p", "call    fts_set_stat_required", "jmp     short loc_8052"], ["mov~[ord ptr [p+0],0", "mov~esi,0", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 1, 0, 17, 2, 0.0, ["mov     eax, [sp_0+48h]", "or      eax, 4", "mov     [sp_0+48h], eax"], ["mov~eax,[sp_0+0]", "or~eax,0", "mov~[sp_0+0],eax"]], [1, 0, 40, 0, 0, 2, 0, 1, 7, 9, 0.12844611528822053, ["cmp     [rbp+compar], 0", "jz      short loc_7F4A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 0, 15, 6, 0.040726817042606514, ["cmp     [rbp+len], 1", "jbe     short loc_7FD9"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 36, 1, 0, 1, 0, 0, 17, 7, 0.0003132832080200501, ["sub     [rbp+len], 1"], ["sub~[rbp+0],0"]], [1, 0, 36, 0, 0, 2, 0, 1, 15, 9, 0.125, ["cmp     [rbp+compar], 0", "jz      short loc_8063"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 36, 0, 1, 5, 0, 1, 14, 10, 0.10855263157894736, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax"]], [0, 1, 52, 0, 0, 4, 2, 1, 2, 2, 0.048088972431077695, ["mov     eax, r14d", "and     eax, 12h", "test    eax, eax", "jnz     short loc_7E5B"], ["mov~eax,r14d", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 39, 0, 0, 4, 2, 1, 8, 9, 0.0037593984962406013, ["mov     eax, [sp_0+48h]", "and     eax, 400h", "test    eax, eax", "jz      short loc_7F51"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 36, 1, 0, 7, 0, 1, 16, 6, 0.010338345864661654, ["mov     rax, [rbp+len]", "lea     rdx, [rax-2]", "mov     rax, [rbp+v]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_7FB7"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-2]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 8, 8, 0.13549498746867167, ["mov     eax, 1", "jmp     short loc_7F56"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 9, 8, 0.005795739348370927, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 36, 2, 0, 2, 0, 0, 17, 7, 0.12656641604010024, ["add     [rbp+argv], 8", "add     nitems, 1"], ["add~[rbp+0],0", "add~nitems,0"]], [0, 0, 36, 0, 0, 3, 0, 1, 16, 8, 0.09398496240601503, ["mov     [p+10h], root", "mov     root, p", "jmp     short loc_8086"], ["mov~[p+0],root", "mov~root,p", "jmp~FOO"]], [0, 0, 36, 0, 0, 3, 0, 1, 17, 8, 0.005169172932330827, ["mov     root, p", "mov     [rbp+tmp], root", "jmp     short loc_8086"], ["mov~root,p", "mov~[rbp+0],root", "jmp~FOO"]], [0, 1, 50, 0, 1, 5, 1, 2, 3, 2, 0.06140350877192982, ["mov     edi, 80h; size", "call    _malloc", "mov     sp_0, rax; p", "test    sp_0, sp_0", "jnz     short loc_7E77"], ["mov~edi,<STR>", "call~FOO", "mov~sp_0,rax", "test~sp_0,sp_0", "jnz~FOO"]], [3, 0, 36, 0, 0, 5, 1, 1, 9, 7, 0.15977443609022557, ["mov     [rbp+defer_stat], al", "and     [rbp+defer_stat], 1", "mov     r13d, 0", "mov     r15d, 0", "jmp     loc_808F"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~r13d,0", "mov~r15d,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 8, 3, 0.0043859649122807015, ["nop"], ["nop"]]], "func_feature": [21, 34, 61, 0, 58, 86, 1, 268, 0.04808, 2, 7], "succs": [[23], [0, 14], [52], [2, 54], [19, 12], [18, 4], [41, 34], [34, 6], [20, 22], [8, 26], [30], [10, 15], [34, 7], [57, 37], [42, 13], [27, 47], [24], [16], [16], [16], [22, 38], [25, 46], [17, 21], [30], [23], [40, 46], [29, 5], [47, 31], [5], [28, 5], [], [30], [30], [30], [30], [1], [1, 35], [42], [22, 39], [43], [45], [34], [48, 50], [49, 22], [43], [3, 53], [45], [32, 55], [50, 51], [44, 22], [56], [56], [9], [52], [52], [33, 36], [9], [24]], "fname": "rpl_fts_open", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["lea     rax, [p+108h]", "cmp     cp, rax", "jnz     short loc_820F"], ["lea~rax,[p+0]", "cmp~cp,rax", "jnz~FOO"]], [2, 0, 4, 1, 2, 25, 1, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "push    len", "push    cp", "push    p", "sub     rsp, 18h", "mov     [rbp+sp_0], rdi", "mov     p, rsi", "mov     rax, [p+60h]", "mov     [p+48h], rax", "mov     len, [p+48h]", "lea     rdx, [len+1]; n", "lea     rcx, [p+108h]", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memmove", "lea     rax, [p+108h]", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     cp, rax", "test    cp, cp", "jz      short loc_8238"], ["push~rbp", "mov~rbp,rsp", "push~len", "push~cp", "push~p", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~p,rsi", "mov~rax,[p+0]", "mov~[p+0],rax", "mov~len,[p+0]", "lea~rdx,[len+0]", "lea~rcx,[p+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "lea~rax,[p+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~cp,rax", "test~cp,cp", "jz~FOO"]], [1, 0, 0, 1, 0, 12, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     [p+38h], rax", "mov     rax, [p+38h]", "mov     [p+30h], rax", "nop", "add     rsp, 18h", "pop     p", "pop     cp", "pop     len", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "mov~[p+0],rax", "nop", "add~rsp,0", "pop~p", "pop~cp", "pop~len", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.041666666666666664, ["lea     rax, [cp+1]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_8238"], ["lea~rax,[cp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 1, 1, 2, 10, 0, 2, 2, 1, 0.041666666666666664, ["add     cp, 1", "mov     rdi, cp; s", "call    _strlen", "mov     len, rax", "lea     rdx, [len+1]; n", "lea     rax, [p+108h]", "mov     rsi, cp; src", "mov     rdi, rax; dest", "call    _memmove", "mov     [p+60h], len"], ["add~cp,0", "mov~rdi,cp", "call~FOO", "mov~len,rax", "lea~rdx,[len+0]", "lea~rax,[p+0]", "mov~rsi,cp", "mov~rdi,rax", "call~FOO", "mov~[p+0],len"]]], "func_feature": [4, 2, 7, 0, 5, 7, 1, 54, 0.05, 0, 3], "succs": [[3, 4], [0, 2], [], [2, 4], [2]], "fname": "fts_load", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 15, 0, 2, 13, 2, 3, 0, 0, 0.25, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_832B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 1, 6, 0.22666666666666668, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_82D2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 16, 0, 1, 4, 0, 1, 2, 6, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+8]", "mov     rdi, rax", "call    fts_lfree"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 9, 0.01, ["mov     rax, [rbp+sp_0]", "mov     p, [rax]", "jmp     short loc_82A4"], ["mov~rax,[rbp+0]", "mov~p,<TAG>", "jmp~FOO"]], [1, 1, 25, 1, 0, 11, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    freep", "push    p", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+saved_errno], 0", "mov     rax, [rbp+sp_0]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_82B5"], ["push~rbp", "mov~rbp,rsp", "push~freep", "push~p", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 4, 0.09166666666666667, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "test    eax, eax", "js      short loc_8377"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "js~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 3, 11, 0.021666666666666667, ["mov     freep, p; head", "mov     rax, [p+10h]", "test    rax, rax", "jz      short loc_8295"], ["mov~freep,p", "mov~rax,[p+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 0, 2, 8, 0.18500000000000003, ["mov     rax, [p+58h]", "test    rax, rax", "jns     short loc_8283"], ["mov~rax,[p+0]", "test~rax,rax", "jns~FOO"]], [1, 0, 5, 1, 1, 8, 1, 2, 4, 3, 0.16666666666666669, ["mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; fd_ring", "call    fd_ring_clear", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "test    rax, rax", "jz      short loc_83A4"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 4, 4, 0.02, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     edi, eax; fd", "call    _close", "test    eax, eax", "jz      short loc_8377"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 2, 5, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "jmp     short loc_8377"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 11, 0, 0, 5, 2, 1, 3, 4, 0.14666666666666667, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8377"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 8, 0, 1, 6, 1, 2, 5, 4, 0.06666666666666667, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "mov     edi, eax; fd", "call    _close", "test    eax, eax", "jz      short loc_8377"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 6, 4, 0.025, ["cmp     [rbp+saved_errno], 0", "jnz     short loc_8377"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 1, 7, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 24, 0, 0, 2, 0, 1, 4, 10, 0.02, ["mov     rax, [p+10h]", "jmp     short loc_8299"], ["mov~rax,[p+0]", "jmp~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 4, 10, 0.02, ["mov     rax, [p+8]"], ["mov~rax,[p+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, 3, 0.0, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "mov     rdi, rax; table", "call    hash_free"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 5, 2, 0.11, ["mov     rax, [rbp+sp_0]", "mov     rdi, rax; sp_0", "call    free_dir", "mov     rax, [rbp+sp_0]", "mov     rdi, rax; ptr", "call    free", "cmp     [rbp+saved_errno], 0", "jz      short loc_83D6"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 24, 0, 1, 3, 0, 1, 5, 9, 0.10666666666666667, ["mov     p, rax", "mov     rdi, freep; ptr", "call    free"], ["mov~p,rax", "mov~rdi,freep", "call~FOO"]], [0, 0, 18, 0, 1, 2, 0, 1, 3, 7, 0.18000000000000002, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [0, 0, 10, 0, 1, 6, 1, 2, 4, 5, 0.08, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+28h]", "mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_8355"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 1, 3, 0, 1, 5, 5, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 0, 1, 0, 1, 6, 0, 2, 6, 1, 0.01916666666666667, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0FFFFFFFFh", "jmp     short loc_83DB"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.01916666666666667, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 0, 1, 0, 5, 0, 0, 7, 0, 0.0, ["add     rsp, 20h", "pop     p", "pop     freep", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p", "pop~freep", "pop~rbp", "retn"]]], "func_feature": [16, 13, 32, 0, 26, 38, 1, 121, 0.06788, 0, 3], "succs": [[11, 5], [0, 2], [0], [7], [1, 3], [8, 9], [16, 15], [20, 6], [17, 18], [8, 10], [8], [8, 21], [8, 13], [8, 14], [8], [19], [19], [18], [24, 23], [7], [1], [12, 22], [12], [25], [25], []], "fname": "rpl_fts_close", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+ax_0]", "mov     rax, [rax]", "mov     [rbp+dev], rax", "mov     rax, [rbp+dev]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "dev_type_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+ax_0], rax", "mov     rax, [rbp+y]", "mov     [rbp+ay], rax", "mov     rax, [rbp+ax_0]", "mov     rdx, [rax]", "mov     rax, [rbp+ay]", "mov     rax, [rax]", "cmp     rdx, rax", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 16, 0.0, 0, 0], "succs": [[]], "fname": "dev_type_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 8, 3, 0.03508771929824561, ["mov     rax, [rbp+ent]", "cmp     rax, [rbp+t2]", "jz      short loc_861C"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [1, 1, 19, 1, 0, 19, 3, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0C0h", "mov     [rbp+p], rdi", "mov     [rbp+fd], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+p]", "mov     rax, [rax+50h]", "mov     [rbp+sp_0], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "mov     [rbp+h], rax", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jnz     short loc_84AF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 14, 0, 1, 11, 0, 2, 3, 3, 0.024853801169590642, ["mov     rax, [rbp+p]", "mov     rax, [rax+78h]", "mov     [rbp+tmp.st_dev], rax", "lea     rdx, [rbp+tmp]", "mov     rax, [rbp+h]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_lookup", "mov     [rbp+ent], rax", "cmp     [rbp+ent], 0", "jz      short loc_8556"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 2, 4, 0.12280701754385964, ["cmp     [rbp+h], 0", "jz      short loc_8556"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 15, 0, 2, 7, 4, 0.07894736842105263, ["mov     rax, [rbp+p]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+t2]", "mov     [rax], rdx", "mov     rdx, [rbp+fs_buf.f_type]", "mov     rax, [rbp+t2]", "mov     [rax+8], rdx", "mov     rdx, [rbp+t2]", "mov     rax, [rbp+h]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_insert", "mov     [rbp+ent], rax", "cmp     [rbp+ent], 0", "jz      short loc_860D"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 1, 5, 0.04093567251461988, ["cmp     [rbp+h], 0", "jnz     short loc_8500"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 16, 0, 1, 13, 0, 1, 2, 5, 0.0, ["mov     rax, cs:data_freer", "mov     r8, rax; data_freer", "lea     rcx, dev_type_compare; comparator", "lea     rdx, dev_type_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "mov     rdx, rax", "mov     rax, [rbp+sp_0]", "mov     [rax+50h], rdx", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+50h]", "mov     [rbp+h], rax"], ["mov~rax,<TAG>", "mov~r8,rax", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 3, 0.12280701754385964, ["cmp     [rbp+h], 0", "jz      loc_861C"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 11, 0, 1, 7, 1, 2, 4, 3, 0.12280701754385964, ["lea     rdx, [rbp+fs_buf]", "mov     eax, [rbp+fd]", "mov     rsi, rdx; buf", "mov     edi, eax; fildes", "call    _fstatfs", "test    eax, eax", "jz      short loc_8581"], ["lea~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.008771929824561403, ["mov     eax, 0", "jmp     loc_8620"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 8, 3, 0.005847953216374269, ["mov     rax, [rbp+t2]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.0935672514619883, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_8634"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.021929824561403508, ["mov     rax, [rbp+ent]", "mov     rax, [rax+8]", "jmp     loc_8620"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03070175438596491, ["mov     eax, 0", "jmp     loc_8620"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 6, 2, 0.043859649122807015, ["mov     rax, [rbp+fs_buf.f_type]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 8, 0, 1, 5, 0, 2, 6, 3, 0.0935672514619883, ["mov     edi, 10h; size", "call    _malloc", "mov     [rbp+t2], rax", "cmp     [rbp+t2], 0", "jz      short loc_861C"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.14473684210526316, ["cmp     [rbp+fd], 0", "js      short loc_8577"], ["cmp~[rbp+0],0", "js~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [8, 5, 22, 1, 20, 28, 2, 99, 0.04956, 4, 1], "succs": [[], [0, 15], [10, 6], [18, 13], [18, 3], [1, 11], [4, 7], [4], [17, 15], [8, 14], [12], [15], [16, 19], [12], [12], [12], [], [5, 15], [9, 14], []], "fname": "filesystem_type", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     edx, 0FF534D42h", "cmp     rax, rdx", "jz      short loc_8670"], ["mov~edx,0", "cmp~rax,rdx", "jz~FOO"]], [2, 0, 5, 1, 1, 12, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+dir_fd], esi", "mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+p]", "mov     esi, edx; fd", "mov     rdi, rax; p", "call    filesystem_type", "cmp     rax, 1021994h", "jz      short loc_8670"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.1, ["cmp     rax, 6969h", "jnz     short loc_8677"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.125, ["mov     eax, 0", "jmp     short locret_867C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.025, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 0, 5, 0, 6, 8, 1, 22, 0.05833, 0, 1], "succs": [[2, 3], [0, 3], [3, 4], [5], [5], []], "fname": "dirent_inode_sort_may_be_useful", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 4, 0, 0, 2, 1, 1, 0, 0, 0.04487179487179487, ["test    rax, rax", "jz      short loc_86E8"], ["test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.05128205128205128, ["cmp     rax, 9FA0h", "jz      short loc_86E8"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 5, 2, 0.02564102564102564, ["jmp     short loc_86EF"], ["jmp~FOO"]], [2, 0, 13, 1, 1, 12, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+dir_fd], esi", "mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+p]", "mov     esi, edx; fd", "mov     rdi, rax; p", "call    filesystem_type", "cmp     rax, 52654973h", "jz      short loc_86E1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.016025641025641024, ["mov     eax, 2", "jmp     short locret_86F4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 2, 0.05448717948717949, ["cmp     rax, 58465342h", "jz      short loc_86E1"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 3, 0.0641025641025641, ["cmp     rax, 52654973h", "jg      short loc_86C5"], ["cmp~rax,0", "jg~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.035256410256410256, ["mov     eax, 0", "jmp     short locret_86F4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 2, 0.060897435897435896, ["cmp     rax, 6969h", "jz      short loc_86E8"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, 2, 0.05769230769230769, ["mov     edx, 0FF534D42h", "cmp     rax, rdx", "jz      short loc_86E8"], ["mov~edx,0", "cmp~rax,rdx", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.04487179487179487, ["cmp     rax, 5346414Fh", "jz      short loc_86E8"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.01282051282051282, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 2, 0, 0, 1, 0, 1, 5, 2, 0.02564102564102564, ["jmp     short loc_86EF"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 1, 13, 0, 14, 21, 2, 36, 0.03526, 0, 1], "succs": [[2, 7], [0, 7], [11], [4, 6], [13], [9, 4], [8, 5], [13], [1, 7], [10, 7], [12, 7], [13], [11], []], "fname": "leaf_optimization_0", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 47, 0, 0, 4, 2, 1, 0, 0, 0.01296382549293588, ["mov     eax, [sp_0+48h]", "and     eax, 40h", "test    eax, eax", "jz      short loc_8868"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 5, 4, 0.013235522434404595, ["cmp     r13w, 4", "jz      short loc_8817"], ["cmp~r13w,0", "jz~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 9, 2, 0.012718004450654661, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jz      short loc_8A24"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 1, 6, 1, 2, 8, 3, 0.022188583553278473, ["mov     [sp_0], p", "mov     rdi, t; ptr", "call    free", "mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8A44"], ["mov~<TAG>,p", "mov~rdi,t", "call~FOO", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, 2, 0.027130880298090358, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     short loc_8C47"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 19, 0, 0, 4, 0, 1, 7, 3, 0.07199968948920975, ["mov     [sp_0], p", "movzx   eax, word ptr [p+70h]", "cmp     ax, 0Bh", "jnz     loc_8C04"], ["mov~<TAG>,p", "movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 12, 0, 1, 7, 0, 2, 12, 3, 0.000271696941468716, ["mov     edx, [sp_0+2Ch]", "mov     rax, [rbp+parent]", "mov     esi, edx; dir_fd", "mov     rdi, rax; p", "call    leaf_optimization_0", "cmp     eax, 2", "jz      short loc_8C04"], ["mov~edx,[sp_0+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [2, 1, 11, 0, 1, 9, 1, 2, 10, 3, 0.018747088961341408, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "mov     eax, [p+90h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_8C04"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "mov~eax,[p+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.01327433628318584, ["mov     rax, [p+58h]", "test    rax, rax", "jz      short loc_8C04"], ["mov~rax,[p+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 12, 3, 0.009004812917248875, ["mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "test    rax, rax", "jz      short loc_8C04"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 13, 3, 0.004580034156186927, ["mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_8C04"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 7, 0, 0, 6, 0, 1, 14, 3, 0.0, ["mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+parent]", "mov     [rax+68h], rdx", "jmp     short loc_8C04"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 9, 3, 0.004580034156186927, ["mov     rax, [p+0A8h]", "cmp     rax, 1", "jz      short loc_8C04"], ["mov~rax,[p+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 7, 4, 0.048103296589556484, ["mov     p, [p+10h]; p", "test    p, p", "jz      loc_8C52"], ["mov~p,[p+0]", "test~p,p", "jz~FOO"]], [0, 0, 46, 0, 0, 4, 0, 1, 7, 4, 0.0004657661853749418, ["mov     rdx, [p+78h]", "mov     rax, [sp_0+18h]", "cmp     rdx, rax", "jz      short loc_8868"], ["mov~rdx,[p+0]", "mov~rax,[sp_0+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.0, ["mov     rax, [p+78h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p+0]", "mov~[sp_0+0],rax"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 3, 0.014671634839310665, ["mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8C20"], ["mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 1, 1, 0, 0, 5, 1, 1, 10, 1, 0.00029757284065621284, ["mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "mov     eax, 0", "jmp     loc_8DEB"], ["mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 5, 2, 1, 6, 3, 0.0035320602390933086, ["movzx   eax, word ptr [p+72h]", "movzx   eax, ax", "and     eax, 2", "test    eax, eax", "jz      short loc_882F"], ["movzx~eax,[ord ptr [p+0]", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 7, 3, 0.0, ["mov     eax, [p+44h]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[p+0]", "mov~edi,eax", "call~FOO"]], [1, 0, 3, 0, 1, 6, 2, 2, 10, 2, 0.00535631113181183, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    enter_dir", "xor     eax, 1", "test    al, al", "jz      short loc_8C47"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, 2, 0.002445272473218444, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_884F"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 3, 8, 0, 4, 10, 4, 0.011799410029498525, ["mov     rdi, sp_0; sp_0", "call    free_dir", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_load", "mov     rdi, sp_0; fts", "call    setup_dir", "jmp     check_for_dir"], ["mov~rdi,sp_0", "call~FOO", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 11, 1, 0.00011644154634373545, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0", "jmp     loc_8DEB"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.0029498525073746312, ["mov     eax, 7", "jmp     short loc_8DBD"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 14, 5, 0.01086787765874864, ["mov     eax, [p+40h]", "test    eax, eax", "jz      short loc_8DB8"], ["mov~eax,[p+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 1, 4, 0, 1, 8, 2, 0.0, ["mov     rax, [sp_0+8]", "mov     rdi, rax", "call    fts_lfree", "mov     qword ptr [sp_0+8], 0"], ["mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO", "mov~[word ptr [sp_0+0],0"]], [0, 0, 1, 0, 0, 2, 0, 1, 9, 1, 0.0032603632976245926, ["mov     rax, p", "jmp     loc_8DEB"], ["mov~rax,p", "jmp~FOO"]], [1, 0, 74, 0, 0, 3, 0, 1, 9, 7, 0.01304145319049837, ["movzx   eax, word ptr [p+74h]", "cmp     ax, 4", "jnz     short loc_8A53"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 10, 6, 0.006598354292811675, ["jmp     next"], ["jmp~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 10, 3, 0.004191895668374476, ["nop", "jmp     short cd_dot_dot"], ["nop", "jmp~FOO"]], [0, 1, 30, 0, 0, 4, 2, 1, 9, 2, 0.004683537752936915, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      loc_8C4F"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 28, 0, 0, 1, 0, 0, 8, 3, 0.029485587124152564, ["nop"], ["nop"]], [1, 0, 31, 0, 0, 3, 0, 1, 10, 8, 0.010013972985561248, ["movzx   eax, word ptr [p+74h]", "cmp     ax, 2", "jnz     short loc_8AC5"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 8, 1, 0.0007374631268436578, ["mov     word ptr [p+70h], 6", "mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     rax, p", "jmp     loc_8DEB"], ["mov~[ord ptr [p+0],0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~rax,p", "jmp~FOO"]], [1, 0, 27, 0, 1, 7, 0, 2, 9, 2, 0.03662733529990166, ["mov     p, [t+8]", "mov     [sp_0], p", "mov     rdi, t; ptr", "call    free", "mov     rax, [p+58h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_8C92"], ["mov~p,[t+0]", "mov~<TAG>,p", "mov~rdi,t", "call~FOO", "mov~rax,[p+0]", "cmp~rax,0", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 7, 5, 0.017776742741810278, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_88A3"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 29, 0, 1, 8, 0, 2, 11, 8, 0.005822077317186772, ["mov     edx, 1", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     short loc_8ABD"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 39, 0, 0, 4, 2, 1, 8, 5, 0.0008539046731873933, ["mov     eax, [sp_0+48h]", "and     eax, 1000h", "test    eax, eax", "jz      short loc_88A3"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 28, 0, 0, 4, 2, 1, 12, 8, 0.0037261294829995344, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8ABD"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 108, 0, 0, 3, 0, 1, 4, 6, 0.00807328054649899, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 0Ch", "jz      short loc_8778"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 109, 0, 0, 2, 0, 1, 3, 6, 0.025151374010246856, ["cmp     r13w, 2", "jnz     loc_87E8"], ["cmp~r13w,0", "jnz~FOO"]], [3, 0, 1, 0, 2, 7, 0, 3, 10, 1, 0.000375200538218703, ["mov     rdi, p; ptr", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "mov     eax, 0", "jmp     loc_8DEB"], ["mov~rdi,p", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 12, 4, 0.016457071883247944, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jz      loc_8DA0"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 23, 1, 0, 7, 1, 1, 11, 5, 0.03423381462505822, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+48h]", "add     rax, rdx", "mov     byte ptr [rax], 0", "mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8CE5"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 38, 0, 1, 7, 1, 1, 9, 5, 0.0, ["mov     eax, [sp_0+48h]", "and     ah, 0EFh", "mov     [sp_0+48h], eax", "mov     rax, [sp_0+8]", "mov     rdi, rax", "call    fts_lfree", "mov     qword ptr [sp_0+8], 0"], ["mov~eax,[sp_0+0]", "and~ah,0", "mov~[sp_0+0],eax", "mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO", "mov~[word ptr [sp_0+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 25, 0, 0, 3, 0, 1, 10, 6, 0.035398230088495575, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 0Bh", "jnz     short loc_8CA1"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [0, 0, 27, 0, 1, 7, 1, 1, 13, 9, 0.00263934171712467, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [p+44h], eax", "mov     eax, [p+44h]", "test    eax, eax", "jns     short loc_8AB2"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],eax", "mov~eax,[p+0]", "test~eax,eax", "jns~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 8, 4, 0.02406458624437199, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_88FF"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 25, 0, 1, 5, 0, 2, 14, 8, 0.0009703462195311287, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     word ptr [p+70h], 7", "jmp     short loc_8ABD"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~[ord ptr [p+0],0", "jmp~FOO"]], [1, 0, 25, 0, 0, 3, 1, 0, 14, 8, 0.0009703462195311287, ["movzx   eax, word ptr [p+72h]", "or      eax, 2", "mov     [p+72h], ax"], ["movzx~eax,[ord ptr [p+0]", "or~eax,0", "mov~[p+0],ax"]], [1, 0, 24, 0, 0, 2, 0, 1, 12, 7, 0.009315323707498836, ["mov     word ptr [p+74h], 3", "jmp     short name"], ["mov~[ord ptr [p+0],0", "jmp~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 11, 7, 0.004269523365936966, ["nop"], ["nop"]], [1, 0, 29, 0, 1, 8, 1, 2, 9, 8, 0.011139574600217358, ["mov     rax, [p+30h]", "mov     rcx, rax; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_895D"], ["mov~rax,[p+0]", "mov~rcx,rax", "mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 10, 0, 1, 7, 1, 2, 13, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "jmp     loc_8DA0"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "jmp~FOO"]], [1, 0, 28, 0, 1, 8, 1, 2, 10, 10, 0.0034932463903120633, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "movzx   eax, word ptr [p+72h]", "or      eax, 1", "mov     [p+72h], ax", "mov     p, [sp_0+8]", "jmp     short loc_88F8"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "movzx~eax,[ord ptr [p+0]", "or~eax,0", "mov~[p+0],ax", "mov~p,[sp_0+0]", "jmp~FOO"]], [2, 0, 23, 2, 0, 10, 0, 1, 10, 6, 0.04688712932774414, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+8]", "mov     rcx, [rax+38h]", "mov     rax, [p+8]", "mov     rax, [rax+48h]", "sub     rax, 1", "add     rax, rcx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_8AF7"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "mov~rcx,[rax+0]", "mov~rax,[p+0]", "mov~rax,[rax+0]", "sub~rax,0", "add~rax,rcx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 10, 7, 0.02359882005899705, ["mov     p, [sp_0+8]", "mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~p,[sp_0+0]", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 24, 0, 1, 3, 0, 2, 9, 7, 0.00520105573668685, ["mov     rdi, t; ptr", "call    free", "jmp     name"], ["mov~rdi,t", "call~FOO", "jmp~FOO"]], [1, 0, 20, 0, 1, 11, 0, 2, 12, 4, 0.04269523365936966, ["lea     t, [rdx+rax]", "mov     rax, t", "lea     t, [rax+1]", "mov     byte ptr [rax], 2Fh ; '/'", "mov     rax, [p+60h]", "lea     rdx, [rax+1]; n", "lea     rax, [p+108h]", "mov     rsi, rax; src", "mov     rdi, t; dest", "call    _memmove", "jmp     short check_for_dir"], ["lea~t,<TAG>", "mov~rax,t", "lea~t,[rax+0]", "mov~<TAG>,0", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "lea~rax,[p+0]", "mov~rsi,rax", "mov~rdi,t", "call~FOO", "jmp~FOO"]], [1, 0, 21, 1, 0, 4, 0, 1, 11, 5, 0.021308802980903586, ["mov     rax, [p+8]", "mov     rax, [rax+48h]", "sub     rax, 1", "jmp     short loc_8AFF"], ["mov~rax,[p+0]", "mov~rax,[rax+0]", "sub~rax,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 11, 5, 0.021308802980903586, ["mov     rax, [p+8]", "mov     rax, [rax+48h]"], ["mov~rax,[p+0]", "mov~rax,[rax+0]"]], [1, 0, 20, 0, 0, 5, 2, 1, 12, 5, 0.016301816488122962, ["movzx   eax, word ptr [p+72h]", "movzx   eax, ax", "and     eax, 2", "test    eax, eax", "jz      short loc_8D5C"], ["movzx~eax,[ord ptr [p+0]", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 28, 0, 0, 4, 0, 0, 12, 10, 0.0, ["mov     rax, [p+8]", "mov     rax, [rax+30h]", "mov     [p+30h], rax", "mov     p, [p+10h]"], ["mov~rax,[p+0]", "mov~rax,[rax+0]", "mov~[p+0],rax", "mov~p,[p+0]"]], [0, 0, 28, 0, 0, 2, 1, 1, 11, 9, 0.0064430988976866945, ["test    p, p", "jnz     short loc_88E8"], ["test~p,p", "jnz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 12, 8, 0.005822077317186772, ["jmp     short loc_895D"], ["jmp~FOO"]], [0, 1, 15, 0, 0, 4, 2, 1, 14, 7, 0.007141748175749107, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_8D26"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 16, 0, 0, 4, 2, 1, 13, 5, 0.010246856078248719, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_8D50"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 114, 1, 0, 10, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    t", "push    sp_0", "push    p", "sub     rsp, 18h", "mov     sp_0, rdi; head", "mov     rax, [sp_0]", "test    rax, rax", "jz      short loc_871D"], ["push~rbp", "mov~rbp,rsp", "push~t", "push~sp_0", "push~p", "sub~rsp,0", "mov~sp_0,rdi", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 31, 0, 1, 7, 1, 2, 9, 3, 0.013623660922217047, ["mov     esi, 3", "mov     rdi, sp_0", "call    fts_build", "mov     [sp_0+8], rax", "mov     rax, [sp_0+8]", "test    rax, rax", "jnz     short loc_895D"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "mov~rax,[sp_0+0]", "test~rax,rax", "jnz~FOO"]], [0, 1, 113, 0, 0, 4, 2, 1, 1, 2, 0.008616674429436423, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      short loc_8727"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [2, 0, 55, 1, 1, 12, 1, 2, 8, 3, 0.007943901050561506, ["mov     p, [t+8]; sp_0", "mov     [sp_0], p", "mov     rdx, [sp_0+20h]", "mov     rax, [p+48h]", "add     rax, rdx", "mov     byte ptr [rax], 0", "mov     esi, 3", "mov     rdi, sp_0", "call    fts_build", "mov     p, rax", "test    p, p", "jnz     short loc_89D2"], ["mov~p,[t+0]", "mov~<TAG>,p", "mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~p,rax", "test~p,p", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.0001552553951249806, ["mov     eax, 0", "jmp     loc_8DEB"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 15, 6, 0.0022900170780934636, ["mov     eax, [p+44h]", "mov     edx, 1; chdir_down_one", "mov     esi, eax; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "mov     eax, 0", "jmp     short loc_8D35"], ["mov~eax,[p+0]", "mov~edx,0", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 1, 6, 0, 0, 4, 2, 1, 10, 2, 0.006210215804999223, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      short loc_8933"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 6, 4, 0.016728768824716658, ["nop"], ["nop"]], [2, 0, 25, 0, 1, 8, 0, 2, 5, 5, 0.011294829995342337, ["mov     edx, 1", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     loc_8B29"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 4, 2, 1, 6, 5, 0.0016301816488122963, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     loc_8B29"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 21, 0, 1, 5, 0, 2, 8, 5, 0.0008150908244061481, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     word ptr [p+70h], 7", "jmp     loc_8B29"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~[ord ptr [p+0],0", "jmp~FOO"]], [1, 0, 21, 0, 0, 4, 1, 1, 8, 5, 0.0008150908244061481, ["movzx   eax, word ptr [p+72h]", "or      eax, 2", "mov     [p+72h], ax", "jmp     loc_8B29"], ["movzx~eax,[ord ptr [p+0]", "or~eax,0", "mov~[p+0],ax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 11, 1, 0.0004657661853749418, ["mov     eax, 0", "jmp     loc_8DEB"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 13, 0, 1, 5, 1, 1, 15, 6, 0.0022900170780934636, ["mov     eax, [p+44h]", "mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "setnz   al"], ["mov~eax,[p+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 12, 0, 0, 2, 1, 1, 16, 5, 0.004580034156186927, ["test    al, al", "jz      short loc_8D50"], ["test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 11, 2, 0.0037261294829995344, ["mov     eax, [p+40h]", "test    eax, eax", "jz      short loc_894A"], ["mov~eax,[p+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 111, 0, 0, 5, 0, 1, 2, 2, 0.017078093463747866, ["mov     p, [sp_0]; p", "movzx   r13d, word ptr [p+74h]", "mov     word ptr [p+74h], 3", "cmp     r13w, 1", "jnz     short loc_8759"], ["mov~p,<TAG>", "movzx~r13d,[ord ptr [p+0]", "mov~[ord ptr [p+0],0", "cmp~r13w,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 12, 2, 0.001319670858562335, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 4", "jz      short loc_894A"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 13, 2, 0.0, ["mov     word ptr [p+70h], 7"], ["mov~[ord ptr [p+0],0"]], [1, 0, 18, 0, 0, 3, 0, 1, 8, 4, 0.04354913833255705, ["mov     rax, [p+0A8h]", "cmp     rax, 2", "jnz     loc_8BF2"], ["mov~rax,[p+0]", "cmp~rax,0", "jnz~FOO"]], [0, 1, 11, 0, 1, 6, 1, 1, 17, 5, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax"]], [0, 0, 23, 0, 1, 7, 1, 1, 7, 6, 0.0012420431609998447, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [p+44h], eax", "mov     eax, [p+44h]", "test    eax, eax", "jns     short loc_87D8"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],eax", "mov~eax,[p+0]", "test~eax,eax", "jns~FOO"]], [1, 0, 1, 0, 1, 7, 0, 2, 3, 1, 7.76276975624903e-05, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax", "mov     rax, p", "jmp     loc_8DEB"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "mov~rax,p", "jmp~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 12, 1, 0.0002328830926874709, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     rax, p", "jmp     loc_8DEB"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~rax,p", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 14, 4, 0.004657661853749418, ["mov     eax, [p+44h]", "mov     edi, eax; fd", "call    _close", "jmp     short loc_8DA0"], ["mov~eax,[p+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 15, 0, 0, 6, 1, 1, 9, 4, 0.03229312218599596, ["mov     rax, [p+8]", "mov     [rbp+parent], rax", "mov     rax, [rbp+parent]", "mov     rax, [rax+68h]", "test    rax, rax", "jnz     short loc_8B92"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 15, 1, 0.0008539046731873933, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 3, 0, 0, 4, 2, 1, 14, 2, 0.00784039745381152, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jnz     short loc_8DE6"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 5, 2, 1, 13, 4, 0.004191895668374476, ["movzx   eax, word ptr [p+72h]", "movzx   eax, ax", "and     eax, 1", "test    eax, eax", "jnz     short loc_8DA0"], ["movzx~eax,[ord ptr [p+0]", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 14, 0, 0, 4, 2, 1, 10, 4, 0.008228535941623972, ["mov     eax, [sp_0+48h]", "and     eax, 8", "test    eax, eax", "jz      short loc_8B92"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 0, 5, 6, 0.030818195932308647, ["nop"], ["nop"]], [1, 0, 100, 0, 0, 3, 0, 1, 4, 5, 0.03737773637633908, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jnz     loc_8970"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 107, 0, 0, 3, 0, 1, 5, 6, 0.006287843502561714, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 0Dh", "jnz     short loc_87E8"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 2, 1, 11, 4, 0.004191895668374476, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_8B92"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 4, 1, 1, 6, 5, 0.047818661698494025, ["mov     t, p", "mov     rax, [p+10h]", "test    rax, rax", "jnz     short loc_89DF"], ["mov~t,p", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 11, 0, 1, 8, 1, 2, 14, 4, 0.0017854370439372767, ["mov     rax, [p+8]", "lea     rcx, off_E837; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      short loc_8DA0"], ["mov~rax,[p+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 4, 1, 1, 7, 4, 0.008254411840811467, ["mov     rax, [p+8]", "mov     rax, [rax+18h]", "test    rax, rax", "jz      short loc_89DF"], ["mov~rax,[p+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 1, 10, 0, 1, 6, 1, 1, 15, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax"]], [1, 0, 9, 0, 0, 3, 0, 1, 13, 3, 0.022279149200434716, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 2", "jz      short loc_8DD3"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 15, 4, 0.0029498525073746312, ["mov     eax, 6"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 4, 1, 1, 16, 3, 0.003881384878124515, ["mov     [p+70h], ax", "mov     eax, [p+40h]", "test    eax, eax", "jnz     short loc_8DD3"], ["mov~[p+0],ax", "mov~eax,[p+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 10, 1, 0.000336386689437458, ["mov     eax, 0", "jmp     loc_8DEB"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 17, 3, 0.0, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 15, 1, 0.0008539046731873933, ["mov     rax, p", "jmp     short loc_8DEB"], ["mov~rax,p", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     p", "pop     sp_0", "pop     t", "pop     rbp", "retn"], ["add~rsp,0", "pop~p", "pop~sp_0", "pop~t", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [41, 68, 133, 0, 115, 177, 2, 489, 0.01045, 2, 7], "succs": [[36, 14], [0, 18], [17, 22], [2, 28], [16, 27], [88, 4], [4, 7], [8, 4], [9, 4], [10, 4], [11, 4], [4], [114, 4], [32, 3], [18, 36], [20], [20, 15], [113], [19, 21], [21], [27, 23], [26, 34], [5], [113], [109], [24, 108], [34], [113], [33, 29], [103], [35], [110, 30], [35], [37, 53], [113], [42, 47], [49, 38], [52, 39], [49, 45], [48, 52], [101, 77], [40, 100], [113], [107, 55], [43, 63], [49], [], [44, 46], [50, 51], [70, 54], [52], [52], [57], [57], [56, 58], [107], [65], [61, 62], [57], [57], [5], [60], [60], [97, 68], [65], [64, 66], [58], [74, 82], [67, 93], [73, 71], [58, 75], [73, 85], [59, 31], [113], [83], [81, 84], [5], [76, 78], [90, 76], [76], [76], [113], [83], [89, 93], [92, 86], [41, 91], [92, 87], [92], [12, 94], [93], [80, 79], [113], [113], [107], [98, 7], [113], [112, 95], [104, 107], [102, 7], [103], [1, 99], [100, 77], [6, 7], [105, 13], [106, 107], [72, 13], [107], [96, 25], [109], [96, 111], [113], [96], [113], [], []], "fname": "rpl_fts_read", "n_num": 115}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.09523809523809523, ["cmp     [rbp+instr], 4", "jz      short loc_8E39"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 2, 0.14285714285714285, ["cmp     [rbp+instr], 3", "jz      short loc_8E39"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 0, 1, 1, 0.10714285714285714, ["mov     eax, [rbp+instr]", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax+74h], dx", "mov     eax, 0"], ["mov~eax,[rbp+0]", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dx", "mov~eax,0"]], [1, 1, 7, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+p], rsi", "mov     [rbp+instr], edx", "cmp     [rbp+instr], 0", "jz      short loc_8E39"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.09523809523809523, ["cmp     [rbp+instr], 1", "jz      short loc_8E39"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     [rbp+instr], 2", "jz      short loc_8E39"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 5, 1, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "jmp     short locret_8E4B"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [1, 0, 7, 0, 8, 12, 1, 27, 0.0744, 0, 1], "succs": [[2, 7], [0, 2], [6], [2, 4], [2, 5], [1, 2], [], [6]], "fname": "rpl_fts_set", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 13, 0, 0, 5, 1, 1, 0, 0, 0.07615384615384616, ["mov     eax, [sp_0+48h]", "or      ah, 10h", "mov     [sp_0+48h], eax", "mov     [rbp+instr], 2", "jmp     short loc_8F09"], ["mov~eax,[sp_0+0]", "or~ah,0", "mov~[sp_0+0],eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.15384615384615385, ["cmp     [rbp+instr], 1000h", "jnz     short loc_8F02"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 6, 3, 0.07615384615384616, ["mov     [rbp+instr], 1"], ["mov~[rbp+0],0"]], [0, 1, 6, 0, 1, 9, 2, 2, 11, 3, 0.1076923076923077, ["mov     eax, [rbp+instr]", "mov     esi, eax", "mov     rdi, sp_0", "call    fts_build", "mov     [sp_0+8], rax", "mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_8F9B"], ["mov~eax,[rbp+0]", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 8, 0, 1, 6, 0, 1, 10, 2, 0.14, ["lea     rsi, dir; \".\"", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_8F6A"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 7, 2, 0.17692307692307693, ["mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_8F29"], ["mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 12, 2, 0.04692307692307692, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_8FD1"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 4, 5, 0.12307692307692308, ["mov     rax, [sp_0+8]", "test    rax, rax", "jz      short loc_8EE7"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 3, 2, 0.11076923076923077, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 1", "jz      short loc_8ED2"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 2, 0, 1, 6, 0, 2, 12, 2, 0.023846153846153847, ["mov     eax, [rbp+fd]", "mov     edx, 1; chdir_down_one", "mov     esi, eax; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "jmp     short loc_8FDB"], ["mov~eax,[rbp+0]", "mov~edx,0", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [1, 1, 23, 0, 1, 7, 2, 2, 1, 2, 0.06846153846153846, ["mov     p, [sp_0]; head", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, [sp_0+48h]", "and     eax, 2000h", "test    eax, eax", "jz      short loc_8EA6"], ["mov~p,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 1, 26, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p", "push    sp_0", "sub     rsp, 20h", "mov     sp_0, rdi; sp_0", "mov     [rbp+instr], esi", "cmp     [rbp+instr], 0", "jz      short loc_8E82"], ["push~rbp", "mov~rbp,rsp", "push~p", "push~sp_0", "sub~rsp,<STR>", "mov~sp_0,rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 1, 2, 0.0023076923076923075, ["cmp     [rbp+instr], 1000h", "jz      short loc_8E82"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 0, 1, 8, 2, 0.1523076923076923, ["mov     rax, [p+30h]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_8F29"], ["mov~rax,[p+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.0023076923076923075, ["mov     eax, 0", "jmp     loc_8FDF"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 13, 1, 0.0038461538461538464, ["mov     rax, [sp_0+8]"], ["mov~rax,[sp_0+0]"]], [0, 0, 2, 0, 1, 3, 0, 1, 13, 2, 0.0015384615384615385, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [1, 0, 10, 0, 0, 4, 2, 1, 9, 2, 0.14769230769230768, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_8F43"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 2, 2, 0.09230769230769231, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 9", "jnz     short loc_8EBC"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.0015384615384615385, ["mov     rax, [p+10h]", "jmp     loc_8FDF"], ["mov~rax,[p+0]", "jmp~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 8, 1, 0.012307692307692308, ["mov     eax, [rbp+instr]", "mov     esi, eax", "mov     rdi, sp_0", "call    fts_build", "mov     [sp_0+8], rax", "mov     rax, [sp_0+8]", "jmp     loc_8FDF"], ["mov~eax,[rbp+0]", "mov~esi,eax", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "mov~rax,[sp_0+0]", "jmp~FOO"]], [0, 0, 16, 0, 1, 3, 0, 1, 5, 5, 0.0, ["mov     rax, [sp_0+8]", "mov     rdi, rax", "call    fts_lfree"], ["mov~rax,[sp_0+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.0015384615384615385, ["mov     eax, 0", "jmp     loc_8FDF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 3, 12, 0, 4, 13, 1, 0.0023076923076923075, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     short loc_8FDF"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, 0, 0.0, ["add     rsp, 20h", "pop     sp_0", "pop     p", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~sp_0", "pop~p", "pop~rbp", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 2, 1, 0.0023076923076923075, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_8FDF"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 11, 1, 0.0015384615384615385, ["mov     qword ptr [sp_0+8], 0", "mov     eax, 0", "jmp     short loc_8FDF"], ["mov~[word ptr [sp_0+0],0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [12, 10, 33, 0, 27, 39, 0, 116, 0.05658, 1, 2], "succs": [[5], [0, 2], [5], [9, 6], [26, 3], [20, 13], [16, 23], [1, 21], [22, 7], [15], [18, 14], [10, 12], [25, 10], [17, 20], [24], [24], [15], [4, 20], [8, 19], [24], [24], [1], [24], [24], [], [24], [24]], "fname": "rpl_fts_children", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 10, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+b]", "mov     rax, [rax]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rax, [rax+80h]", "cmp     rdx, rax", "setb    al", "movzx   eax, al", "jmp     short loc_9041"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~rdx,rax", "setb~al", "movzx~eax,al", "jmp~FOO"]], [0, 0, 3, 0, 0, 12, 0, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+b]", "mov     rax, [rax]", "mov     rax, [rax+80h]", "cmp     rdx, rax", "jb      short loc_903C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~rdx,rax", "jb~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 4, 4, 0, 25, 0.04167, 0, 0], "succs": [[3], [0, 2], [3], []], "fname": "fts_compare_ino", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.001388888888888889, ["mov     [rbp+type], 0A000h; jumptable 0000000000009076 case 10", "jmp     short loc_90BE"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 9, 1, 0, 8, 0, 1, 1, 2, 0.07777777777777778, ["mov     eax, [rbp+dtype]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E83C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E83C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 1, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 2000h; jumptable 0000000000009076 case 2", "jmp     short loc_90BE"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+st]", "mov     edx, [rbp+type]", "mov     [rax+18h], edx", "nop", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "nop", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 6000h; jumptable 0000000000009076 case 6", "jmp     short loc_90BE"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 4000h; jumptable 0000000000009076 case 4", "jmp     short loc_90BE"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 1000h; jumptable 0000000000009076 case 1", "jmp     short loc_90BE"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 8000h; jumptable 0000000000009076 case 8", "jmp     short loc_90BE"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 1, 0, 0, 2, 0, 1, 2, 1, 0.001388888888888889, ["mov     [rbp+type], 0C000h; jumptable 0000000000009076 case 12", "jmp     short loc_90BE"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.0125, ["mov     [rbp+type], 0; jumptable 0000000000009076 default case"], ["mov~[rbp+0],0"]], [1, 0, 10, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     [rbp+dtype], esi", "cmp     [rbp+dtype], 0Ch; switch 13 cases", "ja      short loc_90B7; jumptable 0000000000009076 default case"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "ja~FOO"]]], "func_feature": [0, 0, 9, 0, 11, 18, 1, 35, 0.00909, 1, 1], "succs": [[3], [0, 2, 4, 5, 6, 7, 8, 9], [3], [], [3], [3], [3], [3], [3], [3], [1, 9]], "fname": "set_stat_type", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 1, 4, 0, 2, 0, 0, 0.004274840996767803, ["mov     rdi, head", "call    fts_lfree", "mov     eax, 0", "jmp     short loc_9A60"], ["mov~rdi,head", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 19, 3, 0.027421541028047128, ["cmp     [rbp+type], 3", "jnz     short loc_9A01"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 1, 20, 3, 0.011990407673860911, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 4", "jz      short loc_9A01"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 21, 3, 0.0060473360442081115, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 7", "jz      short loc_9A01"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 22, 3, 0.0, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 6"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0"]], [0, 0, 125, 0, 1, 12, 1, 2, 5, 4, 0.0590657908455844, ["lea     rdx, [rbp+dir_fd]", "mov     rcx, rdx; pnew_fd", "mov     edx, edi; extra_flags", "mov     edi, eax; dir_fd", "call    opendirat", "mov     rdx, rax", "mov     rax, [rbp+cur]", "mov     [rax+18h], rdx", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "jnz     short loc_923E"], ["lea~rdx,[rbp+0]", "mov~rcx,rdx", "mov~edx,edi", "mov~edi,eax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 126, 0, 0, 2, 0, 1, 5, 5, 0.0032843290584923363, ["mov     eax, [sp_0+2Ch]", "jmp     short loc_91E8"], ["mov~eax,[sp_0+0]", "jmp~FOO"]], [1, 0, 126, 0, 0, 1, 0, 0, 4, 5, 0.043165467625899276, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 19, 4, 0.029715358148263996, ["cmp     [rbp+sort_by_inode], 0", "jz      short loc_9A3D"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 18, 4, 0.06829319153372954, ["test    nitems, nitems", "jnz     short loc_9A10"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 6, 3, 0.002710874778438119, ["cmp     [rbp+type], 3", "jnz     short loc_9234"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 83, 0, 1, 6, 0, 1, 26, 9, 0.0, ["mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+cur]", "mov     esi, edx; dir_fd", "mov     rdi, rax; p", "call    dirent_inode_sort_may_be_useful", "mov     [rbp+sort_by_inode], al"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al"]], [0, 0, 83, 0, 0, 3, 1, 1, 25, 9, 0.004379105411323116, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jnz     short loc_98B5"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 83, 2, 1, 12, 2, 2, 16, 4, 0.02168699822750495, ["mov     rax, [sp_0+20h]", "mov     [rbp+oldaddr], rax", "mov     rdx, [rbp+d_namelen]", "mov     rax, [rbp+len]", "add     rax, rdx", "add     rax, 1", "mov     rsi, rax; more", "mov     rdi, sp_0; sp_0", "call    fts_palloc", "xor     eax, 1", "test    al, al", "jz      short loc_9690"], ["mov~rax,[sp_0+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 83, 0, 0, 3, 0, 0, 15, 4, 0.11145865915962881, ["mov     rax, [rbp+d_namelen]", "cmp     rax, [rbp+maxlen]", "jb      loc_96C6"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, 3, 0.00026066103638828066, ["jmp     short mem1"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 15, 3, 0.014388489208633093, ["nop"], ["nop"]], [1, 0, 83, 1, 2, 15, 1, 3, 14, 4, 0.1304869148159733, ["mov     rax, [rbp+dp_0]", "add     rax, 13h", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+d_namelen], rax", "mov     rax, [rbp+dp_0]", "lea     rcx, [rax+13h]", "mov     rax, [rbp+d_namelen]", "mov     rdx, rax", "mov     rsi, rcx", "mov     rdi, sp_0", "call    fts_alloc", "mov     p, rax; nitems", "test    p, p", "jz      short loc_9629"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rsi,rcx", "mov~rdi,sp_0", "call~FOO", "mov~p,rax", "test~p,p", "jz~FOO"]], [1, 0, 83, 0, 0, 4, 2, 1, 20, 13, 0.06996142216661454, ["mov     eax, [sp_0+48h]", "and     eax, 400h", "test    eax, eax", "jz      loc_9843"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 83, 0, 0, 3, 1, 1, 19, 14, 0.09972891252215618, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jz      short loc_97B8"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [3, 1, 93, 0, 1, 17, 3, 2, 11, 14, 0.019862370972786987, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+72h]", "or      eax, 1", "mov     edx, eax", "mov     rax, [rbp+cur]", "mov     [rax+72h], dx", "mov     [rbp+descend], 0", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_944A"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "or~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 10, 15, 0.01063497028464185, ["cmp     [rbp+descend], 0", "jz      short loc_93EF"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 95, 0, 0, 2, 0, 1, 11, 15, 0.0018246272547179647, ["cmp     [rbp+type], 3", "jnz     short loc_93EF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 94, 0, 1, 4, 0, 1, 12, 15, 0.0, ["call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx"], ["call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [1, 0, 7, 0, 1, 8, 0, 1, 20, 4, 0.0, ["lea     rax, fts_compare_ino", "mov     [sp_0+40h], rax", "mov     rdx, nitems", "mov     rsi, head", "mov     rdi, sp_0", "call    fts_sort", "mov     head, rax", "mov     qword ptr [sp_0+40h], 0"], ["lea~rax,<TAG>", "mov~[sp_0+0],rax", "mov~rdx,nitems", "mov~rsi,head", "mov~rdi,sp_0", "call~FOO", "mov~head,rax", "mov~[word ptr [sp_0+0],0"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.0018767594619956208, ["mov     eax, 0", "jmp     loc_9A60"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 1, 7, 3, 0.0, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 4", "call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [0, 0, 92, 0, 0, 3, 1, 1, 12, 14, 0.001981023876550933, ["mov     eax, [rbp+dir_fd]", "test    eax, eax", "js      short loc_944A"], ["mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [4, 0, 83, 0, 2, 21, 4, 3, 22, 12, 0.024606401835053696, ["mov     [rbp+skip_stat], al", "and     [rbp+skip_stat], 1", "mov     word ptr [p+70h], 0Bh", "mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+12h]", "movzx   edx, al", "lea     rax, [p+78h]", "mov     esi, edx; dtype", "mov     rdi, rax; st", "call    set_stat_type", "movzx   eax, [rbp+skip_stat]", "test    eax, eax", "setnz   al", "xor     eax, 1", "movzx   eax, al", "and     eax, 1", "movzx   eax, al", "mov     esi, eax; required", "mov     rdi, p; p", "call    fts_set_stat_required", "jmp     short loc_9859"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~[ord ptr [p+0],0", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~edx,al", "lea~rax,[p+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "movzx~eax,[rbp+0]", "test~eax,eax", "setnz~al", "xor~eax,0", "movzx~eax,al", "and~eax,0", "movzx~eax,al", "mov~esi,eax", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 24, 13, 0.0020852882911062453, ["mov     eax, 1", "jmp     short loc_97F0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 83, 0, 0, 1, 0, 0, 21, 13, 0.018402669169012616, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 6, 0, 0, 3, 1, 1, 20, 3, 0.018454801376290273, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jz      short loc_9A5D"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 91, 0, 1, 3, 0, 1, 13, 14, 0.0, ["mov     eax, [rbp+dir_fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [1, 0, 121, 0, 0, 4, 0, 1, 6, 5, 0.061724533416744866, ["mov     rax, [rbp+cur]", "movzx   eax, word ptr [rax+70h]", "cmp     ax, 0Bh", "jnz     short loc_926C"], ["mov~rax,[rbp+0]", "movzx~eax,[ord ptr [rax+0]", "cmp~ax,0", "jnz~FOO"]], [1, 0, 83, 0, 1, 5, 0, 1, 21, 12, 0.06944010009383797, ["mov     edx, 0", "mov     rsi, p", "mov     rdi, sp_0", "call    fts_stat", "mov     [p+70h], ax"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax"]], [1, 0, 90, 0, 0, 3, 0, 1, 12, 13, 0.02815139192993431, ["mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "jmp     short loc_945F"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [1, 0, 90, 0, 0, 1, 0, 0, 11, 13, 0.01876759461995621, ["mov     [rbp+descend], 1"], ["mov~[rbp+0],0"]], [1, 0, 98, 0, 1, 8, 1, 2, 10, 14, 0.01579605880512981, ["mov     edx, [rbp+dir_fd]; fd", "mov     rax, [rbp+cur]", "mov     ecx, 0; dir", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_9458"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 0, 1, 22, 3, 0.0, ["mov     rdx, nitems", "mov     rsi, head", "mov     rdi, sp_0", "call    fts_sort", "mov     head, rax"], ["mov~rdx,nitems", "mov~rsi,head", "mov~rdi,sp_0", "call~FOO", "mov~head,rax"]], [1, 0, 5, 0, 0, 2, 0, 0, 21, 3, 0.006099468251485767, ["cmp     nitems, 1", "jbe     short loc_9A5D"], ["cmp~nitems,0", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 21, 2, 0.000781983109164842, ["mov     rax, head"], ["mov~rax,head"]], [1, 0, 83, 0, 0, 3, 1, 1, 22, 11, 0.0981649463038265, ["mov     qword ptr [p+10h], 0", "test    head, head", "jnz     short loc_9877"], ["mov~[word ptr [p+0],0", "test~head,head", "jnz~FOO"]], [0, 0, 29, 0, 1, 3, 0, 1, 16, 7, 0.0, ["mov     rsi, head; head", "mov     rdi, sp_0; sp_0", "call    fts_padjust"], ["mov~rsi,head", "mov~rdi,sp_0", "call~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 15, 7, 0.13981857991867375, ["cmp     [rbp+doadjust], 0", "jz      short loc_9916"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 117, 0, 1, 9, 0, 2, 7, 17, 0.032686893963090394, ["mov     rax, [rbp+cur]", "mov     edx, 0", "mov     rsi, rax", "mov     rdi, sp_0", "call    fts_stat", "mov     edx, eax", "mov     rax, [rbp+cur]", "mov     [rax+70h], dx", "jmp     short loc_92C6"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dx", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.01428422479407778, ["mov     rcx, [rbp+var_28]", "xor     rcx, fs:28h", "jz      short loc_9A74"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0006255864873318737, ["mov     eax, 0", "jmp     loc_9A60"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 9, 2, 0.0004691898654989052, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0", "jmp     loc_9A60"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [3, 1, 3, 0, 5, 24, 1, 6, 16, 2, 0.010478573662808882, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rdi, p; ptr", "call    free", "mov     rdi, head", "call    fts_lfree", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 7", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     loc_9A60"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rdi,p", "call~FOO", "mov~rdi,head", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [4, 1, 3, 0, 4, 19, 1, 5, 17, 2, 0.0009383797309978104, ["mov     rdi, p; ptr", "call    free", "mov     rdi, head", "call    fts_lfree", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 7", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "mov     eax, 0", "jmp     loc_9A60"], ["mov~rdi,p", "call~FOO", "mov~rdi,head", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 1, 3, 0, 1, 9, 1, 2, 23, 2, 0.0007298509018871859, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 7", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "mov     rdi, head", "call    fts_lfree", "mov     eax, 0", "jmp     loc_9A60"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "mov~rdi,head", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 83, 0, 0, 3, 0, 1, 23, 10, 0.04678865603169638, ["mov     [rbp+tail], p", "mov     head, [rbp+tail]", "jmp     short loc_9889"], ["mov~[rbp+0],p", "mov~head,[rbp+0]", "jmp~FOO"]], [1, 0, 119, 0, 0, 4, 2, 1, 7, 4, 0.03409446355958711, ["mov     eax, [sp_0+48h]", "and     eax, 100h", "test    eax, eax", "jz      short loc_92C6"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 89, 2, 0, 9, 0, 1, 6, 12, 0.1971640079240955, ["mov     rax, [rbp+cur]", "mov     rdx, [rax+38h]", "mov     rax, [rbp+cur]", "mov     rax, [rax+48h]", "sub     rax, 1", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_948B"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rax,0", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 5, 13, 0.09149202377228652, ["mov     [rbp+descend], 1", "jmp     loc_945F"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 8, 13, 0.04222708789490147, ["cmp     [rbp+type], 3", "jnz     loc_945F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 83, 0, 0, 3, 0, 0, 23, 10, 0.04678865603169638, ["mov     rax, [rbp+tail]", "mov     [rax+10h], p", "mov     [rbp+tail], p"], ["mov~rax,[rbp+0]", "mov~[rax+0],p", "mov~[rbp+0],p"]], [0, 1, 0, 1, 0, 7, 0, 0, 5, 0, 0.0, ["add     rsp, 90h", "pop     sp_0", "pop     p", "pop     nitems", "pop     head", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~sp_0", "pop~p", "pop~nitems", "pop~head", "pop~rbp", "retn"]], [2, 0, 118, 0, 3, 16, 2, 4, 8, 3, 0.0009905119382754666, ["mov     rax, [rbp+cur]", "mov     rsi, rax; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     rax, [rbp+cur]", "mov     edx, 0", "mov     rsi, rax", "mov     rdi, sp_0", "call    fts_stat", "mov     rax, [rbp+cur]", "mov     rsi, rax; ent", "mov     rdi, sp_0; fts", "call    enter_dir", "xor     eax, 1", "test    al, al", "jz      short loc_92C6"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 87, 1, 0, 4, 0, 1, 7, 11, 0.09860807006568657, ["mov     rax, [rbp+cur]", "mov     rax, [rax+48h]", "sub     rax, 1", "jmp     short loc_9493"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rax,0", "jmp~FOO"]], [0, 0, 87, 0, 0, 2, 0, 0, 7, 11, 0.09860807006568657, ["mov     rax, [rbp+cur]", "mov     rax, [rax+48h]"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]"]], [1, 0, 83, 0, 0, 2, 0, 1, 24, 9, 0.09769575643832759, ["cmp     nitems, 2710h", "jnz     short loc_98B5"], ["cmp~nitems,0", "jnz~FOO"]], [0, 0, 83, 0, 0, 3, 0, 1, 17, 5, 0.016786570743405275, ["mov     rax, [sp_0+20h]", "cmp     [rbp+oldaddr], rax", "jz      short loc_96BA"], ["mov~rax,[sp_0+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [2, 0, 5, 0, 1, 8, 0, 2, 2, 3, 0.0005213220727765613, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "cmp     [rbp+type], 3", "jnz     short loc_9189"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 120, 0, 1, 10, 1, 1, 1, 4, 0.006255864873318736, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     [rbp+dp], rax", "mov     rax, [rbp+dp]", "mov     rdi, rax; dirp", "call    _dirfd", "mov     [rbp+dir_fd], eax", "mov     eax, [rbp+dir_fd]", "test    eax, eax", "jns     loc_92C6"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "test~eax,eax", "jns~FOO"]], [1, 0, 86, 0, 0, 5, 2, 1, 8, 10, 0.20388906266291315, ["mov     [rbp+len], rax", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_94C1"], ["mov~[rbp+0],rax", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 83, 0, 0, 5, 2, 1, 18, 5, 0.004379105411323116, ["mov     [rbp+doadjust], 1", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_96BA"], ["mov~[rbp+0],0", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 28, 0, 0, 4, 2, 1, 16, 6, 0.1325200708998019, ["mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_993B"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 83, 1, 0, 4, 0, 0, 19, 5, 0.0, ["mov     rdx, [sp_0+20h]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+cp], rax"], ["mov~rdx,[sp_0+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 83, 1, 0, 3, 0, 0, 25, 8, 0.09722656657282869, ["add     nitems, 1", "cmp     [rbp+max_entries], nitems", "jbe     short loc_98FE"], ["add~nitems,0", "cmp~[rbp+0],nitems", "jbe~FOO"]], [1, 0, 84, 1, 0, 9, 0, 1, 9, 9, 0.10173600250234595, ["mov     rdx, [sp_0+20h]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+cp], rax", "mov     rax, [rbp+cp]", "lea     rdx, [rax+1]", "mov     [rbp+cp], rdx", "mov     byte ptr [rax], 2Fh ; '/'", "jmp     short loc_94C9"], ["mov~rdx,[sp_0+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 84, 0, 0, 1, 0, 0, 9, 9, 0.10173600250234595, ["mov     [rbp+cp], 0"], ["mov~[rbp+0],0"]], [0, 0, 83, 1, 0, 3, 0, 0, 18, 4, 0.01631738087790637, ["mov     rax, [sp_0+30h]", "sub     rax, [rbp+len]", "mov     [rbp+maxlen], rax"], ["mov~rax,[sp_0+0]", "sub~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 83, 0, 0, 4, 1, 1, 11, 7, 0.2813053904702325, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "jnz     loc_950D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [6, 0, 83, 3, 0, 13, 0, 1, 10, 8, 0.20967573767073297, ["add     [rbp+len], 1", "mov     rax, [sp_0+30h]", "sub     rax, [rbp+len]", "mov     [rbp+maxlen], rax", "mov     rax, [rbp+cur]", "mov     rax, [rax+58h]", "add     rax, 1", "mov     [rbp+level], rax", "mov     [rbp+doadjust], 0", "mov     r14d, 0", "mov     [rbp+tail], 0", "mov     r13d, 0", "jmp     loc_98BF"], ["add~[rbp+0],0", "mov~rax,[sp_0+0]", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~r14d,0", "mov~[rbp+0],0", "mov~r13d,0", "jmp~FOO"]], [0, 0, 83, 0, 0, 4, 1, 1, 15, 6, 0.01741215723073715, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+14h]", "test    al, al", "jz      loc_98BF"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 83, 0, 0, 1, 0, 1, 18, 8, 0.004639766447711396, ["jmp     loc_98BF"], ["jmp~FOO"]], [0, 0, 116, 0, 0, 3, 1, 1, 2, 16, 0.09441142737983525, ["mov     rax, [sp_0+40h]", "test    rax, rax", "jz      short loc_92D8"], ["mov~rax,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 12, 10, 0.09649671567094151, ["jmp     short loc_98D3"], ["jmp~FOO"]], [0, 0, 34, 0, 0, 1, 0, 0, 14, 10, 0.012251068710249191, ["nop"], ["nop"]], [0, 0, 40, 0, 1, 4, 1, 2, 13, 11, 0.028516317380877905, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      loc_98D2"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 16, 11, 0.007298509018871859, ["mov     rax, [rbp+cur]", "mov     [rax+70h], dx", "jmp     loc_98D2"], ["mov~rax,[rbp+0]", "mov~[rax+0],dx", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 3, 15, 0.04934313418830153, ["mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_92DD"], ["mov~rax,0", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 3, 15, 0.04934313418830153, ["mov     eax, 186A0h"], ["mov~eax,0"]], [0, 0, 83, 1, 0, 7, 0, 0, 16, 3, 0.10577624856636429, ["mov     rdx, [rbp+len]", "mov     rax, [rbp+d_namelen]", "add     rax, rdx", "mov     [rbp+new_len], rax", "mov     rax, [rbp+new_len]", "cmp     rax, [rbp+len]", "jnb     short loc_9733"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 33, 0, 0, 4, 1, 1, 13, 9, 0.10739234699197163, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "jz      short loc_9901"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 23, 0, 0, 4, 2, 1, 17, 5, 0.11244917109790428, ["movzx   eax, [rbp+continue_readdir]", "xor     eax, 1", "test    al, al", "jz      loc_99CD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 18, 5, 0.038682097800020854, ["cmp     [rbp+descend], 0", "jz      short loc_99CD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 20, 5, 0.0006777186946095297, ["test    nitems, nitems", "jnz     short loc_99CD"], ["test~nitems,nitems", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 22, 3, 0.008289020957147326, ["test    al, al", "jz      short loc_99CD"], ["test~al,al", "jz~FOO"]], [1, 0, 113, 0, 0, 3, 0, 1, 4, 14, 0.1095818996976332, ["mov     [rbp+max_entries], rax", "cmp     [rbp+continue_readdir], 0", "jz      short loc_92F6"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 101, 0, 0, 4, 2, 1, 8, 16, 0.017203628401626526, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_93A3"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [2, 0, 103, 0, 0, 4, 1, 1, 7, 14, 0.05651131268897925, ["mov     [rbp+descend], al", "and     [rbp+descend], 1", "cmp     [rbp+descend], 0", "jnz     short loc_9375"], ["mov~[rbp+0],al", "and~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 31, 0, 1, 7, 0, 2, 14, 8, 0.049603795224689815, ["mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _closedir", "mov     rax, [rbp+cur]", "mov     qword ptr [rax+18h], 0", "jmp     short break_without_closedir"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 5, 16, 0.021895527056615575, ["cmp     [rbp+type], 2", "jz      short loc_934D"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 26, 8, 0.04087165050568241, ["nop", "jmp     short break_without_closedir"], ["nop", "jmp~FOO"]], [0, 0, 31, 0, 0, 1, 0, 0, 14, 8, 0.049603795224689815, ["nop"], ["nop"]], [0, 0, 83, 0, 0, 4, 1, 1, 22, 14, 0.008706078615368575, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+12h]", "test    al, al", "jz      short loc_97EB"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 83, 0, 0, 4, 2, 1, 21, 14, 0.012980919612136377, ["mov     eax, [sp_0+48h]", "and     eax, 8", "test    eax, eax", "jz      short loc_97EB"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 110, 0, 0, 4, 2, 1, 6, 16, 0.005473881764153894, ["mov     eax, [sp_0+48h]", "and     eax, 8", "test    eax, eax", "jz      short loc_9346"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 109, 0, 0, 4, 2, 1, 7, 16, 0.003492857887602961, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_9346"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 1, 108, 0, 0, 4, 2, 1, 8, 16, 0.0025023459493274947, ["mov     eax, [sp_0+48h]", "and     eax, 20h", "test    eax, eax", "jnz     short loc_9346"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [2, 1, 139, 1, 0, 22, 2, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    head", "push    nitems", "push    p", "push    sp_0", "sub     rsp, 90h", "mov     sp_0, rdi; p", "mov     [rbp+type], esi", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "mov     rax, [sp_0]", "mov     [rbp+cur], rax", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "test    rax, rax", "setnz   al", "mov     [rbp+continue_readdir], al", "mov     [rbp+sort_by_inode], 0", "cmp     [rbp+continue_readdir], 0", "jz      short loc_9193"], ["push~rbp", "mov~rbp,rsp", "push~head", "push~nitems", "push~p", "push~sp_0", "sub~rsp,<STR>", "mov~sp_0,rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "setnz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 27, 0, 0, 3, 0, 1, 17, 8, 0.01579605880512981, ["mov     rax, [sp_0+30h]", "cmp     [rbp+len], rax", "jz      short loc_992F"], ["mov~rax,[sp_0+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 107, 0, 0, 4, 0, 1, 9, 16, 0.0014075695964967155, ["mov     rax, [rbp+cur]", "mov     rax, [rax+88h]", "cmp     rax, 2", "jnz     short loc_9346"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 18, 7, 0.0032843290584923363, ["test    nitems, nitems", "jnz     short loc_9934"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 25, 1, 0, 1, 0, 0, 18, 7, 0.0032843290584923363, ["sub     [rbp+cp], 1"], ["sub~[rbp+0],0"]], [2, 0, 83, 0, 2, 9, 0, 3, 12, 6, 0.1801689083515796, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+cur]", "mov     rax, [rax+18h]", "mov     rdi, rax; dirp", "call    _readdir", "mov     [rbp+dp_0], rax", "cmp     [rbp+dp_0], 0", "jnz     short loc_9577"], ["call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 0, 19, 6, 0.0037535189239912416, ["mov     rax, [rbp+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 106, 0, 1, 7, 1, 2, 10, 16, 0.00020852882911062454, ["mov     edx, [rbp+dir_fd]", "mov     rax, [rbp+cur]", "mov     esi, edx; dir_fd", "mov     rdi, rax; p", "call    leaf_optimization_0", "test    eax, eax", "jnz     short loc_934D"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 7, 15, 0.02439787300594307, ["mov     eax, 1", "jmp     short loc_9352"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 104, 0, 0, 1, 0, 0, 6, 15, 0.022729642373058075, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 39, 0, 1, 6, 0, 2, 14, 13, 0.018142008132624336, ["call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx", "cmp     [rbp+continue_readdir], 0", "jnz     short loc_955E"], ["call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 15, 13, 0.00458763424043374, ["test    nitems, nitems", "jz      short loc_9565"], ["test~nitems,nitems", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 19, 6, 0.03346887707225524, ["cmp     [rbp+type], 1", "jz      short loc_9964"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 15, 12, 0.007350641226149515, ["mov     edx, 7", "jmp     short loc_956A"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 83, 0, 0, 13, 2, 1, 17, 16, 0.10019810238765509, ["mov     rax, [rbp+level]", "mov     [p+58h], rax", "mov     rax, [sp_0]", "mov     [p+8], rax", "mov     rax, [rbp+new_len]", "mov     [p+48h], rax", "mov     rax, [rbp+dp_0]", "mov     rax, [rax]", "mov     [p+80h], rax", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_9792"], ["mov~rax,[rbp+0]", "mov~[p+0],rax", "mov~rax,<TAG>", "mov~[p+0],rax", "mov~rax,[rbp+0]", "mov~[p+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[p+0],rax", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 1, 0, 0, 16, 12, 0.0009383797309978104, ["mov     edx, 4"], ["mov~edx,0"]], [0, 0, 17, 0, 1, 5, 1, 2, 21, 4, 0.0061776665624022516, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "setnz   al", "jmp     short loc_99A4"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 20, 5, 0.022833906787613385, ["mov     rax, [rbp+cur]", "mov     rax, [rax+58h]", "test    rax, rax", "jnz     short loc_9980"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 1, 83, 0, 0, 4, 2, 1, 13, 5, 0.1470128245229903, ["mov     eax, [sp_0+48h]", "and     eax, 20h", "test    eax, eax", "jnz     short loc_95BA"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 1, 3, 3, 0.0, ["mov     rax, [rbp+cur]", "mov     word ptr [rax+70h], 4", "call    ___errno_location", "mov     edx, [rax]", "mov     rax, [rbp+cur]", "mov     [rax+40h], edx"], ["mov~rax,[rbp+0]", "mov~[ord ptr [rax+0],0", "call~FOO", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [1, 0, 83, 0, 0, 4, 0, 1, 14, 5, 0.019445313314565737, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+13h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_95BA"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 83, 0, 1, 10, 0, 2, 18, 15, 0.047805234073610675, ["mov     rax, [p+38h]", "mov     [p+30h], rax", "mov     rax, [p+60h]", "lea     rdx, [rax+1]; n", "lea     rcx, [p+108h]", "mov     rax, [rbp+cp]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memmove", "jmp     short loc_979F"], ["mov~rax,[p+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "lea~rcx,[p+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 83, 0, 0, 2, 0, 0, 18, 15, 0.047805234073610675, ["lea     rax, [p+108h]", "mov     [p+30h], rax"], ["lea~rax,[p+0]", "mov~[p+0],rax"]], [1, 0, 134, 0, 0, 4, 2, 1, 1, 8, 0.0008862475237201543, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_91BB"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [3, 0, 100, 0, 1, 7, 0, 1, 9, 16, 0.0, ["mov     eax, [rbp+dir_fd]", "mov     edx, 3", "mov     esi, 406h; action", "mov     edi, eax; fd", "mov     eax, 0", "call    rpl_fcntl", "mov     [rbp+dir_fd], eax"], ["mov~eax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax"]], [1, 0, 17, 0, 1, 9, 1, 1, 21, 4, 0.0061776665624022516, ["mov     rax, [rbp+cur]", "mov     rax, [rax+8]", "lea     rcx, off_E837; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "setnz   al"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al"]], [1, 0, 133, 0, 0, 4, 2, 1, 2, 8, 0.00020852882911062454, ["mov     eax, [sp_0+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_91B4"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 83, 0, 0, 4, 0, 1, 16, 5, 0.010582838077364196, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+14h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_95BA"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 99, 0, 0, 3, 1, 1, 9, 15, 0.02439787300594307, ["mov     eax, [rbp+dir_fd]", "test    eax, eax", "js      short loc_93CF"], ["mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [0, 0, 132, 0, 0, 4, 1, 1, 3, 8, 5.2132207277656134e-05, ["mov     rax, [rbp+cur]", "mov     rax, [rax+58h]", "test    rax, rax", "jz      short loc_91BB"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 83, 0, 0, 4, 1, 1, 17, 5, 0.006672922531539985, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+15h]", "test    al, al", "jnz     short loc_95BA"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jnz~FOO"]], [1, 0, 130, 0, 0, 2, 0, 1, 3, 7, 0.010165780419142945, ["mov     edi, 20000h", "jmp     short loc_91C0"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 130, 0, 0, 1, 0, 0, 2, 7, 0.010843499113752476, ["mov     edi, 0"], ["mov~edi,0"]], [1, 0, 83, 0, 0, 4, 2, 1, 20, 14, 0.025544781566051507, ["mov     eax, [sp_0+48h]", "and     eax, 10h", "test    eax, eax", "jz      short loc_97EB"], ["mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 129, 0, 0, 6, 2, 1, 3, 6, 0.03425086018142008, ["mov     rax, [rbp+cur]", "mov     rsi, [rax+30h]; dir", "mov     eax, [sp_0+48h]", "and     eax, 4", "test    eax, eax", "jnz     short loc_91E3"], ["mov~rax,[rbp+0]", "mov~rsi,[rax+0]", "mov~eax,[sp_0+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 1, 128, 0, 0, 4, 2, 1, 4, 6, 0.00036492545094359295, ["mov     eax, [sp_0+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_91E3"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 83, 0, 0, 4, 0, 1, 23, 14, 0.004379105411323116, ["mov     rax, [rbp+dp_0]", "movzx   eax, byte ptr [rax+12h]", "cmp     al, 4", "jz      short loc_97EB"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "cmp~al,0", "jz~FOO"]]], "func_feature": [46, 81, 148, 1, 140, 216, 4, 651, 0.03708, 3, 17], "succs": [[45], [0, 2], [0, 3], [0, 4], [0], [33, 10], [5], [5], [24, 31], [8, 1], [25, 26], [70], [11, 70], [63, 15], [13, 85], [48], [48], [16, 14], [136, 34], [136, 18], [35, 27], [20, 22], [20, 23], [20], [31], [45], [25], [32, 35], [41], [28], [28], [40, 39], [35], [44, 53], [41], [54], [54], [36, 21], [40], [40, 38], [45], [57, 52], [68], [42, 68], [78], [58, 51], [45], [45], [45], [45], [45], [], [62], [59, 78], [60, 61], [54], [92, 54], [62], [], [78, 47], [66], [66], [12, 70], [73, 67], [122, 46], [64, 78], [72, 71], [73, 69], [104, 87], [73], [96, 74], [75], [75], [85], [108, 79], [74], [74, 130], [74], [83, 84], [86], [86], [80, 113], [80], [91], [91], [49, 117], [97, 94], [88, 9], [9, 115], [120, 9], [9, 50], [95, 55], [131, 127], [56, 92], [43], [112, 100], [43], [43], [139, 30], [98, 30], [101, 111], [102, 111], [105, 111], [65, 126], [106, 107], [110, 111], [107, 109], [109], [81, 121], [87], [112, 111], [93], [93], [114, 116], [116, 118], [120, 89], [82], [124, 125], [82], [90], [128, 119], [17, 123], [46], [17, 76], [19], [19], [129, 135], [131], [90], [132, 134], [17, 133], [37, 21], [134, 135], [17, 77], [137], [137], [99, 30], [138, 7], [6, 7], [29, 30]], "fname": "fts_build", "n_num": 140}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 0, 3, 1, 1, 0, 0, 0.00267379679144385, ["movzx   eax, byte ptr [p+10Ah]", "test    al, al", "jnz     short loc_9C1E"], ["movzx~eax,[yte ptr [p+0]", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, 2, 0.01633986928104575, ["movzx   eax, byte ptr [p+109h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_9C1E"], ["movzx~eax,[yte ptr [p+0]", "cmp~al,0", "jnz~FOO"]], [1, 1, 21, 0, 0, 5, 1, 1, 3, 3, 0.12596553773024358, ["mov     rax, [rbp+sbp]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_9C25"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 27, 0, 1, 7, 1, 2, 2, 4, 0.10650623885918004, ["mov     rax, [p+30h]", "mov     rdx, [rbp+sbp]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "test    eax, eax", "jz      loc_9B78"], ["mov~rax,[p+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 1, 9, 1, 2, 3, 3, 0.018270944741532975, ["mov     rsi, [p+30h]; filename", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+2Ch]", "mov     rdx, [rbp+sbp]; stat_buf", "mov     ecx, 100h; flag", "mov     edi, eax; fildes", "call    fstatat", "test    eax, eax", "jz      short loc_9B78"], ["mov~rsi,[p+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rdx,[rbp+0]", "mov~ecx,0", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 4, 2, 0.007872846108140224, ["mov     rax, [p+30h]", "mov     rdx, [rbp+sbp]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    lstat", "test    eax, eax", "jnz     short loc_9B23"], ["mov~rax,[p+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, 3, 0.021093285799168148, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 2", "jnz     short loc_9B23"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 8, 2, 0.0344622697563874, ["mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_9C17"], ["mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 7, 3, 0.071301247771836, ["movzx   eax, byte ptr [p+109h]", "test    al, al", "jz      short loc_9C07"], ["movzx~eax,[yte ptr [p+0]", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 9, 1, 0.000742721330956625, ["mov     eax, 1", "jmp     short loc_9C5E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 4, 0.09982174688057041, ["mov     rax, [rbp+sbp]", "mov     rax, [rax+10h]", "cmp     rax, 1", "jbe     short loc_9BD0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jbe~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 9, 1, 0.000742721330956625, ["mov     eax, 5", "jmp     short loc_9C5E"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 5, 1, 0.002525252525252525, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0Dh", "jmp     loc_9C5E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 6, 0, 0.0, ["add     rsp, 28h", "pop     p", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p", "pop~rbp", "retn"]], [2, 1, 1, 0, 1, 7, 0, 2, 5, 1, 0.006090314913844325, ["mov     rax, [rbp+sbp]", "mov     edx, 90h; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, 0Ah", "jmp     loc_9C5E"], ["mov~rax,[rbp+0]", "mov~edx,<STR>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 7, 1, 0.00920974450386215, ["mov     eax, 1", "jmp     short loc_9C5E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.0029708853238265, ["mov     eax, 0Ch", "jmp     short loc_9C5E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.000445632798573975, ["mov     eax, 8", "jmp     short loc_9C5E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.000445632798573975, ["mov     eax, 3"], ["mov~eax,0"]], [1, 0, 8, 0, 0, 4, 0, 1, 6, 2, 0.09982174688057041, ["mov     [p+68h], rax", "movzx   eax, byte ptr [p+108h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_9C1E"], ["mov~[p+0],rax", "movzx~eax,[yte ptr [p+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 5, 4, 0.0320855614973262, ["mov     rax, [p+58h]", "test    rax, rax", "jle     short loc_9BD0"], ["mov~rax,[p+0]", "test~rax,rax", "jle~FOO"]], [0, 1, 34, 1, 0, 13, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p", "sub     rsp, 28h", "mov     [rbp+sp_0], rdi", "mov     p, rsi", "mov     eax, edx", "mov     [rbp+follow], al", "lea     rax, [p+78h]", "mov     [rbp+sbp], rax", "mov     rax, [p+58h]", "test    rax, rax", "jnz     short loc_9ABC"], ["push~rbp", "mov~rbp,rsp", "push~p", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~p,rsi", "mov~eax,edx", "mov~[rbp+0],al", "lea~rax,[p+0]", "mov~[rbp+0],rax", "mov~rax,[p+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 2, 4, 2, 0.006090314913844325, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "jmp     short err"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "jmp~FOO"]], [1, 0, 33, 0, 0, 5, 2, 1, 1, 6, 0.00089126559714795, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 1", "test    eax, eax", "jz      short loc_9ABC"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 32, 0, 0, 1, 0, 0, 2, 6, 0.0, ["mov     [rbp+follow], 1"], ["mov~[rbp+0],0"]], [0, 1, 12, 0, 0, 7, 2, 1, 6, 5, 0.026737967914438502, ["mov     rax, [rbp+sbp]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 20h", "test    eax, eax", "jz      short loc_9BC3"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 1, 5, 0, 0, 5, 1, 1, 4, 2, 0.030600118835412946, ["mov     rax, [rbp+sbp]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_9C3F"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 4, 0.0089126559714795, ["mov     eax, 0", "jmp     short loc_9BC8"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 7, 4, 0.0089126559714795, ["mov     eax, 2"], ["mov~eax,0"]], [1, 0, 31, 0, 0, 5, 2, 1, 1, 5, 0.08288770053475936, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 2", "test    eax, eax", "jnz     short loc_9AD0"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 2, 4, 0.00980392156862745, ["cmp     [rbp+follow], 0", "jz      short loc_9B2F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 5, 3, 0.0730837789661319, ["mov     rax, 0FFFFFFFFFFFFFFFFh"], ["mov~rax,0"]], [0, 0, 9, 1, 0, 3, 0, 1, 8, 3, 0.02406417112299465, ["sub     rdx, rax", "mov     rax, rdx", "jmp     short loc_9BD7"], ["sub~rdx,rax", "mov~rax,rdx", "jmp~FOO"]], [1, 1, 3, 0, 0, 5, 1, 1, 5, 2, 0.0160427807486631, ["mov     rax, [rbp+sbp]", "mov     eax, [rax+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_9C59"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 4, 2, 0.006238859180035651, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax"]]], "func_feature": [8, 17, 36, 0, 35, 53, 8, 138, 0.02725, 0, 3], "succs": [[15, 7], [0, 15], [10, 26], [2, 6], [2, 34], [12, 22], [5, 22], [9, 11], [1, 7], [13], [20, 31], [13], [13], [], [13], [13], [13], [13], [13], [8, 15], [25, 31], [29, 23], [14], [24, 29], [29], [27, 28], [16, 33], [32], [32], [3, 30], [3, 4], [19], [19], [17, 18], [14]], "fname": "fts_stat", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 0, 1, 1, 20, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     [rbp+pa], rax", "mov     rax, [rbp+b]", "mov     [rbp+pb], rax", "mov     rax, [rbp+pa]", "mov     rax, [rax]", "mov     rax, [rax+50h]", "mov     rax, [rax+40h]", "mov     rcx, [rbp+pb]", "mov     rdx, [rbp+pa]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "mov~rax,[rax+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 20, 0.0, 0, 1], "succs": [[]], "fname": "fts_compar", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 6, 1, 0, 3, 1, 1, 0, 0, 0.19230769230769232, ["sub     nitems, 1", "test    nitems, nitems", "jnz     short loc_9DCA"], ["sub~nitems,0", "test~nitems,nitems", "jnz~FOO"]], [1, 0, 6, 0, 1, 13, 0, 2, 3, 4, 0.18131868131868134, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rdx, [rbp+compare]", "mov     rcx, rdx; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "mov     rdi, rax; base", "call    _qsort", "mov     rax, [rbp+sp_0]", "mov     ap, [rax+10h]", "mov     rax, [ap]", "mov     [rbp+head], rax", "jmp     short loc_9DD9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rsi,nitems", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~ap,[rax+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 5, 4, 0.0, ["mov     rax, [ap]", "mov     rdx, [ap+8]", "mov     [rax+10h], rdx", "add     ap, 8"], ["mov~rax,<TAG>", "mov~rdx,[ap+0]", "mov~[rax+0],rdx", "add~ap,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.13186813186813187, ["mov     rcx, [rbp+var_28]", "xor     rcx, fs:28h", "jz      short loc_9E05"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 14, 1, 0, 19, 1, 0, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p", "push    nitems", "push    ap", "sub     rsp, 38h", "mov     [rbp+sp_0], rdi", "mov     [rbp+head], rsi", "mov     nitems, rdx", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+40h]", "mov     [rbp+compare], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+38h]", "cmp     nitems, rax", "jbe     loc_9D79"], ["push~rbp", "mov~rbp,rsp", "push~p", "push~nitems", "push~ap", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~nitems,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~nitems,rax", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 1, 6, 0.14835164835164835, ["mov     rax, [rbp+sp_0]", "mov     ap, [rax+10h]", "mov     p, [rbp+head]", "jmp     short loc_9D95"], ["mov~rax,[rbp+0]", "mov~ap,[rax+0]", "mov~p,[rbp+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 3, 7, 0.07692307692307693, ["mov     rax, [rbp+sp_0]", "mov     rdx, [rbp+a]", "mov     [rax+10h], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx"]], [2, 0, 3, 0, 1, 10, 0, 2, 2, 2, 0.049450549450549455, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+38h], 0", "mov     rax, [rbp+head]", "jmp     loc_9DF1"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 13, 0, 0, 8, 0, 1, 1, 3, 0.03296703296703297, ["lea     rdx, [nitems+28h]", "mov     rax, [rbp+sp_0]", "mov     [rax+38h], rdx", "mov     rax, [rbp+sp_0]", "mov     rdx, [rax+38h]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "ja      short loc_9D3C"], ["lea~rdx,[nitems+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 12, 0, 1, 11, 0, 2, 2, 3, 0.049450549450549455, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+38h]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+10h]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+a], rax", "cmp     [rbp+a], 0", "jnz     short loc_9D6D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 5, 2, 0.11538461538461539, ["mov     rax, [ap]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+head]"], ["mov~rax,<TAG>", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 4, 0, 0.0, ["add     rsp, 38h", "pop     ap", "pop     nitems", "pop     p", "pop     rbp", "retn"], ["add~rsp,0", "pop~ap", "pop~nitems", "pop~p", "pop~rbp", "retn"]], [0, 0, 9, 0, 0, 4, 0, 0, 3, 6, 0.0, ["mov     rax, ap", "lea     ap, [rax+8]", "mov     [rax], p", "mov     p, [p+10h]"], ["mov~rax,ap", "lea~ap,[rax+0]", "mov~<TAG>,p", "mov~p,[p+0]"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 5, 0.2087912087912088, ["test    p, p", "jnz     short loc_9D87"], ["test~p,p", "jnz~FOO"]]], "func_feature": [4, 4, 12, 1, 15, 19, 3, 94, 0.07912, 1, 4], "succs": [[2, 11], [0], [0], [], [3, 12], [9, 6], [14], [6], [4], [8, 10], [8, 7], [4], [], [14], [1, 13]], "fname": "fts_sort", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 1, 3, 1, 1, 17, 2, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    namelen", "push    p", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+name], rsi", "mov     namelen, rdx", "lea     rax, [namelen+110h]", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     [rbp+len], rax", "mov     rax, [rbp+len]", "mov     rdi, rax; size", "call    _malloc", "mov     p, rax", "test    p, p", "jnz     short loc_9E51"], ["push~rbp", "mov~rbp,rsp", "push~namelen", "push~p", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~namelen,rdx", "lea~rax,[namelen+0]", "and~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~p,rax", "test~p,p", "jnz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     p", "pop     namelen", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p", "pop~namelen", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, 0", "jmp     short loc_9EB9"], ["mov~eax,0", "jmp~FOO"]], [7, 0, 1, 0, 1, 20, 0, 1, 0, 1, 0.08333333333333333, ["lea     rax, [p+108h]", "mov     rcx, [rbp+name]", "mov     rdx, namelen; n", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     byte ptr [p+namelen+108h], 0", "mov     [p+60h], namelen", "mov     rax, [rbp+sp_0]", "mov     [p+50h], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     [p+38h], rax", "mov     dword ptr [p+40h], 0", "mov     qword ptr [p+18h], 0", "mov     word ptr [p+72h], 0", "mov     word ptr [p+74h], 3", "mov     qword ptr [p+20h], 0", "mov     qword ptr [p+28h], 0", "mov     rax, p"], ["lea~rax,[p+0]", "mov~rcx,[rbp+0]", "mov~rdx,namelen", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[yte ptr [p+0],0", "mov~[p+0],namelen", "mov~rax,[rbp+0]", "mov~[p+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[p+0],rax", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[ord ptr [p+0],0", "mov~[ord ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~rax,p"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 44, 0.04167, 0, 2], "succs": [[2, 3], [], [1], [1]], "fname": "fts_alloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     rax, [p+18h]", "mov     rdi, rax; dirp", "call    _closedir"], ["mov~rax,[p+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 2, 3, 0.25, ["mov     head, [head+10h]", "mov     rax, [p+18h]", "test    rax, rax", "jz      short loc_9EE8"], ["mov~head,[head+0]", "mov~rax,[p+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 3, 2, 0.25, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [0, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    head", "push    p", "mov     head, rdi", "jmp     short loc_9EF0"], ["push~rbp", "mov~rbp,rsp", "push~head", "push~p", "mov~head,rdi", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 1, 1, 0.5, ["mov     p, head", "test    p, p", "jnz     short loc_9ECE"], ["mov~p,head", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["nop", "pop     p", "pop     head", "pop     rbp", "retn"], ["nop", "pop~p", "pop~head", "pop~rbp", "retn"]]], "func_feature": [2, 2, 5, 0, 6, 7, 9, 23, 0.16667, 0, 0], "succs": [[2], [0, 2], [4], [4], [1, 5], []], "fname": "fts_lfree", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 0, 1, 0, 2, 10, 0, 3, 0, 0, 0.05, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+20h], 0", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "mov     eax, 0", "jmp     short locret_9FC9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 1, 5, 3, 0, 15, 0, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+sp_0], rdi", "mov     [rbp+more], rsi", "mov     rax, [rbp+sp_0]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+more]", "add     rax, rdx", "add     rax, 100h", "mov     [rbp+new_len], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+30h]", "cmp     [rbp+new_len], rax", "jnb     short loc_9F63"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnb~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 2, 1, 0.025, ["mov     rax, [rbp+sp_0]", "mov     rdx, [rbp+p]", "mov     [rax+20h], rdx", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0"]], [1, 0, 3, 0, 1, 13, 0, 2, 1, 2, 0.1, ["mov     rax, [rbp+sp_0]", "mov     rdx, [rbp+new_len]", "mov     [rax+30h], rdx", "mov     rax, [rbp+sp_0]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_9FB8"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 1, 0, 1, 8, 0, 2, 2, 1, 0.025, ["mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+sp_0]", "mov     qword ptr [rax+20h], 0", "mov     eax, 0", "jmp     short locret_9FC9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [4, 0, 7, 0, 6, 7, 2, 52, 0.03333, 0, 3], "succs": [[4], [0, 3], [4], [2, 5], [], [4]], "fname": "fts_palloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 1, 0, 0, 0.060897435897435896, ["mov     rax, [rbp+p]", "mov     rax, [rax+10h]", "jmp     short loc_A0CB"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "jmp~FOO"]], [0, 0, 8, 0, 0, 7, 1, 1, 5, 4, 0.23076923076923075, ["mov     rax, [rbp+p]", "mov     rdx, [rbp+addr]", "mov     [rax+38h], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_A0C3"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 7, 2, 0.1346153846153846, ["mov     [rbp+p], rax"], ["mov~[rbp+0],rax"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 3, 0.060897435897435896, ["mov     rax, [rbp+p]", "mov     rax, [rax+8]"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]"]], [1, 0, 13, 1, 0, 6, 0, 1, 2, 5, 0.03205128205128205, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+p]", "add     rdx, 108h", "cmp     rax, rdx", "jz      short loc_A034"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "add~rdx,0", "cmp~rax,rdx", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 3, 0.2692307692307692, ["cmp     [rbp+p], 0", "jnz     short loc_9FF1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 6, 0, 0, 3, 4, 0.1346153846153846, ["mov     rax, [rbp+p]", "mov     rdx, [rbp+addr]", "mov     [rax+38h], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax+10h]", "mov     [rbp+p], rax"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 13, 2, 0, 12, 0, 0, 3, 5, 0.0, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rax, [rax+38h]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+addr]", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax+30h], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 13, 0, 0, 11, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+sp_0], rdi", "mov     [rbp+head], rsi", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+20h]", "mov     [rbp+addr], rax", "mov     rax, [rbp+sp_0]", "mov     rax, [rax+8]", "mov     [rbp+p], rax", "jmp     short loc_A04C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 4, 5, 0.2948717948717949, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+p]", "add     rdx, 108h", "cmp     rax, rdx", "jz      short loc_A0A0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "add~rdx,0", "cmp~rax,rdx", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 0, 3, 1, 0.41025641025641024, ["mov     rax, [rbp+p]", "mov     rax, [rax+58h]", "test    rax, rax", "jns     short loc_A05D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jns~FOO"]], [0, 0, 8, 2, 0, 12, 0, 0, 5, 5, 0.0, ["mov     rax, [rbp+p]", "mov     rax, [rax+30h]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rax, [rax+38h]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+addr]", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax+30h], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 8, 0, 0, 3, 0, 1, 2, 2, 0.2564102564102564, ["mov     rax, [rbp+head]", "mov     [rbp+p], rax", "jmp     short loc_A0CF"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]]], "func_feature": [0, 2, 7, 0, 14, 18, 1, 78, 0.13462, 0, 6], "succs": [[2], [0, 3], [10], [2], [6, 7], [12, 4], [5], [6], [5], [1, 11], [9, 13], [1], [10], []], "fname": "fts_padjust", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.5, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_A0F5"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 1, 5, 1, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+argv], rdi", "mov     [rbp+max], 0", "jmp     short loc_A11F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 5, 1, 0, 1, 0, 0, 3, 2, 0.25, ["add     [rbp+argv], 8"], ["add~[rbp+0],0"]], [0, 0, 5, 0, 1, 8, 0, 1, 2, 3, 0.25, ["mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     rax, [rbp+len]", "cmp     rax, [rbp+max]", "jbe     short loc_A11A"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+max]", "add     rax, 1", "leave", "retn"], ["mov~rax,[rbp+0]", "add~rax,0", "leave", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+len]", "mov     [rbp+max], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [1, 1, 3, 0, 6, 7, 1, 25, 0.16667, 0, 3], "succs": [[3, 4], [0], [0], [2, 5], [], [2]], "fname": "fts_maxarglen", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 0, 0, 0, 0.053030303030303025, ["cmp     [rbp+fd], 0", "jns     short loc_A3EC"], ["cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 7, 4, 0.044117647058823525, ["mov     [rbp+ret], 0FFFFFFFFh", "jmp     bail"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 6, 0, 1, 5, 0, 2, 8, 4, 0.0066844919786096255, ["call    ___errno_location", "mov     dword ptr [rax], 2", "mov     [rbp+ret], 0FFFFFFFFh", "nop", "jmp     short bail"], ["call~FOO", "mov~<TAG>,0", "mov~[rbp+0],0", "nop", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 8, 4, 0.0066844919786096255, ["mov     eax, [rbp+newfd]", "mov     edi, eax; fd", "call    _fchdir", "mov     [rbp+ret], eax"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax"]], [0, 0, 13, 0, 1, 7, 1, 2, 6, 5, 0.09581105169340463, ["lea     rdx, [rbp+sb]", "mov     eax, [rbp+newfd]", "mov     rsi, rdx; stat_buf", "mov     edi, eax; fildes", "call    fstat", "test    eax, eax", "jz      short loc_A314"], ["lea~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 5, 5, 0.15062388591800355, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 2", "test    eax, eax", "jnz     short loc_A2EA"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 1, 6, 1, 2, 7, 4, 0.00445632798573975, ["mov     rax, [rbp+dir]", "lea     rsi, off_E837; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_A35D"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.0570409982174688, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_A406"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 33, 0, 1, 6, 1, 2, 1, 6, 0.00089126559714795, ["mov     rax, [rbp+dir]", "lea     rsi, off_E837; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_A195"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 34, 1, 0, 12, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0E0h", "mov     [rbp+sp_0], rdi", "mov     [rbp+p], rsi", "mov     [rbp+fd], edx", "mov     [rbp+dir], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+dir], 0", "jz      short loc_A195"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 23, 0, 0, 5, 2, 1, 5, 5, 0.01871657754010695, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_A26A"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 4, 5, 0.0213903743315508, ["cmp     [rbp+is_dotdot], 0", "jz      short loc_A26A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 5, 0.013814616755793225, ["mov     eax, 1", "jmp     short loc_A19A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 1, 0, 0, 1, 5, 0.04144385026737968, ["mov     eax, 0"], ["mov~eax,0"]], [3, 0, 3, 0, 1, 14, 3, 2, 8, 2, 0.014705882352941176, ["movzx   eax, [rbp+is_dotdot]", "test    eax, eax", "setnz   al", "xor     eax, 1", "movzx   eax, al", "and     eax, 1", "movzx   edx, al; chdir_down_one", "mov     ecx, [rbp+newfd]", "mov     rax, [rbp+sp_0]", "mov     esi, ecx; fd", "mov     rdi, rax; sp_0", "call    cwd_advance_fd", "mov     eax, 0", "jmp     short loc_A3F2"], ["movzx~eax,[rbp+0]", "test~eax,eax", "setnz~al", "xor~eax,0", "movzx~eax,al", "and~eax,0", "movzx~edx,al", "mov~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 1, 8, 0, 0, 5, 2, 1, 7, 3, 0.049910873440285206, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_A3A6"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 18, 0, 1, 8, 0, 1, 5, 3, 0.029411764705882353, ["mov     rdx, [rbp+dir]", "mov     rax, [rbp+sp_0]", "mov     rsi, rdx; dir", "mov     rdi, rax; sp_0", "call    diropen", "mov     [rbp+newfd], eax", "cmp     [rbp+newfd], 0", "jns     short loc_A2B1"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 19, 0, 0, 4, 0, 0, 4, 4, 0.1729055258467023, ["mov     eax, [rbp+fd]", "mov     [rbp+newfd], eax", "cmp     [rbp+fd], 0", "jns     short loc_A2B1"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [2, 0, 22, 1, 1, 7, 2, 2, 6, 5, 0.0142602495543672, ["mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; ir", "call    i_ring_empty", "xor     eax, 1", "test    al, al", "jz      short loc_A26A"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 11, 0, 0, 5, 0, 1, 7, 5, 0.03297682709447415, ["mov     rax, [rbp+p]", "mov     rdx, [rax+78h]", "mov     rax, [rbp+sb.st_dev]", "cmp     rdx, rax", "jnz     short loc_A345"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0213903743315508, ["mov     eax, 0FFFFFFFFh", "jmp     loc_A3F2"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 30, 0, 0, 7, 3, 1, 2, 4, 0.10695187165775401, ["mov     [rbp+is_dotdot], al", "and     [rbp+is_dotdot], 1", "mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 4", "test    eax, eax", "jz      short loc_A1EB"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 10, 0, 0, 5, 0, 1, 8, 4, 0.0066844919786096255, ["mov     rax, [rbp+p]", "mov     rdx, [rax+80h]", "mov     rax, [rbp+sb.st_ino]", "cmp     rdx, rax", "jz      short loc_A35D"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 5, 2, 1, 3, 3, 0.026737967914438502, ["mov     rax, [rbp+sp_0]", "mov     eax, [rax+48h]", "and     eax, 200h", "test    eax, eax", "jz      short loc_A1E1"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 4, 0.05258467023172905, ["cmp     [rbp+dir], 0", "jz      loc_A35D"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 21, 1, 1, 8, 0, 2, 7, 5, 0.00802139037433155, ["mov     rax, [rbp+sp_0]", "add     rax, 60h", "mov     rdi, rax; ir", "call    i_ring_pop", "mov     [rbp+parent_fd], eax", "mov     [rbp+is_dotdot], 1", "cmp     [rbp+parent_fd], 0", "js      short loc_A26A"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 3, 0.0053475935828877, ["cmp     [rbp+fd], 0", "js      short loc_A1E1"], ["cmp~[rbp+0],0", "js~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 5, 3, 0.0, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 0, 8, 5, 0.0, ["mov     eax, [rbp+parent_fd]", "mov     [rbp+fd], eax", "mov     [rbp+dir], 0"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~[rbp+0],0"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.0213903743315508, ["mov     eax, 0", "jmp     loc_A3F2"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 3, 10, 0, 3, 9, 3, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+oerrno], eax", "mov     eax, [rbp+newfd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+oerrno]", "mov     [rdx], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 3, 0, 0, 1, 0, 0, 9, 2, 0.017379679144385027, ["mov     eax, [rbp+ret]"], ["mov~eax,[rbp+0]"]], [1, 0, 25, 0, 0, 2, 0, 0, 3, 5, 0.09803921568627451, ["cmp     [rbp+fd], 0", "jns     short loc_A26A"], ["cmp~[rbp+0],0", "jns~FOO"]]], "func_feature": [14, 21, 37, 1, 35, 54, 4, 160, 0.0341, 2, 3], "succs": [[32, 33], [0], [0], [0], [1, 20], [26, 4], [16, 4], [], [21, 7], [13, 14], [9, 14], [18, 19], [18, 11], [23], [23], [8], [3, 15], [5, 22], [17, 5], [18, 27], [24, 2], [], [8], [25, 34], [16, 2], [28, 31], [16, 6], [18, 30], [29, 31], [31], [18], [8], [33], [8], [18, 12]], "fname": "fts_safe_changedir", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.19444444444444442, ["mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_A4AC"], ["mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 8, 0, 1, 4, 2, 0.020833333333333332, ["mov     rax, [rbp+s]", "movzx   eax, byte ptr [rax]", "mov     [rbp+uc], al", "movzx   edx, [rbp+uc]", "mov     rax, [rbp+pwc]", "mov     [rax], edx", "mov     eax, 1", "jmp     short loc_A498"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.1875, ["mov     rax, [rbp+ret]"], ["mov~rax,[rbp+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08333333333333333, ["cmp     [rbp+n], 0", "jz      short loc_A494"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 9, 0, 1, 1, 3, 0.19444444444444442, ["mov     rcx, [rbp+ps]; p", "mov     rdx, [rbp+n]; n", "mov     rsi, [rbp+s]; s", "mov     rax, [rbp+pwc]", "mov     rdi, rax; pwc", "call    _mbrtowc", "mov     [rbp+ret], rax", "cmp     [rbp+ret], 0FFFFFFFFFFFFFFFDh", "jbe     short loc_A494"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 5, 0, 1, 5, 2, 2, 3, 3, 0.05555555555555555, ["mov     edi, 0; category", "call    hard_locale", "xor     eax, 1", "test    al, al", "jz      short loc_A494"], ["mov~edi,0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 9, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+pwc], rdi", "mov     [rbp+s], rsi", "mov     [rbp+n], rdx", "mov     [rbp+ps], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+pwc], 0", "jnz     short loc_A43E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 1, 4, 0.0, ["lea     rax, [rbp+wc]", "mov     [rbp+pwc], rax"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [3, 4, 8, 1, 10, 13, 1, 45, 0.07361, 1, 1], "succs": [[5, 6], [0], [0], [2, 7], [2, 3], [], [], [1, 2], [9, 4], [4]], "fname": "rpl_mbrtowc", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 1, 0, 4, 0, 0, 0, 0, 0.09523809523809523, ["movzx   edx, [rbp+c1]", "movzx   eax, [rbp+c2]", "sub     edx, eax", "mov     eax, edx"], ["movzx~edx,[rbp+0]", "movzx~eax,[rbp+0]", "sub~edx,eax", "mov~eax,edx"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.047619047619047616, ["jmp     short loc_A511"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 2, 2, 0.07142857142857142, ["nop"], ["nop"]], [0, 1, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     p2", "pop     p1", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p2", "pop~p1", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.023809523809523808, ["mov     eax, 0", "jmp     short loc_A51D"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 7, 1, 0, 11, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p1", "push    p2", "sub     rsp, 20h", "mov     [rbp+s1], rdi", "mov     [rbp+s2], rsi", "mov     p1, [rbp+s1]", "mov     p2, [rbp+s2]", "cmp     p1, p2", "jnz     short loc_A4D5"], ["push~rbp", "mov~rbp,rsp", "push~p1", "push~p2", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~p1,[rbp+0]", "mov~p2,[rbp+0]", "cmp~p1,p2", "jnz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 1, 2, 3, 0.047619047619047616, ["add     p1, 1", "add     p2, 1", "movzx   eax, [rbp+c1]", "cmp     al, [rbp+c2]", "jz      short loc_A4D5"], ["add~p1,0", "add~p2,0", "movzx~eax,[rbp+0]", "cmp~al,[rbp+0]", "jz~FOO"]], [1, 0, 6, 0, 2, 12, 0, 3, 1, 3, 0.11904761904761904, ["movzx   eax, byte ptr [p1]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c1], al", "movzx   eax, byte ptr [p2]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c2], al", "cmp     [rbp+c1], 0", "jz      short loc_A510"], ["movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [2, 0, 7, 0, 8, 10, 2, 41, 0.0506, 0, 5], "succs": [[3], [0], [0], [], [3], [4, 7], [1, 7], [2, 6]], "fname": "c_strcasecmp", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05357142857142857, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_A5AF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 1, 2, 0.1607142857142857, ["movzx   eax, [rbp+fclose_fail]", "xor     eax, 1", "test    al, al", "jz      short loc_A5A3"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 2, 0, 1, 2, 0, 1, 2, 2, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05357142857142857, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.0625, ["cmp     [rbp+fclose_fail], 0", "jz      short loc_A5AA"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, 2, 0.026785714285714284, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 9", "jz      short loc_A5AA"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08928571428571427, ["cmp     [rbp+some_pending], 0", "jnz     short loc_A58D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 1, 8, 1, 3, 24, 3, 4, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+stream], rdi", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___fpending", "test    rax, rax", "setnz   al", "mov     [rbp+some_pending], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _ferror_unlocked", "test    eax, eax", "setnz   al", "mov     [rbp+prev_fail], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    rpl_fclose", "test    eax, eax", "setnz   al", "mov     [rbp+fclose_fail], al", "cmp     [rbp+prev_fail], 0", "jnz     short loc_A58D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~rax,rax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [5, 5, 11, 0, 9, 13, 3, 43, 0.0496, 0, 1], "succs": [[7], [0, 2], [0], [7], [3, 6], [1, 3], [1, 5], [], [1, 4]], "fname": "close_stream", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 1, 0, 10, 2, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+i], rdi", "mov     rax, [rbp+i]", "sub     rax, 1", "and     rax, [rbp+i]", "test    rax, rax", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "sub~rax,0", "and~rax,[rbp+0]", "test~rax,rax", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 2, 0, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "is_zero_or_power_of_two", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+state], rdi", "mov     rax, [rbp+state]", "mov     qword ptr [rax+10h], 0", "mov     rax, [rbp+state]", "mov     dword ptr [rax+18h], 95F616h", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 10, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.00909090909090909, ["mov     eax, 1", "jmp     short locret_A6C7"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 3, 2, 0.09090909090909091, ["mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_A6A4"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 11, 1, 0, 9, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+state], rdi", "mov     [rbp+sb], rsi", "mov     rax, [rbp+state]", "mov     eax, [rax+18h]", "cmp     eax, 95F616h", "jz      short loc_A62C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.013636363636363636, ["mov     eax, 1", "jmp     short locret_A6C7"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 6, 0, 1, 3, 2, 0.031818181818181815, ["mov     rax, [rbp+sb]", "mov     rdx, [rax]", "mov     rax, [rbp+state]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_A668"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3559; \"cycle_check\"", "mov     edx, 3Ch ; '<'; line", "lea     rsi, aLibCycleCheckC; \"lib/cycle-check.c\"", "lea     rdi, aStateMagic9827; \"state->magic == 9827862\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.04090909090909091, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 8, 0, 0, 6, 0, 1, 2, 3, 0.03636363636363636, ["mov     rax, [rbp+sb]", "mov     rdx, [rax+8]", "mov     rax, [rbp+state]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_A668"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, 3, 0.08181818181818182, ["mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_A668"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 1, 11, 1, 2, 2, 2, 0.16818181818181818, ["mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+state]", "mov     [rax+10h], rdx", "mov     rax, [rbp+state]", "mov     rax, [rax+10h]", "mov     rdi, rax; i", "call    is_zero_or_power_of_two", "test    al, al", "jz      short loc_A6C2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 0, 8, 0, 0, 4, 2, 0.00909090909090909, ["mov     rax, [rbp+sb]", "mov     rdx, [rax]", "mov     rax, [rbp+state]", "mov     [rax+8], rdx", "mov     rax, [rbp+sb]", "mov     rdx, [rax+8]", "mov     rax, [rbp+state]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]]], "func_feature": [2, 3, 10, 0, 12, 16, 1, 60, 0.04015, 3, 1], "succs": [[6], [0, 11], [9, 5], [6], [10, 3], [], [], [6], [10, 4], [8, 10], [1, 7], [7]], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 0, 6, 0, 0, 9, 0, 1, 0, 0, 0.125, ["mov     [rbp+ap.gp_offset], 10h", "mov     [rbp+ap.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+ap.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+ap.reg_save_area], rax", "mov     eax, [rbp+ap.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_A7A5"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [2, 0, 7, 0, 0, 8, 3, 1, 1, 2, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+mode], 0", "mov     eax, [rbp+flags]", "and     eax, 40h", "test    eax, eax", "jz      short loc_A7BF"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 2, 0, 2, 12, 1, 3, 2, 1, 0.19444444444444442, ["mov     edx, [rbp+mode]", "mov     ecx, [rbp+flags]", "mov     rax, [rbp+file]", "mov     esi, ecx; oflag", "mov     rdi, rax; file", "mov     eax, 0", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rbp+var_B8]", "xor     rsi, fs:28h", "jz      short locret_A7FF"], ["mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,ecx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 4, 2, 0, 8, 0, 1, 3, 3, 0.048611111111111105, ["mov     rax, [rbp+ap.reg_save_area]", "mov     edx, [rbp+ap.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+ap.gp_offset]", "add     edx, 8", "mov     [rbp+ap.gp_offset], edx", "jmp     short loc_A7B7"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [1, 0, 9, 1, 0, 11, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+file], rdi", "mov     [rbp+flags], esi", "mov     [rbp+var_A0], rdx", "mov     [rbp+var_98], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_A721"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.048611111111111105, ["mov     rax, [rbp+ap.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+ap.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.125, ["mov     eax, [rax]", "mov     [rbp+mode], eax"], ["mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 8, 14, 10, 12, 1, 64, 0.07361, 1, 3], "succs": [[4, 7], [0, 3], [], [9, 2], [8], [1, 6], [1], [8], [3], []], "fname": "open_safer", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 1, 4, 1, 1, 12, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+category], edi", "mov     [rbp+hard], 1", "mov     eax, [rbp+category]", "mov     esi, 0; locale", "mov     edi, eax; category", "call    _setlocale", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jz      short loc_A85C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.041666666666666664, ["mov     [rbp+hard], 0"], ["mov~[rbp+0],0"]], [0, 0, 3, 0, 1, 6, 1, 2, 0, 2, 0.16666666666666666, ["mov     rax, [rbp+p]", "lea     rsi, aC_0; \"C\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_A858"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 0, 1, 0.041666666666666664, ["mov     rax, [rbp+p]", "lea     rsi, aPosix; \"POSIX\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_A85C"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["movzx   eax, [rbp+hard]", "leave", "retn"], ["movzx~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [3, 2, 6, 0, 5, 7, 1, 28, 0.05, 2, 1], "succs": [[2, 4], [4], [1, 3], [1, 4], []], "fname": "hard_locale", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 9, 0, 0, 8, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+max_bucket_length], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_A902"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 0, 5, 0.0, ["add     [rbp+bucket_length], 1"], ["add~[rbp+0],0"]], [1, 0, 9, 0, 0, 5, 0, 1, 0, 4, 0.40277777777777773, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_A8D3"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 0, 5, 0.29166666666666663, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "mov     [rbp+bucket_length], 1", "jmp     short loc_A8D8"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 1, 0.4861111111111111, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_A8B5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 0, 2, 0.3611111111111111, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 9, 0, 0, 4, 1, 1, 0, 3, 0.3611111111111111, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_A8FD"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 0, 3, 0.29166666666666663, ["mov     rax, [rbp+bucket_length]", "cmp     rax, [rbp+max_bucket_length]", "jbe     short loc_A8FD"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+max_bucket_length]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]], [0, 0, 9, 0, 0, 2, 0, 0, 0, 3, 0.0, ["mov     rax, [rbp+bucket_length]", "mov     [rbp+max_bucket_length], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [0, 1, 4, 0, 10, 13, 1, 35, 0.21944, 0, 2], "succs": [[4], [2], [1, 7], [2], [8, 6], [4], [3, 5], [9, 5], [], [5]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 0, 4, 0, 1, 0, 0, 0.07272727272727272, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "cmp     [rbp+n_entries], rax", "jnz     short loc_A9A9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 2, 0.2545454545454545, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "cmp     [rbp+n_buckets_used], rax", "jnz     short loc_A9A9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 11, 0, 0, 4, 0, 0, 1, 3, 0.39999999999999997, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_A93B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 11, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+n_buckets_used], 0", "mov     [rbp+n_entries], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_A978"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 11, 1, 0, 1, 0, 0, 3, 4, 0.2636363636363636, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 5, 0.11818181818181818, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_A973"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short loc_A9AE"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.07727272727272727, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 11, 0, 0, 5, 0, 1, 4, 5, 0.19999999999999998, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_A95B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 11, 2, 0, 5, 0, 1, 3, 6, 0.07272727272727272, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "add     [rbp+n_buckets_used], 1", "add     [rbp+n_entries], 1", "jmp     short loc_A960"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "add~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 11, 1, 0, 1, 0, 0, 5, 6, 0.0, ["add     [rbp+n_entries], 1"], ["add~[rbp+0],0"]]], "func_feature": [0, 1, 7, 0, 12, 16, 0, 42, 0.12197, 0, 4], "succs": [[6, 7], [0, 7], [1, 5], [2], [2], [10, 4], [8], [8], [], [11, 4], [9], [9]], "fname": "hash_table_ok", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 0, 2, 17, 0, 2, 0, 0, 0.0, ["divsd   xmm1, xmm0", "movapd  xmm0, xmm1", "mov     rdx, [rbp+n_buckets_used]", "mov     rax, [rbp+stream]", "lea     rsi, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rdi, rax; stream", "mov     eax, 1", "call    _fprintf", "mov     rdx, [rbp+max_bucket_length]", "mov     rax, [rbp+stream]", "lea     rsi, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "nop", "leave", "retn"], ["divsd~xmm1,xmm0", "movapd~xmm0,xmm1", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "nop", "leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.06666666666666667, ["cvtsi2sd xmm0, rax", "jmp     short loc_AA8E"], ["cvtsi2sd~xmm0,rax", "jmp~FOO"]], [2, 0, 1, 0, 0, 6, 2, 0, 3, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2sd xmm0, rdx", "addsd   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2sd~xmm0,rdx", "addsd~xmm0,xmm0"]], [0, 0, 4, 0, 0, 2, 0, 1, 1, 0, 0.06666666666666667, ["cvtsi2sd xmm0, rax", "jmp     short loc_AA5D"], ["cvtsi2sd~xmm0,rax", "jmp~FOO"]], [3, 0, 6, 1, 6, 36, 1, 7, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     [rbp+stream], rsi", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_entries", "mov     [rbp+n_entries], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_buckets", "mov     [rbp+n_buckets], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_buckets_used", "mov     [rbp+n_buckets_used], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_max_bucket_length", "mov     [rbp+max_bucket_length], rax", "mov     rdx, [rbp+n_entries]", "mov     rax, [rbp+stream]", "lea     rsi, aEntriesLu; \"# entries:         %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rdx, [rbp+n_buckets]", "mov     rax, [rbp+stream]", "lea     rsi, aBucketsLu; \"# buckets:         %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rax, [rbp+n_buckets_used]", "test    rax, rax", "js      short loc_AA48"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 5, 1, 1, 2, 0, 0.3, ["movsd   xmm1, cs:qword_E948", "mulsd   xmm1, xmm0", "mov     rax, [rbp+n_buckets]", "test    rax, rax", "js      short loc_AA79"], ["movsd~xmm1,<TAG>", "mulsd~xmm1,xmm0", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [2, 0, 4, 0, 0, 6, 2, 0, 1, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2sd xmm0, rdx", "addsd   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2sd~xmm0,rdx", "addsd~xmm0,xmm0"]]], "func_feature": [8, 6, 12, 0, 7, 8, 0, 74, 0.08095, 5, 1], "succs": [[], [0], [0], [5], [3, 6], [1, 2], [5]], "fname": "hash_print_statistics", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdx, [rbp+n]", "shl     rdx, 4", "add     rax, rdx", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "leave", "retn"]], [0, 1, 2, 1, 1, 18, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+key], rsi", "mov     rax, [rbp+table]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+table]", "mov     rcx, [rdx+10h]", "mov     rdx, [rbp+key]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "mov     [rbp+n], rax", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "cmp     [rbp+n], rax", "jb      short loc_AB14"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 26, 0.0, 0, 3], "succs": [[], [0, 2], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.013888888888888888, ["mov     eax, 0", "jmp     short locret_ABB9"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_AB62"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 5, 3, 0.06944444444444445, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 7, 0, 1, 10, 1, 2, 4, 2, 0.08333333333333333, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+cursor]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_ABA1"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.08333333333333333, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_ABAD"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 2, 0.2638888888888889, ["cmp     [rbp+cursor], 0", "jnz     short loc_AB6C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 7, 0, 0, 4, 0, 1, 3, 2, 0.15277777777777776, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_AB98"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, 1, 0.027777777777777776, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "jmp     short locret_ABB9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]]], "func_feature": [2, 2, 9, 0, 10, 13, 1, 45, 0.07361, 0, 1], "succs": [[8], [0, 4], [5], [9, 2], [5], [6, 7], [8], [9, 3], [], [8]], "fname": "hash_lookup", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 6, 0, 0, 3, 0, 0, 0, 0, 0.08928571428571427, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 1, 8, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "test    rax, rax", "jnz     short loc_ABDB"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.17857142857142855, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_AC0E"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 2, 3, 0.25, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_ABF9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, 1, 0.07142857142857142, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "jmp     short locret_AC15"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 6, 1, 0, 2, 0, 1, 4, 4, 0.03571428571428571, ["add     [rbp+bucket], 10h", "jmp     short loc_ABE6"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.017857142857142856, ["mov     eax, 0", "jmp     short locret_AC15"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [1, 2, 6, 0, 9, 10, 0, 29, 0.07143, 0, 2], "succs": [[3], [0, 8], [4, 5], [2, 6], [7], [3], [], [], [7]], "fname": "hash_get_first", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 1, 0, 0, 0.18333333333333335, ["jmp     short loc_AC97"], ["jmp~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 2, 4, 0.17777777777777778, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_AC46"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 10, 1, 1, 13, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 5, 1, 0, 5, 0, 0, 4, 2, 0.19444444444444445, ["add     [rbp+bucket], 10h", "mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_AC82"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, 2, 0.06666666666666667, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_AC97"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.02777777777777778, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, 1, 0.03888888888888889, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "jmp     short locret_ACAF"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 2, 0.061111111111111116, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_AC6D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 6, 1, 0.011111111111111112, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "jmp     short locret_ACAF"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 0, 1, 1, 3, 0.1277777777777778, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jnz     short loc_AC6D"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]]], "func_feature": [1, 2, 8, 0, 11, 15, 0, 46, 0.08081, 0, 2], "succs": [[3], [0, 10], [10], [4, 5], [9, 3], [8], [8], [1, 6], [], [8], [1, 7]], "fname": "hash_get_next", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 10, 0, 0, 4, 1, 1, 0, 0, 0.22222222222222224, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_AD34"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 1, 2, 0.33333333333333337, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_ACD6"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 10, 0, 0, 10, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+buffer], rsi", "mov     [rbp+buffer_size], rdx", "mov     [rbp+counter], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_AD39"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 3, 3, 0.2, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [1, 0, 10, 0, 0, 2, 0, 1, 4, 3, 0.3666666666666667, ["cmp     [rbp+cursor], 0", "jnz     short loc_ACEC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 1, 0, 12, 0, 0, 6, 4, 0.06666666666666667, ["mov     rax, [rbp+counter]", "lea     rdx, [rax+1]", "mov     [rbp+counter], rdx", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+buffer]", "add     rdx, rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax]", "mov     [rdx], rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 10, 0, 0, 3, 0, 0, 5, 2, 0.17777777777777778, ["mov     rax, [rbp+counter]", "cmp     rax, [rbp+buffer_size]", "jb      short loc_ACFC"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, 4, 0.17777777777777778, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_AD2D"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]", "jmp     short loc_AD4B"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [0, 1, 5, 0, 11, 14, 0, 44, 0.14848, 0, 2], "succs": [[3, 7], [0, 8], [1], [1], [3, 6], [4], [10, 5], [4], [9], [], [9]], "fname": "hash_get_entries", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 10, 0, 0, 4, 1, 1, 0, 0, 0.22222222222222224, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_ADC8"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 1, 2, 0.33333333333333337, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_AD76"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]", "jmp     short locret_ADDF"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]"], ["mov~rax,[rbp+0]"]], [1, 0, 10, 0, 0, 2, 0, 1, 4, 3, 0.3666666666666667, ["cmp     [rbp+cursor], 0", "jnz     short loc_AD8C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, 4, 0.17777777777777778, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_ADC1"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 10, 1, 0, 4, 0, 0, 6, 4, 0.06666666666666667, ["add     [rbp+counter], 1", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 1, 10, 2, 2, 5, 2, 0.17777777777777778, ["mov     rax, [rbp+cursor]", "mov     rdx, [rax]", "mov     rcx, [rbp+processor_data]", "mov     rax, [rbp+processor]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "xor     eax, 1", "test    al, al", "jz      short loc_ADB0"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 3, 3, 0.2, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [2, 0, 10, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+table], rdi", "mov     [rbp+processor], rsi", "mov     [rbp+processor_data], rdx", "mov     [rbp+counter], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_ADCD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [1, 3, 7, 0, 11, 14, 0, 44, 0.14848, 0, 3], "succs": [[9, 6], [0, 4], [], [2], [2], [8, 9], [5], [5], [3, 7], [1], [1]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[3, 0, 3, 5, 0, 11, 0, 0, 0, 0, 0.0, ["mov     rdx, [rbp+value]", "mov     rax, rdx", "shl     rax, 5", "sub     rax, rdx", "mov     rdx, rax", "movzx   eax, [rbp+ch_0]", "add     rax, rdx", "mov     edx, 0", "div     [rbp+n_buckets]", "mov     [rbp+value], rdx", "add     [rbp+string], 1"], ["mov~rdx,[rbp+0]", "mov~rax,rdx", "shl~rax,0", "sub~rax,rdx", "mov~rdx,rax", "movzx~eax,[rbp+0]", "add~rax,rdx", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rdx", "add~[rbp+0],0"]], [1, 0, 3, 0, 0, 5, 0, 1, 1, 1, 0.5, ["mov     rax, [rbp+string]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "cmp     [rbp+ch_0], 0", "jnz     short loc_ADF7"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+string], rdi", "mov     [rbp+n_buckets], rsi", "mov     [rbp+value], 0", "jmp     short loc_AE21"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+value]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 25, 0.125, 0, 5], "succs": [[1], [0, 3], [1], []], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, [rbp+candidate]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "test    rax, rax", "jnz     short loc_AE56"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 1, 1, 0.41666666666666663, ["mov     rax, [rbp+square]", "cmp     rax, [rbp+candidate]", "jnb     short loc_AE8B"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 4, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+candidate], rdi", "mov     [rbp+divisor], 3", "mov     rax, [rbp+divisor]", "imul    rax, [rbp+divisor]", "mov     [rbp+square], rax", "jmp     short loc_AE6C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [3, 0, 4, 4, 0, 5, 0, 0, 3, 2, 0.08333333333333333, ["add     [rbp+divisor], 1", "mov     rax, [rbp+divisor]", "shl     rax, 2", "add     [rbp+square], rax", "add     [rbp+divisor], 1"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "shl~rax,0", "add~[rbp+0],rax", "add~[rbp+0],0"]], [1, 0, 0, 1, 0, 8, 1, 0, 2, 0, 0.0, ["mov     rax, [rbp+candidate]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "test    rax, rax", "setnz   al", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "setnz~al", "pop~rbp", "retn"]]], "func_feature": [0, 2, 2, 0, 5, 6, 1, 30, 0.13333, 0, 7], "succs": [[3, 4], [0, 4], [1], [1], []], "fname": "is_prime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 0, 1, 6, 2, 2, 0, 0, 0.13333333333333333, ["mov     rax, [rbp+candidate]", "mov     rdi, rax; candidate", "call    is_prime", "xor     eax, 1", "test    al, al", "jnz     short loc_AEC5"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 1, 0.36666666666666664, ["cmp     [rbp+candidate], 0FFFFFFFFFFFFFFFFh", "jz      short loc_AEE4"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.26666666666666666, ["or      [rbp+candidate], 1", "jmp     short loc_AECA"], ["or~[rbp+0],0", "jmp~FOO"]], [2, 0, 6, 1, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 8", "mov     [rbp+candidate], rdi", "cmp     [rbp+candidate], 9", "ja      short loc_AEBE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     [rbp+candidate], 0Ah"], ["mov~[rbp+0],0"]], [1, 0, 4, 1, 0, 1, 0, 0, 4, 2, 0.03333333333333333, ["add     [rbp+candidate], 2"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+candidate]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 3, 5, 0, 7, 9, 1, 21, 0.11429, 0, 2], "succs": [[5, 6], [0, 6], [1], [2, 4], [2], [1], []], "fname": "next_prime", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+tuning], rdi", "mov     rax, [rbp+tuning]", "pxor    xmm0, xmm0", "movss   dword ptr [rax], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_E950", "movss   dword ptr [rax+4], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_E954", "movss   dword ptr [rax+8], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_E958", "movss   dword ptr [rax+0Ch], xmm0", "mov     rax, [rbp+tuning]", "mov     byte ptr [rax+10h], 0", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "pxor~xmm0,xmm0", "movss~<TAG>,xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 20, 0.0, 3, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 1, 0, 2, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+data], rdi", "mov     [rbp+n], rsi", "mov     rax, [rbp+data]", "mov     esi, 3; n", "mov     rdi, rax; x", "call    rotr_sz", "mov     [rbp+val], rax", "mov     rax, [rbp+val]", "mov     edx, 0", "div     [rbp+n]", "mov     rax, rdx", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 16, 0.0, 0, 2], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "cmp     rax, [rbp+b]", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 3, 0, 0, 7, 0, 0, 0, 0, 0.06363636363636363, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "addss   xmm0, [rbp+epsilon]", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "ucomiss xmm1, xmm0", "jbe     short loc_B079"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,[rbp+0]", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 4, 0, 0, 5, 0, 0, 6, 2, 0.10909090909090909, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "movss   xmm0, cs:dword_E950", "ucomiss xmm0, xmm1", "jb      short loc_B079"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jb~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 4, 2, 0.14545454545454545, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "pxor    xmm1, xmm1", "ucomiss xmm0, xmm1", "jb      short loc_B079"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "pxor~xmm1,xmm1", "ucomiss~xmm0,xmm1", "jb~FOO"]], [0, 0, 7, 0, 0, 7, 0, 0, 3, 2, 0.13636363636363635, ["movss   xmm1, [rbp+epsilon]", "movss   xmm0, cs:dword_E950", "addss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "ucomiss xmm1, xmm0", "jbe     short loc_B079"], ["movss~xmm1,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 2, 1, 0.05909090909090909, ["mov     rax, [rbp+table]", "lea     rdx, default_tuning", "mov     [rax+28h], rdx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~[rax+0],rdx", "mov~eax,0"]], [0, 0, 9, 0, 0, 6, 0, 0, 1, 2, 0.07272727272727272, ["movss   xmm0, cs:dword_E95C", "movss   [rbp+epsilon], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax+8]", "ucomiss xmm0, [rbp+epsilon]", "jbe     loc_B079"], ["movss~xmm0,<TAG>", "movss~[rbp+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,[word ptr [rax+0]", "ucomiss~xmm0,[rbp+0]", "jbe~FOO"]], [0, 0, 8, 0, 0, 6, 0, 0, 2, 2, 0.10909090909090909, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "movss   xmm0, cs:dword_E950", "subss   xmm0, [rbp+epsilon]", "ucomiss xmm0, xmm1", "jbe     loc_B079"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "movss~xmm0,<TAG>", "subss~xmm0,[rbp+0]", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 5, 0, 0, 7, 0, 0, 5, 2, 0.13636363636363635, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "addss   xmm0, [rbp+epsilon]", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "ucomiss xmm1, xmm0", "jbe     short loc_B079"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,[rbp+0]", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 11, 0, 0, 9, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "lea     rax, default_tuning", "cmp     [rbp+tuning], rax", "jnz     short loc_AFB7"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00909090909090909, ["mov     eax, 1", "jmp     loc_B08D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short loc_B08D"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 12, 19, 3, 62, 0.07045, 3, 0], "succs": [[11, 4], [0, 4], [4, 7], [2, 4], [9], [4, 6], [3, 4], [1, 4], [10, 5], [], [9], [9]], "fname": "check_tuning", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.03768382352941176, ["cvtsi2ss xmm0, rax", "jmp     short loc_B0D7"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 1, 4, 0.03125, ["mov     rax, [rbp+candidate]", "test    rax, rax", "js      short loc_B0C2"], ["mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.017463235294117647, ["mov     eax, 0", "jmp     short locret_B196"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 3, 2, 0.12683823529411764, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_B192"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 9, 0, 0, 7, 1, 0, 5, 6, 0.07720588235294118, ["movss   xmm0, [rbp+new_candidate]", "movss   xmm1, cs:dword_E964", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     [rbp+candidate], rax", "mov     rax, 8000000000000000h", "xor     [rbp+candidate], rax"], ["movss~xmm0,[rbp+0]", "movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~[rbp+0],rax", "mov~rax,0", "xor~[rbp+0],rax"]], [0, 0, 11, 0, 0, 3, 0, 0, 4, 7, 0.15808823529411764, ["movss   xmm0, [rbp+new_candidate]", "ucomiss xmm0, cs:dword_E964", "jnb     short loc_B11F"], ["movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.016544117647058824, ["mov     eax, 0", "jmp     locret_B196"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.017463235294117647, ["mov     rax, [rbp+candidate]"], ["mov~rax,[rbp+0]"]], [1, 0, 4, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 5, 0, 0, 2, 1, 0, 2, 3, 0.18566176470588236, ["test    rax, rax", "jns     short loc_B181"], ["test~rax,rax", "jns~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 5, 0.19117647058823528, ["mov     rax, [rbp+candidate]", "mov     [rbp+candidate], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 4, 0, 1, 5, 6, 0.07720588235294118, ["movss   xmm0, [rbp+new_candidate]", "cvttss2si rax, xmm0", "mov     [rbp+candidate], rax", "jmp     short loc_B147"], ["movss~xmm0,[rbp+0]", "cvttss2si~rax,xmm0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 1, 17, 1, 0, 10, 2, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+candidate], rdi", "mov     [rbp+tuning], rsi", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "xor     eax, 1", "test    al, al", "jz      loc_B14F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 13, 0, 0, 7, 0, 0, 3, 2, 0.1636029411764706, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "divss   xmm0, xmm1", "movss   [rbp+new_candidate], xmm0", "movss   xmm0, [rbp+new_candidate]", "ucomiss xmm0, cs:dword_E960", "jb      short loc_B101"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "divss~xmm0,xmm1", "movss~[rbp+0],xmm0", "movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [2, 0, 7, 1, 1, 9, 0, 1, 1, 4, 0.2150735294117647, ["mov     rax, [rbp+candidate]", "mov     rdi, rax; candidate", "call    next_prime", "mov     [rbp+candidate], rax", "mov     ecx, 0", "mov     edx, 8", "mov     rax, rdx", "mul     [rbp+candidate]", "jno     short loc_B177"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 2, 4, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 14, 0, 0, 6, 2, 0, 2, 3, 0.03768382352941176, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]]], "func_feature": [1, 9, 8, 0, 18, 24, 2, 68, 0.07516, 2, 2], "succs": [[14], [0, 17], [6], [8, 2], [11], [12, 4], [], [6], [6], [3], [9, 3], [15], [11], [1, 15], [5, 7], [16, 10], [10], [14]], "fname": "compute_bucket_size", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 15, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rax, raw_hasher", "mov     [rbp+hasher], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [2, 0, 16, 1, 0, 10, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+candidate], rdi", "mov     [rbp+tuning], rsi", "mov     [rbp+hasher], rdx", "mov     [rbp+comparator], rcx", "mov     [rbp+data_freer], r8", "cmp     [rbp+hasher], 0", "jnz     short loc_B1C6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 12, 0, 1, 5, 0, 2, 2, 2, 0.2, ["mov     edi, 50h ; 'P'; size", "call    _malloc", "mov     [rbp+table], rax", "cmp     [rbp+table], 0", "jnz     short loc_B1F7"], ["mov~edi,<STR>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 3, 0.11666666666666667, ["cmp     [rbp+comparator], 0", "jnz     short loc_B1D8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 2, 3, 0.0, ["lea     rax, raw_comparator", "mov     [rbp+comparator], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 4, 0, 1, 12, 1, 2, 6, 2, 0.07708333333333334, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B2F8"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 12, 1, 2, 5, 3, 0.13333333333333333, ["mov     rdx, [rbp+tuning]", "mov     rax, [rbp+candidate]", "mov     rsi, rdx; tuning", "mov     rdi, rax; candidate", "call    compute_bucket_size", "mov     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax+10h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      loc_B2F5"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 4, 4, 0.0, ["lea     rax, default_tuning", "mov     [rbp+tuning], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 0, 2, 0, 1, 3, 4, 0.1875, ["cmp     [rbp+tuning], 0", "jnz     short loc_B209"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 1, 9, 2, 2, 4, 3, 0.2125, ["mov     rax, [rbp+table]", "mov     rdx, [rbp+tuning]", "mov     [rax+28h], rdx", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "xor     eax, 1", "test    al, al", "jnz     loc_B2F2"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.020833333333333332, ["mov     eax, 0", "jmp     locret_B30A"], ["mov~eax,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 25, 0, 1, 7, 1, 0.00625, ["mov     rax, [rbp+table]", "mov     rdx, [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "shl     rax, 4", "add     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+table]", "mov     qword ptr [rax+20h], 0", "mov     rax, [rbp+table]", "mov     rdx, [rbp+hasher]", "mov     [rax+30h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+comparator]", "mov     [rax+38h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+data_freer]", "mov     [rax+40h], rdx", "mov     rax, [rbp+table]", "mov     qword ptr [rax+48h], 0", "mov     rax, [rbp+table]", "jmp     short locret_B30A"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "shl~rax,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 6, 1, 0.027083333333333334, ["mov     rax, [rbp+table]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 2, 0.04583333333333333, ["nop", "jmp     short fail"], ["nop", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 6, 2, 0.00625, ["nop", "jmp     short fail"], ["nop", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.004166666666666667, ["nop"], ["nop"]]], "func_feature": [5, 4, 16, 0, 17, 23, 2, 96, 0.06103, 3, 3], "succs": [[3], [0, 3], [8, 11], [2, 4], [2], [16, 12], [5, 15], [9], [9, 7], [6, 14], [], [10], [10], [10], [13], [13], [13]], "fname": "hash_initialize", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 12, 1, 0, 1, 0, 0, 0, 0, 0.36363636363636365, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 12, 0, 0, 4, 1, 1, 2, 3, 0.36363636363636365, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_B3E1"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 12, 0, 0, 4, 0, 0, 6, 3, 0.32575757575757575, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+bucket]", "mov     qword ptr [rax+8], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [2, 0, 0, 0, 0, 7, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+table]", "mov     qword ptr [rax+20h], 0", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "nop", "leave", "retn"]], [0, 0, 12, 0, 0, 4, 0, 0, 1, 1, 0.4545454545454546, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      loc_B328"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 12, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     loc_B3E6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 0, 1, 3, 6, 0.32575757575757575, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     short loc_B3A2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 12, 0, 1, 6, 0, 1, 6, 7, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax"]], [0, 0, 12, 0, 0, 4, 1, 1, 5, 7, 0.14393939393939395, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_B367"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 5, 0.5530303030303031, ["cmp     [rbp+cursor], 0", "jnz     short loc_B346"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 12, 0, 0, 14, 0, 0, 6, 6, 0.14393939393939395, ["mov     rax, [rbp+cursor]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+cursor]", "mov     [rax+48h], rdx", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 12, 0, 1, 6, 0, 1, 6, 4, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+bucket]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax"]], [0, 0, 12, 0, 0, 4, 1, 1, 5, 4, 0.32575757575757575, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_B3CA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]]], "func_feature": [2, 3, 8, 0, 13, 17, 0, 68, 0.23077, 0, 2], "succs": [[4], [0, 6], [0], [], [1, 3], [4], [9], [10], [10, 7], [8, 12], [9], [2], [2, 11]], "fname": "hash_clear", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 16, 0, 0, 2, 0, 1, 0, 0, 0.11111111111111112, ["cmp     [rbp+cursor], 0", "jnz     short loc_B45C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 5, 8, 0.0392156862745098, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_B47C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 16, 0, 1, 9, 0, 1, 7, 8, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 16, 1, 0, 1, 0, 0, 5, 6, 0.16013071895424838, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 16, 0, 0, 4, 1, 1, 4, 7, 0.06862745098039216, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B483"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 1, 2, 6, 0.0392156862745098, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_B488"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 1, 5, 0.022875816993464054, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "test    rax, rax", "jz      short loc_B496"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 1, 4, 0.2647058823529412, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_B4DD"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 18, 1, 0, 8, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_B496"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 3, 5, 0.27450980392156865, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_B446"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 2, 3, 0.3300653594771242, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_B4A3"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 4, 0.05555555555555556, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.14705882352941177, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+cursor], rax", "jmp     short loc_B519"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 9, 0, 1, 8, 0, 1, 5, 6, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.12091503267973856, ["cmp     [rbp+cursor], 0", "jnz     short loc_B4B1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 3, 6, 0.11437908496732027, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     short loc_B4D1"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 3, 0, 1, 8, 0, 1, 5, 2, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 1, 0.10784313725490197, ["cmp     [rbp+cursor], 0", "jnz     short loc_B4F9"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 2, 10, 0, 2, 5, 0, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+table]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [5, 3, 16, 0, 19, 26, 2, 86, 0.0977, 0, 3], "succs": [[2, 3], [0], [0], [9], [1, 3], [9], [5, 7], [10], [6, 7], [4, 7], [12, 15], [10], [17], [14], [11, 13], [14], [17], [16, 18], []], "fname": "hash_free", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+new]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 8, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+new], rax", "mov     rax, [rbp+new]", "mov     rdx, [rax+8]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "jmp     short loc_B583"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 1, 0, 0.08333333333333333, ["mov     edi, 10h; size", "call    _malloc", "mov     [rbp+new], rax"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax"]], [0, 1, 3, 1, 0, 8, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "test    rax, rax", "jz      short loc_B575"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 4, 2, 22, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "allocate_entry", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, [rbp+entry]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+entry]", "mov     [rax+48h], rdx", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 16, 0.0, 0, 0], "succs": [[]], "fname": "free_entry", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0196078431372549, ["mov     rax, [rbp+data]", "jmp     locret_B752"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 5, 0, 0, 5, 0, 1, 2, 2, 0.04575163398692811, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "mov     [rbp+data], rax", "cmp     [rbp+delete], 0", "jz      short loc_B69C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 1, 15, 0, 2, 4, 2, 0.0032679738562091504, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rcx, [rbp+bucket]", "mov     rax, [rbp+next]", "mov     rdx, [rax+8]", "mov     rax, [rax]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rdx, [rbp+next]", "mov     rax, [rbp+table]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry", "jmp     short loc_B69C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 4, 2, 0.0032679738562091504, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 9, 0, 0, 5, 0, 1, 5, 3, 0.09477124183006536, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_B6E6"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 4, 2, 0.12745098039215685, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "test    rax, rax", "jnz     loc_B6B2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.0032679738562091504, ["mov     eax, 0", "jmp     locret_B752"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 18, 1, 1, 21, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     [rbp+bucket_head], rdx", "mov     eax, ecx", "mov     [rbp+delete], al", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket_head]", "mov     rdx, [rbp+bucket]", "mov     [rax], rdx", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_B610"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~eax,ecx", "mov~[rbp+0],al", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 1, 12, 0, 1, 7, 2, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next_0], rax", "mov     rax, [rbp+next_0]", "mov     rdx, [rax+8]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rdx, [rbp+next_0]", "mov     rax, [rbp+table]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 6, 0, 1, 6, 2, 0.058823529411764705, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "mov     [rbp+data_0], rax", "cmp     [rbp+delete], 0", "jz      short loc_B72A"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.00980392156862745, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 3, 0, 1, 3, 3, 0.0784313725490196, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     loc_B73C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 7, 3, 0.016339869281045753, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 16, 0, 0, 4, 0, 1, 1, 3, 0.049019607843137254, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_B63C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 15, 0, 1, 10, 1, 2, 2, 3, 0.058823529411764705, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+bucket]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_B6A5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 7, 1, 0.013071895424836602, ["mov     rax, [rbp+data_0]", "jmp     short locret_B752"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 3, 3, 0.026143790849673203, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_B691"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 1, 11, 1, 2, 6, 3, 0.026143790849673203, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx+8]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_B730"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [5, 5, 19, 0, 19, 27, 3, 114, 0.03337, 0, 1], "succs": [[18], [0, 16], [0], [0], [9, 17], [10, 4], [18], [13, 6], [15], [8, 15], [18], [5], [5], [1, 14], [1, 11], [18], [2, 3], [9, 12], []], "fname": "hash_find_entry", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 19, 0, 0, 8, 0, 0, 0, 0, 0.07309941520467836, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+dst]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+dst]", "mov     [rax+18h], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 19, 0, 1, 10, 1, 2, 6, 3, 0.22807017543859648, ["mov     rdx, [rbp+data]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+new_bucket], rax", "mov     rax, [rbp+new_bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B8C5"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 7, 2, 0.11403508771929824, ["mov     rax, [rbp+dst]", "mov     rdi, rax; table", "call    allocate_entry", "mov     [rbp+new_entry], rax", "cmp     [rbp+new_entry], 0", "jnz     short loc_B89C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 2, 4, 0.35964912280701755, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_B906"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 1, 2, 0.4269005847953216, ["mov     rax, [rbp+src]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      loc_B779"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 6, 4, 0.11403508771929824, ["nop"], ["nop"]], [2, 0, 19, 0, 0, 7, 0, 1, 5, 4, 0.3830409356725146, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "mov     [rbp+data], rax", "mov     rax, [rbp+bucket]", "mov     qword ptr [rax+8], 0", "cmp     [rbp+safe], 0", "jnz     loc_B905"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 19, 1, 0, 1, 0, 0, 3, 3, 0.36549707602339176, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [1, 0, 19, 0, 0, 8, 0, 1, 8, 4, 0.17543859649122806, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+src]", "mov     rax, [rax+18h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+src]", "mov     [rax+18h], rdx", "jmp     short loc_B906"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 7, 6, 0.14327485380116958, ["mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 19, 0, 0, 8, 0, 1, 6, 7, 0.04239766081871345, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+cursor]", "mov     [rax+8], rdx", "jmp     short loc_B824"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 1, 13, 0, 1, 6, 7, 0.04239766081871345, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+dst]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+dst]", "mov     [rax+18h], rdx", "mov     rdx, [rbp+cursor]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.02631578947368421, ["mov     eax, 0", "jmp     locret_B922"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.023391812865497075, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 19, 0, 0, 11, 0, 1, 8, 5, 0.043859649122807015, ["mov     rax, [rbp+new_entry]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+new_entry]", "mov     [rax+8], rdx", "jmp     short loc_B8E4"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 1, 19, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+dst], rdi", "mov     [rbp+src], rsi", "mov     eax, edx", "mov     [rbp+safe], al", "mov     rax, [rbp+src]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     loc_B90B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 5, 0.5497076023391813, ["cmp     [rbp+cursor], 0", "jnz     loc_B79A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 1, 16, 1, 2, 5, 8, 0.12573099415204678, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "mov     [rbp+data], rax", "mov     rdx, [rbp+data]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+new_bucket], rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+new_bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_B7F2"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 1, 3, 6, 0.347953216374269, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     loc_B82C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [4, 3, 16, 0, 20, 26, 3, 121, 0.17924, 0, 2], "succs": [[8], [0, 2], [13, 15], [19, 7], [3, 14], [7], [1, 5], [4], [7], [17], [9], [9], [], [12], [12], [8], [4], [18, 6], [10, 11], [17]], "fname": "transfer_entries", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.016483516483516484, ["mov     eax, 1", "jmp     loc_BB35"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 0, 1, 1, 3, 0.049450549450549455, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "cmp     [rbp+new_size], rax", "jnz     short loc_B987"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 14, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     [rbp+table], rdi", "mov     [rbp+candidate], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+table]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+candidate]", "mov     rsi, rdx; tuning", "mov     rdi, rax; candidate", "call    compute_bucket_size", "mov     [rbp+new_size], rax", "cmp     [rbp+new_size], 0", "jnz     short loc_B96F"], ["push~rbp", "mov~rbp,rsp", "add~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.1208791208791209, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BB49"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [2, 0, 6, 0, 1, 13, 2, 2, 4, 4, 0.06593406593406594, ["mov     rax, [rbp+new_table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "mov     rcx, [rbp+new_table]", "mov     rax, [rbp+table]", "mov     edx, 1; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "xor     eax, 1", "test    al, al", "jnz     short loc_BB1C"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [4, 0, 8, 2, 1, 42, 1, 2, 3, 3, 0.08241758241758243, ["mov     rax, [rbp+new_table]", "mov     rdx, [rbp+new_size]", "mov     [rax+10h], rdx", "mov     rax, [rbp+new_table]", "mov     rax, [rax]", "mov     rdx, [rbp+new_size]", "shl     rdx, 4", "add     rdx, rax", "mov     rax, [rbp+new_table]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+new_table]", "mov     qword ptr [rax+20h], 0", "mov     rax, [rbp+table]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+new_table]", "mov     [rax+28h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+new_table]", "mov     [rax+30h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+38h]", "mov     rax, [rbp+new_table]", "mov     [rax+38h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+40h]", "mov     rax, [rbp+new_table]", "mov     [rax+40h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+new_table]", "mov     [rax+48h], rdx", "mov     rcx, [rbp+table]", "mov     rax, [rbp+new_table]", "mov     edx, 0; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "test    al, al", "jz      short loc_BACE"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 1, 13, 1, 2, 2, 3, 0.07692307692307693, ["lea     rax, [rbp+storage]", "mov     [rbp+new_table], rax", "mov     rax, [rbp+new_size]", "mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     rdx, rax", "mov     rax, [rbp+new_table]", "mov     [rax], rdx", "mov     rax, [rbp+new_table]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_B9C0"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.016483516483516484, ["mov     eax, 0", "jmp     loc_BB35"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 26, 0, 2, 4, 2, 0.016483516483516484, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+new_table]", "mov     rdx, [rax]", "mov     rax, [rbp+table]", "mov     [rax], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+8]", "mov     rax, [rbp+table]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+table]", "mov     [rax+10h], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "mov     eax, 1", "jmp     short loc_BB35"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.016483516483516484, ["mov     eax, 0", "jmp     loc_BB35"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 6, 2, 0.03296703296703297, ["mov     rax, [rbp+new_table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [2, 0, 5, 0, 1, 9, 2, 2, 5, 3, 0.04395604395604396, ["mov     rcx, [rbp+new_table]", "mov     rax, [rbp+table]", "mov     edx, 0; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "xor     eax, 1", "test    al, al", "jz      short loc_BB21"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [9, 8, 20, 1, 15, 19, 2, 142, 0.0359, 1, 3], "succs": [[4], [0, 7], [8, 1], [], [3, 14], [12, 13], [9, 5], [10, 6], [4], [4], [4], [4], [11, 13], [], []], "fname": "hash_rehash", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 18, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cvtsi2ss xmm0, rax", "jmp     short loc_BD17"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 13, 6, 0.06641414141414141, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BD02"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.04141414141414142, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BE86"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 5, 5, 0.05, ["cvtsi2ss xmm1, rax", "jmp     short loc_BC19"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 36, 0, 0, 7, 1, 1, 4, 6, 0.08787878787878788, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax+8]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BC04"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,[word ptr [rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 12, 0, 0, 6, 1, 0, 18, 4, 0.04191919191919192, ["movss   xmm0, [rbp+candidate]", "movss   xmm1, cs:dword_E964", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx"], ["movss~xmm0,[rbp+0]", "movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx"]], [0, 0, 14, 0, 0, 3, 0, 0, 17, 5, 0.10404040404040404, ["movss   xmm0, [rbp+candidate]", "ucomiss xmm0, cs:dword_E964", "jnb     short loc_BD68"], ["movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 27, 0, 0, 6, 2, 0, 10, 5, 0.07045454545454545, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [0, 0, 29, 0, 0, 7, 1, 1, 9, 6, 0.1393939393939394, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax+8]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BC7C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,[word ptr [rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 17, 0, 0, 6, 0, 0, 15, 4, 0.06641414141414141, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "mulss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "mulss   xmm0, xmm1"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1"]], [2, 0, 18, 0, 0, 6, 2, 0, 14, 5, 0.029166666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 34, 0, 0, 6, 2, 0, 5, 5, 0.05, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [0, 0, 26, 0, 0, 3, 0, 0, 11, 4, 0.1606060606060606, ["mulss   xmm1, xmm2", "ucomiss xmm0, xmm1", "jbe     loc_BDCE"], ["mulss~xmm1,xmm2", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 27, 0, 0, 2, 0, 1, 10, 5, 0.07045454545454545, ["cvtsi2ss xmm1, rax", "jmp     short loc_BC91"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [2, 0, 43, 0, 1, 9, 0, 2, 1, 4, 0.021717171717171718, ["lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 0; delete", "mov     rdi, rax; table", "call    hash_find_entry", "mov     [rbp+data], rax", "cmp     [rbp+data], 0", "jz      short loc_BBBA"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 45, 1, 0, 11, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     [rbp+matched_ent], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+entry], 0", "jnz     short loc_BB7A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 1, 7, 2, 2, 19, 3, 0.08131313131313131, ["mov     rdx, [rbp+table]", "mov     rsi, rax; candidate", "mov     rdi, rdx; table", "call    hash_rehash", "xor     eax, 1", "test    al, al", "jz      short loc_BDAB"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 18, 4, 0.04191919191919192, ["movss   xmm0, [rbp+candidate]", "cvttss2si rax, xmm0", "jmp     short loc_BD8B"], ["movss~xmm0,[rbp+0]", "cvttss2si~rax,xmm0", "jmp~FOO"]], [0, 0, 33, 0, 0, 3, 0, 0, 6, 4, 0.1303030303030303, ["mulss   xmm1, xmm2", "ucomiss xmm0, xmm1", "jbe     loc_BDCE"], ["mulss~xmm1,xmm2", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 3, 0.00505050505050505, ["cmp     [rbp+matched_ent], 0", "jz      short loc_BBB0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 20, 2, 0.006060606060606061, ["mov     eax, 0FFFFFFFFh", "jmp     loc_BE72"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+matched_ent]", "mov     rdx, [rbp+data]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]], [0, 0, 25, 0, 0, 7, 1, 1, 12, 7, 0.13737373737373737, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_BCEE"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.006060606060606061, ["mov     eax, 0", "jmp     loc_BE72"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 21, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 9, 0, 1, 8, 1, 2, 20, 4, 0.050505050505050504, ["lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 0; delete", "mov     rdi, rax; table", "call    hash_find_entry", "test    rax, rax", "jz      short loc_BDCE"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 3, 0, 0, 17, 0, 1, 9, 2, 0.0007575757575757576, ["mov     rax, [rbp+new_entry]", "mov     rdx, [rbp+entry]", "mov     [rax], rdx", "mov     rax, [rbp+bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+bucket]", "mov     rdx, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     eax, 1", "jmp     short loc_BE72"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 8, 3, 0.03232323232323232, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    allocate_entry", "mov     [rbp+new_entry], rax", "cmp     [rbp+new_entry], 0", "jnz     short loc_BDF8"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 32, 0, 1, 7, 1, 2, 7, 8, 0.10909090909090909, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_BC46"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 13, 6, 0.06641414141414141, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BCCA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 16, 3, 0.13737373737373737, ["movss   [rbp+candidate], xmm0", "movss   xmm0, [rbp+candidate]", "ucomiss xmm0, cs:dword_E960", "jb      short loc_BD4E"], ["movss~[rbp+0],xmm0", "movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 17, 0, 0, 4, 0, 1, 15, 4, 0.06641414141414141, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "mulss   xmm0, xmm1", "jmp     short loc_BD31"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "jmp~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 8, 7, 0.05757575757575758, ["cvtsi2ss xmm0, rax", "jmp     short loc_BC5B"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 39, 0, 0, 4, 1, 1, 2, 8, 0.03636363636363636, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_BBCE"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 14, 5, 0.029166666666666667, ["cvtsi2ss xmm0, rax", "jmp     short loc_BCDF"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.015151515151515152, ["mov     eax, 0FFFFFFFFh", "jmp     loc_BE72"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 3, 7, 0.026515151515151516, ["cvtsi2ss xmm0, rax", "jmp     short loc_BBE3"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [2, 0, 30, 0, 0, 6, 2, 0, 8, 7, 0.05757575757575758, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 7, 0, 0, 4, 1, 1, 7, 3, 0.08535353535353535, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_BE3A"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 18, 0, 0, 6, 2, 0, 14, 5, 0.029166666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 37, 0, 0, 6, 2, 0, 3, 7, 0.026515151515151516, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [1, 0, 3, 0, 0, 14, 0, 0, 8, 2, 0.024242424242424242, ["mov     rax, [rbp+bucket]", "mov     rdx, [rbp+entry]", "mov     [rax], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0007575757575757576, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_BE72"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [8, 26, 36, 1, 46, 61, 1, 217, 0.04975, 3, 1], "succs": [[11], [0, 12], [], [2, 6], [20], [4, 13], [], [18], [19, 7], [14], [9, 15], [32], [11], [20], [24, 40], [14], [35, 21], [16, 44], [27, 22], [18], [40, 30], [25, 23], [3], [25], [1, 31], [3], [], [40, 26], [3], [28, 45], [34, 39], [41, 36], [8, 37], [32], [10], [42, 38], [33], [3], [5], [10], [43, 29], [33], [5], [3], [], [3]], "fname": "hash_insert_if_absent", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.23809523809523808, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BEF2"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.03571428571428571, ["mov     rax, [rbp+matched_ent]", "jmp     short loc_BEDE"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.03571428571428571, ["mov     rax, [rbp+entry]", "jmp     short loc_BEDE"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07142857142857142, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 7, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+matched_ent]; matched_ent", "mov     rcx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rcx; entry", "mov     rdi, rax; table", "call    hash_insert_if_absent", "mov     [rbp+err], eax", "cmp     [rbp+err], 0FFFFFFFFh", "jz      short loc_BED9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 3, 0.047619047619047616, ["cmp     [rbp+err], 0", "jnz     short loc_BED3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 7, 1, 8, 9, 2, 30, 0.05357, 1, 1], "succs": [[6, 7], [0], [0], [0], [3, 5], [1, 2], [], []], "fname": "hash_insert", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 12, 0, 0, 6, 2, 0, 0, 0, 0.038229018492176386, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 14, 0, 0, 4, 1, 1, 13, 7, 0.09210526315789475, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_C0F0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 8, 6, 0.07965860597439545, ["cvtsi2ss xmm0, rax", "jmp     short loc_C019"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 28, 0, 1, 7, 1, 2, 7, 7, 0.15362731152204837, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_C004"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 35, 0, 0, 9, 1, 1, 2, 7, 0.044096728307254626, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_BF8D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 36, 0, 0, 9, 1, 1, 1, 3, 0.023470839260312945, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_C1AC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 14, 6, 0.038229018492176386, ["cvtsi2ss xmm0, rax", "jmp     short loc_C09C"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 13, 7, 0.09210526315789475, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_C087"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 3, 6, 0.032361308677098154, ["cvtsi2ss xmm0, rax", "jmp     short loc_BFA2"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [2, 0, 26, 0, 0, 6, 2, 0, 8, 6, 0.07965860597439545, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [1, 0, 7, 0, 0, 2, 0, 1, 19, 4, 0.050497866287339974, ["cmp     [rbp+cursor], 0", "jnz     short loc_C179"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 18, 5, 0.06401137980085349, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+cursor], rax", "jmp     short loc_C199"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 7, 0, 1, 8, 0, 1, 20, 5, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [2, 0, 12, 0, 0, 6, 2, 0, 14, 6, 0.038229018492176386, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 33, 0, 0, 6, 2, 0, 3, 6, 0.032361308677098154, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 25, 0, 0, 7, 1, 1, 9, 5, 0.18776671408250356, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_C039"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 20, 3, 0.008534850640113799, ["mov     rax, [rbp+table]", "mov     qword ptr [rax+48h], 0"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [0, 0, 11, 0, 0, 8, 0, 0, 15, 5, 0.07930298719772404, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "mulss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "mulss   xmm0, xmm1", "ucomiss xmm0, cs:dword_E964", "jnb     short loc_C12F"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 14, 6, 0.038229018492176386, ["cvtsi2ss xmm0, rax", "jmp     short loc_C105"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.07041251778093884, ["mov     rax, [rbp+data]"], ["mov~rax,[rbp+0]"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 3, 0.1593172119487909, ["mulss   xmm1, xmm2", "ucomiss xmm1, xmm0", "jbe     loc_C1AC"], ["mulss~xmm1,xmm2", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 22, 0, 0, 3, 0, 0, 11, 3, 0.20910384068278806, ["mulss   xmm1, xmm2", "ucomiss xmm1, xmm0", "jbe     loc_C1AC"], ["mulss~xmm1,xmm2", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [1, 0, 8, 0, 1, 9, 2, 2, 17, 3, 0.11948790896159318, ["mov     [rbp+candidate], rax", "mov     rdx, [rbp+candidate]", "mov     rax, [rbp+table]", "mov     rsi, rdx; candidate", "mov     rdi, rax; table", "call    hash_rehash", "xor     eax, 1", "test    al, al", "jz      short loc_C1AC"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 16, 4, 0.028627311522048365, ["cvttss2si rax, xmm0", "jmp     short loc_C14D"], ["cvttss2si~rax,xmm0", "jmp~FOO"]], [0, 0, 11, 0, 0, 5, 0, 0, 15, 5, 0.07930298719772404, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "mulss   xmm0, xmm1", "ucomiss xmm0, cs:dword_E964", "jnb     short loc_C0BC"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 1, 38, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 1; delete", "mov     rdi, rax; table", "call    hash_find_entry", "mov     [rbp+data], rax", "cmp     [rbp+data], 0", "jnz     short loc_BF41"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 10, 4, 0.09352773826458037, ["cvtsi2ss xmm1, rax", "jmp     short loc_C04E"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 32, 0, 0, 7, 1, 1, 4, 5, 0.10810810810810811, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_BFC2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.0021337126600284497, ["mov     eax, 0", "jmp     loc_C1B0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 5, 1, 0, 16, 4, 0.028627311522048365, ["movss   xmm1, cs:dword_E964", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx"], ["movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.05120910384068279, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_C1C4"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 5, 4, 0.061166429587482224, ["cvtsi2ss xmm1, rax", "jmp     short loc_BFD7"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 23, 0, 0, 6, 2, 0, 10, 4, 0.09352773826458037, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [0, 0, 9, 0, 0, 2, 0, 1, 16, 4, 0.028627311522048365, ["cvttss2si rax, xmm0", "jmp     loc_C14D"], ["cvttss2si~rax,xmm0", "jmp~FOO"]], [2, 0, 30, 0, 0, 6, 2, 0, 5, 4, 0.061166429587482224, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [1, 0, 9, 0, 0, 6, 1, 1, 16, 4, 0.028627311522048365, ["movss   xmm1, cs:dword_E964", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx", "jmp     short loc_C14D"], ["movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 21, 0, 0, 7, 1, 1, 12, 8, 0.1934566145092461, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_C0DC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]]], "func_feature": [5, 26, 28, 1, 39, 53, 1, 187, 0.06638, 2, 1], "succs": [[17], [0, 18], [15], [9, 2], [8, 14], [19, 4], [24], [13, 6], [27], [15], [16, 12], [10], [10], [24], [27], [26, 34], [19], [29, 23], [17], [31], [3, 19], [19, 38], [11, 19], [22], [35, 37], [28, 5], [21], [32, 36], [31], [22], [], [33, 30], [20], [], [21], [22], [20], [22], [1, 7]], "fname": "hash_delete", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 3, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+ir]", "mov     edx, [rbp+i]", "movsxd  rdx, edx", "mov     ecx, [rbp+default_val]", "mov     [rax+rdx*4], ecx", "add     [rbp+i], 1"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "movsxd~rdx,edx", "mov~ecx,[rbp+0]", "mov~<TAG>,ecx", "add~[rbp+0],0"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.5, ["cmp     [rbp+i], 3", "jle     short loc_C1F8"], ["cmp~[rbp+0],0", "jle~FOO"]], [4, 0, 3, 0, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ir], rdi", "mov     [rbp+default_val], esi", "mov     rax, [rbp+ir]", "mov     byte ptr [rax+1Ch], 1", "mov     rax, [rbp+ir]", "mov     dword ptr [rax+14h], 0", "mov     rax, [rbp+ir]", "mov     dword ptr [rax+18h], 0", "mov     [rbp+i], 0", "jmp     short loc_C20C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+ir]", "mov     edx, [rbp+default_val]", "mov     [rax+10h], edx", "nop", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 1, 26, 0.125, 0, 1], "succs": [[1], [0, 3], [1], []], "fname": "i_ring_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ir], rdi", "mov     rax, [rbp+ir]", "movzx   eax, byte ptr [rax+1Ch]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 7, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+ir]", "mov     byte ptr [rax+1Ch], 0", "mov     eax, [rbp+old_val]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~eax,[rbp+0]", "pop~rbp", "retn"]], [2, 0, 2, 1, 0, 28, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ir], rdi", "mov     [rbp+val], esi", "mov     rax, [rbp+ir]", "mov     edx, [rax+14h]", "mov     rax, [rbp+ir]", "movzx   eax, byte ptr [rax+1Ch]", "xor     eax, 1", "movzx   eax, al", "add     eax, edx", "and     eax, 3", "mov     [rbp+dest_idx], eax", "mov     rax, [rbp+ir]", "mov     edx, [rbp+dest_idx]", "mov     eax, [rax+rdx*4]", "mov     [rbp+old_val], eax", "mov     rax, [rbp+ir]", "mov     edx, [rbp+dest_idx]", "mov     ecx, [rbp+val]", "mov     [rax+rdx*4], ecx", "mov     rax, [rbp+ir]", "mov     edx, [rbp+dest_idx]", "mov     [rax+14h], edx", "mov     rax, [rbp+ir]", "mov     eax, [rax+18h]", "cmp     [rbp+dest_idx], eax", "jnz     short loc_C2AC"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "movzx~eax,al", "add~eax,edx", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~<TAG>,ecx", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [2, 0, 1, 1, 0, 11, 2, 0, 1, 0, 0.0, ["mov     rax, [rbp+ir]", "mov     edx, [rax+18h]", "mov     rax, [rbp+ir]", "movzx   eax, byte ptr [rax+1Ch]", "xor     eax, 1", "movzx   eax, al", "add     eax, edx", "and     eax, 3", "mov     edx, eax", "mov     rax, [rbp+ir]", "mov     [rax+18h], edx"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "movzx~eax,al", "add~eax,edx", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]]], "func_feature": [0, 4, 1, 0, 3, 3, 1, 44, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 1, 1, 0, 7, 1, 0, 0, 0, 0.05, ["mov     rax, [rbp+ir]", "mov     eax, [rax+14h]", "add     eax, 3", "and     eax, 3", "mov     edx, eax", "mov     rax, [rbp+ir]", "mov     [rax+14h], edx"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "add~eax,0", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]], [0, 0, 3, 0, 0, 19, 0, 1, 1, 2, 0.15000000000000002, ["mov     rax, [rbp+ir]", "mov     edx, [rax+14h]", "mov     rax, [rbp+ir]", "mov     edx, edx", "mov     eax, [rax+rdx*4]", "mov     [rbp+top_val], eax", "mov     rax, [rbp+ir]", "mov     ecx, [rax+14h]", "mov     rax, [rbp+ir]", "mov     edx, [rax+10h]", "mov     rax, [rbp+ir]", "mov     ecx, ecx", "mov     [rax+rcx*4], edx", "mov     rax, [rbp+ir]", "mov     edx, [rax+14h]", "mov     rax, [rbp+ir]", "mov     eax, [rax+18h]", "cmp     edx, eax", "jnz     short loc_C320"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~edx,edx", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~ecx,ecx", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~edx,eax", "jnz~FOO"]], [0, 1, 5, 1, 1, 9, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+ir], rdi", "mov     rax, [rbp+ir]", "mov     rdi, rax; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_C2DA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, [rbp+top_val]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 2, 1, 0.05, ["mov     rax, [rbp+ir]", "mov     byte ptr [rax+1Ch], 1", "jmp     short loc_C336"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "jmp~FOO"]]], "func_feature": [2, 2, 5, 0, 6, 6, 2, 42, 0.04167, 0, 2], "succs": [[4], [0, 5], [1, 3], [], [], [4]], "fname": "i_ring_pop", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+codeset]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 0, 0.3333333333333333, ["mov     rax, [rbp+codeset]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_C379"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0.0, ["lea     rax, aAscii; \"ASCII\"", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [3, 0, 4, 1, 1, 8, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     edi, 0Eh; item", "call    _nl_langinfo", "mov     [rbp+codeset], rax", "cmp     [rbp+codeset], 0", "jnz     short loc_C363"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0.0, ["lea     rax, unk_E968", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [1, 1, 3, 0, 5, 6, 1, 19, 0.06667, 2, 1], "succs": [[], [0, 2], [0], [1, 4], [1]], "fname": "locale_charset", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 4, 0, 0, 3, 0, 0, 0, 0, 0.048611111111111105, ["mov     rax, [rbp+ap.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+ap.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [3, 0, 6, 0, 0, 9, 0, 1, 2, 4, 0.125, ["mov     [rbp+ap.gp_offset], 18h", "mov     [rbp+ap.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+ap.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+ap.reg_save_area], rax", "mov     eax, [rbp+ap.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C45A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 2, 12, 1, 3, 2, 1, 0.19444444444444442, ["mov     ecx, [rbp+mode]", "mov     edx, [rbp+flags]; oflag", "mov     rsi, [rbp+file]; file", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "mov     eax, 0", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rdi, [rbp+var_B8]", "xor     rdi, fs:28h", "jz      short locret_C4B7"], ["mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.125, ["mov     eax, [rax]", "mov     [rbp+mode], eax"], ["mov~eax,<TAG>", "mov~[rbp+0],eax"]], [1, 0, 4, 2, 0, 8, 0, 1, 3, 3, 0.048611111111111105, ["mov     rax, [rbp+ap.reg_save_area]", "mov     edx, [rbp+ap.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+ap.gp_offset]", "add     edx, 8", "mov     [rbp+ap.gp_offset], edx", "jmp     short loc_C46C"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [2, 0, 7, 0, 0, 8, 3, 1, 1, 2, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+mode], 0", "mov     eax, [rbp+flags]", "and     eax, 40h", "test    eax, eax", "jz      short loc_C474"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 8, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [1, 0, 9, 1, 0, 11, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+fd], edi", "mov     [rbp+file], rsi", "mov     [rbp+flags], edx", "mov     [rbp+var_98], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_C3D6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]]], "func_feature": [3, 5, 8, 13, 10, 12, 2, 64, 0.07361, 1, 3], "succs": [[4], [0, 5], [], [2, 7], [3], [4], [1, 3], [], [6], [8, 6]], "fname": "openat_safer", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03333333333333333, ["mov     eax, 0", "jmp     short locret_C548"], ["mov~eax,0", "jmp~FOO"]], [4, 0, 6, 1, 1, 20, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+dir_fd], edi", "mov     [rbp+dir], rsi", "mov     [rbp+extra_flags], edx", "mov     [rbp+pnew_fd], rcx", "mov     eax, [rbp+extra_flags]", "or      eax, 90900h", "mov     [rbp+open_flags], eax", "mov     edx, [rbp+open_flags]; flags", "mov     rcx, [rbp+dir]", "mov     eax, [rbp+dir_fd]", "mov     rsi, rcx; file", "mov     edi, eax; fd", "mov     eax, 0", "call    openat_safer", "mov     [rbp+new_fd], eax", "cmp     [rbp+new_fd], 0", "jns     short loc_C503"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~eax,[rbp+0]", "or~eax,0", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 2, 0, 3, 10, 0, 3, 2, 2, 0.05, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+fdopendir_errno], eax", "mov     eax, [rbp+new_fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+fdopendir_errno]", "mov     [rdx], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [1, 0, 4, 0, 1, 6, 0, 2, 1, 3, 0.1, ["mov     eax, [rbp+new_fd]", "mov     edi, eax; fd", "call    _fdopendir", "mov     [rbp+dirp], rax", "cmp     [rbp+dirp], 0", "jz      short loc_C523"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.1, ["mov     rax, [rbp+dirp]"], ["mov~rax,[rbp+0]"]], [0, 0, 2, 0, 0, 4, 0, 1, 2, 2, 0.05, ["mov     rax, [rbp+pnew_fd]", "mov     edx, [rbp+new_fd]", "mov     [rax], edx", "jmp     short loc_C544"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [5, 1, 8, 0, 7, 8, 1, 45, 0.04762, 0, 1], "succs": [[6], [0, 3], [4], [2, 5], [6], [4], []], "fname": "opendirat", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     eax, [rbp+fd]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 1, 3, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "cmp     [rbp+fd], 0", "js      short loc_C595"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 0, 0.16666666666666666, ["cmp     [rbp+fd], 2", "jg      short loc_C595"], ["cmp~[rbp+0],0", "jg~FOO"]], [0, 0, 1, 0, 4, 16, 0, 4, 2, 0, 0.0, ["mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    dup_safer", "mov     [rbp+f], eax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     eax, [rbp+f]", "mov     [rbp+fd], eax"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,[rbp+0]", "mov~[rbp+0],eax"]]], "func_feature": [4, 0, 6, 0, 4, 5, 2, 27, 0.04167, 0, 1], "succs": [[], [0, 2], [0, 3], [0]], "fname": "fd_safer", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 4, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 3, 0.09027777777777778, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_C624"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 1, 4, 0.08333333333333333, ["mov     rax, [rbp+fp]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jz      short loc_C60A"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 9, 1, 1, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fp], rdi", "mov     [rbp+saved_errno], 0", "mov     [rbp+result], 0", "mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_C5D7"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, 2, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     [rbp+result], 0FFFFFFFFh"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~[rbp+0],0"]], [1, 0, 3, 0, 1, 6, 0, 2, 3, 2, 0.19444444444444442, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "mov     [rbp+result], eax", "cmp     [rbp+saved_errno], 0", "jz      short loc_C64D"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 6, 0, 2, 9, 0, 3, 2, 3, 0.048611111111111105, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_C624"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.08333333333333333, ["mov     eax, [rbp+result]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.013888888888888888, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "jmp     short locret_C650"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]]], "func_feature": [9, 2, 14, 0, 10, 14, 1, 52, 0.05139, 0, 1], "succs": [[5], [0, 5], [1, 6], [9, 2], [7], [4, 7], [1, 5], [8], [], [8]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 42, 0, 0, 2, 0, 1, 0, 0, 0.04974489795918367, ["cmp     eax, 406h", "jz      short loc_C770"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 47, 0, 0, 13, 2, 1, 1, 5, 0.03996598639455782, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+result], 0FFFFFFFFh", "mov     [rbp+arg.gp_offset], 10h", "mov     [rbp+arg.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+arg.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+arg.reg_save_area], rax", "mov     eax, [rbp+action]", "test    eax, eax", "jz      short loc_C708"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 9, 6, 0.013605442176870748, ["cmp     eax, 1", "jg      loc_C8A2"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 4, 0.015306122448979591, ["cmp     eax, 1", "jz      short loc_C87D"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 3, 5, 0.057823129251700675, ["jmp     loc_C7D8"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 6, 2, 0.04336734693877551, ["nop"], ["nop"]], [1, 0, 4, 0, 1, 8, 0, 2, 5, 3, 0.026077097505668934, ["mov     edx, [rbp+action]", "mov     eax, [rbp+fd]", "mov     esi, edx; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "jmp     loc_C984"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 0, 2, 10, 3, 0.016439909297052153, ["mov     eax, [rax]", "mov     [rbp+x], eax", "mov     edx, [rbp+x]", "mov     ecx, [rbp+action]", "mov     eax, [rbp+fd]", "mov     esi, ecx; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "jmp     short loc_C984"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,ecx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 0, 1, 12, 3, 0.011904761904761904, ["mov     rax, [rax]", "mov     [rbp+p], rax", "mov     rdx, [rbp+p]", "mov     ecx, [rbp+action]", "mov     eax, [rbp+fd]", "mov     esi, ecx; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "nop"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,ecx", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "nop"]], [1, 0, 49, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 100h", "mov     [rbp+fd], edi", "mov     [rbp+action], esi", "mov     [rbp+var_A0], rdx", "mov     [rbp+var_98], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_C6A9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 10, 6, 0.00977891156462585, ["test    eax, eax", "jz      loc_C8A2"], ["test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 6, 0.006802721088435374, ["jmp     loc_C912"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 2, 4, 0.007653061224489796, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C736"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 5, 2, 0, 8, 0, 1, 11, 4, 0.010629251700680272, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C952"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 11, 4, 0.010629251700680272, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [1, 0, 19, 0, 0, 2, 0, 1, 8, 6, 0.02806122448979592, ["cmp     eax, 8", "jz      loc_C8A2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 7, 5, 0.04081632653061224, ["cmp     eax, 3", "jg      short loc_C815"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 10, 5, 0.04379251700680272, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C940"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 6, 0.006802721088435374, ["jmp     loc_C912"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 12, 6, 0.003401360544217687, ["jmp     loc_C912"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 6, 0.006802721088435374, ["jmp     loc_C912"], ["jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 9, 4, 0.017006802721088433, ["cmp     eax, 40Ah", "jnz     loc_C912"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 2, 0, 8, 0, 1, 4, 3, 0.00233843537414966, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C7B0"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 4, 0.006377551020408163, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C79E"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 36, 0, 0, 3, 0, 1, 4, 4, 0.07142857142857142, ["mov     eax, [rbp+action]", "cmp     eax, 0Bh", "jz      loc_C87D"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 6, 4, 0.03784013605442177, ["cmp     eax, 3", "jz      loc_C87D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 10, 4, 0.012471655328798185, ["cmp     eax, 9", "jz      short loc_C87D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 4, 0.01636904761904762, ["cmp     eax, 401h", "jz      short loc_C87D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, 4, 0.022321428571428572, ["cmp     eax, 409h", "jl      short loc_C87D"], ["cmp~eax,0", "jl~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, 5, 0.02565192743764172, ["cmp     eax, 8", "jg      short loc_C82D"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.03996598639455782, ["mov     eax, [rbp+result]", "mov     rcx, [rbp+var_B8]", "xor     rcx, fs:28h", "jz      short locret_C9A2"], ["mov~eax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 4, 2, 0.007653061224489796, ["mov     eax, [rax]", "mov     [rbp+target], eax", "mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD", "mov     [rbp+result], eax", "jmp     loc_C985"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 5, 2, 0.00510204081632653, ["mov     eax, [rax]", "mov     [rbp+target_0], eax", "mov     edx, [rbp+target_0]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD_CLOEXEC", "mov     [rbp+result], eax", "jmp     loc_C985"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 48, 0, 0, 8, 0, 0, 1, 6, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [1, 0, 13, 0, 0, 2, 0, 1, 10, 6, 0.011479591836734693, ["cmp     eax, 4", "jz      short loc_C8A2"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 4, 3, 0.00233843537414966, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [1, 0, 7, 0, 0, 3, 0, 1, 8, 5, 0.04067460317460317, ["mov     eax, [rbp+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      short loc_C8D0"], ["mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 11, 6, 0.008503401360544217, ["cmp     eax, 0Ah", "jz      short loc_C8A2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 7, 5, 0.02147108843537415, ["cmp     eax, 406h", "jge     short loc_C8A2"], ["cmp~eax,0", "jge~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 9, 6, 0.013605442176870748, ["cmp     eax, 402h", "jz      short loc_C8A2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 10, 6, 0.00977891156462585, ["cmp     eax, 400h", "jz      short loc_C8A2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 7, 5, 0.028273809523809524, ["cmp     eax, 409h", "jz      short loc_C8A2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 5, 2, 0, 8, 0, 1, 9, 4, 0.011621315192743766, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C8E2"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 9, 4, 0.011621315192743766, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 4, 2, 0, 8, 0, 1, 3, 3, 0.003401360544217687, ["mov     rax, [rbp+arg.reg_save_area]", "mov     edx, [rbp+arg.gp_offset]", "mov     edx, edx", "add     rax, rdx", "mov     edx, [rbp+arg.gp_offset]", "add     edx, 8", "mov     [rbp+arg.gp_offset], edx", "jmp     short loc_C748"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~edx,edx", "add~rax,rdx", "mov~edx,[rbp+0]", "add~edx,0", "mov~[rbp+0],edx", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.003401360544217687, ["mov     rax, [rbp+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rbp+arg.overflow_arg_area], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx"]], [1, 0, 21, 0, 0, 2, 0, 1, 6, 6, 0.047619047619047616, ["cmp     eax, 407h", "jg      short loc_C864"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 5, 5, 0.07653061224489796, ["cmp     eax, 0Bh", "jg      short loc_C83C"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [6, 5, 47, 14, 50, 76, 2, 192, 0.02009, 1, 9], "succs": [[4, 23], [0, 12], [10, 36], [2, 6], [24], [30], [5], [5], [5], [33, 1], [11, 36], [17], [45, 46], [8], [8], [36, 29], [3, 15], [13, 14], [17], [17], [17], [17, 6], [32], [35, 22], [48, 6], [16, 6], [37, 6], [6, 39], [21, 6], [34, 26], [49, 44], [30], [30], [1], [18, 36], [32], [42, 43], [19, 36], [27, 36], [40, 36], [20, 36], [28, 36], [7], [7], [], [31], [31], [41, 38], [25, 47], []], "fname": "rpl_fcntl", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 1, 0, 1, 1, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+target], esi", "mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, 0; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "mov     eax, [rbp+result]", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 3, 15, 0.0, 0, 1], "succs": [[]], "fname": "rpl_fcntl_DUPFD", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     cs:have_dupfd_cloexec_3019, 0FFFFFFFFh", "jmp     short loc_CA57"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 7, 0, 1, 8, 0, 2, 3, 2, 0.045454545454545456, ["mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD", "mov     [rbp+result], eax", "cmp     [rbp+result], 0", "js      short loc_CA57"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [4, 0, 2, 0, 1, 10, 1, 2, 5, 1, 0.003787878787878788, ["mov     eax, [rbp+flags]", "or      eax, 1", "mov     edx, eax", "mov     eax, [rbp+result]", "mov     esi, 2; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_CACE"], ["mov~eax,[rbp+0]", "or~eax,0", "mov~edx,eax", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [3, 0, 3, 0, 1, 8, 0, 2, 4, 2, 0.13636363636363635, ["mov     eax, [rbp+result]", "mov     esi, 1; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+flags], eax", "cmp     [rbp+flags], 0", "js      short loc_CAA6"], ["mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 3, 1, 0.18181818181818182, ["mov     eax, cs:have_dupfd_cloexec_3019", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_CACE"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.26515151515151514, ["cmp     [rbp+result], 0", "js      short loc_CACE"], ["cmp~[rbp+0],0", "js~FOO"]], [3, 0, 10, 0, 1, 9, 0, 1, 1, 3, 0.030303030303030304, ["mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, 406h; cmd", "mov     edi, eax; fd", "mov     eax, 0", "call    _fcntl", "mov     [rbp+result], eax", "cmp     [rbp+result], 0", "jns     short loc_CA15"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 1, 12, 1, 0, 8, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fd], edi", "mov     [rbp+target], esi", "mov     eax, cs:have_dupfd_cloexec_3019", "test    eax, eax", "js      short loc_CA45"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [1, 0, 1, 0, 3, 11, 0, 3, 5, 1, 0.003787878787878788, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     eax, [rbp+result]", "mov     edi, eax; fd", "call    _close", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     [rbp+result], 0FFFFFFFFh"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, [rbp+result]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 0, 9, 0, 1, 4, 0, 2, 2, 3, 0.030303030303030304, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jz      short loc_CA21"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 1, 2, 0.045454545454545456, ["mov     edx, [rbp+target]", "mov     eax, [rbp+fd]", "mov     esi, edx; target", "mov     edi, eax; fd", "call    rpl_fcntl_DUPFD", "mov     [rbp+result], eax"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 2, 0.06818181818181818, ["mov     cs:have_dupfd_cloexec_3019, 1", "jmp     short loc_CA57"], ["mov~<TAG>,0", "jmp~FOO"]]], "func_feature": [9, 2, 18, 0, 13, 20, 1, 76, 0.06235, 1, 1], "succs": [[5], [0, 5], [8, 9], [8, 2], [9, 3], [9, 4], [10, 12], [11, 6], [9], [], [1, 12], [5], [5]], "fname": "rpl_fcntl_DUPFD_CLOEXEC", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     ecx, eax", "rol     rdx, cl", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,eax", "rol~rdx,cl", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotl64", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     ecx, eax", "ror     rdx, cl", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,eax", "ror~rdx,cl", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotr64", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], edi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     edx, [rbp+x]", "mov     ecx, eax", "rol     edx, cl", "mov     eax, edx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,eax", "rol~edx,cl", "mov~eax,edx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotl32", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], edi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     edx, [rbp+x]", "mov     ecx, eax", "ror     edx, cl", "mov     eax, edx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,eax", "ror~edx,cl", "mov~eax,edx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotr32", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     rsi, rdx", "mov     ecx, eax", "shl     rsi, cl", "mov     eax, [rbp+n]", "mov     edx, 40h ; '@'", "sub     edx, eax", "mov     eax, edx", "mov     rdx, [rbp+x]", "mov     ecx, eax", "shr     rdx, cl", "mov     rax, rdx", "or      rax, rsi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shl~rsi,cl", "mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~rdx,[rbp+0]", "mov~ecx,eax", "shr~rdx,cl", "mov~rax,rdx", "or~rax,rsi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl_sz", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, cl", "mov     eax, [rbp+n]", "mov     edx, 40h ; '@'", "sub     edx, eax", "mov     eax, edx", "mov     rdx, [rbp+x]", "mov     ecx, eax", "shl     rdx, cl", "mov     rax, rdx", "or      rax, rsi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,cl", "mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~rdx,[rbp+0]", "mov~ecx,eax", "shl~rdx,cl", "mov~rax,rdx", "or~rax,rsi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr_sz", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], ax", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 10h", "sub     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],ax", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl16", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], ax", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 10h", "sub     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],ax", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr16", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], al", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 8", "sub     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl8", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], al", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 8", "sub     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr8", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.06746031746031744, ["cmp     eax, 41h ; 'A'", "jge     short loc_CC95"], ["cmp~eax,0", "jge~FOO"]], [1, 0, 7, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 5Ah ; 'Z'", "jg      short loc_CC8D"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07539682539682539, ["mov     eax, 1", "jmp     short loc_CCA1"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.04365079365079365, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 2, 0.07142857142857142, ["sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_CC9C"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.023809523809523808, ["jmp     short loc_CC95"], ["jmp~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 1, 2, 0.05158730158730158, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CC9C"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 6, 0, 8, 11, 0, 20, 0.04167, 0, 2], "succs": [[3, 5], [0, 7], [], [2], [2], [4, 6], [3], [3, 4]], "fname": "c_isalnum", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_CCCB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 2, 0.1, ["cmp     eax, 5Ah ; 'Z'", "jle     short loc_CCBF"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 2, 2, 0.05, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CCC6"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 41h ; 'A'", "jl      short loc_CCC6"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 16, 0.05, 0, 1], "succs": [[5], [0, 2], [0, 3], [5], [1, 3], []], "fname": "c_isalpha", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CCEB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "add     eax, 0", "cmp     eax, 7Fh", "ja      short loc_CCE6"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "add~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isascii", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 1, 4, 0, 0, 5, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "cmp     [rbp+c], 20h ; ' '", "jz      short loc_CD00"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],<STR>", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.125, ["mov     eax, 1", "jmp     short loc_CD0C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.08333333333333333, ["cmp     [rbp+c], 9", "jnz     short loc_CD07"], ["cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 13, 0.05, 0, 0], "succs": [[2, 4], [], [1], [1], [2, 3]], "fname": "c_isblank", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.1, ["cmp     eax, 1Fh", "jle     short loc_CD29"], ["cmp~eax,0", "jle~FOO"]], [0, 0, 5, 0, 0, 6, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "test    eax, eax", "js      short loc_CD30"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.05, ["cmp     eax, 7Fh", "jnz     short loc_CD30"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_CD35"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[2, 3], [0, 4], [3, 4], [5], [5], []], "fname": "c_iscntrl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_CD50"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CD55"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2]], "fname": "c_isdigit", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 21h ; '!'", "cmp     eax, 5Dh ; ']'", "ja      short loc_CD70"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CD75"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2]], "fname": "c_isgraph", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CD90"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CD95"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2]], "fname": "c_islower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [1, 1, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "cmp     eax, 5Eh ; '^'", "ja      short loc_CDB0"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CDB5"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2]], "fname": "c_isprint", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 9, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 40h ; '@'", "jg      short loc_CDD5"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 0, 2, 0.013888888888888888, ["sub     eax, 7Bh ; '{'", "cmp     eax, 3", "ja      short loc_CDEE"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 2, 0.041666666666666664, ["cmp     eax, 60h ; '`'", "jle     short loc_CDE7"], ["cmp~eax,0", "jle~FOO"]], [0, 1, 5, 0, 0, 2, 0, 1, 0, 2, 0.048611111111111105, ["cmp     eax, 3Ah ; ':'", "jge     short loc_CDE7"], ["cmp~eax,<STR>", "jge~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.05555555555555555, ["mov     eax, 1", "jmp     short loc_CDF3"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 0, 2, 0.013888888888888888, ["jmp     short loc_CDE7"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 0, 2, 0.041666666666666664, ["sub     eax, 21h ; '!'", "cmp     eax, 0Eh", "ja      short loc_CDEE"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 2, 0.048611111111111105, ["cmp     eax, 5Bh ; '['", "jl      short loc_CDEE"], ["cmp~eax,0", "jl~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 8, 0, 10, 15, 0, 24, 0.03056, 0, 2], "succs": [[8, 3], [4, 6], [1, 4], [4, 7], [9], [4], [9], [5, 6], [2, 6], []], "fname": "c_ispunct", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 5, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 9", "jl      short loc_CE15"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 2, 0.1, ["cmp     eax, 0Dh", "jle     short loc_CE0E"], ["cmp~eax,0", "jle~FOO"]], [0, 1, 3, 0, 0, 2, 0, 1, 0, 2, 0.05, ["cmp     eax, 20h ; ' '", "jnz     short loc_CE15"], ["cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_CE1A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[1, 4], [2, 3], [3, 4], [5], [5], []], "fname": "c_isspace", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_CE3A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_CE35"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.125, ["mov     eax, 0; jumptable 000000000000CE6F default case"], ["mov~eax,0"]], [1, 1, 4, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'; switch 55 cases", "cmp     eax, 36h ; '6'", "ja      short loc_CE78; jumptable 000000000000CE6F default case"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [0, 0, 3, 1, 0, 8, 0, 1, 1, 2, 0.08333333333333333, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_E970", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_E970", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.041666666666666664, ["mov     eax, 1; jumptable 000000000000CE6F cases 48-57,65-70,97-102", "jmp     short loc_CE7D"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 5, 6, 0, 20, 0.05, 1, 2], "succs": [[3], [0, 2], [0, 4], [], [3]], "fname": "c_isxdigit", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_CE99"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 1, 1, 1, 0, 3, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, [rbp+c]", "add     eax, 20h ; ' '", "jmp     short loc_CE9C"], ["mov~eax,[rbp+0]", "add~eax,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 2, 13, 0.04167, 0, 2], "succs": [[3], [0, 2], [3], []], "fname": "c_tolower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_CEB8"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 1, 1, 1, 0, 3, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "jmp     short loc_CEBB"], ["mov~eax,[rbp+0]", "sub~eax,<STR>", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 13, 0.04167, 0, 2], "succs": [[2], [0, 3], [], [2]], "fname": "c_toupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[4, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fd], edi", "mov     eax, [rbp+fd]", "mov     edx, 3", "mov     esi, 0; action", "mov     edi, eax; fd", "mov     eax, 0", "call    rpl_fcntl", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 12, 0.0, 0, 1], "succs": [[]], "fname": "dup_safer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_CF46"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_CF30"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__stat'", "mov     rsi, rdi; filename", "mov     edi, 1; ver", "jmp     ___xstat"], ["mov~rdx,rsi", "mov~rsi,rdi", "mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "stat_0", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__fstat'", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstat"], ["mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "fstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__lstat'", "mov     rsi, rdi; filename", "mov     edi, 1; ver", "jmp     ___lxstat"], ["mov~rdx,rsi", "mov~rsi,rdi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 4, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "lstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[1, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.0, ["mov     r8d, ecx; flag", "mov     rcx, rdx; stat_buf", "mov     rdx, rsi; filename", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstatat"], ["mov~r8d,ecx", "mov~rcx,rdx", "mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 4, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "fstatat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn faccessat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "faccessat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn printf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ferror_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn putc_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "putc_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fstatfs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getline:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getline", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
