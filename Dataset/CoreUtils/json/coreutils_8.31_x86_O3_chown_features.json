{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_199A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_213D90", "jmp     cs:qword_213D98"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 68, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_19A0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endgrent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 32, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 68, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 103, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 34, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__openat_2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__openat_2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endpwent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fstatfs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchownat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 41, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 98, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 17, 0, 0, 2, 1, 1, 0, 0, 0.1042906746031746, ["test    edx, edx", "jle     loc_2330"], ["test~edx,edx", "jle~FOO"]], [0, 0, 23, 1, 0, 8, 2, 1, 4, 3, 0.19469246031746032, ["movsxd  optc, cs:optind@@GLIBC_2_2_5", "test    r13d, r13d", "mov     dereference, cs:reference_file", "mov     edx, ebp", "setnz   [rsp+128h+chopt.affect_symlink_referent]", "sub     edx, eax", "test    r13, r13", "jz      loc_21D7"], ["movsxd~optc,<TAG>", "test~r13d,r13d", "mov~dereference,<TAG>", "mov~edx,ebp", "setnz~[rsp+0]", "sub~edx,eax", "test~r13,r13", "jz~FOO"]], [3, 0, 4, 0, 4, 16, 2, 4, 7, 2, 0.000992063492063492, ["mov     rsi, r13; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, msgid; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     argv, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rsi,r13", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~argv,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 16, 0, 1, 6, 1, 2, 6, 3, 0.08035714285714285, ["lea     rdx, [rsp+128h+ref_stats]; stat_buf", "mov     rsi, r13; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_22F1"], ["lea~rdx,[rsp+0]", "mov~rsi,r13", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 5, 7, 0.015749007936507936, ["mov     r12d, 2", "jmp     loc_1EC0"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 4, 8, 0.1052827380952381, ["cmp     eax, 4Ch ; 'L'", "jz      loc_2090"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 13, 0, 1, 9, 1, 2, 6, -1, 0.053075396825396824, ["mov     rdi, [argv+rax*8]; spec", "lea     rcx, [r15+18h]; username", "lea     rdx, [rsp+128h+gid]; gid", "lea     rsi, [rsp+128h+uid]; uid", "lea     r8, [r15+20h]; groupname", "call    parse_user_spec", "test    rax, rax", "mov     rbp, rax", "jnz     loc_229D"], ["mov~rdi,<TAG>", "lea~rcx,[r15+0]", "lea~rdx,[rsp+0]", "lea~rsi,[rsp+0]", "lea~r8,[r15+0]", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [1, 0, 18, 1, 0, 2, 0, 1, 5, 2, 0.07676091269841269, ["sub     edx, 1", "jle     loc_2330"], ["sub~edx,0", "jle~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 7, 7, 0.020337301587301584, ["mov     [rsp+128h+chopt.verbosity], 0", "jmp     loc_1EC0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 6, 8, 0.036830357142857144, ["cmp     eax, 76h ; 'v'", "jz      loc_2080"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 64, 0, 0, 2, 0, 1, 7, 8, 0.01624503968253968, ["cmp     eax, 80h", "jz      loc_2070"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 1, 0, 3, 14, 4, 4, 7, 0, 0.0033482142857142855, ["mov     rdi, [argv+rbp*8-8]; arg", "call    quote", "lea     rsi, aMissingOperand_0; \"missing operand after %s\"", "mov     argv, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_1F15"], ["mov~rdi,[argv+0]", "call~FOO", "lea~rsi,<TAG>", "mov~argv,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 6, 1, 0.027777777777777776, ["cmp     eax, ebp", "jl      short loc_235A"], ["cmp~eax,ebp", "jl~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 6, 9, 0.03881448412698413, ["cmp     eax, 0FFFFFF7Eh", "jz      loc_2296"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 5, 9, 0.08928571428571427, ["jle     short loc_1F88"], ["jle~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 7, 0.014632936507936508, ["mov     [rsp+128h+chopt.verbosity], 1", "jmp     loc_1EC0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 7, 8, 0.0234375, ["cmp     eax, 63h ; 'c'", "jz      loc_2008"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 9, -1, 0.0, ["lea     rdi, aWrittenBySSAnd+1Bh; string", "call    xstrdup", "mov     [rsp+128h+chopt.user_name], rax", "jmp     loc_220F"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.016369047619047616, ["cmp     [rsp+128h+chopt.group_name], 0", "jz      short loc_220F"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 8, 0.008556547619047618, ["cmp     eax, 68h ; 'h'", "jz      short loc_1F20"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 7, 0.028769841269841268, ["mov     r12d, 11h", "jmp     loc_1EC0"], ["mov~r12d,0", "jmp~FOO"]], [0, 1, 64, 0, 0, 2, 0, 1, 7, 8, 0.03831845238095238, ["cmp     eax, 48h ; 'H'", "jz      short loc_1FE8"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 7, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 1, 64, 0, 0, 2, 0, 1, 8, 8, 0.008556547619047618, ["cmp     eax, 50h ; 'P'", "jnz     short loc_1F15"], ["cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 8, 0.008556547619047618, ["cmp     eax, 84h", "jnz     short loc_1F15"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.009052579365079364, ["cmp     eax, 0FFFFFF7Dh", "jnz     loc_1F15"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 2, 10, 4, 3, 7, -1, 0.0033482142857142855, ["lea     rsi, aMissingOperand; \"missing operand\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_1F15"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 9, 7, 0.015128968253968252, ["xor     r13d, r13d", "jmp     short loc_1EC0"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 3, 7, 0.007192460317460317, ["mov     [rsp+128h+chopt.force_silent], 1", "jmp     loc_1EC0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 2, 8, 0.2242063492063492, ["cmp     eax, 66h ; 'f'", "jz      loc_20A0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 10, 1, 0, 2, 0, 1, 8, -1, 0.01066468253968254, ["add     cs:optind@@GLIBC_2_2_5, 1", "jmp     loc_2149"], ["add~<TAG>,0", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, -1, 0.033482142857142856, ["cmp     [rsp+128h+chopt.user_name], 0", "jz      short loc_2278"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 3, 9, 0.216765873015873, ["jle     short loc_1F28"], ["jle~FOO"]], [2, 1, 2, 1, 1, 18, 3, 2, 9, -1, 0.015625, ["movsxd  rax, cs:optind@@GLIBC_2_2_5", "sub     rsp, 8", "mov     esi, r12d", "push    r15; chopt", "mov     r9d, [rsp+138h+required_gid]; required_gid", "or      esi, 400h; bit_flags", "mov     r8d, [rsp+138h+required_uid]; required_uid", "mov     ecx, [rsp+138h+gid]; gid", "mov     edx, [rsp+138h+uid]; uid", "lea     rdi, [argv+rax*8]; files", "call    chown_files", "pop     rdx", "pop     rcx", "xor     eax, 1", "movzx   eax, al", "mov     argv, [rsp+128h+var_40]", "xor     argv, fs:28h", "jnz     loc_22EC"], ["movsxd~rax,<TAG>", "sub~rsp,0", "mov~esi,r12d", "push~r15", "mov~r9d,[rsp+0]", "or~esi,<STR>", "mov~r8d,[rsp+0]", "mov~ecx,[rsp+0]", "mov~edx,[rsp+0]", "lea~rdi,<TAG>", "call~FOO", "pop~rdx", "pop~rcx", "xor~eax,0", "movzx~eax,al", "mov~argv,[rsp+0]", "xor~argv,<TAG>", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.06572420634920635, ["cmp     [rsp+128h+chopt.recurse], 0", "jz      short loc_2159"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 10, 0, 1, 5, 1, 2, 10, -1, 0.017113095238095236, ["lea     rdi, dev_ino_buf_7022; root_d_i", "call    get_root_dev_ino", "test    rax, rax", "mov     [rsp+128h+chopt.root_dev_ino], rax", "jnz     loc_2159"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 9, -1, 0.02827380952380952, ["test    r14b, r14b", "jnz     loc_221B"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 8, 7, 0.014632936507936508, ["xor     r14d, r14d", "jmp     loc_1EC0"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 7, 8, 0.0234375, ["jl      loc_20B0"], ["jl~FOO"]], [0, 0, 64, 0, 1, 8, 3, 2, 5, 7, 0.029885912698412696, ["mov     rdx, [rsp+128h+var_128]; gid", "mov     rsi, [rsp+128h+var_120]; uid", "xor     r8d, r8d; groupname", "mov     rdi, cs:optarg@@GLIBC_2_2_5; spec", "xor     ecx, ecx; username", "call    parse_user_spec", "test    e, e", "jz      loc_1EC0"], ["mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "xor~r8d,r8d", "mov~rdi,<TAG>", "xor~ecx,ecx", "call~FOO", "test~e,e", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 4, 8, 0.11123511904761904, ["cmp     eax, 81h", "jz      loc_2018"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 6, 8, 0.05022321428571428, ["cmp     eax, 52h ; 'R'", "jz      loc_1FF8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 0F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     preserve_root", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~preserve_root", "pop~r15", "retn"]], [8, 0, 64, 1, 6, 39, 2, 6, 0, 7, 0.0, ["push    r15", "push    r14", "xor     r14d, r14d", "push    r13", "push    r12", "mov     r13d, 0FFFFFFFFh", "push    rbp", "push    rbx", "movsxd  rbp, edi", "mov     rbx, argv", "mov     r12d, 10h", "sub     rsp, 0F8h", "mov     argc, [argv]; argv0", "mov     rax, fs:28h", "mov     [rsp+128h+var_40], rax", "xor     eax, eax", "mov     [rsp+128h+uid], 0FFFFFFFFh", "mov     [rsp+128h+gid], 0FFFFFFFFh", "lea     r15, [rsp+128h+chopt]", "mov     [rsp+128h+required_uid], 0FFFFFFFFh", "mov     [rsp+128h+required_gid], 0FFFFFFFFh", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     rdi, r15; chopt", "call    chopt_init", "lea     rax, [rsp+128h+required_gid]", "mov     [rsp+128h+var_128], rax", "lea     rax, [rsp+128h+required_uid]", "mov     [rsp+128h+var_120], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "xor~r14d,r14d", "push~r13", "push~r12", "mov~r13d,0", "push~rbp", "push~rbx", "movsxd~rbp,edi", "mov~rbx,argv", "mov~r12d,0", "sub~rsp,0", "mov~argc,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,r15", "call~FOO", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~<TAG>"]], [1, 0, 2, 0, 2, 10, 2, 2, 7, -1, 0.00248015873015873, ["movsxd  e, cs:optind@@GLIBC_2_2_5", "mov     rdi, [argv+rax*8]; arg", "call    quote", "lea     rdx, format; \"%s: %s\"", "mov     r8, rax", "mov     rcx, e", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["movsxd~e,<TAG>", "mov~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~r8,rax", "mov~rcx,e", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 10, 0, 2, 9, 0, 2, 7, -1, 0.06299603174603174, ["mov     edi, [rsp+128h+ref_stats.st_uid]; uid", "mov     eax, [rsp+128h+ref_stats.st_gid]", "mov     [rsp+128h+uid], edi", "mov     [rsp+128h+gid], eax", "call    uid_to_name", "mov     edi, [rsp+128h+ref_stats.st_gid]; gid", "mov     [rsp+128h+chopt.user_name], rax", "call    gid_to_name", "mov     [rsp+128h+chopt.group_name], rax"], ["mov~edi,[rsp+0]", "mov~eax,[rsp+0]", "mov~[rsp+0],edi", "mov~[rsp+0],eax", "call~FOO", "mov~edi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "mov~[rsp+0],rax"]], [2, 0, 1, 0, 2, 9, 3, 2, 5, -1, 0.010416666666666666, ["lea     rsi, aRDereferenceRe; \"-R --dereference requires either -H or \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 25, 1, 0, 2, 0, 1, 4, 5, 0.026041666666666664, ["sub     r13d, 1", "jz      loc_22C8"], ["sub~r13d,0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 7, 7, 0.020337301587301584, ["mov     r14d, 1", "jmp     loc_1EC0"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 6, 8, 0.04402281746031746, ["cmp     eax, 83h", "jz      loc_20C0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 3, 4, 0.1243799603174603, ["cmp     r12d, 10h", "jnz     loc_20DC"], ["cmp~r12d,0", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 9, 7, 0.015128968253968252, ["mov     r12d, 10h", "jmp     loc_1EC0"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 5, 4, 0.005456349206349206, ["xor     r13d, r13d", "jmp     loc_20DC"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 24, 0, 0, 1, 0, 0, 3, 4, 0.09064980158730158, ["mov     r12d, 10h"], ["mov~r12d,0"]], [1, 0, 28, 0, 0, 2, 0, 1, 2, 5, 0.2249503968253968, ["cmp     [rsp+128h+chopt.recurse], 0", "jnz     loc_21BB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 0, 1, 2, 12, 2, 2, 9, -1, 0.0, ["sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rcx, cs:Version; version", "push    0", "lea     r9, aJimMeyering; \"Jim Meyering\"", "lea     r8, aDavidMackenzie; \"David MacKenzie\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"chown\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["sub~rsp,0", "mov~rdi,<TAG>", "mov~rcx,<TAG>", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 5, 9, 0.08110119047619047, ["jg      short loc_1F58"], ["jg~FOO"]], [1, 0, 64, 0, 1, 8, 1, 2, 1, 6, 0.44965277777777773, ["lea     rcx, long_options; longopts", "lea     rdx, shortopts; \"HLPRcfhv\"", "xor     r8d, r8d; longind", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_20CB"], ["lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rsi,argv", "mov~edi,ebp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 0, 1, 9, 7, 0.015128968253968252, ["mov     optc, cs:optarg@@GLIBC_2_2_5", "mov     cs:reference_file, rax", "jmp     loc_1EC0"], ["mov~optc,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 7, 7, 0.026537698412698412, ["mov     [rsp+128h+chopt.recurse], 1", "jmp     loc_1EC0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 7, 7, 0.030009920634920632, ["mov     r13d, 1", "jmp     loc_1EC0"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 64, 0, 2, 11, 2, 2, 6, 8, 0.006944444444444444, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; arg", "mov     [rsp+128h+var_128], e", "call    quote", "mov     rcx, [rsp+128h+var_128]", "lea     rdx, format; \"%s: %s\"", "mov     r8, rax", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "nop     word ptr [optc+optc+00000000h]"], ["mov~rdi,<TAG>", "mov~<TAG>,e", "call~FOO", "mov~rcx,<TAG>", "lea~rdx,<TAG>", "mov~r8,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "nop~[ord ptr [optc+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 10, 0, 4, 16, 2, 4, 11, -1, 0.005952380952380952, ["lea     rsi, aLibs+6; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, msgid; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     argv, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~argv,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]]], "func_feature": [39, 41, 91, 3, 65, 95, 0, 307, 0.04814, 23, 8], "succs": [[3, 12], [0, 7], [12], [2, 46], [58], [4, 14], [32, 45], [12, 6], [58], [8, 10], [19, 61], [23], [27, 11], [21, 22], [42, 13], [58], [24, 15], [31], [17, 31], [28, 23], [58], [26, 20], [], [], [52, 23], [59, 23], [56, 23], [23], [58], [58], [33, 29], [35], [18, 31], [41, 5], [43, 63], [34, 37], [64, 34], [34, 36], [58], [25, 38], [58, 62], [40, 57], [16, 60], [], [58], [47], [35], [63], [53, 47], [58], [49, 39], [48, 1], [58], [1], [1], [51, 54], [], [9, 50], [30, 55], [58], [58], [58], [61], [], [18]], "fname": "main", "n_num": 65}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_23F0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_23F0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2440"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2440"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_2473"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2488"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 5, 0, 3, 12, 3, 4, 0, 0, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_2879"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 6, 2, 1, 3, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_28EB"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 2, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_280F"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 6", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_27F0"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 2, 9, 1, 3, 6, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_2879"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, 1, 0.028571428571428574, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_2980"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, 1, 0.01904761904761905, ["lea     r12, command_name; \"chown\""], ["lea~r12,<TAG>"]], [2, 0, 1, 0, 2, 11, 2, 3, 6, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_24F9"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 5, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"chown\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"chown\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_28BE"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 5, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"chown\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aWrittenBySSAnd+1Bh; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]], [2, 0, 7, 0, 3, 12, 3, 4, 4, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_2936"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 2, 0.0380952380952381, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_2979"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [15, 0, 13, 0, 28, 156, 16, 28, 1, 5, 0.05714285714285715, ["lea     rsi, aUsageSOptionOw; \"Usage: %s [OPTION]... [OWNER][:[GROUP]]\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aChangeTheOwner; \"Change the owner and/or group of each F\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCChangesLikeVe; \"  -c, --changes          like verbose b\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDereferenceAff; \"      --dereference      affect the ref\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUsefulOnlyOnSy; \"                         (useful only o\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFromCurrentOwn; \"      --from=CURRENT_OWNER:CURRENT_GROU\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoPreserveRoot; \"      --no-preserve-root  do not treat \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReferenceRfile; \"      --reference=RFILE  use RFILE's ow\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRRecursiveOper; \"  -R, --recursive        operate on fil\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheFollowingOp; \"\\nThe following options modify how a hi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aOwnerIsUnchang; \"\\nOwner is unchanged if missing.  Group\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:program_name", "lea     rsi, aExamplesSRootU; \"\\nExamples:\\n  %s root /u        Change\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rbx", "mov     r8, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rcx, asc_F359; \"[\"", "lea     rax, aTestInvocation; \"test invocation\"", "lea     rdx, [rsp+0B8h+var_A8]", "lea     rbx, command_name; \"chown\"", "mov     [rsp+0B8h+var_B0], rcx", "lea     rcx, domainname; \"coreutils\"", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rcx", "movaps  [rsp+0B8h+var_A8], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha224sum; \"sha224sum\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha256sum; \"sha256sum\"", "movaps  [rsp+0B8h+var_98], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_213B20", "lea     rax, aSha384sum; \"sha384sum\"", "movaps  [rsp+0B8h+var_88], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_213B20", "lea     rax, aSha512sum; \"sha512sum\"", "movaps  [rsp+0B8h+var_78], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_213B20", "movaps  [rsp+0B8h+var_68], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "movhps  xmm0, cs:off_213B20", "movaps  [rsp+0B8h+var_58], xmm0", "pxor    xmm0, xmm0", "movaps  [rsp+0B8h+var_48], xmm0", "xchg    ax, ax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rbx", "mov~r8,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rcx,<TAG>", "lea~rax,<TAG>", "lea~rdx,[rsp+0]", "lea~rbx,<TAG>", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rcx", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movaps~[rsp+0],xmm0", "xchg~ax,ax"]], [2, 0, 15, 1, 0, 13, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 98h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_2500"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]]], "func_feature": [47, 39, 58, 9, 16, 23, 2, 281, 0.0506, 38, 2], "succs": [[9, 5], [0, 10], [1, 3], [1, 2], [9], [9, 4], [4], [15], [7], [7], [8, 11], [8, 6], [2], [12, 14], [15], []], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[7, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     dword ptr [chopt], 2", "mov     qword ptr [chopt+8], 0", "mov     byte ptr [chopt+10h], 1", "mov     byte ptr [chopt+4], 0", "mov     byte ptr [chopt+11h], 0", "mov     qword ptr [chopt+18h], 0", "mov     qword ptr [chopt+20h], 0", "retn"], ["mov~<TAG>,0", "mov~[word ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[word ptr [chopt+0],0", "mov~[word ptr [chopt+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "chopt_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, chopt", "mov     chopt, [chopt+18h]; ptr", "call    free", "mov     rdi, [chopt+20h]; ptr", "pop     chopt", "jmp     free"], ["push~rbx", "mov~rbx,chopt", "mov~chopt,[chopt+0]", "call~FOO", "mov~rdi,[chopt+0]", "pop~chopt", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "chopt_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     rdi, [grp]; string"], ["mov~rdi,<TAG>"]], [0, 1, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     ebx, edi", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _getgrgid", "test    grp, grp", "jz      short loc_2A40"], ["push~rbx", "mov~ebx,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 1, 2, 0.07500000000000001, ["mov     edi, ebx; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_2A24"], ["mov~edi,ebx", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.30000000000000004, ["call    xstrdup", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_2A4F"], ["call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     gid", "retn"], ["add~rsp,<STR>", "pop~gid", "retn"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 23, 0.075, 1, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "gid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     rdi, [pwd]; string"], ["mov~rdi,<TAG>"]], [0, 1, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     ebx, edi", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _getpwuid", "test    pwd, pwd", "jz      short loc_2AA0"], ["push~rbx", "mov~ebx,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~pwd,pwd", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 1, 2, 0.07500000000000001, ["mov     edi, ebx; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_2A84"], ["mov~edi,ebx", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.30000000000000004, ["call    xstrdup", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_2AAF"], ["call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     uid", "retn"], ["add~rsp,<STR>", "pop~uid", "retn"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 23, 0.075, 1, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "uid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 192, 0, 0, 3, 1, 1, 0, 0, 0.037196930054072916, ["test    rbp, rbp", "mov     edx, 5; category", "jz      loc_37A0"], ["test~rbp,rbp", "mov~edx,0", "jz~FOO"]], [1, 1, 192, 0, 5, 18, 0, 6, 16, 14, 0.02126286412000705, ["mov     rdi, [rsp+1C8h+ptr]; s", "call    _strlen", "mov     rdi, [rsp+1C8h+src]; s", "mov     r13, rax", "call    _strlen", "lea     rdi, [r13+rax+2]; n", "call    xmalloc", "mov     rsi, [rsp+1C8h+ptr]; src", "mov     rdi, rax; dest", "mov     r13, rax", "call    _stpcpy", "mov     rsi, [rsp+1C8h+src]; src", "lea     rdi, [rax+1]; dest", "mov     byte ptr [rax], 3Ah ; ':'", "call    _strcpy", "mov     eax, [rsp+1C8h+var_1A0]", "cmp     eax, 3", "jz      loc_33F8"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "mov~r13,rax", "call~FOO", "lea~rdi,[r13+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rax+0]", "mov~<TAG>,<STR>", "call~FOO", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 16, 14, 0.031218384789813362, ["test    r13, r13", "jnz     short loc_33F8"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 192, 0, 0, 2, 0, 1, 8, 9, 0.11524507238792954, ["mov     [rsp+1C8h+ok], dl", "jmp     loc_2CCB"], ["mov~[rsp+0],dl", "jmp~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 7, 10, 0.31646781789638906, ["mov     eax, [r12]", "cmp     eax, 2", "jz      loc_2E00"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 0, 8, 10, 0.008032443746729461, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 192, 0, 0, 2, 1, 1, 8, 10, 0.26867870225013085, ["test    eax, eax", "jnz     loc_2CC6"], ["test~eax,eax", "jnz~FOO"]], [2, 0, 192, 0, 1, 10, 5, 2, 7, 11, 0.06714198499912781, ["xor     eax, eax", "xor     edi, edi; status", "xor     r15d, r15d", "call    _error", "mov     eax, [r12]", "xor     edx, edx", "xor     r13d, r13d", "mov     ebp, 1", "cmp     eax, 2", "jnz     loc_2C04"], ["xor~eax,eax", "xor~edi,edi", "xor~r15d,r15d", "call~FOO", "mov~eax,<TAG>", "xor~edx,edx", "xor~r13d,r13d", "mov~ebp,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 20, 12, 0.001029129600558172, ["cmp     [rsp+1C8h+required_gid], 0FFFFFFFFh", "jz      short loc_3A6A"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 0, 1, 19, 11, 0.009180620966335252, ["cmp     eax, [rsp+1C8h+var_CC]", "jz      loc_3A52"], ["cmp~eax,[rsp+0]", "jz~FOO"]], [2, 0, 192, 0, 0, 4, 1, 1, 6, 4, 0.04206349206349207, ["mov     eax, [ent+90h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_36E8"], ["mov~eax,[ent+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 7, 5, 0.08233472876330018, ["test    cl, cl", "jnz     loc_2E47"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 5, 4, 0.25820251177394027, ["test    cl, cl", "jz      short loc_2E5D"], ["test~cl,cl", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 9, 15, 0.25475492761207047, ["test    r15b, r15b", "jz      loc_3188"], ["test~r15b,r15b", "jz~FOO"]], [1, 1, 192, 0, 5, 16, 0, 6, 14, 16, 0.040803244374673024, ["call    _strlen", "mov     rdi, [rsp+1C8h+s]; s", "mov     r13, rax", "call    _strlen", "lea     rdi, [r13+rax+2]; n", "call    xmalloc", "mov     rsi, rbp; src", "mov     rdi, rax; dest", "mov     [rsp+1C8h+var_1A8], rax", "call    _stpcpy", "mov     rsi, [rsp+1C8h+s]; src", "lea     rdi, [rax+1]; dest", "mov     byte ptr [rax], 3Ah ; ':'", "call    _strcpy", "cmp     [rsp+1C8h+ptr], 0", "jz      loc_3373"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~r13,rax", "call~FOO", "lea~rdi,[r13+0]", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rax+0]", "mov~<TAG>,<STR>", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 13, 16, 0.1452023373451943, ["cmp     [rsp+1C8h+s], 0", "mov     rdi, rbp; string", "jz      loc_32B0"], ["cmp~[rsp+0],0", "mov~rdi,rbp", "jz~FOO"]], [0, 0, 192, 0, 1, 5, 1, 2, 18, 12, 0.022675736961451247, ["lea     rsi, aFailedToChange_0; \"failed to change ownership of %s from %\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 10, 14, 0.029802895517181228, ["test    bpl, bpl", "jnz     loc_3460"], ["test~bpl,bpl", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 0, 8, 13, 0.07822257107971393, ["lea     eax, [rbp-1]", "cmp     ax, 1", "jbe     short loc_358A"], ["lea~eax,[rbp-1]+0]", "cmp~ax,0", "jbe~FOO"]], [0, 0, 192, 0, 1, 5, 1, 2, 5, 6, 0.005058433629862202, ["mov     rsi, ent; jumptable 0000000000002B93 case 2", "mov     rdi, fts; fts", "call    cycle_warning_required", "test    al, al", "jnz     loc_3688"], ["mov~rsi,ent", "mov~rdi,fts", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 192, 1, 0, 5, 0, 1, 4, 6, 0.25, ["lea     rcx, off_10348", "movzx   eax, bp", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~eax,bp", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 192, 0, 0, 2, 1, 1, 11, 13, 0.023654282225710796, ["test    r13, r13", "jz      loc_3AB3"], ["test~r13,r13", "jz~FOO"]], [1, 0, 192, 0, 1, 8, 1, 2, 15, 13, 0.05940170940170939, ["mov     rdx, [rsp+1C8h+stat_buf]; stat_buf", "mov     esi, r8d; fildes", "mov     edi, 1; ver", "mov     dword ptr [rsp+1C8h+ptr], r8d", "call    ___fxstat", "test    eax, eax", "mov     r8d, dword ptr [rsp+1C8h+ptr]", "jnz     loc_3800"], ["mov~rdx,[rsp+0]", "mov~esi,r8d", "mov~edi,0", "mov~[word ptr [rsp+0],r8d", "call~FOO", "test~eax,eax", "mov~r8d,[word ptr [rsp+0]", "jnz~FOO"]], [0, 0, 192, 0, 1, 7, 1, 1, 14, 13, 0.09837781266352695, ["mov     rsi, r9", "mov     edi, r15d", "mov     [rsp+1C8h+ptr], r9", "call    ___openat_2", "test    eax, eax", "mov     r8d, eax", "jns     loc_3608"], ["mov~rsi,r9", "mov~edi,r15d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r8d,eax", "jns~FOO"]], [0, 0, 192, 0, 1, 11, 1, 1, 17, 14, 0.010387231815803245, ["mov     edx, dword ptr [rsp+1C8h+src]", "mov     rsi, r9", "mov     edi, r15d", "mov     [rsp+1C8h+s], r10", "mov     [rsp+1C8h+ptr], r9", "call    ___openat_2", "test    eax, eax", "mov     r8d, eax", "mov     r9, [rsp+1C8h+ptr]", "mov     r10, [rsp+1C8h+s]", "jns     loc_3608"], ["mov~edx,[word ptr [rsp+0]", "mov~rsi,r9", "mov~edi,r15d", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r8d,eax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "jns~FOO"]], [1, 0, 192, 0, 0, 1, 0, 0, 12, 17, 0.0015175300889586603, ["mov     [rsp+1C8h+var_1A0], 1"], ["mov~[rsp+0],0"]], [1, 0, 192, 0, 0, 2, 1, 0, 16, 13, 0.012076574219431327, ["xor     r13d, r13d", "mov     [rsp+1C8h+var_1A8], 0"], ["xor~r13d,r13d", "mov~[rsp+0],0"]], [1, 0, 192, 0, 0, 2, 0, 1, 15, 14, 0.028993546136403276, ["cmp     eax, 4", "jnz     short loc_3830"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 15, 11, 0.0014652014652014652, ["cmp     esi, [r13+20h]", "mov     [rsp+1C8h+var_1A0], 2", "jnz     loc_3154"], ["cmp~esi,[r13+0]", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 14, 11, 0.02150270364556079, ["mov     esi, [rsp+1C8h+gid]", "cmp     esi, 0FFFFFFFFh", "jz      short loc_343B"], ["mov~esi,[rsp+0]", "cmp~esi,0", "jz~FOO"]], [1, 0, 192, 0, 0, 5, 0, 1, 4, 5, 0.34511599511599506, ["cmp     [rsp+1C8h+var_199], 0; jumptable 0000000000002B93 default case", "mov     r9, [ent+30h]", "lea     r13, [ent+78h]", "movzx   ecx, byte ptr [r12+10h]", "jz      short loc_2E43"], ["cmp~[rsp+0],0", "mov~r9,[ent+0]", "lea~r13,[ent+0]", "movzx~ecx,[yte ptr [r12+0]", "jz~FOO"]], [1, 0, 192, 0, 0, 5, 0, 1, 3, 6, 0.5855398569684285, ["movzx   ebp, word ptr [rbx+70h]", "mov     ent, [ent+38h]", "mov     [rsp+1C8h+arg], rax", "cmp     bp, 0Ah; switch 11 cases", "ja      loc_2E23; jumptable 0000000000002B93 default case"], ["movzx~ebp,[ord ptr [rbx+0]", "mov~ent,[ent+0]", "mov~<TAG>,rax", "cmp~bp,0", "ja~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 5, 6, 0.005058433629862202, ["cmp     byte ptr [r12+4], 0; jumptable 0000000000002B93 case 6", "jnz     loc_2E23; jumptable 0000000000002B93 default case"], ["cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 5, 6, 0.033734519448805164, ["cmp     byte ptr [r12+4], 0; jumptable 0000000000002B93 case 1", "jz      loc_2E23; jumptable 0000000000002B93 default case"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 16, 12, 0.051273329844758415, ["mov     rax, [rsp+1C8h+var_E0]", "cmp     [r13+8], rax", "jz      loc_3930"], ["mov~rax,[rsp+0]", "cmp~[r13+0],rax", "jz~FOO"]], [0, 0, 192, 0, 1, 5, 1, 2, 12, 16, 0.04255189255189255, ["mov     ebp, [r13+1Ch]", "mov     edi, ebp; uid", "call    _getpwuid", "test    rax, rax", "jz      loc_316E"], ["mov~ebp,[r13+0]", "mov~edi,ebp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 11, 17, 0.22662654805511948, ["test    r13, r13", "jnz     loc_2C2F"], ["test~r13,r13", "jnz~FOO"]], [3, 0, 192, 0, 4, 17, 4, 5, 11, 8, 0.014861329147043432, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     edx, 4; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "call    rpl_fts_set", "mov     rdi, fts; sp_0", "call    rpl_fts_read", "mov     [rsp+1C8h+ok], 0", "jmp     loc_2B58"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [4, 0, 192, 0, 4, 22, 5, 5, 10, 9, 0.004879644165358451, ["lea     rdx, aLibs+6; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rsp+1C8h+arg]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r13", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3004"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r13", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 192, 0, 3, 14, 4, 3, 10, 9, 0.004879644165358451, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 192, 0, 0, 1, 0, 0, 13, 15, 0.03361590790162219, ["mov     rdi, [rax]; string"], ["mov~rdi,<TAG>"]], [1, 0, 192, 0, 1, 6, 1, 2, 15, 16, 0.02447060875632304, ["mov     ebp, [r13+1Ch]", "mov     r15d, 1", "mov     edi, ebp; uid", "call    _getpwuid", "test    rax, rax", "jnz     loc_2C43"], ["mov~ebp,[r13+0]", "mov~r15d,0", "mov~edi,ebp", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 6, 5, 0.08413134484563056, ["cmp     qword ptr [r12+8], 0", "jnz     loc_2E43"], ["cmp~[word ptr [r12+0],0", "jnz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 5, 5, 0.08796441653584511, ["cmp     dword ptr [r12], 2", "jz      loc_3560"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 16, 13, 0.014889237746380608, ["mov     edx, 5", "lea     rsi, aFailedToChange_3; \"failed to change ownership of %s\\n\"", "jmp     loc_33BC"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 18, 14, 0.005180533751962323, ["cmp     [rsp+1C8h+s], 0", "jz      loc_3A41"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 192, 0, 0, 1, 0, 0, 15, 14, 0.011971916971916952, ["mov     [rsp+1C8h+var_1A8], 0"], ["mov~[rsp+0],0"]], [1, 0, 192, 0, 0, 2, 0, 1, 16, 17, 0.0014652014652014652, ["mov     [rsp+1C8h+var_1A0], 4", "jmp     loc_3154"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 192, 0, 0, 3, 1, 1, 15, 10, 0.018781615210186637, ["test    eax, eax", "mov     r15d, 1", "jnz     loc_2CC6"], ["test~eax,eax", "mov~r15d,0", "jnz~FOO"]], [1, 0, 192, 0, 1, 6, 1, 2, 17, 12, 0.0150985522414094, ["lea     rsi, aNoChangeToOwne; \"no change to ownership of %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 18, 13, 0.005285190999476714, ["cmp     [rsp+1C8h+s], 0", "jz      loc_383C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 7, 3, 0.18159340659340623, ["mov     eax, [rsp+1C8h+required_gid]", "cmp     eax, 0FFFFFFFFh", "jz      loc_34A0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [4, 0, 192, 0, 0, 11, 2, 1, 6, 3, 0.2248560962846677, ["lea     eax, [rbp-1]", "cmp     ax, 1", "setbe   dl", "and     ebp, 0FFFFFFFDh", "cmp     bp, 4", "setz    al", "or      edx, eax", "mov     eax, [rsp+1C8h+required_uid]", "mov     r15d, edx", "cmp     eax, 0FFFFFFFFh", "jz      loc_3050"], ["lea~eax,[rbp-1]+0]", "cmp~ax,0", "setbe~dl", "and~ebp,0", "cmp~bp,0", "setz~al", "or~edx,eax", "mov~eax,[rsp+0]", "mov~r15d,edx", "cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 0, 1, 7, 2, 0.039992150706436504, ["cmp     eax, [r13+1Ch]", "jz      loc_3050"], ["cmp~eax,[r13+0]", "jz~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 19, 11, 0.02388234781091924, ["mov     eax, [rsp+1C8h+required_gid]", "cmp     eax, [rsp+1C8h+var_C8]", "jnz     loc_395C"], ["mov~eax,[rsp+0]", "cmp~eax,[rsp+0]", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 18, 12, 0.034711320425606144, ["mov     eax, [rsp+1C8h+required_uid]", "cmp     eax, 0FFFFFFFFh", "jz      loc_3A59"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 16, 16, 0.005442176870748299, ["mov     eax, [rsp+1C8h+var_1A0]", "cmp     eax, 3", "jnz     loc_32D3"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 15, 16, 0.030267748124890966, ["mov     rdi, [rsp+1C8h+src]; string", "test    rdi, rdi", "jz      loc_3ACA"], ["mov~rdi,[rsp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 192, 0, 2, 7, 1, 3, 14, 14, 0.0723338566195709, ["call    xstrdup", "mov     ebp, [r13+20h]", "mov     [rsp+1C8h+ptr], rax", "mov     edi, ebp; gid", "call    _getgrgid", "test    rax, rax", "jz      loc_36D0"], ["call~FOO", "mov~ebp,[r13+0]", "mov~[rsp+0],rax", "mov~edi,ebp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 192, 0, 1, 5, 0, 2, 13, 15, 0.03361590790162219, ["mov     rsi, [rsp+1C8h+buf]; buf", "mov     edi, ebp; i", "call    umaxtostr", "mov     rdi, rax", "jmp     loc_2C46"], ["mov~rsi,[rsp+0]", "mov~edi,ebp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 192, 0, 0, 1, 0, 0, 15, 13, 0.03377289377289377, ["mov     rdi, [rax]; string"], ["mov~rdi,<TAG>"]], [0, 0, 192, 0, 0, 4, 1, 1, 8, 2, 0.029853479853479817, ["cmp     [r13+20h], eax", "setz    dl", "test    r15b, r15b", "jz      loc_2EB2"], ["cmp~[r13+0],eax", "setz~dl", "test~r15b,r15b", "jz~FOO"]], [0, 0, 192, 0, 2, 12, 2, 3, 17, 11, 0.011878597592883306, ["mov     dword ptr [rsp+1C8h+src], r8d", "call    ___errno_location", "mov     r8d, dword ptr [rsp+1C8h+src]", "mov     r15d, [rax]", "mov     [rsp+1C8h+ptr], rax", "mov     edi, r8d; fd", "call    _close", "mov     rdx, [rsp+1C8h+ptr]", "mov     [rdx], r15d", "xor     edx, edx", "xor     r15d, r15d", "jmp     loc_2BF7"], ["mov~[word ptr [rsp+0],r8d", "call~FOO", "mov~r8d,[word ptr [rsp+0]", "mov~r15d,<TAG>", "mov~[rsp+0],rax", "mov~edi,r8d", "call~FOO", "mov~rdx,[rsp+0]", "mov~<TAG>,r15d", "xor~edx,edx", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 17, 12, 0.038880167451596025, ["mov     rax, [rsp+1C8h+var_E8]", "cmp     [r13+0], rax", "jnz     loc_363E"], ["mov~rax,[rsp+0]", "cmp~[r13+0],rax", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 11, 18, 0.0013605442176870747, ["mov     r15d, ebp", "mov     [rsp+1C8h+var_1A0], 4", "jmp     loc_3190"], ["mov~r15d,ebp", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 1, 0, 16, 13, 0.012128902843188523, ["xor     r13d, r13d", "mov     [rsp+1C8h+var_1A8], 0"], ["xor~r13d,r13d", "mov~[rsp+0],0"]], [0, 0, 192, 0, 1, 5, 1, 2, 19, 12, 0.0024725274725274724, ["lea     rsi, aFailedToChange_1; \"failed to change group of %s from %s to\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 18, 13, 0.009733124018838305, ["cmp     [rsp+1C8h+s], 0", "jz      loc_3982"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 15, 15, 0.025885225885225963, ["cmp     [rsp+1C8h+src], 0", "jz      loc_3598"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 14, 12, 0.01850514564800279, ["cmp     esi, [r13+1Ch]", "mov     [rsp+1C8h+var_1A0], 2", "jz      loc_3420"], ["cmp~esi,[r13+0]", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 9, 2, 0.014965986394557835, ["mov     rax, [r12+8]", "test    rax, rax", "jz      loc_2EB2"], ["mov~rax,[r12+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 192, 0, 1, 4, 0, 2, 16, 12, 0.07264782836211407, ["call    xstrdup", "cmp     [rsp+1C8h+var_1A0], 1", "mov     [rsp+1C8h+src], rax", "jnz     loc_3340"], ["call~FOO", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 192, 0, 1, 5, 0, 2, 15, 13, 0.03377289377289377, ["mov     rsi, [rsp+1C8h+buf]; buf", "mov     edi, ebp; i", "call    umaxtostr", "mov     rdi, rax", "jmp     loc_2C67"], ["mov~rsi,[rsp+0]", "mov~edi,ebp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 192, 0, 2, 9, 0, 3, 20, 10, 0.013922030350601779, ["mov     dword ptr [rsp+1C8h+ptr], r8d", "call    ___errno_location", "mov     r8d, dword ptr [rsp+1C8h+ptr]", "mov     r15d, [rax]", "mov     rbp, rax", "mov     edi, r8d; fd", "call    _close", "mov     [rbp+0], r15d", "jmp     loc_3128"], ["mov~[word ptr [rsp+0],r8d", "call~FOO", "mov~r8d,[word ptr [rsp+0]", "mov~r15d,<TAG>", "mov~rbp,rax", "mov~edi,r8d", "call~FOO", "mov~[rbp+0],r15d", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 17, 14, 0.020377638234781094, ["cmp     eax, 4", "jnz     short loc_32E0"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 192, 0, 1, 5, 0, 2, 16, 15, 0.020037502180359337, ["call    xstrdup", "mov     r13, rax", "mov     eax, [rsp+1C8h+var_1A0]", "cmp     eax, 3", "jnz     loc_3276"], ["call~FOO", "mov~r13,rax", "mov~eax,[rsp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 1, 10, 3, 0.010256410256410275, ["jmp     loc_2EA5"], ["jmp~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 8, 4, 0.0018315018315018315, ["movzx   ebp, word ptr [ent+70h]", "mov     r9, [rsp+1C8h+ptr]", "jmp     loc_2E5D"], ["movzx~ebp,[ord ptr [ent+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 18, 13, 0.02565846851561137, ["test    rbp, rbp", "jnz     loc_35BB"], ["test~rbp,rbp", "jnz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 17, 14, 0.0077402755974184554, ["xor     r13d, r13d", "jmp     loc_327B"], ["xor~r13d,r13d", "jmp~FOO"]], [0, 0, 192, 0, 0, 5, 3, 1, 12, 11, 0.0827507413221699, ["movzx   ebp, byte ptr [r12+11h]", "xor     edx, edx", "xor     r15d, r15d", "test    bpl, bpl", "jnz     loc_2BF7"], ["movzx~ebp,[yte ptr [r12+0]", "xor~edx,edx", "xor~r15d,r15d", "test~bpl,bpl", "jnz~FOO"]], [1, 0, 192, 0, 1, 5, 0, 2, 15, 12, 0.037545787545787544, ["call    ___errno_location", "cmp     dword ptr [rax], 0Dh", "mov     r10, rax", "mov     r9, [rsp+1C8h+ptr]", "jnz     loc_2F07"], ["call~FOO", "cmp~<TAG>,0", "mov~r10,rax", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 192, 0, 1, 10, 3, 2, 12, 11, 0.03547008547008546, ["mov     ecx, [rsp+1C8h+gid]; group", "mov     edx, [rsp+1C8h+uid]; owner", "xor     r8d, r8d; flag", "mov     rsi, r9; file", "mov     edi, r15d; fd", "call    _fchownat", "test    eax, eax", "setz    bpl", "test    bpl, bpl", "jz      loc_2F07"], ["mov~ecx,[rsp+0]", "mov~edx,[rsp+0]", "xor~r8d,r8d", "mov~rsi,r9", "mov~edi,r15d", "call~FOO", "test~eax,eax", "setz~bpl", "test~bpl,bpl", "jz~FOO"]], [0, 0, 192, 0, 2, 9, 0, 3, 16, 12, 0.007638670852956567, ["mov     dword ptr [rsp+1C8h+ptr], r8d", "call    ___errno_location", "mov     r8d, dword ptr [rsp+1C8h+ptr]", "mov     r15d, [rax]", "mov     rbp, rax", "mov     edi, r8d; fd", "call    _close", "mov     [rbp+0], r15d", "jmp     loc_2F07"], ["mov~[word ptr [rsp+0],r8d", "call~FOO", "mov~r8d,[word ptr [rsp+0]", "mov~r15d,<TAG>", "mov~rbp,rax", "mov~edi,r8d", "call~FOO", "mov~[rbp+0],r15d", "jmp~FOO"]], [0, 0, 192, 0, 0, 1, 0, 1, 19, 12, 0.004347636490493633, ["jmp     loc_2F07"], ["jmp~FOO"]], [0, 0, 192, 0, 1, 4, 1, 2, 21, 11, 0.012121489621489621, ["mov     edi, r8d; fd", "call    _close", "test    eax, eax", "jnz     loc_2F07"], ["mov~edi,r8d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 11, 10, 0.08446712018140588, ["test    bpl, bpl", "jnz     loc_3128"], ["test~bpl,bpl", "jnz~FOO"]], [1, 0, 192, 0, 1, 4, 0, 2, 14, 15, 0.09961102389673841, ["call    xstrdup", "cmp     [rsp+1C8h+ptr], 0", "mov     [rsp+1C8h+var_1A8], rax", "jnz     loc_3598"], ["call~FOO", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 11, 12, 0.12478196406767833, ["cmp     [rsp+1C8h+var_199], 0", "jnz     short loc_3100"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 10, 12, 0.15050148264433977, ["test    bpl, bpl", "mov     r15d, [fts+2Ch]", "jnz     loc_3080"], ["test~bpl,bpl", "mov~r15d,[fts+0]", "jnz~FOO"]], [0, 0, 192, 0, 1, 8, 1, 2, 20, 12, 0.016315192743764174, ["mov     edx, [rsp+1C8h+gid]; group", "mov     esi, [rsp+1C8h+uid]; owner", "mov     edi, r8d; fd", "mov     dword ptr [rsp+1C8h+ptr], r8d", "call    _fchown", "test    eax, eax", "mov     r8d, dword ptr [rsp+1C8h+ptr]", "jnz     loc_3800"], ["mov~edx,[rsp+0]", "mov~esi,[rsp+0]", "mov~edi,r8d", "mov~[word ptr [rsp+0],r8d", "call~FOO", "test~eax,eax", "mov~r8d,[word ptr [rsp+0]", "jnz~FOO"]], [0, 0, 192, 0, 1, 5, 1, 2, 14, 13, 0.005529391243676958, ["lea     rsi, aChangingGroupO; \"changing group of %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r15, rax", "jmp     loc_2F4D"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r15,rax", "jmp~FOO"]], [3, 0, 192, 0, 1, 7, 0, 2, 13, 14, 0.015846851561137278, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "cmp     [rsp+1C8h+uid], 0FFFFFFFFh", "mov     rbp, rax", "mov     edx, 5; category", "jz      loc_38A0"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "cmp~[rsp+0],0", "mov~rbp,rax", "mov~edx,0", "jz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 19, 13, 0.0052328623757195184, ["cmp     [rsp+1C8h+s], 0", "jz      loc_3875"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 192, 0, 1, 6, 1, 2, 17, 12, 0.015098552241409413, ["lea     rsi, aOwnershipOfSRe_0; \"ownership of %s retained\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 192, 0, 1, 3, 0, 2, 11, 11, 0.01081458224315367, ["call    ___errno_location", "cmp     dword ptr [rax], 5Fh ; '_'", "jz      loc_3760"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 192, 0, 1, 9, 1, 2, 10, 11, 0.09672073957788242, ["mov     ecx, [rsp+1C8h+gid]; group", "mov     edx, [rsp+1C8h+uid]; owner", "mov     r8d, 100h; flag", "mov     rsi, r9; file", "mov     edi, r15d; fd", "call    _fchownat", "test    eax, eax", "setz    bpl", "jz      short loc_2EFE"], ["mov~ecx,[rsp+0]", "mov~edx,[rsp+0]", "mov~r8d,0", "mov~rsi,r9", "mov~edi,r15d", "call~FOO", "test~eax,eax", "setz~bpl", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 8, 1, 0.03857927786499223, ["test    dl, dl", "jz      loc_3ADC"], ["test~dl,dl", "jz~FOO"]], [1, 0, 192, 0, 1, 6, 1, 2, 19, 12, 0.0024725274725274724, ["lea     rsi, aChangedGroupOf; \"changed group of %s from %s to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [2, 0, 192, 0, 0, 4, 1, 1, 12, 13, 0.10680272108843537, ["mov     eax, [r13+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_3670"], ["mov~eax,[r13+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 0, 1, 9, 13, 0.12227891156462585, ["movzx   ebp, byte ptr [r12+10h]", "jmp     loc_2EC2"], ["movzx~ebp,[yte ptr [r12+0]", "jmp~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 8, 6, 0.14695185766614347, ["test    r15b, r15b", "jz      loc_3890"], ["test~r15b,r15b", "jz~FOO"]], [3, 0, 192, 0, 3, 17, 5, 4, 6, 8, 0.0011076225361939648, ["mov     rdx, [rsp+1C8h+arg]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "mov     ent, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+1C8h+ok], 0", "jmp     loc_2B58"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 192, 0, 0, 1, 0, 1, 22, 10, 0.006331763474620618, ["jmp     loc_3128"], ["jmp~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 9, 4, 0.021153846153846106, ["mov     rax, [r12+8]", "test    rax, rax", "jz      loc_3AA6"], ["mov~rax,[r12+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 192, 0, 0, 3, 0, 1, 12, 12, 0.017348683062968776, ["mov     [rsp+1C8h+ptr], 0", "mov     [rsp+1C8h+src], 0", "jmp     loc_2C7C"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 1, 192, 0, 0, 2, 0, 1, 13, 12, 0.009262166405023548, ["cmp     eax, 4000h", "jnz     short loc_3100"], ["cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.010151753008895866, ["mov     rsi, [rsp+1C8h+var_40]", "xor     rsi, fs:28h", "movzx   eax, [rsp+1C8h+ok]", "jnz     loc_3AA1"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "movzx~eax,[rsp+0]", "jnz~FOO"]], [0, 0, 192, 0, 0, 1, 1, 0, 10, 3, 0.012877202162916481, ["xor     edx, edx"], ["xor~edx,edx"]], [1, 0, 192, 0, 1, 6, 1, 2, 20, 12, 0.0024725274725274724, ["lea     rsi, aGroupOfSRetain; \"group of %s retained as %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     short loc_3300"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [2, 0, 192, 0, 0, 2, 0, 0, 14, 14, 0.0005232862375719519, ["mov     dword ptr [rsp+1C8h+src], 10901h", "mov     edx, 10900h"], ["mov~[word ptr [rsp+0],0", "mov~edx,0"]], [0, 0, 192, 0, 0, 2, 0, 0, 11, 3, 0.014717425431711133, ["mov     edx, r15d", "nop     word ptr [rax+rax+00000000h]"], ["mov~edx,r15d", "nop~[ord ptr [rax+0]"]], [0, 0, 192, 0, 0, 3, 0, 1, 10, 4, 0.016077969649398196, ["mov     rsi, [rax]", "cmp     [r13+8], rsi", "jnz     loc_2EBA"], ["mov~rsi,<TAG>", "cmp~[r13+0],rsi", "jnz~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 11, 2, 0.028235653235653253, ["mov     rsi, [rax]", "cmp     [r13+8], rsi", "jz      loc_34D0"], ["mov~rsi,<TAG>", "cmp~[r13+0],rsi", "jz~FOO"]], [3, 0, 192, 0, 3, 13, 2, 3, 13, 11, 0.06533228676085819, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aNeitherSymboli; \"neither symbolic link %s nor referent h\"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 10, 11, 0.0034885749171463453, ["movzx   edx, [rsp+1C8h+ok]", "mov     ebp, r15d", "jmp     loc_2BF7"], ["movzx~edx,[rsp+0]", "mov~ebp,r15d", "jmp~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 9, 5, 0.019884877027734137, ["mov     rax, [r12+8]", "test    rax, rax", "jz      loc_2EBA"], ["mov~rax,[r12+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 9, 1, 0.03672597244025815, ["test    dl, dl", "jz      loc_3ADC"], ["test~dl,dl", "jz~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 12, 2, 0.03600209314495029, ["mov     rax, [rax+8]", "cmp     [r13+0], rax", "jnz     loc_2EB2"], ["mov~rax,[rax+0]", "cmp~[r13+0],rax", "jnz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 0, 10, 14, 0.015375893947322517, ["movzx   ecx, byte ptr [r12+10h]"], ["movzx~ecx,[yte ptr [r12+0]"]], [0, 0, 192, 0, 0, 5, 3, 1, 8, 11, 0.03308913308913309, ["movzx   ebp, byte ptr [r12+11h]", "xor     edx, edx", "xor     r15d, r15d", "test    bpl, bpl", "jnz     loc_2BF7"], ["movzx~ebp,[yte ptr [r12+0]", "xor~edx,edx", "xor~r15d,r15d", "test~bpl,bpl", "jnz~FOO"]], [1, 0, 192, 0, 1, 10, 2, 2, 7, 5, 0.03970870399441828, ["lea     r13, [rsp+1C8h+var_178]", "mov     esi, [fts+2Ch]; fildes", "xor     r8d, r8d; flag", "mov     rdx, r9; filename", "mov     edi, 1; ver", "mov     [rsp+1C8h+ptr], r9", "mov     rcx, r13; stat_buf", "call    ___fxstatat", "test    eax, eax", "jz      loc_37E8"], ["lea~r13,[rsp+0]", "mov~esi,[fts+0]", "xor~r8d,r8d", "mov~rdx,r9", "mov~edi,0", "mov~[rsp+0],r9", "mov~rcx,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 0, 10, 13, 0.02312053026338741, ["mov     ebp, ecx"], ["mov~ebp,ecx"]], [2, 0, 192, 0, 0, 3, 1, 1, 9, 13, 0.006881214024071167, ["and     ebp, 0FFFFFFFDh", "cmp     bp, 4", "jnz     loc_2EC0"], ["and~ebp,0", "cmp~bp,0", "jnz~FOO"]], [0, 0, 192, 0, 2, 4, 0, 2, 14, 10, 0.29092098377812664, ["mov     rdi, [rsp+1C8h+ptr]; ptr", "call    free", "mov     rdi, [rsp+1C8h+src]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO"]], [2, 0, 192, 0, 4, 15, 1, 5, 18, 11, 0.2204866562009419, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r8, [rsp+1C8h+var_1A8]", "mov     rdx, rax", "mov     rcx, r13", "mov     rsi, rbp", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rdi, r13; ptr", "call    free", "mov     rdi, [rsp+1C8h+var_1A8]; ptr", "call    free", "jmp     loc_2CB2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,[rsp+0]", "mov~rdx,rax", "mov~rcx,r13", "mov~rsi,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rdi,r13", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [2, 0, 192, 0, 0, 3, 0, 1, 13, 14, 0.09275248560962847, ["mov     dword ptr [rsp+1C8h+src], 901h", "mov     edx, 900h", "jmp     loc_30AF"], ["mov~[word ptr [rsp+0],0", "mov~edx,0", "jmp~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 17, 13, 0.030315716030001747, ["test    rbp, rbp", "jz      loc_3470"], ["test~rbp,rbp", "jz~FOO"]], [0, 0, 192, 0, 0, 1, 1, 0, 9, 9, 0.32247514390371534, ["and     [rsp+1C8h+ok], r15b"], ["and~[rsp+0],r15b"]], [1, 0, 192, 0, 0, 3, 0, 1, 14, 15, 0.04575353218210355, ["mov     eax, [rsp+1C8h+var_1A0]", "cmp     eax, 3", "jz      loc_3A38"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 13, 16, 0.0656820163963022, ["mov     rax, [rsp+1C8h+s]", "test    rax, rax", "jz      loc_3857"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 15, 14, 0.03089307517878954, ["mov     eax, [rsp+1C8h+var_1A0]", "cmp     eax, 3", "jz      loc_38C0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 9, 8, 0.5142159427873714, ["cmp     byte ptr [r12+4], 0", "jnz     loc_2B58"], ["cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 12, 9, 0.11255276469562182, ["mov     eax, [r12]", "cmp     eax, 2", "jz      loc_2CCB"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 16, 15, 0.016753881039595325, ["cmp     eax, 4", "jz      loc_3998"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 1, 17, 15, 0.0019099947671376242, ["jmp     loc_339B"], ["jmp~FOO"]], [0, 0, 192, 0, 0, 2, 1, 0, 17, 14, 0.004225536368393511, ["xor     r13d, r13d", "nop"], ["xor~r13d,r13d", "nop"]], [1, 0, 192, 0, 0, 2, 0, 1, 16, 13, 0.03799232513518238, ["cmp     eax, 4", "jnz     loc_32E0"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 192, 0, 1, 6, 1, 2, 17, 12, 0.04020320948892386, ["lea     rsi, aOwnershipOfSRe; \"ownership of %s retained as %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 13, 12, 0.041263736263736264, ["mov     esi, [rsp+1C8h+uid]", "cmp     esi, 0FFFFFFFFh", "jz      loc_3420"], ["mov~esi,[rsp+0]", "cmp~esi,0", "jz~FOO"]], [2, 0, 192, 0, 0, 4, 0, 1, 9, 0, 0.03946886446886447, ["movzx   edx, [rsp+1C8h+ok]", "mov     ebp, 1", "mov     r15d, 1", "jmp     loc_2BF7"], ["movzx~edx,[rsp+0]", "mov~ebp,0", "mov~r15d,0", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 18, 13, 0.007134135705564276, ["cmp     dword ptr [r10], 0Dh", "jz      loc_30F4"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 192, 0, 0, 4, 1, 1, 16, 13, 0.020722135007849293, ["mov     eax, [r13+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_39A0"], ["mov~eax,[r13+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 192, 0, 2, 9, 1, 3, 10, 7, 0.2551587301587302, ["mov     rsi, ent; p", "mov     edx, 4; instr", "mov     rdi, fts; sp_0", "call    rpl_fts_set", "mov     rdi, fts; sp_0", "call    rpl_fts_read", "test    rax, rax", "mov     ent, rax", "jnz     loc_2B6C"], ["mov~rsi,ent", "mov~edx,0", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~ent,rax", "jnz~FOO"]], [2, 0, 192, 0, 0, 8, 1, 1, 13, 10, 0.026347462061747776, ["mov     rsi, [rsp+1C8h+arg]", "lea     rdi, aLibs+6; \"/\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_38D8"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 192, 0, 0, 2, 0, 0, 17, 12, 0.008437990580847723, ["mov     r15d, [fts+2Ch]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r15d,[fts+0]", "nop~[word ptr [rax+0]"]], [1, 0, 192, 0, 1, 6, 1, 1, 18, 12, 0.020242455956741668, ["lea     rsi, aChangedOwnersh; \"changed ownership of %s from %s to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "nop"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "nop"]], [2, 0, 196, 1, 0, 17, 1, 1, 0, 9, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 198h", "mov     rbx, fs:28h", "mov     [rsp+1C8h+var_40], rbx", "xor     ebx, ebx", "cmp     r8d, 0FFFFFFFFh", "mov     [rsp+1C8h+uid], edx", "mov     [rsp+1C8h+gid], ecx", "mov     [rsp+1C8h+required_uid], r8d", "mov     [rsp+1C8h+required_gid], r9d", "mov     r12, [rsp+1C8h+chopt]", "jnz     short loc_2B16"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~[rsp+0],rbx", "xor~ebx,ebx", "cmp~r8d,0", "mov~[rsp+0],edx", "mov~[rsp+0],ecx", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~r12,[rsp+0]", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 3, -1, 0.03935112506541078, ["call    ___errno_location", "mov     ent, rax", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_2D20"], ["call~FOO", "mov~ent,rax", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 192, 0, 1, 5, 1, 2, 2, 7, 0.36954910169195887, ["mov     rdi, fts; sp_0", "call    rpl_fts_read", "test    rax, rax", "mov     rbx, rax", "jz      loc_2CFB"], ["mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 195, 0, 0, 2, 0, 1, 1, 9, 5.2328623757195185e-05, ["cmp     r9d, 0FFFFFFFFh", "jnz     short loc_2B16"], ["cmp~r9d,0", "jnz~FOO"]], [0, 0, 192, 0, 1, 5, 1, 2, 19, 12, 0.0024725274725274724, ["lea     rsi, aFailedToChange_3; \"failed to change ownership of %s\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "jmp     loc_3300"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 194, 0, 0, 2, 0, 1, 2, 9, 5.2328623757195185e-05, ["cmp     byte ptr [r12+10h], 0", "jz      loc_33E0"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 4, 1, 1, 4, -1, 0.00989010989010989, ["movzx   eax, byte ptr [r12+11h]", "test    al, al", "mov     [rsp+1C8h+ok], al", "jz      loc_3778"], ["movzx~eax,[yte ptr [r12+0]", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 5, -1, 6.541077969649399e-05, ["mov     [rsp+1C8h+ok], 0"], ["mov~[rsp+0],0"]], [0, 0, 192, 0, 0, 1, 0, 0, 13, 10, 0.020368916797488226, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 4, 0, 1, 4, 1, 2, 4, -1, 0.020094191522762952, ["mov     rdi, fts; sp_0", "call    rpl_fts_close", "test    eax, eax", "jz      short loc_2D52"], ["mov~rdi,fts", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 2, 10, 3, 3, 5, -1, 6.541077969649399e-05, ["lea     rsi, aFtsReadFailed; \"fts_read failed\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2D20"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [4, 0, 192, 0, 4, 22, 5, 5, 14, 9, 0.010779696493982208, ["lea     rdx, aLibs+6; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rsp+1C8h+arg]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     rbp, rax", "call    quotearg_n_style", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     ent, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, rbp", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3532"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "mov~rbp,rax", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,rbp", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 192, 0, 3, 14, 4, 3, 14, 9, 0.010779696493982208, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     ent, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 192, 0, 0, 8, 1, 1, 9, 10, 0.014547357404500262, ["mov     rsi, [rsp+1C8h+arg]", "lea     rdi, aLibs+6; \"/\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_39E0"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 192, 0, 1, 6, 1, 2, 17, 12, 0.052196930054072985, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r13, [rsp+1C8h+var_1A8]", "mov     rbp, rax", "mov     [rsp+1C8h+var_1A8], 0", "jmp     loc_3300"], ["xor~edi,edi", "call~FOO", "mov~r13,[rsp+0]", "mov~rbp,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 6, 8, 0.02978370835513693, ["mov     rax, [r12+8]", "test    rax, rax", "jz      loc_2B58"], ["mov~rax,[r12+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 192, 0, 1, 4, 1, 1, 14, 13, 0.005529391243676958, ["lea     rsi, aChangingOwners; \"changing ownership of %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r15, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r15,rax"]], [2, 0, 3, 0, 2, 10, 3, 2, 5, -1, 0.0, ["lea     rsi, aFtsCloseFailed; \"fts_close failed\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+1C8h+ok], 0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0"]], [0, 0, 192, 0, 0, 5, 1, 1, 17, 17, 0.024873539159253447, ["mov     rbp, [r12+18h]", "mov     rax, [r12+20h]", "test    rbp, rbp", "mov     [rsp+1C8h+s], rax", "jnz     loc_31C3"], ["mov~rbp,[r12+0]", "mov~rax,[r12+0]", "test~rbp,rbp", "mov~[rsp+0],rax", "jnz~FOO"]], [3, 0, 192, 0, 1, 15, 2, 1, 1, 8, 0.020094191522762952, ["xor     edx, edx; compar", "call    xfts_open", "cmp     [rsp+1C8h+required_uid], 0FFFFFFFFh", "mov     r14, rax", "mov     [rsp+1C8h+ok], 1", "setz    dl", "cmp     [rsp+1C8h+required_gid], 0FFFFFFFFh", "setz    al", "and     edx, eax", "lea     rax, [rsp+1C8h+var_58]", "mov     [rsp+1C8h+var_199], dl", "mov     [rsp+1C8h+buf], rax", "lea     rax, [rsp+1C8h+var_E8]", "mov     [rsp+1C8h+stat_buf], rax", "nop     dword ptr [rax]"], ["xor~edx,edx", "call~FOO", "cmp~[rsp+0],0", "mov~r14,rax", "mov~[rsp+0],0", "setz~dl", "cmp~[rsp+0],0", "setz~al", "and~edx,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],dl", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~<TAG>"]], [2, 0, 193, 0, 0, 5, 1, 1, 3, 9, 0.0, ["mov     eax, esi", "or      eax, 8", "cmp     dword ptr [r12], 2", "cmovz   esi, eax", "jmp     loc_2B16"], ["mov~eax,esi", "or~eax,0", "cmp~<TAG>,0", "cmovz~esi,eax", "jmp~FOO"]], [2, 0, 192, 0, 3, 13, 1, 4, 9, 12, 0.0034624106052677473, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotDerefere; \"cannot dereference %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r15, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     rcx, r15", "mov     rdx, rbp", "jmp     loc_2F58"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r15,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~rcx,r15", "mov~rdx,rbp", "jmp~FOO"]], [2, 0, 192, 0, 2, 11, 4, 3, 15, 8, 0.026661433804290948, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+1C8h+ok], 0", "jmp     loc_2B58"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 192, 0, 0, 7, 1, 1, 12, 17, 0.18580150008721436, ["mov     rbp, [r12+18h]", "mov     rax, [r12+20h]", "mov     [rsp+1C8h+ptr], 0", "mov     [rsp+1C8h+src], 0", "test    rbp, rbp", "mov     [rsp+1C8h+s], rax", "jz      loc_3358"], ["mov~rbp,[r12+0]", "mov~rax,[r12+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~rbp,rbp", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 1, 6, 8, 0.0011076225361939648, ["jmp     loc_2B58"], ["jmp~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 7, 8, 0.024097331240188383, ["mov     rsi, [rax]", "cmp     [ent+80h], rsi", "jnz     loc_2B58"], ["mov~rsi,<TAG>", "cmp~[ent+0],rsi", "jnz~FOO"]], [0, 0, 192, 0, 0, 3, 0, 1, 8, 8, 0.01933542647828362, ["mov     rax, [rax+8]", "cmp     [ent+78h], rax", "jnz     loc_2B58"], ["mov~rax,[rax+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [2, 0, 192, 0, 1, 6, 0, 2, 7, 8, 0.005886970172684458, ["mov     qword ptr [ent+20h], 1", "mov     edx, 1; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "call    rpl_fts_set", "jmp     loc_2B58"], ["mov~[word ptr [ent+0],0", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [1, 0, 192, 0, 1, 8, 4, 2, 10, 11, 0.024725274725274724, ["mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "xor     r15d, r15d", "mov     ebp, 1", "call    _error", "xor     edx, edx", "jmp     loc_2BF7"], ["mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "xor~r15d,r15d", "mov~ebp,0", "call~FOO", "xor~edx,edx", "jmp~FOO"]], [0, 0, 192, 0, 1, 3, 0, 1, 15, 12, 0.016160823303680447, ["call    ___errno_location", "mov     rcx, rbp", "mov     rdx, r15; format"], ["call~FOO", "mov~rcx,rbp", "mov~rdx,r15"]], [0, 0, 192, 0, 1, 3, 0, 1, 14, 17, 0.015140415140415133, ["mov     rdi, rax; string", "call    xstrdup", "mov     [rsp+1C8h+var_1A8], rax"], ["mov~rdi,rax", "call~FOO", "mov~[rsp+0],rax"]], [1, 0, 192, 0, 0, 1, 0, 0, 10, 18, 0.22016396302110586, ["mov     [rsp+1C8h+var_1A0], 3"], ["mov~[rsp+0],0"]], [1, 0, 192, 0, 0, 4, 1, 1, 12, 11, 0.007570207570207569, ["movzx   edx, [rsp+1C8h+ok]", "xor     ebp, ebp", "mov     r15d, 1", "jmp     loc_2BF7"], ["movzx~edx,[rsp+0]", "xor~ebp,ebp", "mov~r15d,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 198h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     fts", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~fts", "pop~r15", "retn"]], [0, 0, 192, 0, 0, 2, 0, 1, 9, 12, 0.07079190650619221, ["mov     r15d, [fts+2Ch]", "jmp     loc_2ECF"], ["mov~r15d,[fts+0]", "jmp~FOO"]], [1, 0, 192, 0, 1, 6, 0, 2, 15, 14, 0.06865689865689859, ["mov     rdi, [rsp+1C8h+ptr]; string", "call    xstrdup", "mov     r13, rax", "mov     eax, [rsp+1C8h+var_1A0]", "cmp     eax, 3", "jz      loc_3396"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~r13,rax", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 5, 10, 0.01936159079016222, ["cmp     qword ptr [ent+58h], 0; jumptable 0000000000002B93 case 10", "jnz     short loc_2BAA"], ["cmp~[word ptr [ent+0],0", "jnz~FOO"]], [0, 0, 192, 0, 0, 2, 1, 1, 17, 14, 0.01682365253793825, ["test    rbp, rbp", "jnz     loc_38C0"], ["test~rbp,rbp", "jnz~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 5, 12, 0.05700331414617126, ["movzx   ebp, byte ptr [r12+11h]; jumptable 0000000000002B93 case 4", "test    bpl, bpl", "jnz     loc_2BEF"], ["movzx~ebp,[yte ptr [r12+0]", "test~bpl,bpl", "jnz~FOO"]], [1, 0, 192, 0, 0, 2, 0, 1, 6, 9, 0.007796964939822082, ["cmp     qword ptr [ent+20h], 0", "jz      loc_37C8"], ["cmp~[word ptr [ent+0],0", "jz~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 6, 12, 0.008791208791208791, ["movzx   ebp, byte ptr [r12+11h]", "test    bpl, bpl", "jnz     short loc_2BEF"], ["movzx~ebp,[yte ptr [r12+0]", "test~bpl,bpl", "jnz~FOO"]], [1, 0, 192, 0, 0, 3, 0, 1, 16, 13, 0.0247357404500262, ["mov     edx, 5", "lea     rsi, aFailedToChange_2; \"failed to change ownership of %s to %s\"...", "jmp     loc_33BC"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 192, 0, 0, 2, 0, 0, 19, 13, 0.0024725274725274724, ["lea     rsi, aFailedToChange; \"failed to change group of %s to %s\\n\"", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [2, 0, 192, 0, 1, 6, 0, 1, 6, 13, 0.004814233385661957, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotReadDire; \"cannot read directory %s\"", "mov     rbp, rax", "mov     edx, 5; category"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0"]], [0, 0, 192, 0, 1, 5, 1, 1, 7, 12, 0.010151753008895866, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [ent+40h]; errnum", "mov     rcx, rbp", "mov     rdx, rax; format"], ["xor~edi,edi", "call~FOO", "mov~esi,[ent+0]", "mov~rcx,rbp", "mov~rdx,rax"]], [2, 0, 192, 0, 1, 7, 0, 2, 7, 13, 0.00023547880690737833, ["mov     rsi, [rsp+1C8h+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     rbp, rax", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "jmp     loc_2DC4"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~rbp,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 192, 0, 0, 3, 1, 1, 5, 12, 0.10322693179836033, ["movzx   ebp, byte ptr [r12+11h]; jumptable 0000000000002B93 case 7", "test    bpl, bpl", "jz      loc_35E0"], ["movzx~ebp,[yte ptr [r12+0]", "test~bpl,bpl", "jz~FOO"]], [1, 0, 192, 0, 1, 8, 1, 2, 6, 12, 0.05188819117390544, ["mov     rdx, [rsp+1C8h+arg]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     esi, [ent+40h]", "mov     rcx, rax", "lea     rdx, format+4; \"%s\"", "jmp     loc_2DD4"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~esi,[ent+0]", "mov~rcx,rax", "lea~rdx,<TAG>", "jmp~FOO"]], [0, 0, 192, 0, 0, 3, 3, 0, 6, 11, 0.10750479679051099, ["xor     edx, edx", "xor     r13d, r13d", "xor     r15d, r15d"], ["xor~edx,edx", "xor~r13d,r13d", "xor~r15d,r15d"]]], "func_feature": [105, 145, 265, 9, 197, 316, 1, 912, 0.05398, 27, 3], "succs": [[16, 67], [0, 74], [0, 185], [133], [3, 6], [3], [129, 13], [5, 6], [90, 54], [8, 73], [122, 52], [10, 18], [10, 52], [17, 179], [57, 68], [14, 87], [126], [64, 21], [124, 182], [102, 30], [32, 33, 194, 19, 184, 186, 30], [25, 105], [34, 83], [81, 22], [142, 22], [35], [49], [65, 26], [48, 41], [48, 28], [43, 12], [20, 30], [172, 30], [163, 30], [62, 63], [40, 59], [35, 171], [150], [37], [37], [58], [40, 59], [11, 12], [42, 12], [162], [44, 190], [44], [41], [129, 47], [126], [49, 98], [61, 101], [51, 53], [97, 51], [73, 90], [9, 54], [136, 135], [56, 75], [72, 60], [58], [71], [118, 70], [4], [62, 55], [36], [94], [126], [152, 66], [1, 183], [41, 29], [76, 118], [115, 166], [71], [134], [128, 78], [74, 2], [114], [52], [139, 93], [78], [4, 92], [80, 143], [80, 156], [80], [80], [80, 103], [80, 134], [132, 183], [82, 99], [88, 96], [83, 85], [177], [91, 164], [110, 94], [126], [180, 86], [86, 95], [104, 141], [126], [106, 127], [89], [100, 117], [150], [134], [116, 109], [115], [82, 111], [], [107, 181], [114], [126], [23], [119], [112, 120], [118, 119], [125], [4], [120, 113], [120, 141], [145, 118], [123], [169, 4], [121, 77], [89], [123, 182], [129], [125], [23], [50, 147], [133], [27, 46], [130, 178], [189, 135], [144, 150], [140, 133], [137, 79], [185], [128], [128, 139], [126], [29, 69], [4], [146, 84], [24, 146], [149, 31], [160, 159], [82], [126], [167, 151], [154, 157], [149, 31], [153, 167], [126], [168, 167], [155, 158], [157], [134], [108, 165], [157], [170], [170], [38, 39], [126], [173, 150], [177], [108], [131, 15], [150], [167], [176], [150], [131, 15], [150], [174, 150], [161, 150], [150], [4], [176], [57], [36], [4], [], [96], [2, 138], [187, 188], [189, 45], [196, 191], [188, 175], [193, 196], [162], [162], [192], [7], [192], [195, 196], [7], [4]], "fname": "chown_files", "n_num": 197}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_3BA2"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_3BAD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_3B63"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_3B63"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_3B4C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_3BA2"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 0, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [3, 0, 2, 5, 0, 12, 1, 1, 1, 0, 0.5, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_3BE8"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [2, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0.0, ["lea     p, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 0CCCCCCCCCCCCCCCDh", "nop     word ptr [rax+rax+00h]"], ["lea~p,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0", "nop~[ord ptr [rax+0]"]]], "func_feature": [0, 1, 1, 0, 3, 3, 6, 18, 0.16667, 0, 5], "succs": [[], [0, 1], [1]], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_3C8D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_3C8D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_3C8D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_3C9D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_3C8D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 7], [0, 7], [1, 7], [5, 6], [7], [2, 7], [], []], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_3CE0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_103CC", "lea     rdx, unk_103D0", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_3CE0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_3CE0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_3D00"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_103D4", "lea     rdx, unk_103D8", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_3CE0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_3D50"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_103DB", "lea     rdx, asc_103DD; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[16, 5], [0, 16], [8, 16], [16, 2], [16, 6], [16, 4], [], [16, 1], [16, 12], [16, 13], [16, 9], [], [16, 11], [16, 14], [16, 3], [10, 7], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 244, 0, 0, 1, 1, 0, 0, 0, 3.840245775729647e-05, ["xor     r10d, r10d; jumptable 00000000000048AE cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~r10d,r10d"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.10265307646356041, ["lea     rcx, off_10668", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.004214349718382031, ["xor     ebp, ebp; jumptable 000000000000405E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~ebp,ebp"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.2749684246458439, ["lea     rcx, off_1046C", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 244, 1, 0, 5, 2, 1, 22, -1, 0.027355350742447517, ["add     r15, 4", "xor     ebp, ebp", "xor     eax, eax", "mov     r12, i", "jmp     loc_4072"], ["add~r15,0", "xor~ebp,ebp", "xor~eax,eax", "mov~r12,i", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 21, -1, 0.02761136712749616, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_4FFB"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     byte ptr [r8+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.014460445468510113, ["cmp     [rsp+0F8h+var_88], 0", "jz      loc_4070; jumptable 000000000000405E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 10, -1, 0.010921979006656438, ["test    i, i; jumptable 000000000000405E cases 35,126", "jz      loc_4205"], ["test~i,i", "jz~FOO"]], [0, 1, 244, 0, 0, 2, 0, 1, 10, -1, 0.0011165514592933923, ["mov     ebx, 20h ; ' '; jumptable 000000000000405E case 32", "jmp     loc_4205"], ["mov~ebx,<STR>", "jmp~FOO"]], [0, 1, 244, 0, 0, 4, 1, 1, 10, -1, 0.0011133512544802852, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000048AE case 32", "mov     ebx, 20h ; ' '", "xor     r10d, r10d", "jmp     loc_4205"], ["movzx~ebp,[rsp+0]", "mov~ebx,<STR>", "xor~r10d,r10d", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 12, -1, 0.0012800819252432156, ["mov     eax, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.007002048131080389, ["cmp     [rsp+0F8h+var_85], 0", "jz      loc_4A08"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0027265745007680493, ["cmp     [rsp+0F8h+quote_string_len], 0", "jz      loc_4A08"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+rdx+2], 30h ; '0'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.012570404505888377, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len", "jbe     short loc_4F09"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 2, 0, 14, -1, 0.23159242191500257, ["xor     eax, 1", "add     i, 1", "and     eax, r11d", "mov     edx, eax"], ["xor~eax,0", "add~i,0", "and~eax,r11d", "mov~edx,eax"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.24687339989759344, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 0", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_3F58"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 278, 1, 0, 5, 0, 1, 1, 2, 0.003558627752176139, ["lea     rcx, off_10440", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 1, 12, 1, 2, 10, -1, 0.00756795101553165, ["mov     rdx, [rsp+0F8h+quote_string_len]; n", "mov     rsi, [rsp+0F8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "jnz     loc_4880"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.020074351425157892, ["cmp     rbx, argsize_0", "ja      loc_4880"], ["cmp~rbx,argsize_0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.01282642089093702, ["cmp     r13, r15", "jbe     short loc_4562"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 17, -1, 0.02951868919610855, ["test    dl, dl", "jz      loc_4DB7"], ["test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 6, 0, 0, 12, -1, 0.0018657194060419868, ["movzx   eax, [rsp+0F8h+var_88]", "mov     rbp, argsize_0", "mov     [rsp+0F8h+quoting_style], 2", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "nop     word ptr [rax+rax+00000000h]"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~[rsp+0],0", "mov~argsize_0,r8", "mov~[rsp+0],al", "nop~[ord ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.020636200716845753, ["cmp     [rsp+0F8h+var_88], 0", "jnz     loc_4210"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 247, 0, 0, 2, 0, 1, 3, 0, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 0", "jmp     loc_3E6A"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, 1, 0.00010240655401945725, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 2", "mov     ecx, eax", "and     eax, 4", "and     ecx, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], ecx", "jz      loc_5175"], ["mov~eax,[rsp+0]", "mov~ecx,eax", "and~eax,0", "and~ecx,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],ecx", "jz~FOO"]], [3, 0, 280, 1, 1, 29, 2, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0C8h", "mov     rax, [rsp+0F8h+quote_these_too]", "mov     [rsp+0F8h+arg], arg_0", "mov     [rsp+0F8h+quoting_style], r8d", "mov     [rsp+0F8h+flags], r9d", "mov     [rsp+0F8h+var_D8], rax", "mov     rax, [rsp+0F8h+left_quote]", "mov     [rsp+0F8h+quote_string_0], rax", "mov     rax, [rsp+0F8h+right_quote]", "mov     [rsp+0F8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0F8h+var_98], rax", "ja      loc_5170; jumptable 0000000000003E41 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 14, -1, 0.18753200204813109, ["test    al, al", "jnz     loc_4478"], ["test~al,al", "jnz~FOO"]], [0, 0, 244, 1, 0, 6, 1, 1, 13, -1, 0.14626216077828982, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0F8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0F8h+arg]", "jmp     loc_4520"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.03828725038402458, ["movzx   ebx, byte ptr [rdi+r12]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.004444551117938213, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_4D50"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 1, 12, -1, 0.012224782386072709, ["add     i, 1", "jmp     loc_3F68"], ["add~i,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 4, 2, 1, 11, -1, 0.01624530636627411, ["mov     edx, [rsp+0F8h+var_84]", "xor     eax, eax", "test    edx, edx", "jnz     loc_4DAE"], ["mov~edx,[rsp+0]", "xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 7", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_3F58"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 6, 2, 1, 6, -1, 0.07246543778801844, ["test    r15, r15", "mov     rbp, argsize_0", "mov     argsize_0, r8", "setz    al", "and     al, [rsp+0F8h+var_88]", "jnz     loc_512C"], ["test~r15,r15", "mov~rbp,argsize_0", "mov~argsize_0,r8", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 5, -1, 0.6331925243215566, ["test    bpl, bpl", "jz      loc_4A20"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.05403225806451613, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_4E76"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 1, 1, 12, 1, 2, 12, -1, 0.07457757296466974, ["mov     rax, [rsp+0F8h+arg]", "lea     r15, [i+m]", "mov     rdx, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, [rsp+0F8h+ps]; ps", "mov     rdi, [rsp+0F8h+pwc]; pwc", "lea     r13, [rax+r15]", "sub     rdx, r15; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      short loc_4C70"], ["mov~rax,[rsp+0]", "lea~r15,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r15", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.035129714968424645, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_4188"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 15, -1, 0.03960360129714969, ["movzx   ebx, byte ptr [rax+rdx]", "cmp     bl, 3Eh ; '>'", "ja      loc_4188"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 12, -1, 0.0030081925243215565, ["movzx   r10d, [rsp+0F8h+var_E2]", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~r10d,[rsp+0]", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.04779825908858167, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_4DF3"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 0, 0, 14, 0, 0, 15, -1, 0.02197900665642601, ["mov     r14, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, r15", "mov     rsi, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "mov     r9, [rsp+0F8h+var_60]", "cmp     rcx, r14", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "jnb     short loc_4E67"], ["mov~r14,[rsp+0]", "mov~rcx,r15", "mov~rsi,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rcx,r14", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.003337173579109063, ["mov     eax, 0Ch; jumptable 00000000000048AE case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 1, 244, 0, 1, 15, 2, 1, 10, -1, 0.09486687147977471, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     byte ptr [rsp+0F8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   bpl", "setz    al", "and     al, [rsp+0F8h+backslash_escapes]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,<STR>", "setnz~bpl", "setz~al", "and~al,[rsp+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.17191500256016384, ["cmp     [rsp+0F8h+var_98], 1; jumptable 000000000000405E default case", "jnz     loc_4B58"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 7, -1, 0.0630184331797235, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "movzx   edx, [rsp+0F8h+var_E1]", "xor     eax, 1", "and     dl, al", "jz      loc_5064"], ["movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "xor~eax,0", "and~dl,al", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.44391363713944404, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_43F8; jumptable 000000000000405E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 7, -1, 0.4379228537293058, ["xor     r10d, r10d", "jmp     loc_4040"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 9, -1, 0.0, ["cmp     [rsp+0F8h+var_E1], 0", "mov     eax, 4", "cmovz   eax, [rsp+0F8h+quoting_style]", "mov     [rsp+0F8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.016163167776071, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      short loc_424D"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.0670762928827445, ["cmp     m, 1", "ja      loc_445C"], ["cmp~m,0", "ja~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 16, -1, 0.021210957501280082, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp", "jmp     loc_4CB3"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 11, 1, 1, 14, -1, 0.002867383512544803, ["mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "xor     ebp, ebp", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     r14, [rsp+0F8h+pending_shell_escape_end]", "movzx   eax, [rsp+0F8h+backslash_escapes]", "jmp     loc_4CB3"], ["mov~rdi,m", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~ebp,ebp", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r14,[rsp+0]", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 11, 2, 0, 13, -1, 0.036904761904761905, ["mov     eax, ebp", "mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "xor     eax, 1", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "and     al, [rsp+0F8h+backslash_escapes]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     bytes, [rsp+0F8h+pending_shell_escape_end]"], ["mov~eax,ebp", "mov~rdi,m", "movzx~r11d,[rsp+0]", "xor~eax,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~al,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~bytes,[rsp+0]"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.10432667690732207, ["test    al, al", "jz      loc_4072"], ["test~al,al", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 15, -1, 0.006477214541730671, ["jmp     loc_444A"], ["jmp~FOO"]], [1, 0, 244, 1, 0, 4, 0, 1, 17, -1, 0.006438812083973375, ["add     m, 1", "lea     rdx, [i+m]", "cmp     r14, rdx", "ja      short loc_4E50"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r14,rdx", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.012852022529441884, ["cmp     byte ptr [rsi], 0", "jnz     short loc_4E57"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 18, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_4E64"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 8, -1, 0.043561187916026624, ["cmp     [rsp+0F8h+encountered_single_quote], 0", "jz      loc_5066"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, edx"], ["add~r15,0", "mov~r11d,edx"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_44B5"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, -1, 0.01607782898105479, ["mov     edx, eax"], ["mov~edx,eax"]], [0, 0, 244, 0, 0, 2, 1, 0, 12, -1, 0.08591909882232462, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.027208141321044547, ["cmp     [rsp+0F8h+all_c_and_shell_quote_compat], 0", "jnz     loc_50E6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 250, 0, 0, 8, 3, 1, 2, -1, 8.960573476702509e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 4", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_4756"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365056, ["mov     eax, 0Ah; jumptable 000000000000405E case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031233998975934455, ["lea     rax, unk_103DB", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_3F58"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, -1, 0.00012800819252432156, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 5", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_500B"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [1, 0, 247, 0, 0, 1, 0, 0, 3, -1, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.006169994879672299, ["mov     rdi, m"], ["mov~rdi,m"]], [1, 0, 256, 0, 0, 2, 0, 1, 2, -1, 0.00030721966205837174, ["cmp     [rsp+0F8h+quoting_style], 0Ah; jumptable 0000000000003E41 cases 8-10", "jz      short loc_46BF"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 0, 10, -1, 0.00020737327188940095, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000048AE cases 37,43-58,65-90,93,95,97-122", "xor     r10d, r10d", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~ebp,[rsp+0]", "xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 246, 0, 0, 2, 1, 1, 4, -1, 0.0064516129032258064, ["test    buffersize_0, buffersize_0", "jnz     loc_515A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [1, 0, 244, 1, 2, 10, 2, 3, 16, -1, 0.017895545314900153, ["mov     edi, [rsp+0F8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0F8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_4BFF"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.016129032258064516, ["cmp     bytes, 1", "jz      loc_4C49"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 244, 1, 0, 3, 0, 1, 19, -1, 0.008986175115207374, ["add     rax, 1", "cmp     r8, rax", "jz      loc_4C49"], ["add~rax,0", "cmp~r8,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 15, -1, 0.022452636968766, ["cmp     [rsp+0F8h+var_88], 0", "jnz     short loc_4CC8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.028798003072196623, ["xor     eax, eax; jumptable 000000000000405E cases 37,43-58,65-90,93,95,97-122"], ["xor~eax,eax"]], [0, 0, 244, 0, 0, 1, 0, 1, 17, -1, 0.003059395801331285, ["jmp     short loc_4E67"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 6, 2, 1, 10, -1, 0.02375832053251408, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0F8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_5122"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 12, -1, 0.06488628605564088, ["mov     eax, r11d", "mov     rdx, r15", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_4944"], ["mov~eax,r11d", "mov~rdx,r15", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.06694359105649433, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_4D50"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.15902927120669055, ["cmp     [rsp+0F8h+var_87], 0", "jnz     loc_4386"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 2, 1, 11, -1, 0.02067332309267793, ["xor     ebp, ebp", "xor     eax, eax", "jmp     loc_4072"], ["xor~ebp,ebp", "xor~eax,eax", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.020451442225635774, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_4072"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 11, -1, 0.005721966205837174, ["mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_4072"], ["mov~[rsp+0],bpl", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 16, -1, 0.006899641577060932, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_4072"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 5, 1, 1, 19, -1, 0.012314388120839733, ["mov     eax, ebp", "lea     r15, [rdx+3]", "xor     ebp, ebp", "mov     ebx, 30h ; '0'", "jmp     loc_4072"], ["mov~eax,ebp", "lea~r15,[rdx+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 15, -1, 0.054070660522273425, ["test    r9b, r9b", "jnz     loc_4D50"], ["test~r9b,r9b", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 11, -1, 0.020084485407066054, ["mov     rdx, [rsp+0F8h+orig_buffersize]", "mov     buffersize_0, rdx"], ["mov~rdx,[rsp+0]", "mov~buffersize_0,rdx"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.02322068612391193, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_4981"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 244, 1, 0, 6, 0, 0, 16, -1, 0.016001024065540194, ["mov     rax, [rsp+0F8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0F8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_4EF0"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 19, -1, 0.003699436763952893, ["mov     edx, 1", "shl     rdx, cl", "mov     rcx, 20000002Bh", "test    rdx, rcx", "jz      short loc_4CE8"], ["mov~edx,0", "shl~rdx,cl", "mov~rcx,0", "test~rdx,rcx", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 18, -1, 0.013031233998975935, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_4CE8"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.009946236559139785, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+118h+flags]", "mov     r8d, [rsp+118h+quoting_style]; quoting_style", "mov     rdx, [rsp+118h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.00032428742106161465, ["mov     rbp, argsize_0", "mov     argsize_0, r8", "jmp     loc_424D"], ["mov~rbp,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 6, -1, 0.5573604710701485, ["cmp     [rsp+0F8h+var_E2], 0", "mov     rdi, [rsp+0F8h+arg]; s", "lea     r9, [rdi+i]", "jz      loc_4880"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 12, -1, 0.01330005120327701, ["cmp     buffersize_0, len", "jbe     short loc_50AC"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 10, 1, 0, 5, 1, 1, 13, -1, 0.0033922171018945214, ["mov     [r14+len], cl", "add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_5081"], ["mov~<TAG>,cl", "add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 1, 1, 13, -1, 0.0033410138248847927, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_5081"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 10, 1, 0, 5, 1, 1, 11, -1, 0.01651305683563748, ["movzx   ecx, byte ptr [rax]", "sub     rax, r15", "mov     rdx, r15", "test    cl, cl", "jz      short loc_5099"], ["movzx~ecx,<TAG>", "sub~rax,r15", "mov~rdx,r15", "test~cl,cl", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.15974782386072706, ["mov     rsi, [rsp+0F8h+var_D8]", "test    rsi, rsi", "jz      short loc_409B"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0123410564942823, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_407D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.04883512544802868, ["cmp     r13, r15", "jbe     short loc_44C6"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 16, -1, 0.049859190988223244, ["mov     edx, r11d", "xor     edx, 1", "and     dl, [rsp+0F8h+var_E1]", "jz      short loc_44BC"], ["mov~edx,r11d", "xor~edx,0", "and~dl,[rsp+0]", "jz~FOO"]], [1, 0, 255, 0, 1, 9, 1, 2, 3, -1, 0.0001152073732718894, ["lea     rsi, asc_103DF; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0F8h+quote_string_0], rax", "lea     rax, asc_103DF; \"`\"", "cmp     rcx, rax", "jz      loc_50D0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.019162826420890938, ["cmp     r13, r15", "jbe     short loc_4497"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_491F"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 6, 0, 0, 13, -1, 0.007692225635774024, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.0002560163850486431, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 6, 0, 0, 1, 0, 1, 14, -1, 7.680491551459293e-05, ["jmp     short loc_5096"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.0070916538658474144, ["mov     rsi, [rsp+0F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_5148"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, -1, 0.0038466461853558626, ["cmp     buffersize_0, r15", "jbe     loc_4283"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_4283"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.040450588837686e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, argsize_0; argsize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+110h+var_D8]; quote_these_too", "mov     r9d, [rsp+118h+flags]; flags", "mov     rdx, [rsp+118h+arg]; arg", "mov     rsi, [rsp+118h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_4283"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,argsize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 13, -1, 0.0056035586277521756, ["jmp     loc_409B"], ["jmp~FOO"]], [2, 0, 244, 1, 0, 8, 2, 1, 14, -1, 0.030325140809011778, ["mov     [rsp+0F8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     r11d, r11d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_409B"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],bpl", "xor~r11d,r11d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.009927035330261137, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_409B"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 15, -1, 0.03701890254309609, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_409B"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.018906810035842294, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_44A6"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000003E41 default case"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     argsize_0", "pop     i", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~i", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.3581669226830517, ["test    dl, dl", "jz      short loc_40D4"], ["test~dl,dl", "jz~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 12, -1, 0.023655913978494623, ["add     i, 1", "mov     edx, r11d", "xor     ebp, ebp", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~edx,r11d", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 1, 0, 3, 0, 0, 16, -1, 0.1295826932923707, ["add     i, 1", "cmp     r12, ilim", "jnb     store_c"], ["add~i,0", "cmp~r12,ilim", "jnb~FOO"]], [2, 0, 244, 0, 0, 2, 0, 0, 10, -1, 0.0008829365079365056, ["mov     eax, 9; jumptable 000000000000405E case 9", "mov     ebx, 74h ; 't'"], ["mov~eax,0", "mov~ebx,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.01282642089093702, ["cmp     buffersize_0, r15", "jbe     short loc_40BE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365056, ["mov     eax, 0Dh; jumptable 000000000000405E case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185335, ["mov     eax, 0Ah; jumptable 00000000000048AE case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185335, ["mov     eax, 0Dh; jumptable 00000000000048AE case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185335, ["mov     eax, 9; jumptable 00000000000048AE case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.08173323092677931, ["cmp     buffersize_0, r15", "jbe     short loc_4325"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 252, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rdi, rsi; msgid", "mov     esi, [rsp+0F8h+quoting_style]; s", "call    gettext_quote", "mov     [rsp+0F8h+quote_string], rax", "jmp     loc_46BF"], ["mov~rdi,rsi", "mov~esi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 253, 0, 1, 9, 1, 2, 4, -1, 0.0065156169994879665, ["lea     rsi, asc_103DD; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0F8h+quote_string], rax", "lea     rax, asc_103DD; \"'\"", "cmp     rsi, rax", "jz      loc_50BA"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 2, 1, 3, -1, 0.016244239631336404, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_4EBC"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.012570404505888377, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_40CD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 4, -1, 0.0005120327700972862, ["mov     rax, [rsp+0F8h+quote_string_0]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_46CA"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 249, 0, 0, 1, 0, 0, 5, -1, 0.0004608294930875576, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [12, 0, 244, 0, 0, 16, 1, 1, 5, -1, 0.00933179723502304, ["lea     rax, asc_103DD; \"'\"", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     r15d, 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 2", "jmp     loc_3F58"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [12, 0, 245, 0, 0, 18, 3, 1, 2, -1, 2.560163850486431e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 3", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_4792"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.07517665130568357, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      loc_4380"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 8; jumptable 000000000000405E case 8", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 7; jumptable 000000000000405E case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Ch; jumptable 000000000000405E case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Bh; jumptable 000000000000405E case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.003337173579109063, ["mov     eax, 0Bh; jumptable 00000000000048AE case 11", "xor     r10d, r10d", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.003337173579109063, ["mov     eax, 8; jumptable 00000000000048AE case 8", "xor     r10d, r10d", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.003337173579109063, ["mov     eax, 7; jumptable 00000000000048AE case 7", "xor     r10d, r10d", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [10, 0, 244, 0, 0, 15, 0, 1, 6, -1, 0.023169482846902203, ["lea     rsi, asc_103DD; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0F8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+s2], rsi", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+encountered_single_quote], al", "mov     [rsp+0F8h+orig_buffersize], rdx", "jmp     loc_3F58"], ["lea~rsi,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rsi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],al", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 244, 0, 0, 6, 3, 1, 5, -1, 8.960573476702509e-05, ["mov     [rsp+0F8h+orig_buffersize], buffersize_0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r11d, r11d", "xor     edx, edx", "jmp     loc_4A80"], ["mov~[rsp+0],buffersize_0", "mov~[rsp+0],0", "xor~eax,eax", "xor~r11d,r11d", "xor~edx,edx", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.04857910906298003, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_44DC"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 1, 0, 2, 1, 0, 16, -1, 0.012314388120839733, ["add     r15, 2", "xor     r11d, r11d"], ["add~r15,0", "xor~r11d,r11d"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, -1, 0.029653097798259087, ["mov     rax, [rsp+0F8h+s2]", "test    rax, rax", "jz      short loc_5099"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, -1, 0.019738863287250386, ["test    dl, dl", "jz      short loc_5099"], ["test~dl,dl", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 12, -1, 0.068868407578085, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.483115719406042, ["cmp     r15, r13", "jnb     short loc_40DD"], ["cmp~r15,r13", "jnb~FOO"]], [2, 0, 244, 2, 0, 3, 0, 1, 16, -1, 0.08147721454173067, ["add     r15, 1", "add     i, 1", "jmp     loc_40D4"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [4, 0, 244, 3, 0, 6, 1, 0, 20, -1, 0.048067076292882746, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     ilim, r12", "jbe     loc_40D4"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~ilim,r12", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.09182881037719748, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_4D40"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.019667712066905575, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jz      loc_41E5"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.03003637566137559, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 000000000000405E case 92", "jz      loc_4AD8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 254, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0F8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0F8h+quote_string_0], rax", "jmp     loc_4694"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.04832309267793139, ["lea     rdx, [r15+2]", "cmp     r13, len", "jbe     short loc_44F5"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 0, 0, 19, -1, 0.0, ["mov     edx, ebx", "shr     dl, 6", "add     edx, 30h ; '0'", "mov     [r8+r15+1], dl"], ["mov~edx,ebx", "shr~dl,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 4, 2, 1, 14, -1, 0.08275729646697388, ["mov     eax, r11d", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_431B"], ["mov~eax,r11d", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [0, 0, 245, 0, 0, 1, 0, 1, 8, -1, 0.012544802867383511, ["jmp     loc_46CA"], ["jmp~FOO"]], [1, 0, 249, 1, 0, 5, 1, 1, 7, -1, 0.00957501280081925, ["mov     rax, [rsp+0F8h+quote_string_0]", "add     r15, 1", "movzx   eax, byte ptr [rax+len]", "test    al, al", "jnz     short loc_4ED0"], ["mov~rax,[rsp+0]", "add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_42F6"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [3, 0, 244, 1, 0, 5, 1, 0, 20, -1, 0.0, ["mov     edx, ebx", "shr     dl, 3", "and     edx, 7", "add     edx, 30h ; '0'", "mov     [r8+r15+2], dl"], ["mov~edx,ebx", "shr~dl,0", "and~edx,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 247, 0, 0, 2, 1, 1, 3, -1, 0.0001152073732718894, ["test    buffersize_0, buffersize_0", "jz      loc_4DBF"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 249, 0, 0, 2, 0, 0, 6, -1, 0.003533026113671275, ["cmp     buffersize_0, r15", "jbe     short loc_4ED9"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+len], 30h ; '0'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.01282642089093702, ["cmp     buffersize_0, len", "jbe     short loc_4EFA"], ["cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 7, 1, 1, 15, -1, 0.48285970302099335, ["movzx   edi, [rsp+0F8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    bpl, bpl", "cmovz   edi, eax", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], dil", "jmp     loc_3F68"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~bpl,bpl", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0323618578255675, ["xor     r10d, r10d; jumptable 00000000000048AE case 0"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_4305"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 17, -1, 0.013031233998975935, ["mov     rcx, [rsp+0F8h+arg]", "lea     bytes, [rcx+r15+1]", "add     rcx, bytes", "lea     r8, [rcx+r15]", "jmp     short loc_4CF5"], ["mov~rcx,[rsp+0]", "lea~bytes,[rcx+0]", "add~rcx,bytes", "lea~r8,<TAG>", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.0510830559822497, ["cmp     [rsp+0F8h+backslash_escapes], 0; jumptable 000000000000405E case 0", "jnz     loc_48FB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 10, -1, 7.680491551459293e-05, ["xor     r10d, r10d; jumptable 00000000000048AE cases 35,126", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.03295496245093021, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_4AE3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.042043544120157116, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 000000000000405E case 39", "jz      loc_4B00"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 12, 1, 0, 11, -1, 0.07342549923195084, ["lea     rax, [rsp+0F8h+w]", "xor     esi, esi", "mov     [rsp+0F8h+c], bl", "mov     [rsp+0F8h+var_6B], r11b", "mov     c_0, rsi", "mov     [rsp+0F8h+var_60], r9", "mov     [rsp+0F8h+pwc], rax", "mov     [rsp+0F8h+var_69], r10b", "mov     [rsp+0F8h+var_68], r15", "mov     [rsp+0F8h+var_80], r8", "mov     [rsp+0F8h+buffersize], buffersize_0", "mov     [rsp+0F8h+pending_shell_escape_end], r14"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r11b", "mov~c_0,rsi", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r8", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r14"]], [0, 0, 244, 0, 0, 2, 1, 1, 12, -1, 0.03147721454173067, ["test    buffersize_0, buffersize_0", "jz      loc_4D67"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 12, -1, 0.0005120327700972862, ["jmp     short loc_4108; jumptable 000000000000405E cases 35,126"], ["jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 17, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_4314"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     byte ptr [r8+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_4B1E"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r8+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_4B1E"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 1, 1, 13, -1, 0.00902457757296467, ["xor     edx, edx", "cmp     [rsp+0F8h+orig_buffersize], 0", "jnz     loc_4D67"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 20, -1, 0.027867383512544804, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_4FEC"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r8+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 19, -1, 0.03854326676907322, ["cmp     r13, r15", "jbe     short loc_4517"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 4, 2, 1, 20, -1, 0.012314388120839733, ["add     r15, 2", "xor     r10d, r10d", "xor     r11d, r11d", "jmp     short loc_450E"], ["add~r15,0", "xor~r10d,r10d", "xor~r11d,r11d", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 18, -1, 0.013325652841781874, ["xor     r10d, r10d", "jmp     loc_450E"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.006810035842293907, ["mov     esi, eax"], ["mov~esi,eax"]], [0, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.012442396313364055, ["test    al, al", "jnz     short loc_4111"], ["test~al,al", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 18, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, eax"], ["add~r15,0", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.006067588325652842, ["mov     [rsp+0F8h+var_E1], al", "mov     [rsp+0F8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],al", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.00015360983102918587, ["xor     r10d, r10d; jumptable 00000000000048AE cases 123,125"], ["xor~r10d,r10d"]], [9, 0, 245, 0, 0, 10, 1, 0, 4, -1, 0.001587301587301587, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_492E"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002944188428059396, ["movzx   edx, [rsp+0F8h+encountered_single_quote]", "jmp     loc_5066"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [2, 0, 244, 0, 0, 4, 0, 1, 10, -1, 0.012698412698412698, ["cmp     argsize_0, 1; jumptable 000000000000405E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_413C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 3, 1, 15, -1, 0.130094726062468, ["mov     edx, esi", "xor     edx, 1", "and     edx, r11d", "test    r10b, r10b", "jz      short loc_4543"], ["mov~edx,esi", "xor~edx,0", "and~edx,r11d", "test~r10b,r10b", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_493D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.006438812083973375, ["cmp     r13, r15", "jbe     short loc_453F"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 11, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 6, 0, 0, 7, 0, 1, 20, -1, 0.0005376344086021505, ["movzx   eax, [rsp+0F8h+var_88]", "mov     bytes, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     printable, [rsp+0F8h+pending_shell_escape_end]", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r13,[rsp+0]", "mov~printable,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 244, 1, 0, 1, 0, 0, 17, -1, 0.006182795698924731, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.018394777265745007, ["lea     len, [r15+3]", "mov     r11d, eax"], ["lea~len,[r15+0]", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 2, 0, 1, 17, -1, 0.0320831199863458, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_513D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.011404783239460673, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_4AE3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.07144062553336737, ["mov     eax, [rsp+0F8h+quoting_style]; jumptable 000000000000405E case 63", "cmp     eax, 2", "jz      loc_4B40"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 14, -1, 0.005692097627581499, ["mov     c_and_shell_quote_compat_0, argsize_0", "mov     argsize_0, r8", "jmp     force_outer_quoting_style"], ["mov~c_and_shell_quote_compat_0,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.06386222051544631, ["cmp     buffersize_0, len", "jbe     short loc_494E"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0008960573476702509, ["xor     r10d, r10d; jumptable 00000000000048AE case 63"], ["xor~r10d,r10d"]], [10, 0, 244, 0, 1, 25, 4, 2, 4, -1, 0.03748079877112134, ["mov     r12, [rsp+0F8h+quote_string]", "test    ebx, ebx", "setnz   [rsp+0F8h+var_85]", "movzx   ebx, [rsp+0F8h+var_85]", "mov     rdi, r12; s", "call    _strlen", "mov     [rsp+0F8h+quote_string_len], rax", "mov     eax, [rsp+0F8h+flags]", "xor     r11d, r11d", "mov     [rsp+0F8h+c_and_shell_quote_compat], bl", "mov     [rsp+0F8h+s2], r12", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+var_E1], 0", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_3F58"], ["mov~r12,[rsp+0]", "test~ebx,ebx", "setnz~[rsp+0]", "movzx~ebx,[rsp+0]", "mov~rdi,r12", "call~FOO", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "xor~r11d,r11d", "mov~[rsp+0],bl", "mov~[rsp+0],r12", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0007978110599078342, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.004069700460829493, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+backslash_escapes], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [4, 0, 244, 0, 0, 7, 0, 0, 5, -1, 0.009370199692780336, ["lea     rax, unk_103DB", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0F8h+s2], rax", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [8, 0, 245, 0, 0, 10, 1, 1, 4, -1, 0.001587301587301587, ["mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "jmp     loc_3F2B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.018663594470046084, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_514D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.06360620413039766, ["cmp     [rsp+0F8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_4DA0"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.028123399897593444, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_4FDD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.05666922683051715, ["cmp     eax, 5", "jnz     short loc_4188"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 4, 1, 0, 3, -1, 0.13227086533538146, ["mov     r8, r14", "xor     r12d, r12d", "mov     r14, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r8,r14", "xor~r12d,r12d", "mov~r14,argsize_0", "nop~[word ptr [rax+0]"]], [14, 0, 244, 0, 0, 23, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 6", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+var_70], eax", "lea     rax, unk_103DB", "and     ecx, 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 5", "jmp     loc_3F58"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "mov~[rsp+0],eax", "lea~rax,<TAG>", "and~ecx,0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 6, 1, 1, 3, -1, 0.01248079877112135, ["lea     rax, asc_103DD; \"'\"", "mov     [rsp+0F8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+s2], rax", "jmp     loc_3F58"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031105990783410133, ["lea     rax, asc_103DD; \"'\"", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_3F58"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.050388291517323776, ["mov     eax, [rsp+0F8h+var_70]", "test    eax, eax", "jz      short loc_4188"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.012570404505888377, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_4571"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019175627240143368, ["cmp     buffersize_0, r15", "jbe     short loc_4D71"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 13, -1, 0.047405700631507085, ["lea     rdx, [i+2]", "cmp     rdx, argsize_0", "jnb     short loc_4188"], ["lea~rdx,[i+0]", "cmp~rdx,argsize_0", "jnb~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [1, 0, 244, 0, 0, 4, 0, 1, 4, -1, 0.6334485407066052, ["cmp     argsize_0, i", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_3F83"], ["cmp~argsize_0,i", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 244, 0, 0, 5, 0, 1, 10, -1, 0.07368151561699948, ["lea     rax, [rsp+0F8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0F8h+mbstate.__count], 0", "mov     [rsp+0F8h+ps], rax", "jnz     short loc_4BB4"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018919610855094728, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_4D80"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 12, -1, 0.0006539085168117425, ["nop     dword ptr [c_0+00h]"], ["nop~[word ptr [c_0+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.044410308926437964, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_4F98"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.10761979433350413, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_43F0; jumptable 00000000000048AE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0014400921658986176, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 2, 0, 12, -1, 0.006706135859361667, ["mov     ebx, eax", "xor     ebp, ebp", "xor     eax, eax"], ["mov~ebx,eax", "xor~ebp,ebp", "xor~eax,eax"]], [10, 0, 245, 0, 0, 11, 1, 0, 3, -1, 0.006259600614439324, ["mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 246, 0, 0, 6, 2, 0, 2, -1, 1.2800819252432156e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000003E41 case 1", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],esi"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0005120327700972862, ["xor     r10d, r10d; jumptable 00000000000048AE case 39"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 1, 1, 7, -1, 0.1314447857996248, ["mov     rax, [rsp+0F8h+quote_string_len]", "test    rax, rax", "jz      loc_4890"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 244, 0, 1, 11, 0, 1, 11, -1, 0.0, ["mov     rdi, [rsp+0F8h+arg]; s", "mov     [rsp+0F8h+buffersize], r8", "mov     byte ptr [rsp+0F8h+var_80], r11b", "mov     byte ptr [rsp+0F8h+pwc], r10b", "mov     [rsp+0F8h+pending_shell_escape_end], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+var_80]", "movzx   r10d, byte ptr [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r8, [rsp+0F8h+buffersize]", "mov     r9, [rsp+0F8h+pending_shell_escape_end]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 9, -1, 0.0024193548387096775, ["xor     r10d, r10d; jumptable 00000000000048AE default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.02045837600273081, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax]", "jnz     short loc_3FE5"], ["cmp~argsize_0,0", "lea~rbx,<TAG>", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 0, 9, -1, 0.0032258064516129032, ["cmp     rax, 1", "jbe     short loc_3FE5"], ["cmp~rax,0", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.001856118791602663, ["xor     r10d, r10d; jumptable 00000000000048AE case 92"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.028379416282642088, ["cmp     buffersize_0, r15", "jbe     short loc_4FCE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r9, [rsp+0F8h+ps]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r9,[rsp+0]"]]], "func_feature": [17, 152, 176, 15, 281, 448, 49, 1104, 0.03791, 7, 41], "succs": [[2], [0, 192, 137, 10, 139, 76, 45, 270, 138, 274, 277, 214, 234, 187, 156, 157, 158], [7], [2, 155, 133, 70, 231, 8, 9, 172, 194, 47, 136, 82, 152, 153, 154, 219, 191], [87], [4, 6], [4], [24, 82], [88, 7], [7], [7], [151], [11, 13], [11, 131], [92], [92, 14], [130], [16, 170], [247], [35, 69, 72, 75, 269, 18, 150, 248, 27], [32, 50], [50, 20], [252, 246], [22, 207], [52], [24, 151], [77], [26, 250], [128, 19], [220, 93], [29], [29], [42, 237], [258], [33, 262], [247], [48, 213], [36, 101], [43, 55], [56, 38], [89, 229], [40, 89], [49], [81, 44], [60, 54], [151], [57], [259, 46], [66, 62], [3, 47], [49], [99], [99, 51], [58, 30], [53], [53], [53], [67, 87], [57], [74, 61], [83, 59], [74, 59], [163, 68], [109], [65, 63], [63], [163], [30], [121, 84], [73, 268], [25], [247], [182, 71], [77], [54], [144, 111], [82], [160, 149], [56, 39], [189, 78], [98, 78], [78, 79], [87], [54], [217, 94], [113, 233], [85, 237], [106, 107], [87], [87], [87], [87], [87], [237, 110], [159], [96, 91], [185, 91], [80, 226], [80, 97], [118], [99], [50, 271], [104, 103], [116, 102], [117, 102], [102, 119], [17, 115], [106, 122], [161], [161, 108], [112, 109], [173, 143], [114, 127], [216, 212], [127], [17, 170], [119], [116], [129, 273], [120, 118], [118], [118], [17], [17], [17], [17], [64], [64, 126], [], [], [166, 134], [130], [130, 23], [25], [145, 135], [145], [25], [25], [25], [25], [167], [140, 167], [144], [144, 142], [146, 235], [162, 147], [235, 148], [162], [183], [247], [249], [267, 165], [151], [151], [151], [151], [151], [151], [151], [247], [159], [174, 175], [166], [164, 119], [105, 119], [170], [169, 186], [166], [208, 166], [186], [176, 232], [131, 236], [171, 12], [143], [168, 180], [174], [179, 141], [235], [177, 183], [188, 181], [168], [188], [239, 215], [257, 178], [15], [184, 15], [258], [86], [198, 190], [98], [198], [34, 86], [8], [236, 196], [193, 90], [39], [201, 253], [8], [202, 211], [123], [123], [123, 253], [211], [204, 5], [5], [209, 31], [205], [205], [205], [31], [88, 197], [141], [216], [52], [219], [238], [218, 221], [163], [221], [224, 210], [132, 223], [228, 222], [228], [225, 227], [210], [227], [52], [132], [233], [100, 278], [236, 124], [245, 230], [52], [241, 242], [231], [247], [52], [52], [247], [238], [200, 199], [125, 95], [241], [203, 244], [203], [89, 251], [252], [258], [247], [247], [247], [256, 89], [206, 254], [260, 255], [206], [260], [89, 263], [178], [265, 37], [272, 195], [240, 261], [240], [267], [41, 266], [1, 274], [37], [89], [107], [249], [268], [194], [264, 275], [195], [], [47], [276, 21], [280, 21], [172], [243, 279], [243], [21]], "fname": "quotearg_buffer_restyled", "n_num": 281}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_5297"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_5297"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[4, 2, 0, 5, 4, 61, 4, 4, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r15, argsize", "sub     rsp, 28h", "test    o, o", "cmovz   rbx, rax", "call    ___errno_location", "mov     r11d, [rax]", "mov     ebp, [rbx+4]", "lea     r10, [rbx+8]", "sub     rsp, 8", "mov     r8d, [rbx]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     [rsp+60h+var_3C], r11d", "or      ebp, 1", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "push    r10; quote_these_too", "mov     r9d, ebp; flags", "mov     r13, rax", "mov     [rsp+78h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "add     rsp, 20h", "mov     rdi, rsi; n", "mov     [rsp+58h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "mov     r10, [rsp+70h+quote_these_too]", "mov     r8d, [rbx]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "mov     r12, rax", "push    r10; quote_these_too", "mov     rsi, [rsp+78h+buffersize]; buffersize", "call    quotearg_buffer_restyled", "mov     r11d, [rsp+78h+var_3C]", "mov     rax, r12", "mov     [r13+0], r11d", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "call~FOO", "mov~r11d,<TAG>", "mov~ebp,[rbx+0]", "lea~r10,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~[rsp+0],r11d", "or~ebp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "push~r10", "mov~r9d,ebp", "mov~r13,rax", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "add~rsp,<STR>", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "mov~r10,[rsp+0]", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "mov~r12,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~r11d,[rsp+0]", "mov~rax,r12", "mov~[r13+0],r11d", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [4, 4, 4, 1, 1, 0, 0, 61, 0.0, 1, 5], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_54BF"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 0, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_5549"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_5521"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_5510"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_5564"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, default_quoting_options.quote_these_too", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_56EB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_55EF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_5708"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_5729"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_569F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_572E"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_5617"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[], [0, 6], [0], [12], [8, 3], [9, 13], [2, 7], [2], [12], [], [], [10, 4], [1], [1, 11]], "fname": "quotearg_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_58EE"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_57DD"], ["cmp~ebp,<TAG>", "jl~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_57B5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_58C8"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_5861"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_58E9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "lea     r15, default_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_58A9"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[3, 12], [0, 10], [13], [2, 11], [9], [4, 6], [4], [], [1, 7], [], [9, 5], [13], [], [10]], "fname": "quotearg_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 1, 0, 0, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_5A68"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_5981"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_5A4E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5954"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_5A02"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[8, 5], [0, 3], [], [2, 6], [2], [9], [4, 7], [4], [9], [3]], "fname": "quotearg", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 9, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_5B17"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_5B94"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 4, 2, 1, 22, 1, 2, 0, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_5BDC"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 0, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 0, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_5C00"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 0, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 0, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5AEA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 0, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[2, 4], [9, 7], [8, 1], [5], [3, 6], [2], [5], [9], [], [8]], "fname": "quotearg_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 8, 0, 1, 4, 0, 1, 0, 0, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_5E10"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_5D2A"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_5E38"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5CE8"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_5D9A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_5DE5"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 16, 0, 1, 16, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_5E49"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_5E4E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_5E53"], ["cmp~ebx,0", "jz~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_5E49"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 4, 134, 0.05127, 5, 14], "succs": [[4], [0, 5], [7], [2, 14], [7], [4], [8, 9], [12, 6], [12], [8], [17, 3], [], [11, 13], [], [16, 1], [17, 10], [], []], "fname": "quotearg_n_style", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 1, 17, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_6078"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.05514705882352941, ["cmp     r12d, 7FFFFFFFh", "jz      loc_6082"], ["cmp~r12d,0", "jz~FOO"]], [2, 1, 6, 4, 1, 21, 0, 2, 0, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, argsize; argsize", "add     rbx, r12", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6013"], ["shl~n,0", "sub~rsp,0", "mov~rcx,argsize", "add~rbx,r12", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_5F5F"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 0, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, ebp", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_5FCC"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.06985294117647059, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_6040"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 0, -1, 0.09558823529411764, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_607D"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 14, 0, 0, 3, 0, 1, 0, 2, 0.10294117647058823, ["cmp     r12d, cs:nslots", "mov     r8d, [rsp+88h+flags]", "jl      loc_6068"], ["cmp~r12d,<TAG>", "mov~r8d,<TAG>", "jl~FOO"]], [1, 0, 16, 0, 1, 18, 1, 2, 0, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  r12, edi", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+flags], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "test    r12d, r12d", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_84], eax", "js      loc_6078"], ["pxor~xmm0,xmm0", "movsxd~r12,edi", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],esi", "mov~<TAG>,esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "test~r12d,r12d", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_5F20"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.034926470588235295, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 2, 18, 22, 0, 137, 0.05127, 5, 14], "succs": [[12, 14], [], [8, 1], [9, 7], [3], [3], [10], [10, 6], [13, 15], [16, 17], [9], [2, 4], [11, 14], [5], [], [5], [], []], "fname": "quotearg_n_style_mem", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 12, 0, 1, 17, 1, 2, 0, 0, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r12, arg", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+s], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+s]", "test    eax, eax", "jg      loc_6280"], ["pxor~xmm0,xmm0", "mov~r12,arg", "mov~[rsp+0],edi", "mov~[rsp+0],edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,[rsp+0]", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_6296"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_61DD"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6250"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_612D"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [2, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6228"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,0", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_6174"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_6291"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [10, 8, 18, 4, 15, 18, 10, 126, 0.05458, 5, 11], "succs": [[10, 7], [0, 5], [12], [2, 4], [2], [], [13], [8, 6], [13], [3, 12], [9], [], [11, 14], [9], []], "fname": "quotearg_style", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_64A0"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_64A5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6341"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6460"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 19, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+flags], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+flags]", "mov     [rsp+88h+var_84], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      loc_6490"], ["pxor~xmm0,xmm0", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],edi", "mov~<TAG>,edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6434"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,argsize", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_6387"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_63ED"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [10, 8, 18, 5, 15, 18, 0, 129, 0.05458, 5, 11], "succs": [[], [0, 14], [8, 7], [9], [3], [3], [4, 5], [10, 6], [], [1, 12], [9], [13], [11, 13], [1], []], "fname": "quotearg_style_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_6613"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+options.flags]", "mov     r11, [rbx]", "sub     rsp, 8", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbp+8]", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdi, r12; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6658"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r12,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r12", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], eax", "mov     rax, r12", "jnz     short loc_66AE"], ["mov~eax,[rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],eax", "mov~rax,r12", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbp, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    rbp; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbp,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbp", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6575"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6688"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 43, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     ecx, edx", "push    rbp", "push    rbx", "and     ecx, 1Fh", "mov     r14, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbp, [rsp+88h+options]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+88h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     argsize, [rbp+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+18h], xmm0", "mov     edx, [rsi]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, edx", "mov     [rsi], eax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_65A2"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~ecx,edx", "push~rbp", "push~rbx", "and~ecx,0", "mov~r14,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbp,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~argsize,[rbp+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,edx", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 133, 0.075, 9, 12], "succs": [[8, 3], [0, 2], [10, 11], [2], [7], [9, 4], [1, 5], [1], [3], [7], [], []], "fname": "quotearg_char_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 4, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, r15; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r15", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r15, rax", "mov     [r12], rsi", "jz      short loc_6824"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r15,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     r12, rax", "jz      loc_6898"], ["lea~rax,<TAG>", "cmp~r12,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 41, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     ecx, esi", "push    r13", "push    r12", "and     ecx, 1Fh", "push    rbp", "push    rbx", "mov     rbp, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbx, [rsp+88h+quoting_style]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+right_quote], rax", "mov     eax, esi", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     rdx, [rbx+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "mov     esi, [rdx]", "mov     eax, esi", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, esi", "mov     [rdx], eax", "call    ___errno_location", "mov     r13, rax", "mov     r14d, [rax]", "mov     eax, cs:nslots", "mov     r12, cs:slotvec_0", "test    eax, eax", "jg      short loc_67AC"], ["push~r15", "push~r14", "mov~ecx,esi", "push~r13", "push~r12", "and~ecx,0", "push~rbp", "push~rbx", "mov~rbp,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,esi", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~rdx,[rbx+0]", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,esi", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~r14d,<TAG>", "mov~eax,<TAG>", "mov~r12,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], r14d", "mov     rax, r15", "jnz     short loc_68BE"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],r14d", "mov~rax,r15", "jnz~FOO"]], [3, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "mov     r11, [r12]", "sub     rsp, 8", "mov     r15, [r12+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbx+8]", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r15; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_686E"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r15,[r12+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbx+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r15", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbx, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r12+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    rbx; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r15, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbx,0", "call~FOO", "sub~rsp,0", "mov~[r12+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbx", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,rax", "call~FOO", "add~rsp,<STR>"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r12; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r12", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r12, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_677F"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r12,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, r12; p", "mov     esi, 10h; n", "call    xrealloc", "mov     r12, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r12", "mov~esi,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     arg", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~arg", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 130, 0.075, 9, 12], "succs": [[6], [0, 6], [8, 9], [2, 5], [10, 11], [1, 4], [4], [5], [7], [7], [], []], "fname": "quotearg_char", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 5, 1, 1, 0, 0, 0.16363636363636364, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_6ABE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r14; buffer", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6A6B"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,r14", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_6A21"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 1, 11, 1, 1, 32, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_69A7"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6A98"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_697A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 8, 15, 2, 12, 15, 1, 122, 0.075, 9, 11], "succs": [[11, 5], [0, 4], [0], [2], [2, 3], [], [8, 1], [9], [10, 7], [1], [9], []], "fname": "quotearg_colon", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 4, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_6C24"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6C98"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 11, 1, 1, 34, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_6BAD"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_6CBE"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6C6A"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6B80"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 8, 15, 3, 12, 15, 0, 125, 0.075, 9, 11], "succs": [[6], [0, 6], [9, 10], [2, 5], [11, 7], [1, 4], [4], [], [5], [8], [8], []], "fname": "quotearg_colon_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 16, 0, 1, 17, 1, 2, 0, 0, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+options.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+options.flags], 0", "movups  xmmword ptr [rsp+88h+options.left_quote], xmm0", "movdqa  xmm0, cs:xmmword_108B0", "movups  xmmword ptr [rsp+88h+options.quote_these_too], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+options.quote_these_too+10h], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_6EF1"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_6EF1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_6EF6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+options]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6E8D"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_6EE0"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_6EB8"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_6DD2"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+options.flags]", "mov     rdx, [rsp+88h+options.right_quote]", "mov     r8d, [rsp+88h+options.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+options.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6D90"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_6E42"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_6EFB"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 2, 135, 0.05127, 6, 14], "succs": [[5, 6], [0, 5], [14, 15], [2, 12], [2], [], [16, 9], [10], [11, 7], [3], [3], [10], [4, 13], [4], [], [], [8, 17], []], "fname": "quotearg_n_style_colon", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[3, 1, 3, 3, 2, 18, 0, 2, 0, 0, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r14, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r15+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r14; quote_these_too", "mov     r9d, dword ptr [rsp+0A8h+left_quote]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r14,0", "call~FOO", "sub~rsp,0", "mov~[r15+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r14", "mov~r9d,[word ptr [rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [r15], rsi", "jz      short loc_709A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote_0, left_quote_0", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_7143"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote_0,left_quote_0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_7143"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 16, 0, 1, 12, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  r15, edi", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote_0", "mov     [rsp+88h+left_quote], left_quote_0", "mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "test    r15d, r15d", "mov     rbx, rax", "mov     r13d, [rax]", "mov     r14, cs:slotvec_0", "js      loc_7143"], ["movsxd~r15,edi", "mov~r12,arg", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "test~r15d,r15d", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~r14,<TAG>", "js~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, r14; p", "call    xrealloc", "mov     r14, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r14", "call~FOO", "mov~r14,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     r14, rax", "jz      loc_7110"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~r14,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     r15d, 7FFFFFFFh", "jz      loc_714D"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r14, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6FEF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r14,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_7024"], ["mov~r8d,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 2, 0.13725490196078433, ["cmp     r15d, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "mov     rsi, [rsp+88h+left_quote]", "jl      loc_7138"], ["cmp~r15d,<TAG>", "mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "jl~FOO"]], [4, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+quoting_style+4]", "shl     n, 4", "sub     rsp, 8", "add     r15, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     r11, [r15]", "mov     rbp, [r15+8]", "or      r9d, 1; flags", "mov     dword ptr [rsp+90h+left_quote], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    rsi; left_quote", "mov     rdi, rbp; buffer", "mov     rsi, r11; buffersize", "lea     r14, [rsp+0A0h+quoting_style]", "lea     rax, [r14+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_70E4"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~r15,r14", "mov~rcx,0", "mov~r11,<TAG>", "mov~rbp,[r15+0]", "or~r9d,0", "mov~[word ptr [rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~rsi", "mov~rdi,rbp", "mov~rsi,r11", "lea~r14,[rsp+0]", "lea~rax,[r14+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 6, -1, 0.09150326797385622, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbx], r13d", "mov     rax, rbp", "jnz     short loc_7148"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,r13d", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r14; s", "shl     rdx, 4; n", "call    _memset", "mov     rdx, [rsp+88h+var_48]", "mov     rsi, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, ebp"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r14", "shl~rdx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 22, 4, 19, 24, 0, 139, 0.05538, 9, 14], "succs": [[16], [0, 2], [0], [], [3, 5], [3, 6], [3, 13], [17], [11, 7], [], [8, 9], [17], [14], [10, 12], [16, 1], [], [18, 15], [14], []], "fname": "quotearg_n_custom", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+o.style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+o.right_quote], rax", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "jz      loc_73A3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_73A3"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 16, 0, 1, 14, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  rbp, edi", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.left_quote], left_quote", "mov     [rsp+88h+o.right_quote], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "js      loc_73A3"], ["movsxd~rbp,edi", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_7370"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 6, -1, 0.09150326797385622, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_73A8"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_724B"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 2, 0.13725490196078433, ["cmp     ebp, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "jl      loc_7398"], ["cmp~ebp,<TAG>", "mov~rdx,<TAG>", "jl~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     ebp, 7FFFFFFFh", "jz      loc_73AD"], ["cmp~ebp,0", "jz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_72F6"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+o.flags]", "shl     n, 4", "sub     rsp, 8", "add     rbx, rbp", "mov     rcx, argsize; argsize", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    r12; left_quote", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+o]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_733C"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~rbx,rbp", "mov~rcx,argsize", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "or~r9d,0", "mov~[rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~r12", "mov~rsi,r11", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_7282"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r12, [rsp+88h+o.left_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d", "mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "mov~r8d,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [11, 8, 22, 2, 19, 24, 0, 141, 0.05538, 9, 14], "succs": [[], [0, 2], [0, 3], [0, 9], [17], [8, 4], [], [18, 6], [17], [16, 11], [], [10, 5], [7], [12, 14], [12], [13, 7], [15], [15], []], "fname": "quotearg_n_custom_mem", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 11, 0, 1, 14, 1, 2, 0, 0, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r15, left_quote", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "test    eax, eax", "jg      short loc_74C8"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r15,left_quote", "mov~r12,arg", "mov~[rsp+0],left_quote", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_75DB"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_75B0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_7538"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, r14; buffer", "push    r15; left_quote", "mov     rsi, r11; buffersize", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_7582"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,r14", "push~r15", "mov~rsi,r11", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_75D6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 4, -1, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_748C"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_75DB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]]], "func_feature": [10, 8, 18, 4, 15, 19, 0, 129, 0.05897, 9, 11], "succs": [[3, 5], [0, 13], [9], [8, 2], [10, 11], [4, 7], [], [12, 6], [9], [5], [11], [7], [], [], [1, 13]], "fname": "quotearg_custom", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[4, 0, 7, 4, 1, 13, 1, 1, 0, 0, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 4, -1, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_76B2"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_77FB"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_77FB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [1, 0, 11, 0, 1, 16, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_76EE"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_77F6"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_77D0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_775B"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, rbp; buffer", "push    r12; left_quote", "mov     rsi, r11; buffersize", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_77A1"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,rbp", "push~r12", "mov~rsi,r11", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 8, 18, 5, 15, 19, 0, 132, 0.05897, 9, 11], "succs": [[11], [0], [0], [5, 14], [3, 14], [8, 11], [], [12, 6], [1, 2], [13], [9, 13], [10, 7], [], [7], []], "fname": "quotearg_custom_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_79AE"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_789D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7875"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_7988"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_7921"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_79A9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "lea     r15, quote_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_7969"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[3, 13], [0, 10], [12], [2, 11], [9], [4, 6], [4], [], [1, 7], [], [9, 5], [12], [10], []], "fname": "quote_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_7AC4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_7B0C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7A1A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_7B30"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_7A47"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[4], [0, 4], [], [1, 2], [2], [7], [8, 5], [3], [7], [3, 6]], "fname": "quote_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, quote_quoting_options.quote_these_too", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_7CCB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7BCF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_7CE8"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_7D09"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_7C7F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_7D0E"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_7BF7"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[], [0, 6], [0], [12], [8, 3], [9, 13], [2, 7], [2], [12], [], [], [10, 4], [1], [1, 11]], "fname": "quote_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 1, 0, 0, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_7E88"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_7DA1"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_7E6E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7D74"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_7E22"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [8, 4, 13, 0, 10, 13, 3, 99, 0.08194, 9, 10], "succs": [[8, 5], [0, 3], [], [2, 6], [2], [9], [4, 7], [4], [9], [3]], "fname": "quote", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 5, 1, 1, 12, 2, 2, 0, 0, 0.0, ["push    rbx", "lea     rsi, aLibs+6; filename", "mov     rbx, root_d_i", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "test    eax, eax", "jnz     short loc_7F18"], ["push~rbx", "lea~rsi,<TAG>", "mov~rbx,root_d_i", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_7F1C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_7EF6"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 0, 2, 0.07500000000000001, ["movdqa  xmm0, xmmword ptr [rsp+0A8h+statbuf.st_dev]", "mov     rax, root_d_i", "shufpd  xmm0, xmm0, 1", "movups  xmmword ptr [root_d_i], xmm0"], ["movdqa~xmm0,<TAG>", "mov~rax,root_d_i", "shufpd~xmm0,xmm0,0", "movups~<TAG>,xmm0"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     root_d_i", "retn"], ["add~rsp,0", "pop~root_d_i", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 5, 1, 6, 6, 1, 25, 0.075, 2, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 76, 0, 0, 12, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+98h+val]", "movzx   esi, byte ptr [rsp+2Eh]", "mov     edx, 0FFFFFFFEh", "cmp     rax, rdx", "cmova   esi, r9d", "mov     r9d, esi", "mov     esi, dword ptr [rsp+98h+i]", "cmovbe  esi, eax", "mov     eax, 0", "cmova   rax, rcx", "mov     dword ptr [rsp+98h+i], esi", "mov     [rsp+98h+msgid], rax"], ["mov~rax,[rsp+0]", "movzx~esi,[yte ptr [rsp+0]", "mov~edx,0", "cmp~rax,rdx", "cmova~esi,r9d", "mov~r9d,esi", "mov~esi,[word ptr [rsp+0]", "cmovbe~esi,eax", "mov~eax,0", "cmova~rax,rcx", "mov~[word ptr [rsp+0],esi", "mov~[rsp+0],rax"]], [1, 0, 77, 0, 1, 12, 2, 2, 11, 13, 0.0033503791218479984, ["lea     rcx, [rsp+98h+val]; val", "lea     r8, aWrittenBySSAnd+1Bh; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "mov     rdi, r15; s", "mov     [rsp+2Fh], r9b", "call    xstrtoul", "lea     rcx, aInvalidUser; \"invalid user\"", "test    eax, eax", "movzx   r9d, byte ptr [rsp+2Fh]", "mov     [rsp+98h+msgid], rcx", "jnz     short loc_8408"], ["lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "mov~rdi,r15", "mov~[rsp+0],r9b", "call~FOO", "lea~rcx,<TAG>", "test~eax,eax", "movzx~r9d,[yte ptr [rsp+0]", "mov~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 12, 7, 0.1839181802151296, ["test    error_msg, error_msg", "jz      loc_8065"], ["test~error_msg,error_msg", "jz~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 11, 8, 0.18312466937048139, ["test    rbx, rbx", "jnz     loc_8068"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 70, 0, 1, 4, 1, 2, 10, 12, 0.00484923293951684, ["mov     rdi, rax; name", "call    _getgrnam", "test    rax, rax", "jz      loc_8188"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 71, 0, 0, 3, 0, 1, 9, 12, 0.020366778345970726, ["mov     rax, [rsp+98h+name]", "cmp     byte ptr [rax], 2Bh ; '+'", "jz      loc_8188"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 24, 0, 0, 14, 0, 0, 22, -1, 0.0034385469934755776, ["mov     rax, [rsp+98h+val]", "mov     edx, 0FFFFFFFEh", "mov     ecx, dword ptr [rsp+98h+i+4]", "lea     rsi, aInvalidUser; \"invalid user\"", "cmp     rax, rdx", "movzx   edx, byte ptr [rsp+98h+name]", "cmovbe  ecx, eax", "mov     eax, 0", "mov     dword ptr [rsp+98h+i+4], ecx", "mov     ecx, 0", "cmova   rcx, rsi", "cmova   edx, eax", "mov     [rsp+98h+msgid], rcx", "mov     byte ptr [rsp+98h+name], dl"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~ecx,[word ptr [rsp+0]", "lea~rsi,<TAG>", "cmp~rax,rdx", "movzx~edx,[yte ptr [rsp+0]", "cmovbe~ecx,eax", "mov~eax,0", "mov~[word ptr [rsp+0],ecx", "mov~ecx,0", "cmova~rcx,rsi", "cmova~edx,eax", "mov~[rsp+0],rcx", "mov~[yte ptr [rsp+0],dl"]], [1, 0, 26, 0, 1, 8, 2, 2, 21, -1, 0.014283195203667783, ["mov     rdi, [rsp+98h+p]; s", "lea     rcx, [rsp+98h+val]; val", "lea     r8, aWrittenBySSAnd+1Bh; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "call    xstrtoul", "test    eax, eax", "jnz     loc_8650"], ["mov~rdi,<TAG>", "lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 23, -1, 0.006083583142302945, ["xor     r15d, r15d", "jmp     loc_8486"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 0, 1, 22, -1, 0.0034385469934755776, ["lea     rax, aInvalidUser; \"invalid user\"", "mov     byte ptr [rsp+98h+name], 0", "mov     [rsp+98h+msgid], rax", "jmp     short loc_860A"], ["lea~rax,<TAG>", "mov~[yte ptr [rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 11, -1, 0.0026450361488273674, ["mov     eax, [rax+10h]", "mov     dword ptr [rsp+98h+i+4], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rsp+0],eax"]], [0, 0, 75, 0, 1, 4, 1, 2, 12, 12, 0.013225180744136837, ["mov     [rsp+2Eh], r9b", "xor     r14d, r14d", "call    _endpwent", "jmp     loc_7FE1"], ["mov~[rsp+0],r9b", "xor~r14d,r14d", "call~FOO", "jmp~FOO"]], [1, 0, 52, 0, 1, 6, 1, 2, 13, 6, 0.18211073884676424, ["mov     rdi, [rsp+98h+p]; s", "mov     esi, 2Eh ; '.'; c", "call    _strchr", "test    rax, rax", "mov     rbx, rax", "jz      loc_8068"], ["mov~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 12, 0, 2, 4, 0, 2, 12, -1, 0.003879386351613472, ["call    _endgrent", "mov     rdi, [rsp+98h+name]; string", "call    xstrdup", "mov     error_msg, rax"], ["call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "mov~error_msg,rax"]], [1, 0, 67, 0, 0, 5, 0, 0, 11, 12, 0.005819079527420208, ["mov     rax, [rsp+98h+val]", "mov     edx, 0FFFFFFFEh", "cmp     rax, rdx", "mov     dword ptr [rsp+98h+i+4], eax", "jbe     loc_8012"], ["mov~rax,[rsp+0]", "mov~edx,0", "cmp~rax,rdx", "mov~[word ptr [rsp+0],eax", "jbe~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 11, -1, 0.01772174219714336, ["mov     rbx, r15"], ["mov~rbx,r15"]], [0, 0, 12, 0, 0, 1, 0, 1, 10, -1, 0.01534120966319873, ["jmp     loc_8024"], ["jmp~FOO"]], [0, 0, 26, 0, 1, 6, 1, 2, 22, -1, 0.01534120966319873, ["mov     eax, [rax+14h]", "mov     edi, eax; gid", "mov     dword ptr [rsp+98h+i], eax", "call    _getgrgid", "test    rax, rax", "jz      short loc_867E"], ["mov~eax,[rax+0]", "mov~edi,eax", "mov~[word ptr [rsp+0],eax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 27, 0, 0, 6, 2, 1, 21, -1, 0.025216011285487568, ["mov     edx, [rax+10h]", "xor     r15d, r15d", "test    rbx, rbx", "mov     [rsp+98h+msgid], 0", "mov     dword ptr [rsp+98h+i+4], edx", "jz      loc_8618"], ["mov~edx,[rax+0]", "xor~r15d,r15d", "test~rbx,rbx", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],edx", "jz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 23, -1, 0.0036148827367307353, ["mov     rdi, [rax]; string"], ["mov~rdi,<TAG>"]], [0, 0, 10, 0, 0, 5, 1, 1, 6, -1, 0.027596543819432197, ["mov     rax, [rsp+98h+uid]", "mov     edx, dword ptr [rsp+98h+i]", "test    gid, gid", "mov     [rax], edx", "jz      short loc_803E"], ["mov~rax,[rsp+0]", "mov~edx,[word ptr [rsp+0]", "test~gid,gid", "mov~<TAG>,edx", "jz~FOO"]], [1, 0, 92, 0, 0, 4, 1, 1, 5, 18, 0.011167930406159992, ["mov     rax, [rsp+98h+p]", "xor     r14d, r14d", "cmp     byte ptr [rax], 0", "jz      loc_8027"], ["mov~rax,<TAG>", "xor~r14d,r14d", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 2, 1, 7, -1, 0.00405572209486863, ["xor     ebx, ebx", "xor     r14d, r14d", "jmp     loc_8027"], ["xor~ebx,ebx", "xor~r14d,r14d", "jmp~FOO"]], [0, 0, 51, 0, 0, 7, 1, 1, 14, 5, 0.18241932639746075, ["mov     dot, [rsp+98h+uid]", "test    username, username", "mov     eax, [rax]", "mov     dword ptr [rsp+98h+i+4], eax", "mov     eax, [gid+0]", "mov     dword ptr [rsp+98h+i], eax", "jz      short loc_8243"], ["mov~dot,[rsp+0]", "test~username,username", "mov~eax,<TAG>", "mov~[word ptr [rsp+0],eax", "mov~eax,[gid+0]", "mov~[word ptr [rsp+0],eax", "jz~FOO"]], [2, 0, 43, 0, 1, 7, 0, 2, 17, 2, 0.0907247399047787, ["mov     rdi, [rsp+98h+p]; p", "lea     rsi, [r15+1]; s", "call    xmemdup", "mov     byte ptr [rax+r15], 0", "cmp     byte ptr [dot+1], 0", "mov     [rsp+98h+p], rax", "jnz     loc_8548"], ["mov~rdi,<TAG>", "lea~rsi,[r15+0]", "call~FOO", "mov~<TAG>,0", "cmp~[yte ptr [dot+0],0", "mov~<TAG>,rax", "jnz~FOO"]], [0, 0, 47, 1, 0, 3, 0, 1, 16, 3, 0.18347734085699172, ["mov     r15, dot", "sub     r15, [rsp+98h+p]", "jnz     loc_8420"], ["mov~r15,dot", "sub~r15,<TAG>", "jnz~FOO"]], [1, 0, 50, 0, 0, 1, 0, 0, 15, 5, 0.0, ["mov     qword ptr [username], 0"], ["mov~<TAG>,0"]], [0, 0, 8, 0, 0, 2, 1, 1, 7, -1, 0.021424792805501674, ["test    username, username", "jz      short loc_8049"], ["test~username,username", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 7, -1, 0.0, ["mov     eax, dword ptr [rsp+98h+i+4]", "mov     [gid+0], eax"], ["mov~eax,[word ptr [rsp+0]", "mov~[gid+0],eax"]], [0, 0, 33, 0, 0, 2, 1, 1, 18, 1, 0.027023452653852937, ["test    rax, rax", "jz      loc_86B8"], ["test~rax,rax", "jz~FOO"]], [1, 0, 23, 0, 2, 5, 0, 3, 24, -1, 0.006083583142302945, ["call    xstrdup", "mov     r15, rax", "call    _endgrent", "mov     [rsp+98h+msgid], 0", "jmp     loc_8486"], ["call~FOO", "mov~r15,rax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 24, 0, 1, 5, 0, 2, 23, -1, 0.0036148827367307353, ["mov     edi, dword ptr [rsp+98h+i]; i", "lea     rsi, [rsp+98h+buf]; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_862E"], ["mov~edi,[word ptr [rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 15, 4, 0.18330100511373654, ["test    groupname, groupname", "jz      short loc_8250"], ["test~groupname,groupname", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 0, 8, -1, 0.0, ["mov     [username], rbx", "xor     ebx, ebx"], ["mov~<TAG>,rbx", "xor~ebx,ebx"]], [1, 0, 48, 0, 0, 1, 0, 0, 16, 4, 0.0, ["mov     qword ptr [groupname+0], 0"], ["mov~[word ptr [groupname+0],0"]], [0, 0, 6, 0, 0, 2, 1, 1, 8, -1, 0.01454769881855052, ["test    groupname, groupname", "jz      short loc_8055"], ["test~groupname,groupname", "jz~FOO"]], [1, 0, 31, 0, 0, 3, 1, 1, 19, -1, 0.019661435372950096, ["xor     ebx, ebx", "cmp     byte ptr [rax], 2Bh ; '+'", "jz      loc_8576"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 9, -1, 0.0, ["mov     [groupname+0], error_msg", "xor     r14d, r14d"], ["mov~[groupname+0],error_msg", "xor~r14d,r14d"]], [0, 0, 30, 0, 1, 4, 1, 2, 20, -1, 0.0054664080409098925, ["mov     rdi, rax; name", "call    _getpwnam", "test    rax, rax", "jz      loc_8576"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 2, 4, 0, 2, 9, -1, 0.006965261858578734, ["mov     rdi, rbx; ptr", "call    free", "mov     rdi, error_msg; ptr", "call    free"], ["mov~rdi,rbx", "call~FOO", "mov~rdi,error_msg", "call~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 17, -1, 0.08825603949920649, ["cmp     byte ptr [dot+1], 0", "jz      loc_8490"], ["cmp~[yte ptr [dot+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 10, -1, 0.005422324105096103, ["xor     r14d, r14d"], ["xor~r14d,r14d"]], [0, 0, 4, 0, 0, 1, 0, 1, 22, -1, 0.0033503791218479984, ["jmp     loc_8065"], ["jmp~FOO"]], [1, 0, 15, 0, 1, 8, 2, 2, 21, -1, 0.024378416505025566, ["lea     rcx, [rsp+98h+val]; val", "lea     r8, aWrittenBySSAnd+1Bh; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "mov     rdi, rbx; s", "call    xstrtoul", "test    eax, eax", "jz      short loc_8528"], ["lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 20, -1, 0.045053782401692825, ["cmp     byte ptr [rbx], 2Bh ; '+'", "jz      loc_84A0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 1, 4, 1, 2, 21, -1, 0.010007053429730206, ["mov     rdi, rbx; name", "call    _getgrnam", "test    rax, rax", "jz      loc_84A0"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 11, -1, 0.01851525304179157, ["mov     rcx, [rsp+98h+var_40]", "xor     rcx, fs:28h", "mov     rax, error_msg", "jnz     loc_86A2"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,error_msg", "jnz~FOO"]], [1, 0, 55, 0, 3, 11, 2, 4, 10, 9, 0.19088344207370833, ["mov     rdi, r15; ptr", "call    free", "mov     rdi, error_msg; ptr", "call    free", "mov     rsi, [rsp+98h+msgid]; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "test    gid, gid", "mov     error_msg, rax", "jz      loc_8068"], ["mov~rdi,r15", "call~FOO", "mov~rdi,error_msg", "call~FOO", "mov~rsi,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "test~gid,gid", "mov~error_msg,rax", "jz~FOO"]], [0, 0, 3, 0, 2, 6, 1, 3, 21, -1, 0.0035707988009169456, ["mov     rdi, [rsp+98h+p]; ptr", "xor     r14d, r14d", "call    free", "mov     rdi, r15; ptr", "call    free", "jmp     loc_8068"], ["mov~rdi,<TAG>", "xor~r14d,r14d", "call~FOO", "mov~rdi,r15", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 3, 10, 2, 4, 21, -1, 0.01864750484923294, ["mov     rdi, [rsp+98h+p]; ptr", "call    free", "mov     rdi, r15; ptr", "call    free", "mov     rsi, [rsp+98h+msgid]; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "test    rax, rax", "jnz     loc_8068"], ["mov~rdi,<TAG>", "call~FOO", "mov~rdi,r15", "call~FOO", "mov~rsi,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 34, 0, 1, 4, 1, 2, 20, -1, 0.02398166108270146, ["mov     rdi, [rsp+98h+p]; name", "call    _getpwnam", "test    rax, rax", "jnz     loc_846A"], ["mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 21, -1, 0.0013225180744136837, ["mov     byte ptr [rsp+98h+name], 0"], ["mov~[yte ptr [rsp+0],0"]], [3, 0, 22, 1, 0, 5, 1, 0, 18, -1, 0.05871980250396755, ["add     dot, 1", "mov     [rsp+98h+p], 0", "mov     [rsp+98h+msgid], 0", "setnz   byte ptr [rsp+98h+name]", "xor     r15d, r15d"], ["add~dot,0", "mov~<TAG>,0", "mov~[rsp+0],0", "setnz~[yte ptr [rsp+0]", "xor~r15d,r15d"]], [1, 0, 35, 0, 0, 2, 0, 1, 19, -1, 0.049638511726326925, ["cmp     byte ptr [rax], 2Bh ; '+'", "jz      short loc_8571"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 19, -1, 0.09376653147593017, ["cmp     byte ptr [rsp+98h+name], 0", "jz      loc_8590"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 22, 0, 1, 2, 0, 2, 21, -1, 0.03226944101569388, ["call    _endpwent", "jmp     loc_8284"], ["call~FOO", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 19, -1, 0.003306295186034209, ["xor     r15d, r15d", "mov     [rsp+98h+msgid], 0", "jmp     loc_8284"], ["xor~r15d,r15d", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 0, 5, 1, 1, 20, -1, 0.01287250925762652, ["lea     rax, aInvalidSpec; \"invalid spec\"", "mov     byte ptr [rsp+98h+name], 0", "xor     r15d, r15d", "mov     [rsp+98h+msgid], rax", "jmp     loc_8486"], ["lea~rax,<TAG>", "mov~[yte ptr [rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 68h", "pop     rbx", "pop     gid", "pop     username", "pop     groupname", "pop     error_msg", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~gid", "pop~username", "pop~groupname", "pop~error_msg", "pop~r15", "retn"]], [1, 0, 8, 0, 0, 3, 1, 1, 18, -1, 0.02283547875154294, ["mov     [rsp+98h+p], 0", "xor     r15d, r15d", "jmp     loc_82C0"], ["mov~<TAG>,0", "xor~r15d,r15d", "jmp~FOO"]], [1, 0, 75, 0, 0, 3, 1, 1, 8, 12, 0.012519837771116205, ["xor     r14d, r14d", "mov     [rsp+98h+msgid], 0", "jmp     loc_7FE1"], ["xor~r14d,r14d", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 90, 1, 0, 6, 1, 1, 7, 13, 0.011873273379180626, ["mov     rax, rbx", "add     rax, 1", "setnz   byte ptr [rsp+2Eh]", "test    r15, r15", "mov     [rsp+98h+name], rax", "jz      loc_8691"], ["mov~rax,rbx", "add~rax,0", "setnz~[yte ptr [rsp+0]", "test~r15,r15", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 20, -1, 0.020014106859460413, ["test    rbx, rbx", "jnz     short loc_85A8"], ["test~rbx,rbx", "jnz~FOO"]], [2, 0, 94, 0, 1, 7, 0, 2, 6, 14, 0.010521366014224418, ["mov     rdi, [rsp+98h+p]; p", "lea     rsi, [error_msg+1]; s", "call    xmemdup", "mov     byte ptr [rax+error_msg], 0", "cmp     byte ptr [rbx+1], 0", "mov     uid_0, rax", "jnz     loc_8340"], ["mov~rdi,<TAG>", "lea~rsi,[error_msg+0]", "call~FOO", "mov~<TAG>,0", "cmp~[yte ptr [rbx+0],0", "mov~uid_0,rax", "jnz~FOO"]], [0, 0, 97, 1, 0, 3, 0, 1, 5, 14, 0.05795568094986187, ["mov     error_msg, rbx", "sub     error_msg, [rsp+98h+p]", "jnz     loc_8090"], ["mov~error_msg,rbx", "sub~error_msg,<TAG>", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 22, -1, 0.00401163815905484, ["mov     eax, [rax+10h]", "mov     dword ptr [rsp+98h+i], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rsp+0],eax"]], [0, 0, 90, 0, 0, 2, 1, 1, 7, 16, 0.02383471462998883, ["test    r15, r15", "jz      loc_8310"], ["test~r15,r15", "jz~FOO"]], [0, 0, 91, 0, 1, 4, 0, 2, 6, 17, 0.010815258919649675, ["mov     rdi, rax; string", "call    xstrdup", "mov     uid_0, rax", "jmp     loc_80AF"], ["mov~rdi,rax", "call~FOO", "mov~uid_0,rax", "jmp~FOO"]], [1, 0, 37, 1, 0, 4, 1, 1, 18, -1, 0.05867571856815376, ["add     dot, 1", "setnz   byte ptr [rsp+98h+name]", "test    rax, rax", "jz      loc_86A7"], ["add~dot,0", "setnz~[yte ptr [rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 19, 0, 0.001278434138599894, ["xor     r15d, r15d", "jmp     loc_82C0"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 0, 8, 0, 2, 4, 0, 2, 23, -1, 0.0024687004055722094, ["call    _endgrent", "mov     rdi, rbx; string", "call    xstrdup", "mov     r15, rax"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "mov~r15,rax"]], [1, 0, 14, 0, 0, 5, 0, 0, 22, -1, 0.010712396402750837, ["mov     rax, [rsp+98h+val]", "mov     edx, 0FFFFFFFEh", "cmp     rax, rdx", "mov     dword ptr [rsp+98h+i], eax", "jbe     loc_82B0"], ["mov~rax,[rsp+0]", "mov~edx,0", "cmp~rax,rdx", "mov~[word ptr [rsp+0],eax", "jbe~FOO"]], [3, 0, 88, 0, 0, 3, 0, 0, 8, 15, 0.027625933109974733, ["mov     byte ptr [rsp+2Eh], 0", "mov     eax, 1", "mov     [rsp+98h+name], 0"], ["mov~[yte ptr [rsp+0],0", "mov~eax,0", "mov~[rsp+0],0"]], [0, 0, 7, 0, 0, 7, 1, 1, 19, -1, 0.0317845177217422, ["mov     rax, [rsp+98h+uid]", "mov     edx, dword ptr [rsp+98h+i+4]", "test    username, username", "mov     [rax], edx", "mov     eax, dword ptr [rsp+98h+i]", "mov     [gid+0], eax", "jz      short loc_82E7"], ["mov~rax,[rsp+0]", "mov~edx,[word ptr [rsp+0]", "test~username,username", "mov~<TAG>,edx", "mov~eax,[word ptr [rsp+0]", "mov~[gid+0],eax", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 21, -1, 0.00969846587903368, ["jmp     loc_82C0"], ["jmp~FOO"]], [0, 0, 6, 0, 2, 6, 0, 2, 22, -1, 0.0026450361488273674, ["call    _endgrent", "mov     rdi, rbx; string", "call    xstrdup", "mov     r15, rax", "lea     rax, aInvalidGroup; \"invalid group\"", "mov     [rsp+98h+msgid], rax"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "mov~r15,rax", "lea~rax,<TAG>", "mov~[rsp+0],rax"]], [0, 0, 7, 0, 0, 1, 0, 1, 23, -1, 0.0006171751013930523, ["jmp     loc_84BF"], ["jmp~FOO"]], [0, 0, 77, 0, 1, 5, 0, 2, 13, 14, 0.004232057838123787, ["mov     edi, dword ptr [rsp+98h+i+4]; i", "lea     rsi, [rsp+98h+buf]; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     loc_8382"], ["mov~edi,[word ptr [rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 79, 0, 1, 6, 1, 2, 12, 15, 0.005025568682771998, ["mov     eax, [rax+14h]", "mov     edi, eax; gid", "mov     dword ptr [rsp+98h+i+4], eax", "call    _getgrgid", "test    rax, rax", "jz      loc_8668"], ["mov~eax,[rax+0]", "mov~edi,eax", "mov~[word ptr [rsp+0],eax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 87, 0, 0, 5, 2, 1, 9, 14, 0.04708164344912714, ["test    rbx, rbx", "setnz   r9b", "and     r9d, eax", "cmp     byte ptr [r15], 2Bh ; '+'", "jz      short loc_8120"], ["test~rbx,rbx", "setnz~r9b", "and~r9d,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 1, 1, 8, 15, 0.005348850878739788, ["test    rax, rax", "setz    al", "jmp     loc_80CB"], ["test~rax,rax", "setz~al", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 20, -1, 0.0, ["mov     rax, [rsp+98h+p]", "mov     [rsp+98h+p], 0", "mov     [username], rax"], ["mov~rax,<TAG>", "mov~<TAG>,0", "mov~<TAG>,rax"]], [0, 0, 5, 0, 0, 2, 1, 1, 20, -1, 0.01803032974783989, ["test    groupname, groupname", "jz      short loc_82F3"], ["test~groupname,groupname", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 21, -1, 0.0, ["mov     [groupname+0], r15", "xor     r15d, r15d"], ["mov~[groupname+0],r15", "xor~r15d,r15d"]], [0, 0, 86, 0, 1, 6, 1, 2, 10, 14, 0.008993122906013049, ["mov     rdi, r15; name", "mov     byte ptr [rsp+98h+msgid], r9b", "call    _getpwnam", "test    rax, rax", "movzx   r9d, byte ptr [rsp+98h+msgid]", "jz      short loc_8120"], ["mov~rdi,r15", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~rax,rax", "movzx~r9d,[yte ptr [rsp+0]", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 20, -1, 0.037691765120789984, ["cmp     [rsp+98h+msgid], 0", "jnz     loc_84DB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 80, 0, 0, 6, 2, 1, 11, 13, 0.01124140363251631, ["mov     ecx, [rax+10h]", "xor     r14d, r14d", "test    r9b, r9b", "mov     [rsp+98h+msgid], 0", "mov     dword ptr [rsp+98h+i], ecx", "jnz     loc_8368"], ["mov~ecx,[rax+0]", "xor~r14d,r14d", "test~r9b,r9b", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],ecx", "jnz~FOO"]], [0, 0, 75, 0, 1, 2, 0, 2, 12, 12, 0.0363692470463763, ["call    _endpwent", "jmp     loc_7FE1"], ["call~FOO", "jmp~FOO"]], [1, 0, 76, 0, 2, 5, 0, 3, 14, 13, 0.020102274731087992, ["call    xstrdup", "mov     error_msg, rax", "call    _endgrent", "mov     [rsp+98h+msgid], 0", "jmp     loc_810F"], ["call~FOO", "mov~error_msg,rax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 77, 0, 0, 2, 0, 1, 6, 13, 0.054399576794216184, ["cmp     byte ptr [rbx+1], 0", "jz      loc_8310"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 9, 10, 0.17739375771468877, ["cmp     [rsp+98h+msgid], 0", "jnz     loc_81CB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 8, 11, 0.19705519308763886, ["cmp     byte ptr [rsp+2Eh], 0", "jz      loc_8510"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 79, 0, 0, 2, 1, 1, 10, 13, 0.0464203844119203, ["test    r9b, r9b", "jz      loc_83A0"], ["test~r9b,r9b", "jz~FOO"]], [1, 0, 68, 0, 1, 8, 2, 2, 10, 11, 0.02098395344736378, ["mov     rdi, [rsp+98h+name]; s", "lea     rcx, [rsp+98h+val]; val", "lea     r8, aWrittenBySSAnd+1Bh; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "call    xstrtoul", "test    eax, eax", "jz      loc_8320"], ["mov~rdi,[rsp+0]", "lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 12, 11, 0.005025568682771998, ["jmp     loc_81AD"], ["jmp~FOO"]], [1, 0, 75, 0, 1, 6, 1, 2, 11, 12, 0.04668488802680303, ["lea     rax, aInvalidSpec; \"invalid spec\"", "mov     byte ptr [rsp+2Eh], 0", "xor     r14d, r14d", "mov     [rsp+98h+msgid], rax", "call    _endpwent", "jmp     loc_7FE1"], ["lea~rax,<TAG>", "mov~[yte ptr [rsp+0],0", "xor~r14d,r14d", "mov~[rsp+0],rax", "call~FOO", "jmp~FOO"]], [0, 0, 100, 0, 0, 2, 1, 1, 4, 15, 0.06171751013930524, ["test    rbx, rbx", "jz      loc_8150"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 107, 1, 0, 18, 2, 1, 0, 19, 0.0, ["push    r15", "push    error_msg", "mov     r15, uid_0", "push    r13", "push    r12", "mov     r13, groupname", "push    rbp", "push    rbx", "mov     rbp, gid", "mov     r12, username", "sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+98h+var_40], rax", "xor     eax, eax", "test    gid, gid", "mov     [rsp+98h+p], spec", "mov     [rsp+98h+uid], uid_0", "jz      loc_8170"], ["push~r15", "push~error_msg", "mov~r15,uid_0", "push~r13", "push~r12", "mov~r13,groupname", "push~rbp", "push~rbx", "mov~rbp,gid", "mov~r12,username", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~gid,gid", "mov~<TAG>,spec", "mov~[rsp+0],uid_0", "jz~FOO"]], [0, 0, 77, 0, 0, 1, 0, 0, 13, 14, 0.004232057838123787, ["mov     rdi, [rax]; string"], ["mov~rdi,<TAG>"]], [1, 0, 105, 0, 0, 5, 1, 1, 1, 18, 0.004628813260447892, ["mov     eax, [uid_0]", "xor     ebx, ebx", "mov     dword ptr [rsp+98h+i+4], 0FFFFFFFFh", "mov     dword ptr [rsp+98h+i], eax", "jmp     loc_7F87"], ["mov~eax,<TAG>", "xor~ebx,ebx", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [0, 1, 105, 0, 1, 7, 0, 1, 1, 18, 0.004628813260447892, ["mov     esi, 3Ah ; ':'; c", "call    _strchr", "mov     rbx, rax", "mov     eax, [uid_0]", "mov     dword ptr [rsp+98h+i], eax", "mov     eax, [gid+0]", "mov     dword ptr [rsp+98h+i+4], eax"], ["mov~esi,<STR>", "call~FOO", "mov~rbx,rax", "mov~eax,<TAG>", "mov~[word ptr [rsp+0],eax", "mov~eax,[gid+0]", "mov~[word ptr [rsp+0],eax"]], [0, 0, 104, 0, 0, 2, 1, 1, 2, 17, 0.02750837594780462, ["test    username, username", "jz      short loc_7F94"], ["test~username,username", "jz~FOO"]], [1, 0, 103, 0, 0, 1, 0, 0, 3, 17, 0.0, ["mov     qword ptr [username], 0"], ["mov~<TAG>,0"]], [0, 0, 102, 0, 0, 2, 1, 1, 3, 16, 0.04496561453006524, ["test    groupname, groupname", "jz      short loc_7FA1"], ["test~groupname,groupname", "jz~FOO"]], [1, 0, 101, 0, 0, 1, 0, 0, 4, 16, 0.0, ["mov     qword ptr [groupname+0], 0"], ["mov~[word ptr [groupname+0],0"]], [0, 0, 56, 0, 2, 6, 0, 2, 11, 10, 0.024687004055722096, ["call    _endgrent", "mov     rdi, [rsp+98h+name]; string", "call    xstrdup", "mov     error_msg, rax", "lea     rax, aInvalidGroup; \"invalid group\"", "mov     [rsp+98h+msgid], rax"], ["call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "mov~error_msg,rax", "lea~rax,<TAG>", "mov~[rsp+0],rax"]], [2, 0, 75, 1, 0, 7, 2, 0, 7, 12, 0.05801445953094692, ["mov     rax, rbx", "mov     [rsp+98h+msgid], 0", "add     rax, 1", "setnz   byte ptr [rsp+2Eh]", "mov     [rsp+98h+name], rax", "xor     r15d, r15d", "xor     r14d, r14d"], ["mov~rax,rbx", "mov~[rsp+0],0", "add~rax,0", "setnz~[yte ptr [rsp+0]", "mov~[rsp+0],rax", "xor~r15d,r15d", "xor~r14d,r14d"]]], "func_feature": [45, 69, 122, 1, 108, 160, 2, 434, 0.03214, 5, 8], "succs": [[11], [0, 11], [41, 12], [2, 46], [10, 94], [4, 94], [8], [9, 6], [55], [8], [13], [92], [46, 23], [15], [13, 95], [20], [15], [19, 31], [17, 55], [30], [27, 28], [68, 20], [20], [32, 26], [29, 69], [24, 40], [32], [33, 35], [27], [36, 70], [55], [30], [25, 34], [35], [25], [37, 39], [57, 38], [39], [57, 51], [41], [59, 52], [46], [41], [72, 76], [43, 45], [66, 43], [58, 62], [3, 46], [46], [42, 46], [18, 63], [18], [54], [50, 63], [44, 86], [54], [54], [55], [], [74], [92], [81, 60], [], [57, 7], [67, 61], [64, 90], [71], [73, 22], [67], [56, 53], [74], [74], [77, 71], [80], [82, 83], [74], [49], [76], [89], [99, 78], [85, 93], [80], [83], [48, 84], [48], [93, 87], [49, 75], [88, 79], [92], [88], [107, 22], [16, 47], [91, 5], [96, 1], [106, 14], [106], [92], [65, 21], [100, 101], [89], [102], [102], [104, 103], [104], [105, 97], [97], [47], [92]], "fname": "parse_user_spec", "n_num": 108}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 2, 1, 1, 16, 1, 1, 0, 0, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000008764 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_10BE4", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_87B4"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000008764 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_8976"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000008764 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 1, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_8A90; jumptable 0000000000008764 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000008764 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000008764 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_8862"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000008764 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000008764 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000008764 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000008764 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_86FC"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_87F8"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000008764 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000008764 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_8A13"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 0, 275, 0.01905, 16, 13], "succs": [[2], [0, 5, 6, 8, 10, 13, 14, 15, 18, 19], [18], [2], [], [4], [4], [1, 9], [20], [3], [3], [], [11, 7], [11], [11], [11], [7], [16, 12], [], [20], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[5, 0, 17, 0, 4, 20, 3, 5, 0, 0, 0.19169960474308298, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbx, 9; switch 10 cases", "ja      loc_8ED0; jumptable 0000000000008B9C default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbx,0", "ja~FOO"]], [1, 0, 18, 0, 1, 8, 1, 2, 2, 2, 0.06719367588932806, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     stream, r12", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8B34"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~stream,r12", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 8, 1, 1, 2, 2, 0.07509881422924901, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     stream, r12", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~stream,r12", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [2, 0, 22, 1, 0, 3, 0, 1, 2, 4, 0.04150197628458498, ["add     n_authors, 1", "cmp     qword ptr [rbp+n_authors*8+0], 0", "jnz     short loc_8B00"], ["add~n_authors,0", "cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 5, 0.001976284584980237, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 1, 0, 1, 15, 1, 2, 5, -1, 0.007905138339920948, ["mov     rbx, [authors+20h]; jumptable 0000000000008B9C case 5", "mov     r15, [authors+18h]", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     edx, 5; category", "mov     authors, [authors+0]", "xor     edi, edi; domainname", "call    _dcgettext", "push    rbx", "mov     r9, r14", "push    r15", "mov     r8, r13", "mov     rcx, rbp", "jmp     short loc_8DB2"], ["mov~rbx,[authors+0]", "mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~edx,0", "mov~authors,[authors+0]", "xor~edi,edi", "call~FOO", "push~rbx", "mov~r9,r14", "push~r15", "mov~r8,r13", "mov~rcx,rbp", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 4, -1, 0.1768774703557312, ["lea     rdx, off_10C0C", "movsxd  rax, dword ptr [rdx+rbx*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 3, 0, 0, 15, 0, 0, 5, -1, 0.001976284584980237, ["mov     r11, [authors+40h]; jumptable 0000000000008B9C case 9", "mov     r10, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     authors, [authors+0]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "lea~rsi,<TAG>", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~authors,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8"]], [2, 0, 1, 1, 1, 15, 1, 1, 6, -1, 0.007905138339920948, ["mov     r10, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r10", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_58]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r10,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r10", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 5, -1, 0.014822134387351778, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r11, [rsp+58h+var_40]", "push    r11", "jmp     loc_8BE5"], ["xor~edi,edi", "call~FOO", "mov~r11,[rsp+0]", "push~r11", "jmp~FOO"]], [2, 0, 2, 1, 1, 16, 1, 1, 5, -1, 0.008893280632411066, ["mov     r10, [authors+38h]; jumptable 0000000000008B9C case 8", "mov     r9, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     [rsp+58h+var_48], r10", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~[rsp+0],r10", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "call~FOO", "sub~rsp,0"]], [1, 0, 3, 0, 0, 16, 0, 1, 4, 0, 0.02075098814229249, ["mov     r11, [authors+40h]; jumptable 0000000000008B9C default case", "mov     r10, [authors+38h]", "mov     edx, 5", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "jmp     loc_8C93"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "mov~edx,0", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 3, 0.11857707509881422, ["test    command_name, command_name", "jz      loc_8C28"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 1, 1, 1, 13, 1, 1, 5, -1, 0.007905138339920948, ["mov     r15, [authors+18h]; jumptable 0000000000008B9C case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "mov     r8, r13", "push    r15", "mov     rcx, rbx"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "mov~r8,r13", "push~r15", "mov~rcx,rbx"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000008B9C case 0", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [3, 0, 1, 1, 1, 18, 2, 2, 5, -1, 0.001976284584980237, ["mov     rbx, [authors+0]; jumptable 0000000000008B9C case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 5, -1, 0.001976284584980237, ["mov     r13, [authors+8]; jumptable 0000000000008B9C case 2", "mov     rbx, [authors+0]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 5, -1, 0.001976284584980237, ["mov     r14, [authors+10h]; jumptable 0000000000008B9C case 3", "mov     r13, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r14", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r14", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 1, 19, 1, 2, 5, -1, 0.007905138339920948, ["mov     r9, [authors+10h]; jumptable 0000000000008B9C case 7", "mov     r14, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     edx, 5; category", "mov     r15, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_8E4B"], ["mov~r9,[authors+0]", "mov~r14,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "mov~r15,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 5, -1, 0.007905138339920948, ["mov     r8, [authors+8]; jumptable 0000000000008B9C case 6", "mov     r13, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     edx, 5; category", "mov     r14, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    r13", "push    rbx", "push    r15"], ["mov~r8,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "xor~edi,edi", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~r13", "push~rbx", "push~r15"]], [2, 0, 0, 1, 1, 15, 1, 1, 6, -1, 0.0, ["mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 23, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "mov     rbp, authors", "sub     rsp, 28h", "cmp     qword ptr [authors], 0", "jz      short loc_8B0C"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "mov~rbp,authors", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 6, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbp", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 22, 31, 4, 24, 34, 0, 287, 0.03187, 16, 14], "succs": [[11, 6], [0], [0, 15], [3, 12], [3], [21], [5, 7, 10, 13, 14, 16, 17, 18, 19, 20], [9], [14], [8], [8], [9], [1, 2], [21], [], [], [15], [15], [15], [23], [23], [], [4, 12], []], "fname": "version_etc_ar", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 20, 1, 0, 4, 0, 1, 0, 0, 0.1824966078697422, ["lea     rdx, off_10C34", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [5, 0, 22, 0, 4, 20, 3, 5, 5, -1, 0.21393034825870647, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_95C0; jumptable 0000000000009002 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 35, 1, 0, 7, 1, 1, 6, 4, 0.04590682948891904, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+28h], rdi", "jnz     short loc_91B8"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 38, 1, 0, 7, 1, 1, 5, 5, 0.050203527815468114, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+20h], rdi", "jnz     short loc_916F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 11, 5, 0.0024875621890547263, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, -1, 0.009724106739032113, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.023518769787426504, ["mov     ebp, 5", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 35, 1, 0, 6, 1, 1, 11, 5, 0.011080958842152872, ["add     eax, 30h ; '0'", "mov     [authors], eax", "mov     rax, [rdi+r10]", "test    rax, rax", "mov     [rsp+0B8h+authtab+28h], rax", "jz      short loc_9190"], ["add~eax,0", "mov~<TAG>,eax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 6, -1, 0.015603799185888738, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 0000000000009002 default case", "mov     r9, [rsp+0B8h+authtab+10h]", "mov     edx, 5", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     [rsp+0B8h+var_A0], r10", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "jmp     loc_929C"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.0030529172320217096, ["mov     ebp, 7", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 30, 0, 0, 6, 1, 1, 8, 2, 0.022614201718679332, ["lea     rdi, [rax+10h]", "mov     [authors+8], rdi", "mov     rdi, [rax+8]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+38h], rdi", "jz      loc_9620"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, -1, 0.01826096788783356, ["mov     rax, [rsp+0B8h+var_40]; jumptable 0000000000009002 case 0", "xor     rax, fs:28h", "jnz     loc_9611"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 10, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySSAnd; jumptable 0000000000009002 case 3", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_9611"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 9, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySAndS; jumptable 0000000000009002 case 2", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_9611"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenByS; jumptable 0000000000009002 case 1", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_9611"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 47, 0, 0, 6, 1, 1, 7, 8, 0.018995929443690638, ["lea     r9d, [rax+20h]", "mov     [authors], r9d", "mov     r10, [rdi+r10]", "test    r10, r10", "mov     [rsp+0B8h+authtab+18h], r10", "jz      short loc_90F0"], ["lea~r9d,[rax+0]", "mov~<TAG>,r9d", "mov~r10,<TAG>", "test~r10,r10", "mov~[rsp+0],r10", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 0, 6, 8, 0.016734509271822705, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_9100"], ["cmp~r10d,0", "jbe~FOO"]], [2, 0, 4, 1, 1, 18, 1, 2, 7, -1, 0.005314337403889643, ["mov     rcx, [rsp+0B8h+authtab]; jumptable 0000000000009002 case 6", "mov     r13, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14", "jmp     short loc_93A6"], ["mov~rcx,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14", "jmp~FOO"]], [1, 0, 44, 1, 0, 7, 1, 1, 3, 7, 0.0407055630936228, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+10h], rdi", "jnz     short loc_90CF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 47, 1, 0, 7, 1, 1, 2, 8, 0.02838082315694256, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+8], rdi", "jnz     short loc_907F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 5, 8, 0.007462686567164179, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 27, 0, 0, 1, 0, 0, 4, -1, 0.013116236996834011, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 5, 0, 0, 15, 0, 0, 7, -1, 0.0002261420171867933, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 0000000000009002 case 9", "mov     r9, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A0], r10", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [1, 0, 45, 0, 0, 2, 0, 0, 8, 7, 0.014699231117141566, ["cmp     r9d, 2Fh ; '/'", "jbe     short loc_9150"], ["cmp~r9d,0", "jbe~FOO"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.004975124378109453, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 65, 0, 0, 8, 1, 1, 1, 11, 0.0067842605156037995, ["mov     rdi, [authors+10h]", "lea     r10d, [rax+8]", "mov     r9d, eax", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab], r9", "jz      loc_8F70"], ["mov~rdi,[authors+0]", "lea~r10d,[rax+0]", "mov~r9d,eax", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 1, 67, 1, 0, 14, 1, 0, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 88h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "jbe     loc_9004"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [2, 0, 25, 1, 0, 8, 2, 1, 10, -1, 0.008480325644504749, ["lea     rdi, [rax+20h]", "xor     ebp, ebp", "mov     [authors+8], rdi", "cmp     qword ptr [rax+18h], 0", "setnz   bpl", "add     rbp, 9", "test    command_name, command_name", "jnz     loc_8F7B"], ["lea~rdi,[rax+0]", "xor~ebp,ebp", "mov~[authors+0],rdi", "cmp~[word ptr [rax+0],0", "setnz~bpl", "add~rbp,0", "test~command_name,command_name", "jnz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 9, 1, 0.014586160108548168, ["lea     rdi, [rax+18h]", "mov     [authors+8], rdi", "mov     rdi, [rax+10h]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+40h], rdi", "jz      loc_962A"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 4, 0, 1, 19, 1, 1, 7, -1, 0.005314337403889643, ["mov     r8, [rsp+0B8h+authtab+8]; jumptable 0000000000009002 case 7", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "push    r12", "push    rbp", "mov     r9, r13", "push    r15", "push    r14", "mov     r8, [rsp+0D8h+var_B0]"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "push~rbp", "mov~r9,r13", "push~r15", "push~r14", "mov~r8,[rsp+0]"]], [2, 0, 4, 1, 1, 10, 1, 2, 7, -1, 0.005314337403889643, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000009002 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "sub     rsp, 8", "jmp     short loc_944E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, -1, 0.02939846223428313, ["mov     ebp, 2", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 53, 0, 0, 6, 1, 1, 5, 9, 0.018995929443690638, ["lea     r10d, [rax+18h]", "mov     [authors], r10d", "mov     r9, [rdi+r11]", "test    r9, r9", "mov     [rsp+0B8h+authtab+10h], r9", "jz      short loc_90A0"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 2, 10, 0.011872455902306648, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_9060"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 3, 9, 0.008819538670284939, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [1, 0, 23, 0, 1, 8, 1, 1, 4, -1, 0.11668928086838534, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [1, 1, 1, 1, 0, 15, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 1, 1, 1, 0, 14, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 1, 1, 1, 0, 13, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     rcx, rbp", "mov     rdi, stream", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~rcx,rbp", "mov~rdi,stream", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 10, 0, 0.0002261420171867933, ["mov     ebp, 8", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 39, 0, 0, 2, 0, 0, 10, 6, 0.009724106739032113, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_91A0"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 12, 4, 0.003165988240615106, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 41, 1, 0, 7, 1, 1, 4, 6, 0.04794210764360018, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+18h], rdi", "jnz     short loc_911F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 6, -1, 0.014699231117141566, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 6, -1, 0.02939846223428313, ["mov     ebp, 3", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 5, -1, 0.013794663048394391, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 23, 0, 1, 8, 1, 2, 4, -1, 0.10696517412935323, ["mov     authors, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8F9A"], ["mov~authors,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 3, -1, 0.2233152419719584, ["test    command_name, command_name", "jz      loc_9225"], ["test~command_name,command_name", "jz~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 8, -1, 0.0013568521031207597, ["mov     rcx, [rsp+0D8h+var_B8]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_92D8; jumptable 0000000000009002 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 0, 4, 9, 0.015829941203075532, ["cmp     r11d, 2Fh ; '/'", "jbe     short loc_90B0"], ["cmp~r11d,0", "jbe~FOO"]], [0, 0, 49, 0, 0, 8, 1, 1, 1, 9, 0.007914970601537766, ["mov     rax, [authors+8]", "mov     stream, rax", "lea     rax, [rax+8]", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab], rdi", "jnz     loc_902E"], ["mov~rax,[authors+0]", "mov~stream,rax", "lea~rax,[rax+0]", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.02939846223428313, ["mov     ebp, 4", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 41, 0, 0, 6, 1, 1, 9, 7, 0.015829941203075532, ["lea     r10d, [rax+28h]", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab+20h], r9", "jz      short loc_9140"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 3, -1, 0.012550881953867029, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 42, 0, 0, 1, 0, 0, 7, 7, 0.006105834464043419, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 4, 0, 1, 10, 1, 1, 7, -1, 0.005314337403889643, ["mov     r15, [rsp+0B8h+authtab+20h]; jumptable 0000000000009002 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "push    r15"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15"]], [2, 0, 4, 1, 1, 17, 1, 2, 7, -1, 0.005427408412483039, ["mov     r9, [rsp+0B8h+authtab+10h]; jumptable 0000000000009002 case 8", "mov     r8, [rsp+0B8h+authtab+8]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "jmp     loc_92AA"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 8, -1, 0.0027137042062415195, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+0E8h+var_A8]", "mov     rdi, stream", "mov     r8, [rsp+0E8h+var_B0]", "mov     rcx, [rsp+0E8h+var_B8]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 4, 1, 1, 7, -1, 0.007010402532790593, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+0B8h+var_A0]", "push    r10"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10"]], [1, 0, 26, 0, 0, 2, 0, 1, 4, -1, 0.02939846223428313, ["mov     ebp, 1", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 59, 0, 0, 6, 1, 1, 3, 10, 0.01594301221166893, ["lea     r11d, [rax+10h]", "mov     [authors], r11d", "mov     r9, [rdi+r10]", "test    r9, r9", "mov     [rsp+0B8h+authtab+8], r9", "jz      short loc_9050"], ["lea~r11d,[rax+0]", "mov~<TAG>,r11d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 32, 0, 0, 6, 1, 1, 7, 3, 0.04432383536861149, ["lea     rdi, [rax+8]", "mov     [authors+8], rdi", "mov     rdi, [rax]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+30h], rdi", "jz      loc_9616"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.017639077340569877, ["mov     ebp, 6", "jmp     loc_8F72"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 8, -1, 0.0013568521031207597, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_92D8; jumptable 0000000000009002 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [0, 0, 26, 0, 0, 1, 1, 0, 2, -1, 0.017639077340569877, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 88h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [19, 44, 60, 5, 68, 103, 0, 425, 0.02504, 17, 18], "succs": [[12, 13, 14, 15, 18, 23, 57, 58, 30, 31], [0, 8], [5, 63], [2, 45], [2], [6], [49], [43, 6], [60], [49], [9, 29], [], [67, 11], [11, 38], [11, 39], [40, 11], [24, 46], [16, 56], [50], [44, 22], [19, 55], [19], [32], [60], [25, 54], [3], [34, 66], [26, 52], [48, 37], [41, 28], [50], [65], [49], [32, 17], [35, 62], [20], [], [1, 36], [36], [36], [36], [49], [4, 7], [63], [3, 47], [53], [49], [46], [1], [48, 37], [12], [33, 21], [66, 20], [49], [42, 53], [61], [44], [65], [59], [12], [59], [49], [51, 61], [64, 10], [49], [12], [49], []], "fname": "version_etc_va", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 5, 0, 0, 15, 0, 0, 0, 0, 0.0007936507936507937, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000009860 case 9", "mov     r9, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F0], r10", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [0, 0, 16, 1, 0, 4, 0, 1, 5, -1, 0.21865079365079365, ["lea     rdx, off_10C5C", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, -1, 0.00873015873015873, ["mov     ebp, 1", "jmp     loc_97D0"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 5, 1, 1, 1, 7, 0.009523809523809525, ["mov     rax, [rdi+28h]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "test    rax, rax", "mov     [rsp+108h+var_C0], rax", "jz      loc_9C00"], ["mov~rax,[rdi+0]", "mov~[rsp+0],0", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 4, 1, 1, 9, 1, 1, 6, -1, 0.007936507936507936, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000009860 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, -1, 0.05396825396825397, ["mov     rax, [rsp+108h+var_70]; jumptable 0000000000009860 case 0", "xor     rax, fs:28h", "jnz     loc_9C0A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 0D8h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 26, 0, 0, 6, 1, 1, 7, 1, 0.022222222222222223, ["lea     rax, [rsp+108h+arg_30]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+8]", "test    rax, rax", "mov     [rsp+108h+var_90], rax", "jz      loc_9C23"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 6, 2, 0.02857142857142857, ["lea     rax, [rsp+108h+arg_28]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi]", "test    rax, rax", "mov     [rsp+108h+var_98], rax", "jz      loc_9C0F"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 31, 0, 0, 7, 1, 1, 3, 5, 0.02142857142857143, ["mov     rax, [rdi]", "lea     r8, [rsp+108h+arg_10]", "mov     ebp, 3", "mov     [rsp+108h+authors.overflow_arg_area], r8", "test    rax, rax", "mov     [rsp+108h+var_B0], rax", "jz      loc_97D0"], ["mov~rax,<TAG>", "lea~r8,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],r8", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 2, 6, 0.024603174603174603, ["mov     rax, [rsp+108h+arg_0]", "lea     rdi, [rsp+108h+arg_8]", "mov     ebp, 2", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_B8], rax", "jz      loc_97D0"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.01746031746031746, ["mov     ebp, 6", "jmp     loc_97D0"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 6, -1, 0.013888888888888888, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+108h+var_F0]", "push    r10", "jmp     loc_98B5"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 5, -1, 0.02261904761904762, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000009860 default case", "mov     r9, [rsp+108h+var_B8]", "mov     edx, 5", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     [rsp+108h+var_F0], r10", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "jmp     loc_9987"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 4, 0, 1, 20, 1, 2, 6, -1, 0.007936507936507936, ["mov     r8, [rsp+108h+var_C0]; jumptable 0000000000009860 case 7", "mov     r13, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     r12, [rsp+108h+var_98]", "mov     edx, 5; category", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "push    r12", "mov     r9, r13", "push    rbp", "push    r15", "push    r14", "mov     r8, [rsp+128h+var_100]", "jmp     short loc_9B24"], ["mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~r12,[rsp+0]", "mov~edx,0", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "mov~r9,r13", "push~rbp", "push~r15", "push~r14", "mov~r8,[rsp+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, -1, 0.00873015873015873, ["mov     ebp, 8", "jmp     loc_97D0"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 24, 0, 0, 6, 1, 1, 8, -1, 0.012698412698412698, ["lea     rax, [rsp+108h+arg_38]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+10h]", "test    rax, rax", "mov     [rsp+108h+var_88], rax", "jz      loc_9C19"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 4, 1, 1, 17, 1, 1, 6, -1, 0.007936507936507936, ["mov     rcx, [rsp+108h+var_C8]; jumptable 0000000000009860 case 6", "mov     rbp, [rsp+108h+var_A0]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "xor     edi, edi; domainname", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14"], ["mov~rcx,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14"]], [2, 0, 36, 1, 0, 23, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_70], rax", "xor     eax, eax", "lea     rax, [rsp+108h+arg_0]", "mov     [rsp+108h+var_48], r8", "mov     [rsp+108h+var_40], r9", "mov     [rsp+108h+authors.gp_offset], 28h ; '('", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_68]", "mov     [rsp+108h+authors.reg_save_area], rax", "mov     stream, rax", "mov     rax, [rax+20h]", "test    rax, rax", "mov     [rsp+108h+var_C8], rax", "jz      loc_9BF8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~stream,rax", "mov~rax,[rax+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 7, -1, 0.004761904761904762, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_98E3; jumptable 0000000000009860 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 1, 2, 6, -1, 0.007936507936507936, ["mov     r15, [rsp+108h+var_A8]; jumptable 0000000000009860 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "push    r15", "jmp     short loc_9A8B"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 2, 3, -1, 0.12063492063492064, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_97F8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, -1, 0.25, ["test    command_name, command_name", "jz      loc_9910"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 30, 0, 0, 7, 1, 1, 4, 4, 0.025396825396825397, ["mov     rdi, [r8]", "lea     rax, [rsp+108h+arg_18]", "mov     ebp, 4", "mov     [rsp+108h+authors.overflow_arg_area], rax", "test    rdi, rdi", "mov     [rsp+108h+var_A8], rdi", "jz      loc_97D0"], ["mov~rdi,<TAG>", "lea~rax,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rax", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [2, 0, 4, 1, 1, 16, 1, 1, 6, -1, 0.008333333333333333, ["mov     r9, [rsp+108h+var_B8]; jumptable 0000000000009860 case 8", "mov     r8, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0"]], [1, 0, 19, 0, 1, 8, 1, 1, 3, -1, 0.12063492063492064, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 7, -1, 0.004761904761904762, ["mov     rcx, [rsp+128h+var_108]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_98E3; jumptable 0000000000009860 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 18, 0, 4, 20, 3, 5, 4, -1, 0.2571428571428571, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_9BA0; jumptable 0000000000009860 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [2, 0, 22, 1, 0, 6, 1, 0, 9, -1, 0.00873015873015873, ["xor     ebp, ebp", "cmp     qword ptr [rdi+18h], 0", "lea     rax, [rsp+108h+arg_40]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "setnz   bpl", "add     rbp, 9"], ["xor~ebp,ebp", "cmp~[word ptr [rdi+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "setnz~bpl", "add~rbp,0"]], [2, 0, 3, 0, 2, 12, 2, 3, 6, -1, 0.0, ["mov     rbp, [rsp+108h+var_C8]; jumptable 0000000000009860 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_98E3; jumptable 0000000000009860 case 0"], ["mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 2, 14, 2, 3, 6, -1, 0.0, ["mov     r12, [rsp+108h+var_C0]; jumptable 0000000000009860 case 2", "mov     rbp, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_98E3; jumptable 0000000000009860 case 0"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 29, 0, 0, 7, 1, 1, 5, 3, 0.027777777777777776, ["mov     rax, [rax]", "lea     rdi, [rsp+108h+arg_20]", "mov     ebp, 5", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_A0], rax", "jz      short loc_97D0"], ["mov~rax,<TAG>", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 3, 0, 2, 16, 2, 3, 6, -1, 0.0, ["mov     r13, [rsp+108h+var_B8]; jumptable 0000000000009860 case 3", "mov     r12, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbp, [rsp+108h+var_C8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r9, r13", "mov     rdx, rax", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_98E3; jumptable 0000000000009860 case 0"], ["mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "lea~rsi,<TAG>", "mov~rbp,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r9,r13", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 7, -1, 0.009523809523809525, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+138h+var_F8]", "mov     rdi, stream", "mov     r8, [rsp+138h+var_100]", "mov     rcx, [rsp+138h+var_108]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [1, 0, 22, 0, 0, 2, 0, 1, 8, 0, 0.01746031746031746, ["mov     ebp, 7", "jmp     loc_97D0"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, -1, 0.01746031746031746, ["xor     ebp, ebp", "jmp     loc_97D0"], ["xor~ebp,ebp", "jmp~FOO"]]], "func_feature": [22, 34, 50, 17, 37, 56, 1, 329, 0.03698, 17, 9], "succs": [[13], [0, 33, 4, 6, 15, 18, 21, 25, 30, 31], [23], [2, 11], [20], [], [5, 7], [], [17, 35], [8, 12], [24, 23], [10, 23], [23], [34], [13], [27], [23], [16, 29], [27], [3, 36], [6], [20], [28], [26, 22], [32, 23], [34], [28], [6], [1, 14], [23], [6], [6], [9, 23], [6], [6], [23], [23]], "fname": "version_etc", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 5, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     rbx, rax", "seto    al", "test    rbx, rbx", "js      short loc_9CDE"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~rbx,rax", "seto~al", "test~rbx,rbx", "js~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.15000000000000002, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_9CDE"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.2, ["mov     n, rbx; size", "call    _malloc", "test    rax, rax", "jnz     short loc_9CDC"], ["mov~n,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05, ["test    rbx, rbx", "jnz     short loc_9CDE"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 4, 6, 0, 6, 8, 0, 19, 0.06667, 0, 1], "succs": [[1, 5], [2, 5], [3, 4], [4, 5], [], []], "fname": "xnmalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 8, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_9D39"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.17857142857142855, ["mov     rsi, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_9D29"], ["mov~rsi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.17857142857142855, ["test    rsi, rsi", "mov     rbx, rsi", "jnz     short loc_9D17"], ["test~rsi,rsi", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 0, 3, 0.05357142857142857, ["test    p, p", "jnz     short loc_9D30"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05357142857142857, ["test    rbx, rbx", "jnz     short loc_9D39"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.10714285714285714, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_9D39"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 4, 1, 1, 0, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 7, 9, 0, 9, 12, 0, 28, 0.06349, 0, 1], "succs": [[8, 5], [4, 6], [1, 3], [1, 7], [8, 6], [8, 2], [], [], []], "fname": "xnrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.13636363636363635, ["mov     pn, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_9D8D"], ["mov~pn,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 4, 3, 0.09090909090909091, ["mov     [pn], n", "mov     rbx, rcx", "jmp     short loc_9D7B"], ["mov~<TAG>,n", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 5, 1, 0, 7, 1, 1, 2, 3, 0.06060606060606061, ["mov     rax, n", "shr     rax, 1", "lea     rbx, [rax+n+1]", "mov     [pn], n", "imul    n, s", "test    rbx, rbx", "jz      short loc_9DE0"], ["mov~rax,n", "shr~rax,0", "lea~rbx,[rax+0]", "mov~<TAG>,n", "imul~n,s", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 1, 0, 7, 1, 1, 2, 1, 0.10606060606060606, ["mov     rax, s", "mul     n", "mov     s, rax", "seto    al", "test    rcx, rcx", "movzx   eax, al", "js      short loc_9DE9"], ["mov~rax,s", "mul~,n", "mov~s,rax", "seto~al", "test~rcx,rcx", "movzx~eax,al", "js~FOO"]], [0, 1, 7, 2, 0, 8, 3, 1, 2, 2, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "add     r8, n", "jmp     short loc_9D95"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "add~r8,n", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.030303030303030304, ["test    n, n", "jz      short loc_9DC0"], ["test~n,n", "jz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 3, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 6, 1, 0, 5, 1, 0, 1, 1, 0.045454545454545456, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     loc_9DE9"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.022727272727272728, ["test    rbx, rbx", "jnz     short loc_9DE9"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 1, 0.09848484848484848, ["test    rax, rax", "jnz     short loc_9DE9"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    p, p", "push    rbx", "mov     rcx, s", "mov     r8, [pn]", "jz      short loc_9D90"], ["test~p,p", "push~rbx", "mov~rcx,s", "mov~r8,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 12, 12, 0, 13, 18, 0, 52, 0.04545, 0, 5], "succs": [[9, 12], [0], [0, 6], [10, 7], [3], [3, 4], [], [], [2, 7], [12, 7], [1, 7], [8, 5], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_9E05"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    rax, rax", "jnz     short loc_9E03"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xcharalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_9E25"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_9E23"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 25, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 4, 1, 1, 0, 0, 0.0, ["call    free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_9E58"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_9E61"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_9E50"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_9E3E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [3, 5, 7, 0, 7, 8, 42, 19, 0.04762, 0, 0], "succs": [[], [0, 4], [], [2, 6], [3, 6], [1, 4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_9EC1"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 0, 0.16666666666666666, ["mov     [pn], rax", "mov     pn, rax; size", "call    _realloc", "test    rax, rax", "jz      short loc_9EC1"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 0, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_9E96"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 2, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rax+rdx+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rax+0]"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    p, p", "mov     rax, [pn]", "jz      short loc_9EB0"], ["sub~rsp,0", "test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 0, 7, 9, 0, 23, 0.05238, 0, 2], "succs": [[], [0, 4], [0, 6], [0, 2], [2], [1, 3], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 1; size", "mov     rbx, s", "call    _calloc", "test    rax, rax", "jnz     short loc_9EE8"], ["push~rbx", "mov~esi,0", "mov~rbx,s", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.16666666666666666, ["test    s, s", "jnz     short loc_9EEA"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     s", "retn"], ["pop~s", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 11, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xzalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_9F19"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_9F19"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_9F19"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    s, s", "jnz     short loc_9F52"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 4, 1, 1, 9, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; size", "mov     rbx, s", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "jnz     short loc_9F3E"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "test~rax,rax", "jnz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 5, 3, 19, 0.05, 0, 2], "succs": [[], [0, 3], [], [2], [1, 3]], "fname": "xmemdup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 1, 2, 10, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, string", "sub     rsp, 8", "call    _strlen", "lea     rbx, [rax+1]", "mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "jz      short loc_9F93"], ["push~rbp", "push~rbx", "mov~rbp,string", "sub~rsp,0", "call~FOO", "lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, rbx; n", "mov     rsi, string; src", "pop     rbx", "pop     string", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,rbx", "mov~rsi,string", "pop~rbx", "pop~string", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [3, 1, 5, 0, 4, 3, 16, 18, 0.04167, 0, 2], "succs": [[], [0, 2], [3], []], "fname": "xstrdup", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 21, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 1, 4, 1, 1, 5, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "or      esi, 200h; options", "call    rpl_fts_open", "test    fts, fts", "jz      short loc_A000"], ["sub~rsp,0", "or~esi,<STR>", "call~FOO", "test~fts,fts", "jz~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 1, 1, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      short loc_A010"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 2, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3434; \"xfts_open\"", "lea     rsi, file; \"lib/xfts.c\"", "lea     rdi, assertion; \"errno != EINVAL\"", "mov     edx, 29h ; ')'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,<STR>", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [4, 2, 6, 0, 5, 4, 1, 16, 0.03333, 3, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "xfts_open", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     qword ptr [ent+58h], 0", "setnz   al", "retn"], ["cmp~[word ptr [ent+0],0", "setnz~al", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["xor     eax, eax", "cmp     edx, 11h", "jz      short loc_A050"], ["xor~eax,eax", "cmp~edx,0", "jz~FOO"]], [3, 0, 3, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     edx, [fts+48h]", "mov     eax, 1", "and     edx, 11h", "cmp     edx, 10h", "jz      short locret_A047"], ["mov~edx,[fts+0]", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 4, 1, 12, 0.04167, 0, 0], "succs": [[], [0, 3], [1, 3], []], "fname": "cycle_warning_required", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 4, 0, 0, 1, 1, 0, 0, 0, 0.022954461310625694, ["or      ebp, r8d"], ["or~ebp,r8d"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.01582747130692336, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A280"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.01582747130692336, ["mov     rbx, rax"], ["mov~rbx,rax"]], [2, 0, 74, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_A3B0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 5, 10, 0.005800320868814019, ["mov     eax, [r12]", "test    eax, eax", "jz      short loc_A168"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 68, 0, 1, 7, 0, 2, 4, 10, 0.059237319511292116, ["mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    _strtoul", "mov     rcx, [p]", "mov     ch_0, rax", "cmp     rcx, s", "jz      short loc_A128"], ["mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~rcx,<TAG>", "mov~ch_0,rax", "cmp~rcx,s", "jz~FOO"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, -1, 0.01925212884116994, ["mov     rax, tmp; jumptable 000000000000A236 cases 5,37", "mul     rsi", "jo      loc_A40B"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 45, 1, 0, 5, 0, 1, 12, 2, 0.18974453905960756, ["lea     rdx, off_10D40", "movzx   r12d, r12b", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r12d,r12b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A274"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.04313217326915957, ["mul     rsi", "jo      loc_A3FC"], ["mul~,rsi", "jo~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 14, -1, 0.0037023324694557573, ["xor     r8d, r8d", "jmp     loc_A259"], ["xor~r8d,r8d", "jmp~FOO"]], [0, 0, 16, 1, 0, 3, 0, 0, 13, 1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000A236 case 14", "mul     rsi", "jo      loc_A438"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 1, 47, 0, 0, 3, 0, 1, 13, 4, 0.013050721954831545, ["mov     esi, 3E8h", "mov     edi, 2", "jmp     short loc_A21A"], ["mov~esi,<STR>", "mov~edi,0", "jmp~FOO"]], [1, 0, 52, 0, 0, 3, 0, 1, 12, 5, 0.013328396890040726, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_A1FF"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 14, 5, 0.0005553498704183636, ["cmp     al, 42h ; 'B'", "jnz     short loc_A210"], ["cmp~al,0", "jnz~FOO"]], [2, 0, 61, 0, 0, 3, 0, 1, 6, 9, 0.00792916203875108, ["cmp     eax, 22h ; '\"'", "mov     ebp, 1", "jnz     short loc_A138"], ["cmp~eax,0", "mov~ebp,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 14, -1, 0.0057386153276564236, ["xor     r8d, r8d", "jmp     loc_A26B"], ["xor~r8d,r8d", "jmp~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, -1, 0.0057386153276564236, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A26B"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 11, 1, 0, 2, 0, 0, 15, -1, 0.038689374305812665, ["mul     rsi", "jo      loc_A40B"], ["mul~,rsi", "jo~FOO"]], [0, 0, 59, 0, 0, 2, 1, 1, 7, 8, 0.03387634209552018, ["test    valid_suffixes, valid_suffixes", "jz      short loc_A11C"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 1, 1, 6, 9, 0.006941873380229545, ["xor     ebp, ebp", "jmp     short loc_A10E"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.028878193261754906, ["mov     rax, tmp; jumptable 000000000000A236 cases 11,43", "mul     rsi", "jo      loc_A3CF"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 200h; jumptable 000000000000A236 case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_A32F"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 58, 0, 1, 8, 2, 2, 7, 7, 0.07997038134024435, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "xor     ebp, ebp", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_A138"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "xor~ebp,ebp", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 6, 8, 0.0718869554485993, ["movzx   r12d, byte ptr [s+0]", "test    r12b, r12b", "jz      short loc_A138"], ["movzx~r12d,[yte ptr [s+0]", "test~r12b,r12b", "jz~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 13, -1, 0.022491669751943725, ["add     rcx, rdi; jumptable 000000000000A236 case 33", "mov     eax, ebp", "mov     [p], rcx", "or      eax, 2", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  ebp, eax", "jmp     loc_A13D"], ["add~rcx,rdi", "mov~eax,ebp", "mov~<TAG>,rcx", "or~eax,0", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~ebp,eax", "jmp~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["add     tmp, tmp", "jmp     short loc_A283; jumptable 000000000000A236 case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 9", "jmp     short loc_A283; jumptable 000000000000A236 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0012032580525731212, ["mov     rax, tmp; jumptable 000000000000A236 cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_A283; jumptable 000000000000A236 case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0011106997408367272, ["mov     ebp, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A283; jumptable 000000000000A236 case 33"], ["mov~ebp,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 0Ah", "jmp     loc_A283; jumptable 000000000000A236 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 1, 0, 14, 3, 0.004072565716401333, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 20, 1, 0, 3, 0, 0, 13, 4, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000A236 case 24", "mul     rsi", "jo      loc_A2E4"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 8, 7, 0.03998519067012218, ["movzx   r12d, byte ptr [rcx]", "test    r12b, r12b", "jnz     short loc_A197"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 14, -1, 0.01036653091447612, ["xor     r8d, r8d", "jmp     loc_A274"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.006386523509811181, ["mov     [val], tmp; jumptable 000000000000A236 default case", "or      ebp, 2", "jmp     loc_A13D"], ["mov~<TAG>,tmp", "or~ebp,0", "jmp~FOO"]], [0, 0, 56, 0, 1, 7, 1, 2, 8, 6, 0.1373565346168086, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      loc_A29C; jumptable 000000000000A236 default case"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 46, 1, 0, 3, 0, 1, 11, 3, 0.19326175490559053, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      short loc_A29C; jumptable 000000000000A236 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0016660496112550908, ["mov     [val], tmp", "jmp     short loc_A13D"], ["mov~<TAG>,tmp", "jmp~FOO"]], [1, 1, 47, 0, 0, 6, 1, 1, 14, 4, 0.00870048130322103, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     rdi, [rdi+rdi+1]", "jmp     loc_A21A"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,<STR>", "setz~dil", "lea~rdi,[rdi+0]", "jmp~FOO"]], [1, 1, 47, 0, 0, 2, 0, 0, 10, 4, 0.14985190670122178, ["mov     esi, 400h", "mov     edi, 1"], ["mov~esi,<STR>", "mov~edi,0"]], [2, 0, 12, 0, 0, 3, 1, 1, 14, -1, 0.003517215845982969, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A262"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 13, 1, 0, 2, 0, 0, 15, -1, 0.036097741577193636, ["mul     rsi", "jo      loc_A41A"], ["mul~,rsi", "jo~FOO"]], [0, 0, 14, 1, 0, 3, 0, 0, 13, -1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000A236 cases 18,50", "mul     rsi", "jo      loc_A41A"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 13, 5, 0.0072195483154387265, ["cmp     al, 69h ; 'i'", "jz      loc_A392"], ["cmp~al,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.026286560533135876, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebp", "jnz     loc_A3AB"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 2; jumptable 000000000000A236 case 53", "mov     rax, rdx", "mul     tmp", "jo      short loc_A32F"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 18, 0, 0, 3, 1, 1, 14, 3, 0.004072565716401333, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A247"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 19, 1, 0, 2, 0, 0, 15, 3, 0.010551647537948908, ["mul     rsi", "jno     loc_A247"], ["mul~,rsi", "jno~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 5, 9, 0.06380352955695422, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+strtol_base], rcx", "jnz     short loc_A170"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0006170554115759594, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 16, 0, 0, 3, 1, 1, 14, 2, 0.0038874490929285454, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A250"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 17, 1, 0, 2, 0, 0, 15, 2, 0.022028878193261756, ["mul     rsi", "jo      loc_A429"], ["mul~,rsi", "jo~FOO"]], [0, 0, 18, 1, 0, 3, 0, 0, 13, 3, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000A236 case 3", "mul     rsi", "jo      loc_A429"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006664198445020363, ["mov     ebp, 4"], ["mov~ebp,0"]], [1, 0, 69, 0, 0, 2, 0, 1, 3, 11, 0.05109218807848945, ["cmp     bl, 2Dh ; '-'", "jz      short loc_A138"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 55, 0, 0, 3, 0, 1, 9, 5, 0.14161421695668272, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'", "ja      short loc_A210"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [2, 0, 14, 0, 0, 3, 1, 1, 14, 0, 0.0037023324694557573, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A259"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 15, 1, 0, 2, 0, 0, 15, 1, 0.030544242873009997, ["mul     rsi", "jo      loc_A438"], ["mul~,rsi", "jo~FOO"]], [1, 0, 72, 0, 2, 17, 1, 3, 1, 13, 0.013328396890040726, ["lea     rax, [rsp+58h+t_ptr]", "mov     r15, ptr", "test    ptr, ptr", "mov     rbp, s", "mov     dword ptr [rsp+58h+strtol_base], edx", "mov     r14, val", "mov     r13, valid_suffixes", "cmovz   r15, rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     r12, rax", "movzx   ebx, byte ptr [q+0]", "call    ___ctype_b_loc", "mov     edx, dword ptr [rsp+58h+strtol_base]; base", "mov     rsi, [rax]", "mov     rax, q", "jmp     short loc_A0D7"], ["lea~rax,[rsp+0]", "mov~r15,ptr", "test~ptr,ptr", "mov~rbp,s", "mov~[word ptr [rsp+0],edx", "mov~r14,val", "mov~r13,valid_suffixes", "cmovz~r15,rax", "call~FOO", "mov~<TAG>,0", "mov~r12,rax", "movzx~ebx,[yte ptr [q+0]", "call~FOO", "mov~edx,[word ptr [rsp+0]", "mov~rsi,<TAG>", "mov~rax,q", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.050721954831543875, ["mul     rsi", "jo      loc_A3ED"], ["mul~,rsi", "jo~FOO"]], [1, 0, 54, 0, 0, 3, 0, 0, 10, 5, 0.017771195853387635, ["mov     rdx, 814400308945h", "bt      rdx, rax", "jnb     short loc_A210"], ["mov~rdx,0", "bt~rdx,rax", "jnb~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4162; \"xstrtoul\"", "lea     ptr, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 54h ; 'T'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 400h; jumptable 000000000000A236 case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_A32F"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 22, 1, 0, 3, 0, 0, 13, 5, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000A236 case 23", "mul     rsi", "jo      loc_A3DE"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 14, 2, 0.0038874490929285454, ["xor     r8d, r8d", "jmp     loc_A250"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 72, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 72, 0, 0, 3, 1, 1, 2, 12, 0.039244724176231024, ["movzx   ecx, bl", "test    byte ptr [rsi+rcx*2+1], 20h", "jnz     short loc_A0D0"], ["movzx~ecx,bl", "test~[yte ptr [rsi+0],<STR>", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 1, 0, 14, 4, 0.004257682339874121, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.01036653091447612, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_A274"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 14, -1, 0.003517215845982969, ["xor     r8d, r8d", "jmp     loc_A262"], ["xor~r8d,r8d", "jmp~FOO"]], [2, 0, 20, 0, 0, 3, 1, 1, 14, 4, 0.004257682339874121, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_A2DB"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     p", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~p", "retn"]], [1, 0, 53, 0, 1, 7, 1, 2, 11, 5, 0.015734912995186968, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_A210"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]]], "func_feature": [8, 35, 53, 1, 75, 122, 4, 250, 0.02566, 5, 27], "succs": [[25], [0], [0], [60, 63], [20, 15], [50, 4], [16, 17], [32, 65, 35, 54, 6, 64, 43, 47, 11, 21, 22, 25, 28], [61], [8, 61], [42], [10, 58], [37], [44, 12], [40, 12], [19, 55], [9], [9], [17, 9], [33, 38], [19], [34, 70], [27, 29], [36, 55], [55, 23], [46], [25], [25], [25, 29], [25], [25], [53], [48, 31], [36, 38], [61], [46], [57, 35], [35, 7], [46], [37], [37], [18], [41, 18], [41, 71], [14, 39], [], [73, 45], [26, 29], [53], [48, 53], [24, 51], [55], [59], [59, 52], [66, 52], [46], [5, 55], [40, 62], [42], [58, 42], [68], [1, 2], [40, 74], [], [29, 30], [72, 69], [59], [68], [56, 67], [49], [61], [18], [49], [], [40, 13]], "fname": "xstrtoul", "n_num": 75}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [ay+8]", "cmp     [ax_0+8], rdx", "jz      short loc_A460"], ["xor~eax,eax", "mov~rdx,[ay+0]", "cmp~[ax_0+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "AD_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [ax_0+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[ax_0+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [ax_0]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_type_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_type_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["setnbe  al", "movzx   eax, al", "retn"], ["setnbe~al", "movzx~eax,al", "retn"]], [0, 0, 2, 0, 0, 5, 0, 0, 0, 1, 0.0, ["mov     rdx, [a]", "mov     rax, [b]", "mov     rax, [rax+80h]", "cmp     [rdx+80h], rax", "jb      short loc_A4C0"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~[rdx+0],rax", "jb~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 0, 0, 0, 3, 2, 0, 10, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "fts_compare_ino", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[3, 0, 1, 1, 0, 5, 1, 1, 0, 0, 0.0025, ["cmp     qword ptr [p+58h], 1", "sbb     eax, eax", "and     eax, 0FFFFFFFCh", "add     eax, 5", "jmp     loc_A548"], ["cmp~[word ptr [p+0],0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 9, 0, 0.0016666666666666668, ["jmp     loc_A5F9"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 7, 2, 0.060000000000000005, ["cmp     byte ptr [p+109h], 0", "jnz     loc_A678"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 8, 1, 0.022500000000000003, ["mov     edx, [p+108h]", "and     edx, 0FFFF00h", "cmp     edx, 2E00h", "jnz     loc_A548"], ["mov~edx,[p+0]", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [1, 1, 13, 0, 0, 4, 1, 1, 3, 6, 0.12000000000000001, ["mov     eax, [p+90h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_A5B0"], ["mov~eax,[p+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 19, 0, 1, 5, 1, 2, 2, 7, 0.11416666666666668, ["mov     follow, sbp; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      short loc_A57B"], ["mov~follow,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 16, 0, 1, 8, 1, 2, 3, 7, 0.01916666666666667, ["mov     follow, rsi; filename", "mov     esi, [r12+2Ch]; fildes", "mov     r8d, 100h; flag", "mov     rcx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_A610"], ["mov~follow,rsi", "mov~esi,[r12+0]", "mov~r8d,0", "mov~rcx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 3, -1, 0.04, ["call    ___errno_location", "mov     sp_0, rax", "mov     eax, [rax]", "cmp     eax, 2", "jz      loc_A620"], ["call~FOO", "mov~sp_0,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.0033333333333333335, ["mov     eax, 0Ch", "jmp     loc_A548"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.025, ["cmp     eax, 0A000h", "jz      loc_A668"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 4, -1, 0.005, ["call    ___errno_location", "mov     eax, [rax]", "jmp     err"], ["call~FOO", "mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 8, 0, 0, 5, -1, 0.0, ["cmp     eax, 8000h", "setz    al", "movzx   eax, al", "pop     sbp", "lea     eax, [rax+rax*4+3]", "pop     p", "pop     sp_0", "retn"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "pop~sbp", "lea~eax,[rax+0]", "pop~p", "pop~sp_0", "retn"]], [1, 0, 4, 0, 1, 6, 1, 2, 4, -1, 0.02, ["mov     rsi, [p+30h]; filename", "mov     rdx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      short loc_A650"], ["mov~rsi,[p+0]", "mov~rdx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, -1, 0.0016666666666666668, ["mov     eax, [r12]", "jmp     err"], ["mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 9, 0, 0, 3, 0, 0, 4, 5, 0.09333333333333334, ["mov     rax, [p+88h]", "cmp     rax, 1", "jbe     loc_A640"], ["mov~rax,[p+0]", "cmp~rax,0", "jbe~FOO"]], [5, 0, 1, 1, 0, 11, 2, 0, 4, -1, 0.015000000000000001, ["lea     rdi, [sbp+8]", "mov     [p+40h], eax", "mov     qword ptr [p+78h], 0", "mov     qword ptr [sbp+88h], 0", "xor     eax, eax", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     sbp, rdi", "lea     ecx, [rbx+90h]", "shr     ecx, 3", "rep stosq", "mov     eax, 0Ah"], ["lea~rdi,[sbp+0]", "mov~[p+0],eax", "mov~[word ptr [p+0],0", "mov~[word ptr [sbp+0],0", "xor~eax,eax", "and~rdi,0", "sub~sbp,rdi", "lea~ecx,[rbx+0]", "shr~ecx,0", "stosq~<TAG>,", "mov~eax,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, 5, 0.013333333333333334, ["cmp     qword ptr [p+58h], 0", "jle     short loc_A640"], ["cmp~[word ptr [p+0],0", "jle~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 4, 0.07333333333333333, ["mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_A5D6"], ["mov~rax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     p", "pop     r12", "retn"], ["pop~rbx", "pop~p", "pop~r12", "retn"]], [2, 0, 5, 0, 0, 4, 0, 1, 6, 3, 0.08, ["cmp     byte ptr [p+108h], 2Eh ; '.'", "mov     [p+68h], rax", "mov     eax, 1", "jnz     loc_A548"], ["cmp~[yte ptr [p+0],0", "mov~[p+0],rax", "mov~eax,0", "jnz~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0016666666666666668, ["mov     dword ptr [r12], 0", "mov     eax, 0Dh", "jmp     loc_A548"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 1, 6, 0, 0, 3, 1, 0, 6, 4, 0.005, ["test    byte ptr [sp_0+48h], 20h", "lea     rdx, [rax-2]", "cmovz   rax, rdx"], ["test~[yte ptr [sp_0+0],<STR>", "lea~rdx,[rax-2]+0]", "cmovz~rax,rdx"]], [0, 0, 22, 0, 0, 2, 1, 1, 2, 8, 0.01, ["test    dl, dl", "jnz     short loc_A4F0"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 1, 8, 0.02666666666666667, ["test    al, 2", "jnz     short loc_A4F0"], ["test~al,0", "jnz~FOO"]], [1, 0, 25, 0, 0, 10, 0, 1, 0, 9, 0.0, ["push    r12", "push    rbp", "mov     rbp, p", "push    rbx", "cmp     qword ptr [rbp+58h], 0", "lea     rbx, [p+78h]", "mov     r12, sp_0", "mov     eax, [sp_0+48h]", "mov     p, [p+30h]; filename", "jnz     short loc_A550"], ["push~r12", "push~rbp", "mov~rbp,p", "push~rbx", "cmp~[word ptr [rbp+0],0", "lea~rbx,[p+0]", "mov~r12,sp_0", "mov~eax,[sp_0+0]", "mov~p,[p+0]", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 1, 1, 1, 8, 0.016666666666666666, ["test    al, 1", "jz      short loc_A550"], ["test~al,0", "jz~FOO"]]], "func_feature": [5, 12, 26, 0, 26, 39, 8, 105, 0.02962, 0, 2], "succs": [[18], [0], [0, 3], [1, 18], [9, 14], [4, 7], [10, 4], [12, 15], [18], [8, 11], [15], [], [20, 13], [15], [16, 17], [18], [17, 21], [19], [], [18, 2], [18], [19], [5, 6], [5, 22], [25, 23], [5, 23]], "fname": "fts_stat", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 6, 0, 1, 5, 1, 1, 0, 0, 0.044444444444444446, ["mov     esi, [sp_0+2Ch]; val", "mov     sp_0, rbx; ir", "call    i_ring_push", "test    eax, eax", "jns     short loc_A725"], ["mov~esi,[sp_0+0]", "mov~sp_0,rbx", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 1, 2, 0.044444444444444446, ["test    ah, 2", "mov     rbp, sp_0", "jnz     short loc_A6F0"], ["test~ah,0", "mov~rbp,sp_0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.022222222222222223, ["mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "jmp     short loc_A6DC"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, -1, 0.26666666666666666, ["mov     rdi, rbx; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_A6D0"], ["mov~rdi,rbx", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 1, 6, 2, 2, 2, -1, 0.044444444444444446, ["mov     edi, [sp_0+28h]; fd", "xor     r12d, r12d", "call    _fchdir", "test    eax, eax", "setnz   r12b", "jmp     short loc_A6DC"], ["mov~edi,[sp_0+0]", "xor~r12d,r12d", "call~FOO", "test~eax,eax", "setnz~r12b", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 4, -1, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_A6DC"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.044444444444444446, ["xor     r12d, r12d", "jmp     short loc_A6DC"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 4, 0, 1, 4, 0, 2, 3, 0, 0.022222222222222223, ["mov     edi, eax; fd", "call    _close", "mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "jmp     short loc_A6DC"], ["mov~edi,eax", "call~FOO", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 3, -1, 0.08888888888888889, ["mov     rdi, rbx; ir", "call    i_ring_pop", "test    eax, eax", "jns     short loc_A710"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, r12d", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~eax,r12d", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 10, 0, 0, 8, 1, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     eax, [sp_0+48h]", "lea     rbx, [sp_0+60h]", "mov     r12d, eax", "and     r12d, 4", "jnz     short loc_A720"], ["push~r12", "push~rbp", "push~rbx", "mov~eax,[sp_0+0]", "lea~rbx,[sp_0+0]", "mov~r12d,eax", "and~r12d,0", "jnz~FOO"]]], "func_feature": [6, 8, 14, 0, 11, 15, 3, 46, 0.05253, 0, 0], "succs": [[2, 7], [0, 4], [3], [8, 9], [3], [3], [3], [3], [3, 5], [], [1, 6]], "fname": "restore_initial_cwd", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 26, 0, 1, 10, 2, 2, 0, 0, 0.01455026455026455, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, dev_type_compare; comparator", "lea     rdx, dev_type_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "test    rax, rax", "mov     r12, rax", "mov     [rbx+50h], rax", "jnz     loc_A77D"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~[rbx+0],rax", "jnz~FOO"]], [0, 0, 27, 0, 0, 5, 1, 1, 1, 8, 0.03042328042328042, ["mov     r12, [rbx+50h]", "mov     rbp, p", "mov     r13d, esi", "test    r12, r12", "jz      short loc_A7D8"], ["mov~r12,[rbx+0]", "mov~rbp,p", "mov~r13d,esi", "test~r12,r12", "jz~FOO"]], [0, 0, 19, 0, 1, 8, 1, 2, 7, 2, 0.042328042328042326, ["mov     rax, [p+78h]", "mov     [r13+8], rbx", "mov     rsi, r13; entry", "mov     rdi, r12; table", "mov     [r13+0], rax", "call    hash_insert", "test    rax, rax", "jz      short loc_A8E0"], ["mov~rax,[p+0]", "mov~[r13+0],rbx", "mov~rsi,r13", "mov~rdi,r12", "mov~[r13+0],rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 20, 0, 1, 5, 1, 2, 6, 3, 0.046296296296296294, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "mov     dir_fd, rax", "jz      loc_A799"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~dir_fd,rax", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 8, 1, 0.027777777777777776, ["cmp     r13, rax", "jnz     short loc_A8EF"], ["cmp~r13,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.04365079365079365, ["xor     eax, eax"], ["xor~eax,eax"]], [2, 0, 28, 1, 0, 11, 2, 1, 0, 9, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rbx, [p+50h]", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    byte ptr [rbx+49h], 2", "jz      loc_A80E"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,[p+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.03373015873015873, ["mov     eax, 0FF534D42h", "cmp     rbx, rax", "jz      short loc_A80E"], ["mov~eax,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.012566137566137565, ["cmp     rbx, 5346414Fh", "jz      short loc_A80E"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 4, 5, 0.06084656084656084, ["lea     rsi, [rsp+0B8h+buf]; buf", "mov     edi, r13d; fildes", "call    _fstatfs", "test    eax, eax", "jnz     short loc_A80E"], ["lea~rsi,[rsp+0]", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 6, -1, 0.08333333333333333, ["cmp     rbx, 6969h", "jz      loc_A80E"], ["cmp~rbx,0", "jz~FOO"]], [0, 1, 7, 0, 0, 2, 0, 1, 7, -1, 0.05357142857142857, ["cmp     rbx, 9FA0h", "jz      loc_A80E"], ["cmp~rbx,<STR>", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 9, -1, 0.0013227513227513227, ["jmp     loc_A80E"], ["jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 0, 3, 6, 0.0582010582010582, ["test    r13d, r13d", "jns     short loc_A838"], ["test~r13d,r13d", "jns~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.05952380952380952, ["mov     rbx, [rsp+0B8h+buf.f_type]", "jmp     loc_A799"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 16, 0, 1, 3, 0, 2, 8, -1, 0.015873015873015872, ["mov     rdi, r13; ptr", "call    free", "jmp     short loc_A88E"], ["mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 3, -1, 0.0582010582010582, ["mov     rbx, [rax+8]"], ["mov~rbx,[rax+0]"]], [0, 0, 25, 0, 1, 7, 1, 2, 2, 7, 0.062169312169312166, ["mov     rax, [p+78h]", "mov     rsi, rsp; entry", "mov     rdi, r12; table", "mov     [rsp+0B8h+var_B8], rax", "call    hash_lookup", "test    rax, rax", "jz      short loc_A809"], ["mov~rax,[p+0]", "mov~rsi,rsp", "mov~rdi,r12", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 4, -1, 0.20899470899470898, ["cmp     rbx, 52654973h", "jz      loc_A8A0"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 5, 4, 0.07671957671957672, ["test    r12, r12", "mov     rbx, [rsp+0B8h+buf.f_type]", "jz      loc_A799"], ["test~r12,r12", "mov~rbx,[rsp+0]", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.06613756613756613, ["mov     rdx, [rsp+0B8h+var_30]", "xor     rdx, fs:28h", "jnz     loc_A8EA"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.005952380952380952, ["mov     eax, 1", "jmp     short loc_A810"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.037698412698412696, ["mov     eax, 2", "jmp     loc_A810"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 6, -1, 0.05291005291005291, ["cmp     rbx, 58465342h", "jz      loc_A8A0"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 5, -1, 0.15873015873015872, ["jle     loc_A8B0"], ["jle~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 6, 0, 0, 2, 1, 1, 8, -1, 0.03505291005291005, ["test    rbx, rbx", "jnz     loc_A7CC"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [8, 14, 31, 2, 29, 45, 2, 97, 0.04643, 4, 2], "succs": [[17, 13], [0, 17], [4, 15], [2, 18], [28, 14], [20], [1, 5], [8, 5], [5, 21], [19, 5], [11, 5], [26, 5], [5], [9, 5], [18], [14], [18], [16, 13], [24, 22], [18, 3], [25, 27], [20], [20], [22, 7], [10, 23], [], [12, 21], [], []], "fname": "leaf_optimization_0", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 41, 0, 0, 2, 1, 1, 0, 0, 0.02255892255892256, ["test    r9d, r9d", "jz      short loc_AA40"], ["test~r9d,r9d", "jz~FOO"]], [2, 0, 55, 1, 0, 19, 3, 1, 0, 5, 0.0, ["push    r15", "push    r14", "mov     r15, p", "push    r13", "push    r12", "mov     r13, sp_0", "push    rbp", "push    rbx", "mov     r12d, edx", "mov     rbp, dir", "sub     rsp, 0B8h", "mov     ebx, [sp_0+48h]", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     r9d, ebx", "and     r9d, 4", "test    dir, dir", "jz      loc_AA00"], ["push~r15", "push~r14", "mov~r15,p", "push~r13", "push~r12", "mov~r13,sp_0", "push~rbp", "push~rbx", "mov~r12d,edx", "mov~rbp,dir", "sub~rsp,0", "mov~ebx,[sp_0+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,ebx", "and~r9d,0", "test~dir,dir", "jz~FOO"]], [2, 0, 54, 0, 0, 9, 1, 1, 1, 4, 0.004545454545454546, ["lea     fd, dir", "mov     ecx, 3", "mov     p, dir", "mov     sp_0, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_AA00"], ["lea~fd,<TAG>", "mov~ecx,0", "mov~p,dir", "mov~sp_0,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [3, 0, 33, 1, 0, 6, 3, 1, 4, -1, 0.035521885521885524, ["mov     esi, ebx", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h", "test    eax, eax", "jnz     loc_AAF9"], ["mov~esi,ebx", "shl~esi,0", "and~esi,0", "or~esi,0", "test~eax,eax", "jnz~FOO"]], [1, 1, 34, 0, 0, 4, 1, 1, 3, -1, 0.009595959595959597, ["mov     eax, ebx", "mov     [rsp+0E8h+is_dotdot], 0", "and     eax, 200h", "jmp     short loc_ABCC"], ["mov~eax,ebx", "mov~[rsp+0],0", "and~eax,<STR>", "jmp~FOO"]], [1, 1, 34, 0, 0, 3, 1, 0, 7, -1, 0.006734006734006735, ["mov     eax, ebx", "mov     [rsp+0E8h+is_dotdot], 1", "and     eax, 200h"], ["mov~eax,ebx", "mov~[rsp+0],0", "and~eax,<STR>"]], [1, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.00808080808080808, ["and     bh, 2", "jz      short loc_AA13"], ["and~bh,0", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 2, 3, 0.012457912457912458, ["test    r9d, r9d", "jnz     loc_AA05"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 37, 0, 1, 6, 1, 2, 6, -1, 0.02255892255892256, ["mov     rdi, r14; ir", "call    i_ring_pop", "test    eax, eax", "mov     r14d, eax", "mov     ebx, [sp_0+48h]", "js      short loc_ABC0"], ["mov~rdi,r14", "call~FOO", "test~eax,eax", "mov~r14d,eax", "mov~ebx,[sp_0+0]", "js~FOO"]], [0, 0, 39, 0, 1, 6, 1, 2, 5, -1, 0.018181818181818184, ["lea     r14, [sp_0+60h]", "mov     rdi, r14; ir", "call    i_ring_empty", "test    al, al", "mov     [rsp+0E8h+is_dotdot], al", "jz      loc_AB78"], ["lea~r14,[sp_0+0]", "mov~rdi,r14", "call~FOO", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 2, -1, 0.029461279461279462, ["test    r12d, r12d", "js      loc_ABFF"], ["test~r12d,r12d", "js~FOO"]], [0, 0, 30, 0, 1, 7, 1, 2, 5, -1, 0.05084175084175085, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "xor     eax, eax", "mov     rsi, dir; file", "call    openat_safer", "mov     r14d, eax", "jmp     loc_A9A2"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "xor~eax,eax", "mov~rsi,dir", "call~FOO", "mov~r14d,eax", "jmp~FOO"]], [3, 0, 31, 1, 0, 4, 2, 0, 6, -1, 0.004713804713804714, ["mov     esi, ebx", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h"], ["mov~esi,ebx", "shl~esi,0", "and~esi,0", "or~esi,0"]], [0, 0, 5, 0, 0, 2, 1, 0, 3, -1, 0.0016835016835016836, ["test    r12d, r12d", "jns     loc_AAC0"], ["test~r12d,r12d", "jns~FOO"]], [4, 0, 31, 1, 0, 5, 2, 0, 5, -1, 0.00984848484848485, ["mov     esi, ebx", "mov     [rsp+0E8h+is_dotdot], 1", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags"], ["mov~esi,ebx", "mov~[rsp+0],0", "shl~esi,0", "and~esi,0", "or~esi,0"]], [1, 0, 41, 0, 0, 2, 1, 1, 4, -1, 0.017592592592592594, ["test    bh, 2", "jnz     loc_AAD0"], ["test~bh,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 3, -1, 0.005555555555555556, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [2, 0, 24, 0, 0, 4, 1, 1, 7, -1, 0.02356902356902357, ["test    bl, 2", "mov     r12d, eax", "mov     [rsp+0E8h+is_dotdot], 1", "jz      loc_AA80"], ["test~bl,0", "mov~r12d,eax", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 1, 8, -1, 0.00808080808080808, ["jmp     loc_A9C0"], ["jmp~FOO"]], [2, 0, 25, 0, 0, 4, 1, 1, 4, 1, 0.01893939393939394, ["test    bl, 2", "mov     r14d, r12d", "mov     [rsp+0E8h+is_dotdot], 1", "jz      loc_AA66"], ["test~bl,0", "mov~r14d,r12d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 44, 0, 0, 2, 1, 0, 3, 2, 0.02441077441077441, ["test    r12d, r12d", "jns     loc_AC12"], ["test~r12d,r12d", "jns~FOO"]], [0, 0, 30, 0, 1, 4, 1, 1, 6, -1, 0.028535353535353535, ["mov     rdi, dir; file", "xor     eax, eax", "call    open_safer", "mov     r14d, eax"], ["mov~rdi,dir", "xor~eax,eax", "call~FOO", "mov~r14d,eax"]], [0, 0, 31, 0, 0, 1, 0, 1, 5, -1, 0.0025252525252525255, ["jmp     loc_A995"], ["jmp~FOO"]], [0, 0, 23, 0, 0, 1, 0, 1, 5, 0, 0.004292929292929293, ["jmp     loc_A9C0"], ["jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 7, -1, 0.011447811447811448, ["cmp     esi, 0FFFFFF9Ch", "jnz     loc_AC0D"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 6, -1, 0.1, ["mov     esi, [sp_0+2Ch]; val", "cmp     r14d, esi", "jnz     short loc_AB2A"], ["mov~esi,[sp_0+0]", "cmp~r14d,esi", "jnz~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 6, -1, 0.09385521885521886, ["test    r14d, r14d", "js      loc_ABF0"], ["test~r14d,r14d", "js~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.035016835016835016, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_ABFA"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 6, -1, 0.033080808080808086, ["test    r12d, r12d", "jns     short loc_AA15"], ["test~r12d,r12d", "jns~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 7, -1, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     edi, r14d; fd", "call    _close", "mov     [rbp+0], r12d", "jmp     short loc_AA15"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~edi,r14d", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, -1, 0.000505050505050505, ["mov     edi, r12d; fd", "xor     ebx, ebx", "call    _close", "jmp     loc_AA15"], ["mov~edi,r12d", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.00808080808080808, ["mov     [sp_0+2Ch], r14d", "xor     ebx, ebx", "jmp     loc_AA15"], ["mov~[sp_0+0],r14d", "xor~ebx,ebx", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.011363636363636364, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_AA15"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 0, 1, 5, -1, 0.045454545454545456, ["mov     rax, [rsp+0E8h+sb.st_dev]", "cmp     [p+78h], rax", "jz      loc_AB58"], ["mov~rax,[rsp+0]", "cmp~[p+0],rax", "jz~FOO"]], [1, 0, 22, 0, 1, 6, 1, 2, 4, -1, 0.07777777777777778, ["lea     rdx, [rsp+0E8h+sb]; stat_buf", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jz      loc_AAA0"], ["lea~rdx,[rsp+0]", "mov~esi,r14d", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.07272727272727274, ["cmp     [rsp+0E8h+is_dotdot], 0", "jz      short loc_ABA8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 27, 0, 0, 3, 1, 1, 7, -1, 0.08013468013468014, ["mov     ebx, [sp_0+48h]", "test    bl, 2", "jz      loc_AA5A"], ["mov~ebx,[sp_0+0]", "test~bl,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 1, 1, 5, -1, 0.13341750841750843, ["test    bh, 2", "jnz     loc_AB18"], ["test~bh,0", "jnz~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 4, -1, 0.07457912457912458, ["test    dir, dir", "jz      short loc_AA80"], ["test~dir,dir", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 7, -1, 0.024242424242424242, ["mov     ebx, [sp_0+48h]", "jmp     loc_AA80"], ["mov~ebx,[sp_0+0]", "jmp~FOO"]], [2, 0, 23, 0, 0, 8, 1, 1, 5, -1, 0.029461279461279462, ["mov     ecx, 3", "mov     rsi, rbp", "mov     rdi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_A9C0"], ["mov~ecx,0", "mov~rsi,rbp", "mov~rdi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 0, 8, -1, 0.024074074074074074, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 0, 2, 1, 1, 8, -1, 0.03181818181818182, ["and     ebx, 4", "jnz     short loc_AB48"], ["and~ebx,0", "jnz~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.00404040404040404, ["call    ___errno_location", "mov     dword ptr [rax], 2", "jmp     loc_A9DA"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 6, -1, 0.030303030303030304, ["mov     rax, [rsp+0E8h+sb.st_ino]", "cmp     [p+80h], rax", "jnz     loc_AAAF"], ["mov~rax,[rsp+0]", "cmp~[p+0],rax", "jnz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 9, -1, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_AB48"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 8, -1, 0.0196969696969697, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_AB48"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     sp_0", "pop     r14", "pop     p", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~sp_0", "pop~r14", "pop~p", "retn"]], [0, 0, 4, 0, 1, 3, 0, 1, 10, -1, 0.0, ["mov     edi, esi; fd", "call    _close", "nop     dword ptr [rax+00000000h]"], ["mov~edi,esi", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 5, 0, 0, 2, 1, 1, 9, -1, 0.012457912457912458, ["test    esi, esi", "js      short loc_AB48"], ["test~esi,esi", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 26, 0, 0, 4, 1, 1, 3, -1, 0.029292929292929294, ["test    bl, 2", "mov     r14d, r12d", "mov     [rsp+0E8h+is_dotdot], 0", "jnz     loc_A9C0"], ["test~bl,0", "mov~r14d,r12d", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 5, -1, 0.025252525252525256, ["mov     ebx, 0FFFFFFFFh"], ["mov~ebx,0"]], [0, 0, 24, 0, 0, 1, 0, 0, 5, -1, 0.007744107744107744, ["lea     rdx, dir"], ["lea~rdx,<TAG>"]], [0, 0, 5, 0, 1, 4, 0, 2, 6, -1, 0.016582491582491584, ["mov     edi, r14d; fd", "call    _fchdir", "mov     ebx, eax", "jmp     bail"], ["mov~edi,r14d", "call~FOO", "mov~ebx,eax", "jmp~FOO"]]], "func_feature": [15, 41, 56, 1, 56, 84, 4, 197, 0.02505, 2, 5], "succs": [[10, 6], [0, 2], [0, 7], [11, 22], [3], [3], [16, 13], [20, 6], [17, 5], [8, 12], [52, 4], [26], [11], [16, 30], [21], [9, 14], [27], [18, 38], [34], [41, 23], [19, 15], [26], [21], [34], [51, 35], [24, 35], [32, 37], [48, 36], [27, 29], [27], [27], [27], [27], [44, 45], [33, 53], [43, 47], [], [42, 39], [25, 55], [54, 38], [38], [34, 38], [34], [50, 31], [53], [40, 44], [31], [46, 31], [], [31], [49, 31], [], [34, 39], [28], [41], [28]], "fname": "fts_safe_changedir", "n_num": 56}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 9, 0, 1, 4, 1, 2, 0, 0, 0.004503968253968254, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_B9E6"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 17, -1, 0.012023809523809523, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_B9D0"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 79, 0, 0, 4, 1, 1, 9, -1, 0.029047619047619048, ["mov     rax, [sp_0+8]", "mov     rcx, [sp_0+20h]", "test    rax, rax", "jz      short loc_B638"], ["mov~rax,[sp_0+0]", "mov~rcx,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 80, 0, 0, 2, 0, 1, 8, -1, 0.18154761904761904, ["cmp     [rsp+158h+doadjust], 0", "jnz     loc_B5F9"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 80, 0, 1, 4, 0, 2, 10, -1, 0.005525793650793651, ["call    _closedir", "cmp     [rsp+158h+doadjust], 0", "mov     qword ptr [rbx+18h], 0", "jz      loc_B02B"], ["call~FOO", "cmp~[rsp+0],0", "mov~[word ptr [rbx+0],0", "jz~FOO"]], [1, 0, 166, 0, 1, 5, 1, 2, 27, 17, 0.010515873015873017, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_AFD2"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 166, 0, 0, 4, 1, 1, 26, 17, 0.012837301587301586, ["mov     rdx, [rsp+158h+oldaddr]", "mov     r12, [rsp+158h+var_B8]", "test    rdx, rdx", "jz      loc_AFD2"], ["mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 78, 0, 0, 1, 0, 0, 10, -1, 0.009761904761904762, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 166, 0, 0, 2, 0, 1, 19, 15, 0.11188492063492063, ["cmp     nitems, 2710h", "jz      loc_AF70"], ["cmp~nitems,0", "jz~FOO"]], [0, 0, 166, 0, 0, 2, 0, 1, 18, 16, 0.05376984126984127, ["mov     [rsp+158h+head], r13", "jmp     loc_AE00"], ["mov~[rsp+0],r13", "jmp~FOO"]], [0, 0, 166, 0, 0, 2, 0, 0, 18, 16, 0.05376984126984127, ["mov     rax, [rsp+158h+tail]", "mov     [rax+10h], r13"], ["mov~rax,[rsp+0]", "mov~[rax+0],r13"]], [3, 0, 172, 0, 1, 8, 2, 2, 12, 16, 0.02255952380952381, ["mov     rbx, [rsp+158h+compar]", "or      word ptr [rbx+72h], 1", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "mov     eax, [sp_0+48h]", "mov     qword ptr [rbx+18h], 0", "test    ah, 2", "jz      short loc_B41F"], ["mov~rbx,<TAG>", "or~[ord ptr [rbx+0],0", "mov~rdi,[rbx+0]", "call~FOO", "mov~eax,[sp_0+0]", "mov~[word ptr [rbx+0],0", "test~ah,0", "jz~FOO"]], [0, 0, 175, 0, 0, 2, 1, 1, 11, 17, 0.014583333333333334, ["test    bl, bl", "jz      short loc_B3EB"], ["test~bl,bl", "jz~FOO"]], [0, 0, 174, 0, 0, 2, 1, 1, 12, 17, 0.0007738095238095238, ["test    bpl, bpl", "jz      short loc_B3EB"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 173, 0, 1, 4, 0, 1, 13, 17, 0.0, ["call    ___errno_location", "mov     rcx, [rsp+158h+compar]", "mov     eax, [rax]", "mov     [rcx+40h], eax"], ["call~FOO", "mov~rcx,<TAG>", "mov~eax,<TAG>", "mov~[rcx+0],eax"]], [0, 0, 178, 0, 1, 7, 2, 2, 11, 17, 0.011507936507936509, ["mov     rsi, [rsp+158h+compar]; p", "xor     ecx, ecx; dir", "mov     edx, eax; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jnz     loc_B3D4"], ["mov~rsi,<TAG>", "xor~ecx,ecx", "mov~edx,eax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 10, 18, 0.02388888888888889, ["test    eax, eax", "jns     loc_B8F0"], ["test~eax,eax", "jns~FOO"]], [2, 0, 166, 1, 0, 4, 0, 1, 22, 14, 0.02369047619047619, ["add     nitems, 1", "cmp     [rsp+158h+max_entries], rbp", "mov     [rsp+158h+sort_by_inode], 1", "ja      loc_AE1C"], ["add~nitems,0", "cmp~[rsp+0],rbp", "mov~[rsp+0],0", "ja~FOO"]], [1, 0, 166, 0, 0, 4, 1, 1, 21, 15, 0.04007936507936508, ["mov     rax, [rsp+158h+compar]", "mov     r12, [rax+50h]", "test    byte ptr [r12+49h], 2", "jz      short loc_B000"], ["mov~rax,<TAG>", "mov~r12,[rax+0]", "test~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 166, 0, 0, 3, 1, 1, 24, 15, 0.025515873015873016, ["test    r14d, r14d", "mov     [rsp+158h+oldaddr], rdx", "js      loc_B000"], ["test~r14d,r14d", "mov~[rsp+0],rdx", "js~FOO"]], [0, 0, 166, 0, 1, 5, 1, 2, 25, 15, 0.014781746031746031, ["mov     rsi, [rsp+158h+buf]; buf", "mov     edi, r14d; fildes", "call    _fstatfs", "test    eax, eax", "jnz     loc_B000"], ["mov~rsi,[rsp+0]", "mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 28, 15, 0.0011706349206349206, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 11, 1, 0, 5, 1, 1, 16, -1, 0.0001984126984126984, ["add     rdx, 8", "mov     [rdx-8], r12", "mov     r12, [r12+10h]", "test    r12, r12", "jnz     short loc_B748"], ["add~rdx,0", "mov~[rdx-8]+0],r12", "mov~r12,[r12+0]", "test~r12,r12", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 15, -1, 0.0030753968253968253, ["mov     rdx, rdi", "nop     dword ptr [rax]"], ["mov~rdx,rdi", "nop~<TAG>"]], [0, 0, 82, 0, 0, 1, 0, 0, 23, -1, 0.013015873015873015, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 166, 0, 1, 10, 1, 2, 23, 16, 0.022817460317460316, ["mov     rax, [rsp+158h+compar]", "mov     rsi, [rsp+158h+entry]; entry", "mov     rdi, rdx; table", "mov     [rsp+158h+oldaddr], rdx", "mov     rax, [rax+78h]", "mov     qword ptr [rsp+158h+var_D8], rax", "call    hash_lookup", "test    rax, rax", "mov     rdx, [rsp+158h+oldaddr]", "jz      loc_B80D"], ["mov~rax,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,rdx", "mov~[rsp+0],rdx", "mov~rax,[rax+0]", "mov~[word ptr [rsp+0],rax", "call~FOO", "test~rax,rax", "mov~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 166, 0, 1, 10, 2, 2, 23, 16, 0.010734126984126985, ["mov     r8, cs:data_freer; data_freer", "lea     rdx, dev_type_hash; hasher", "lea     rcx, dev_type_compare; comparator", "xor     esi, esi; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "test    rax, rax", "mov     rdx, rax", "mov     [r12+50h], rax", "jnz     loc_AF9E"], ["mov~r8,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~rdx,rax", "mov~[r12+0],rax", "jnz~FOO"]], [1, 0, 166, 1, 0, 3, 0, 0, 20, 14, 0.10547619047619047, ["add     nitems, 1", "cmp     [rsp+158h+max_entries], nitems", "jbe     loc_B018"], ["add~nitems,0", "cmp~[rsp+0],nitems", "jbe~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 20, 15, 0.04186507936507936, ["cmp     qword ptr [sp_0+40h], 0", "jnz     loc_AE0D"], ["cmp~[word ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 26, 15, 0.030456349206349206, ["mov     [rsp+158h+sort_by_inode], 0", "jmp     loc_AE0D"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 170, 0, 1, 2, 0, 1, 14, 16, 0.0, ["call    _close", "mov     eax, [sp_0+48h]"], ["call~FOO", "mov~eax,[sp_0+0]"]], [0, 0, 171, 0, 0, 3, 1, 1, 13, 16, 0.0008333333333333333, ["mov     edi, [rsp+158h+dir_fd]; fd", "test    edi, edi", "js      short loc_B41F"], ["mov~edi,[rsp+0]", "test~edi,edi", "js~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 12, 13, 0.06373015873015873, ["mov     [rsp+158h+tail], r13"], ["mov~[rsp+0],r13"]], [0, 0, 166, 0, 0, 2, 0, 1, 11, 14, 0.008353174603174604, ["mov     r13, [rsp+158h+tail]", "jmp     loc_AE1C"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [0, 0, 81, 0, 0, 2, 0, 0, 7, -1, 0.17665674603174603, ["mov     r12, [rsp+158h+head]", "mov     r15, sp_0"], ["mov~r12,[rsp+0]", "mov~r15,sp_0"]], [0, 0, 166, 0, 0, 4, 1, 1, 6, 12, 0.2441468253968254, ["mov     rax, [rsp+158h+compar]", "mov     r13, [rax+18h]", "test    r13, r13", "jz      loc_B018"], ["mov~rax,<TAG>", "mov~r13,[rax+0]", "test~r13,r13", "jz~FOO"]], [0, 0, 78, 0, 0, 4, 0, 1, 11, -1, 0.00890873015873016, ["mov     rdx, [rax+30h]", "lea     rsi, [rax+108h]", "cmp     rdx, rsi", "jz      short loc_B680"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 78, 2, 0, 7, 1, 1, 12, -1, 0.0029365079365079364, ["sub     rdx, [rax+38h]", "mov     [rax+38h], rcx", "add     rdx, rcx", "mov     [rax+30h], rdx", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_B610"], ["sub~rdx,[rax+0]", "mov~[rax+0],rcx", "add~rdx,rcx", "mov~[rax+0],rdx", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 78, 0, 0, 4, 1, 1, 12, -1, 0.0025, ["mov     [rax+38h], rcx", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_B610"], ["mov~[rax+0],rcx", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 19, -1, 7.936507936507937e-05, ["jmp     loc_B490"], ["jmp~FOO"]], [2, 0, 166, 0, 0, 4, 0, 0, 17, 1, 0.005942460317460318, ["mov     eax, 0Bh", "cmp     edx, 0Bh", "mov     [r13+70h], ax", "jbe     loc_BBC3"], ["mov~eax,0", "cmp~edx,0", "mov~[r13+0],ax", "jbe~FOO"]], [1, 0, 166, 0, 0, 2, 1, 1, 16, 2, 0.006507936507936508, ["and     ecx, 0FBh", "jz      loc_ADB3"], ["and~ecx,0", "jz~FOO"]], [0, 0, 82, 0, 0, 4, 1, 1, 9, -1, 0.011904761904761904, ["mov     sp_0, [rsp+158h+compar]", "mov     rdi, [rbx+18h]; dirp", "test    rdi, rdi", "jz      break_without_closedir"], ["mov~sp_0,<TAG>", "mov~rdi,[rbx+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 13, -1, 0.02121031746031746, ["test    head_0, head_0", "jnz     short loc_BA49"], ["test~head_0,head_0", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 13, -1, 0.005952380952380952, ["mov     rcx, [rsp+158h+compar]", "movzx   eax, word ptr [rcx+70h]", "cmp     ax, 7", "jz      loc_BA24"], ["mov~rcx,<TAG>", "movzx~eax,[ord ptr [rcx+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 14, -1, 0.002996031746031746, ["cmp     ax, 4", "jz      loc_BA24"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 15, -1, 0.0, ["mov     esi, 6", "mov     [rcx+70h], si", "jmp     loc_BA24"], ["mov~esi,0", "mov~[rcx+0],si", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 12, -1, 0.032242063492063495, ["cmp     [rsp+158h+type], 3", "jz      loc_BAD1"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 14, -1, 0.0030753968253968253, ["jmp     loc_B490"], ["jmp~FOO"]], [0, 0, 166, 0, 0, 4, 1, 1, 22, 17, 0.034523809523809526, ["mov     rdx, [r12+50h]", "mov     r14d, [rsp+158h+dir_fd]", "test    rdx, rdx", "jz      loc_B7DB"], ["mov~rdx,[r12+0]", "mov~r14d,[rsp+0]", "test~rdx,rdx", "jz~FOO"]], [4, 0, 166, 2, 0, 22, 2, 1, 5, 13, 0.1760515873015873, ["mov     rsi, [sp_0+30h]", "lea     rax, [len_0+1]", "xor     r12d, r12d", "mov     [rsp+158h+sort_by_inode], 0", "mov     [rsp+158h+doadjust], 0", "xor     ebp, ebp", "mov     [rsp+158h+len], rax", "mov     [rsp+158h+tail], 0", "mov     rbx, sp_0", "sub     rsi, len_0", "mov     len_0, [rsp+158h+compar]", "mov     [rsp+158h+head], r12", "mov     [rsp+158h+maxlen], rsi", "mov     rax, [rax+58h]", "mov     [rsp+158h+oldaddr], rax", "add     rax, 1", "mov     [rsp+158h+level], rax", "lea     level_0, [rsp+158h+var_B8]", "mov     [rsp+158h+buf], rax", "lea     rax, [rsp+158h+var_D8]", "mov     [rsp+158h+entry], rax", "jmp     loc_AE21"], ["mov~rsi,[sp_0+0]", "lea~rax,[len_0+0]", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~rbx,sp_0", "sub~rsi,len_0", "mov~len_0,<TAG>", "mov~[rsp+0],r12", "mov~[rsp+0],rsi", "mov~rax,[rax+0]", "mov~[rsp+0],rax", "add~rax,0", "mov~[rsp+0],rax", "lea~level_0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 5.9523809523809524e-05, ["mov     rbx, [rsp+158h+compar]", "jmp     loc_B6CE"], ["mov~rbx,<TAG>", "jmp~FOO"]], [2, 0, 6, 0, 1, 6, 0, 2, 2, -1, 0.0002380952380952381, ["mov     rbx, [rsp+158h+compar]", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "cmp     [rsp+158h+type], 3", "mov     qword ptr [rbx+18h], 0", "jz      loc_BA10"], ["mov~rbx,<TAG>", "mov~rdi,[rbx+0]", "call~FOO", "cmp~[rsp+0],0", "mov~[word ptr [rbx+0],0", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 1, 1, 9, -1, 0.1733829365079365, ["test    byte ptr [sp_0+48h], 4", "jz      short loc_B050"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 11, -1, 0.0289484126984127, ["cmp     qword ptr [rax+58h], 0", "js      loc_B02B"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 16, 0.010843253968253969, ["cmp     [rsp+158h+type], 3", "jnz     loc_B8A0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 187, 0, 1, 5, 1, 2, 9, 17, 0.008472222222222223, ["mov     rdi, rsi; p", "mov     esi, eax; dir_fd", "call    leaf_optimization_0", "test    eax, eax", "jnz     loc_BB03"], ["mov~rdi,rsi", "mov~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 166, 0, 0, 3, 0, 1, 18, 19, 0.0024057539682539684, ["mov     dword ptr [r13+90h], 0", "mov     eax, 1", "jmp     loc_ADDC"], ["mov~[word ptr [r13+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 11, 0, 1, 9, 0, 2, 13, -1, 0.00021825396825396825, ["mov     r15, sp_0", "mov     r12, [rsp+158h+head]", "mov     sp_0, r13", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     rax, [rsp+158h+p_saved_errno]", "mov     qword ptr [sp_0+20h], 0", "mov     r13d, [rax]", "jmp     mem1"], ["mov~r15,sp_0", "mov~r12,[rsp+0]", "mov~sp_0,r13", "mov~rdi,[sp_0+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[word ptr [sp_0+0],0", "mov~r13d,<TAG>", "jmp~FOO"]], [0, 0, 166, 0, 1, 7, 1, 2, 12, 10, 0.01373015873015873, ["mov     rdi, oldaddr_0; ptr", "mov     [sp_0+30h], rsi", "mov     [rsp+158h+oldaddr], oldaddr_0", "call    _realloc", "test    rax, rax", "mov     rdx, [rsp+158h+oldaddr]", "jz      loc_B690"], ["mov~rdi,oldaddr_0", "mov~[sp_0+0],rsi", "mov~[rsp+0],oldaddr_0", "call~FOO", "test~rax,rax", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 65, 0, 0, 3, 0, 1, 10, -1, 0.008095238095238095, ["mov     rax, [rsp+158h+len]", "cmp     [sp_0+30h], rax", "jz      short loc_B042"], ["mov~rax,[rsp+0]", "cmp~[sp_0+0],rax", "jz~FOO"]], [1, 0, 182, 0, 0, 4, 1, 1, 11, 20, 0.0003869047619047619, ["mov     eax, [rsp+158h+dir_fd]", "xor     ebp, ebp", "mov     ebx, 1", "jmp     loc_B3C1"], ["mov~eax,[rsp+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 11, -1, 0.0019742063492063492, ["test    nitems, nitems", "jnz     short loc_B048"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 63, 1, 0, 1, 0, 0, 11, -1, 0.0019742063492063492, ["sub     [rsp+158h+cp], 1"], ["sub~[rsp+0],0"]], [0, 0, 9, 0, 0, 1, 0, 0, 16, -1, 9.92063492063492e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [0, 0, 9, 0, 1, 4, 1, 2, 15, -1, 0.004652777777777777, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_BA46"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 9, 0, 2, 5, 1, 3, 15, -1, 0.0016964285714285714, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      loc_B490"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [1, 0, 191, 0, 0, 4, 0, 1, 10, 17, 0.0, ["mov     r10d, 2", "mov     [rbx], rbx", "mov     [rbx+70h], r10w", "jmp     loc_B37F"], ["mov~r10d,0", "mov~<TAG>,rbx", "mov~[rbx+0],r10w", "jmp~FOO"]], [0, 0, 192, 0, 1, 6, 1, 2, 9, 17, 0.03757936507936508, ["mov     rbx, [rsp+158h+compar]", "mov     rdi, [sp_0+58h]; state", "lea     rsi, [rbx+78h]; sb", "call    cycle_check", "test    al, al", "jz      loc_B37F"], ["mov~rbx,<TAG>", "mov~rdi,[sp_0+0]", "lea~rsi,[rbx+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 73, 0, 0, 2, 0, 1, 10, -1, 0.023214285714285715, ["mov     rax, head_0", "jmp     short loc_B643"], ["mov~rax,head_0", "jmp~FOO"]], [0, 0, 73, 0, 0, 1, 0, 0, 14, -1, 0.005515873015873016, ["mov     rax, rdx"], ["mov~rax,rdx"]], [0, 0, 11, 0, 0, 6, 0, 1, 10, -1, 0.018700396825396825, ["mov     r15, sp_0", "mov     sp_0, rax", "mov     rax, [rsp+158h+p_saved_errno]", "mov     r12, [rsp+158h+head]", "mov     r13d, [rax]", "jmp     mem1"], ["mov~r15,sp_0", "mov~sp_0,rax", "mov~rax,[rsp+0]", "mov~r12,[rsp+0]", "mov~r13d,<TAG>", "jmp~FOO"]], [1, 0, 166, 0, 2, 11, 2, 3, 9, 9, 0.12483134920634921, ["lea     rsi, [r12+13h]", "mov     rdi, rsi; s", "mov     [rsp+158h+oldaddr], rsi", "call    _strlen", "lea     rdi, [rax+110h]", "mov     r14, rax", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    _malloc", "test    rax, rax", "mov     r13, rax", "jz      loc_B438"], ["lea~rsi,[r12+0]", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "lea~rdi,[rax+0]", "mov~r14,rax", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 0, 12, -1, 0.0036904761904761906, ["mov     rax, [rsp+158h+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 166, 0, 2, 8, 1, 3, 7, 11, 0.14713293650793652, ["call    ___errno_location", "mov     rdi, r13; dirp", "mov     dword ptr [rax], 0", "mov     [rsp+158h+p_saved_errno], rax", "call    _readdir", "test    rax, rax", "mov     r12, rax", "jz      loc_B598"], ["call~FOO", "mov~rdi,r13", "mov~<TAG>,0", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [0, 0, 166, 0, 1, 6, 1, 2, 16, 18, 0.07863095238095238, ["xor     edx, edx; follow", "mov     rsi, r13; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [r13+70h], ax", "jmp     loc_ADE3"], ["xor~edx,edx", "mov~rsi,r13", "mov~rdi,sp_0", "call~FOO", "mov~[r13+0],ax", "jmp~FOO"]], [1, 0, 166, 0, 0, 2, 1, 1, 15, 4, 0.07773809523809523, ["test    ah, 4", "jz      loc_B240"], ["test~ah,0", "jz~FOO"]], [3, 0, 166, 1, 0, 6, 1, 1, 15, 3, 0.017123015873015873, ["movzx   edx, byte ptr [r12+12h]", "and     eax, 18h", "mov     ecx, edx", "sub     edx, 1", "cmp     eax, 18h", "jz      loc_B208"], ["movzx~edx,[yte ptr [r12+0]", "and~eax,0", "mov~ecx,edx", "sub~edx,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 61, 0, 0, 2, 0, 1, 10, -1, 0.16604166666666667, ["cmp     [rsp+158h+dp], 0", "jnz     short loc_B08F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 199, 0, 1, 3, 0, 2, 8, 19, 0.003928571428571429, ["mov     rdi, rax; ptr", "call    free", "jmp     loc_B500"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 200, 0, 1, 8, 1, 2, 7, 20, 0.0003968253968253968, ["mov     rax, [rsp+158h+compar]", "mov     rdi, [sp_0+58h]; table", "lea     rsi, [rsp+158h+var_D8]; entry", "movdqu  xmm0, xmmword ptr [rax+78h]", "movaps  [rsp+158h+var_D8], xmm0", "call    hash_delete", "test    rax, rax", "jz      loc_BBBE"], ["mov~rax,<TAG>", "mov~rdi,[sp_0+0]", "lea~rsi,[rsp+0]", "movdqu~xmm0,[mmword ptr [rax+0]", "movaps~[rsp+0],xmm0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 166, 0, 0, 2, 1, 1, 8, 10, 0.13110119047619048, ["test    byte ptr [sp_0+48h], 20h", "jnz     short loc_AE66"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 73, 0, 0, 4, 0, 1, 12, -1, 0.010436507936507937, ["mov     rdx, [rax+30h]", "lea     rsi, [rax+108h]", "cmp     rdx, rsi", "jz      short loc_B669"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 11, -1, 0.03636904761904762, ["cmp     [rsp+158h+descend], 0", "jz      short loc_B08F"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 16, -1, 7.936507936507937e-05, ["jmp     loc_B490"], ["jmp~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 9, 10, 0.009424603174603174, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jz      loc_B1E8"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [2, 0, 216, 1, 0, 6, 1, 1, 3, 21, 0.0, ["mov     rcx, [rsp+158h+compar]", "xor     edx, edx", "cmp     qword ptr [rcx+58h], 0", "setnz   dl", "shl     edx, 11h", "jmp     loc_B32F"], ["mov~rcx,<TAG>", "xor~edx,edx", "cmp~[word ptr [rcx+0],0", "setnz~dl", "shl~edx,0", "jmp~FOO"]], [2, 0, 217, 0, 0, 3, 1, 1, 2, 21, 3.968253968253968e-05, ["test    al, 1", "mov     edx, 20000h; extra_flags", "jnz     loc_B450"], ["test~al,0", "mov~edx,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 14, -1, 0.01242063492063492, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_BA30"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 12, -1, 0.03380952380952381, ["cmp     [rsp+158h+type], 1", "jz      short loc_B06B"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 73, 2, 0, 3, 0, 0, 13, -1, 0.0, ["sub     rdx, [rax+38h]", "add     rdx, rcx", "mov     [rax+30h], rdx"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx"]], [0, 0, 4, 0, 0, 1, 0, 1, 14, -1, 7.936507936507937e-05, ["jmp     short loc_B2A0"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 13, -1, 0.003521825396825397, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_B2F2"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 58, 0, 0, 2, 1, 1, 13, -1, 0.0006746031746031745, ["test    nitems, nitems", "jnz     short loc_B098"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 225, 1, 0, 18, 2, 1, 0, 18, 0.0, ["push    r15", "push    r14", "mov     r15, sp_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 128h", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "mov     rax, [sp_0]", "mov     [rsp+158h+type], esi", "mov     [rsp+158h+compar], rax", "mov     cur, [cur+18h]", "test    rax, rax", "mov     [rsp+158h+dp], rax", "jz      loc_B318"], ["push~r15", "push~r14", "mov~r15,sp_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~[rsp+0],esi", "mov~<TAG>,rax", "mov~cur,[cur+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 13, -1, 0.02908730158730159, ["mov     rax, [rsp+158h+compar]", "cmp     qword ptr [rax+58h], 0", "jnz     loc_B8CE"], ["mov~rax,<TAG>", "cmp~[word ptr [rax+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 202, 0, 0, 3, 0, 1, 9, 20, 0.000753968253968254, ["mov     rdx, [sp_0+58h]", "cmp     qword ptr [rdx+10h], 0", "jz      loc_BBBE"], ["mov~rdx,[sp_0+0]", "cmp~[word ptr [rdx+0],0", "jz~FOO"]], [0, 0, 166, 0, 0, 2, 0, 1, 29, 18, 0.004603174603174603, ["cmp     r14, rax", "jnz     loc_BBBE"], ["cmp~r14,rax", "jnz~FOO"]], [0, 0, 73, 0, 0, 2, 0, 1, 14, -1, 0.0, ["mov     rdx, [rax+8]", "jmp     short loc_B640"], ["mov~rdx,[rax+0]", "jmp~FOO"]], [0, 0, 73, 0, 0, 4, 1, 1, 13, -1, 0.007976190476190477, ["mov     rdx, [rax+10h]", "mov     [rax+38h], rcx", "test    rdx, rdx", "jnz     short loc_B640"], ["mov~rdx,[rax+0]", "mov~[rax+0],rcx", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 166, 0, 1, 10, 1, 2, 28, 19, 0.008412698412698413, ["mov     rax, [rsp+158h+compar]", "mov     rdx, [rsp+158h+oldaddr]", "mov     rsi, r14; entry", "mov     rax, [rax+78h]", "mov     rdi, rdx; table", "mov     [r14+8], r12", "mov     [r14], rax", "call    hash_insert", "test    rax, rax", "jz      loc_BBAC"], ["mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,r14", "mov~rax,[rax+0]", "mov~rdi,rdx", "mov~[r14+0],r12", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 180, 0, 1, 7, 1, 2, 10, 19, 0.0, ["mov     edi, eax; fd", "mov     edx, 3", "mov     esi, 406h; action", "xor     eax, eax", "call    rpl_fcntl", "mov     [rsp+158h+dir_fd], eax", "jmp     loc_B3CC"], ["mov~edi,eax", "mov~edx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 181, 0, 0, 2, 1, 1, 9, 19, 0.018134920634920636, ["test    byte ptr [sp_0+49h], 2", "jnz     loc_BA6A"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [0, 0, 176, 0, 1, 5, 1, 2, 1, 17, 0.003472222222222222, ["mov     sp_0, dp_0; dirp", "call    _dirfd", "test    eax, eax", "mov     [rsp+158h+dir_fd], eax", "js      loc_B470"], ["mov~sp_0,dp_0", "call~FOO", "test~eax,eax", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 55, 0, 1, 4, 1, 1, 14, -1, 0.012232142857142856, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "setnz   al"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al"]], [3, 0, 11, 0, 1, 9, 0, 1, 12, -1, 0.000376984126984127, ["mov     rdi, oldaddr_0; ptr", "mov     r12, [rsp+158h+head]", "mov     r15, sp_0", "call    free", "mov     rax, [rsp+158h+p_saved_errno]", "mov     sp_0, r13", "mov     qword ptr [sp_0+20h], 0", "mov     r13d, 24h ; '$'", "mov     dword ptr [rax], 24h ; '$'"], ["mov~rdi,oldaddr_0", "mov~r12,[rsp+0]", "mov~r15,sp_0", "call~FOO", "mov~rax,[rsp+0]", "mov~sp_0,r13", "mov~[word ptr [sp_0+0],0", "mov~r13d,0", "mov~<TAG>,0"]], [0, 0, 166, 1, 0, 6, 0, 1, 11, 11, 0.015257936507936509, ["mov     rax, [sp_0+30h]", "mov     rcx, [rsp+158h+len]", "lea     rsi, [rcx+rax+101h]", "add     rsi, d_namelen; size", "cmp     rax, rsi", "ja      loc_B260"], ["mov~rax,[sp_0+0]", "mov~rcx,[rsp+0]", "lea~rsi,[rcx+0]", "add~rsi,d_namelen", "cmp~rax,rsi", "ja~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 15, -1, 0.02373015873015873, ["test    al, al", "jnz     loc_B9B0"], ["test~al,al", "jnz~FOO"]], [1, 0, 55, 0, 1, 8, 1, 2, 14, -1, 0.012232142857142856, ["mov     rsi, [rax+8]; p", "lea     rcx, dir; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "setnz   al", "jmp     loc_B087"], ["mov~rsi,[rax+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 172, 0, 0, 2, 0, 1, 2, 16, 0.006646825396825397, ["cmp     qword ptr [sp_0+40h], 0", "jz      loc_B7C0"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 11, 10, 0.0014285714285714286, ["cmp     word ptr [rax+14h], 2Eh ; '.'", "jnz     loc_AE66"], ["cmp~[ord ptr [rax+0],0", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 11, -1, 0.1300892857142857, ["test    nitems, nitems", "jz      loc_BA19"], ["test~nitems,nitems", "jz~FOO"]], [1, 0, 170, 0, 0, 1, 0, 0, 3, 16, 5.9523809523809524e-05, ["mov     [rsp+158h+max_entries], 0FFFFFFFFFFFFFFFFh"], ["mov~[rsp+0],0"]], [0, 0, 166, 0, 0, 2, 0, 1, 30, 17, 0.009682539682539683, ["mov     r12, [rsp+158h+var_B8]", "jmp     loc_AFD2"], ["mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 166, 0, 1, 3, 0, 2, 29, 18, 0.0026785714285714286, ["mov     rdi, r14; ptr", "call    free", "jmp     loc_B88D"], ["mov~rdi,r14", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 1, 2, 11, -1, 0.017668650793650792, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jnz     short loc_B2F5"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 12, -1, 0.0040575396825396825, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 14, -1, 0.0012103174603174604, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_BB52"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 13, -1, 0.006884920634920635, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_BB40"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 12, -1, 0.09419642857142857, ["cmp     [rsp+158h+sort_by_inode], 0", "jnz     loc_B6F0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 169, 0, 0, 3, 0, 0, 4, 15, 0.02011904761904762, ["mov     eax, [sp_0+48h]", "mov     rcx, [rsp+158h+compar]", "mov     [rsp+158h+descend], 1"], ["mov~eax,[sp_0+0]", "mov~rcx,<TAG>", "mov~[rsp+0],0"]], [0, 0, 170, 0, 0, 1, 0, 1, 12, 16, 0.014146825396825397, ["jmp     loc_AC9C"], ["jmp~FOO"]], [1, 0, 207, 0, 0, 2, 1, 1, 6, 20, 0.0031547619047619046, ["test    eax, 102h", "jnz     loc_BA86"], ["test~eax,0", "jnz~FOO"]], [1, 0, 208, 0, 0, 3, 1, 1, 5, 17, 0.016051587301587303, ["mov     eax, [sp_0+48h]", "test    ah, 1", "jnz     loc_B4A0"], ["mov~eax,[sp_0+0]", "test~ah,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 13, -1, 0.04425595238095238, ["mov     rcx, [sp_0+40h]", "test    rcx, rcx", "jz      loc_B168"], ["mov~rcx,[sp_0+0]", "test~rcx,rcx", "jz~FOO"]], [1, 0, 169, 0, 0, 4, 0, 1, 7, 15, 0.09896825396825397, ["mov     [rsp+158h+descend], 0", "mov     eax, [sp_0+48h]", "mov     rcx, [rsp+158h+compar]", "jmp     loc_ACA9"], ["mov~[rsp+0],0", "mov~eax,[sp_0+0]", "mov~rcx,<TAG>", "jmp~FOO"]], [4, 0, 190, 1, 0, 7, 1, 1, 6, 16, 0.09301587301587301, ["cmp     qword ptr [sp_0+40h], 1", "sbb     rax, rax", "and     eax, 186A1h", "sub     rax, 1", "cmp     [rsp+158h+type], 2", "mov     [rsp+158h+max_entries], rax", "jz      loc_B8A0"], ["cmp~[word ptr [sp_0+0],0", "sbb~rax,rax", "and~eax,0", "sub~rax,0", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 4, -1, 0.0005952380952380953, ["cmp     [rsp+158h+type], 3", "mov     rbx, rsi", "jnz     loc_B490"], ["cmp~[rsp+0],0", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 213, 0, 1, 6, 1, 2, 3, 19, 0.021984126984126984, ["lea     rcx, [rsp+158h+dir_fd]; pnew_fd", "call    opendirat", "mov     rsi, [rsp+158h+compar]; p", "test    rax, rax", "mov     [rsi+18h], rax", "jz      loc_B6C0"], ["lea~rcx,[rsp+0]", "call~FOO", "mov~rsi,<TAG>", "test~rax,rax", "mov~[rsi+0],rax", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 14, -1, 0.03595238095238095, ["cmp     nitems, 1", "jz      loc_B168"], ["cmp~nitems,0", "jz~FOO"]], [0, 0, 204, 0, 0, 4, 1, 1, 7, 19, 0.0064682539682539685, ["mov     rcx, [rsp+158h+compar]", "mov     rax, [rcx+8]", "test    rax, rax", "jz      short loc_B500"], ["mov~rcx,<TAG>", "mov~rax,[rcx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 191, 0, 1, 6, 1, 2, 5, 17, 0.013134920634920635, ["mov     rbx, rsi", "xor     edx, edx; follow", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [rbx+70h], ax", "jmp     loc_B37F"], ["mov~rbx,rsi", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "mov~[rbx+0],ax", "jmp~FOO"]], [1, 0, 210, 0, 0, 2, 0, 1, 4, 18, 0.02533730158730159, ["cmp     word ptr [rsi+70h], 0Bh", "jz      loc_B8B8"], ["cmp~[ord ptr [rsi+0],0", "jz~FOO"]], [1, 0, 188, 0, 0, 3, 0, 1, 8, 18, 0.005595238095238095, ["mov     rsi, [rsp+158h+compar]", "cmp     qword ptr [rsi+88h], 2", "jnz     loc_B3B4"], ["mov~rsi,<TAG>", "cmp~[word ptr [rsi+0],0", "jnz~FOO"]], [2, 0, 189, 0, 0, 5, 1, 1, 7, 19, 0.010158730158730159, ["mov     edx, [sp_0+48h]", "mov     eax, [rsp+158h+dir_fd]", "and     edx, 38h", "cmp     edx, 18h", "jz      loc_B90D"], ["mov~edx,[sp_0+0]", "mov~eax,[rsp+0]", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 203, 0, 0, 2, 0, 1, 8, 19, 0.0008928571428571428, ["cmp     qword ptr [rax+58h], 0", "js      short loc_B500"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 218, 0, 0, 4, 1, 1, 1, 21, 0.0009523809523809524, ["mov     eax, [sp_0+48h]", "mov     edx, eax", "and     edx, 10h", "jz      short loc_B32F"], ["mov~eax,[sp_0+0]", "mov~edx,eax", "and~edx,0", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 15, -1, 0.033174603174603176, ["cmp     nitems, [sp_0+38h]", "mov     rdi, [sp_0+10h]; ptr", "jbe     short loc_B104"], ["cmp~nitems,[sp_0+0]", "mov~rdi,[sp_0+0]", "jbe~FOO"]], [3, 0, 168, 0, 0, 8, 1, 1, 4, 14, 0.17152777777777778, ["mov     rbx, [rcx+48h]", "mov     rcx, [rcx+38h]", "mov     [rsp+158h+cp], 0", "cmp     byte ptr [rcx+rbx-1], 2Fh ; '/'", "lea     rdx, [rbx-1]", "cmovz   rbx, rdx", "test    al, 4", "jz      short loc_ACDE"], ["mov~rbx,[rcx+0]", "mov~rcx,[rcx+0]", "mov~[rsp+0],0", "cmp~[yte ptr [rcx+0],0", "lea~rdx,[rbx-1]+0]", "cmovz~rbx,rdx", "test~al,0", "jz~FOO"]], [2, 0, 169, 0, 0, 4, 0, 1, 13, 15, 0.03017857142857143, ["mov     rcx, [rsp+158h+compar]", "mov     [rsp+158h+descend], 0", "mov     qword ptr [rcx+18h], 0", "jmp     loc_ACA9"], ["mov~rcx,<TAG>", "mov~[rsp+0],0", "mov~[word ptr [rcx+0],0", "jmp~FOO"]], [2, 0, 169, 0, 0, 5, 0, 1, 3, 15, 0.009880952380952381, ["mov     [rsp+158h+max_entries], 186A0h", "mov     [rsp+158h+descend], 1", "mov     eax, [sp_0+48h]", "mov     rcx, [rsp+158h+compar]", "jmp     loc_ACA9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~eax,[sp_0+0]", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 10, -1, 0.0008928571428571428, ["call    ___errno_location", "xor     r12d, r12d", "mov     dword ptr [rax], 0Ch", "jmp     loc_B168"], ["call~FOO", "xor~r12d,r12d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 195, 0, 1, 5, 1, 2, 9, 18, 0.0022222222222222222, ["mov     edi, 18h; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_BABE"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 193, 0, 1, 4, 1, 2, 11, 18, 0.000496031746031746, ["mov     rdi, rbx; ptr", "call    free", "test    rbp, rbp", "jz      loc_BABE"], ["mov~rdi,rbx", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [3, 0, 3, 0, 1, 11, 2, 2, 13, -1, 0.002113095238095238, ["mov     rbx, [rsp+158h+compar]", "xor     r12d, r12d", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "mov     rax, [rsp+158h+p_saved_errno]", "mov     r9d, 7", "mov     qword ptr [rbx+18h], 0", "mov     [rbx+70h], r9w", "or      dword ptr [sp_0+48h], 2000h", "mov     [rax], r13d", "jmp     loc_B168"], ["mov~rbx,<TAG>", "xor~r12d,r12d", "mov~rdi,[rbx+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~r9d,0", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],r9w", "or~[word ptr [sp_0+0],0", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 9, 0, 2, 5, 1, 3, 13, -1, 0.0013194444444444445, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      short loc_B2A0"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 201, 0, 0, 3, 0, 1, 10, 19, 0.0044444444444444444, ["mov     rsi, [rcx+80h]", "cmp     [rdx], rsi", "jnz     short loc_B500"], ["mov~rsi,[rcx+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 0, 167, 1, 0, 5, 0, 0, 5, 14, 0.0, ["mov     rax, [sp_0+20h]", "add     rax, len_0", "lea     rcx, [cp_0+1]", "mov     byte ptr [cp_0], 2Fh ; '/'", "mov     [rsp+158h+cp], rcx"], ["mov~rax,[sp_0+0]", "add~rax,len_0", "lea~rcx,[cp_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rcx"]], [1, 0, 13, 0, 0, 6, 0, 1, 16, -1, 0.012202380952380952, ["lea     rax, [nitems+28h]", "mov     rdx, 1FFFFFFFFFFFFFFFh", "mov     [rsp+158h+compar], rcx", "cmp     rax, rdx", "mov     [sp_0+38h], rax", "ja      loc_B96A"], ["lea~rax,[nitems+0]", "mov~rdx,0", "mov~<TAG>,rcx", "cmp~rax,rdx", "mov~[sp_0+0],rax", "ja~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 7.936507936507937e-05, ["mov     ebp, 4", "mov     [rbx+70h], bp", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+40h], eax", "jmp     loc_B490"], ["mov~ebp,0", "mov~[rbx+0],bp", "call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "jmp~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 11, 19, 0.0002777777777777778, ["mov     rsi, [rcx+78h]", "cmp     [rdx+8], rsi", "jnz     short loc_B500"], ["mov~rsi,[rcx+0]", "cmp~[rdx+0],rsi", "jnz~FOO"]], [2, 0, 85, 0, 0, 3, 0, 1, 10, -1, 0.001954365079365079, ["cmp     [rsp+158h+dp], 0", "mov     eax, 4", "jnz     loc_B9A2"], ["cmp~[rsp+0],0", "mov~eax,0", "jnz~FOO"]], [0, 0, 86, 0, 0, 4, 1, 1, 9, -1, 0.006726190476190476, ["mov     rsi, [rsp+158h+compar]", "test    nitems, nitems", "mov     [rsi+40h], eax", "jnz     loc_B9A2"], ["mov~rsi,<TAG>", "test~nitems,nitems", "mov~[rsi+0],eax", "jnz~FOO"]], [2, 0, 9, 1, 1, 9, 0, 2, 15, -1, 0.015892857142857143, ["lea     rcx, fts_compare_ino; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     rdi, [sp_0+10h]", "mov     rdx, nitems", "sub     rdx, 1", "mov     r12, [rdi]", "jz      loc_BAFB"], ["lea~rcx,<TAG>", "mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~rdi,[sp_0+0]", "mov~rdx,nitems", "sub~rdx,0", "mov~r12,<TAG>", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 14, -1, 0.024523809523809524, ["test    head_0, head_0", "jz      short loc_B75A"], ["test~head_0,head_0", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 12, -1, 0.009404761904761905, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_B2E0"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 14, -1, 9.92063492063492e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [6, 0, 166, 0, 1, 17, 0, 2, 10, 8, 0.10498015873015873, ["lea     r15, [rax+108h]", "mov     rsi, [rsp+158h+oldaddr]; src", "mov     rdx, d_namelen; n", "mov     rdi, r15; dest", "call    _memcpy", "cmp     [rsp+158h+maxlen], d_namelen", "mov     rdx, [sp_0+20h]", "mov     byte ptr [r13+d_namelen+108h], 0", "mov     [r13+60h], d_namelen", "mov     [r13+50h], sp_0", "mov     dword ptr [r13+40h], 0", "mov     [r13+38h], rdx", "mov     qword ptr [r13+18h], 0", "mov     dword ptr [r13+72h], 30000h", "mov     qword ptr [r13+20h], 0", "mov     qword ptr [r13+28h], 0", "ja      loc_AD50"], ["lea~r15,[rax+0]", "mov~rsi,[rsp+0]", "mov~rdx,d_namelen", "mov~rdi,r15", "call~FOO", "cmp~[rsp+0],d_namelen", "mov~rdx,[sp_0+0]", "mov~[yte ptr [r13+0],0", "mov~[r13+0],d_namelen", "mov~[r13+0],sp_0", "mov~[word ptr [r13+0],0", "mov~[r13+0],rdx", "mov~[word ptr [r13+0],0", "mov~[word ptr [r13+0],0", "mov~[word ptr [r13+0],0", "mov~[word ptr [r13+0],0", "ja~FOO"]], [0, 0, 199, 0, 0, 5, 0, 0, 12, 19, 0.0, ["mov     rcx, [rax+78h]", "mov     rax, [rax+80h]", "mov     [rdx+8], rcx", "mov     [rdx], rax", "nop     word ptr [rax+rax+00000000h]"], ["mov~rcx,[rax+0]", "mov~rax,[rax+0]", "mov~[rdx+0],rcx", "mov~<TAG>,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 12, 0, 1, 6, 1, 2, 17, -1, 0.00623015873015873, ["lea     rsi, ds:0[rax*8]; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "mov     rcx, [rsp+158h+compar]; compar", "jz      loc_B966"], ["lea~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rdi,rax", "mov~rcx,<TAG>", "jz~FOO"]], [0, 0, 166, 1, 0, 4, 0, 1, 14, 8, 0.015575396825396826, ["mov     rax, [sp_0+30h]", "sub     rax, [rsp+158h+len]", "mov     [rsp+158h+maxlen], rax", "jmp     loc_AD50"], ["mov~rax,[sp_0+0]", "sub~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 0, 1, 13, 9, 0.012361111111111111, ["cmp     rdx, rax", "mov     [sp_0+20h], rax", "jz      short loc_AF54"], ["cmp~rdx,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [2, 0, 166, 0, 0, 3, 1, 1, 14, 9, 0.0021825396825396826, ["test    byte ptr [sp_0+48h], 4", "mov     [rsp+158h+doadjust], 1", "jz      short loc_AF54"], ["test~[yte ptr [sp_0+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 166, 1, 0, 2, 0, 0, 15, 9, 0.0, ["add     rax, [rsp+158h+len]", "mov     [rsp+158h+cp], rax"], ["add~rax,[rsp+0]", "mov~[rsp+0],rax"]], [0, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0035317460317460317, ["mov     rax, r12", "jmp     loc_B7A2"], ["mov~rax,r12", "jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 18, -1, 0.0002380952380952381, ["mov     [sp_0+10h], rax"], ["mov~[sp_0+0],rax"]], [0, 0, 18, 0, 0, 5, 0, 0, 13, -1, 0.044642857142857144, ["cmp     nitems, [sp_0+38h]", "lea     rax, fts_compare_ino", "mov     rdi, [sp_0+10h]; ptr", "mov     [sp_0+40h], rax", "jbe     short loc_B73D"], ["cmp~nitems,[sp_0+0]", "lea~rax,<TAG>", "mov~rdi,[sp_0+0]", "mov~[sp_0+0],rax", "jbe~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 16, -1, 0.015535714285714286, ["test    head_0, head_0", "jz      short loc_B122"], ["test~head_0,head_0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 17, -1, 0.003115079365079365, ["mov     rdx, rdi", "nop     dword ptr [rax+00h]"], ["mov~rdx,rdi", "nop~[word ptr [rax+0]"]], [1, 0, 166, 0, 0, 5, 0, 1, 18, 0, 0.0024057539682539684, ["lea     rax, CSWTCH_53", "mov     eax, [rax+rdx*4]", "mov     [r13+90h], eax", "mov     eax, 1", "jmp     loc_ADDC"], ["lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[r13+0],eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 198, 0, 1, 7, 2, 2, 8, 18, 0.036626984126984126, ["mov     r14, [rsp+158h+compar]", "xor     edx, edx; follow", "mov     rdi, sp_0; sp_0", "mov     rsi, r14; p", "call    fts_stat", "test    dword ptr [sp_0+48h], 102h", "jz      loc_B93A"], ["mov~r14,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "mov~rsi,r14", "call~FOO", "test~[word ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 17, 0, 0, 5, 0, 1, 14, -1, 0.01503968253968254, ["lea     rax, [nitems+28h]", "mov     rdx, 1FFFFFFFFFFFFFFFh", "cmp     rax, rdx", "mov     [sp_0+38h], rax", "ja      loc_B988"], ["lea~rax,[nitems+0]", "mov~rdx,0", "cmp~rax,rdx", "mov~[sp_0+0],rax", "ja~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 12, -1, 0.01369047619047619, ["mov     r12, [rsp+158h+head]", "mov     rdi, r13; ptr", "mov     r15, sp_0", "call    free", "test    r12, r12", "jnz     short loc_BB55"], ["mov~r12,[rsp+0]", "mov~rdi,r13", "mov~r15,sp_0", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 166, 1, 0, 3, 0, 0, 11, 7, 0.10744047619047618, ["mov     rcx, d_namelen", "add     rcx, [rsp+158h+len]", "jb      loc_BB20"], ["mov~rcx,d_namelen", "add~rcx,[rsp+0]", "jb~FOO"]], [1, 0, 7, 1, 0, 5, 1, 1, 18, -1, 0.00011904761904761905, ["add     rdx, 8", "mov     [rdx-8], r12", "mov     r12, [r12+10h]", "test    r12, r12", "jnz     short loc_B110"], ["add~rdx,0", "mov~[rdx-8]+0],r12", "mov~r12,[r12+0]", "test~r12,r12", "jnz~FOO"]], [0, 0, 87, 0, 0, 6, 1, 1, 8, -1, 0.01488095238095238, ["mov     rax, [rsp+158h+p_saved_errno]", "mov     r12, [rsp+158h+head]", "mov     r15, sp_0", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_B5D0"], ["mov~rax,[rsp+0]", "mov~r12,[rsp+0]", "mov~r15,sp_0", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 83, 0, 0, 1, 0, 0, 11, -1, 0.0049404761904761904, ["mov     [rsi+70h], ax"], ["mov~[rsi+0],ax"]], [0, 0, 16, 0, 1, 5, 1, 2, 15, -1, 0.00621031746031746, ["lea     rsi, ds:0[rax*8]; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "jz      loc_B984"], ["lea~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [0, 0, 183, 0, 0, 2, 0, 1, 10, 21, 0.00014880952380952382, ["mov     eax, [rsp+158h+dir_fd]", "jmp     loc_B3B4"], ["mov~eax,[rsp+0]", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 16, -1, 0.00035714285714285714, ["mov     [sp_0+10h], rax"], ["mov~[sp_0+0],rax"]], [0, 0, 4, 0, 0, 1, 0, 1, 13, -1, 0.0026587301587301586, ["jmp     short loc_BB71"], ["jmp~FOO"]], [0, 0, 9, 0, 2, 5, 1, 3, 18, -1, 0.0016468253968253967, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      loc_B490"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [2, 0, 10, 0, 0, 6, 2, 1, 16, -1, 0.017857142857142856, ["mov     rax, [rsp+158h+compar]", "mov     edi, 7", "mov     [rax+70h], di", "or      dword ptr [sp_0+48h], 2000h", "test    head_0, head_0", "jnz     short loc_B9E9"], ["mov~rax,<TAG>", "mov~edi,0", "mov~[rax+0],di", "or~[word ptr [sp_0+0],0", "test~head_0,head_0", "jnz~FOO"]], [2, 1, 215, 0, 0, 6, 1, 1, 2, 20, 0.01369047619047619, ["mov     rcx, [rsp+158h+compar]", "and     eax, 204h", "mov     edi, 0FFFFFF9Ch", "cmp     eax, 200h", "mov     type_0, [rcx+30h]; dir", "jnz     short loc_B34C"], ["mov~rcx,<TAG>", "and~eax,0", "mov~edi,0", "cmp~eax,<STR>", "mov~type_0,[rcx+0]", "jnz~FOO"]], [0, 0, 8, 0, 2, 5, 1, 3, 14, -1, 0.0012103174603174604, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      short loc_BB71"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 15, -1, 7.936507936507937e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [2, 0, 5, 2, 0, 6, 0, 1, 18, -1, 0.003472222222222222, ["mov     rcx, [rax]", "mov     rsi, [rax+8]", "add     rax, 8", "sub     rdx, 1", "mov     [rcx+10h], rsi", "jnz     short loc_B140"], ["mov~rcx,<TAG>", "mov~rsi,[rax+0]", "add~rax,0", "sub~rdx,0", "mov~[rcx+0],rsi", "jnz~FOO"]], [1, 0, 5, 0, 1, 8, 0, 1, 17, -1, 0.006547619047619048, ["mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     rdi, [sp_0+10h]", "lea     rdx, [nitems-1]", "mov     r12, [rdi]", "mov     rax, rdi", "nop     dword ptr [rax]"], ["mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~rdi,[sp_0+0]", "lea~rdx,[nitems-1]+0]", "mov~r12,<TAG>", "mov~rax,rdi", "nop~<TAG>"]], [0, 0, 194, 0, 1, 9, 0, 2, 10, 17, 0.004523809523809524, ["movdqu  xmm0, xmmword ptr [r14+78h]", "mov     rsi, rax; entry", "mov     rdi, [sp_0+58h]; table", "mov     [rax+10h], r14", "movups  xmmword ptr [rax], xmm0", "call    hash_insert", "cmp     rbx, rax", "mov     rbp, rax", "jz      loc_B37F"], ["movdqu~xmm0,[mmword ptr [r14+0]", "mov~rsi,rax", "mov~rdi,[sp_0+0]", "mov~[rax+0],r14", "movups~<TAG>,xmm0", "call~FOO", "cmp~rbx,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 214, 0, 0, 1, 0, 0, 3, 20, 0.0, ["mov     edi, [sp_0+2Ch]; dir_fd"], ["mov~edi,[sp_0+0]"]], [1, 0, 3, 0, 0, 3, 0, 0, 19, -1, 0.00035714285714285714, ["mov     rax, [rdi+nitems*8-8]", "mov     qword ptr [rax+10h], 0", "nop     word ptr [rax+rax+00h]"], ["mov~rax,[rdi+0]", "mov~[word ptr [rax+0],0", "nop~[ord ptr [rax+0]"]], [0, 0, 74, 0, 0, 1, 0, 1, 13, -1, 0.0014682539682539682, ["jmp     short loc_B638"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 18, -1, 7.936507936507937e-05, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.0019047619047619048, ["xor     r12d, r12d", "jmp     loc_B168"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, -1, 0.00031746031746031746, ["jmp     loc_B490"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.008809523809523809, ["mov     rsi, [rsp+158h+var_40]", "xor     rsi, fs:28h", "mov     rax, r12", "jnz     loc_BBB9"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r12", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, -1, 0.0008928571428571428, ["mov     qword ptr [sp_0+40h], 0", "jmp     loc_B168"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 17, -1, 0.0002380952380952381, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "jmp     loc_B168"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [4, 0, 3, 0, 1, 11, 2, 2, 14, -1, 0.0007142857142857143, ["mov     rbx, [rsp+158h+compar]", "xor     r12d, r12d", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "mov     rax, [rsp+158h+p_saved_errno]", "mov     r8d, 7", "mov     qword ptr [rbx+18h], 0", "mov     [rbx+70h], r8w", "or      dword ptr [sp_0+48h], 2000h", "mov     dword ptr [rax], 24h ; '$'", "jmp     loc_B168"], ["mov~rbx,<TAG>", "xor~r12d,r12d", "mov~rdi,[rbx+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~r8d,0", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],r8w", "or~[word ptr [sp_0+0],0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 191, 0, 0, 5, 0, 1, 12, 17, 0.0037301587301587303, ["mov     rax, [rbp+10h]", "mov     r11d, 2", "mov     [r14+70h], r11w", "mov     [r14], rax", "jmp     loc_B37F"], ["mov~rax,[rbp+0]", "mov~r11d,0", "mov~[r14+0],r11w", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 166, 0, 0, 10, 1, 1, 12, 6, 0.09259920634920635, ["mov     rax, [rsp+158h+level]", "mov     [r13+48h], rcx", "mov     [r13+58h], rax", "mov     rax, [sp_0]", "mov     [r13+8], rax", "mov     rax, [r12]", "mov     [r13+80h], rax", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     loc_B198"], ["mov~rax,[rsp+0]", "mov~[r13+0],rcx", "mov~[r13+0],rax", "mov~rax,<TAG>", "mov~[r13+0],rax", "mov~rax,<TAG>", "mov~[r13+0],rax", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 9.92063492063492e-05, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [0, 0, 7, 0, 0, 2, 0, 0, 16, -1, 0.00626984126984127, ["mov     rax, rdi", "nop     dword ptr [rax]"], ["mov~rax,rdi", "nop~<TAG>"]], [0, 0, 166, 0, 0, 1, 0, 0, 13, 5, 0.04573412698412698, ["mov     [r13+30h], r15"], ["mov~[r13+0],r15"]], [1, 0, 166, 0, 0, 2, 0, 1, 25, 16, 0.030615079365079366, ["cmp     r12, 1021994h", "jz      loc_B588"], ["cmp~r12,0", "jz~FOO"]], [1, 0, 166, 0, 0, 3, 0, 1, 26, 16, 0.004662698412698413, ["mov     eax, 0FF534D42h", "cmp     r12, rax", "jz      loc_B588"], ["mov~eax,0", "cmp~r12,rax", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 27, 16, 0.0025396825396825397, ["cmp     r12, 6969h", "jz      loc_B588"], ["cmp~r12,0", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 14, 4, 0.09581349206349206, ["cmp     qword ptr [sp_0+40h], 0", "jz      short loc_AD9C"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 166, 0, 1, 9, 0, 2, 13, 5, 0.04573412698412698, ["mov     rax, [r13+38h]", "mov     rdi, [rsp+158h+cp]; dest", "mov     rsi, r15; src", "mov     [r13+30h], rax", "mov     rax, [r13+60h]", "lea     rdx, [rax+1]; n", "call    _memmove", "mov     eax, [sp_0+48h]", "jmp     loc_AD8C"], ["mov~rax,[r13+0]", "mov~rdi,[rsp+0]", "mov~rsi,r15", "mov~[r13+0],rax", "mov~rax,[r13+0]", "lea~rdx,[rax+0]", "call~FOO", "mov~eax,[sp_0+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     sp_0", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~sp_0", "retn"]], [2, 0, 7, 2, 0, 6, 0, 1, 17, -1, 0.003253968253968254, ["mov     rcx, [rax]", "mov     rsi, [rax+8]", "add     rax, 8", "sub     rdx, 1", "mov     [rcx+10h], rsi", "jnz     short loc_B788"], ["mov~rcx,<TAG>", "mov~rsi,[rax+0]", "add~rax,0", "sub~rdx,0", "mov~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 18, -1, 0.0001984126984126984, ["mov     rax, [rdi+nitems*8-8]"], ["mov~rax,[rdi+0]"]], [1, 0, 4, 0, 0, 1, 0, 0, 17, -1, 0.0007142857142857143, ["mov     qword ptr [rax+10h], 0"], ["mov~[word ptr [rax+0],0"]], [1, 0, 84, 0, 0, 3, 0, 1, 10, -1, 0.001954365079365079, ["mov     eax, 7", "mov     rsi, [rsp+158h+compar]", "jmp     loc_B5CC"], ["mov~eax,0", "mov~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 1, 4, 0, 2, 15, -1, 0.0032936507936507935, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "jmp     loc_B7AA"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 182, 0, 0, 3, 0, 0, 8, 20, 0.011200396825396825, ["cmp     [rsp+158h+type], 3", "mov     ebp, 1", "setz    bl"], ["cmp~[rsp+0],0", "mov~ebp,0", "setz~bl"]], [2, 0, 166, 0, 0, 4, 0, 1, 16, 20, 0.011121031746031747, ["mov     ecx, 0Bh", "cmp     edx, 0Bh", "mov     [r13+70h], cx", "ja      loc_B1D0"], ["mov~ecx,0", "cmp~edx,0", "mov~[r13+0],cx", "ja~FOO"]], [2, 0, 166, 0, 0, 3, 0, 1, 17, 17, 0.10867063492063492, ["cmp     [rsp+158h+head], 0", "mov     qword ptr [r13+10h], 0", "jz      loc_B1C0"], ["cmp~[rsp+0],0", "mov~[word ptr [r13+0],0", "jz~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 24, 17, 0.01001984126984127, ["mov     r12, [rax+8]"], ["mov~r12,[rax+0]"]], [1, 0, 166, 0, 0, 4, 0, 0, 17, 19, 0.0049950396825396825, ["lea     rax, CSWTCH_53", "mov     eax, [rax+rdx*4]", "mov     [r13+90h], eax", "mov     eax, 2"], ["lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[r13+0],eax", "mov~eax,0"]], [0, 0, 166, 0, 0, 1, 0, 0, 18, 18, 0.025694444444444443, ["mov     [r13+0A8h], rax"], ["mov~[r13+0],rax"]], [2, 0, 166, 0, 0, 3, 0, 1, 17, 19, 0.0049950396825396825, ["mov     dword ptr [r13+90h], 0", "mov     eax, 2", "jmp     loc_ADDC"], ["mov~[word ptr [r13+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 19, -1, 9.92063492063492e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [1, 0, 166, 0, 0, 2, 0, 1, 10, 11, 0.009067460317460318, ["cmp     byte ptr [rax+14h], 0", "jz      short loc_B1F9"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]]], "func_feature": [62, 102, 237, 3, 226, 356, 4, 878, 0.02234, 7, 26], "succs": [[224, 39], [0, 182], [69, 7], [2, 53], [2, 53], [101, 205], [5, 205], [36], [27, 28], [8], [8], [140, 31], [11, 13], [11, 14], [11], [122, 12], [12, 15], [24, 32], [17, 49], [17, 20], [17, 6], [17], [154, 22], [22], [34], [19, 220], [25, 19], [32, 34], [18, 27], [27], [140], [140, 30], [35], [32], [3], [34, 74], [37, 38], [36, 69], [192, 36], [194], [57, 170], [40, 218], [3, 4], [48, 88], [43, 45], [43, 46], [43], [43, 44], [194], [25, 26], [35], [150], [194, 51], [60, 78], [82, 53], [61, 126], [179, 55], [222], [116], [58, 162], [62, 63], [103], [73, 63], [73], [88], [64, 84], [64, 194], [127], [67, 127], [54], [54], [116], [158, 71], [78], [176, 81], [219], [75, 77], [41, 218], [112, 83], [171], [96, 79], [72, 85], [90, 100], [112, 89], [194], [72, 225], [184], [184, 86], [65, 66], [93, 95], [100], [145], [91, 157], [120, 95], [104, 137], [105, 109], [], [96, 147], [96, 114], [70], [99, 70], [98, 115], [16], [16, 102], [52, 110], [108], [116], [106, 59], [112, 183], [108], [113, 141], [72, 33], [120, 47], [121], [205], [114], [156, 117], [145], [186, 199], [185, 118], [125, 167], [139], [121], [80, 131], [123, 127], [130, 196], [139], [126, 135], [194, 150], [128, 133], [138, 196], [136, 171], [127], [124, 132], [56, 217], [217, 134], [97, 171], [184, 87], [168, 149], [50, 148], [139], [139], [196], [189, 142], [200, 142], [196], [145, 157], [171, 151], [50], [160, 198], [194], [171, 159], [177, 214], [152, 214], [203, 165], [154, 23], [146, 92], [156], [107, 174], [171], [193, 166], [174], [161, 163], [161, 164], [161], [213], [168], [155, 172], [169, 188], [175], [222], [68, 143], [178, 215], [181, 119], [201, 173], [188, 175], [153, 42], [42], [202, 180], [217], [155], [199], [224, 194], [1, 195], [129, 190], [186, 199], [119], [187, 191], [187], [144, 127], [129], [196], [69], [198], [196], [194], [216, 210], [196], [196], [196], [127], [209, 204], [215], [211], [208], [29, 206], [29, 207], [29, 21], [76, 77], [208], [], [211, 212], [213], [197], [177], [197], [], [103], [221, 223], [9, 10], [205], [222], [219], [222], [1], [33, 111]], "fname": "fts_build", "n_num": 226}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[4, 0, 6, 1, 0, 6, 3, 1, 0, 0, 0.03556771545827633, ["mov     esi, eax", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags", "test    ah, 2", "jnz     short loc_C270"], ["mov~esi,eax", "shl~esi,0", "and~esi,0", "or~esi,0", "test~ah,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.057455540355677154, ["mov     eax, [sp_0+48h]", "test    eax, 204h", "jz      loc_C1F8"], ["mov~eax,[sp_0+0]", "test~eax,0", "jz~FOO"]], [2, 0, 85, 0, 0, 5, 1, 1, 1, 25, 0.011354309165526676, ["mov     eax, esi", "mov     ebx, esi", "and     eax, 204h", "cmp     eax, 204h", "jz      loc_C0A8"], ["mov~eax,esi", "mov~ebx,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 86, 1, 0, 11, 1, 1, 0, 26, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "test    esi, 0FFFFF000h", "mov     [rsp+68h+argv], argv_0", "mov     [rsp+68h+compar], compar_0", "jnz     loc_C0A8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~esi,0", "mov~[rsp+0],argv_0", "mov~[rsp+0],compar_0", "jnz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 1, 18, -1, 0.009165526675786594, ["lea     rdi, dir+1; file", "xor     eax, eax", "call    open_safer"], ["lea~rdi,<TAG>", "xor~eax,eax", "call~FOO"]], [7, 0, 62, 0, 1, 21, 1, 2, 17, 9, 0.14993160054719562, ["lea     r9, [rax+108h]", "mov     rdx, len; n", "mov     rsi, v; src", "mov     rdi, r9; dest", "call    _memcpy", "mov     r9, rax", "mov     rax, [sp_0+20h]", "test    root, root", "mov     byte ptr [r14+len+108h], 0", "mov     [r14+60h], len", "mov     [r14+50h], sp_0", "mov     dword ptr [r14+40h], 0", "mov     [r14+38h], rax", "mov     qword ptr [r14+18h], 0", "mov     dword ptr [r14+72h], 30000h", "mov     qword ptr [r14+20h], 0", "mov     qword ptr [r14+28h], 0", "mov     qword ptr [r14+58h], 0", "mov     [r14+8], r12", "mov     [r14+30h], r9", "jz      loc_BF60"], ["lea~r9,[rax+0]", "mov~rdx,len", "mov~rsi,v", "mov~rdi,r9", "call~FOO", "mov~r9,rax", "mov~rax,[sp_0+0]", "test~root,root", "mov~[yte ptr [r14+0],0", "mov~[r14+0],len", "mov~[r14+0],sp_0", "mov~[word ptr [r14+0],0", "mov~[r14+0],rax", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[r14+0],r12", "mov~[r14+0],r9", "jz~FOO"]], [1, 0, 62, 0, 1, 6, 2, 2, 17, 10, 0.026744186046511628, ["lea     rdi, [len+110h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jnz     loc_BDAC"], ["lea~rdi,[len+0]", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jnz~FOO"]], [0, 0, 62, 0, 1, 4, 1, 2, 16, 10, 0.13399452804377565, ["call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_BEC0"], ["call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 1, 84, 0, 0, 2, 1, 1, 2, 24, 0.02243502051983584, ["test    sil, 12h", "jz      loc_C0A8"], ["test~sil,<STR>", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 19, -1, 0.01012311901504788, ["test    eax, eax", "mov     [sp_0+28h], eax", "jns     loc_C090"], ["test~eax,eax", "mov~[sp_0+0],eax", "jns~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 18, -1, 0.009165526675786594, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "jmp     short loc_C21C"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 18, 9, 0.010533515731874145, ["cmp     [rsp+68h+var_42], 0", "jz      loc_BF60"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 20, -1, 0.0, ["or      dword ptr [sp_0+48h], 4", "jmp     loc_C090"], ["or~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 13, 14, 0.00533515731874145, ["mov     [rsp+68h+var_42], 1", "jmp     loc_BD66"], ["mov~[rsp+0],0", "jmp~FOO"]], [9, 0, 66, 0, 0, 14, 0, 1, 12, 15, 0.0106703146374829, ["cmp     [rsp+68h+compar], 0", "mov     byte ptr [rax+108h], 0", "mov     qword ptr [rax+60h], 0", "mov     [rax+50h], sp_0", "mov     [rax+38h], r13", "mov     dword ptr [rax+40h], 0", "mov     qword ptr [rax+18h], 0", "mov     dword ptr [rax+72h], 30000h", "mov     qword ptr [rax+20h], 0", "mov     qword ptr [rax+28h], 0", "mov     rax, 0FFFFFFFFFFFFFFFFh", "mov     [r12+58h], rax", "mov     [r12+68h], rax", "jz      loc_C230"], ["cmp~[rsp+0],0", "mov~[yte ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[rax+0],sp_0", "mov~[rax+0],r13", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~rax,0", "mov~[r12+0],rax", "mov~[r12+0],rax", "jz~FOO"]], [1, 1, 82, 0, 1, 6, 1, 2, 3, 23, 0.03331053351573188, ["mov     esi, 1; size", "mov     edi, 80h; nmemb", "call    _calloc", "test    rax, rax", "mov     rbp, rax", "jz      loc_BF1D"], ["mov~esi,0", "mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [3, 0, 62, 0, 0, 5, 0, 1, 19, 8, 0.009165526675786594, ["cmp     [rsp+68h+compar], 0", "mov     ecx, 0Bh", "mov     qword ptr [r14+0A8h], 2", "mov     [r14+70h], cx", "jz      loc_BFA0"], ["cmp~[rsp+0],0", "mov~ecx,0", "mov~[word ptr [r14+0],0", "mov~[r14+0],cx", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 10, -1, 0.00027359781121751026, ["mov     rdi, [sp_0+20h]; ptr", "call    free", "jmp     mem1"], ["mov~rdi,[sp_0+0]", "call~FOO", "jmp~FOO"]], [0, 0, 71, 0, 1, 5, 1, 2, 9, 17, 0.12270861833105334, ["mov     [sp_0+30h], rsi", "call    _realloc", "test    rax, rax", "mov     r13, rax", "jz      loc_C240"], ["mov~[sp_0+0],rsi", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 62, 0, 0, 2, 0, 0, 19, 7, 0.1399452804377565, ["mov     [r14+10h], root", "mov     rbx, r14"], ["mov~[r14+0],root", "mov~rbx,r14"]], [1, 0, 62, 0, 1, 7, 1, 2, 18, 8, 0.14103967168262654, ["xor     edx, edx; follow", "mov     rsi, r14; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "cmp     [rsp+68h+compar], 0", "mov     [r14+70h], ax", "jnz     loc_BE4A"], ["xor~edx,edx", "mov~rsi,r14", "mov~rdi,sp_0", "call~FOO", "cmp~[rsp+0],0", "mov~[r14+0],ax", "jnz~FOO"]], [0, 0, 79, 0, 0, 1, 0, 0, 5, 21, 0.026744186046511628, ["mov     [sp_0+48h], ebx"], ["mov~[sp_0+0],ebx"]], [1, 0, 81, 0, 0, 4, 1, 1, 4, 22, 0.04377564979480164, ["mov     sp_0, [rsp+68h+compar]", "test    bl, 2", "mov     [sp_0+40h], rax", "jnz     loc_BF50"], ["mov~sp_0,[rsp+0]", "test~bl,0", "mov~[sp_0+0],rax", "jnz~FOO"]], [10, 0, 21, 0, 0, 17, 1, 1, 14, -1, 0.09466484268125855, ["mov     rdx, [sp_0+20h]", "test    dword ptr [sp_0+48h], 102h", "mov     byte ptr [rax+108h], 0", "mov     qword ptr [rax+60h], 0", "mov     [rax+50h], sp_0", "mov     dword ptr [rax+40h], 0", "mov     [rax+38h], rdx", "mov     edx, 3", "mov     qword ptr [rax+18h], 0", "mov     qword ptr [rax+20h], 0", "mov     qword ptr [rax+28h], 0", "mov     [sp_0+0], rax", "mov     [rax+10h], root", "mov     dword ptr [rax+70h], 9", "mov     [rax+74h], dx", "mov     qword ptr [rax+58h], 1", "jnz     loc_C1B0"], ["mov~rdx,[sp_0+0]", "test~[word ptr [sp_0+0],0", "mov~[yte ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[rax+0],sp_0", "mov~[word ptr [rax+0],0", "mov~[rax+0],rdx", "mov~edx,0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[sp_0+0],rax", "mov~[rax+0],root", "mov~[word ptr [rax+0],0", "mov~[rax+0],dx", "mov~[word ptr [rax+0],0", "jnz~FOO"]], [1, 0, 23, 0, 1, 4, 1, 2, 13, -1, 0.16265389876880984, ["mov     edi, 110h; size", "call    _malloc", "test    rax, rax", "jz      loc_C285"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 78, 0, 0, 5, 1, 1, 6, 20, 0.07414500683994528, ["mov     r13, [rsp+68h+argv]", "mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "mov     rdi, [r13+0]; s", "test    rdi, rdi", "jz      loc_C1E8"], ["mov~r13,[rsp+0]", "mov~[word ptr [sp_0+0],0", "mov~rdi,[r13+0]", "test~rdi,rdi", "jz~FOO"]], [2, 0, 79, 0, 0, 5, 2, 1, 5, 21, 0.026744186046511628, ["mov     eax, ebx", "and     ah, 0FDh", "or      eax, 4", "mov     [sp_0+48h], eax", "jmp     loc_BC52"], ["mov~eax,ebx", "and~ah,0", "or~eax,0", "mov~[sp_0+0],eax", "jmp~FOO"]], [0, 0, 62, 0, 0, 6, 1, 1, 20, 6, 0.17578659370725033, ["mov     rax, [rsp+68h+nitems]", "lea     r8, [rax+1]", "mov     rax, [rsp+68h+argv]", "mov     v, [rax+nitems_0*8]", "test    r15, r15", "jz      loc_C0C0"], ["mov~rax,[rsp+0]", "lea~r8,[rax+0]", "mov~rax,[rsp+0]", "mov~v,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 62, 0, 0, 3, 0, 1, 20, 7, 0.004035567715458276, ["mov     root, r14", "mov     [rsp+68h+tmp], r14", "jmp     loc_BE51"], ["mov~root,r14", "mov~[rsp+0],r14", "jmp~FOO"]], [0, 0, 62, 0, 0, 4, 0, 1, 20, 7, 0.012243502051983584, ["mov     rax, [rsp+68h+tmp]", "mov     [rsp+68h+tmp], r14", "mov     [rax+10h], r14", "jmp     loc_BE51"], ["mov~rax,[rsp+0]", "mov~[rsp+0],r14", "mov~[rax+0],r14", "jmp~FOO"]], [2, 0, 24, 0, 1, 4, 0, 2, 25, -1, 0.013132694938440492, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "jmp     loc_BFE9"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 1, 37, 1, 0, 8, 0, 1, 24, 5, 0.027359781121751026, ["mov     rax, [rsp+68h+nitems]", "mov     rdx, 1FFFFFFFFFFFFFFFh", "mov     [rsp+68h+argv], rcx", "mov     [rsp+68h+compar], nitems_0", "add     rax, 29h", "cmp     rax, rdx", "mov     [sp_0+38h], rax", "ja      loc_C252"], ["mov~rax,[rsp+0]", "mov~rdx,0", "mov~[rsp+0],rcx", "mov~[rsp+0],nitems_0", "add~rax,<STR>", "cmp~rax,rdx", "mov~[sp_0+0],rax", "ja~FOO"]], [0, 0, 25, 0, 0, 1, 0, 0, 26, -1, 0.003419972640218878, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [0, 0, 62, 0, 0, 1, 0, 0, 21, 13, 0.02749658002735978, ["mov     [rsp+68h+nitems], nitems_0"], ["mov~[rsp+0],nitems_0"]], [0, 0, 76, 0, 0, 2, 1, 0, 7, 21, 0.002188782489740082, ["xor     r12d, r12d", "xchg    ax, ax"], ["xor~r12d,r12d", "xchg~ax,ax"]], [0, 1, 18, 0, 1, 5, 1, 2, 15, -1, 0.009575923392612859, ["mov     edi, 20h ; ' '; size", "call    _malloc", "test    rax, rax", "mov     [sp_0+58h], rax", "jz      loc_BEC0"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 16, -1, 0.001094391244870041, ["mov     rdi, rax; state", "call    cycle_check_init"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 62, 0, 1, 6, 0, 1, 14, 12, 0.14610123119015048, ["mov     rdi, r15; s", "call    _strlen", "cmp     rax, 2", "mov     r13, rax", "mov     rdi, rax", "jbe     loc_BD90"], ["mov~rdi,r15", "call~FOO", "cmp~rax,0", "mov~r13,rax", "mov~rdi,rax", "jbe~FOO"]], [5, 0, 62, 0, 0, 9, 3, 1, 13, 13, 0.10725034199726402, ["shr     ebx, 0Bh", "mov     [rsp+68h+tmp], 0", "mov     [rsp+68h+nitems], 0", "xor     ebx, 1", "mov     eax, ebx", "xor     ebx, ebx", "and     eax, 1", "mov     [rsp+68h+var_41], al", "jmp     loc_BE71"], ["shr~ebx,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,0", "mov~eax,ebx", "xor~ebx,ebx", "and~eax,0", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 76, 1, 1, 7, 1, 2, 8, 20, 0.011354309165526676, ["call    _strlen", "cmp     r12, rax", "cmovb   r12, rax", "add     r13, 8", "mov     rdi, [r13+0]", "test    rdi, rdi", "jnz     short loc_BC70"], ["call~FOO", "cmp~r12,rax", "cmovb~r12,rax", "add~r13,0", "mov~rdi,[r13+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 18, 0, 1, 9, 2, 2, 15, -1, 0.07127222982216141, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "test    rax, rax", "mov     [sp_0+58h], rax", "jnz     loc_C082"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.05471956224350205, ["mov     qword ptr [sp_0+0], 0", "jmp     loc_BEC0"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 15, 12, 0.030232558139534883, ["cmp     [rsp+68h+var_41], 0", "jz      loc_BD90"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 1, 26, 0, 0.023392612859097127, ["mov     rax, rbx", "jmp     loc_C19E"], ["mov~rax,rbx", "jmp~FOO"]], [1, 0, 29, 0, 1, 8, 1, 2, 25, 1, 0.047332421340629274, ["mov     edx, 8; size", "mov     rsi, r8; nmemb", "call    _qsort", "mov     rdx, [rsp+68h+nitems]", "mov     rdi, [sp_0+10h]", "test    rdx, rdx", "mov     rbx, [rdi]", "jz      loc_C292"], ["mov~edx,0", "mov~rsi,r8", "call~FOO", "mov~rdx,[rsp+0]", "mov~rdi,[sp_0+0]", "test~rdx,rdx", "mov~rbx,<TAG>", "jz~FOO"]], [3, 0, 74, 1, 0, 4, 0, 0, 9, 19, 0.02024623803009576, ["add     r12, 1", "mov     eax, 1000h", "cmp     r12, 1000h", "cmovb   r12, rax"], ["add~r12,0", "mov~eax,0", "cmp~r12,0", "cmovb~r12,rax"]], [1, 0, 62, 0, 0, 2, 0, 1, 16, 11, 0.028522571819425444, ["cmp     byte ptr [v+len-1], 2Fh ; '/'", "jz      loc_BF30"], ["cmp~[yte ptr [v+0],0", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.005745554035567715, ["lea     rdi, [sp_0+60h]; ir", "mov     esi, 0FFFFFFFFh; default_val", "call    i_ring_init", "jmp     loc_BF1D"], ["lea~rdi,[sp_0+0]", "mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 73, 0, 0, 5, 0, 1, 8, 18, 0.11928864569083447, ["mov     rax, [sp_0+30h]", "mov     rdi, [sp_0+20h]; ptr", "lea     rsi, [rax+r12+100h]; size", "cmp     rax, rsi", "ja      loc_BFC0"], ["mov~rax,[sp_0+0]", "mov~rdi,[sp_0+0]", "lea~rsi,[rax+0]", "cmp~rax,rsi", "ja~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 7, 19, 0.08043775649794802, ["mov     r12d, 1000h", "jmp     loc_BC9D"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 1, -1, 0.0003419972640218878, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 16h", "jmp     loc_BF1D"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 17, 11, 0.014090287277701778, ["cmp     byte ptr [v+len-2], 2Fh ; '/'", "jnz     loc_BEA0"], ["cmp~[yte ptr [v+0],0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 18, -1, 0.004103967168262654, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 2, 1, 1, 15, -1, 0.06990424076607388, ["test    root, root", "jnz     short loc_BEE5"], ["test~root,root", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 16, -1, 0.0012311901504787962, ["jmp     loc_BEC0"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 16, -1, 0.0253077975376197, ["jmp     short loc_BEFF"], ["jmp~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 21, 5, 0.14555403556771546, ["cmp     [rsp+68h+compar], 0", "jz      loc_BFE9"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 0, 22, 4, 0.08618331053351573, ["cmp     nitems_0, 1", "jbe     loc_BFE9"], ["cmp~nitems_0,0", "jbe~FOO"]], [0, 0, 69, 0, 0, 5, 1, 1, 10, 16, 0.1283173734610123, ["mov     [sp_0+20h], rax", "mov     rax, [rsp+68h+argv]", "mov     r15, [rax]", "test    r15, r15", "jz      loc_BFD8"], ["mov~[sp_0+0],rax", "mov~rax,[rsp+0]", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 8, 0, 2, 5, 1, 3, 17, -1, 0.005198358413132695, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jz      short loc_BEFF"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 16, -1, 0.028590971272229822, ["mov     rdi, [rbx+18h]; dirp", "mov     r13, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_BED0"], ["mov~rdi,[rbx+0]", "mov~r13,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 38, 0, 0, 4, 0, 0, 23, 3, 0.08235294117647059, ["cmp     nitems_0, [sp_0+38h]", "mov     rcx, [sp_0+40h]", "mov     rdi, [sp_0+10h]; ptr", "jbe     short loc_C135"], ["cmp~nitems_0,[sp_0+0]", "mov~rcx,[sp_0+0]", "mov~rdi,[sp_0+0]", "jbe~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 18, -1, 0.0005471956224350205, ["mov     rbx, r13"], ["mov~rbx,r13"]], [0, 0, 8, 0, 1, 4, 1, 2, 17, -1, 0.005198358413132695, ["mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jnz     short loc_BEE2"], ["mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 17, -1, 0.018194254445964432, ["mov     rdi, r12; ptr", "call    free", "mov     r13, [sp_0+20h]"], ["mov~rdi,r12", "call~FOO", "mov~r13,[sp_0+0]"]], [0, 0, 2, 0, 1, 2, 0, 1, 12, -1, 0.011354309165526676, ["mov     rdi, r13; ptr", "call    free"], ["mov~rdi,r13", "call~FOO"]], [1, 0, 67, 0, 1, 5, 1, 2, 11, 16, 0.006429548563611491, ["mov     edi, 110h; size", "call    _malloc", "test    rax, rax", "mov     r12, rax", "jz      mem2"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 10, -1, 0.00506155950752394, ["mov     rdi, sp_0; ptr", "xor     ebp, ebp", "call    free"], ["mov~rdi,sp_0", "xor~ebp,ebp", "call~FOO"]], [1, 0, 2, 0, 2, 4, 0, 3, 9, -1, 0.003009575923392613, ["call    free", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "jmp     mem1"], ["call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 36, 0, 1, 7, 1, 2, 25, 4, 0.013543091655266758, ["lea     rsi, ds:0[rax*8]; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "mov     r8, [rsp+68h+compar]", "mov     rcx, [rsp+68h+argv]; compar", "jz      loc_C24E"], ["lea~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rdi,rax", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 33, 0, 0, 1, 0, 0, 26, 3, 0.0024623803009575923, ["mov     [sp_0+10h], rax"], ["mov~[sp_0+0],rax"]], [2, 0, 62, 1, 0, 3, 0, 1, 18, 12, 0.00560875512995896, ["sub     len, 1", "cmp     len, 1", "jnz     short loc_BF30"], ["sub~len,0", "cmp~len,0", "jnz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 19, 8, 0.010328317373461012, ["test    root, root", "mov     qword ptr [r14+10h], 0", "jnz     short loc_BFA8"], ["test~root,root", "mov~[word ptr [r14+0],0", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 24, 2, 0.05471956224350205, ["test    root, root", "jz      short loc_C151"], ["test~root,root", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 25, 3, 0.006566347469220246, ["mov     rdx, rdi", "nop     dword ptr [rax]"], ["mov~rdx,rdi", "nop~<TAG>"]], [1, 0, 62, 0, 0, 2, 0, 1, 19, 11, 0.004924760601915185, ["mov     edi, 110h", "jmp     loc_BD9B"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 31, 1, 0, 5, 1, 1, 26, 2, 0.004103967168262654, ["add     rdx, 8", "mov     [rdx-8], rbx", "mov     rbx, [rbx+10h]", "test    rbx, rbx", "jnz     short loc_C140"], ["add~rdx,0", "mov~[rdx-8]+0],rbx", "mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 64, 0, 0, 6, 2, 1, 12, 14, 0.09712722298221614, ["mov     eax, [sp_0+48h]", "shr     eax, 0Ah", "and     eax, 1", "test    r15, r15", "mov     [rsp+68h+var_42], al", "jz      loc_BFE7"], ["mov~eax,[sp_0+0]", "shr~eax,0", "and~eax,0", "test~r15,r15", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 65, 0, 0, 3, 1, 1, 11, 15, 0.12722298221614226, ["xor     r12d, r12d", "cmp     [rsp+68h+compar], 0", "jnz     loc_BD50"], ["xor~r12d,r12d", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 27, 2, 0, 6, 0, 1, 27, -1, 0.010533515731874145, ["mov     rcx, [rax]", "mov     rsi, [rax+8]", "add     rax, 8", "sub     rdx, 1", "mov     [rcx+10h], rsi", "jnz     short loc_C180"], ["mov~rcx,<TAG>", "mov~rsi,[rax+0]", "add~rax,0", "sub~rdx,0", "mov~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 27, 0, 0, 2, 0, 0, 26, -1, 0.013953488372093023, ["mov     rax, rdi", "nop     word ptr [rax+rax+00000000h]"], ["mov~rax,rdi", "nop~[ord ptr [rax+0]"]], [2, 0, 62, 1, 0, 2, 1, 0, 15, 11, 0.11785225718194255, ["add     rdi, 110h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size"], ["add~rdi,0", "and~rdi,0"]], [0, 0, 25, 0, 0, 2, 0, 0, 28, -1, 0.006839945280437756, ["mov     rax, [rsp+68h+nitems]", "mov     rax, [rdi+rax*8]"], ["mov~rax,[rsp+0]", "mov~rax,<TAG>"]], [1, 0, 62, 0, 0, 1, 0, 0, 20, 8, 0.0002051983584131327, ["mov     qword ptr [r14+10h], 0"], ["mov~[word ptr [r14+0],0"]], [1, 0, 24, 0, 0, 2, 0, 1, 27, -1, 0.029548563611491108, ["mov     qword ptr [rax+10h], 0", "jmp     loc_BFE9"], ["mov~[word ptr [rax+0],0", "jmp~FOO"]], [0, 0, 24, 0, 0, 1, 1, 0, 12, -1, 0.05581395348837209, ["xor     ebx, ebx"], ["xor~ebx,ebx"]]], "func_feature": [29, 51, 91, 0, 87, 133, 1, 366, 0.04129, 4, 11], "succs": [[10, 4], [0, 47], [8, 50], [2, 50], [9], [11, 20], [52, 5], [5, 53], [50, 15], [12, 47], [9], [16, 20], [47], [38], [13, 78], [22, 70], [19, 84], [67], [17, 58], [27], [73, 19], [25], [26, 21], [40, 35], [41, 23], [49, 34], [25], [56, 33], [27], [27], [24], [69, 30], [30], [37], [39], [36, 53], [1], [42, 82], [37], [45, 39], [1, 54], [53], [82, 46], [85], [81, 43], [48], [51, 6], [70], [18, 68], [48], [70], [72, 6], [53], [60, 55], [53], [64], [24, 57], [24, 61], [66, 79], [64, 62], [59, 63], [74, 31], [60], [64, 62], [65], [67], [65, 14], [70], [67], [32, 71], [], [74], [51, 76], [28, 29], [75, 44], [77], [7], [44, 77], [86, 38], [86, 78], [80, 83], [80], [7], [85], [29], [24], [24]], "fname": "rpl_fts_open", "n_num": 87}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 19, 0, 1, 4, 1, 2, 0, 0, 0.05689900426742532, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_C42A"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 1, 4, 8, 0.1386913229018492, ["test    al, 4", "jnz     loc_C358"], ["test~al,0", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 8, 4, 0.17069701280227598, ["mov     rdi, [sp_0+50h]; table", "test    rdi, rdi", "jz      short loc_C38E"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 12, 0, 1, 4, 1, 2, 7, 5, 0.22475106685633003, ["mov     rdi, rbx; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_C368"], ["mov~rdi,rbx", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 9, 4, 0.0, ["call    hash_free"], ["call~FOO"]], [0, 0, 14, 0, 1, 3, 0, 2, 7, 8, 0.006756756756756757, ["call    ___errno_location", "mov     rbx, rax", "jmp     short loc_C44E"], ["call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 16, 0, 1, 4, 1, 2, 6, 8, 0.01884779516358464, ["mov     edi, [sp_0+28h]; fd", "call    _close", "test    eax, eax", "jz      loc_C358"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 38, 0, 0, 7, 1, 1, 0, 12, 0.0, ["push    r12", "push    rbp", "mov     rbp, sp_0", "push    rbx", "mov     sp_0, [sp_0]", "test    rdi, rdi", "jz      short loc_C2F0"], ["push~r12", "push~rbp", "mov~rbp,sp_0", "push~rbx", "mov~sp_0,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 29, 0, 2, 5, 1, 3, 3, 10, 0.021337126600284497, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      short loc_C32F"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 29, 0, 0, 4, 1, 1, 2, 11, 0.03982930298719772, ["mov     rdi, [rbx+18h]; dirp", "mov     r12, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_C300"], ["mov~rdi,[rbx+0]", "mov~r12,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 29, 0, 0, 1, 0, 0, 4, 12, 0.002844950213371266, ["mov     rbx, r12"], ["mov~rbx,r12"]], [0, 0, 29, 0, 1, 4, 1, 2, 3, 10, 0.021337126600284497, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jnz     short loc_C312"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 15, 0, 1, 3, 1, 2, 5, 8, 0.011379800853485065, ["call    _close", "test    eax, eax", "jz      loc_C358"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 0, 4, 8, 0.09601706970128024, ["mov     edi, [sp_0+2Ch]; fd", "test    edi, edi", "jns     loc_C410"], ["mov~edi,[sp_0+0]", "test~edi,edi", "jns~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 9, 3, 0.13655761024182078, ["test    dword ptr [sp_0+48h], 102h", "mov     rdi, [sp_0+58h]; ptr", "jz      short loc_C3D0"], ["test~[word ptr [sp_0+0],0", "mov~rdi,[sp_0+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 10, 2, 0.05867709815078236, ["test    rdi, rdi", "jz      short loc_C3A5"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 1, 11, 0.17069701280227598, ["mov     rbx, [sp_0+8]", "test    rbx, rbx", "jnz     short loc_C315"], ["mov~rbx,[sp_0+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 13, 0, 1, 3, 0, 2, 6, 7, 0.004623044096728307, ["call    ___errno_location", "mov     r12d, [rax]", "jmp     loc_C35B"], ["call~FOO", "mov~r12d,<TAG>", "jmp~FOO"]], [0, 0, 12, 0, 1, 3, 0, 2, 9, 6, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_C374"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 12, 0, 1, 4, 1, 1, 8, 6, 0.01991465149359886, ["mov     rdi, rbx; ir", "call    i_ring_pop", "test    eax, eax", "jns     short loc_C3C0"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 11, 1, 0.05120910384068279, ["mov     rdi, sp_0; ptr", "call    free", "test    r12d, r12d", "jnz     loc_C456"], ["mov~rdi,sp_0", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 10, 2, 0.03520625889046942, ["call    free", "jmp     short loc_C3A5"], ["call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 1, 0, 1, 11, 2, 0.0, ["call    hash_free"], ["call~FOO"]], [1, 0, 37, 0, 0, 3, 0, 0, 1, 14, 0.004267425320056899, ["cmp     qword ptr [p+58h], 0", "mov     rbx, p", "jns     short loc_C2CF"], ["cmp~[word ptr [p+0],0", "mov~rbx,p", "jns~FOO"]], [0, 0, 32, 0, 0, 1, 0, 1, 2, 13, 0.023470839260312945, ["jmp     short loc_C2E8"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 12, -1, 0.0, ["mov     eax, r12d", "pop     rbx", "pop     sp_0", "pop     r12", "retn"], ["mov~eax,r12d", "pop~rbx", "pop~sp_0", "pop~r12", "retn"]], [1, 0, 1, 0, 1, 4, 0, 2, 12, 0, 0.0, ["call    ___errno_location", "mov     [rax], r12d", "mov     r12d, 0FFFFFFFFh", "jmp     loc_C3B6"], ["call~FOO", "mov~<TAG>,r12d", "mov~r12d,0", "jmp~FOO"]], [0, 0, 15, 0, 2, 7, 1, 3, 6, 7, 0.027382645803698438, ["call    ___errno_location", "mov     edi, [sp_0+28h]; fd", "mov     r12d, [rax]", "mov     rbx, rax", "call    _close", "test    r12d, r12d", "jnz     loc_C35B"], ["call~FOO", "mov~edi,[sp_0+0]", "mov~r12d,<TAG>", "mov~rbx,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [1, 0, 24, 0, 2, 7, 1, 3, 3, 9, 0.23897581792318637, ["mov     rdi, [sp_0+10h]; ptr", "call    free", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     eax, [sp_0+48h]", "test    ah, 2", "jz      loc_C3E0"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~ah,0", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 2, 10, 0.1600284495021337, ["jmp     short loc_C32F"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, 7, 0.006756756756756757, ["test    eax, eax", "jz      loc_C35B"], ["test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 1, 3, 0, 2, 3, 13, 0.023826458036984355, ["call    free", "cmp     qword ptr [p+58h], 0", "js      short loc_C2E8"], ["call~FOO", "cmp~[word ptr [p+0],0", "js~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 2, 14, 0.029871977240398296, ["mov     p, [rdi+10h]", "test    rbx, rbx", "jnz     short loc_C2C0"], ["mov~p,[rdi+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 4, 15, 0.002844950213371266, ["mov     rdi, p; ptr"], ["mov~rdi,p"]], [1, 0, 36, 0, 1, 4, 0, 1, 3, 13, 0.023826458036984355, ["mov     rbx, [p+8]", "call    free", "cmp     qword ptr [p+58h], 0", "jns     short loc_C2CC"], ["mov~rbx,[p+0]", "call~FOO", "cmp~[word ptr [p+0],0", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 8, 7, 0.009246088193456615, ["mov     r12d, [rbx]", "jmp     loc_C35B"], ["mov~r12d,<TAG>", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 1, 0, 5, 7, 0.17105263157894737, ["xor     r12d, r12d"], ["xor~r12d,r12d"]], [0, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.22190611664295876, ["lea     rbx, [sp_0+60h]", "jmp     short loc_C374"], ["lea~rbx,[sp_0+0]", "jmp~FOO"]], [0, 0, 31, 0, 1, 2, 0, 1, 3, 12, 0.13229018492176386, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]]], "func_feature": [23, 21, 51, 0, 39, 61, 1, 121, 0.06056, 0, 0], "succs": [[27, 6], [0, 36], [4, 14], [2, 19], [14], [35], [36, 5], [16, 23], [10, 28], [8, 11], [9], [10, 28], [17, 36], [36, 12], [21, 15], [20, 22], [9, 29], [37], [3], [18, 3], [25, 26], [20], [20], [24, 32], [38], [], [25], [37, 30], [1, 13], [28], [35, 37], [33, 38], [34, 31], [32], [33, 38], [37], [37], [3], [16]], "fname": "rpl_fts_close", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 46, 0, 1, 4, 1, 2, 0, 0, 0.005326656808710848, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jnz     loc_CE04"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 103, 0, 1, 5, 0, 2, 6, 4, 0.009597504144822334, ["mov     [sp_0], p_0", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [p_0+58h], 0", "jz      loc_C7F8"], ["mov~<TAG>,p_0", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [p_0+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.01135905363624143, ["mov     rcx, [rsp+88h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     loc_CF55"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 32, 0, 1, 2, 0, 1, 13, 5, 0.0, ["mov     rdi, rax; state", "call    cycle_check_init"], ["mov~rdi,rax", "call~FOO"]], [0, 1, 33, 0, 1, 5, 1, 2, 12, 5, 0.0014114800376394678, ["mov     edi, 20h ; ' '; size", "call    _malloc", "test    rax, rax", "mov     [sp_0+58h], rax", "jz      short loc_CA0C"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [1, 0, 35, 0, 0, 5, 1, 1, 11, 5, 0.01300578034682081, ["test    dword ptr [sp_0+48h], 102h", "mov     rax, [sp_0+20h]", "mov     [p_0+38h], rax", "mov     [p_0+30h], rax", "jz      loc_C9F0"], ["test~[word ptr [sp_0+0],0", "mov~rax,[sp_0+0]", "mov~[p_0+0],rax", "mov~[p_0+0],rax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 11, 4, 0.0007393466863825784, ["cmp     word ptr [p_0+70h], 4", "jz      short loc_CC1B"], ["cmp~[ord ptr [p_0+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 10, 4, 0.007807949097100865, ["mov     ebx, [p_0+40h]", "test    ebx, ebx", "jz      short loc_CC1B"], ["mov~ebx,[p_0+0]", "test~ebx,ebx", "jz~FOO"]], [1, 0, 164, 0, 0, 3, 0, 0, 4, 4, 0.01051888694717032, ["lea     eax, [rcx-0Ch]", "cmp     ax, 1", "jbe     loc_C700"], ["lea~eax,[rcx-0Ch]+0]", "cmp~ax,0", "jbe~FOO"]], [1, 0, 169, 0, 0, 3, 0, 1, 3, 5, 0.016668907111170857, ["cmp     ax, 2", "movzx   ecx, word ptr [p_0+70h]", "jz      loc_C608"], ["cmp~ax,0", "movzx~ecx,[ord ptr [p_0+0]", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 15, 2, 0.0019827933862078236, ["mov     rsi, [p_0+80h]", "cmp     [rax], rsi", "jnz     loc_C5E0"], ["mov~rsi,[p_0+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 14, 3, 0.002789353407716091, ["mov     rax, [sp_0+58h]", "cmp     qword ptr [rax+10h], 0", "jz      loc_CEE7"], ["mov~rax,[sp_0+0]", "cmp~[word ptr [rax+0],0", "jz~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 13, 4, 0.002083613388896357, ["movzx   eax, word ptr [p_0+70h]", "mov     rbp, p_0", "jmp     check_for_dir"], ["movzx~eax,[ord ptr [p_0+0]", "mov~rbp,p_0", "jmp~FOO"]], [1, 0, 44, 0, 0, 3, 1, 1, 8, 8, 0.0057467401532464045, ["test    dword ptr [sp_0+48h], 102h", "mov     rdi, [sp_0+58h]; ptr", "jz      loc_CA20"], ["test~[word ptr [sp_0+0],0", "mov~rdi,[sp_0+0]", "jz~FOO"]], [1, 0, 152, 0, 0, 2, 0, 1, 5, 6, 0.009516288031545458, ["cmp     cx, 1", "jnz     next"], ["cmp~cx,0", "jnz~FOO"]], [1, 0, 39, 0, 0, 3, 1, 1, 10, 6, 0.0024196800645248017, ["mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_CDB6"], ["mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [2, 0, 40, 0, 1, 7, 0, 2, 9, 6, 0.0029573867455303135, ["mov     edx, 1; follow", "mov     rsi, p_0; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "cmp     ax, 1", "mov     [p_0+70h], ax", "jz      short loc_CE14"], ["mov~edx,0", "mov~rsi,p_0", "mov~rdi,sp_0", "call~FOO", "cmp~ax,0", "mov~[p_0+0],ax", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 9, 7, 0.0034110767576287135, ["test    rdi, rdi", "jz      short loc_C826"], ["test~rdi,rdi", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 1, 1, 11, 3, 0.006900569072904066, ["test    eax, 102h", "jnz     loc_CEC5"], ["test~eax,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 0, 12, 4, 0.0, ["mov     r11d, 7", "mov     [p_0+70h], r11w"], ["mov~r11d,0", "mov~[p_0+0],r11w"]], [0, 0, 41, 0, 1, 1, 0, 1, 10, 7, 0.0, ["call    hash_free"], ["call~FOO"]], [1, 0, 81, 0, 0, 2, 1, 1, 6, 6, 0.013700318143119596, ["test    dl, 40h", "jz      loc_C750"], ["test~dl,0", "jz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 6, 7, 0.005791549043330196, ["cmp     ax, 4", "jnz     loc_C61F"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 41, 0, 1, 2, 0, 2, 9, 7, 0.00300779674687458, ["call    free", "jmp     loc_C826"], ["call~FOO", "jmp~FOO"]], [1, 0, 38, 0, 0, 3, 1, 1, 6, 6, 0.0034782900927544025, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      loc_CE8A"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [2, 0, 41, 0, 1, 6, 0, 2, 5, 3, 0.006178025720302908, ["mov     edx, 1; follow", "mov     rsi, p_0; p", "call    fts_stat", "cmp     ax, 1", "mov     [p_0+70h], ax", "jz      loc_CBAA"], ["mov~edx,0", "mov~rsi,p_0", "call~FOO", "cmp~ax,0", "mov~[p_0+0],ax", "jz~FOO"]], [0, 1, 17, 0, 0, 3, 1, 1, 9, 3, 0.009757135815745844, ["mov     eax, [sp_0+48h]", "test    ah, 20h", "jnz     loc_C7C8"], ["mov~eax,[sp_0+0]", "test~ah,<STR>", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 12, 2, 0.0046041134561096925, ["mov     rdx, [p_0+8]", "test    rdx, rdx", "jz      loc_C5E0"], ["mov~rdx,[p_0+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 80, 0, 0, 3, 0, 1, 7, 6, 0.002968588968051261, ["mov     rax, [r12+18h]", "cmp     [p_0+78h], rax", "jz      loc_C750"], ["mov~rax,[r12+0]", "cmp~[p_0+0],rax", "jz~FOO"]], [1, 0, 54, 0, 0, 3, 1, 1, 9, 8, 0.002722140072590402, ["and     dh, 0EFh", "mov     [r12+48h], edx", "jmp     short loc_CA4D"], ["and~dh,0", "mov~[r12+0],edx", "jmp~FOO"]], [1, 0, 61, 0, 0, 2, 1, 1, 8, 8, 0.0048393601290496035, ["test    dh, 10h", "jnz     loc_CA2A"], ["test~dh,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 13, 2, 0.0035287000940986695, ["cmp     qword ptr [rdx+58h], 0", "js      loc_C5E0"], ["cmp~[word ptr [rdx+0],0", "js~FOO"]], [1, 0, 21, 0, 0, 2, 1, 1, 8, 6, 0.007012591298113545, ["test    byte ptr [p_0+72h], 2", "jnz     loc_CD20"], ["test~[yte ptr [p_0+0],0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 7, 7, 0.0030694089707397946, ["jmp     loc_C637"], ["jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, 2, 0.0028229600752789357, ["cmp     ax, 1", "jnz     loc_C5E0"], ["cmp~ax,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 11, 3, 0.015123000403280011, ["cmp     qword ptr [p_0+58h], 0", "jz      loc_CE5C"], ["cmp~[word ptr [p_0+0],0", "jz~FOO"]], [0, 0, 36, 0, 1, 4, 1, 1, 12, 8, 0.0012602500336066677, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO"]], [4, 0, 38, 1, 0, 6, 3, 1, 11, 9, 0.0021844333915848908, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 90900h; flags", "test    ah, 2", "jnz     loc_CF23"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jnz~FOO"]], [0, 0, 32, 0, 1, 4, 0, 2, 8, 5, 0.003497893982166062, ["mov     rdi, tmp; ptr", "mov     tmp, rbx", "call    free", "jmp     name"], ["mov~rdi,tmp", "mov~tmp,rbx", "call~FOO", "jmp~FOO"]], [2, 0, 72, 0, 1, 10, 1, 2, 7, 4, 0.00393478066048304, ["mov     rax, [p_0+48h]", "mov     rdx, [sp_0+20h]", "mov     esi, 3; type", "mov     [sp_0], p_0", "mov     rdi, sp_0; sp_0", "mov     byte ptr [rdx+rax], 0", "call    fts_build", "test    rax, rax", "mov     p_0, rax", "jz      short loc_CDC9"], ["mov~rax,[p_0+0]", "mov~rdx,[sp_0+0]", "mov~esi,0", "mov~<TAG>,p_0", "mov~rdi,sp_0", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~p_0,rax", "jz~FOO"]], [0, 0, 54, 0, 2, 5, 1, 3, 11, 6, 0.003259846753595914, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jz      short loc_CA67"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [0, 0, 54, 0, 0, 4, 1, 1, 10, 7, 0.005881166823497782, ["mov     rdi, [rbx+18h]; dirp", "mov     r13, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_CA38"], ["mov~rdi,[rbx+0]", "mov~r13,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 9, 5, 0.007483084643993367, ["mov     rbx, [sp_0+8]", "test    rbx, rbx", "jnz     short loc_C665"], ["mov~rbx,[sp_0+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 20, 0, 1, 3, 0, 2, 9, 6, 0.0, ["mov     edi, [p_0+44h]; fd", "call    _close", "jmp     loc_C641"], ["mov~edi,[p_0+0]", "call~FOO", "jmp~FOO"]], [0, 0, 54, 0, 0, 1, 0, 0, 12, 8, 0.00013442667025137788, ["mov     rbx, r13"], ["mov~rbx,r13"]], [0, 0, 54, 0, 1, 4, 1, 2, 11, 6, 0.003259846753595914, ["mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jnz     short loc_CA4A"], ["mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 10, 4, 0.005097011247031411, ["jmp     short loc_C688"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 3, 1, 1, 13, 7, 0.004402473450732625, ["test    eax, eax", "mov     [p_0+44h], eax", "js      loc_CF3B"], ["test~eax,eax", "mov~[p_0+0],eax", "js~FOO"]], [0, 0, 36, 0, 1, 5, 1, 2, 12, 8, 0.0012602500336066677, ["mov     edi, [sp_0+2Ch]; fd", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "jmp     loc_CE47"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.0023860733969619575, ["mov     [sp_0], p_0", "jmp     loc_C8E8"], ["mov~<TAG>,p_0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 13, 2, 0.003495093426535825, ["cmp     ax, 1", "jnz     loc_C5E0"], ["cmp~ax,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 4, 0, 1, 12, 3, 0.007796746874579917, ["mov     rsi, [parent+68h]", "lea     rdx, [rsi-1]", "cmp     rdx, 0FFFFFFFFFFFFFFFDh", "ja      short loc_CD0A"], ["mov~rsi,[parent+0]", "lea~rdx,[rsi-1]+0]", "cmp~rdx,0", "ja~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 13, 3, 0.0, ["mov     [parent+68h], rdx"], ["mov~[parent+0],rdx"]], [2, 0, 40, 1, 2, 12, 1, 3, 10, 6, 0.009645113590536363, ["mov     rdx, [p_0+60h]", "lea     tmp, [p_0+108h]", "mov     rdi, [sp_0+20h]; dest", "mov     rsi, rbp; src", "mov     [p_0+48h], rdx", "add     rdx, 1; n", "call    _memmove", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_C883"], ["mov~rdx,[p_0+0]", "lea~tmp,[p_0+0]", "mov~rdi,[sp_0+0]", "mov~rsi,rbp", "mov~[p_0+0],rdx", "add~rdx,0", "call~FOO", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 1, 1, 14, 6, 0.002218040059147735, ["or      word ptr [p_0+72h], 2", "jmp     loc_CDB6"], ["or~[ord ptr [p_0+0],0", "jmp~FOO"]], [0, 0, 39, 0, 0, 2, 0, 1, 11, 7, 0.0016131200430165346, ["cmp     rbp, rax", "jz      loc_CB78"], ["cmp~rbp,rax", "jz~FOO"]], [0, 0, 18, 0, 2, 5, 1, 3, 11, 5, 0.0009913966931039118, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jz      short loc_C67F"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [0, 0, 18, 0, 0, 4, 1, 1, 10, 6, 0.0026213200699018685, ["mov     rdi, [rbx+18h]; dirp", "mov     r13, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_C650"], ["mov~rdi,[rbx+0]", "mov~r13,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 12, 7, 0.00013442667025137788, ["mov     rbx, r13"], ["mov~rbx,r13"]], [0, 0, 18, 0, 1, 4, 1, 2, 11, 5, 0.0009913966931039118, ["mov     rdi, rbx; sp_0", "call    free", "test    r13, r13", "jnz     short loc_C662"], ["mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 12, 4, 0.018483667159564458, ["cmp     word ptr [rbx+70h], 2", "jz      short loc_C5D1"], ["cmp~[ord ptr [rbx+0],0", "jz~FOO"]], [0, 1, 19, 0, 1, 7, 1, 2, 11, 5, 0.009292243581126496, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "jmp     loc_C5B6"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 12, 5, 0.00909060357574943, ["mov     eax, [sp_0+48h]"], ["mov~eax,[sp_0+0]"]], [0, 0, 4, 0, 0, 3, 0, 1, 16, 2, 0.0009745933593224897, ["mov     rsi, [p_0+78h]", "cmp     [rax+8], rsi", "jnz     loc_C5E0"], ["mov~rsi,[p_0+0]", "cmp~[rax+0],rsi", "jnz~FOO"]], [1, 0, 49, 0, 0, 1, 0, 0, 12, 5, 0.008771340233902407, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [0, 0, 12, 0, 0, 1, 0, 1, 13, 5, 0.0004704933458798226, ["jmp     loc_C8EF"], ["jmp~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 11, 4, 0.0024532867320876464, ["mov     esi, [sp_0+2Ch]; dir_fd", "mov     rdi, parent; p", "call    leaf_optimization_0", "cmp     eax, 2", "jnz     loc_CCC4"], ["mov~esi,[sp_0+0]", "mov~rdi,parent", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 10, 4, 0.0048393601290496035, ["mov     eax, [sp_0+48h]", "and     eax, 18h", "cmp     eax, 18h", "jz      loc_CE6B"], ["mov~eax,[sp_0+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 17, 2, 0.0, ["mov     rcx, [rdx+78h]", "mov     rdx, [rdx+80h]", "mov     [rax+8], rcx", "mov     [rax], rdx", "jmp     loc_C5E0"], ["mov~rcx,[rdx+0]", "mov~rdx,[rdx+0]", "mov~[rax+0],rcx", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 36, 0, 2, 9, 0, 2, 12, 6, 0.0018147600483936013, ["lea     r13, [rax+1]", "mov     rdi, r13; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     r14, rax", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memmove", "mov     [p_0+60h], r14"], ["lea~r13,[rax+0]", "mov~rdi,r13", "call~FOO", "lea~rdx,[rax+0]", "mov~r14,rax", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[p_0+0],r14"]], [1, 0, 38, 0, 0, 2, 0, 1, 12, 7, 0.000571313348568356, ["cmp     byte ptr [p_0+109h], 0", "jnz     loc_C861"], ["cmp~[yte ptr [p_0+0],0", "jnz~FOO"]], [1, 0, 48, 0, 1, 6, 1, 2, 8, 4, 0.021418649460052876, ["mov     esi, 3; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    rax, rax", "mov     [sp_0+8], rax", "jz      loc_CBF4"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 7, 5, 0.014798135950172512, ["mov     rbx, [r12+8]", "test    rbx, rbx", "jz      loc_CA70"], ["mov~rbx,[r12+0]", "test~rbx,rbx", "jz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 9, 6, 0.011930366984809787, ["mov     p_0, rax"], ["mov~p_0,rax"]], [1, 0, 173, 1, 0, 12, 2, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 60h", "mov     rbp, [sp_0]", "mov     rax, fs:28h", "mov     [rsp+88h+var_30], rax", "xor     eax, eax", "test    rbp, rbp", "jz      loc_C7C8"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~rbp,rbp", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 10, 5, 0.019895147197203925, ["mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 36, 0, 1, 7, 2, 2, 10, 6, 0.0025205000672133353, ["call    ___errno_location", "mov     eax, [rax]", "or      word ptr [p_0+72h], 1", "mov     [p_0+40h], eax", "mov     p_0, [sp_0+8]", "test    p_0, p_0", "jz      loc_CA8E"], ["call~FOO", "mov~eax,<TAG>", "or~[ord ptr [p_0+0],0", "mov~[p_0+0],eax", "mov~p_0,[sp_0+0]", "test~p_0,p_0", "jz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, 6, 0.002218040059147735, ["jmp     loc_CA8E"], ["jmp~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 10, 6, 0.0011090200295738675, ["mov     p_0, [sp_0+8]", "jmp     loc_CA8E"], ["mov~p_0,[sp_0+0]", "jmp~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 13, 6, 0.0006049200161312004, ["jmp     loc_C883"], ["jmp~FOO"]], [2, 0, 12, 0, 0, 4, 1, 1, 11, 3, 0.007012591298113545, ["test    dword ptr [sp_0+48h], 102h", "mov     r13d, 6", "mov     [p_0+70h], r13w", "jnz     loc_CD70"], ["test~[word ptr [sp_0+0],0", "mov~r13d,0", "mov~[p_0+0],r13w", "jnz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 12, 4, 0.0017475467132679124, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [4, 0, 36, 1, 0, 6, 3, 1, 7, 5, 0.0018987767173007126, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 90900h; flags", "test    ah, 2", "jnz     short loc_CEF0"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jnz~FOO"]], [2, 0, 3, 0, 2, 7, 1, 3, 8, 2, 0.00048729667966124484, ["mov     rdi, rbx; ptr", "xor     ebp, ebp", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "jmp     loc_C5E0"], ["mov~rdi,rbx", "xor~ebp,ebp", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 7, 3, 0.01735784379620917, ["mov     [sp_0], rbx", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [rbx+58h], 0FFFFFFFFFFFFFFFFh", "jz      loc_CC83"], ["mov~<TAG>,rbx", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [rbx+0],0", "jz~FOO"]], [0, 1, 172, 0, 0, 4, 1, 1, 1, 3, 0.005645920150557871, ["mov     edx, [sp_0+48h]", "mov     r12, sp_0", "test    dh, 20h", "jnz     loc_C7C8"], ["mov~edx,[sp_0+0]", "mov~r12,sp_0", "test~dh,<STR>", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 11, 6, 0.0015627100416722678, ["test    al, 1", "jnz     loc_C5B1"], ["test~al,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 7, 0.00774633687323565, ["movzx   eax, word ptr [rbx+72h]", "test    al, 2", "jz      loc_CAA0"], ["movzx~eax,[ord ptr [rbx+0]", "test~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 12, 2, 0.004805753461486759, ["mov     rax, [p_0+8]", "test    rax, rax", "jz      loc_C5E0"], ["mov~rax,[p_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 34, 0, 1, 4, 1, 1, 8, 4, 0.001285455034278801, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO"]], [1, 0, 25, 0, 0, 3, 0, 1, 9, 4, 0.027467849621364882, ["mov     rbx, [p_0+8]", "cmp     qword ptr [parent+68h], 0", "jnz     short loc_CCC4"], ["mov~rbx,[p_0+0]", "cmp~[word ptr [parent+0],0", "jnz~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 8, 3, 0.03543262983375903, ["mov     rax, [p_0+0A8h]", "cmp     rax, 2", "jz      loc_CCA8"], ["mov~rax,[p_0+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 13, 2, 0.0031254200833445355, ["cmp     qword ptr [rax+58h], 0", "js      loc_C5E0"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 9, 3, 0.004520096787202581, ["test    eax, eax", "mov     [p_0+44h], eax", "js      short loc_CF05"], ["test~eax,eax", "mov~[p_0+0],eax", "js~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 8, 4, 0.001285455034278801, ["mov     edi, [sp_0+2Ch]; fd", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "jmp     short loc_CEB0"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 171, 0, 0, 5, 0, 1, 2, 3, 0.011224626965990053, ["movzx   eax, word ptr [p_0+74h]", "mov     ecx, 3", "mov     [p_0+74h], cx", "cmp     ax, 1", "jz      loc_C7E0"], ["movzx~eax,[ord ptr [p_0+0]", "mov~ecx,0", "mov~[p_0+0],cx", "cmp~ax,0", "jz~FOO"]], [1, 0, 31, 0, 0, 3, 1, 1, 10, 4, 0.004419276784514048, ["or      word ptr [p_0+72h], 2", "movzx   eax, word ptr [p_0+70h]", "jmp     check_for_dir"], ["or~[ord ptr [p_0+0],0", "movzx~eax,[ord ptr [p_0+0]", "jmp~FOO"]], [1, 0, 21, 0, 1, 7, 1, 2, 12, 6, 6.721333512568894e-05, ["mov     rsi, [rbx+8]; p", "lea     rcx, dir; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_C5B1"], ["mov~rsi,[rbx+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 14, 3, 0.0024868933996504907, ["mov     rdx, [sp_0+58h]", "cmp     qword ptr [rdx+10h], 0", "jz      loc_CEE7"], ["mov~rdx,[sp_0+0]", "cmp~[word ptr [rdx+0],0", "jz~FOO"]], [1, 0, 31, 0, 1, 10, 1, 1, 12, 4, 0.01135905363624143, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Fh; candidate", "mov     rbp, p_0", "call    hash_initialize", "mov     [sp_0+58h], rax", "movzx   eax, word ptr [p_0+70h]", "nop     dword ptr [rax+00h]"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "mov~rbp,p_0", "call~FOO", "mov~[sp_0+0],rax", "movzx~eax,[ord ptr [p_0+0]", "nop~[word ptr [rax+0]"]], [1, 0, 155, 0, 0, 2, 0, 1, 4, 6, 0.011560693641618498, ["cmp     cx, 1", "jnz     short next"], ["cmp~cx,0", "jnz~FOO"]], [0, 0, 84, 0, 0, 1, 0, 1, 5, 8, 0.003170228973428328, ["jmp     loc_C7D0"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 15, 2, 0.0017811533808307569, ["mov     rsi, [p_0+80h]", "cmp     [rdx], rsi", "jnz     loc_C5E0"], ["mov~rsi,[p_0+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 0, 30, 0, 0, 3, 0, 1, 10, 3, 0.05812833266119999, ["cmp     ax, 0Bh", "mov     [sp_0], p_0", "jz      loc_C730"], ["cmp~ax,0", "mov~<TAG>,p_0", "jz~FOO"]], [3, 0, 31, 2, 1, 15, 0, 2, 9, 4, 0.038350808800466006, ["mov     rax, [p_0+8]", "lea     rsi, [p_0+108h]; src", "mov     rdi, [rax+48h]", "mov     rax, [rax+38h]", "cmp     byte ptr [rax+rdi-1], 2Fh ; '/'", "lea     rdx, [rdi-1]", "cmovz   rdi, rdx", "add     rdi, [sp_0+20h]", "mov     byte ptr [rdi], 2Fh ; '/'", "mov     rax, [p_0+60h]", "add     rdi, 1; dest", "lea     rdx, [rax+1]; n", "call    _memmove", "movzx   eax, word ptr [p_0+70h]", "jmp     check_for_dir"], ["mov~rax,[p_0+0]", "lea~rsi,[p_0+0]", "mov~rdi,[rax+0]", "mov~rax,[rax+0]", "cmp~[yte ptr [rax+0],0", "lea~rdx,[rdi-1]+0]", "cmovz~rdi,rdx", "add~rdi,[sp_0+0]", "mov~<TAG>,0", "mov~rax,[p_0+0]", "add~rdi,0", "lea~rdx,[rax+0]", "call~FOO", "movzx~eax,[ord ptr [p_0+0]", "jmp~FOO"]], [0, 1, 42, 0, 0, 2, 1, 1, 8, 3, 0.0020500067213335125, ["test    byte ptr [sp_0+49h], 20h", "jnz     loc_C7C8"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 10, 6, 0.009762736927006318, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jnz     short loc_CAC8"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 1, 7, 1, 2, 12, 3, 0.001019402249406282, ["mov     rdi, [sp_0+58h]; table", "lea     rsi, [rsp+88h+var_68]; entry", "movdqu  xmm0, xmmword ptr [p_0+78h]", "movaps  [rsp+88h+var_68], xmm0", "call    hash_delete", "test    rax, rax", "jnz     loc_CD8F"], ["mov~rdi,[sp_0+0]", "lea~rsi,[rsp+0]", "movdqu~xmm0,[mmword ptr [p_0+0]", "movaps~[rsp+0],xmm0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 11, 2, 0.02745664739884393, ["cmp     ax, 1", "jnz     loc_C5E0"], ["cmp~ax,0", "jnz~FOO"]], [1, 1, 21, 0, 1, 9, 2, 2, 10, 3, 0.01980552941703634, ["xor     edx, edx; follow", "mov     rsi, p_0; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     edx, [p_0+90h]", "mov     [p_0+70h], ax", "and     edx, 0F000h", "cmp     edx, 4000h", "jnz     loc_C8DE"], ["xor~edx,edx", "mov~rsi,p_0", "mov~rdi,sp_0", "call~FOO", "mov~edx,[p_0+0]", "mov~[p_0+0],ax", "and~edx,0", "cmp~edx,<STR>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 12, 3, 0.0002352466729399113, ["movzx   eax, word ptr [p_0+70h]", "jmp     loc_C8DE"], ["movzx~eax,[ord ptr [p_0+0]", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 8, 4, 0.023726307299368195, ["cmp     qword ptr [p_0+58h], 0", "jnz     short loc_C8F8"], ["cmp~[word ptr [p_0+0],0", "jnz~FOO"]], [0, 0, 103, 0, 0, 3, 1, 1, 5, 5, 0.022622888381054806, ["mov     rbx, [tmp+10h]", "test    rbx, rbx", "jnz     short loc_C4E0"], ["mov~rbx,[tmp+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 37, 0, 0, 5, 0, 1, 9, 7, 0.017408253797553435, ["mov     rdx, [sp_0+20h]", "mov     rax, [rbx+48h]", "mov     byte ptr [rdx+rax], 0", "cmp     qword ptr [rbx+58h], 0", "jz      loc_CAE8"], ["mov~rdx,[sp_0+0]", "mov~rax,[rbx+0]", "mov~<TAG>,0", "cmp~[word ptr [rbx+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 9, 4, 0.0007729533539454228, ["mov     rax, [p_0+78h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p_0+0]", "mov~[sp_0+0],rax"]], [0, 0, 20, 0, 0, 1, 0, 1, 11, 6, 0.00031926334184702245, ["jmp     loc_C5B1"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 17, 2, 0.0, ["mov     rcx, [rax+78h]", "mov     rax, [rax+80h]", "mov     [rdx+8], rcx", "mov     [rdx], rax", "jmp     loc_C5E0"], ["mov~rcx,[rax+0]", "mov~rax,[rax+0]", "mov~[rdx+0],rcx", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 16, 2, 0.0008737733566339562, ["mov     rsi, [p_0+78h]", "cmp     [rdx+8], rsi", "jnz     loc_C5E0"], ["mov~rsi,[p_0+0]", "cmp~[rdx+0],rsi", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 9, 3, 0.021004167226777795, ["test    dword ptr [sp_0+48h], 102h", "jz      loc_C9C0"], ["test~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 14, 4, 0.0009409866917596452, ["jmp     loc_C8F8"], ["jmp~FOO"]], [1, 0, 103, 0, 0, 4, 0, 1, 7, 6, 0.007060200743827576, ["movzx   eax, word ptr [p_0+74h]", "mov     tmp, p_0", "cmp     ax, 4", "jnz     loc_C970"], ["movzx~eax,[ord ptr [p_0+0]", "mov~tmp,p_0", "cmp~ax,0", "jnz~FOO"]], [2, 0, 15, 0, 0, 4, 1, 1, 14, 5, 0.01045167361204463, ["mov     edx, 6", "test    eax, 102h", "mov     [rbx+70h], dx", "jnz     loc_CBC0"], ["mov~edx,0", "test~eax,0", "mov~[rbx+0],dx", "jnz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 13, 5, 0.012568893668503832, ["mov     esi, [rbx+40h]", "test    esi, esi", "jz      loc_CB00"], ["mov~esi,[rbx+0]", "test~esi,esi", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 1, 2, 10, 3, 0.011829546982121254, ["mov     edi, 18h; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_CB98"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 73, 0, 0, 3, 0, 1, 6, 4, 0.01581473764394856, ["mov     rbx, [tmp+8]", "cmp     qword ptr [rbx+18h], 0", "jnz     loc_CD30"], ["mov~rbx,[tmp+0]", "cmp~[word ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 15, 4, 0.006586906842317516, ["mov     rdx, [rbx+8]", "test    rdx, rdx", "jz      loc_C5D1"], ["mov~rdx,[rbx+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 10, 2, 0.0004704933458798226, ["call    ___errno_location", "mov     eax, [rax]", "mov     r14d, 7", "mov     [p_0+70h], r14w", "mov     [p_0+40h], eax", "mov     [sp_0], p_0", "jmp     loc_C5E0"], ["call~FOO", "mov~eax,<TAG>", "mov~r14d,0", "mov~[p_0+0],r14w", "mov~[p_0+0],eax", "mov~<TAG>,p_0", "jmp~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 6, 2, 0.003674328986870995, ["cmp     ax, 0Bh", "mov     [sp_0], p_0", "jnz     loc_C5E0"], ["cmp~ax,0", "mov~<TAG>,p_0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 16, 4, 0.005276246807366582, ["cmp     qword ptr [rdx+58h], 0", "js      loc_C5D1"], ["cmp~[word ptr [rdx+0],0", "js~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 7, 4, 0.004077608997625128, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 41, 0, 0, 2, 0, 1, 9, 4, 0.0024868933996504907, ["mov     rbx, [tmp+8]", "jmp     cd_dot_dot"], ["mov~rbx,[tmp+0]", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 17, 5, 0.004100013442667025, ["mov     rcx, [sp_0+58h]", "cmp     qword ptr [rcx+10h], 0", "jz      loc_CEE7"], ["mov~rcx,[sp_0+0]", "cmp~[word ptr [rcx+0],0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 8, 8, 0.01720661379217637, ["cmp     word ptr [rbx+70h], 0Bh", "jz      loc_CEE7"], ["cmp~[ord ptr [rbx+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 9, 2, 0.004167226777792714, ["cmp     rax, 1", "jz      loc_C5E0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 18, 4, 0.0029573867455303135, ["mov     rsi, [rbx+80h]", "cmp     [rcx], rsi", "jnz     loc_C5D1"], ["mov~rsi,[rbx+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 10, -1, 0.0016131200430165346, ["jmp     loc_CEE7"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 3, 2, 1, 8, 2, 0.0003864766769727114, ["or      dword ptr [sp_0+48h], 2000h", "xor     ebp, ebp", "jmp     loc_C5E0"], ["or~[word ptr [sp_0+0],0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 33, 0, 1, 6, 0, 2, 14, 6, 0.002218040059147735, ["call    ___errno_location", "mov     eax, [rax]", "mov     r10d, 7", "mov     [p_0+70h], r10w", "mov     [p_0+40h], eax", "jmp     loc_CDB6"], ["call~FOO", "mov~eax,<TAG>", "mov~r10d,0", "mov~[p_0+0],r10w", "mov~[p_0+0],eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 13, 2, 5.0410001344266705e-05, ["mov     rax, [r12+10h]", "mov     r8d, 2", "mov     [p_0+70h], r8w", "mov     [p_0+0], rax", "jmp     loc_C5E0"], ["mov~rax,[r12+0]", "mov~r8d,0", "mov~[p_0+0],r8w", "mov~[p_0+0],rax", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 12, 3, 0.0030582067482188466, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      loc_CB98"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 6, 0, 1, 9, 0, 2, 11, 2, 0.006032396827530582, ["movdqu  xmm0, xmmword ptr [p_0+78h]", "mov     rsi, rax; entry", "mov     rdi, [sp_0+58h]; table", "mov     [rax+10h], p_0", "movups  xmmword ptr [rax], xmm0", "call    hash_insert", "cmp     rbx, rax", "mov     sp_0, rax", "jz      loc_C5E0"], ["movdqu~xmm0,[mmword ptr [p_0+0]", "mov~rsi,rax", "mov~rdi,[sp_0+0]", "mov~[rax+0],p_0", "movups~<TAG>,xmm0", "call~FOO", "cmp~rbx,rax", "mov~sp_0,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 14, 9, 0.00016803333781422234, ["cmp     esi, 0FFFFFF9Ch", "jnz     loc_CEE7"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 15, 5, 0.0018147600483936013, ["mov     rdi, [sp_0+58h]; table", "lea     rsi, [rsp+88h+entry]; entry", "movdqu  xmm0, xmmword ptr [rbx+78h]", "movaps  [rsp+88h+entry], xmm0", "call    hash_delete", "test    rax, rax", "jz      loc_CEE7"], ["mov~rdi,[sp_0+0]", "lea~rsi,[rsp+0]", "movdqu~xmm0,[mmword ptr [rbx+0]", "movaps~[rsp+0],xmm0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 1, 7, 1, 2, 12, 3, 0.001131424474615764, ["mov     rdi, [sp_0+58h]; table", "mov     rsi, rsp; entry", "movdqu  xmm0, xmmword ptr [p_0+78h]", "movaps  [rsp+88h+var_88], xmm0", "call    hash_delete", "test    rax, rax", "jz      loc_CEE7"], ["mov~rdi,[sp_0+0]", "mov~rsi,rsp", "movdqu~xmm0,[mmword ptr [p_0+0]", "movaps~<TAG>,xmm0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 20, 4, 0.0, ["mov     rsi, [rdx+78h]", "mov     rdx, [rdx+80h]", "mov     [rcx+8], rsi", "mov     [rcx], rdx", "jmp     loc_C5D1"], ["mov~rsi,[rdx+0]", "mov~rdx,[rdx+0]", "mov~[rcx+0],rsi", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 19, 4, 0.0014114800376394678, ["mov     rsi, [rbx+78h]", "cmp     [rcx+8], rsi", "jnz     loc_C5D1"], ["mov~rsi,[rbx+0]", "cmp~[rcx+0],rsi", "jnz~FOO"]], [1, 0, 30, 0, 0, 4, 1, 1, 11, 7, 0.006116413496437693, ["mov     eax, [sp_0+48h]", "mov     ebp, [rbx+44h]", "test    al, 4", "jnz     short loc_C5AA"], ["mov~eax,[sp_0+0]", "mov~ebp,[rbx+0]", "test~al,0", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 8, 5, 0.006556100730384908, ["cmp     ax, 2", "jz      loc_CD9C"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 1, 1, 12, 9, 0.005209033472240893, ["test    ah, 2", "jz      loc_CDDE"], ["test~ah,0", "jz~FOO"]], [1, 0, 38, 0, 1, 7, 1, 2, 9, 7, 0.003293453421158758, ["mov     rcx, [p_0+30h]; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, p_0; p", "mov     sp_0, r12; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_CB8A"], ["mov~rcx,[p_0+0]", "mov~edx,0", "mov~rsi,p_0", "mov~sp_0,r12", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 0, 1, 13, 9, 0.0028229600752789357, ["mov     esi, [sp_0+2Ch]; val", "cmp     esi, ebp", "jnz     short loc_C58D"], ["mov~esi,[sp_0+0]", "cmp~esi,ebp", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 13, 2, 0.00020164000537706682, ["mov     rdi, rax; ptr", "call    free", "jmp     loc_C5E0"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 14, 8, 0.0028229600752789357, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_C5A2"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 22, 0, 1, 2, 0, 1, 15, 8, 0.0, ["mov     edi, eax; fd", "call    _close"], ["mov~edi,eax", "call~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 11, 8, 0.0010082000268853341, ["mov     rax, p_0", "nop     dword ptr [p_0+p_0+00h]"], ["mov~rax,p_0", "nop~[word ptr [p_0+0]"]], [1, 0, 3, 0, 1, 4, 1, 2, 11, 2, 0.00010082000268853341, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     loc_C5E0"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 15, 7, 0.0027557467401532467, ["mov     [sp_0+2Ch], ebp", "mov     ebp, [rbx+44h]"], ["mov~[sp_0+0],ebp", "mov~ebp,[rbx+0]"]], [0, 0, 20, 0, 1, 2, 0, 1, 12, 6, 0.006586906842317516, ["mov     edi, ebp; fd", "call    _close"], ["mov~edi,ebp", "call~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 14, 7, 0.002083613388896357, ["mov     ebp, [rbx+44h]", "jmp     loc_C5AA"], ["mov~ebp,[rbx+0]", "jmp~FOO"]], [1, 0, 32, 0, 0, 4, 0, 1, 10, 5, 0.008603306896088184, ["mov     r9d, 3", "mov     rbp, p_0", "mov     [p_0+74h], r9w", "jmp     name"], ["mov~r9d,0", "mov~rbp,p_0", "mov~[p_0+0],r9w", "jmp~FOO"]], [0, 0, 35, 0, 0, 6, 1, 1, 12, 7, 0.001646726710579379, ["mov     rdx, [p_0+8]", "mov     rdx, [rdx+30h]", "mov     [p_0+30h], rdx", "mov     p_0, [p_0+10h]", "test    p_0, p_0", "jnz     short loc_C7A8"], ["mov~rdx,[p_0+0]", "mov~rdx,[rdx+0]", "mov~[p_0+0],rdx", "mov~p_0,[p_0+0]", "test~p_0,p_0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.0033774700900658693, ["xor     ebp, ebp", "jmp     loc_C5E0"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 1, 5, 0, 0, 3, 1, 1, 13, 3, 0.005948380158623472, ["test    ah, 20h", "mov     rbp, rbx", "jnz     loc_C7C8"], ["test~ah,<STR>", "mov~rbp,rbx", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 0, 14, 4, 0.00020164000537706682, ["mov     ecx, 7", "mov     [rbx+70h], cx"], ["mov~ecx,0", "mov~[rbx+0],cx"]], [0, 0, 4, 0, 1, 5, 1, 2, 10, 2, 0.0035959134292243584, ["mov     rdi, [sp_0+58h]; state", "lea     rsi, [p_0+78h]; sb", "call    cycle_check", "test    al, al", "jz      loc_C5E0"], ["mov~rdi,[sp_0+0]", "lea~rsi,[p_0+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 2, 16, 4, 0.00020164000537706682, ["mov     rdi, rax; ptr", "call    free", "mov     eax, [sp_0+48h]", "jmp     loc_C5D1"], ["mov~rdi,rax", "call~FOO", "mov~eax,[sp_0+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 14, 2, 0.0016635300443608014, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 3, 0, 0, 4, 0, 1, 11, 2, 0.0, ["mov     edi, 2", "mov     [p_0+0], p_0", "mov     [p_0+70h], di", "jmp     loc_C5E0"], ["mov~edi,0", "mov~[p_0+0],p_0", "mov~[p_0+0],di", "jmp~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 13, 8, 0.0020164000537706683, ["mov     edi, ebp; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_CDFC"], ["mov~edi,ebp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 3, 2, 0.00010082000268853341, ["xor     edx, edx; follow", "mov     rsi, p_0; p", "call    fts_stat", "mov     [p_0+70h], ax", "jmp     loc_C5E0"], ["xor~edx,edx", "mov~rsi,p_0", "call~FOO", "mov~[p_0+0],ax", "jmp~FOO"]], [1, 0, 22, 0, 1, 4, 1, 1, 14, 8, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+40h], eax", "or      dword ptr [sp_0+48h], 2000h"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "or~[word ptr [sp_0+0],0"]]], "func_feature": [58, 83, 205, 3, 174, 278, 3, 620, 0.00582, 6, 7], "succs": [[137, 14], [0, 121], [], [2, 139], [13], [4, 13], [100, 5], [19, 20], [19, 7], [26, 15], [9, 101], [64, 3], [11, 143], [104], [24, 18], [113, 22], [162, 38], [16, 162], [21, 54], [108, 28], [19], [54], [73, 29], [34, 22], [54], [50, 83], [128, 25], [8, 164], [32, 3], [33, 73], [42], [152, 30], [3, 12], [43, 44], [33], [66, 3], [35, 52], [48], [49, 37], [105], [106, 39], [65, 45], [41, 46], [58, 47], [43], [42], [65, 45], [81], [138, 55], [48], [112], [120, 3], [51, 53], [51], [56, 6], [162], [70, 71], [82, 59], [57, 60], [58], [82, 59], [123, 165], [61], [61], [3, 69], [72], [115], [110, 111], [67, 110], [3], [6], [80, 70], [74, 27], [72, 31], [76], [164, 86], [105], [76, 157], [76], [76], [6], [89, 146], [81], [90, 95], [3], [84, 133], [96, 164], [98, 63], [149, 87], [3, 93], [94], [68, 110], [91, 134], [3, 99], [97, 127], [94], [10, 172], [104], [62, 63], [143, 103], [104], [113, 102], [23], [3, 118], [92, 109], [104], [131, 164], [116, 62], [154, 143], [112, 3], [36, 109], [109], [115, 119], [1, 125], [88, 107], [119], [63], [3], [3, 117], [124, 167], [119], [113, 150], [145, 126], [122, 166], [158, 142], [40, 85], [129, 165], [3], [130, 3], [132, 165], [92], [85], [143, 135], [114, 143], [136, 3], [148, 165], [143], [3], [162], [], [3], [140, 158], [3, 141], [], [155, 143], [168, 143], [154, 143], [165], [147, 165], [160, 151], [17, 105], [153, 171], [77, 79], [144, 155], [3], [156, 159], [159], [163], [3], [160], [63], [160], [105], [163, 78], [3], [169, 164], [165], [170, 3], [165], [3], [3], [161, 173], [3], [161]], "fname": "rpl_fts_read", "n_num": 174}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[4, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     edx, 4", "ja      short loc_CF70"], ["cmp~edx,0", "ja~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["mov     [p+74h], dx", "xor     eax, eax", "retn"], ["mov~[p+0],dx", "xor~eax,eax", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 3, 11, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "rpl_fts_set", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 32, 0, 0, 3, 0, 1, 0, 0, 0.05126050420168068, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 9", "jz      loc_D078"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 1, 33, 0, 0, 4, 1, 1, 1, 15, 0.02689075630252101, ["mov     r13, [sp_0+0]", "mov     dword ptr [rax], 0", "test    byte ptr [sp_0+49h], 20h", "jnz     loc_D090"], ["mov~r13,[sp_0+0]", "mov~<TAG>,0", "test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 27, 0, 2, 5, 1, 3, 6, 11, 0.02184873949579832, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      short loc_D027"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 5, 12, 0.03529411764705882, ["mov     rdi, [rbx+18h]; dirp", "mov     r12, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_CFF8"], ["mov~rdi,[rbx+0]", "mov~r12,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, 13, 0.0033613445378151263, ["mov     rbx, r12"], ["mov~rbx,r12"]], [0, 0, 27, 0, 1, 4, 1, 2, 6, 11, 0.02184873949579832, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jnz     short loc_D00A"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     edi, eax; fd", "call    _close"], ["mov~edi,eax", "call~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 15, -1, 0.040336134453781515, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_D111"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 16, -1, 0.0067226890756302525, ["mov     [sp_0+2Ch], r12d"], ["mov~[sp_0+0],r12d"]], [0, 0, 28, 0, 0, 3, 1, 1, 4, 12, 0.09327731092436975, ["mov     rbx, [sp_0+8]", "test    rbx, rbx", "jnz     short loc_D00D"], ["mov~rbx,[sp_0+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 16, -1, 0.005042016806722689, ["mov     rax, [sp_0+8]", "jmp     loc_D066"], ["mov~rax,[sp_0+0]", "jmp~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 15, -1, 0.01764705882352941, ["mov     edi, r12d; fd", "call    _close", "jmp     short loc_D115"], ["mov~edi,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 1, 2, 15, -1, 0.0016806722689075631, ["mov     ebx, [r15]", "mov     edi, r12d; fd", "call    _close", "xor     eax, eax", "mov     [r15], ebx", "jmp     loc_D066"], ["mov~ebx,<TAG>", "mov~edi,r12d", "call~FOO", "xor~eax,eax", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 14, -1, 0.05126050420168068, ["mov     edi, r12d; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_D175"], ["mov~edi,r12d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 2, -1, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     rbx", "pop     sp_0", "pop     r12", "pop     p", "pop     instr", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~sp_0", "pop~r12", "pop~p", "pop~instr", "pop~r15", "retn"]], [1, 0, 30, 0, 0, 2, 0, 1, 3, 13, 0.073109243697479, ["cmp     ax, 1", "jnz     loc_D090"], ["cmp~ax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 1, -1, 0.0008403361344537816, ["mov     dword ptr [rax], 16h", "xor     eax, eax", "jmp     loc_D066"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 35, 1, 1, 13, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "mov     r14d, esi", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, sp_0", "sub     rsp, 8", "call    ___errno_location", "test    r14d, 0FFFFEFFFh", "mov     r15, rax", "jnz     loc_D120"], ["push~r15", "push~r14", "mov~r14d,esi", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,sp_0", "sub~rsp,0", "call~FOO", "test~r14d,0", "mov~r15,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 14, 2, 0.08403361344537816, ["mov     esi, [sp_0+2Ch]; val", "cmp     r12d, esi", "jnz     short loc_D0FD"], ["mov~esi,[sp_0+0]", "cmp~r12d,esi", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 1, 0.01764705882352941, ["cmp     esi, 0FFFFFF9Ch", "jnz     loc_D18A"], ["cmp~esi,0", "jnz~FOO"]], [2, 0, 22, 0, 0, 3, 0, 1, 6, 10, 0.18403361344537816, ["cmp     r14d, 1000h", "mov     ebx, 1", "jnz     short loc_D041"], ["cmp~r14d,0", "mov~ebx,0", "jnz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 1, 5, 11, 0.0957983193277311, ["jmp     short loc_D027"], ["jmp~FOO"]], [4, 0, 16, 1, 0, 6, 3, 1, 10, 6, 0.18907563025210086, ["mov     esi, eax", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags", "test    ah, 2", "jnz     short loc_D130"], ["mov~esi,eax", "shl~esi,0", "and~esi,0", "or~esi,0", "test~ah,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 9, 7, 0.18823529411764706, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      short loc_D0A8"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["mov     rax, [p+10h]", "add     rsp, 8", "pop     rbx", "pop     sp_0", "pop     r12", "pop     p", "pop     instr", "pop     r15", "retn"], ["mov~rax,[p+0]", "add~rsp,0", "pop~rbx", "pop~sp_0", "pop~r12", "pop~p", "pop~instr", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 14, 0, 1, 7, 1, 2, 11, 5, 0.08781512605042018, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "mov     r12d, eax", "jmp     short loc_D0CF"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "mov~r12d,eax", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 7, 9, 0.2008403361344538, ["cmp     qword ptr [p+58h], 0", "jnz     short loc_D058"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [2, 0, 21, 0, 0, 2, 1, 0, 7, 10, 0.0, ["or      dword ptr [sp_0+48h], 1000h", "mov     ebx, 2"], ["or~[word ptr [sp_0+0],0", "mov~ebx,0"]], [0, 0, 14, 0, 1, 4, 1, 1, 11, 5, 0.08781512605042018, ["lea     rdi, dir+1; file", "xor     eax, eax", "call    open_safer", "mov     r12d, eax"], ["lea~rdi,<TAG>", "xor~eax,eax", "call~FOO", "mov~r12d,eax"]], [1, 0, 19, 0, 0, 3, 0, 1, 8, 8, 0.18571428571428572, ["mov     rax, [p+30h]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_D058"], ["mov~rax,[p+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 12, 4, 0.18403361344537816, ["test    r12d, r12d", "js      loc_D166"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 11, 0, 1, 6, 1, 2, 13, 3, 0.1596638655462185, ["mov     esi, ebx; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    byte ptr [sp_0+49h], 2", "mov     [sp_0+8], rax", "jz      short loc_D150"], ["mov~esi,ebx", "mov~rdi,sp_0", "call~FOO", "test~[yte ptr [sp_0+0],0", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 8, -1, 0.011764705882352941, ["mov     esi, ebx; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax"], ["mov~esi,ebx", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax"]], [1, 0, 1, 0, 0, 3, 1, 1, 13, -1, 0.0033613445378151263, ["mov     qword ptr [sp_0+8], 0", "xor     eax, eax", "jmp     loc_D066"], ["mov~[word ptr [sp_0+0],0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     sp_0", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~sp_0", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [14, 21, 40, 0, 36, 51, 0, 142, 0.05917, 1, 5], "succs": [[24, 15], [0, 14], [20, 4], [2, 5], [3], [20, 4], [8], [8, 6], [10], [3, 21], [35], [10], [35], [11, 12], [], [9, 14], [35], [16, 1], [19, 7], [25, 7], [27, 28], [20], [26, 29], [33, 22], [], [], [31], [33, 30], [27], [31], [33, 23], [32, 34], [18, 13], [35], [35], []], "fname": "rpl_fts_children", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_D20E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_D1F0"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_D1F0"], ["test~n,n", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_D1F0"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_D278"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_D24F"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_D258"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_D288"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     qword ptr [state+10h], 0", "mov     dword ptr [state+18h], 95F616h", "retn"], ["mov~[word ptr [state+0],0", "mov~[word ptr [state+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 3, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.01818181818181818, ["mov     qword ptr [state+10h], 1"], ["mov~[word ptr [state+0],0"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, -1, 0.08181818181818182, ["mov     rdx, [state+10h]", "mov     rcx, [sb+8]", "test    rdx, rdx", "jz      short loc_D2E0"], ["mov~rdx,[state+0]", "mov~rcx,[sb+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     dword ptr [state+18h], 95F616h", "jnz     short loc_D317"], ["cmp~[word ptr [state+0],0", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.08181818181818182, ["test    r8, r8", "jz      short loc_D301"], ["test~r8,r8", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, -1, 0.02727272727272727, ["mov     rax, [state+8]", "cmp     [sb], rax", "jnz     short loc_D2CB"], ["mov~rax,[state+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.10909090909090909, ["cmp     [state], rcx", "jz      short loc_D2F8"], ["cmp~<TAG>,rcx", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 2, 1, 3, -1, 0.12727272727272726, ["lea     r8, [rdx+1]", "xor     eax, eax", "test    rdx, r8", "mov     [state+10h], r8", "jz      short loc_D310"], ["lea~r8,[rdx+0]", "xor~eax,eax", "test~rdx,r8", "mov~[state+0],r8", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["mov     rax, [sb]", "mov     [state], rcx", "mov     [state+8], rax", "xor     eax, eax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rcx", "mov~[state+0],rax", "xor~eax,eax", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.03636363636363636, ["jmp     short loc_D2E8"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 1, 1, 6, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3994; \"cycle_check\"", "lea     sb, aLibCycleCheckC; \"lib/cycle-check.c\"", "lea     state, aStateMagic9827; \"state->magic == 9827862\"", "sub     rsp, 8", "mov     edx, 3Ch ; '<'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~sb,<TAG>", "lea~state,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 5, 8, 0, 12, 14, 2, 34, 0.04015, 3, 1], "succs": [[8], [0, 6], [1, 11], [], [9, 3], [3, 7], [5, 7], [10, 4], [], [8], [], []], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_D3A9"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_D361"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_D388"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]]], "func_feature": [3, 5, 6, 3, 5, 5, 5, 25, 0.06667, 1, 2], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_D3E5"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC_0; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_D3F0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 6, 1, 0, 0, 0, 0.0, ["mov     rax, data", "xor     edx, edx", "ror     rax, 3", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "xor~edx,edx", "ror~rax,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0.013157894736842105, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 16, 0, 1, 4, 1, 2, 3, -1, 0.08157894736842106, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D500"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 7, -1, 0.04736842105263158, ["test    r12b, r12b", "jz      short loc_D4EB"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.05263157894736842, ["test    r12b, r12b", "jz      short loc_D4EB"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.002631578947368421, ["mov     qword ptr [rbx], 0", "jmp     short loc_D4EB"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 8, -1, 0.0, ["mov     rdx, [rax+8]", "mov     [cursor+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["mov~rdx,[rax+0]", "mov~[cursor+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 8, 0, 1, 4, 1, 2, 6, -1, 0.060526315789473685, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_D4A0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 5, -1, 0.09473684210526316, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_D4B9"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 8, -1, 0.013157894736842105, ["mov     rsi, [rax]", "cmp     rsi, entry", "jz      short loc_D4CB"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jz~FOO"]], [1, 0, 0, 0, 0, 13, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [rbx], xmm0", "mov     qword ptr [next], 0", "mov     rdx, [table+48h]", "mov     [next+8], rdx", "mov     [table+48h], next", "mov     next, rsi", "pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[next+0],rdx", "mov~[table+0],next", "mov~next,rsi", "pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.031578947368421054, ["mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_D540"], ["mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 2, -1, 0.08421052631578947, ["cmp     rsi, entry", "jz      loc_D503"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 7, -1, 0.007894736842105263, ["mov     rax, [cursor+8]", "mov     rsi, [rax]"], ["mov~rax,[cursor+0]", "mov~rsi,<TAG>"]], [0, 0, 8, 0, 0, 4, 1, 1, 7, -1, 0.02631578947368421, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_D550"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 18, 2, 0, 7, 1, 1, 1, -1, 0.04736842105263158, ["shl     rax, 4", "add     rax, [table+0]", "mov     [bucket_head], rax", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jz      loc_D550"], ["shl~rax,0", "add~rax,[table+0]", "mov~<TAG>,rax", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 20, 0, 1, 14, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_D55E"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 4, -1, 0.08947368421052632, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_D550"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 6, -1, 0.03684210526315789, ["jmp     short loc_D4CB"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     esi, esi", "pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["xor~esi,esi", "pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [4, 9, 17, 0, 21, 29, 2, 92, 0.03283, 0, 2], "succs": [[4], [0, 17], [], [2, 6], [2, 11], [2], [2], [13, 14], [18, 7], [3, 7], [], [10, 5], [1, 4], [3], [9, 19], [19, 12], [20, 15], [8, 19], [3], [], []], "fname": "hash_find_entry", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 22, 0, 0, 1, 0, 0, 0, 0, 0.3517786561264822, ["mov     rax, [src+8]"], ["mov~rax,[src+0]"]], [1, 0, 22, 0, 0, 3, 1, 1, 4, 2, 0.3942687747035573, ["test    r12b, r12b", "mov     qword ptr [bucket+8], 0", "jnz     short loc_D682"], ["test~r12b,r12b", "mov~[word ptr [bucket+0],0", "jnz~FOO"]], [2, 0, 22, 1, 0, 2, 0, 0, 8, 7, 0.2351778656126482, ["mov     qword ptr [bucket], 0", "sub     qword ptr [src+18h], 1"], ["mov~<TAG>,0", "sub~[word ptr [src+0],0"]], [1, 0, 23, 1, 0, 11, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [src]", "mov     rax, [src+8]", "cmp     bucket, rax", "jnb     loc_D693"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,[src+0]", "cmp~bucket,rax", "jnb~FOO"]], [1, 0, 22, 1, 0, 3, 0, 0, 3, 5, 0.3636363636363636, ["add     bucket, 10h", "cmp     bucket, rax", "jb      loc_D5A0"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 2, 4, 0.4110671936758893, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_D686"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 1, 5, 0.04150197628458498, ["mov     r14, dst", "mov     rbp, src", "mov     r12d, edx", "nop     word ptr [rax+rax+00000000h]"], ["mov~r14,dst", "mov~rbp,src", "mov~r12d,edx", "nop~[ord ptr [rax+0]"]], [2, 0, 22, 1, 0, 9, 1, 1, 7, 2, 0.06620553359683794, ["mov     [rax], data", "add     qword ptr [dst+18h], 1", "test    next, next", "mov     qword ptr [cursor+0], 0", "mov     rax, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor", "mov     r13, next", "jnz     short loc_D5D4"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "test~next,next", "mov~[word ptr [cursor+0],0", "mov~rax,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor", "mov~r13,next", "jnz~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 3, 0.16996047430830039, ["shl     rax, 4", "add     rax, [dst]", "mov     rdx, [cursor+8]", "cmp     qword ptr [rax], 0", "jnz     short loc_D5C0"], ["shl~rax,0", "add~rax,<TAG>", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 8, 3, 0.15612648221343872, ["mov     data, [bucket]"], ["mov~data,<TAG>"]], [0, 0, 22, 0, 0, 6, 1, 1, 7, 2, 0.06620553359683794, ["mov     rcx, [rax+8]", "test    next, next", "mov     [cursor+8], rcx", "mov     [rax+8], cursor", "mov     r13, next", "jz      short loc_D621"], ["mov~rcx,[rax+0]", "test~next,next", "mov~[cursor+0],rcx", "mov~[rax+0],cursor", "mov~r13,next", "jz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 3, 3, 0.40316205533596833, ["mov     r13, [bucket+8]", "test    cursor, cursor", "jz      short loc_D624"], ["mov~r13,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 22, 1, 0, 3, 0, 1, 7, 8, 0.08102766798418971, ["mov     [rax], r15", "add     qword ptr [dst+18h], 1", "jmp     short loc_D676"], ["mov~<TAG>,r15", "add~[word ptr [dst+0],0", "jmp~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 9, 0.26482213438735175, ["shl     rax, 4", "add     rax, [dst]", "cmp     qword ptr [rax], 0", "mov     cursor, rax", "jz      short loc_D6B0"], ["shl~rax,0", "add~rax,<TAG>", "cmp~<TAG>,0", "mov~cursor,rax", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 2, 0.16897233201581027, ["mov     rsi, [dst+10h]", "jmp     short loc_D5D4"], ["mov~rsi,[dst+0]", "jmp~FOO"]], [0, 0, 22, 0, 1, 5, 0, 1, 5, 1, 0.2816205533596838, ["mov     rsi, [dst+10h]", "mov     rdi, r15", "call    qword ptr [dst+30h]", "cmp     rax, [dst+10h]", "jnb     loc_D6E0"], ["mov~rsi,[dst+0]", "mov~rdi,r15", "call~[word ptr [dst+0]", "cmp~rax,[dst+0]", "jnb~FOO"]], [1, 0, 22, 0, 1, 4, 1, 2, 8, 9, 0.07411067193675888, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_D667"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 7, 10, 0.14624505928853754, ["mov     rax, [dst+48h]", "test    rax, rax", "jz      short loc_D6C0"], ["mov~rax,[dst+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 9, -1, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     bucket", "pop     src", "pop     safe", "pop     r13", "pop     dst", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~bucket", "pop~src", "pop~safe", "pop~r13", "pop~dst", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 22, 0, 1, 6, 0, 1, 5, 1, 0.19071146245059287, ["mov     r15, [cursor+0]", "mov     rdi, data", "call    qword ptr [dst+30h]", "mov     rsi, [dst+10h]", "cmp     rax, rsi", "jnb     loc_D6E0"], ["mov~r15,[cursor+0]", "mov~rdi,data", "call~[word ptr [dst+0]", "mov~rsi,[dst+0]", "cmp~rax,rsi", "jnb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 8, 9, 0.034584980237154145, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [2, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     bucket", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~bucket", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 22, 0, 0, 4, 0, 0, 9, 8, 0.11067193675889328, ["mov     rdx, [r13+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [r13+8], rax"], ["mov~rdx,[r13+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[r13+0],rax"]]], "func_feature": [4, 8, 15, 0, 24, 34, 3, 104, 0.16716, 0, 11], "succs": [[4], [0, 15], [0], [22, 6], [5, 22], [11, 4], [5], [9, 20], [10, 7], [1], [9, 20], [1, 14], [2], [17, 12], [20], [19, 13], [18, 23], [16, 21], [], [], [8, 19], [23], [], [2]], "fname": "transfer_entries", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_D755"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_D75C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_D730"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_D767"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_D748"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[3, 4], [0, 2], [1, 5], [2], [9], [], [], [8, 6], [1], [9, 3]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_D7AD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 2, 2, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_D780"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_D7B6"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_D7C0"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_D7A0"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_D7AD"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 7], [0, 4], [0, 4], [], [8, 3], [1, 5], [5], [1, 6], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 13, 1, 0, 4, 1, 1, 0, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_D818"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_D82C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_D800"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_D888"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_D8D0"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_D835"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_D825"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_10F48", "jns     short loc_D87F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_10F48", "js      short loc_D8F9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[0, 10], [0], [3, 11], [8, 2], [2], [14], [5], [5], [12, 13], [8, 4], [3], [1, 10], [6, 7], [6, 7], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.011111111111111112, ["mov     entry, [cursor]"], ["mov~entry,<TAG>"]], [0, 0, 7, 0, 1, 4, 1, 2, 3, -1, 0.15555555555555556, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D980"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.022222222222222223, ["jmp     short loc_D975"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 4, -1, 0.08888888888888889, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D958"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.2, ["cmp     entry, rsi", "jz      short loc_D983"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 10, 0, 1, 10, 0, 1, 0, 1, 0.0, ["push    r12", "mov     r12, table", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_D98B"], ["push~r12", "mov~r12,table", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [1, 0, 8, 2, 0, 6, 1, 1, 1, -1, 0.08888888888888889, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jnz     short loc_D95B"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.05555555555555556, ["mov     rsi, [cursor]"], ["mov~rsi,<TAG>"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, rbp", "pop     cursor", "pop     rbp", "pop     table", "retn"], ["mov~rax,rbp", "pop~cursor", "pop~rbp", "pop~table", "retn"]]], "func_feature": [3, 4, 8, 0, 11, 13, 2, 39, 0.05657, 0, 2], "succs": [[10], [0, 4], [], [2], [9, 2], [1, 10], [], [8, 6], [3, 5], [5], []], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 7, 0, 0, 4, 0, 0, 0, 0, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_D9C8"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_D9C3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_D9C6"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 6, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_D9B0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 4, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_D9C8"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[8, 4], [0, 2], [], [], [3, 7], [], [9, 5], [9], [], [8, 6]], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     cursor, [cursor]", "add     rsp, 8", "pop     entry", "pop     table", "retn"], ["mov~cursor,<TAG>", "add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.13257575757575757, ["test    cursor, cursor", "jnz     short loc_DA58"], ["test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 12, 1, 1, 10, 0, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     rbp, table", "mov     rbx, entry", "sub     rsp, 8", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_DA62"], ["push~rbp", "push~rbx", "mov~rbp,table", "mov~rbx,entry", "sub~rsp,0", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 4, -1, 0.030303030303030304, ["mov     rcx, [cursor]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jnz     short loc_DA18"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, -1, 0.0946969696969697, ["test    rax, rax", "jz      short loc_DA2E"], ["test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 5, -1, 0.030303030303030304, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 4, 1, 0, 3, 0, 1, 4, -1, 0.16666666666666669, ["add     bucket, 10h", "cmp     rcx, bucket", "ja      short loc_DA38"], ["add~bucket,0", "cmp~rcx,bucket", "ja~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.18181818181818182, ["mov     rcx, [table+8]", "jmp     short loc_DA40"], ["mov~rcx,[table+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, -1, 0.030303030303030304, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_DA4B"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 10, 2, 0, 7, 0, 1, 1, -1, 0.07575757575757576, ["shl     rax, 4", "add     rax, [table+0]", "mov     rcx, [rax]", "mov     rdx, rax", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_DA29"], ["shl~rax,0", "add~rax,[table+0]", "mov~rcx,<TAG>", "mov~rdx,rax", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, -1, 0.030303030303030304, ["nop     dword ptr [cursor+cursor+00h]"], ["nop~[word ptr [cursor+0]"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]]], "func_feature": [2, 4, 9, 0, 13, 17, 0, 45, 0.05944, 0, 6], "succs": [[], [0, 8], [], [2, 10], [1, 5], [8, 4], [12], [9, 6], [7], [12, 7], [1, 11], [5], []], "fname": "hash_get_next", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_DAD0"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_DAA0"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     dword ptr [counter]"], ["nop~<TAG>"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, -1, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_DAC1"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 0, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     bucket, r10", "jb      short loc_DA7F"], ["add~bucket,0", "cmp~bucket,r10", "jb~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 0, 5, -1, 0.17424242424242425, ["mov     r10, [table+8]", "mov     r8, counter"], ["mov~r10,[table+0]", "mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_DACA"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     r10, [table+8]", "cmp     r10, bucket", "jbe     short loc_DAD2"], ["mov~bucket,<TAG>", "mov~r10,[table+0]", "cmp~r10,bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_DABA"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 13, 17, 0, 34, 0.1317, 0, 2], "succs": [[9, 1], [0, 6], [0], [4, 7], [8, 3], [3], [4], [8, 12], [], [], [], [10, 5], [2, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 8, 0, 1, 4, 1, 2, 4, -1, 0.29444444444444445, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_DB3F"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.011111111111111112, ["xor     ebp, ebp", "jmp     short loc_DB3F"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, -1, 0.17222222222222222, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_DB05"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 5, -1, 0.24444444444444446, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_DB18"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 0, 1, -1, 0.07777777777777778, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 10, 1, 0, 11, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "mov     rax, [table+8]", "cmp     rax, bucket", "jbe     short loc_DB51"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "mov~rax,[table+0]", "cmp~rax,bucket", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 2, -1, 0.2777777777777778, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_DB36"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 3, -1, 0.2111111111111111, ["mov     rbx, bucket", "jmp     short loc_DB1B"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.1277777777777778, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]]], "func_feature": [1, 5, 6, 0, 11, 15, 0, 44, 0.1303, 0, 4], "succs": [[], [0, 4], [0], [0, 7], [9, 10], [7], [2, 5], [8, 3], [1], [1], [3]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_DB8D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_DB70"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["movaps  xmm0, cs:xmmword_10F50", "mov     byte ptr [tuning+10h], 0", "movups  xmmword ptr [tuning], xmm0", "retn"], ["movaps~xmm0,<TAG>", "mov~[yte ptr [tuning+0],0", "movups~<TAG>,xmm0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 28, 0, 0, 4, 0, 0, 0, 0, 0.08708708708708708, ["addss   xmm0, cs:dword_10F64", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm0", "jbe     short fail"], ["addss~xmm0,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm0", "jbe~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 10, 0.07207207207207207, ["movss   xmm0, dword ptr [tuning]", "ucomiss xmm0, cs:dword_10F70", "jb      short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 15, -1, 0.024774774774774775, ["mov     [table+10h], rbx", "mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      fail"], ["mov~[table+0],rbx", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 14, -1, 0.04804804804804805, ["test    rcx, rcx", "jnz     fail"], ["test~rcx,rcx", "jnz~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 7, 6, 0.06081081081081081, ["cvttss2si r15, xmm0", "nop     dword ptr [rax+00h]"], ["cvttss2si~r15,xmm0", "nop~[word ptr [rax+0]"]], [0, 0, 20, 0, 0, 2, 0, 0, 6, 7, 0.13363363363363362, ["ucomiss xmm0, cs:dword_10F7C", "jnb     loc_DDA4"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 8, 8, 0.1006006006006006, ["movss   xmm3, cs:dword_10F74", "ucomiss xmm3, xmm2", "jb      short fail"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [1, 0, 16, 3, 0, 8, 1, 0, 13, 3, 0.03791291291291291, ["add     rsi, 2", "xor     edx, edx", "mov     rax, rbx", "div     rsi", "add     rdi, r8", "cmp     rdi, rbx", "mov     rax, rdx", "jb      short loc_DD70"], ["add~rsi,0", "xor~edx,edx", "mov~rax,rbx", "div~,rsi", "add~rdi,r8", "cmp~rdi,rbx", "mov~rax,rdx", "jb~FOO"]], [3, 0, 16, 0, 0, 4, 0, 1, 12, 4, 0.041666666666666664, ["mov     r8d, 10h", "mov     edi, 9", "mov     esi, 3", "jmp     short loc_DD79"], ["mov~r8d,0", "mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 16, 1, 0, 3, 1, 1, 14, 4, 0.004379379379379379, ["add     r8, 8", "test    rdx, rdx", "jz      short loc_DD95"], ["add~r8,0", "test~rdx,rdx", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 9, 7, 0.11261261261261261, ["ucomiss xmm1, xmm0", "jbe     short fail"], ["ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 2, 0.15077577577577578, ["test    rax, rax", "jnz     short loc_DDC8"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 16, 2, 0, 10, 0, 0, 10, 3, 0.23385885885885885, ["mov     rax, rbx", "mov     rsi, rbx", "mul     rcx", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rsi, rax", "cmp     rbx, 9", "mov     rax, rsi", "jbe     short loc_DD90"], ["mov~rax,rbx", "mov~rsi,rbx", "mul~,rcx", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rsi,rax", "cmp~rbx,0", "mov~rax,rsi", "jbe~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 10, 6, 0.12312312312312312, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_DD08"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 0, 11, 10, 0.036036036036036036, ["test    candidate, candidate", "jns     short loc_DCD8"], ["test~candidate,candidate", "jns~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 13, -1, 0.00925925925925926, ["jmp     fail"], ["jmp~FOO"]], [2, 0, 16, 1, 0, 3, 0, 1, 12, 4, 0.041916916916916916, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DD30"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 3, 13, 0.02177177177177177, ["movss   xmm1, dword ptr [tuning+8]", "ucomiss xmm1, cs:dword_10F64", "ja      short loc_DC48"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 2, 11, 0.03303303303303303, ["mov     [table+28h], tuning", "lea     table, default_tuning", "cmp     tuning, rax", "jz      loc_DCCB"], ["mov~[table+0],tuning", "lea~table,<TAG>", "cmp~tuning,rax", "jz~FOO"]], [5, 0, 17, 0, 0, 7, 1, 1, 8, 5, 0.23123123123123124, ["cmp     r15, 0Ah", "mov     ebx, 0Ah", "mov     rcx, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, r15", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["cmp~r15,0", "mov~ebx,0", "mov~rcx,0", "cmovnb~rbx,r15", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [1, 0, 18, 0, 0, 5, 1, 1, 7, 6, 0.06081081081081081, ["subss   xmm0, cs:dword_10F7C", "mov     rax, 8000000000000000h", "cvttss2si r15, xmm0", "xor     r15, rax", "jmp     loc_DD08"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~r15,xmm0", "xor~r15,rax", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 4, -1, 0.02515015015015015, ["mov     rdi, table; ptr", "xor     r14d, r14d", "call    free"], ["mov~rdi,table", "xor~r14d,r14d", "call~FOO"]], [0, 0, 31, 0, 0, 3, 0, 0, 4, 12, 0.03753753753753754, ["movss   xmm0, cs:dword_10F68", "ucomiss xmm0, xmm1", "jbe     short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 30, 0, 0, 3, 0, 0, 5, 11, 0.05555555555555555, ["movss   xmm0, dword ptr [tuning+0Ch]", "ucomiss xmm0, cs:dword_10F6C", "jbe     short fail"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 5, 8, 0.13963963963963963, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_10F78", "jnb     fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 13, -1, 0.07557557557557558, ["test    rax, rax", "js      fail"], ["test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 9, 4, 0.22072072072072071, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 5, 0.07607607607607607, ["test    rsi, rsi", "jz      short loc_DD95"], ["test~rsi,rsi", "jz~FOO"]], [4, 0, 1, 2, 0, 10, 0, 1, 16, -1, 0.00037537537537537537, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0", "jmp     loc_DC31"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0", "jmp~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 4, 9, 0.05930930930930931, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     r15d, 1", "or      rax, r15", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_DCE1"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~r15d,0", "or~rax,r15", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 3, 10, 0.06756756756756757, ["test    candidate, candidate", "movss   xmm1, cs:dword_10F60", "js      short loc_DC9F"], ["test~candidate,candidate", "movss~xmm1,<TAG>", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 13, 0, 0.0, ["mov     ecx, 1", "jmp     short loc_DDD7"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 7, 1, 0, 5, 1, 0, 12, 1, 0.11161161161161162, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_DE3A"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     data_freer", "pop     hasher", "pop     comparator", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~data_freer", "pop~hasher", "pop~comparator", "pop~r14", "pop~r15", "retn"]], [1, 1, 37, 1, 1, 23, 3, 2, 0, 13, 0.0, ["push    r15", "push    r14", "lea     rax, raw_hasher", "push    r13", "push    r12", "mov     r12, hasher", "push    rbp", "push    rbx", "mov     r13, comparator", "mov     r15, candidate", "mov     edi, 50h ; 'P'; size", "mov     rbx, tuning", "sub     rsp, 8", "test    hasher, hasher", "mov     rbp, data_freer", "cmovz   r12, rax", "lea     rax, raw_comparator", "test    comparator, comparator", "cmovz   r13, rax", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      short loc_DC31"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,hasher", "push~rbp", "push~rbx", "mov~r13,comparator", "mov~r15,candidate", "mov~edi,<STR>", "mov~rbx,tuning", "sub~rsp,0", "test~hasher,hasher", "mov~rbp,data_freer", "cmovz~r12,rax", "lea~rax,<TAG>", "test~comparator,comparator", "cmovz~r13,rax", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 2, 11, 0.017267267267267267, ["lea     table, default_tuning", "mov     [table+28h], rax"], ["lea~table,<TAG>", "mov~[table+0],rax"]], [0, 0, 36, 0, 0, 2, 1, 1, 1, 12, 0.026276276276276277, ["test    tuning, tuning", "jz      loc_DCC0"], ["test~tuning,tuning", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 4, 9, 0.05930930930930931, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]]], "func_feature": [3, 19, 23, 0, 38, 63, 4, 162, 0.0694, 11, 12], "succs": [[21, 6], [0, 21], [28, 21], [2, 21], [19], [20, 4], [10, 21], [9, 11], [7], [16, 7], [13, 21], [16, 32], [27, 11], [19, 14], [29, 37], [21], [12, 15], [21, 22], [17, 30], [26, 21], [19], [33], [21, 23], [1, 21], [21, 5], [3, 21], [12], [16, 8], [33], [24], [29, 37], [25], [25, 31], [], [33, 36], [30], [18, 35], [24]], "fname": "hash_initialize", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 14, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "mov     rax, [table+8]", "cmp     bucket, rax", "jnb     short loc_DED6"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "mov~rax,[table+0]", "cmp~bucket,rax", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, 7, 0.06593406593406594, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 0, 0, 3, 0, 0, 0, 8, 0.37362637362637363, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0", "mov     rax, [table+8]"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0", "mov~rax,[table+0]"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 9, 0.20329670329670332, ["test    rax, rax", "jz      short loc_DEB8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 0, 0, 0.11538461538461539, ["jmp     short loc_DEB8"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 0, 9, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [2, 0, 0, 0, 0, 6, 0, 0, 0, -1, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 13, 1, 0, 3, 0, 1, 0, 7, 0.39560439560439564, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_DE68"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [1, 0, 13, 0, 1, 11, 1, 2, 0, 4, 0.08241758241758243, ["mov     rdi, [cursor]", "call    rax", "mov     rcx, [cursor+8]", "mov     rdx, [table+48h]", "mov     rax, [table+40h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_DE80"], ["mov~rdi,<TAG>", "call~rax", "mov~rcx,[cursor+0]", "mov~rdx,[table+0]", "mov~rax,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 3, 0.28571428571428575, ["test    rax, rax", "jz      short loc_DEEB"], ["test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 8, 1, 1, 0, 1, 0.1208791208791209, ["mov     rax, [cursor+8]", "mov     qword ptr [cursor], 0", "mov     [cursor+8], rdx", "mov     rdx, cursor", "mov     [table+48h], cursor", "test    next, next", "mov     rbx, next", "jnz     short loc_DEF0"], ["mov~rax,[cursor+0]", "mov~<TAG>,0", "mov~[cursor+0],rdx", "mov~rdx,cursor", "mov~[table+0],cursor", "test~next,next", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 0, 2, 0.1263736263736264, ["mov     rdx, [table+48h]", "nop"], ["mov~rdx,[table+0]", "nop"]], [1, 0, 13, 0, 0, 2, 0, 1, 0, 6, 0.4560439560439561, ["cmp     qword ptr [bucket], 0", "jz      short loc_DECD"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 1, 1, 0, 5, 0.42307692307692313, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_DEAD"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, 4, 0.2692307692307693, ["nop     dword ptr [rax]"], ["nop~<TAG>"]]], "func_feature": [2, 5, 10, 0, 15, 22, 0, 56, 0.19451, 0, 1], "succs": [[1, 6], [12], [7], [2, 5], [2], [2], [], [12, 6], [9, 3], [8, 11], [10, 4], [10], [13, 7], [3, 14], [9]], "fname": "hash_clear", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.13636363636363635, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_DFA6"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.0670995670995671, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_DF80"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 2, 4, 0.12987012987012986, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 5, 0.0670995670995671, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 1, 5, 1, 2, 5, 4, 0.049783549783549784, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_DF90"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 6, 3, 0.032467532467532464, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [1, 0, 22, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_DF73"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 3, 0.01948051948051948, ["cmp     qword ptr [table+20h], 0", "jz      short loc_DF73"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 2, 2, 0.04004329004329004, ["cmp     bucket, rax", "jnb     short loc_DFAF"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 3, 6, 0.06060606060606061, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.15584415584415584, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_DFD1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 1, 2, 0.24567099567099568, ["cmp     rax, bucket", "jbe     short loc_DFAF"], ["cmp~rax,bucket", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04112554112554113, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 19, 0, 0, 3, 1, 1, 4, 5, 0.11255411255411256, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_DF66"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 19, 1, 0, 3, 0, 0, 5, 4, 0.20995670995670995, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_DF38"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 7, 0.04329004329004329, ["mov     rbx, bucket", "jmp     short loc_DF53"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.045454545454545456, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004329004329004329, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_DFC0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 19, 0, 1, 4, 1, 2, 6, 6, 0.10173160173160173, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_DF50"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 5, 0.10173160173160173, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 12, 0, 0, 1, 0, 0, 6, 3, 0.19696969696969696, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]]], "func_feature": [4, 6, 15, 0, 23, 34, 3, 60, 0.08093, 0, 2], "succs": [[1, 3], [0, 10], [0], [4], [4, 5], [1], [11, 7], [8, 11], [9, 10], [13], [16, 12], [10, 2], [17], [14, 15], [13, 22], [19], [21], [16, 17], [19], [18, 20], [14], [], [11]], "fname": "hash_free", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 16, 1, 0, 5, 1, 0, 0, 0, 0.2398989898989899, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      loc_E258"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [5, 0, 25, 0, 0, 7, 1, 1, 1, 5, 0.17171717171717174, ["cmp     rsi, 0Ah", "mov     ebx, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, rsi", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_E0F7"], ["cmp~rsi,0", "mov~ebx,0", "mov~r8,0", "cmovnb~rbx,rsi", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 5, 0.07291666666666667, ["test    rax, rax", "jnz     short loc_E0F7"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 24, 1, 0, 3, 0, 1, 5, 5, 0.045928030303030304, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E090"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [2, 0, 30, 0, 0, 8, 2, 1, 2, 4, 0.017361111111111112, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     esi, 1", "or      rax, rsi", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_E029"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~esi,0", "or~rax,rsi", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 1, 5, 0.008207070707070706, ["test    candidate, candidate", "js      loc_E1FD"], ["test~candidate,candidate", "js~FOO"]], [2, 0, 33, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "sub     rsp, 60h", "mov     r12, [table+28h]", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "cmp     byte ptr [r12+10h], 0", "jnz     short loc_E068"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "sub~rsp,0", "mov~r12,[table+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 5, 6, 0.05397727272727273, ["cvttss2si rsi, xmm0", "jmp     loc_E068"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [1, 0, 26, 0, 0, 5, 1, 0, 5, 6, 0.05397727272727273, ["subss   xmm0, cs:dword_10F7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "nop     dword ptr [rax+00h]"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "nop~[word ptr [rax+0]"]], [0, 0, 24, 0, 0, 1, 0, 0, 2, 7, 0.05965909090909091, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 14, 0, 0, 2, 1, 1, 3, 3, 0.2342171717171717, ["test    rax, rax", "js      loc_E1E0"], ["test~rax,rax", "js~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     ecx, 1", "jmp     loc_E10A"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 4, 3, 0.17045454545454547, ["test    rcx, rcx", "jnz     loc_E1E0"], ["test~rcx,rcx", "jnz~FOO"]], [3, 0, 8, 2, 1, 21, 2, 2, 7, 3, 0.10890151515151515, ["mov     [new_table+78h+storage.n_buckets], rbx", "shl     rbx, 4", "mov     [new_table+78h+storage.tuning], r12", "add     rbx, rax", "mov     rax, [table+40h]", "mov     r12, new_table", "movdqu  xmm0, xmmword ptr [table+30h]", "xor     edx, edx; safe", "mov     rsi, table; src", "mov     rdi, r12; dst", "mov     [new_table+78h+storage.bucket_limit], rbx", "mov     [new_table+78h+storage.data_freer], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+storage.n_buckets_used], 0", "mov     [new_table+78h+storage.n_entries], 0", "movaps  xmmword ptr [new_table+78h+storage.hasher], xmm0", "mov     [new_table+78h+storage.free_entry_list], rax", "call    transfer_entries", "test    al, al", "mov     ebx, eax", "jnz     loc_E22C"], ["mov~[new_table+0],rbx", "shl~rbx,0", "mov~[new_table+0],r12", "add~rbx,rax", "mov~rax,[table+0]", "mov~r12,new_table", "movdqu~xmm0,[mmword ptr [table+0]", "xor~edx,edx", "mov~rsi,table", "mov~rdi,r12", "mov~[new_table+0],rbx", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],0", "mov~[new_table+0],0", "movaps~[mmword ptr [new_table+0],xmm0", "mov~[new_table+0],rax", "call~FOO", "test~al,al", "mov~ebx,eax", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 6, 3, 0.1259469696969697, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [new_table+78h+storage.bucket], rax", "jz      loc_E1E0"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 3, 0.1590909090909091, ["cmp     [table+10h], rbx", "jz      loc_E225"], ["cmp~[table+0],rbx", "jz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 2, 4, 0.017361111111111112, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.002840909090909091, ["mov     ebx, 1", "jmp     short loc_E1E2"], ["mov~ebx,0", "jmp~FOO"]], [2, 0, 24, 2, 0, 10, 0, 0, 3, 6, 0.08664772727272728, ["mov     rax, rbx", "mov     rdi, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rdi, rax", "cmp     rbx, 9", "mov     rax, rdi", "jbe     short loc_E0E8"], ["mov~rax,rbx", "mov~rdi,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rdi,rax", "cmp~rbx,0", "mov~rax,rdi", "jbe~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 6, 0.04403409090909091, ["test    rdi, rdi", "jz      short loc_E0ED"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 3, 3, 0.08775252525252525, ["divss   xmm0, dword ptr [r12+8]", "ucomiss xmm0, cs:dword_10F78", "jnb     loc_E1E0"], ["divss~xmm0,[word ptr [r12+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 8, 4, 0.06818181818181818, ["mov     rax, [new_table+78h+storage.free_entry_list]", "mov     edx, 1; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "mov     [table+48h], rax", "call    transfer_entries", "test    al, al", "jz      loc_E253"], ["mov~rax,[new_table+0]", "mov~edx,0", "mov~rsi,r12", "mov~rdi,table", "mov~[table+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 4, 7, 0.0928030303030303, ["ucomiss xmm0, cs:dword_10F7C", "jb      loc_E21B"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [3, 0, 24, 0, 0, 4, 0, 1, 5, 7, 0.026988636363636364, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_E0D1"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 6, 2, 2, 9, 3, 0.026515151515151516, ["xor     edx, edx; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      loc_E253"], ["xor~edx,edx", "mov~rsi,r12", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 1, 1, 7, 6, 0.0033143939393939395, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_E0ED"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 24, 3, 0, 8, 1, 0, 6, 6, 0.03551136363636364, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rsi, rbx", "mov     rax, rdx", "jb      short loc_E0C8"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rsi,rbx", "mov~rax,rdx", "jb~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 8, 2, 0.002840909090909091, ["mov     rdi, [table+0]; ptr", "call    free", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.bucket]", "mov     rax, [new_table+78h+storage.free_entry_list]", "movups  xmmword ptr [table+0], xmm0", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.n_buckets]", "mov     [table+48h], rax", "movups  xmmword ptr [table+10h], xmm0", "jmp     short loc_E1E2"], ["mov~rdi,[table+0]", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rax,[new_table+0]", "movups~[mmword ptr [table+0],xmm0", "movdqa~xmm0,[mmword ptr [new_table+0]", "mov~[table+0],rax", "movups~[mmword ptr [table+0],xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 10, 2, 0.005681818181818182, ["mov     rdi, [new_table+78h+storage.bucket]; ptr", "call    free", "jmp     short loc_E1E2"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 4, 2, 0.0625, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.05681818181818182, ["mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_E262"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 6, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]]], "func_feature": [8, 21, 30, 1, 34, 51, 3, 155, 0.063, 3, 12], "succs": [[10, 11], [0, 9], [0, 3], [0, 18], [20], [16, 4], [1, 5], [1], [1], [18], [12, 30], [10], [30, 15], [27, 21], [13, 30], [17, 14], [20], [32], [2, 19], [3, 23], [30, 22], [24, 28], [8, 7], [26], [28, 29], [26, 3], [25, 2], [32], [], [32], [32], [], [33, 31], []], "fname": "hash_rehash", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 27, 0, 0, 3, 0, 0, 0, 0, 0.05254237288135594, ["movss   xmm3, cs:dword_10F68", "ucomiss xmm3, xmm2", "jbe     loc_E520"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.08531073446327683, ["ucomiss xmm2, cs:dword_10F64", "jbe     loc_E520"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.0635593220338983, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.12796610169491526, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_E550"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.02344632768361582, ["subss   xmm0, cs:dword_10F7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_E4F2"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.06666666666666667, ["ucomiss xmm0, cs:dword_10F7C", "jnb     loc_E5AD"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 40, 0, 0, 3, 0, 1, 8, 4, 0.0016949152542372883, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_E323"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 45, 0, 1, 4, 1, 2, 7, 5, 0.00903954802259887, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_E400"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [3, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.020762711864406782, ["add     rsi, 1", "mov     [rbx], entry", "mov     eax, 1", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "jmp     loc_E333"], ["add~rsi,0", "mov~<TAG>,entry", "mov~eax,0", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "jmp~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07231638418079096, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E574"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.024717514124293787, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [0, 0, 45, 0, 0, 4, 1, 1, 8, 6, 0.014971751412429379, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_E358"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.028389830508474576, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_E441"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05112994350282486, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_E5CC"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [1, 0, 60, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_E51B"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.02344632768361582, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 45, 0, 0, 3, 0, 1, 6, 5, 0.011299435028248588, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_E2F0"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 46, 0, 0, 3, 1, 1, 5, 6, 0.022740112994350282, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_E30C"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.13898305084745763, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_E458"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.0635593220338983, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_E389"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 40, 0, 0, 1, 0, 1, 7, 4, 0.009887005649717515, ["jmp     short loc_E323"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.04712806026365349, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_E590"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.09613935969868173, ["mov     rbx, [rsp+38h+bucket]", "cmp     qword ptr [rbx], 0", "jz      loc_E570"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.024858757062146894, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_E5EA"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [1, 0, 58, 2, 0, 7, 1, 1, 2, 4, 0.03220338983050847, ["shl     rax, 4", "add     rax, [table+0]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+38h+bucket], rax", "test    rsi, rsi", "jz      loc_E410"], ["shl~rax,0", "add~rax,[table+0]", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 59, 0, 1, 9, 0, 1, 1, 5, 0.01638418079096045, ["mov     r13, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_E51B"], ["mov~r13,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.02824858757062147, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_E399"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.014218455743879473, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_E3BC"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 5, 4, 0.01709039548022599, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 48, 0, 1, 4, 1, 2, 4, 5, 0.029096045197740113, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_E320"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.049764595103578155, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_10F60", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E399"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.03728813559322034, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_10F70", "jb      short loc_E520"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.04519774011299435, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_10F6C", "jbe     loc_E520"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.01652542372881356, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_E426"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 6, 3, 0.05918079096045198, ["test    rsi, rsi", "jz      short loc_E358"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.010451977401129945, ["mov     eax, 0FFFFFFFFh", "jmp     loc_E333"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.08606403013182673, ["ucomiss xmm0, cs:dword_10F78", "jnb     loc_E5A3"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.042090395480225994, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_E5A3"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.007297551789077213, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_E544"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.014077212806026366, ["ucomiss xmm2, xmm4", "jbe     short loc_E520"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.020856873822975523, ["movss   xmm6, cs:dword_10F74", "ucomiss xmm6, xmm5", "jb      short loc_E520"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 4, 0, 0, 3, 2, 1, 4, 2, 0.014689265536723164, ["xor     eax, eax", "test    matched_ent, matched_ent", "jz      short loc_E333"], ["xor~eax,eax", "test~matched_ent,matched_ent", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 3, 3, 0.022033898305084745, ["cmp     entry, rsi", "jz      short loc_E328"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.0, ["mov     [matched_ent], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.01652542372881356, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.0288135593220339, ["addss   xmm4, cs:dword_10F64", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_E520"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007203389830508475, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.028389830508474576, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.03220338983050847, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_E60B"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 15, 2, 0.0018361581920903955, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "mov     eax, 1", "add     qword ptr [table+20h], 1", "jmp     loc_E333"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "mov~eax,0", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08060263653483994, ["mulss   xmm0, xmm2", "jmp     short loc_E4D3"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.08582862523540491, ["mulss   xmm0, cs:dword_10F80"], ["mulss~xmm0,<TAG>"]], [1, 0, 0, 1, 0, 6, 0, 0, 6, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     entry", "pop     matched_ent", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~matched_ent", "pop~table", "retn"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.05677966101694915, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_E36A"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11186440677966102, ["mov     rax, [table+18h]", "test    rax, rax", "js      short loc_E3E0"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.023870056497175142, ["jmp     short loc_E358"], ["jmp~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 9, 6, 0.16638418079096046, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_E53C"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.06949152542372881, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.05677966101694915, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]]], "func_feature": [8, 29, 43, 1, 61, 93, 0, 218, 0.03951, 11, 7], "succs": [[33, 31], [0, 31], [18], [2, 19], [38], [4, 15], [35], [11, 6], [49], [8, 59], [8], [16, 56], [9], [48, 12], [25, 26], [38], [20, 7], [16, 57], [58, 22], [18], [35], [28, 47], [10, 21], [34, 45], [43, 23], [], [24, 25], [25, 22], [50, 36], [35], [17, 29], [53, 22], [46, 31], [32, 31], [13], [56, 42], [49], [36, 5], [27, 36], [52, 37], [31, 39], [40, 31], [49, 44], [42, 30], [49], [13], [41, 31], [50], [9], [51, 54], [49], [], [37], [52], [], [3], [60, 55], [56], [1, 53], [58], [3]], "fname": "hash_insert_if_absent", "n_num": 61}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 29, 0, 0, 3, 0, 1, 0, 0, 0.1781609195402299, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_E8DD"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.14882032667876588, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_E7F8"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.07441016333938294, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 43, 0, 0, 4, 1, 1, 8, 5, 0.016031457955232913, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_E6CC"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 43, 0, 1, 4, 1, 2, 7, 4, 0.009679370840895343, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_E7A0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.07138535995160315, ["ucomiss xmm0, cs:dword_10F7C", "jnb     loc_E950"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.09215567654769106, ["ucomiss xmm0, cs:dword_10F78", "jnb     loc_E943"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 5, 5, 0.024349667271627348, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_E6AD"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 46, 0, 1, 4, 1, 2, 4, 4, 0.031155474894131886, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_E6C0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.06805807622504538, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_E704"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.1370235934664247, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_E8F0"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.025559588626739262, ["jmp     short loc_E6CC"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.025105868118572294, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.06805807622504538, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.0913490623109498, ["ucomiss xmm2, cs:dword_10F64", "jbe     loc_E8C0"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.026467029643073202, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.10294414196410567, ["mov     rbx, [rsp+28h+var_28]", "cmp     qword ptr [rbx], 0", "jz      loc_E910"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.06079854809437387, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_E6E3"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11978221415607987, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_E778"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.039927404718693285, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_10F70", "jb      short loc_E8C0"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.048396854204476716, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_10F6C", "jbe     loc_E8C0"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 43, 0, 0, 3, 0, 1, 6, 4, 0.01088929219600726, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_E690"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.030248033877797946, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_E714"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.05328695301472071, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_10F60", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E714"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 11, 6, 0.056261343012704176, ["movss   xmm3, cs:dword_10F68", "ucomiss xmm3, xmm2", "jbe     loc_E8C0"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 38, 0, 0, 3, 0, 1, 8, 3, 0.0012099213551119178, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_E6C3"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.04506957047791894, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_E943"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.025105868118572294, ["subss   xmm0, cs:dword_10F7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_E892"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.05046380318612624, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_E930"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 58, 1, 0, 9, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_E8BB"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03327283726557774, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, rsi", "jnz     loc_E9AE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rsi", "jnz~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.030399274047186935, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_E7E3"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05474894131881428, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_E96F"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007713248638838476, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 3, 0.008771929824561405, ["jmp     short loc_E6C3"], ["jmp~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.02661826981246219, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_E98D"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [1, 0, 56, 2, 0, 7, 1, 1, 2, 3, 0.03327283726557774, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+28h+var_28], rax", "test    rsi, rsi", "jz      loc_E7B0"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 57, 0, 1, 8, 0, 1, 1, 4, 0.01693889897156685, ["mov     r12, table", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_E8BB"], ["mov~r12,table", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.015224843718491633, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_E739"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 0, 5, 3, 0.0176950998185118, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.0176950998185118, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [1, 0, 3, 1, 0, 6, 0, 0, 15, 2, 0.0019661222020568663, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     rsi, entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "add     qword ptr [table+20h], 1"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~rsi,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "add~[word ptr [table+0],0"]], [0, 0, 3, 0, 0, 2, 1, 1, 13, 2, 0.01119177253478524, ["xor     esi, esi", "jmp     loc_E751"], ["xor~esi,esi", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 6, 2, 0.05852994555353903, ["test    rsi, rsi", "jnz     loc_E751"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.030399274047186935, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.02233313167977415, ["movss   xmm6, cs:dword_10F74", "ucomiss xmm6, xmm5", "jb      short loc_E8C0"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.030852994555353903, ["addss   xmm4, cs:dword_10F64", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_E8C0"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.015073603549102643, ["ucomiss xmm2, xmm4", "jbe     short loc_E8C0"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.09190360959870941, ["mulss   xmm0, cs:dword_10F80"], ["mulss~xmm0,<TAG>"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.06079854809437387, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 47, 0, 0, 2, 0, 1, 3, 2, 0.02177858439201452, ["cmp     entry, rsi", "jz      loc_E751"], ["cmp~entry,rsi", "jz~FOO"]], [2, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.02223230490018149, ["add     rsi, 1", "mov     [rbx], entry", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "mov     rsi, entry", "jmp     loc_E751"], ["add~rsi,0", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "mov~rsi,entry", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08630772333131681, ["mulss   xmm0, xmm2", "jmp     short loc_E873"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.007814075418431137, ["cmp     byte ptr [rcx+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_E8E5"], ["cmp~[yte ptr [rcx+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07743496672716274, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E915"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~table", "retn"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.0176950998185118, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_E7C7"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]]], "func_feature": [8, 28, 41, 2, 59, 90, 4, 211, 0.04323, 11, 7], "succs": [[50, 14], [0, 16], [0], [18, 21], [25, 3], [27, 12], [44, 5], [11, 21], [41, 7], [1], [9, 13], [18], [26], [1], [24, 23], [53], [28, 15], [10], [17, 51], [48, 23], [19, 23], [35, 4], [16, 38], [16, 50], [20, 23], [45], [44, 22], [26], [40, 34], [38, 39], [], [57, 30], [56], [32, 46], [43], [45], [42, 58], [52, 36], [], [37, 38], [43, 44], [45], [33], [31], [31], [18, 31], [56], [49, 23], [23, 47], [55, 23], [54], [10], [8, 31], [31], [6], [6, 54], [2, 53], [], [33]], "fname": "hash_insert", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 37, 0, 0, 1, 0, 0, 0, 0, 0.01469387755102041, ["mov     rbx, [bucket]"], ["mov~rbx,<TAG>"]], [0, 0, 46, 0, 1, 5, 1, 2, 3, -1, 0.011428571428571429, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_EA80"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 14, -1, 0.028979591836734694, ["pxor    xmm4, xmm4"], ["pxor~xmm4,xmm4"]], [0, 0, 21, 0, 0, 3, 0, 0, 13, -1, 0.11714285714285715, ["movss   xmm3, dword ptr [rdx+8]", "ucomiss xmm3, cs:dword_10F64", "jbe     loc_EC00"], ["movss~xmm3,[word ptr [rdx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 14, -1, 0.07714285714285715, ["movss   xmm4, cs:dword_10F68", "ucomiss xmm4, xmm3", "jbe     loc_EC00"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,xmm3", "jbe~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 20, -1, 0.0008163265306122449, ["mov     r12, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_EBD0"], ["mov~r12,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 19, -1, 0.017959183673469388, ["nop"], ["nop"]], [0, 0, 25, 0, 0, 2, 0, 0, 10, -1, 0.10857142857142857, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 27, 0, 0, 5, 1, 1, 9, -1, 0.22408163265306122, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx]", "js      loc_EC40"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,<TAG>", "js~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 18, -1, 0.03795918367346939, ["movss   xmm6, cs:dword_10F74", "ucomiss xmm6, xmm5", "jb      short loc_EC04"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 17, -1, 0.0489795918367347, ["addss   xmm2, cs:dword_10F64", "movss   xmm5, dword ptr [rdx+4]", "ucomiss xmm5, xmm2", "jbe     loc_EC04"], ["addss~xmm2,<TAG>", "movss~xmm5,[word ptr [rdx+0]", "ucomiss~xmm5,xmm2", "jbe~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 3, -1, 0.07183673469387755, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_EBF0"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 2, -1, 0.037551020408163265, ["cmp     entry, rbx", "jz      loc_EA84"], ["cmp~entry,rbx", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 19, -1, 0.027755102040816326, ["ucomiss xmm3, xmm2", "jbe     short loc_EC04"], ["ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 11, -1, 0.22775510204081634, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm1", "ucomiss xmm3, xmm0", "jbe     short loc_EAC3"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm1", "ucomiss~xmm3,xmm0", "jbe~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 10, -1, 0.10857142857142857, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_EB0C"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 4, -1, 0.012244897959183675, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_EC28"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 5, 0, 1, 15, -1, 0.04204081632653062, ["mulss   xmm4, xmm1", "mov     [table+28h], rax", "movss   xmm3, cs:dword_10F60", "ucomiss xmm4, xmm0", "ja      loc_EBA0"], ["mulss~xmm4,xmm1", "mov~[table+0],rax", "movss~xmm3,<TAG>", "ucomiss~xmm4,xmm0", "ja~FOO"]], [0, 0, 18, 0, 0, 4, 0, 0, 15, -1, 0.07102040816326531, ["movss   xmm4, dword ptr [rdx+0Ch]", "ucomiss xmm4, cs:dword_10F6C", "pxor    xmm4, xmm4", "jbe     loc_EC04"], ["movss~xmm4,[word ptr [rdx+0]", "ucomiss~xmm4,<TAG>", "pxor~xmm4,xmm4", "jbe~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 16, -1, 0.05918367346938776, ["ucomiss xmm2, xmm4", "jb      loc_EC04"], ["ucomiss~xmm2,xmm4", "jb~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 20, -1, 0.018367346938775512, ["cmp     byte ptr [rdx+10h], 0", "mulss   xmm1, xmm5", "jnz     short loc_EBA4"], ["cmp~[yte ptr [rdx+0],0", "mulss~xmm1,xmm5", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 21, -1, 0.00040816326530612246, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 1, 0, 0, 1, 0, 1, 16, -1, 0.004081632653061225, ["jmp     loc_EAC3"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 14, -1, 0.11673469387755102, ["mulss   xmm1, xmm3"], ["mulss~xmm1,xmm3"]], [0, 0, 10, 0, 0, 2, 0, 1, 13, -1, 0.09551020408163266, ["movss   xmm3, cs:dword_10F60", "jmp     loc_EBA0"], ["movss~xmm3,<TAG>", "jmp~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 12, -1, 0.22448979591836735, ["lea     rax, default_tuning", "cmp     rdx, rax", "jz      loc_ECA0"], ["lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 5, -1, 0.025714285714285714, ["mov     rbx, [rax]", "mov     r14, bucket", "cmp     entry, rbx", "jnz     short loc_EA49"], ["mov~rbx,<TAG>", "mov~r14,bucket", "cmp~entry,rbx", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.04183673469387755, ["cvttss2si rsi, xmm1; candidate"], ["cvttss2si~rsi,xmm1"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.11306122448979593, ["ucomiss xmm1, cs:dword_10F7C", "jnb     loc_EC80"], ["ucomiss~xmm1,<TAG>", "jnb~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 6, -1, 0.02938775510204082, ["jmp     short loc_EA5D"], ["jmp~FOO"]], [1, 0, 34, 0, 0, 6, 0, 0, 4, -1, 0.04081632653061225, ["movdqu  xmm0, xmmword ptr [rax]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 50, 0, 1, 12, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, entry", "push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_ECAD"], ["push~r14", "push~r13", "mov~r13,entry", "push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 5, -1, 0.21204081632653063, ["test    rbx, rbx", "jz      loc_EC28"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 34, 0, 0, 7, 0, 1, 7, -1, 0.0953061224489796, ["mov     rdx, [rax+8]", "mov     [r14+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax", "jmp     short loc_EAAE"], ["mov~rdx,[rax+0]", "mov~[r14+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 4, -1, 0.04081632653061225, ["mov     qword ptr [bucket], 0", "jmp     loc_EAAE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     ebx, ebx", "mov     rax, rbx", "pop     rbx", "pop     table", "pop     bucket", "pop     entry", "pop     r14", "retn"], ["xor~ebx,ebx", "mov~rax,rbx", "pop~rbx", "pop~table", "pop~bucket", "pop~entry", "pop~r14", "retn"]], [1, 0, 48, 2, 0, 6, 1, 1, 1, -1, 0.019591836734693877, ["shl     rax, 4", "add     rax, [table+0]", "mov     rbx, [rax]", "mov     r12, rax", "test    rbx, rbx", "jz      loc_EC28"], ["shl~rax,0", "add~rax,[table+0]", "mov~rbx,<TAG>", "mov~r12,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 39, 0, 0, 4, 1, 1, 7, -1, 0.0038775510204081634, ["mov     r14, [r14+8]", "mov     rax, [r14+8]", "test    rax, rax", "jz      loc_EC28"], ["mov~r14,[r14+0]", "mov~rax,[r14+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 39, 0, 1, 5, 1, 2, 6, -1, 0.009183673469387756, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_EA30"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.07142857142857142, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_EAC3"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.04183673469387755, ["subss   xmm1, cs:dword_10F7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm1", "xor     rsi, rax", "jmp     loc_EBB6"], ["subss~xmm1,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm1", "xor~rsi,rax", "jmp~FOO"]], [2, 0, 31, 1, 0, 3, 0, 1, 6, -1, 0.21510204081632653, ["sub     qword ptr [table+20h], 1", "cmp     qword ptr [bucket], 0", "jz      short loc_EAD0"], ["sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 39, 0, 0, 3, 0, 1, 8, -1, 0.01469387755102041, ["mov     rbx, [rax]", "cmp     entry, rbx", "jz      short loc_EA5D"], ["mov~rbx,<TAG>", "cmp~entry,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 18, -1, 0.052653061224489796, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_EBE1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     table", "pop     r12", "pop     entry", "pop     r14", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~table", "pop~r12", "pop~entry", "pop~r14", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 19, -1, 0.0012244897959183673, ["mov     qword ptr [table+48h], 0", "jmp     loc_EAC3"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 7, -1, 0.013877551020408163, ["mov     rax, [r14+8]", "mov     rbx, [rax]"], ["mov~rax,[r14+0]", "mov~rbx,<TAG>"]], [1, 0, 30, 1, 0, 5, 1, 1, 7, -1, 0.21306122448979592, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_EC60"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 8, -1, 0.10489795918367348, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 28, 0, 0, 8, 2, 1, 8, -1, 0.10489795918367348, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_EAEE"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [6, 18, 34, 0, 51, 77, 4, 182, 0.06413, 7, 4], "succs": [[11], [0, 16], [17], [2, 4], [2, 18], [5, 46], [5], [14], [15, 7], [17, 13], [9, 17], [35, 30], [1, 11], [17, 20], [25, 45], [14], [26, 36], [22, 23], [17, 19], [17, 10], [28, 21], [23], [45], [28], [23], [24, 3], [29, 39], [40], [41, 27], [34], [33], [], [37, 31], [42, 36], [33], [33], [], [12, 36], [43, 36], [38, 47], [44, 45], [40], [48, 45], [34, 39], [46, 6], [], [45], [34], [49, 50], [8], [8]], "fname": "hash_delete", "n_num": 51}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "mov     qword ptr [ir+14h], 0", "mov     [ir], esi", "mov     [ir+4], esi", "mov     [ir+8], esi", "mov     [ir+0Ch], esi", "mov     [ir+10h], esi", "retn"], ["mov~[yte ptr [ir+0],0", "mov~[word ptr [ir+0],0", "mov~<TAG>,esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [ir+1Ch]", "retn"], ["movzx~eax,[yte ptr [ir+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 2, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 0", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [2, 0, 2, 1, 0, 14, 2, 1, 0, 0, 0.0, ["movzx   edx, byte ptr [ir+1Ch]", "mov     ecx, [ir+14h]", "xor     edx, 1", "movzx   edx, dl", "add     ecx, edx", "and     ecx, 3", "mov     eax, ecx", "lea     r8, [ir+old_val*4]", "mov     eax, [r8]", "mov     [r8], esi", "mov     esi, [ir+18h]", "mov     [ir+14h], ecx", "cmp     esi, ecx", "jnz     short loc_ED20"], ["movzx~edx,[yte ptr [ir+0]", "mov~ecx,[ir+0]", "xor~edx,0", "movzx~edx,dl", "add~ecx,edx", "and~ecx,0", "mov~eax,ecx", "lea~r8,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,esi", "mov~esi,[ir+0]", "mov~[ir+0],ecx", "cmp~esi,ecx", "jnz~FOO"]], [1, 0, 1, 1, 0, 3, 1, 0, 1, 0, 0.0, ["add     edx, esi", "and     edx, 3", "mov     [ir+18h], edx"], ["add~edx,esi", "and~edx,0", "mov~[ir+0],edx"]]], "func_feature": [0, 3, 1, 0, 3, 3, 4, 19, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [0, 0, 2, 0, 0, 8, 0, 1, 1, -1, 0.16666666666666666, ["mov     eax, [ir+14h]", "mov     esi, [ir+10h]", "lea     rcx, [ir+rax*4]", "mov     rdx, rax", "mov     eax, [rcx]", "mov     [rcx], esi", "cmp     edx, [ir+18h]", "jz      short loc_ED60"], ["mov~eax,[ir+0]", "mov~esi,[ir+0]", "lea~rcx,<TAG>", "mov~rdx,rax", "mov~eax,<TAG>", "mov~<TAG>,esi", "cmp~edx,[ir+0]", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     byte ptr [ir+1Ch], 0", "jnz     short loc_ED65"], ["cmp~[yte ptr [ir+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 4, 1, 0, 2, -1, 0.0, ["add     edx, 3", "and     edx, 3", "mov     [ir+14h], edx", "retn"], ["add~edx,0", "and~edx,0", "mov~[ir+0],edx", "retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 1, 3, 0, 5, 4, 3, 18, 0.03333, 0, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "i_ring_pop", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_EDA0"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rsp+58h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_EE19"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 18h", "mov     ecx, dword ptr [rsp+58h+var_20]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_EDD0"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~ecx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_20], rcx", "xor     ecx, ecx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    dl, 40h", "jnz     short loc_EDF8"], ["sub~rsp,<STR>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~dl,0", "jnz~FOO"]]], "func_feature": [3, 5, 6, 3, 5, 5, 6, 25, 0.06667, 1, 2], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "openat_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [pnew_fd], ebx", "add     rsp, 8", "mov     dirp, rbp", "pop     new_fd", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["mov~<TAG>,ebx", "add~rsp,0", "mov~dirp,rbp", "pop~new_fd", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, -1, 0.16666666666666666, ["mov     edi, eax; fd", "mov     ebx, eax", "call    _fdopendir", "test    rax, rax", "mov     rbp, rax", "jz      short loc_EE68"], ["mov~edi,eax", "mov~ebx,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 0, 1, 2, 13, 0, 2, 2, -1, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     pnew_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     rax, dirp", "mov     [r12], r13d", "add     rsp, 8", "pop     new_fd", "pop     dirp", "pop     r12", "pop     fdopendir_errno", "retn"], ["call~FOO", "mov~r13d,<TAG>", "mov~pnew_fd,rax", "mov~edi,ebx", "call~FOO", "mov~rax,dirp", "mov~<TAG>,r13d", "add~rsp,0", "pop~new_fd", "pop~dirp", "pop~r12", "pop~fdopendir_errno", "retn"]], [2, 0, 4, 1, 1, 11, 3, 2, 0, 1, 0.0, ["push    r13", "push    r12", "or      edx, 90900h; flags", "push    rbp", "push    rbx", "xor     eax, eax", "mov     r12, pnew_fd", "sub     rsp, 8", "call    openat_safer", "test    eax, eax", "js      short loc_EE90"], ["push~r13", "push~r12", "or~edx,0", "push~rbp", "push~rbx", "xor~eax,eax", "mov~r12,pnew_fd", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 8, 1, 0, 1, 0, 0.0, ["add     rsp, 8", "xor     ebp, ebp", "pop     rbx", "mov     new_fd, rbp", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["add~rsp,0", "xor~ebp,ebp", "pop~rbx", "mov~new_fd,rbp", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]]], "func_feature": [4, 5, 6, 0, 5, 4, 1, 46, 0.03333, 0, 4], "succs": [[], [0, 2], [], [1, 4], []], "fname": "opendirat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_EED2"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 2, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 7, 0, 2, 8, 1, 3, 0, 0, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_EEFC"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 1, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_EF28"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_EF20"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_EF50"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 2, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_EF44"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_EF47"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]]], "func_feature": [7, 5, 14, 0, 10, 13, 1, 42, 0.05278, 0, 0], "succs": [[9, 7], [0, 7], [], [2], [], [4], [4, 5], [9, 6], [1, 3], [3]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 9, 0, 1, 3, 0, 2, 0, 0, 0.005555555555555556, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     loc_EFEF"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, -1, 0.006060606060606061, ["xor     eax, eax", "mov     esi, 406h; cmd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_F178"], ["xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 4, 0.02904040404040404, ["cmp     esi, 0Bh", "jz      short loc_F030"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 1, 5, 0.0202020202020202, ["cmp     esi, 406h", "jnz     short loc_F000"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 30, 0, 0, 1, 0, 1, 3, 3, 0.03939393939393939, ["jg      short loc_F060"], ["jg~FOO"]], [0, 1, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 400h", "jz      short loc_F0E0"], ["cmp~esi,<STR>", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 2, 0.009595959595959595, ["cmp     esi, 402h", "jz      short loc_F0E0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 6, -1, 0.0015151515151515152, ["call    ___errno_location", "mov     r12d, [rax]", "mov     fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, 0FFFFFFFFh", "mov     [rbp+0], r12d", "jmp     loc_F040"], ["call~FOO", "mov~r12d,<TAG>", "mov~fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,0", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 5, 0, 1, 6, 2, 2, 5, -1, 0.010606060606060607, ["xor     eax, eax", "mov     esi, 1; cmd", "mov     edi, ebx; fd", "call    _fcntl", "test    eax, eax", "js      short loc_F151"], ["xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [3, 0, 4, 0, 1, 8, 2, 2, 6, -1, 0.0015151515151515152, ["or      eax, 1", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_F040"], ["or~eax,0", "mov~esi,0", "mov~edi,ebx", "mov~edx,eax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.02531986531986532, ["cmp     esi, 4", "jz      loc_F0E0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, -1, 0.031818181818181815, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_F1CA"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, -1, 0.0101010101010101, ["cmp     esi, 1", "jnz     short loc_F088"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.017676767676767676, ["cmp     esi, 40Ah", "jnz     short loc_F088"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 8", "jnz     short loc_F088"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 5, 3, 0.021178451178451182, ["jg      loc_F0D0"], ["jg~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 9, -1, 0.006818181818181818, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.008131313131313132, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_F0F1"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 5, 1, 0.030404040404040406, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_F1D4"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 7, 0, 1, 8, 3, 2, 5, -1, 0.006313131313131313, ["xor     esi, esi; cmd", "xor     eax, eax", "mov     edx, r12d", "mov     edi, ebp; fd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_F040"], ["xor~esi,esi", "xor~eax,eax", "mov~edx,r12d", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.013131313131313131, ["cmp     esi, 2", "jz      loc_F0E0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.006060606060606061, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_F040"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 3, 2, 3, -1, 0.008333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_F040"], ["xor~esi,esi", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, -1, 0.013131313131313131, ["jg      short loc_F030"], ["jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, -1, 0.00202020202020202, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 1, 6, 1, 2, 10, -1, 0.006060606060606061, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     short loc_F040"], ["mov~rdx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, -1, 0.006818181818181818, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_F099"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.004545454545454545, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     loc_F123"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 45, 1, 0, 19, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "sub     rsp, 50h", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+68h+arg_0]", "test    esi, esi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+var_20], r9", "mov     [rsp+68h+arg.gp_offset], 10h", "mov     [rsp+68h+arg.reg_save_area], rax", "jz      loc_F1B2"], ["push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~esi,esi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],r9", "mov~<TAG>,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.043434343434343436, ["mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_F1AD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 2, 0.009595959595959595, ["jg      short loc_F0E0"], ["jg~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.02016835016835017, ["cmp     esi, 409h", "jz      short loc_F0E0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.025185185185185185, ["cmp     esi, 407h", "jg      short loc_F0B0"], ["cmp~esi,0", "jg~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, -1, 0.021683501683501687, ["jl      loc_F030"], ["jl~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 3, -1, 0.023383838383838382, ["mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "nop~[word ptr [rax+0]"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 401h", "jz      short loc_F030"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.00202020202020202, ["jmp     loc_F030"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 9", "jz      loc_F030"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 3, 0, 1, 7, 2, 2, 1, -1, 0.0015151515151515152, ["mov     rax, [rsp+68h+arg.reg_save_area]", "xor     esi, esi; cmd", "mov     edx, [rax+10h]", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_F040"], ["mov~rax,[rsp+0]", "xor~esi,esi", "mov~edx,[rax+0]", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0022727272727272726, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_F040"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 7, -1, 0.010707070707070707, ["mov     edx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_F040"], ["mov~edx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [2, 0, 13, 0, 0, 6, 0, 1, 2, -1, 0.010858585858585859, ["mov     rax, [rsp+68h+arg.reg_save_area]", "cmp     cs:have_dupfd_cloexec_3326, 0", "mov     [rsp+68h+arg.gp_offset], 18h", "mov     r12d, [rax+10h]", "mov     edx, r12d", "js      loc_F103"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "mov~<TAG>,0", "mov~r12d,[rax+0]", "mov~edx,r12d", "js~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.010067340067340067, ["cmp     esi, 406h", "jge     short loc_F0E0"], ["cmp~esi,0", "jge~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 6, -1, 0.008131313131313132, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]]], "func_feature": [13, 20, 53, 6, 46, 75, 2, 157, 0.0123, 2, 4], "succs": [[40, 19], [0, 40], [35, 4], [2, 42], [33, 10], [18, 11], [18, 5], [30], [9, 7], [30, 7], [18, 15], [16, 26], [24, 11], [11, 37], [18, 11], [20, 38], [25], [41], [17, 45], [27, 30], [18, 23], [8, 30], [21, 30], [35, 12], [35], [30], [25], [8], [3, 39], [], [43, 29], [18, 14], [34, 18], [32, 44], [35, 13], [30], [35, 6], [35], [35, 31], [30], [30], [30], [1, 22], [], [18, 36], [41]], "fname": "rpl_fcntl", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 1, 7, 1, 2, 0, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 0, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_F208"], ["test~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_F1FA"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 1, 0, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_F1FA"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 1, 0, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 1, 19, 0.05833, 0, 0], "succs": [[4], [0, 5], [3, 5], [1, 5], [], [4]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 2, 0, 2, 13, 0, 3, 0, 0, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_F272"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_F22A"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_F230"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_F22A"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 2, 0, 4, 1, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 2, 7, 0, 8, 10, 1, 29, 0.05655, 0, 0], "succs": [[5, 6], [0, 3], [3, 4], [7], [1, 3], [6], [], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi", "xor     eax, eax", "jmp     rpl_fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_F2E6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_F2D0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn endgrent:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __openat_2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__openat_2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn endpwent:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fstatfs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchownat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
