{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_198A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_213DB0", "jmp     cs:qword_213DB8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 65, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1990", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 33, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 73, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:faccessat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "faccessat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 115, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 32, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fstatfs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 48, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 87, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.020460358056265983, ["cmp     byte ptr [r13+1], 0", "jz      short loc_21E3"], ["cmp~[yte ptr [r13+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 10, -1, 0.040068201193520885, ["mov     r13, [argv+r12*8]", "cmp     byte ptr [r13+0], 2Dh ; '-'", "jnz     short loc_21E3"], ["mov~r13,<TAG>", "cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 9, -1, 0.05399261153736857, ["cmp     ebp, r12d", "jle     loc_2270"], ["cmp~ebp,r12d", "jle~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 8, -1, 0.06006678033532254, ["mov     r12d, 1", "lea     preserve_root, [rsp+0E8h+stat_buf]", "jmp     loc_21E7"], ["mov~r12d,0", "lea~preserve_root,[rsp+0]", "jmp~FOO"]], [1, 0, 7, 1, 0, 1, 0, 0, 11, -1, 0.00159846547314578, ["add     r12, 1"], ["add~r12,0"]], [2, 0, 68, 0, 0, 3, 0, 1, 9, -1, 0.013853367433930093, ["mov     [rsp+0E8h+x.preserve_all_root], 1", "mov     r14d, 1", "jmp     loc_1E80"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [0, 0, 68, 0, 1, 5, 1, 2, 8, -1, 0.015132139812446719, ["lea     rsi, s2; \"all\"", "mov     rdi, r14; s1", "call    _strcmp", "test    eax, eax", "jnz     loc_233E"], ["lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 0, 1, 5, -1, 0.03665814151747655, ["sub     ebp, edx", "cmp     [rsp+0E8h+x.recursive], 0", "movsxd  argv, ebp", "jnz     loc_227A"], ["sub~ebp,edx", "cmp~[rsp+0],0", "movsxd~argv,ebp", "jnz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 4, -1, 0.06372549019607843, ["movsxd  rdx, cs:optind@@GLIBC_2_2_5", "test    r12b, r12b", "lea     r13, [argv+rdx*8]", "jz      short loc_215A"], ["movsxd~rdx,<TAG>", "test~r12b,r12b", "lea~r13,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.05836175049730038, ["cmp     eax, 0FFFFFF7Eh", "jnz     loc_20AF"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, -1, 0.03939329354930378, ["cmp     eax, 0FFFFFF7Dh", "jnz     loc_2301"], ["cmp~eax,0", "jnz~FOO"]], [3, 0, 10, 0, 4, 16, 2, 4, 6, -1, 0.03175618073316283, ["lea     rsi, aLibs+6; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     argc, rax", "call    _dcgettext", "mov     argv, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~argc,rax", "call~FOO", "mov~argv,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 1, 0, 2, 2, 17, 2, 2, 7, -1, 0.0, ["lea     c, aJimMeyering; \"Jim Meyering\"", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "push    0", "mov     rcx, cs:Version; version", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "push    rax", "lea     rax, aRichardMStallm; \"Richard M. Stallman\"", "lea     r8, aPaulRubin; \"Paul Rubin\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"rm\"", "push    rax", "xor     eax, eax", "call    version_etc", "add     rsp, 20h", "xor     edi, edi; status", "call    _exit"], ["lea~c,<TAG>", "sub~rsp,0", "mov~rdi,<TAG>", "push~0", "mov~rcx,<TAG>", "lea~r9,<TAG>", "push~rax", "lea~rax,<TAG>", "lea~r8,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "push~rax", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "xor~edi,edi", "call~FOO"]], [1, 0, 8, 0, 0, 2, 0, 0, 6, -1, 0.010230179028132991, ["cmp     rbx, 3", "jbe     short loc_215A"], ["cmp~rbx,0", "jbe~FOO"]], [2, 0, 68, 0, 0, 4, 1, 1, 3, -1, 0.03655157715260017, ["mov     [rsp+0E8h+x.interactive], 3", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "xor     r12d, r12d", "jmp     loc_1E80"], ["mov~[rsp+0],0", "mov~<TAG>,0", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 2, -1, 0.26278772378516624, ["cmp     eax, 69h ; 'i'", "jz      loc_1F80"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 8, -1, 0.04219948849104859, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "test    rsi, rsi", "jz      short loc_1F80"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 0, 12, -1, 0.0005328218243819267, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 68, 0, 0, 4, 1, 1, 8, -1, 0.011935208866155157, ["mov     [rsp+0E8h+x.interactive], 5", "mov     [rsp+0E8h+x.ignore_missing_files], 1", "xor     r12d, r12d", "jmp     loc_1E80"], ["mov~[rsp+0],0", "mov~<TAG>,0", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 7, -1, 0.020034100596760442, ["cmp     eax, 66h ; 'f'", "jnz     loc_20BF"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, -1, 0.021312872975277068, ["mov     rdx, [rsp+0E8h+var_30]", "xor     rdx, fs:28h", "jnz     loc_2313"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 12, -1, 0.010549872122762148, ["mov     rdx, r14; stat_buf", "mov     rsi, r13; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_21E3"], ["mov~rdx,r14", "mov~rsi,r13", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 7, -1, 0.017476555839727195, ["mov     [rsp+0E8h+x.verbose], 1", "jmp     loc_1E80"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 6, -1, 0.07566069906223359, ["cmp     eax, 76h ; 'v'", "jz      loc_2010"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []], [0, 0, 68, 0, 0, 1, 0, 1, 5, -1, 0.15057544757033248, ["jle     short loc_1F18"], ["jle~FOO"]], [1, 0, 68, 0, 1, 8, 1, 2, 1, -1, 0.434818130150611, ["lea     rcx, long_opts; longopts", "lea     rdx, shortopts; \"dfirvIR\"", "xor     r8d, r8d; longind", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_20CE"], ["lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rsi,argv", "mov~edi,ebp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 9, -1, 0.018222506393861894, ["mov     [rsp+0E8h+x.stdin_tty], 1", "jmp     short loc_1E80"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 11, -1, 0.014492753623188406, ["cmp     eax, 2", "jnz     loc_1E80"], ["cmp~eax,0", "jnz~FOO"]], [3, 0, 68, 0, 0, 4, 0, 1, 5, -1, 0.02564649048025007, ["mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     r12d, 1", "jmp     loc_1E80"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [0, 0, 68, 0, 0, 2, 1, 1, 9, -1, 0.019927536231884056, ["xor     r14d, r14d", "jmp     loc_1E80"], ["xor~r14d,r14d", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 5, -1, 0.009981528843421425, ["mov     [rsp+0E8h+x.one_file_system], 1", "jmp     loc_1E80"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 7, -1, 0.02195225916453538, ["mov     [rsp+0E8h+x.remove_empty_directories], 1", "jmp     loc_1E80"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 9, -1, 0.02994458653026428, ["mov     [rsp+0E8h+x.recursive], 1", "jmp     loc_1E80"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 8, -1, 0.023870417732310314, ["mov     r14d, 1", "jmp     loc_1E80"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 68, 0, 0, 3, 1, 1, 11, -1, 0.006713554987212276, ["mov     [rsp+0E8h+x.interactive], 5", "xor     r12d, r12d", "jmp     loc_1E80"], ["mov~[rsp+0],0", "xor~r12d,r12d", "jmp~FOO"]], [12, 0, 68, 1, 6, 40, 4, 6, 0, -1, 0.0, ["push    r14", "push    r13", "lea     r13, aNoPreserveRoot; \"--no-preserve-root\"", "push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "mov     rbx, argv", "mov     r14d, 1", "sub     rsp, 0C0h", "mov     argc, [argv]; argv0", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_30], rax", "xor     eax, eax", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "xor     edi, edi; fd", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.one_file_system], 0", "mov     [rsp+0E8h+x.remove_empty_directories], 0", "mov     [rsp+0E8h+x.recursive], 0", "mov     [rsp+0E8h+x.root_dev_ino], 0", "mov     [rsp+0E8h+x.preserve_all_root], 0", "call    _isatty", "test    eax, eax", "mov     [rsp+0E8h+x.verbose], 0", "mov     [rsp+0E8h+x.require_restore_cwd], 0", "setnz   [rsp+0E8h+x.stdin_tty]", "xor     r12d, r12d", "nop     dword ptr [rax+00h]"], ["push~r14", "push~r13", "lea~r13,<TAG>", "push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "mov~rbx,argv", "mov~r14d,0", "sub~rsp,0", "mov~argc,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "xor~edi,edi", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~[rsp+0],0", "mov~[rsp+0],0", "setnz~[rsp+0]", "xor~r12d,r12d", "nop~[word ptr [rax+0]"]], [1, 0, 7, 0, 1, 8, 1, 2, 6, -1, 0.010230179028132991, ["lea     rdx, aSRemoveLuArgum_1; \"%s: remove %lu arguments recursively? \"", "lea     rsi, aSRemoveLuArgum_2; \"%s: remove %lu argument recursively? \"", "mov     r8d, 5; category", "mov     rcx, rbx; n", "xor     edi, edi; domainname", "mov     rbp, cs:program_name", "call    _dcngettext", "jmp     loc_2135"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8d,0", "mov~rcx,rbx", "xor~edi,edi", "mov~rbp,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 7, -1, 0.040068201193520885, ["mov     preserve_root, cs:optarg@@GLIBC_2_2_5", "test    r14, r14", "jz      loc_2195"], ["mov~preserve_root,<TAG>", "test~r14,r14", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, -1, 0.046071327081557256, ["cmp     [rsp+0E8h+x.ignore_missing_files], 0", "jz      loc_2318"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 2, -1, 0.1707516339869281, ["cmp     cs:optind@@GLIBC_2_2_5, ebp", "jge     loc_21A0"], ["cmp~<TAG>,ebp", "jge~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 6, -1, 0.04305200341005968, ["cmp     eax, 64h ; 'd'", "jz      loc_20A0"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 68, 0, 0, 2, 0, 1, 7, -1, 0.05711849957374254, ["cmp     eax, 80h", "jnz     loc_20AA"], ["cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 4, -1, 0.09615657857345837, ["cmp     eax, 49h ; 'I'", "jz      loc_1F98"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 68, 0, 1, 10, 0, 2, 9, -1, 0.02994458653026428, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, interactive_args; arglist", "lea     rcx, interactive_types; vallist", "lea     rdi, context; \"--interactive\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, interactive_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      short loc_1F98"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 1, 3, -1, 0.25884484228474, ["jle     short loc_1EE0"], ["jle~FOO"]], [1, 0, 7, 0, 1, 7, 1, 1, 7, -1, 0.00042625745950554135, ["lea     rdx, msgid2; \"%s: remove %lu arguments? \"", "lea     rsi, msgid1; \"%s: remove %lu argument? \"", "mov     r8d, 5; category", "mov     rcx, rbx; n", "xor     edi, edi; domainname", "mov     rbp, cs:program_name", "call    _dcngettext"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8d,0", "mov~rcx,rbx", "xor~edi,edi", "mov~rbp,<TAG>", "call~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 4, -1, 0.16162262006251776, ["cmp     eax, 81h", "jz      loc_2090"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 1, 5, -1, 0.08372406933788007, ["jle     loc_1FB0"], ["jle~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 5, -1, 0.03815004262574595, ["lea     rdi, dev_ino_buf_6971; root_d_i", "call    get_root_dev_ino", "test    rax, rax", "mov     [rsp+0E8h+x.root_dev_ino], rax", "jnz     loc_20EA"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, -1, 0.04411764705882353, ["test    r14b, r14b", "jnz     loc_22A4"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 1, 0, 2, 10, 4, 3, 4, -1, 0.005789997158283604, ["lea     rsi, aMissingOperand; \"missing operand\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2270"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 68, 0, 0, 9, 1, 1, 8, -1, 0.013320545609548167, ["movsxd  c, cs:optind@@GLIBC_2_2_5", "mov     ecx, 13h", "mov     rdi, r13", "mov     rsi, [argv+rax*8-8]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_2375"], ["movsxd~c,<TAG>", "mov~ecx,0", "mov~rdi,r13", "mov~rsi,[argv+0]", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 1, 7, -1, 0.0327152600170503, ["jl      loc_2020"], ["jl~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 6, -1, 0.07384910485933503, ["cmp     eax, 83h", "jz      loc_2050"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 8, -1, 0.007033248081841432, ["cmp     eax, 52h ; 'R'", "jnz     short loc_20AF"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 8, -1, 0.013853367433930093, ["cmp     eax, 72h ; 'r'", "jz      short loc_20C4"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 8, -1, 0.018329070758738276, ["cmp     eax, 84h", "jnz     loc_20AF"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 8, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 6, 0, 2, 10, 2, 3, 7, -1, 0.0038363171355498722, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, rbx", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "call    yesno", "test    al, al", "jz      short loc_21AA"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,rbx", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 0, 10, -1, 0.022271952259164535, ["jb      loc_21D3"], ["jb~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 3, -1, 0.11445012787723785, ["cmp     [rsp+0E8h+x.recursive], 0", "jz      short loc_20EA"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6977; \"main\"", "lea     rsi, file; \"src/rm.c\"", "lea     rdi, assertion; \"VALID_STATUS (status)\"", "mov     edx, 173h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 4, 0, 1, 9, 0, 1, 5, -1, 0.014812446717817562, ["mov     rsi, rsp; x", "mov     rdi, file; file", "call    rm", "lea     edx, [status-2]", "cmp     eax, 4", "setz    al", "cmp     edx, 2", "movzx   eax, al", "jbe     short loc_21AC"], ["mov~rsi,rsp", "mov~rdi,file", "call~FOO", "lea~edx,[status-2]+0]", "cmp~eax,0", "setz~al", "cmp~edx,0", "movzx~eax,al", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 4, -1, 0.02589514066496164, ["xor     eax, eax"], ["xor~eax,eax"]], [5, 0, 1, 0, 4, 22, 2, 4, 13, -1, 0.000319693094629156, ["mov     rsi, r13; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rdx, r13; arg", "mov     esi, 3; s", "mov     edi, 1; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, msgid; \"Try '%s ./%s' to remove the file %s.\\n\"", "mov     argv, [argv]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     argc, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r9, r12", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rsi,r13", "mov~edi,0", "call~FOO", "mov~rdx,r13", "mov~esi,0", "mov~edi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~argv,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~argc,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r9,r12", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 6, -1, 0.0, ["add     rsp, 0C0h", "pop     rbx", "pop     rbp", "pop     prompt_once", "pop     r13", "pop     preserve_root", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~prompt_once", "pop~r13", "pop~preserve_root", "retn"]], [3, 0, 0, 0, 3, 14, 3, 3, 9, -1, 0.0, ["mov     rsi, r14; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aUnrecognizedPr; \"unrecognized --preserve-root argument: \"...", "mov     argv, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rsi,r14", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~argv,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [37, 40, 89, 1, 71, 102, 0, 328, 0.04467, 39, 6], "succs": [[4, 22], [0, 4], [1, 69], [2], [2], [27], [68, 5], [13, 38], [64, 7], [3, 59], [9, 12], [9], [], [64, 47], [27], [46, 14], [45, 14], [14], [27], [56, 18], [], [67, 20], [66, 4], [27], [43, 23], [25], [24, 55], [41, 15], [27], [17, 27], [27], [27], [27], [27], [27], [27], [27], [27], [60], [35, 6], [65, 52], [40, 62], [33, 19], [16, 57], [49, 30], [61, 30], [48, 44], [60], [32, 26], [10, 42], [8, 11], [8, 50], [69], [31], [58, 53], [54, 39], [34, 3], [34, 3], [3, 28], [], [64, 65], [36, 29], [8, 51], [], [21, 63], [21], [69], [], [], []], "fname": "main", "n_num": 70}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2400"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2400"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2450"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2450"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_2483"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2498"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 15, 1, 0, 13, 2, 1, 0, 0, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 98h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_2510"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 0, -1, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 9, 1, 3, 0, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_2819"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 0, 1, 0.028571428571428574, ["lea     rsi, aEn; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_2920"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 1, 0.01904761904761905, ["lea     r12, command_name; \"rm\""], ["lea~r12,<TAG>"]], [2, 0, 1, 0, 2, 11, 2, 3, 0, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_2509"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 0, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"rm\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"rm\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_285E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 0, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"rm\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aWrittenBySSAnd+1Bh; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]], [12, 0, 13, 0, 22, 130, 13, 22, 0, 5, 0.05714285714285715, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRemoveUnlinkTh; \"Remove (unlink) the FILE(s).\\n\\n  -f, -\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIPromptOnceBef; \"  -I                    prompt once bef\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aOneFileSystemW; \"      --one-file-system  when removing \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoPreserveRoot_0; \"      --no-preserve-root  do not treat \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRRRecursiveRem; \"  -r, -R, --recursive   remove director\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aByDefaultRmDoe; \"\\nBy default, rm does not remove direct\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:program_name", "lea     rsi, aToRemoveAFileW; \"\\nTo remove a file whose name starts wi\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoteThatIfYouU; \"\\nNote that if you use rm to remove a f\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "lea     rbx, command_name; \"rm\"", "call    _fputs_unlocked", "lea     rcx, asc_F416; \"[\"", "lea     rax, aTestInvocation; \"test invocation\"", "lea     rdx, [rsp+0B8h+var_A8]", "mov     [rsp+0B8h+var_B0], rcx", "lea     rcx, domainname; \"coreutils\"", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rcx", "movaps  [rsp+0B8h+var_A8], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha224sum; \"sha224sum\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha256sum; \"sha256sum\"", "movaps  [rsp+0B8h+var_98], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_213B40", "lea     rax, aSha384sum; \"sha384sum\"", "movaps  [rsp+0B8h+var_88], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_213B40", "lea     rax, aSha512sum; \"sha512sum\"", "movaps  [rsp+0B8h+var_78], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_213B40", "movaps  [rsp+0B8h+var_68], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "movhps  xmm0, cs:off_213B40", "movaps  [rsp+0B8h+var_58], xmm0", "pxor    xmm0, xmm0", "movaps  [rsp+0B8h+var_48], xmm0", "nop     dword ptr [rax+00000000h]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rax,<TAG>", "lea~rdx,[rsp+0]", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rcx", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movaps~[rsp+0],xmm0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 0, 4, 0.0, ["mov     ecx, 3", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_2790"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 0, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_27AF"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 0, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_28D6"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 0, 2, 0.0380952380952381, ["lea     rsi, aEn; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_2919"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 5, 0, 3, 12, 3, 4, 0, 2, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_2819"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 6, 2, 1, 0, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_288B"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]]], "func_feature": [41, 36, 52, 9, 16, 23, 3, 255, 0.0506, 35, 2], "succs": [[8, 1], [9], [7], [2, 7], [2], [9], [5], [5], [11], [], [11, 15], [10, 15], [13, 6], [4, 6], [3, 7], [12, 14]], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 16, 0, 0, 2, 0, 1, 0, 0, 0.01515151515151515, ["cmp     edx, 54h ; 'T'", "jz      loc_2B59"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 5, 3, 0.0106951871657754, ["cmp     edx, 16h", "jz      loc_2B59"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 5, 0.013368983957219251, ["mov     dword ptr [rbp+0], 1Eh", "jmp     loc_2A1B"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 17, 0, 1, 8, 1, 2, 2, 4, 0.014705882352941176, ["mov     rdx, [ent+30h]; filename", "mov     esi, [fts+2Ch]; fildes", "mov     rcx, rsp; stat_buf", "mov     r8d, 100h; flag", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      short loc_2B00"], ["mov~rdx,[ent+0]", "mov~esi,[fts+0]", "mov~rcx,rsp", "mov~r8d,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 3, 3, 0.015597147950089126, ["mov     edx, [rbp+0]", "cmp     edx, 2", "jz      short loc_2B7B"], ["mov~edx,[rbp+0]", "cmp~edx,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 7, 6, 0.0196078431372549, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.0196078431372549, ["cmp     word ptr [ent+70h], 4", "jnz     loc_2A1B"], ["cmp~[ord ptr [ent+0],0", "jnz~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 4, 2, 0.020944741532976825, ["cmp     byte ptr [x+0], 0", "mov     eax, 2", "jnz     loc_29A5"], ["cmp~[yte ptr [x+0],0", "mov~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.0570409982174688, ["mov     rcx, [rsp+0C8h+var_30]", "xor     rcx, fs:28h", "jnz     loc_2B98"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 34, 2, 1, 21, 4, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r13, x", "push    rbp", "push    rbx", "xor     edx, edx", "mov     r12, fts", "mov     rbx, ent", "mov     ebp, ecx", "sub     rsp, 0A8h", "mov     ent, [ent+30h]; name", "mov     edi, [fts+2Ch]; fd", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "test    cl, cl", "setnz   dl", "shl     edx, 9; flag", "call    _unlinkat", "test    eax, eax", "jnz     short loc_29D0"], ["push~r13", "push~r12", "mov~r13,x", "push~rbp", "push~rbx", "xor~edx,edx", "mov~r12,fts", "mov~rbx,ent", "mov~ebp,ecx", "sub~rsp,0", "mov~ent,[ent+0]", "mov~edi,[fts+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~cl,cl", "setnz~dl", "shl~edx,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 5, 0.0784313725490196, ["cmp     word ptr [ent+70h], 4", "jz      loc_2B10"], ["cmp~[ord ptr [ent+0],0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 2, 4, 0.028966131907308377, ["cmp     byte ptr [x+0], 0", "jz      short loc_2A10"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 3, 0.0213903743315508, ["cmp     edx, 2", "jnz     loc_2A10"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 6, 6, 0.0142602495543672, ["jmp     short loc_2B19"], ["jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 5, 0.035650623885918, ["cmp     edx, 27h ; '''", "ja      loc_2A1B"], ["cmp~edx,0", "ja~FOO"]], [2, 0, 7, 0, 0, 3, 0, 1, 1, 2, 0.006238859180035651, ["cmp     byte ptr [x+1Ah], 0", "mov     eax, 2", "jnz     loc_2A88"], ["cmp~[yte ptr [x+0],0", "mov~eax,0", "jnz~FOO"]], [2, 0, 6, 0, 1, 7, 1, 2, 2, 4, 0.0053475935828877, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "test    bpl, bpl", "mov     ent, rax", "mov     edx, 5; category", "jz      loc_2B68"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "test~bpl,bpl", "mov~ent,rax", "mov~edx,0", "jz~FOO"]], [1, 0, 11, 0, 0, 3, 0, 0, 5, 5, 0.049910873440285206, ["mov     rax, 8000320000h", "bt      rax, rdx", "jnb     loc_2A1B"], ["mov~rax,0", "bt~rax,rdx", "jnb~FOO"]], [0, 0, 4, 0, 1, 3, 1, 1, 3, 3, 0.00267379679144385, ["lea     rsi, aRemovedDirecto; \"removed directory %s\\n\"", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 6, 6, 0.0303030303030303, ["mov     eax, [ent+40h]", "cmp     eax, 1", "jz      short loc_2B3E"], ["mov~eax,[ent+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0374331550802139, ["mov     eax, 4", "jmp     loc_29A5"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 7, 1, 2, 4, 2, 0.00802139037433155, ["mov     rsi, rax", "mov     rdx, rbx", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     eax, 2", "jmp     loc_29A5"], ["mov~rsi,rax", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.017379679144385027, ["mov     eax, 2", "jmp     loc_29A5"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, 5, 0.0035650623885918, ["cmp     eax, 0Dh", "jnz     loc_2A1B"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 7, 5, 0.0035650623885918, ["mov     [rbp+0], eax", "jmp     loc_2A1B"], ["mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 3, 3, 0.00267379679144385, ["lea     rsi, aRemovedS; \"removed %s\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     loc_2AB5"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     x", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~x", "retn"]], [0, 0, 19, 0, 0, 1, 0, 1, 4, 4, 0.02406417112299465, ["jle     loc_2B50"], ["jle~FOO"]], [3, 0, 7, 0, 3, 17, 3, 3, 4, 4, 0.1016042780748663, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     fts, rax", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "call    _error", "mov     rax, [ent+8]", "cmp     qword ptr [rax+58h], 0", "jns     short loc_2A73"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~fts,rax", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "call~FOO", "mov~rax,[ent+0]", "cmp~[word ptr [rax+0],0", "jns~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 5, 3, 0.024509803921568627, ["jmp     short loc_2A7A"], ["jmp~FOO"]], [1, 0, 28, 0, 1, 5, 0, 2, 1, 5, 0.022281639928698752, ["call    ___errno_location", "mov     edx, [rax]", "mov     rbp, rax", "cmp     edx, 1Eh", "jz      loc_2AD8"], ["call~FOO", "mov~edx,<TAG>", "mov~rbp,rax", "cmp~edx,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 3, 3, 0.020053475935828877, ["cmp     edx, 14h", "jz      loc_2B59"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 0, 1, 6, 3, 0.0, ["mov     qword ptr [rax+20h], 1", "mov     rax, [rax+8]", "cmp     qword ptr [rax+58h], 0", "js      short loc_2A7A"], ["mov~[word ptr [rax+0],0", "mov~rax,[rax+0]", "cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 3, 0.044117647058823525, ["cmp     qword ptr [rax+20h], 0", "jz      short loc_2A60"], ["cmp~[word ptr [rax+0],0", "jz~FOO"]]], "func_feature": [11, 13, 40, 1, 35, 56, 2, 133, 0.02198, 4, 3], "succs": [[5, 23], [0, 23], [29], [2, 4], [2, 7], [11], [29, 14], [9, 6], [], [8, 27], [16, 31], [29, 15], [32, 11], [11, 23], [18], [18, 29], [17, 9], [26, 19], [20, 29], [22], [24, 25], [9], [9], [9], [25, 29], [29], [22], [], [1, 13], [34, 30], [21], [3, 12], [28, 23], [34, 21], [33, 21]], "fname": "excise", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[4, 0, 200, 1, 1, 13, 2, 1, 0, 0, 0.004851977735086941, ["cmp     byte ptr [x+8], 1", "mov     r12, x", "lea     r15, off_102B8", "mov     r14d, 2", "sbb     esi, esi", "xor     edx, edx; compar", "and     esi, 0FFFFFFC0h", "add     esi, 258h; options", "call    xfts_open", "mov     rbx, rax", "lea     fts, [rsp+118h+var_D8]", "mov     [rsp+118h+st], rax", "nop     dword ptr [rax+00000000h]"], ["cmp~[yte ptr [x+0],0", "mov~r12,x", "lea~r15,<TAG>", "mov~r14d,0", "sbb~esi,esi", "xor~edx,edx", "and~esi,0", "add~esi,0", "call~FOO", "mov~rbx,rax", "lea~fts,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [2, 0, 202, 1, 0, 12, 1, 1, 0, 16, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0E8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "cmp     qword ptr [file], 0", "jz      loc_3878"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 6, 17, 0.09884981035416975, ["cmp     byte ptr [x+0Ah], 0", "jz      loc_3240"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 5, 11, 0.4240349408075135, ["cmp     byte ptr [x+9], 0; jumptable 0000000000002C34 case 1", "jnz     loc_2F80"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 200, 0, 0, 4, 0, 1, 13, 20, 0.0011329491158071031, ["mov     rax, [rsp+118h+var_A8]", "mov     r10d, [rsp+118h+errnum]", "mov     r9d, [rsp+118h+var_F8]", "jmp     loc_3762"], ["mov~rax,[rsp+0]", "mov~r10d,[rsp+0]", "mov~r9d,[rsp+0]", "jmp~FOO"]], [2, 0, 200, 0, 1, 12, 1, 2, 12, 19, 0.015838710736745316, ["mov     rcx, [rsp+118h+st]; stat_buf", "mov     rdx, [rsp+118h+dir]; filename", "mov     r8d, 100h; flag", "mov     esi, r10d; fildes", "mov     edi, 1; ver", "mov     qword ptr [rsp+118h+fd], r11", "mov     [rsp+118h+var_F8], r9d", "mov     [rsp+118h+errnum], r10d", "call    ___fxstatat", "test    eax, eax", "mov     r11, qword ptr [rsp+118h+fd]", "jnz     loc_3AE8"], ["mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,0", "mov~esi,r10d", "mov~edi,0", "mov~[word ptr [rsp+0],r11", "mov~[rsp+0],r9d", "mov~[rsp+0],r10d", "call~FOO", "test~eax,eax", "mov~r11,[word ptr [rsp+0]", "jnz~FOO"]], [1, 0, 200, 0, 1, 8, 1, 2, 15, 21, 0.08958507791077616, ["mov     rsi, qword ptr [rsp+118h+errnum]; arg", "mov     edi, 4; s", "mov     byte ptr [rsp+118h+var_E4], r9b", "call    quotearg_style", "movzx   r9d, byte ptr [rsp+118h+var_E4]", "mov     qword ptr [rsp+118h+errnum], rax", "test    r9b, r9b", "jnz     loc_388D"], ["mov~rsi,[word ptr [rsp+0]", "mov~edi,0", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "movzx~r9d,[yte ptr [rsp+0]", "mov~[word ptr [rsp+0],rax", "test~r9b,r9b", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 14, 22, 0.11721918460502768, ["cmp     byte ptr [x+9], 0", "jnz     loc_37E6"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 200, 0, 1, 7, 1, 2, 8, 9, 0.06351903847101129, ["mov     edi, eax; fd", "mov     [rsp+118h+var_F8], eax", "call    _fdopendir", "test    rax, rax", "mov     rbp, rax", "mov     edx, [rsp+118h+var_F8]", "jz      loc_3860"], ["mov~edi,eax", "mov~[rsp+0],eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "mov~edx,[rsp+0]", "jz~FOO"]], [2, 0, 200, 0, 1, 11, 2, 2, 7, 9, 0.28431686452227317, ["mov     rax, [ent+38h]", "mov     edi, [fts+2Ch]; fd", "mov     edx, 30900h; oflag", "mov     rsi, [rsp+118h+dir]; file", "mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+118h+errnum], rax", "xor     eax, eax", "mov     [rsp+118h+fd], edi", "call    _openat", "test    eax, eax", "js      short loc_3055"], ["mov~rax,[ent+0]", "mov~edi,[fts+0]", "mov~edx,0", "mov~rsi,[rsp+0]", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],edi", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 200, 0, 0, 4, 0, 1, 13, 19, 0.0, ["mov     qword ptr [rax+20h], 1", "mov     rax, [rax+8]", "cmp     qword ptr [rax+58h], 0", "js      short loc_321A"], ["mov~[word ptr [rax+0],0", "mov~rax,[rax+0]", "cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 12, 19, 0.048570345662853426, ["cmp     qword ptr [rax+20h], 0", "jz      short loc_3200"], ["cmp~[word ptr [rax+0],0", "jz~FOO"]], [0, 0, 200, 0, 1, 5, 1, 2, 2, 14, 0.590079150061417, ["mov     rdi, fts; sp_0", "call    rpl_fts_read", "test    rax, rax", "mov     r13, rax", "jz      loc_2CAB"], ["mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [2, 0, 200, 0, 2, 12, 3, 3, 14, 15, 0.11527552008932235, ["lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14d, 4", "call    _dcgettext", "mov     esi, [rsp+118h+errnum]; errnum", "mov     rdx, rax; format", "mov     rcx, r13", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2C08"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14d,0", "call~FOO", "mov~esi,[rsp+0]", "mov~rdx,rax", "mov~rcx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 8, 15, 0.05611382033725761, ["cmp     r14d, 2", "jnz     loc_2C08"], ["cmp~r14d,0", "jnz~FOO"]], [1, 0, 200, 0, 0, 4, 1, 1, 9, 15, 0.0, ["test    al, al", "mov     eax, 3", "cmovnz  r14d, eax", "jmp     loc_2C08"], ["test~al,al", "mov~eax,0", "cmovnz~r14d,eax", "jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 11, 15, 0.2015432815491926, ["cmp     ebp, 4", "jnz     loc_2C08"], ["cmp~ebp,0", "jnz~FOO"]], [3, 0, 200, 0, 3, 14, 0, 4, 12, 15, 0.007618672314992693, ["mov     ecx, 1; is_dir", "mov     rdx, x; x", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    excise", "mov     edx, 4; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "mov     ebp, eax", "call    rpl_fts_set", "mov     rdi, fts; sp_0", "call    rpl_fts_read", "cmp     ebp, 2", "jz      loc_2C08"], ["mov~ecx,0", "mov~rdx,x", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "mov~ebp,eax", "call~FOO", "mov~rdi,fts", "call~FOO", "cmp~ebp,0", "jz~FOO"]], [3, 0, 200, 0, 3, 16, 4, 4, 11, 15, 0.021583501633745464, ["mov     rsi, r11; arg", "mov     edi, 4; s", "mov     r14d, 4", "call    quotearg_style", "lea     rsi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2C08"], ["mov~rsi,r11", "mov~edi,0", "mov~r14d,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 200, 0, 2, 13, 3, 3, 15, 15, 0.03693167824245111, ["lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+0], eax", "mov     r14d, 4", "call    _dcgettext", "mov     rcx, qword ptr [rsp+118h+var_F8]", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2C08"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],eax", "mov~r14d,0", "call~FOO", "mov~rcx,[word ptr [rsp+0]", "mov~esi,[rbp+0]", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 11, 15, 0.13171970182092838, ["mov     r14d, 4", "jmp     loc_2C08"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 200, 0, 0, 3, 0, 0, 11, 20, 0.09696828602547533, ["mov     rax, [ent+8]", "cmp     qword ptr [rax+58h], 0", "jns     short loc_3213"], ["mov~rax,[ent+0]", "cmp~[word ptr [rax+0],0", "jns~FOO"]], [0, 0, 200, 0, 1, 6, 1, 2, 17, 19, 0.017392410882879333, ["lea     rsi, aSDescendIntoDi; \"%s: descend into directory %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, [rsp+118h+dir]", "mov     rdx, rax", "jmp     loc_3841"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 200, 0, 0, 6, 1, 1, 16, 20, 0.03934124755759158, ["mov     esi, [rsp+118h+var_F8]", "mov     rcx, cs:program_name", "mov     edx, 5; category", "test    esi, esi", "mov     [rsp+118h+dir], rcx", "jz      loc_3A03"], ["mov~esi,[rsp+0]", "mov~rcx,<TAG>", "mov~edx,0", "test~esi,esi", "mov~[rsp+0],rcx", "jz~FOO"]], [1, 0, 200, 0, 1, 3, 0, 1, 9, 10, 0.05443081621594995, ["call    ___errno_location", "mov     qword ptr [rsp+118h+var_F8], rax", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~[word ptr [rsp+0],rax", "mov~<TAG>,0"]], [1, 0, 200, 0, 0, 2, 0, 0, 17, 21, 0.0010754806823965977, ["mov     r9d, 1", "nop"], ["mov~r9d,0", "nop"]], [0, 0, 200, 0, 0, 2, 1, 1, 16, 20, 0.01055366730702921, ["test    r9d, r9d", "jz      loc_36A9"], ["test~r9d,r9d", "jz~FOO"]], [1, 0, 200, 0, 1, 7, 2, 2, 7, 16, 0.07007043987980888, ["mov     rsi, [ent+30h]; file", "mov     edi, [fts+2Ch]; fd", "xor     eax, eax", "mov     edx, 30900h; oflag", "call    _openat", "test    eax, eax", "js      short loc_2E85"], ["mov~rsi,[ent+0]", "mov~edi,[fts+0]", "xor~eax,eax", "mov~edx,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 200, 0, 1, 6, 0, 1, 13, 18, 0.011569627111964928, ["mov     [rsp+118h+dir], r11", "mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "movsxd  rdx, dword ptr [rax]", "mov     r11, [rsp+118h+dir]", "mov     [rsp+118h+var_D0], rdx"], ["mov~[rsp+0],r11", "mov~[rsp+0],0", "call~FOO", "movsxd~rdx,<TAG>", "mov~r11,[rsp+0]", "mov~[rsp+0],rdx"]], [2, 0, 200, 0, 1, 12, 1, 2, 12, 19, 0.01684030343332841, ["mov     rcx, [rsp+118h+st]; stat_buf", "mov     rdx, [rsp+118h+dir]; filename", "mov     r8d, 100h; flag", "mov     esi, r10d; fildes", "mov     edi, 1; ver", "mov     qword ptr [rsp+118h+errnum], r11", "mov     [rsp+118h+var_F8], r9d", "mov     [rsp+118h+fd], r10d", "call    ___fxstatat", "test    eax, eax", "mov     r11, qword ptr [rsp+118h+errnum]", "jnz     loc_3C08"], ["mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,0", "mov~esi,r10d", "mov~edi,0", "mov~[word ptr [rsp+0],r11", "mov~[rsp+0],r9d", "mov~[rsp+0],r10d", "call~FOO", "test~eax,eax", "mov~r11,[word ptr [rsp+0]", "jnz~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 3, 13, 0.7231473076234418, ["movzx   edx, word ptr [ent+70h]", "cmp     dx, 0Dh; switch 14 cases", "ja      loc_3A9E; jumptable 0000000000002C34 default case"], ["movzx~edx,[ord ptr [ent+0]", "cmp~dx,0", "ja~FOO"]], [2, 0, 200, 0, 3, 12, 1, 4, 7, 14, 0.1611948508283664, ["mov     rsi, ent; p", "mov     edx, 4; instr", "mov     rdi, fts; sp_0", "call    rpl_fts_set", "mov     rdi, fts; sp_0", "mov     r14d, 4", "call    rpl_fts_read", "mov     rdi, fts; sp_0", "call    rpl_fts_read", "test    rax, rax", "mov     ent, rax", "jnz     loc_2C1C"], ["mov~rsi,ent", "mov~edx,0", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "mov~r14d,0", "call~FOO", "mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~ent,rax", "jnz~FOO"]], [4, 0, 200, 0, 4, 21, 5, 4, 12, 17, 0.006264059241745104, ["lea     rdx, aLibs+6; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [ent+38h]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     rm_status, rax", "call    quotearg_n_style", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r14", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[ent+0]", "mov~esi,0", "xor~edi,edi", "mov~rm_status,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r14", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 200, 0, 0, 9, 1, 1, 11, 18, 0.017084544275323035, ["mov     rdx, [ent+38h]", "lea     rdi, aLibs+6; \"/\"", "mov     ecx, 2", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_3A1E"], ["mov~rdx,[ent+0]", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 200, 0, 1, 4, 1, 2, 10, 9, 0.06785888254781414, ["mov     rdi, rbp; dirp", "call    _readdir", "test    rax, rax", "jz      loc_31A8"], ["mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 200, 0, 0, 3, 1, 1, 13, 10, 0.007121296706785107, ["movzx   eax, byte ptr [rax+14h]", "test    al, al", "jz      short loc_3020"], ["movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 14, 10, 0.003664687719660381, ["cmp     al, 2Fh ; '/'", "jz      short loc_3020"], ["cmp~al,0", "jz~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 14, 17, 0.0324245111078272, ["mov     [rsp+118h+errnum], edx", "mov     [rax], edx", "jmp     loc_3B09"], ["mov~[rsp+0],edx", "mov~<TAG>,edx", "jmp~FOO"]], [0, 0, 200, 0, 1, 5, 0, 2, 13, 18, 0.015781242303334813, ["mov     [rsp+118h+dir], r11", "call    ___errno_location", "mov     rdx, [rsp+118h+var_D0]", "mov     r11, [rsp+118h+dir]", "jmp     loc_3C28"], ["mov~[rsp+0],r11", "call~FOO", "mov~rdx,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [0, 0, 200, 1, 0, 4, 0, 1, 4, 12, 0.7185908818316089, ["movzx   eax, dx", "movsxd  rax, dword ptr [r15+rax*4]", "add     rax, r15", "jmp     rax; switch jump"], ["movzx~eax,dx", "movsxd~rax,<TAG>", "add~rax,r15", "jmp~rax"]], [1, 0, 200, 0, 0, 2, 0, 1, 11, 10, 0.032738241841241696, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jnz     short loc_304D"], ["cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 0, 200, 0, 1, 4, 1, 2, 14, 10, 0.006247639689342069, ["mov     rdi, rbp; dirp", "call    _readdir", "test    rax, rax", "jnz     loc_3031"], ["mov~rdi,rbp", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 13, 16, 0.017601760176017476, ["mov     edx, 5", "lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "jmp     loc_3739"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 200, 0, 3, 15, 4, 4, 12, 17, 0.006264059241745104, ["mov     rsi, rdx; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_362B"], ["mov~rsi,rdx", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 200, 0, 2, 9, 0, 3, 13, 18, 0.0976579072264014, ["mov     edx, 4; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "mov     dword ptr [rsp+118h+dir], ecx", "call    rpl_fts_set", "mov     rdi, fts; sp_0", "call    rpl_fts_read", "mov     ecx, dword ptr [rsp+118h+dir]", "jmp     loc_2D96"], ["mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "mov~[word ptr [rsp+0],ecx", "call~FOO", "mov~rdi,fts", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 12, 19, 0.0438661438993935, ["jmp     short loc_321A"], ["jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 12, 11, 0.02352100881729964, ["cmp     byte ptr [rax+14h], 2Eh ; '.'", "jz      loc_3188"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [0, 0, 200, 0, 1, 5, 1, 1, 17, 19, 0.017392410882879333, ["lea     rsi, aSDescendIntoWr; \"%s: descend into write-protected direct\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, [rsp+118h+dir]", "mov     rdx, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,rax"]], [1, 0, 200, 0, 0, 1, 0, 0, 7, 17, 0.044174753296225146, ["mov     ebp, 15h"], ["mov~ebp,0"]], [1, 0, 200, 0, 0, 2, 0, 1, 8, 18, 0.03938640132669983, ["cmp     byte ptr [x+0Ah], 0", "jz      loc_3240"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 200, 0, 0, 2, 0, 1, 18, 22, 0.00450716713462391, ["mov     rax, [rsp+118h+var_A8]", "jmp     loc_389C"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [2, 0, 200, 0, 1, 8, 1, 2, 17, 23, 0.012117629673415103, ["mov     rcx, [rsp+118h+st]; stat_buf", "mov     rdx, [rsp+118h+dir]; filename", "mov     r8d, 100h; flag", "mov     esi, [rsp+118h+fd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_3C33"], ["mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,0", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 200, 0, 0, 3, 0, 0, 9, 17, 0.0208938804328194, ["mov     rax, [ent+8]", "cmp     qword ptr [rax+58h], 0", "jns     short loc_3663"], ["mov~rax,[ent+0]", "cmp~[word ptr [rax+0],0", "jns~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 8, 18, 0.02329934485985912, ["mov     rax, [fts+18h]", "cmp     [ent+78h], rax", "jnz     loc_3640"], ["mov~rax,[fts+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [1, 0, 200, 0, 1, 4, 0, 1, 9, 14, 0.052283959739257514, ["call    ___errno_location", "mov     [rsp+118h+dir], rax", "mov     dword ptr [rax], 0", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~[rsp+0],rax", "mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [0, 0, 200, 0, 1, 7, 1, 2, 8, 15, 0.05911859842700688, ["mov     edi, eax; fd", "mov     dword ptr [rsp+118h+dir], eax", "call    _fdopendir", "test    rax, rax", "mov     rbp, rax", "mov     edx, dword ptr [rsp+118h+dir]", "jz      loc_3916"], ["mov~edi,eax", "mov~[word ptr [rsp+0],eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "mov~edx,[word ptr [rsp+0]", "jz~FOO"]], [0, 0, 200, 0, 0, 3, 1, 1, 13, 11, 0.011843286318681619, ["movzx   eax, byte ptr [rax+15h]", "test    al, al", "jnz     loc_3049"], ["movzx~eax,[yte ptr [rax+0]", "test~al,al", "jnz~FOO"]], [2, 0, 200, 0, 1, 8, 1, 2, 13, 17, 0.018588985764248066, ["mov     rcx, [rsp+118h+st]; stat_buf", "mov     rdx, [rsp+118h+dir]; filename", "mov     r8d, 100h; flag", "mov     esi, r10d; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_3C72"], ["mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,0", "mov~esi,r10d", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 200, 0, 1, 9, 0, 2, 12, 18, 0.06189760767121488, ["mov     rsi, r11; arg", "mov     edi, 4; s", "mov     [rsp+118h+fd], r10d", "call    quotearg_style", "mov     qword ptr [rsp+118h+var_F8], rax", "mov     rax, [rsp+118h+var_A8]", "mov     r10d, [rsp+118h+fd]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_39D4"], ["mov~rsi,r11", "mov~edi,0", "mov~[rsp+0],r10d", "call~FOO", "mov~[word ptr [rsp+0],rax", "mov~rax,[rsp+0]", "mov~r10d,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 200, 0, 1, 2, 0, 1, 12, 9, 0.009368136529360116, ["mov     rdi, rbp; dirp", "call    _closedir"], ["mov~rdi,rbp", "call~FOO"]], [1, 0, 200, 0, 0, 2, 1, 0, 8, 8, 0.23170621433145444, ["xor     r9d, r9d", "mov     ebp, 3"], ["xor~r9d,r9d", "mov~ebp,0"]], [0, 0, 200, 0, 1, 8, 1, 2, 11, 8, 0.04188549629660905, ["mov     rax, qword ptr [rsp+118h+var_F8]", "mov     rdi, rbp; dirp", "mov     edx, [rax]", "mov     [rsp+118h+var_F8], edx", "call    _closedir", "mov     edx, [rsp+118h+var_F8]", "test    edx, edx", "jnz     loc_3055"], ["mov~rax,[word ptr [rsp+0]", "mov~rdi,rbp", "mov~edx,<TAG>", "mov~[rsp+0],edx", "call~FOO", "mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 200, 0, 1, 6, 1, 2, 18, 18, 0.039858463458286135, ["mov     r8, qword ptr [rsp+118h+errnum]", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_3904"], ["mov~r8,[word ptr [rsp+0]", "mov~rdi,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 200, 0, 1, 4, 1, 2, 10, 13, 0.07177807332972104, ["mov     rdi, rbp; dirp", "call    _readdir", "test    rax, rax", "jz      loc_2F5C"], ["mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 200, 0, 0, 3, 1, 1, 13, 14, 0.008706467661691543, ["movzx   eax, byte ptr [rax+14h]", "test    al, al", "jz      short loc_2E50"], ["movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 14, 14, 0.006305108122752574, ["cmp     al, 2Fh ; '/'", "jz      short loc_2E50"], ["cmp~al,0", "jz~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 14, 14, 0.0012684104231318655, ["jmp     loc_2E50"], ["jmp~FOO"]], [0, 0, 200, 0, 0, 2, 1, 1, 12, 19, 0.045590939690984024, ["test    rax, rax", "js      loc_3D27"], ["test~rax,rax", "js~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 11, 20, 0.05995189071145921, ["mov     rax, [rsp+118h+var_A8]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_3BBB"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 200, 0, 0, 4, 0, 1, 11, 16, 0.0, ["mov     qword ptr [rax+20h], 1", "mov     rax, [rax+8]", "cmp     qword ptr [rax+58h], 0", "js      short loc_366A"], ["mov~[word ptr [rax+0],0", "mov~rax,[rax+0]", "cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 10, 16, 0.010533142866525458, ["cmp     qword ptr [rax+20h], 0", "jz      short loc_3650"], ["cmp~[word ptr [rax+0],0", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 7, 0.24131165248721032, ["cmp     qword ptr [ent+20h], 0", "jnz     loc_31E0"], ["cmp~[word ptr [ent+0],0", "jnz~FOO"]], [1, 0, 200, 0, 1, 5, 1, 2, 9, 8, 0.0045317964632284125, ["mov     edi, edx; fd", "mov     ebp, 3", "call    _close", "xor     r9d, r9d", "jmp     loc_305D"], ["mov~edi,edx", "mov~ebp,0", "call~FOO", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 200, 0, 1, 4, 0, 2, 14, 16, 0.018219545835180533, ["call    ___errno_location", "mov     rbp, rax", "mov     rax, [rsp+118h+var_D0]", "jmp     short loc_3C8B"], ["call~FOO", "mov~rbp,rax", "mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 200, 0, 1, 5, 0, 1, 14, 16, 0.013638490714743117, ["mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "mov     rbp, rax", "movsxd  rax, dword ptr [rax]", "mov     [rsp+118h+var_D0], rax"], ["mov~[rsp+0],0", "call~FOO", "mov~rbp,rax", "movsxd~rax,<TAG>", "mov~[rsp+0],rax"]], [1, 0, 200, 0, 0, 2, 0, 1, 11, 16, 0.027954287966110044, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jnz     short loc_2E7D"], ["cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 12, 15, 0.021082705285453918, ["cmp     byte ptr [rax+14h], 2Eh ; '.'", "jz      loc_33D0"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [2, 0, 200, 0, 2, 12, 2, 2, 5, 16, 0.0043224471700901435, ["mov     rdx, [ent+38h]; jumptable 0000000000002C34 case 7", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aTraversalFaile; \"traversal failed: %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     esi, [ent+40h]; errnum", "mov     rcx, rbp", "mov     rdx, rax; format"], ["mov~rdx,[ent+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~esi,[ent+0]", "mov~rcx,rbp", "mov~rdx,rax"]], [1, 0, 200, 0, 0, 3, 0, 1, 10, 6, 0.25608082485576206, ["mov     eax, [x+4]", "cmp     eax, 5", "jz      loc_32C1"], ["mov~eax,[x+0]", "cmp~eax,0", "jz~FOO"]], [3, 0, 200, 0, 0, 4, 0, 1, 12, 7, 0.040862460446471086, ["cmp     qword ptr [ent+20h], 0", "mov     r9d, 1", "mov     ebp, 4", "jz      loc_3068"], ["cmp~[word ptr [ent+0],0", "mov~r9d,0", "mov~ebp,0", "jz~FOO"]], [0, 0, 200, 0, 1, 3, 2, 1, 6, 15, 0.01371853603270775, ["xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 200, 0, 2, 13, 3, 3, 5, 16, 0.0043224471700901435, ["mov     rdx, [ent+38h]; jumptable 0000000000002C34 case 2", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "xor     esi, esi", "jmp     loc_2C70"], ["mov~rdx,[ent+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "jmp~FOO"]], [6, 0, 200, 0, 5, 28, 5, 6, 9, 15, 0.01407976618557378, ["mov     rdx, [ent+38h]; arg", "mov     esi, 4; s", "mov     edi, 2; n", "call    quotearg_n_style", "lea     rdx, dir; \"..\"", "mov     esi, 4; s", "mov     edi, 1; n", "mov     [rsp+118h+dir], rax", "call    quotearg_n_style", "lea     rdx, dir+1; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     rbp, rax", "call    quotearg_n_style", "lea     rsi, aRefusingToRemo; \"refusing to remove %s or %s directory: \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rm_status, rax", "call    _dcgettext", "mov     r9, [rsp+118h+dir]", "mov     rdx, rax; format", "mov     r8, rbp", "mov     rcx, r14", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2C79"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~[rsp+0],rax", "call~FOO", "lea~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "mov~rbp,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rm_status,rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rdx,rax", "mov~r8,rbp", "mov~rcx,r14", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 200, 0, 0, 6, 2, 1, 8, 13, 0.01800814409799189, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      short loc_3402"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 12, 0.002130436924289444, ["cmp     al, 2Fh ; '/'", "jnz     loc_2FA1"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 11, 5, 0.18276603779780962, ["cmp     byte ptr [x], 0", "jnz     loc_32B8"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 7.388798581350672e-05, ["mov     r14d, 2", "jmp     loc_2CCD"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 200, 0, 1, 2, 0, 1, 12, 19, 0.00966701147726713, ["mov     rdi, rbp; dirp", "call    _closedir"], ["mov~rdi,rbp", "call~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 10, 16, 0.005828941103065531, ["jmp     short loc_366A"], ["jmp~FOO"]], [3, 0, 200, 0, 3, 17, 3, 3, 8, 16, 0.06885539300198676, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     rm_status, rax", "mov     edx, 5; category", "call    _dcgettext", "xor     edi, edi; status", "mov     rdx, rax; format", "mov     rcx, r14", "xor     eax, eax", "mov     esi, ebp; errnum", "call    _error", "mov     rax, [ent+8]", "cmp     qword ptr [rax+58h], 0", "jns     short loc_32A7"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~rm_status,rax", "mov~edx,0", "call~FOO", "xor~edi,edi", "mov~rdx,rax", "mov~rcx,r14", "xor~eax,eax", "mov~esi,ebp", "call~FOO", "mov~rax,[ent+0]", "cmp~[word ptr [rax+0],0", "jns~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 17, 0.019606998013234157, ["mov     ebp, 27h ; '''", "jmp     loc_3245"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 12, 4, 0.06403625437170583, ["cmp     eax, 3", "jz      short loc_3092"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 9, 15, 0.054939822340443, ["jmp     loc_2C79"], ["jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 10, 0.048573140896179, ["cmp     byte ptr [x+18h], 0", "jnz     loc_3480"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 200, 0, 0, 3, 1, 1, 8, 11, 0.06986930036287212, ["mov     rax, [x+10h]", "test    rax, rax", "jz      short loc_2FBB"], ["mov~rax,[x+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 10, 11, 0.021690228724364925, ["mov     rax, [rax+8]", "cmp     [ent+78h], rax", "jnz     loc_2FBB"], ["mov~rax,[rax+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 9, 11, 0.026271283844802342, ["mov     rcx, [rax]", "cmp     [ent+80h], rcx", "jz      loc_35A8"], ["mov~rcx,<TAG>", "cmp~[ent+0],rcx", "jz~FOO"]], [0, 0, 200, 0, 1, 2, 0, 1, 17, 23, 0.0028816314467267623, ["call    quotearg_style", "mov     qword ptr [rsp+118h+errnum], rax"], ["call~FOO", "mov~[word ptr [rsp+0],rax"]], [0, 0, 200, 0, 0, 2, 1, 1, 16, 24, 0.005122900349736466, ["test    r9b, r9b", "jnz     loc_3883"], ["test~r9b,r9b", "jnz~FOO"]], [0, 0, 200, 0, 1, 8, 1, 2, 11, 12, 0.03926735957177808, ["mov     rax, [rsp+118h+dir]", "mov     rdi, rbp; dirp", "mov     edx, [rax]", "mov     dword ptr [rsp+118h+dir], edx", "call    _closedir", "mov     edx, dword ptr [rsp+118h+dir]", "test    edx, edx", "jnz     loc_2E85"], ["mov~rax,[rsp+0]", "mov~rdi,rbp", "mov~edx,<TAG>", "mov~[word ptr [rsp+0],edx", "call~FOO", "mov~edx,[word ptr [rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 200, 0, 1, 3, 0, 2, 9, 19, 0.0022782128959164573, ["mov     edi, edx; fd", "call    _close", "jmp     loc_2E85"], ["mov~edi,edx", "call~FOO", "jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 13, 4, 0.0038914339195113543, ["cmp     byte ptr [x+19h], 0", "jz      loc_32C1"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 200, 0, 1, 7, 1, 2, 19, 19, 0.016846460765479535, ["lea     rsi, aSRemoveSS; \"%s: remove %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, qword ptr [rsp+118h+fd]", "mov     rdx, rax", "mov     r8, [rsp+118h+dir]", "jmp     loc_38EC"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax", "mov~r8,[rsp+0]", "jmp~FOO"]], [1, 0, 200, 0, 1, 9, 1, 2, 18, 20, 0.038249347322791984, ["mov     rdi, [rsp+118h+st]; st", "call    file_type", "mov     edx, [rsp+118h+var_F8]", "mov     rcx, cs:program_name", "mov     [rsp+118h+dir], rax", "test    edx, edx", "mov     qword ptr [rsp+118h+fd], rcx", "mov     edx, 5; category", "jz      loc_3B1E"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~edx,[rsp+0]", "mov~rcx,<TAG>", "mov~[rsp+0],rax", "test~edx,edx", "mov~[word ptr [rsp+0],rcx", "mov~edx,0", "jz~FOO"]], [1, 0, 200, 0, 1, 4, 0, 1, 16, 25, 0.005090061244930464, ["mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "movsxd  rdx, dword ptr [rax]", "mov     [rsp+118h+var_D0], rdx"], ["mov~[rsp+0],0", "call~FOO", "movsxd~rdx,<TAG>", "mov~[rsp+0],rdx"]], [2, 0, 200, 0, 1, 8, 1, 2, 15, 3, 0.014120815066581286, ["mov     rcx, [rsp+118h+st]; stat_buf", "mov     rdx, [rsp+118h+dir]; filename", "mov     r8d, 100h; flag", "mov     esi, [rsp+118h+fd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      loc_3CC0"], ["mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,0", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 200, 0, 1, 9, 1, 2, 19, 22, 0.01152652578690705, ["lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "mov     [rbp+0], eax", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, qword ptr [rsp+118h+errnum]", "mov     rdx, rax", "mov     esi, [rbp+0]", "jmp     loc_3112"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~[rbp+0],eax", "xor~edi,edi", "call~FOO", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax", "mov~esi,[rbp+0]", "jmp~FOO"]], [0, 0, 200, 0, 1, 4, 0, 2, 18, 23, 0.0033988473474213096, ["call    ___errno_location", "mov     rbp, rax", "mov     rax, [rsp+118h+var_D0]", "jmp     loc_3C4C"], ["call~FOO", "mov~rbp,rax", "mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 200, 0, 1, 5, 0, 1, 18, 23, 0.003054036746958278, ["mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "mov     rbp, rax", "movsxd  rax, dword ptr [rax]", "mov     [rsp+118h+var_D0], rax"], ["mov~[rsp+0],0", "call~FOO", "mov~rbp,rax", "movsxd~rax,<TAG>", "mov~[rsp+0],rax"]], [1, 0, 200, 0, 1, 5, 0, 2, 15, 16, 0.07843620182913813, ["mov     rsi, r11; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     ent, rax", "jmp     loc_2F2B"], ["mov~rsi,r11", "mov~edi,0", "call~FOO", "mov~ent,rax", "jmp~FOO"]], [1, 0, 200, 0, 0, 5, 0, 1, 15, 17, 0.022104822422540762, ["mov     rax, [rsp+118h+var_E0]", "mov     eax, [rax]", "cmp     eax, 0Dh", "mov     [rsp+118h+errnum], eax", "jnz     loc_3B09"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "cmp~eax,0", "mov~[rsp+0],eax", "jnz~FOO"]], [0, 0, 200, 0, 0, 3, 0, 0, 14, 17, 0.029214488613040407, ["mov     rcx, [rsp+118h+var_E0]", "mov     [rsp+118h+errnum], eax", "mov     [rcx], eax"], ["mov~rcx,[rsp+0]", "mov~[rsp+0],eax", "mov~<TAG>,eax"]], [1, 0, 200, 0, 0, 2, 0, 1, 14, 16, 0.03100011493686682, ["cmp     dword ptr [x+4], 3", "jnz     loc_32C1"], ["cmp~[word ptr [x+0],0", "jnz~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 20, 16, 0.08026698192207281, ["jmp     loc_32C1"], ["jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 12, 16, 0.1141733576342709, ["cmp     eax, 3", "jz      loc_30B6"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 200, 0, 0, 2, 1, 1, 17, 21, 0.04620462046204621, ["test    rax, rax", "js      loc_3D31"], ["test~rax,rax", "js~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 16, 22, 0.053470272400374365, ["mov     rax, [rsp+118h+var_A8]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_3B8B"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 200, 0, 0, 4, 0, 1, 10, 15, 0.0024259888675434707, ["mov     qword ptr [rax+20h], 1", "mov     rax, [rax+8]", "cmp     qword ptr [rax+58h], 0", "js      loc_2C79"], ["mov~[word ptr [rax+0],0", "mov~rax,[rax+0]", "cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 16, 0.009408403526919856, ["cmp     qword ptr [rax+20h], 0", "jz      short loc_3290"], ["cmp~[word ptr [rax+0],0", "jz~FOO"]], [0, 0, 200, 0, 1, 5, 1, 2, 13, 3, 0.05656535802834016, ["mov     byte ptr [rsp+118h+var_F8], r9b", "call    can_write_any_file", "test    al, al", "movzx   r9d, byte ptr [rsp+118h+var_F8]", "jz      loc_3922"], ["mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[yte ptr [rsp+0]", "jz~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 10, 15, 0.0024259888675434707, ["jmp     loc_2C79"], ["jmp~FOO"]], [4, 0, 200, 0, 5, 24, 5, 6, 11, 15, 0.016883404758386285, ["mov     rdx, [ent+30h]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, rbp; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     [rsp+118h+dir], rax", "call    quotearg_n_style", "lea     rsi, aFailedToStatSS; \"failed to stat %s: skipping %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rm_status, rax", "call    _dcgettext", "mov     r8, [rsp+118h+dir]", "mov     rdx, rax; format", "xor     edi, edi; status", "mov     rcx, r14", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     rdi, rbp; ptr", "call    free", "jmp     loc_2C79"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rbp", "xor~edi,edi", "mov~esi,0", "mov~[rsp+0],rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rm_status,rax", "call~FOO", "mov~r8,[rsp+0]", "mov~rdx,rax", "xor~edi,edi", "mov~rcx,r14", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [0, 0, 200, 0, 2, 8, 4, 3, 14, 15, 0.027190778779370477, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2C79"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 200, 0, 1, 6, 1, 2, 11, 12, 0.017359571778073367, ["mov     rdx, [rsp+118h+st]; stat_buf", "mov     rsi, rax; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      short loc_3518"], ["mov~rdx,[rsp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 200, 0, 1, 7, 2, 2, 10, 13, 0.0357699949099386, ["mov     rdi, [rsp+118h+dir]; dir", "lea     rsi, dir; \"..\"", "xor     edx, edx; base_in_result", "call    file_name_concat", "test    rax, rax", "mov     rbp, rax", "jz      short loc_34B1"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "xor~edx,edx", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 1, 200, 0, 0, 4, 1, 1, 16, 17, 0.027313925422392988, ["mov     eax, [rsp+118h+var_C0]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_30AA"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 1, 200, 0, 1, 9, 1, 2, 17, 17, 0.00625584946554357, ["mov     rsi, [rsp+118h+dir]; file", "mov     edi, [rsp+118h+fd]; fd", "mov     ecx, 200h; flag", "mov     edx, 2; type", "mov     byte ptr [rsp+118h+var_F8], r9b", "call    _faccessat", "test    eax, eax", "movzx   r9d, byte ptr [rsp+118h+var_F8]", "jz      loc_30AA"], ["mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "mov~ecx,<STR>", "mov~edx,0", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rsp+0]", "jz~FOO"]], [1, 0, 200, 0, 0, 1, 0, 0, 13, 23, 0.11044611923878957, ["mov     [rsp+118h+var_F8], 0"], ["mov~[rsp+0],0"]], [0, 0, 6, 0, 1, 5, 1, 2, 3, -1, 0.02844687453820009, ["call    ___errno_location", "mov     edi, [rax]", "mov     rbp, rax", "test    edi, edi", "jnz     loc_3540"], ["call~FOO", "mov~edi,<TAG>", "mov~rbp,rax", "test~edi,edi", "jnz~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 11, 20, 0.05817036927573355, ["mov     rax, [rsp+118h+var_A8]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_3B3E"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 200, 0, 0, 3, 1, 1, 10, 19, 0.12459977341017685, ["test    r9d, r9d", "mov     [rsp+118h+errnum], 0", "jz      loc_36B0"], ["test~r9d,r9d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 200, 0, 0, 2, 1, 1, 13, 17, 0.04404750176510189, ["test    rax, rax", "js      loc_3CFA"], ["test~rax,rax", "js~FOO"]], [0, 0, 200, 0, 0, 2, 1, 1, 12, 19, 0.04238912697239874, ["test    rax, rax", "js      loc_3D0E"], ["test~rax,rax", "js~FOO"]], [0, 0, 200, 0, 0, 4, 0, 1, 13, 20, 0.000714250529530565, ["mov     rax, [rsp+118h+var_A8]", "mov     r10d, [rsp+118h+fd]", "mov     r9d, [rsp+118h+var_F8]", "jmp     loc_36BF"], ["mov~rax,[rsp+0]", "mov~r10d,[rsp+0]", "mov~r9d,[rsp+0]", "jmp~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 16, 2, 0.004474328029817907, ["mov     rax, [rsp+118h+var_A8]", "movzx   r9d, byte ptr [rsp+118h+var_F8]", "jmp     loc_3931"], ["mov~rax,[rsp+0]", "movzx~r9d,[yte ptr [rsp+0]", "jmp~FOO"]], [2, 0, 200, 0, 1, 8, 0, 2, 18, 23, 0.002339786217427713, ["mov     byte ptr [rsp+118h+var_E0], r9b", "call    ___errno_location", "mov     eax, [rax]", "mov     [rsp+118h+var_F8], 1", "movzx   r9d, byte ptr [rsp+118h+var_E0]", "cmp     eax, 0Dh", "mov     [rsp+118h+var_E4], eax", "jz      loc_30BE"], ["mov~[yte ptr [rsp+0],r9b", "call~FOO", "mov~eax,<TAG>", "mov~[rsp+0],0", "movzx~r9d,[yte ptr [rsp+0]", "cmp~eax,0", "mov~[rsp+0],eax", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 4, -1, 0.009519235505640116, ["mov     rdi, fts; sp_0", "call    rpl_fts_close", "test    eax, eax", "jnz     loc_3578"], ["mov~rdi,fts", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 17, 24, 0.015319442392000391, ["mov     [rsp+118h+var_E4], edx", "mov     [rax], edx", "jmp     loc_39A0"], ["mov~[rsp+0],edx", "mov~<TAG>,edx", "jmp~FOO"]], [0, 0, 200, 0, 1, 3, 0, 2, 16, 0, 0.00515573945454247, ["call    ___errno_location", "mov     rdx, [rsp+118h+var_D0]", "jmp     loc_3A93"], ["call~FOO", "mov~rdx,[rsp+0]", "jmp~FOO"]], [1, 1, 200, 0, 0, 4, 1, 1, 13, 20, 0.022051458877231006, ["mov     eax, [rsp+118h+var_C0]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_3308"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 200, 0, 2, 13, 1, 3, 10, 21, 0.06791537362691494, ["mov     [rsp+118h+var_E4], r9d", "mov     qword ptr [rsp+118h+var_F8], r11", "mov     [rsp+118h+fd], r10d", "call    can_write_any_file", "mov     byte ptr [rsp+118h+errnum], al", "call    ___errno_location", "movzx   edx, byte ptr [rsp+118h+errnum]", "mov     [rsp+118h+var_E0], rax", "mov     r10d, [rsp+118h+fd]", "mov     r11, qword ptr [rsp+118h+var_F8]", "mov     r9d, [rsp+118h+var_E4]", "test    dl, dl", "jz      loc_3753"], ["mov~[rsp+0],r9d", "mov~[word ptr [rsp+0],r11", "mov~[rsp+0],r10d", "call~FOO", "mov~[yte ptr [rsp+0],al", "call~FOO", "movzx~edx,[yte ptr [rsp+0]", "mov~[rsp+0],rax", "mov~r10d,[rsp+0]", "mov~r11,[word ptr [rsp+0]", "mov~r9d,[rsp+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 20, 0.07508250825082509, ["cmp     eax, 3", "jz      loc_2EA0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 10, 19, 0.003743657947884341, ["cmp     byte ptr [x+19h], 0", "jnz     loc_2EA0"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [2, 0, 200, 0, 0, 4, 0, 1, 15, 24, 0.0230776809024186, ["cmp     byte ptr [x+0Ah], 0", "mov     rsi, qword ptr [rsp+118h+errnum]; arg", "mov     edi, 4; s", "jz      short loc_30E5"], ["cmp~[yte ptr [x+0],0", "mov~rsi,[word ptr [rsp+0]", "mov~edi,0", "jz~FOO"]], [0, 0, 200, 0, 0, 1, 0, 0, 11, 20, 0.008690048109288542, ["mov     eax, [x+4]"], ["mov~eax,[x+0]"]], [1, 1, 200, 0, 0, 4, 1, 1, 13, 19, 0.027043002807743462, ["mov     eax, [rsp+118h+var_C0]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_2EDE"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 1, 200, 0, 1, 13, 1, 2, 14, 18, 0.02253583567311955, ["mov     rsi, [rsp+118h+dir]; file", "mov     edi, r10d; fd", "mov     ecx, 200h; flag", "mov     edx, 2; type", "mov     [rsp+118h+var_F8], r9d", "mov     qword ptr [rsp+118h+fd], r11", "mov     [rsp+118h+errnum], r10d", "call    _faccessat", "test    eax, eax", "mov     r10d, [rsp+118h+errnum]", "mov     r11, qword ptr [rsp+118h+fd]", "mov     r9d, [rsp+118h+var_F8]", "jz      loc_2EDE"], ["mov~rsi,[rsp+0]", "mov~edi,r10d", "mov~ecx,<STR>", "mov~edx,0", "mov~[rsp+0],r9d", "mov~[word ptr [rsp+0],r11", "mov~[rsp+0],r10d", "call~FOO", "test~eax,eax", "mov~r10d,[rsp+0]", "mov~r11,[word ptr [rsp+0]", "mov~r9d,[rsp+0]", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.009753214127382889, ["mov     rcx, [rsp+118h+var_40]", "xor     rcx, fs:28h", "mov     eax, r14d", "jnz     loc_3D09"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,r14d", "jnz~FOO"]], [2, 0, 4, 0, 3, 14, 4, 4, 4, -1, 0.009519235505640116, ["lea     rsi, aFtsReadFailed; \"fts_read failed\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14d, 4", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, fts; sp_0", "call    rpl_fts_close", "test    eax, eax", "jz      loc_2CCD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14d,0", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,fts", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 3, 0, 2, 11, 3, 3, 5, -1, 0.0, ["lea     rsi, aFtsCloseFailed; \"fts_close failed\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14d, 4", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2CCD"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14d,0", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 200, 0, 0, 3, 1, 1, 13, 15, 0.007819811831929462, ["movzx   eax, byte ptr [rax+15h]", "test    al, al", "jnz     loc_2E79"], ["movzx~eax,[yte ptr [rax+0]", "test~al,al", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 19, 0.13894225243419867, ["cmp     eax, 3", "jnz     loc_2D81"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 8, 20, 0.20498990197527217, ["cmp     byte ptr [x], 0", "jnz     loc_2EE3"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 200, 0, 1, 6, 1, 1, 19, 19, 0.016846460765479535, ["lea     rsi, aSRemoveWritePr; \"%s: remove write-protected %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, [rsp+118h+dir]", "mov     rcx, qword ptr [rsp+118h+fd]", "mov     rdx, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax"]], [0, 1, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___7067; \"rm\"", "lea     rsi, aSrcRemoveC; \"src/remove.c\"", "lea     rdi, aValidStatusS; \"VALID_STATUS (s)\"", "mov     edx, 261h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,<STR>", "call~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 9, 17, 0.1447389212979578, ["cmp     ecx, 2", "ja      loc_3CD0"], ["cmp~ecx,0", "ja~FOO"]], [0, 0, 200, 0, 0, 1, 0, 1, 15, 18, 0.0028754741145756366, ["jmp     loc_2F07"], ["jmp~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 14, 19, 0.010079552731392542, ["cmp     eax, 4000h", "mov     [rsp+118h+errnum], r9d", "jnz     loc_3320"], ["cmp~eax,0", "mov~[rsp+0],r9d", "jnz~FOO"]], [1, 0, 200, 0, 1, 10, 1, 2, 14, 20, 0.021271530138088437, ["mov     rdi, [rsp+118h+st]; st", "call    file_type", "mov     r8, rax", "mov     eax, [rsp+118h+errnum]", "mov     rcx, cs:program_name", "mov     [rsp+118h+dir], r8", "mov     edx, 5; category", "test    eax, eax", "mov     qword ptr [rsp+118h+errnum], rcx", "jnz     loc_39B7"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~r8,rax", "mov~eax,[rsp+0]", "mov~rcx,<TAG>", "mov~[rsp+0],r8", "mov~edx,0", "test~eax,eax", "mov~[word ptr [rsp+0],rcx", "jnz~FOO"]], [1, 0, 200, 0, 1, 3, 0, 1, 16, 23, 0.015812028964090438, ["call    quotearg_style", "mov     [rsp+118h+var_E4], 15h", "mov     rbp, rax"], ["call~FOO", "mov~[rsp+0],0", "mov~rbp,rax"]], [1, 0, 200, 0, 0, 2, 0, 1, 10, 16, 0.14015786617752038, ["cmp     ebp, 4", "jz      loc_3CEF"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 200, 0, 0, 4, 0, 0, 13, 18, 0.010149335829105299, ["mov     rax, [rsp+118h+var_E0]", "mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFEh", "movsxd  rax, dword ptr [rax]", "mov     [rsp+118h+var_D0], rax"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "movsxd~rax,<TAG>", "mov~[rsp+0],rax"]], [1, 0, 200, 0, 1, 5, 1, 1, 20, 18, 0.03876656322348653, ["mov     r9, qword ptr [rsp+118h+errnum]", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~r9,[word ptr [rsp+0]", "mov~rdi,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 11, 18, 0.07767269264239858, ["cmp     r9d, 4", "jnz     loc_3320"], ["cmp~r9d,0", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 17, 19, 0.004921760832799698, ["mov     [rsp+118h+errnum], 1", "jmp     loc_2EFD"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 200, 0, 0, 2, 0, 1, 13, 21, 0.003160763837577787, ["lea     ecx, [rbp-2]", "jmp     loc_31EA"], ["lea~ecx,[rbp-2]+0]", "jmp~FOO"]], [0, 0, 200, 0, 0, 2, 0, 1, 13, 18, 0.01399151109140765, ["mov     rax, [rsp+118h+var_D0]", "jmp     loc_3AFE"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 5, 18, 0.27187232937934874, ["cmp     dx, 6; jumptable 0000000000002C34 cases 3,4,6,8,10-13", "mov     r11, [ent+38h]", "jnz     loc_3130"], ["cmp~dx,0", "mov~r11,[ent+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 200, 0, 1, 3, 1, 2, 19, 17, 0.08369866837430012, ["call    yesno", "test    al, al", "jz      loc_31E0"], ["call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 12, 17, 0.032627703068814344, ["cmp     byte ptr [x+9], 0", "jnz     loc_3320"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 14, 19, 0.007415480354005549, ["cmp     dword ptr [x+4], 3", "jnz     loc_2D81"], ["cmp~[word ptr [x+0],0", "jnz~FOO"]], [1, 0, 200, 0, 1, 7, 1, 1, 17, 22, 0.03701788089256687, ["lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [rsp+118h+var_E4]; errnum", "mov     rcx, rbp", "mov     rdx, rax; format"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~esi,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax"]], [1, 0, 200, 0, 1, 5, 0, 2, 18, 23, 0.01613221023594897, ["mov     rsi, qword ptr [rsp+118h+errnum]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "jmp     loc_30F5"], ["mov~rsi,[word ptr [rsp+0]", "mov~edi,0", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 200, 0, 0, 2, 0, 1, 6, 18, 0.03709176887838038, ["cmp     byte ptr [x+8], 0", "jz      short loc_2D2B"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 200, 0, 0, 2, 0, 0, 15, 19, 0.0003201812718585291, ["mov     [rsp+118h+errnum], r9d", "nop     dword ptr [rax+00000000h]"], ["mov~[rsp+0],r9d", "nop~[word ptr [rax+0]"]], [1, 0, 200, 0, 0, 2, 0, 1, 7, 18, 0.02788039998029654, ["cmp     qword ptr [ent+58h], 0", "jle     short loc_2D2B"], ["cmp~[word ptr [ent+0],0", "jle~FOO"]], [2, 0, 200, 0, 1, 6, 2, 2, 18, 21, 0.05361804837200137, ["xor     edi, edi; status", "xor     eax, eax", "mov     ebp, 4", "call    _error", "mov     ecx, 2", "jmp     loc_31EA"], ["xor~edi,edi", "xor~eax,eax", "mov~ebp,0", "call~FOO", "mov~ecx,0", "jmp~FOO"]], [2, 0, 200, 0, 1, 5, 0, 1, 13, 16, 0.03176567656765677, ["mov     rsi, r11; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rsp+118h+errnum], 15h", "mov     ent, rax"], ["mov~rsi,r11", "mov~edi,0", "call~FOO", "mov~[rsp+0],0", "mov~ent,rax"]], [0, 0, 200, 0, 1, 5, 0, 2, 12, 11, 0.01450256965995109, ["mov     rdi, rbp; ptr", "call    free", "mov     rax, [rsp+118h+var_D8]", "cmp     [fts+18h], rax", "jnz     loc_36F8"], ["mov~rdi,rbp", "call~FOO", "mov~rax,[rsp+0]", "cmp~[fts+0],rax", "jnz~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 14, 2, 0.046327767105068716, ["mov     rax, [rsp+118h+var_A8]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_3A57"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jz~FOO"]], [3, 0, 200, 0, 3, 16, 4, 3, 13, 16, 0.004515376910825419, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "lea     rsi, aAndPreserveRoo; \"and --preserve-root=all is in effect\"", "mov     edx, 5; category"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0"]], [0, 0, 200, 0, 0, 3, 0, 1, 13, 10, 0.005430766957292744, ["mov     rax, [ent+30h]", "mov     [rsp+118h+dir], rax", "jmp     loc_2FC7"], ["mov~rax,[ent+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 200, 0, 0, 2, 1, 1, 15, 1, 0.03702609066876837, ["test    rax, rax", "js      loc_3D43"], ["test~rax,rax", "js~FOO"]], [0, 0, 200, 0, 0, 2, 0, 1, 14, 18, 0.0003940692576720359, ["mov     rax, [rsp+118h+var_A8]", "jmp     loc_334B"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [4, 0, 200, 0, 0, 8, 0, 1, 7, 17, 0.01198627325419109, ["cmp     qword ptr [ent+20h], 0", "mov     rax, [ent+30h]", "mov     ebp, 1", "mov     r10d, [fts+2Ch]", "mov     r9d, 4", "mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFFh", "mov     [rsp+118h+dir], rax", "jnz     loc_3163"], ["cmp~[word ptr [ent+0],0", "mov~rax,[ent+0]", "mov~ebp,0", "mov~r10d,[fts+0]", "mov~r9d,0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [2, 0, 0, 0, 4, 19, 5, 4, 4, -1, 0.0, ["mov     rdx, [ent+38h]; jumptable 0000000000002C34 default case", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "movzx   ebx, word ptr [ent+70h]", "lea     rsi, aUnexpectedFail; \"unexpected failure: fts_info=%d: %s\\npl\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "lea     r9, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdx, rax; format", "mov     r8, rbp", "mov     ecx, ebx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    _abort"], ["mov~rdx,[ent+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "movzx~ebx,[ord ptr [ent+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "lea~r9,<TAG>", "mov~rdx,rax", "mov~r8,rbp", "mov~ecx,ebx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO"]], [3, 0, 200, 0, 0, 10, 1, 1, 6, 17, 0.23022413470913544, ["xor     ebp, ebp", "cmp     dx, 4", "mov     rax, [ent+30h]", "setz    bpl", "cmp     qword ptr [ent+20h], 0", "mov     r10d, [fts+2Ch]", "lea     r9d, ds:0[rbp*4]", "mov     [rsp+118h+var_A8], 0FFFFFFFFFFFFFFFFh", "mov     [rsp+118h+dir], rax", "jz      loc_2D57"], ["xor~ebp,ebp", "cmp~dx,0", "mov~rax,[ent+0]", "setz~bpl", "cmp~[word ptr [ent+0],0", "mov~r10d,[fts+0]", "lea~r9d,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 7, 19, 0.22019030261235079, ["mov     eax, [x+4]", "cmp     eax, 5", "jz      short loc_2D81"], ["mov~eax,[x+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 200, 0, 0, 1, 0, 0, 7, 16, 0.04715844007997105, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 200, 0, 0, 1, 0, 1, 17, 17, 0.01989228773623631, ["jmp     loc_3163"], ["jmp~FOO"]], [1, 0, 200, 0, 0, 3, 0, 1, 11, 16, 0.0038817385647591063, ["cmp     ebp, 3", "setz    al", "jmp     loc_3168"], ["cmp~ebp,0", "setz~al", "jmp~FOO"]], [0, 0, 200, 0, 0, 1, 0, 0, 12, 11, 0.02819647636405432, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 200, 0, 0, 4, 0, 1, 6, 10, 0.3537264174178612, ["cmp     qword ptr [ent+58h], 0", "mov     rax, [ent+30h]", "mov     [rsp+118h+dir], rax", "jnz     short loc_2FC7"], ["cmp~[word ptr [ent+0],0", "mov~rax,[ent+0]", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 200, 0, 1, 7, 0, 1, 8, 18, 0.042007372379028955, ["mov     ecx, ebp; is_dir", "mov     rdx, x; x", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    excise", "lea     ecx, [rax-2]", "mov     ebp, eax"], ["mov~ecx,ebp", "mov~rdx,x", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "lea~ecx,[rax-2]+0]", "mov~ebp,eax"]], [1, 0, 200, 0, 2, 9, 2, 3, 16, 18, 0.02178874603878298, ["mov     r9, qword ptr [rsp+118h+var_F8]", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "call    yesno", "test    al, al", "jnz     loc_2D81"], ["mov~r9,[word ptr [rsp+0]", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 200, 0, 1, 5, 1, 1, 15, 19, 0.008357552173127761, ["lea     rsi, aSRemoveSS; \"%s: remove %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, [rsp+118h+dir]", "mov     rcx, qword ptr [rsp+118h+errnum]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[word ptr [rsp+0]"]], [1, 0, 200, 0, 1, 4, 0, 2, 7, 12, 0.08816068173981577, ["mov     rdi, rax; name", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "jz      loc_33E8"], ["mov~rdi,rax", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 200, 0, 0, 1, 0, 0, 15, 9, 0.006032426270345585, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 200, 0, 0, 2, 0, 0, 10, 21, 0.030214595731072755, ["mov     ecx, 1", "mov     ebp, 3"], ["mov~ecx,0", "mov~ebp,0"]], [0, 0, 200, 0, 1, 6, 1, 2, 15, 19, 0.008357552173127761, ["lea     rsi, aSRemoveWritePr; \"%s: remove write-protected %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, [rsp+118h+dir]", "mov     rcx, qword ptr [rsp+118h+errnum]", "jmp     loc_339B"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 200, 0, 0, 1, 0, 0, 13, 22, 0.0012118607027724803, ["nop     dword ptr [rax]"], ["nop~<TAG>"]]], "func_feature": [122, 132, 283, 8, 203, 317, 1, 1012, 0.05395, 28, 4], "succs": [[12], [0, 86], [48, 27], [2, 194], [67], [162, 4], [116, 23], [6, 143], [24, 72], [8, 60], [11, 44], [10, 44], [128, 30], [12], [12, 15], [12], [17, 12], [12, 166], [12], [12], [12], [11, 45], [62], [22, 47], [34], [129], [25, 165], [49, 55], [37], [28, 133], [187, 39], [128, 30], [42], [32, 43], [40, 61], [34, 36], [34, 59], [109], [37], [168, 81, 187, 77, 3], [59, 46], [40, 199], [122], [42], [155], [44], [56, 35], [62], [89], [48, 90], [115], [50, 108], [88, 70], [186, 52], [63], [100, 54], [41, 36], [185, 74], [57, 131], [60], [71], [60, 79], [170], [99, 75], [65, 63], [87, 63], [63], [145, 167], [67, 5], [18, 70], [18, 69], [200, 78], [71], [19], [19], [76, 87], [64, 150], [80], [16, 85], [202, 78], [31], [80], [31], [82, 84], [82, 94], [114, 91], [147], [49], [18], [92, 118], [89], [101, 119], [31], [9, 124], [96, 93], [33, 93], [93, 95], [116], [97, 159], [49, 193], [49], [16, 119], [163], [153, 102], [137], [104, 134], [178], [106], [106], [13], [26, 109], [109], [16, 127], [16], [16, 127], [107, 103], [51, 115], [118, 31], [120, 117], [112, 181], [31], [31], [31], [121, 180], [121, 123], [112, 126], [112, 135], [7], [136, 148], [132, 29], [129, 164], [73, 158], [139, 38], [132], [184], [174, 7], [147, 149], [174], [137], [172, 157], [144, 68], [140, 142], [195, 140], [98, 159], [151], [144, 146], [144, 110], [161, 169], [147, 149], [147], [65, 66], [130, 195], [141, 151], [163], [], [160, 154], [171], [58, 156], [201, 197], [173], [192, 20], [], [111], [170], [58, 171], [164], [21], [111], [188, 175], [], [200, 113], [58, 179], [176, 195], [178], [173], [177, 186], [58], [186, 53], [21], [13], [182, 183], [184, 105], [122], [9], [138, 125], [131], [189, 190], [], [189, 190], [152, 195], [14], [190], [14], [194], [9, 198], [155], [195, 191], [196], [83, 94], [61], [21], [196], [200]], "fname": "rm", "n_num": 203}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 9, 0, 1, 4, 0, 2, 0, 0, 0.08823529411764705, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      loc_3EA8"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 2, 2, 0.11029411764705882, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_3DEC"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 28h", "mov     rax, r15", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r15", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [2, 0, 17, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "mov     r12, vallist_0", "push    rbp", "push    rbx", "mov     r15, 0FFFFFFFFFFFFFFFFh", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "mov     [rsp+58h+valsize], valsize_0", "call    _strlen", "mov     r13, [arglist]", "test    r13, r13", "jz      loc_3E90"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "mov~r12,vallist_0", "push~rbp", "push~rbx", "mov~r15,0", "sub~rsp,0", "mov~<TAG>,arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "call~FOO", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.014705882352941176, ["mov     matchind, i", "jmp     short loc_3E90"], ["mov~matchind,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 0, 4, -1, 0.03676470588235294, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovnz  matchind, rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovnz~matchind,rax"]], [1, 0, 9, 2, 1, 11, 1, 1, 5, 4, 0.016544117647058824, ["mov     rdx, [rsp+58h+valsize]; n", "mov     rsi, r12; s2", "mov     rdi, rdx", "imul    rdi, matchind", "add     rdi, [rsp+58h+vallist]; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdx,[rsp+0]", "mov~rsi,r12", "mov~rdi,rdx", "imul~rdi,matchind", "add~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.05514705882352941, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_3DC0"], ["cmp~matchind,0", "jnz~FOO"]], [0, 0, 9, 0, 1, 4, 0, 2, 4, 1, 0.09558823529411764, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_3EA8"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 2, 0.125, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_3E3D"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 3, 3, 0.09191176470588235, ["add     i, 1", "add     r12, [rsp+58h+valsize]", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      loc_3E80"], ["add~i,0", "add~r12,[rsp+0]", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 4, 3, 0.03676470588235294, ["add     i, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      short loc_3E80"], ["add~i,0", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [1, 0, 9, 1, 0, 5, 1, 1, 6, 3, 0.025735294117647058, ["mov     matchind, i", "add     matchind, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jnz     short loc_3E4A"], ["mov~matchind,i", "add~matchind,0", "mov~r13,<TAG>", "test~r13,r13", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.0625, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_3E38"], ["cmp~matchind,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.016544117647058824, ["mov     matchind, i", "jmp     short loc_3DEC"], ["mov~matchind,i", "jmp~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 6, 4, 0.007352941176470588, ["mov     [rsp+58h+ambiguous], 1"], ["mov~[rsp+0],0"]], [1, 0, 16, 0, 0, 5, 2, 1, 1, 3, 0.05514705882352941, ["xor     ebx, ebx", "test    vallist_0, vallist_0", "mov     rbp, arglen", "mov     [rsp+58h+ambiguous], 0", "jnz     short loc_3E02"], ["xor~ebx,ebx", "test~vallist_0,vallist_0", "mov~rbp,arglen", "mov~[rsp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 2, 3, 0.044117647058823525, ["jmp     loc_3E4A"], ["jmp~FOO"]]], "func_feature": [6, 9, 20, 0, 18, 28, 0, 89, 0.04902, 0, 8], "succs": [[4, 7], [0, 10], [], [16, 2], [2], [2], [10], [14, 6], [4, 13], [8, 11], [1, 5], [9, 5], [9, 5], [12, 15], [10], [11], [1, 17], [9]], "fname": "argmatch", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_3ED6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_3F10"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 0, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 9, 2, 2, 13, 2, 3, 0, 0, 0.061111111111111116, ["mov     rdi, r15; arg", "add     i, 1", "add     rbp, valsize", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS; \", %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jnz     short loc_3FB8"], ["mov~rdi,r15", "add~i,0", "add~rbp,valsize", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_3F80"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_4038"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 8", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "jz      short loc_3F80"], ["test~i,i", "jz~FOO"]], [2, 0, 10, 1, 2, 21, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 8", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "call    _dcgettext", "mov     rdi, rax; s", "mov     rsi, rbx; stream", "call    _fputs_unlocked", "mov     r15, [arglist]", "test    r15, r15", "jz      loc_4008"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "mov~rbx,<TAG>", "call~FOO", "mov~rdi,rax", "mov~rsi,rbx", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [2, 0, 9, 2, 2, 14, 2, 3, 3, 2, 0.1388888888888889, ["mov     rdi, r15; arg", "add     i, 1", "mov     last_val, rbp", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "add     rbp, valsize", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jz      short loc_4008"], ["mov~rdi,r15", "add~i,0", "mov~last_val,rbp", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "add~rbp,valsize", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_3FB8"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [7, 10, 14, 0, 11, 15, 1, 84, 0.08182, 4, 7], "succs": [[4, 7], [0, 9], [], [2, 6], [3], [], [5], [1, 9], [10, 3], [3, 7], [7]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 13, 0, 0, 1, 0, 0, 0, 0, 0.016798418972332016, ["mov     [rsp+78h+var_61], 1"], ["mov~[rsp+0],0"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.04150197628458498, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4180"], ["cmp~r14,0", "jnz~FOO"]], [0, 1, 23, 1, 1, 19, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arglist", "push    rbp", "push    rbx", "mov     rbx, vallist_0", "sub     rsp, 48h", "mov     [rsp+78h+context], context_0", "mov     context_0, arg_0; s", "mov     [rsp+78h+arg], arg_0", "mov     [rsp+78h+vallist], vallist_0", "mov     [rsp+78h+valsize], valsize_0", "mov     [rsp+78h+exit_fn], exit_fn_0", "call    _strlen", "mov     r15, [arglist+0]", "test    r15, r15", "jz      loc_4230"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arglist", "push~rbp", "push~rbx", "mov~rbx,vallist_0", "sub~rsp,<STR>", "mov~[rsp+0],context_0", "mov~context_0,arg_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "mov~[rsp+0],exit_fn_0", "call~FOO", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [0, 0, 14, 0, 1, 6, 1, 2, 3, 5, 0.0859683794466403, ["mov     rsi, [rsp+78h+arg]; s2", "mov     rdx, rbp; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_40EA"], ["mov~rsi,[rsp+0]", "mov~rdx,rbp", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 2, 6, 0.030632411067193673, ["mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, vallist_0", "mov     [rsp+78h+var_61], 0", "mov     [rsp+78h+var_60], r14", "xor     ebx, ebx", "mov     r14, r15", "mov     r15, [rsp+78h+valsize]", "jmp     short loc_40FB"], ["mov~r14,0", "mov~r12,vallist_0", "mov~[rsp+0],0", "mov~[rsp+0],r14", "xor~ebx,ebx", "mov~r14,r15", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 14, 2, 0, 5, 1, 1, 4, 4, 0.10869565217391304, ["add     rbx, 1", "add     r12, valsize_0", "mov     r14, [arglist+rbx*8+0]", "test    r14, r14", "jz      short loc_4130"], ["add~rbx,0", "add~r12,valsize_0", "mov~r14,[arglist+0]", "test~r14,r14", "jz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 4, 3, 0.10869565217391304, ["add     rbx, 1", "mov     r15, [arglist+rbx*8+0]", "test    r15, r15", "jz      short loc_4135"], ["add~rbx,0", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 3, 4, 0.09189723320158102, ["mov     rdx, rbp; n", "mov     rsi, r12; s2", "mov     rdi, r15; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_4185"], ["mov~rdx,rbp", "mov~rsi,r12", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 6, 4, 0.016798418972332016, ["mov     r14, rbx", "jmp     short loc_4185"], ["mov~r14,rbx", "jmp~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 1, 6, 0.037549407114624504, ["test    vallist_0, vallist_0", "mov     rbp, rax", "jz      loc_4168"], ["test~vallist_0,vallist_0", "mov~rbp,rax", "jz~FOO"]], [0, 0, 14, 0, 1, 4, 0, 2, 4, 7, 0.06027667984189723, ["mov     rdi, r14; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_4160"], ["mov~rdi,r14", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 5, 3, 0.07312252964426877, ["mov     r14, [rsp+78h+var_60]"], ["mov~r14,[rsp+0]"]], [2, 0, 13, 0, 0, 5, 1, 1, 2, 5, 0.042490118577075096, ["mov     [rsp+78h+var_61], 0", "xor     ebx, ebx", "mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, [rsp+78h+arg]", "jmp     short loc_4193"], ["mov~[rsp+0],0", "xor~ebx,ebx", "mov~r14,0", "mov~r12,[rsp+0]", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 5, 6, 0.043478260869565216, ["mov     rax, [rsp+78h+var_60]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_40C0"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jnz~FOO"]], [3, 0, 1, 0, 5, 23, 4, 6, 2, -1, 0.005928853754940711, ["mov     rsi, [rsp+78h+context]; arg", "mov     edi, 1; n", "mov     r14, 0FFFFFFFFFFFFFFFFh", "call    quote_n", "mov     rdx, [rsp+78h+arg]; arg", "mov     rbp, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, rbx; format", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rdx, [rsp+78h+valsize]; valsize", "mov     rsi, [rsp+78h+vallist]; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "mov     rax, [rsp+78h+exit_fn]", "call    rax", "jmp     loc_414A"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~r14,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rbp,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,rbx", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,arglist", "call~FOO", "mov~rax,[rsp+0]", "call~rax", "jmp~FOO"]], [1, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.005928853754940711, ["lea     rsi, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_41D3"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 1, 1, 6, -1, 0.03359683794466403, ["lea     rsi, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [0, 0, 14, 0, 0, 2, 0, 1, 6, 5, 0.018774703557312252, ["mov     [rsp+78h+var_60], rbx", "jmp     short loc_40EA"], ["mov~[rsp+0],rbx", "jmp~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, 6, 0.05632411067193675, ["mov     rdi, r15; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_4160"], ["mov~rdi,r15", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 2, 0.1442687747035573, ["cmp     [rsp+78h+var_61], 0", "jnz     loc_41BD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 1, 0.04940711462450593, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jz      loc_4230"], ["cmp~r14,0", "jz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     arglist", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~arglist", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.017786561264822132, ["mov     r14, rbx", "jmp     short loc_414A"], ["mov~r14,rbx", "jmp~FOO"]], [1, 0, 14, 2, 1, 11, 1, 1, 6, 5, 0.018774703557312252, ["imul    rax, r15", "mov     rdi, [rsp+78h+vallist]", "mov     rdx, r15; n", "mov     rsi, r12; s2", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+78h+var_61]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+78h+var_61], al"], ["imul~rax,r15", "mov~rdi,[rsp+0]", "mov~rdx,r15", "mov~rsi,r12", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]]], "func_feature": [13, 15, 32, 1, 24, 35, 1, 135, 0.0462, 2, 7], "succs": [[6], [0, 8], [9, 15], [10, 5], [3], [11, 3], [19, 7], [18, 6], [6], [12, 4], [13, 22], [19], [7], [17, 23], [21], [14], [14], [5], [1, 22], [16, 20], [21, 15], [], [21], [5]], "fname": "__xargmatch_internal", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_4270"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_427F"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_4291"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_4291"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 9, 0, 1, 7, 2, 2, 0, 0, 0.030303030303030304, ["xor     esi, esi; offset", "mov     rdi, rbx; fp", "mov     edx, 1; whence", "call    rpl_fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_42E8"], ["xor~esi,esi", "mov~rdi,rbx", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 12, 0, 1, 8, 1, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rbx; fp", "call    freadahead", "test    rax, rax", "jnz     loc_4368"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 3, 2, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    rpl_fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_4386"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, rbx; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_4308"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_4308"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 2, 1, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_43A0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4353"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 65, 0.03205, 6, 0], "succs": [[3, 5], [0, 4], [7], [2, 5], [11, 7], [9, 7], [12], [8, 6], [12], [10], [], [10], []], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_4462"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name_0; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_446D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_4423"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_4423"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_440C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, aS+2; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4462"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 3, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_44CA"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_44C0"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_44A0"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_44EA"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_44AC"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_44D5"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_44EA"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_44D5"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 2, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_4510"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_4530"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_4518"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_450A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 1, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.07352941176470588, ["cmp     eax, 1000h", "jz      loc_4620"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, 2, 0.08823529411764705, ["cmp     eax, 2000h", "jz      loc_4610"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 3, -1, 0.003676470588235294, ["lea     rsi, aSymbolicLink; \"symbolic link\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 4, 0.07352941176470588, ["cmp     eax, 0A000h", "jz      short loc_45D0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.004901960784313725, ["lea     rsi, aDirectory; \"directory\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 5, 0.04534313725490196, ["cmp     eax, 4000h", "jz      loc_45F0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.00980392156862745, ["cmp     qword ptr [st+30h], 0", "jnz     short loc_45B8"], ["cmp~[word ptr [st+0],0", "jnz~FOO"]], [2, 1, 17, 0, 0, 5, 1, 1, 0, 6, 0.0, ["mov     eax, [st+18h]", "mov     edx, 5; category", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      short loc_45A0"], ["mov~eax,[st+0]", "mov~edx,0", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 4, -1, 0.003676470588235294, ["lea     rsi, aBlockSpecialFi; \"block special file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 1, 9, 0, 0, 2, 0, 1, 3, 3, 0.08823529411764705, ["cmp     eax, 6000h", "jz      loc_4600"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.003063725490196078, ["lea     rsi, aRegularFile; \"regular file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.001838235294117647, ["lea     rsi, aSocket; \"socket\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 1, 3, 0, 0, 2, 0, 1, 6, -1, 0.044117647058823525, ["cmp     eax, 0C000h", "jz      short loc_45E0"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.001838235294117647, ["lea     rsi, aWeirdFile; \"weird file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.003063725490196078, ["lea     rsi, aRegularEmptyFi; \"regular empty file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 5, -1, 0.003676470588235294, ["lea     rsi, aCharacterSpeci; \"character special file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 6, 0, 0.003676470588235294, ["lea     rsi, aFifo; \"fifo\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 10, 17, 0, 18, 25, 2, 46, 0.02512, 9, 0], "succs": [[17, 12], [0, 16], [13], [9, 2], [13], [3, 4], [10, 15], [5, 6], [13], [8, 1], [13], [13], [11, 14], [], [13], [13], [13], [13]], "fname": "file_type", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_4643"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 1, 0, 1, 4, 0, 1, 0, 0, 0.027777777777777776, ["mov     rdx, baselen; n", "mov     rsi, base; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,base", "call~FOO", "mov~<TAG>,0"]], [0, 0, 3, 1, 1, 10, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "movzx   ecx, [rsp+48h+sep]", "mov     rdi, [rsp+48h+var_48]", "add     rdi, rax; dest", "test    base_in_result, base_in_result", "mov     [rax], cl", "jz      short loc_4718"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "movzx~ecx,[rsp+0]", "mov~rdi,<TAG>", "add~rdi,rax", "test~base_in_result,base_in_result", "mov~<TAG>,cl", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.0, ["mov     [base_in_result], p"], ["mov~<TAG>,p"]], [2, 0, 5, 0, 0, 3, 0, 1, 2, 0, 0.034722222222222224, ["mov     [rsp+48h+var_48], 0", "mov     [rsp+48h+sep], 0", "jmp     short loc_46DE"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 1, 0.027777777777777776, ["cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      loc_4740"], ["cmp~[yte ptr [dir+0],0", "jz~FOO"]], [1, 0, 9, 3, 3, 22, 1, 4, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r12, dir", "push    rbp", "push    rbx", "mov     rbp, base", "sub     rsp, 18h", "call    last_component", "mov     rbx, rax", "mov     rdi, dirbase; name", "call    base_len", "sub     dirbase, dir", "mov     r13, rax", "mov     rdi, base; s", "add     rbx, dirbaselen", "call    _strlen", "test    dirbaselen, dirbaselen", "mov     r14, rax", "jz      short loc_46C0"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r12,dir", "push~rbp", "push~rbx", "mov~rbp,base", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "mov~rdi,dirbase", "call~FOO", "sub~dirbase,dir", "mov~r13,rax", "mov~rdi,base", "add~rbx,dirbaselen", "call~FOO", "test~dirbaselen,dirbaselen", "mov~r14,rax", "jz~FOO"]], [0, 0, 4, 1, 1, 6, 1, 2, 2, -1, 0.2777777777777778, ["lea     rdi, [dirlen+baselen+1]", "add     rdi, [rsp+48h+var_48]; size", "call    _malloc", "test    rax, rax", "mov     dirbaselen, rax", "jz      short loc_4726"], ["lea~rdi,[dirlen+0]", "add~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~dirbaselen,rax", "jz~FOO"]], [3, 0, 5, 0, 0, 9, 1, 1, 2, -1, 0.034722222222222224, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setnz   al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Fh ; '/'", "cmovz   eax, edx", "mov     [rsp+48h+sep], al", "jmp     short loc_46DE"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setnz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [3, 0, 5, 0, 0, 8, 1, 0, 1, -1, 0.06944444444444445, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setz    al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Eh ; '.'", "cmovnz  eax, edx", "mov     [rsp+48h+sep], al"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovnz~eax,edx", "mov~[rsp+0],al"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     dirlen", "pop     base", "pop     dir", "pop     p_concat", "pop     baselen", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~dirlen", "pop~base", "pop~dir", "pop~p_concat", "pop~baselen", "pop~base_in_result", "retn"]]], "func_feature": [6, 5, 12, 1, 10, 13, 1, 74, 0.06389, 0, 6], "succs": [[9], [0, 2], [0], [6], [3, 7], [8, 4], [1, 9], [6], [6], []], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rbx, [slash+4]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [2, 0, 2, 0, 0, 9, 1, 1, 4, -1, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_47BD"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_47BD"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_47CD"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_47BD"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_47BD"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[5], [0, 5], [5, 6], [2, 4], [], [], [5, 7], [1, 5]], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_4810"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_4810"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_1043C", "lea     rdx, unk_10440", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_4880"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_4810"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_1044B", "lea     rdx, asc_1044D; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_4810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_4830"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_10444", "lea     rdx, unk_10448", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[9, 6], [0, 9], [9, 14], [9, 2], [], [9, 4], [9, 10], [8, 15], [9, 3], [], [9, 11], [9, 12], [9, 13], [16, 9], [9, 5], [9, 1], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 249, 0, 0, 1, 0, 0, 0, 0, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [0, 0, 249, 0, 0, 2, 0, 0, 6, -1, 0.003533026113671275, ["cmp     buffersize_0, r15", "jbe     short loc_5A09"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 2, 1, 0, 16, -1, 0.012314388120839733, ["add     r15, 2", "xor     r11d, r11d"], ["add~r15,0", "xor~r11d,r11d"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.012570404505888377, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_4BFD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 0, 1, 15, -1, 0.006477214541730671, ["jmp     loc_4F7A"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.0670762928827445, ["cmp     m, 1", "ja      loc_4F8C"], ["cmp~m,0", "ja~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 12, -1, 0.068868407578085, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.07517665130568356, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      loc_4EB0"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Bh; jumptable 00000000000053DE case 11", "xor     r10d, r10d", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.10265307646356031, ["lea     rcx, off_106C8", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.483115719406042, ["cmp     r15, r13", "jnb     short loc_4C0D"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.3581669226830517, ["test    dl, dl", "jz      short loc_4C04"], ["test~dl,dl", "jz~FOO"]], [2, 0, 244, 2, 0, 3, 0, 1, 16, -1, 0.08147721454173067, ["add     r15, 1", "add     i, 1", "jmp     loc_4C04"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [4, 0, 244, 3, 0, 6, 1, 0, 20, -1, 0.048067076292882746, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     ilim, r12", "jbe     loc_4C04"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~ilim,r12", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.09182881037719746, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_5870"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 6, 0, 0, 13, -1, 0.007692225635774022, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.24687339989759344, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.019667712066905593, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jz      loc_4D15"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.030036375661375667, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 0000000000004B8E case 92", "jz      loc_5608"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 16, -1, 0.006899641577060932, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_4BA2"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.02322068612391193, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_54B1"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 244, 1, 0, 6, 0, 0, 16, -1, 0.016001024065540194, ["mov     rax, [rsp+0F8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0F8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_5A20"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 247, 0, 0, 2, 0, 1, 3, 0, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 0", "jmp     loc_499A"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, 1, 0.00010240655401945725, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 2", "mov     ecx, eax", "and     eax, 4", "and     ecx, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], ecx", "jz      loc_5CA5"], ["mov~eax,[rsp+0]", "mov~ecx,eax", "and~eax,0", "and~ecx,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],ecx", "jz~FOO"]], [0, 0, 254, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0F8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0F8h+quote_string_0], rax", "jmp     loc_51C4"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 255, 0, 1, 9, 1, 2, 3, -1, 0.0001152073732718894, ["lea     rsi, asc_1044F; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0F8h+quote_string_0], rax", "lea     rax, asc_1044F; \"`\"", "cmp     rcx, rax", "jz      loc_5C00"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.04832309267793139, ["lea     rdx, [r15+2]", "cmp     r13, len", "jbe     short loc_5025"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.04857910906298003, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_500C"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 0, 0, 19, -1, 0.0, ["mov     edx, ebx", "shr     dl, 6", "add     edx, 30h ; '0'", "mov     [r8+r15+1], dl"], ["mov~edx,ebx", "shr~dl,0", "add~edx,0", "mov~[r8+0],dl"]], [0, 0, 6, 0, 0, 1, 0, 1, 14, -1, 7.680491551459293e-05, ["jmp     short loc_5BC6"], ["jmp~FOO"]], [1, 0, 10, 1, 0, 4, 1, 1, 13, -1, 0.0033410138248847927, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_5BB1"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.0002560163850486431, ["mov     r15, len"], ["mov~r15,len"]], [1, 0, 10, 1, 0, 5, 1, 1, 13, -1, 0.0033922171018945214, ["mov     [r14+len], cl", "add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_5BB1"], ["mov~<TAG>,cl", "add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, -1, 0.00012800819252432156, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 5", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_5B3B"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [0, 0, 278, 1, 0, 5, 0, 1, 1, 2, 0.0035586277521761386, ["lea     rcx, off_104A0", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 244, 0, 0, 4, 2, 1, 14, -1, 0.08275729646697388, ["mov     eax, r11d", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_4E4B"], ["mov~eax,r11d", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [0, 0, 245, 0, 0, 1, 0, 1, 8, -1, 0.012544802867383511, ["jmp     loc_51FA"], ["jmp~FOO"]], [1, 0, 249, 1, 0, 5, 1, 1, 7, -1, 0.00957501280081925, ["mov     rax, [rsp+0F8h+quote_string_0]", "add     r15, 1", "movzx   eax, byte ptr [rax+len]", "test    al, al", "jnz     short loc_5A00"], ["mov~rax,[rsp+0]", "add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185339, ["mov     eax, 0Ah; jumptable 00000000000053DE case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_4E26"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [3, 0, 244, 1, 0, 5, 1, 0, 20, -1, 0.0, ["mov     edx, ebx", "shr     dl, 3", "and     edx, 7", "add     edx, 30h ; '0'", "mov     [r8+r15+2], dl"], ["mov~edx,ebx", "shr~dl,0", "and~edx,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 247, 0, 0, 2, 1, 1, 3, -1, 0.0001152073732718894, ["test    buffersize_0, buffersize_0", "jz      loc_58EF"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.01282642089093702, ["cmp     buffersize_0, len", "jbe     short loc_5A2A"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 5, -1, 0.0004608294930875576, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+len], 30h ; '0'"], ["mov~<TAG>,0"]], [2, 0, 244, 1, 0, 7, 1, 1, 15, -1, 0.48285970302099335, ["movzx   edi, [rsp+0F8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    bpl, bpl", "cmovz   edi, eax", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], dil", "jmp     loc_4A98"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~bpl,bpl", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0323618578255675, ["xor     r10d, r10d; jumptable 00000000000053DE case 0"], ["xor~r10d,r10d"]], [0, 0, 244, 1, 1, 12, 1, 2, 12, -1, 0.07457757296466974, ["mov     rax, [rsp+0F8h+arg]", "lea     r15, [i+m]", "mov     rdx, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, [rsp+0F8h+ps]; ps", "mov     rdi, [rsp+0F8h+pwc]; pwc", "lea     r13, [rax+r15]", "sub     rdx, r15; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      short loc_57A0"], ["mov~rax,[rsp+0]", "lea~r15,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r15", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 244, 1, 2, 10, 2, 3, 16, -1, 0.017895545314900153, ["mov     edi, [rsp+0F8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0F8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_572F"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 12, 1, 0, 11, -1, 0.07342549923195084, ["lea     rax, [rsp+0F8h+w]", "xor     esi, esi", "mov     [rsp+0F8h+c], bl", "mov     [rsp+0F8h+var_6B], r11b", "mov     c_0, rsi", "mov     [rsp+0F8h+var_60], r9", "mov     [rsp+0F8h+pwc], rax", "mov     [rsp+0F8h+var_69], r10b", "mov     [rsp+0F8h+var_68], r15", "mov     [rsp+0F8h+var_80], r8", "mov     [rsp+0F8h+buffersize], buffersize_0", "mov     [rsp+0F8h+pending_shell_escape_end], r14"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r11b", "mov~c_0,rsi", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r8", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r14"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.04883512544802868, ["cmp     r13, r15", "jbe     short loc_4FF6"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_4E35"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 18, -1, 0.013031233998975935, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_5818"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 17, -1, 0.013031233998975935, ["mov     rcx, [rsp+0F8h+arg]", "lea     bytes, [rcx+r15+1]", "add     rcx, bytes", "lea     r8, [rcx+r15]", "jmp     short loc_5825"], ["mov~rcx,[rsp+0]", "lea~bytes,[rcx+0]", "add~rcx,bytes", "lea~r8,<TAG>", "jmp~FOO"]], [1, 0, 244, 1, 0, 3, 0, 1, 19, -1, 0.008986175115207374, ["add     rax, 1", "cmp     r8, rax", "jz      loc_5779"], ["add~rax,0", "cmp~r8,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.0669435910564943, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_5880"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.051083055982249624, ["cmp     [rsp+0F8h+backslash_escapes], 0; jumptable 0000000000004B8E case 0", "jnz     loc_542B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.012570404505888377, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len", "jbe     short loc_5A39"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 10, -1, 7.680491551459293e-05, ["xor     r10d, r10d; jumptable 00000000000053DE cases 35,126", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.032954962450930214, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_5613"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.04204354412015711, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 0000000000004B8E case 39", "jz      loc_5630"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 18, -1, 0.013325652841781874, ["xor     r10d, r10d", "jmp     loc_503E"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 17, -1, 0.02951868919610855, ["test    dl, dl", "jz      loc_58E7"], ["test~dl,dl", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 12, -1, 0.03147721454173067, ["test    buffersize_0, buffersize_0", "jz      loc_5897"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 10, -1, 0.010921979006656476, ["test    i, i; jumptable 0000000000004B8E cases 35,126", "jz      loc_4D35"], ["test~i,i", "jz~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.2749684246458435, ["lea     rcx, off_104CC", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 1, 0, 1, 12, -1, 0.0005120327700972862, ["jmp     short loc_4C38; jumptable 0000000000004B8E cases 35,126"], ["jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 17, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_4E44"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 19, -1, 0.03854326676907322, ["cmp     r13, r15", "jbe     short loc_5047"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 4, 2, 1, 20, -1, 0.012314388120839733, ["add     r15, 2", "xor     r10d, r10d", "xor     r11d, r11d", "jmp     short loc_503E"], ["add~r15,0", "xor~r10d,r10d", "xor~r11d,r11d", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.006810035842293907, ["mov     esi, eax"], ["mov~esi,eax"]], [0, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 244, 0, 0, 3, 2, 1, 11, -1, 0.02067332309267793, ["xor     ebp, ebp", "xor     eax, eax", "jmp     loc_4BA2"], ["xor~ebp,ebp", "xor~eax,eax", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.012442396313364055, ["test    al, al", "jnz     short loc_4C41"], ["test~al,al", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 1, 1, 19, -1, 0.012314388120839733, ["mov     eax, ebp", "lea     r15, [rdx+3]", "xor     ebp, ebp", "mov     ebx, 30h ; '0'", "jmp     loc_4BA2"], ["mov~eax,ebp", "lea~r15,[rdx+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+rdx+2], 30h ; '0'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 1, 0, 2, 0, 0, 18, -1, 0.018394777265745003, ["add     r15, 3", "mov     r11d, eax"], ["add~r15,0", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_544F"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.012852022529441884, ["cmp     byte ptr [rsi], 0", "jnz     short loc_5987"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 244, 0, 0, 14, 0, 0, 15, -1, 0.02197900665642601, ["mov     r14, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, r15", "mov     rsi, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "mov     r9, [rsp+0F8h+var_60]", "cmp     rcx, r14", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "jnb     short loc_5997"], ["mov~r14,[rsp+0]", "mov~rcx,r15", "mov~rsi,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rcx,r14", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.03828725038402458, ["movzx   ebx, byte ptr [rdi+r12]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.040450588837686e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, argsize_0; argsize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+110h+var_D8]; quote_these_too", "mov     r9d, [rsp+118h+flags]; flags", "mov     rdx, [rsp+118h+arg]; arg", "mov     rsi, [rsp+118h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_4DB3"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,argsize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.027208141321044547, ["cmp     [rsp+0F8h+all_c_and_shell_quote_compat], 0", "jnz     loc_5C16"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.08173323092677931, ["cmp     buffersize_0, r15", "jbe     short loc_4E55"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.00015360983102918587, ["xor     r10d, r10d; jumptable 00000000000053DE cases 123,125"], ["xor~r10d,r10d"]], [9, 0, 245, 0, 0, 10, 1, 0, 4, -1, 0.001587301587301587, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_545E"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002944188428059396, ["movzx   edx, [rsp+0F8h+encountered_single_quote]", "jmp     loc_5B96"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 6, 2, 1, 10, -1, 0.02375832053251408, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0F8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_5C52"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [2, 0, 244, 0, 0, 4, 0, 1, 10, -1, 0.012698412698412698, ["cmp     argsize_0, 1; jumptable 0000000000004B8E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4C6C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 3, 1, 15, -1, 0.130094726062468, ["mov     edx, esi", "xor     edx, 1", "and     edx, r11d", "test    r10b, r10b", "jz      short loc_5073"], ["mov~edx,esi", "xor~edx,0", "and~edx,r11d", "test~r10b,r10b", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 14, -1, 0.18753200204813109, ["test    al, al", "jnz     loc_4FA8"], ["test~al,al", "jnz~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 4, -1, 0.0005120327700972862, ["mov     rax, [rsp+0F8h+quote_string_0]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_51FA"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 2, 1, 3, -1, 0.016244239631336404, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_59EC"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_546D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.006438812083973375, ["cmp     r13, r15", "jbe     short loc_506F"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 11, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 1, 244, 0, 0, 2, 0, 1, 10, -1, 0.0011165514592933932, ["mov     ebx, 20h ; ' '; jumptable 0000000000004B8E case 32", "jmp     loc_4D35"], ["mov~ebx,<STR>", "jmp~FOO"]], [1, 0, 244, 1, 0, 1, 0, 0, 17, -1, 0.00618279569892473, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 12, -1, 0.0030081925243215565, ["movzx   r10d, [rsp+0F8h+var_E2]", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~r10d,[rsp+0]", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.004444551117938212, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_5880"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.016129032258064516, ["cmp     bytes, 1", "jz      loc_5779"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.011404783239460727, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_5613"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.07144062553336736, ["mov     eax, [rsp+0F8h+quoting_style]; jumptable 0000000000004B8E case 63", "cmp     eax, 2", "jz      loc_5670"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 14, -1, 0.005692097627581498, ["mov     c_and_shell_quote_compat_0, argsize_0", "mov     argsize_0, r8", "jmp     force_outer_quoting_style"], ["mov~c_and_shell_quote_compat_0,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.06386222051544632, ["cmp     buffersize_0, len", "jbe     short loc_547E"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 12, -1, 0.0648862860556409, ["mov     eax, r11d", "mov     rdx, r15", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_5474"], ["mov~eax,r11d", "mov~rdx,r15", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.018394777265745007, ["lea     len, [r15+3]", "mov     r11d, eax"], ["lea~len,[r15+0]", "mov~r11d,eax"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0008960573476702509, ["xor     r10d, r10d; jumptable 00000000000053DE case 63"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 244, 1, 0, 3, 0, 0, 16, -1, 0.1295826932923707, ["add     i, 1", "cmp     r12, ilim", "jnb     store_c"], ["add~i,0", "cmp~r12,ilim", "jnb~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018919610855094728, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_58B0"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019175627240143368, ["cmp     buffersize_0, r15", "jbe     short loc_58A1"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [10, 0, 244, 0, 1, 25, 4, 2, 4, -1, 0.03748079877112134, ["mov     r12, [rsp+0F8h+quote_string]", "test    ebx, ebx", "setnz   [rsp+0F8h+var_85]", "movzx   ebx, [rsp+0F8h+var_85]", "mov     rdi, r12; s", "call    _strlen", "mov     [rsp+0F8h+quote_string_len], rax", "mov     eax, [rsp+0F8h+flags]", "xor     r11d, r11d", "mov     [rsp+0F8h+c_and_shell_quote_compat], bl", "mov     [rsp+0F8h+s2], r12", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+var_E1], 0", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_4A88"], ["mov~r12,[rsp+0]", "test~ebx,ebx", "setnz~[rsp+0]", "movzx~ebx,[rsp+0]", "mov~rdi,r12", "call~FOO", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "xor~r11d,r11d", "mov~[rsp+0],bl", "mov~[rsp+0],r12", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.009927035330261137, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_4BCB"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0003242874210616146, ["mov     rbp, argsize_0", "mov     argsize_0, r8", "jmp     loc_4D7D"], ["mov~rbp,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 17, -1, 0.03208311998634579, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_5C6D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [4, 0, 244, 0, 0, 7, 0, 0, 5, -1, 0.009370199692780336, ["lea     rax, unk_1044B", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0F8h+s2], rax", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [8, 0, 245, 0, 0, 10, 1, 1, 4, -1, 0.001587301587301587, ["mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "jmp     loc_4A5B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_564E"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.018663594470046084, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_5C7D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 13, -1, 0.005603558627752176, ["jmp     loc_4BCB"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0123410564942823, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_4BAD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.05666922683051715, ["cmp     eax, 5", "jnz     short loc_4CB8"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.01282642089093702, ["cmp     r13, r15", "jbe     short loc_5092"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 4, 1, 0, 3, -1, 0.13227086533538143, ["mov     r8, r14", "xor     r12d, r12d", "mov     r14, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r8,r14", "xor~r12d,r12d", "mov~r14,argsize_0", "nop~[word ptr [rax+0]"]], [12, 0, 244, 0, 0, 16, 1, 1, 5, -1, 0.00933179723502304, ["lea     rax, asc_1044D; \"'\"", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     r15d, 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 2", "jmp     loc_4A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [14, 0, 244, 0, 0, 23, 4, 1, 2, -1, 0.002073732718894009, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 6", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+var_70], eax", "lea     rax, unk_1044B", "and     ecx, 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 5", "jmp     loc_4A88"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "mov~[rsp+0],eax", "lea~rax,<TAG>", "and~ecx,0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.002073732718894009, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 7", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_4A88"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 6, 1, 1, 3, -1, 0.01248079877112135, ["lea     rax, asc_1044D; \"'\"", "mov     [rsp+0F8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+s2], rax", "jmp     loc_4A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.002073732718894009, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 0", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_4A88"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [10, 0, 244, 0, 0, 15, 0, 1, 6, -1, 0.023169482846902203, ["lea     rsi, asc_1044D; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0F8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+s2], rsi", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+encountered_single_quote], al", "mov     [rsp+0F8h+orig_buffersize], rdx", "jmp     loc_4A88"], ["lea~rsi,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rsi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],al", "mov~[rsp+0],rdx", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031105990783410133, ["lea     rax, asc_1044D; \"'\"", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_4A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031233998975934455, ["lea     rax, unk_1044B", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_4A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.004069700460829493, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+backslash_escapes], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 15, -1, 0.054070660522273425, ["test    r9b, r9b", "jnz     loc_5880"], ["test~r9b,r9b", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.06360620413039766, ["cmp     [rsp+0F8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_58D0"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.05038829151732377, ["mov     eax, [rsp+0F8h+var_70]", "test    eax, eax", "jz      short loc_4CB8"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.012570404505888377, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_50A1"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 1, 1, 13, -1, 0.00902457757296467, ["xor     edx, edx", "cmp     [rsp+0F8h+orig_buffersize], 0", "jnz     loc_5897"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [2, 0, 244, 1, 0, 5, 1, 1, 19, -1, 0.003699436763952893, ["mov     edx, 1", "shl     rdx, cl", "mov     rcx, 20000002Bh", "test    rdx, rcx", "jz      short loc_5818"], ["mov~edx,0", "shl~rdx,cl", "mov~rcx,0", "test~rdx,rcx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 13, -1, 0.04740570063150708, ["lea     rdx, [i+2]", "cmp     rdx, argsize_0", "jnb     short loc_4CB8"], ["lea~rdx,[i+0]", "cmp~rdx,argsize_0", "jnb~FOO"]], [1, 0, 6, 0, 0, 7, 0, 1, 20, -1, 0.0005376344086021505, ["movzx   eax, [rsp+0F8h+var_88]", "mov     bytes, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     printable, [rsp+0F8h+pending_shell_escape_end]", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r13,[rsp+0]", "mov~printable,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 4, -1, 0.6334485407066052, ["cmp     argsize_0, i", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4AB3"], ["cmp~argsize_0,i", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 1, 12, -1, 0.012224782386072709, ["add     i, 1", "jmp     loc_4A98"], ["add~i,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.028123399897593444, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_5B0D"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 244, 0, 0, 5, 0, 1, 10, -1, 0.07368151561699948, ["lea     rax, [rsp+0F8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0F8h+mbstate.__count], 0", "mov     [rsp+0F8h+ps], rax", "jnz     short loc_56E4"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.17191500256016384, ["cmp     [rsp+0F8h+var_98], 1; jumptable 0000000000004B8E default case", "jnz     loc_5688"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 4, 2, 1, 11, -1, 0.01624530636627411, ["mov     edx, [rsp+0F8h+var_84]", "xor     eax, eax", "test    edx, edx", "jnz     loc_58DE"], ["mov~edx,[rsp+0]", "xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.10761979433350403, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_4F20; jumptable 00000000000053DE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 12, -1, 0.0006539085168117425, ["nop     dword ptr [c_0+00h]"], ["nop~[word ptr [c_0+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.04441030892643796, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_5AC8"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0014400921658986176, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 2, 0, 12, -1, 0.006706135859361665, ["mov     ebx, eax", "xor     ebp, ebp", "xor     eax, eax"], ["mov~ebx,eax", "xor~ebp,ebp", "xor~eax,eax"]], [0, 0, 244, 0, 0, 2, 1, 1, 5, -1, 0.6331925243215566, ["test    bpl, bpl", "jz      loc_5550"], ["test~bpl,bpl", "jz~FOO"]], [10, 0, 245, 0, 0, 11, 1, 0, 3, -1, 0.006259600614439324, ["mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 250, 0, 0, 8, 3, 1, 2, -1, 8.960573476702509e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 4", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_5286"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [2, 0, 246, 0, 0, 6, 2, 0, 2, -1, 1.2800819252432156e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 1", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],esi"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.15902927120669055, ["cmp     [rsp+0F8h+var_87], 0", "jnz     loc_4EB6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 17, -1, 0.003059395801331285, ["jmp     short loc_5997"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.020451442225635774, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_4BA2"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 15, -1, 0.03960360129714968, ["movzx   ebx, byte ptr [rax+rdx]", "cmp     bl, 3Eh ; '>'", "ja      loc_4CB8"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.03512971496842464, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_4CB8"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     byte ptr [r8+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_564E"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r8+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 11, 2, 0, 13, -1, 0.036904761904761905, ["mov     eax, ebp", "mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "xor     eax, 1", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "and     al, [rsp+0F8h+backslash_escapes]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     bytes, [rsp+0F8h+pending_shell_escape_end]"], ["mov~eax,ebp", "mov~rdi,m", "movzx~r11d,[rsp+0]", "xor~eax,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~al,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~bytes,[rsp+0]"]], [1, 0, 244, 0, 0, 4, 0, 1, 6, -1, 0.5573604710701485, ["cmp     [rsp+0F8h+var_E2], 0", "mov     rdi, [rsp+0F8h+arg]; s", "lea     r9, [rdi+i]", "jz      loc_53B0"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 15, -1, 0.022452636968766, ["cmp     [rsp+0F8h+var_88], 0", "jnz     short loc_57F8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.04779825908858167, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_5923"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185339, ["mov     eax, 0Dh; jumptable 00000000000053DE case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0005120327700972862, ["xor     r10d, r10d; jumptable 00000000000053DE case 39"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 2, 1, 0, 9, -1, 0.0024193548387096775, ["xor     r10d, r10d; jumptable 00000000000053DE default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.018906810035842294, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_4FD6"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.019162826420890938, ["cmp     r13, r15", "jbe     short loc_4FC7"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 4, 1, 1, 15, -1, 0.037018902543096095, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_4BCB"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 7; jumptable 0000000000004B8E case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 1, 11, 0, 1, 11, -1, 0.0, ["mov     rdi, [rsp+0F8h+arg]; s", "mov     [rsp+0F8h+buffersize], r8", "mov     byte ptr [rsp+0F8h+var_80], r11b", "mov     byte ptr [rsp+0F8h+pwc], r10b", "mov     [rsp+0F8h+pending_shell_escape_end], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+var_80]", "movzx   r10d, byte ptr [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r8, [rsp+0F8h+buffersize]", "mov     r9, [rsp+0F8h+pending_shell_escape_end]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [12, 0, 245, 0, 0, 18, 3, 1, 2, -1, 2.560163850486431e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000004971 case 3", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_52C2"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Ch; jumptable 00000000000053DE case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.020458376002730812, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax]", "jnz     short loc_4B15"], ["cmp~argsize_0,0", "lea~rbx,<TAG>", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 7, -1, 0.13144478579962451, ["mov     rax, [rsp+0F8h+quote_string_len]", "test    rax, rax", "jz      loc_53C0"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 11, -1, 0.005721966205837174, ["mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_4BA2"], ["mov~[rsp+0],bpl", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 0, 9, -1, 0.0032258064516129032, ["cmp     rax, 1", "jbe     short loc_4B15"], ["cmp~rax,0", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.001856118791602663, ["xor     r10d, r10d; jumptable 00000000000053DE case 92"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 0, 0, 21, -1, 0.02761136712749616, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_5B2B"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 20, -1, 0.027867383512544804, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_5B1C"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r8+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.0070916538658474144, ["mov     rsi, [rsp+0F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_5C78"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.028379416282642088, ["cmp     buffersize_0, r15", "jbe     short loc_5AFE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365064, ["mov     eax, 0Dh; jumptable 0000000000004B8E case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185339, ["mov     eax, 9; jumptable 00000000000053DE case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.007002048131080389, ["cmp     [rsp+0F8h+var_85], 0", "jz      loc_5538"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 1, 0, 8, 2, 1, 14, -1, 0.030325140809011778, ["mov     [rsp+0F8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     r11d, r11d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_4BCB"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],bpl", "xor~r11d,r11d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Ch; jumptable 0000000000004B8E case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 8; jumptable 0000000000004B8E case 8", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0027265745007680493, ["cmp     [rsp+0F8h+quote_string_len], 0", "jz      loc_5538"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r9, [rsp+0F8h+ps]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r9,[rsp+0]"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 8; jumptable 00000000000053DE case 8", "xor     r10d, r10d", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.020074351425157833, ["cmp     rbx, argsize_0", "ja      loc_53B0"], ["cmp~rbx,argsize_0", "ja~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.006067588325652842, ["mov     [rsp+0F8h+var_E1], al", "mov     [rsp+0F8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],al", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 6, 2, 1, 6, -1, 0.07246543778801844, ["test    r15, r15", "mov     rbp, argsize_0", "mov     argsize_0, r8", "setz    al", "and     al, [rsp+0F8h+var_88]", "jnz     loc_5C5C"], ["test~r15,r15", "mov~rbp,argsize_0", "mov~argsize_0,r8", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Bh; jumptable 0000000000004B8E case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 12, -1, 0.023655913978494623, ["add     i, 1", "mov     edx, r11d", "xor     ebp, ebp", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~edx,r11d", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     byte ptr [r8+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r8+0],0"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 7; jumptable 00000000000053DE case 7", "xor     r10d, r10d", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.44391363713944376, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_4F28; jumptable 0000000000004B8E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 3.840245775729647e-05, ["xor     r10d, r10d; jumptable 00000000000053DE cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.004214349718381987, ["xor     ebp, ebp; jumptable 0000000000004B8E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~ebp,ebp"]], [2, 0, 244, 1, 0, 4, 2, 0, 14, -1, 0.23159242191500257, ["xor     eax, 1", "add     i, 1", "and     eax, r11d", "mov     edx, eax"], ["xor~eax,0", "add~i,0", "and~eax,r11d", "mov~edx,eax"]], [1, 0, 244, 1, 0, 5, 2, 1, 22, -1, 0.027355350742447517, ["add     r15, 4", "xor     ebp, ebp", "xor     eax, eax", "mov     r12, i", "jmp     loc_4BA2"], ["add~r15,0", "xor~ebp,ebp", "xor~eax,eax", "mov~r12,i", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, -1, 0.01607782898105479, ["mov     edx, eax"], ["mov~edx,eax"]], [1, 0, 244, 0, 0, 5, 2, 1, 7, -1, 0.0630184331797235, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "movzx   edx, [rsp+0F8h+var_E1]", "xor     eax, 1", "and     dl, al", "jz      loc_5B94"], ["movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "xor~eax,0", "and~dl,al", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.014460445468509988, ["cmp     [rsp+0F8h+var_88], 0", "jz      loc_4BA0; jumptable 0000000000004B8E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 1, 244, 0, 0, 4, 1, 1, 10, -1, 0.0011133512544802848, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000053DE case 32", "mov     ebx, 20h ; ' '", "xor     r10d, r10d", "jmp     loc_4D35"], ["movzx~ebp,[rsp+0]", "mov~ebx,<STR>", "xor~r10d,r10d", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 12, -1, 0.0012800819252432156, ["mov     eax, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 1, 12, 1, 2, 10, -1, 0.0075679510155316565, ["mov     rdx, [rsp+0F8h+quote_string_len]; n", "mov     rsi, [rsp+0F8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "jnz     loc_53B0"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "jnz~FOO"]], [1, 0, 6, 0, 0, 6, 0, 0, 12, -1, 0.0018657194060419863, ["movzx   eax, [rsp+0F8h+var_88]", "mov     rbp, argsize_0", "mov     [rsp+0F8h+quoting_style], 2", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "nop     word ptr [rax+rax+00000000h]"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~[rsp+0],0", "mov~argsize_0,r8", "mov~[rsp+0],al", "nop~[ord ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.020636200716845868, ["cmp     [rsp+0F8h+var_88], 0", "jnz     loc_4D40"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 280, 1, 1, 29, 2, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0C8h", "mov     rax, [rsp+0F8h+quote_these_too]", "mov     [rsp+0F8h+arg], arg_0", "mov     [rsp+0F8h+quoting_style], r8d", "mov     [rsp+0F8h+flags], r9d", "mov     [rsp+0F8h+var_D8], rax", "mov     rax, [rsp+0F8h+left_quote]", "mov     [rsp+0F8h+quote_string_0], rax", "mov     rax, [rsp+0F8h+right_quote]", "mov     [rsp+0F8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0F8h+var_98], rax", "ja      loc_5CA0; jumptable 0000000000004971 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.05403225806451613, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_59A6"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, -1, 0.029653097798259087, ["mov     rax, [rsp+0F8h+s2]", "test    rax, rax", "jz      short loc_5BC9"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 8, -1, 0.043561187916026624, ["cmp     [rsp+0F8h+encountered_single_quote], 0", "jz      loc_5B96"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.016163167776070998, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      short loc_4D7D"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0007978110599078341, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 16, -1, 0.021210957501280082, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp", "jmp     loc_57E3"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 11, 1, 1, 14, -1, 0.002867383512544803, ["mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "xor     ebp, ebp", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     r14, [rsp+0F8h+pending_shell_escape_end]", "movzx   eax, [rsp+0F8h+backslash_escapes]", "jmp     loc_57E3"], ["mov~rdi,m", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~ebp,ebp", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r14,[rsp+0]", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 1, 0, 4, 0, 1, 17, -1, 0.006438812083973375, ["add     m, 1", "lea     rdx, [i+m]", "cmp     r14, rdx", "ja      short loc_5980"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r14,rdx", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 18, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_5994"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 244, 0, 1, 15, 2, 1, 10, -1, 0.09486687147977471, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     byte ptr [rsp+0F8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   bpl", "setz    al", "and     al, [rsp+0F8h+backslash_escapes]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,0", "setnz~bpl", "setz~al", "and~al,[rsp+0]"]], [0, 0, 244, 0, 0, 2, 1, 1, 7, -1, 0.43792285372930545, ["xor     r10d, r10d", "jmp     loc_4B70"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 9, -1, 0.0, ["cmp     [rsp+0F8h+var_E1], 0", "mov     eax, 4", "cmovz   eax, [rsp+0F8h+quoting_style]", "mov     [rsp+0F8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.10432667690732207, ["test    al, al", "jz      loc_4BA2"], ["test~al,al", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365064, ["mov     eax, 0Ah; jumptable 0000000000004B8E case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 12, -1, 0.08591909882232462, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 247, 0, 0, 1, 0, 0, 3, -1, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.006169994879672299, ["mov     rdi, m"], ["mov~rdi,m"]], [1, 0, 256, 0, 0, 2, 0, 1, 2, -1, 0.00030721966205837174, ["cmp     [rsp+0F8h+quoting_style], 0Ah; jumptable 0000000000004971 cases 8-10", "jz      short loc_51EF"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 0, 10, -1, 0.00020737327188940095, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000053DE cases 37,43-58,65-90,93,95,97-122", "xor     r10d, r10d", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~ebp,[rsp+0]", "xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 4, 2, 1, 16, -1, 0.049859190988223244, ["mov     edx, r11d", "xor     edx, 1", "and     dl, [rsp+0F8h+var_E1]", "jz      short loc_4FEC"], ["mov~edx,r11d", "xor~edx,0", "and~dl,[rsp+0]", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.018394777265745003, ["add     r15, 3", "mov     r11d, edx"], ["add~r15,0", "mov~r11d,edx"]], [0, 0, 246, 0, 0, 2, 1, 1, 4, -1, 0.0064516129032258064, ["test    buffersize_0, buffersize_0", "jnz     loc_5C8A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [0, 0, 244, 1, 0, 6, 1, 1, 13, -1, 0.14626216077828982, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0F8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0F8h+arg]", "jmp     loc_5050"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.02879800307219662, ["xor     eax, eax; jumptable 0000000000004B8E cases 37,43-58,65-90,93,95,97-122"], ["xor~eax,eax"]], [1, 0, 244, 0, 0, 6, 3, 1, 5, -1, 8.960573476702509e-05, ["mov     [rsp+0F8h+orig_buffersize], buffersize_0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r11d, r11d", "xor     edx, edx", "jmp     loc_55B0"], ["mov~[rsp+0],buffersize_0", "mov~[rsp+0],0", "xor~eax,eax", "xor~r11d,r11d", "xor~edx,edx", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 11, -1, 0.020084485407066054, ["mov     rdx, [rsp+0F8h+orig_buffersize]", "mov     buffersize_0, rdx"], ["mov~rdx,[rsp+0]", "mov~buffersize_0,rdx"]], [0, 0, 10, 1, 0, 5, 1, 1, 11, -1, 0.01651305683563748, ["movzx   ecx, byte ptr [rax]", "sub     rax, r15", "mov     rdx, r15", "test    cl, cl", "jz      short loc_5BC9"], ["movzx~ecx,<TAG>", "sub~rax,r15", "mov~rdx,r15", "test~cl,cl", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, -1, 0.019738863287250386, ["test    dl, dl", "jz      short loc_5BC9"], ["test~dl,dl", "jz~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.009946236559139785, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+118h+flags]", "mov     r8d, [rsp+118h+quoting_style]; quoting_style", "mov     rdx, [rsp+118h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 10, 0, 0, 2, 0, 0, 12, -1, 0.01330005120327701, ["cmp     buffersize_0, len", "jbe     short loc_5BDC"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.1597478238607271, ["mov     rsi, [rsp+0F8h+var_D8]", "test    rsi, rsi", "jz      short loc_4BCB"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000004971 default case"], ["call~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, -1, 0.0038466461853558626, ["cmp     buffersize_0, r15", "jbe     loc_4DB3"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_4DB3"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_4FE5"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     argsize_0", "pop     i", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~i", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [1, 0, 253, 0, 1, 9, 1, 2, 4, -1, 0.0065156169994879665, ["lea     rsi, asc_1044D; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0F8h+quote_string], rax", "lea     rax, asc_1044D; \"'\"", "cmp     rsi, rax", "jz      loc_5BEA"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jz~FOO"]], [2, 0, 244, 0, 0, 2, 0, 0, 10, -1, 0.0008829365079365064, ["mov     eax, 9; jumptable 0000000000004B8E case 9", "mov     ebx, 74h ; 't'"], ["mov~eax,0", "mov~ebx,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.01282642089093702, ["cmp     buffersize_0, r15", "jbe     short loc_4BEE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 252, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rdi, rsi; msgid", "mov     esi, [rsp+0F8h+quoting_style]; s", "call    gettext_quote", "mov     [rsp+0F8h+quote_string], rax", "jmp     loc_51EF"], ["mov~rdi,rsi", "mov~esi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]]], "func_feature": [17, 152, 176, 15, 281, 448, 49, 1104, 0.03791, 7, 41], "succs": [[39], [0, 39], [11], [2, 4], [2], [250], [260, 5], [16], [170, 7], [8], [256, 225, 195, 209, 40, 9, 223, 49, 187, 119, 216, 185, 186, 91, 200, 232, 63], [48, 15], [11, 278], [11], [11, 76], [48], [115, 37], [16, 18], [16, 227], [242, 221], [210, 19], [175], [21, 23], [21, 45], [259], [24, 145], [276], [26, 276], [42, 14], [28, 30], [28], [33], [267, 31], [270], [33, 267], [146, 44], [194, 35, 140, 141, 174, 173, 25, 143, 255], [41, 90], [125], [1, 38], [236], [43, 55], [14], [55], [130, 92], [62, 47], [1], [62], [157], [60], [181, 238], [50, 181], [50], [29, 54], [29], [72, 59], [58, 154], [56], [56, 51], [72], [147, 117], [163, 60], [80, 81], [69], [242, 68], [64, 198], [74], [137, 66], [152, 123], [78, 231], [192, 65, 98, 261, 226, 213, 108, 162, 208, 114, 20, 277, 212, 251, 220, 61, 69], [69], [73, 82], [82], [77, 87], [74], [74], [87], [175], [78, 71], [175], [80], [90], [93], [83, 93], [176, 245], [243, 85], [100], [205], [88, 95], [97, 13], [98], [129], [96, 103], [239], [94, 263], [103], [13], [106, 79], [105, 121], [99, 148], [125, 46], [101, 125], [104, 118], [118], [107, 109], [79], [109], [231], [121], [224], [147, 110], [57, 51], [242, 126], [113, 135], [241], [120, 149], [84, 116], [116], [114], [149], [67, 12], [132, 165], [122, 124], [122], [138], [18], [266], [206, 127], [138], [129], [211], [131, 180], [18], [268, 133], [177, 150], [151], [136, 151], [157], [138], [138], [138], [138], [138], [138], [138], [138], [241], [257, 147], [22, 191], [177, 155], [153, 75], [123, 211], [75], [58, 156], [177, 167], [241], [168, 171], [157], [202], [202, 159], [193, 52], [161, 247], [158, 166], [10, 187], [132], [170], [169, 178], [171], [177], [134], [219, 182], [142], [172, 253], [172], [268, 134], [243], [175], [177, 179], [128, 177], [211], [6], [248, 197], [112, 51], [86, 183], [236], [65], [162], [272, 273], [188, 190], [188], [18], [8], [52], [142], [8], [217, 199], [164, 196], [175], [217, 215], [20], [228, 222], [201, 203], [201], [], [275, 204], [160, 207], [160], [236], [236], [233, 214], [18], [8], [8], [233, 221], [217], [8], [248, 234], [241], [218, 230], [8], [12], [228], [8], [162, 70], [226], [231], [12], [175], [239], [240, 229], [235, 261], [231], [8], [248, 111], [241], [8, 235], [36, 269], [184, 244], [265, 270], [89, 239], [249, 266], [241], [6], [6], [254, 246], [245, 254], [250], [224], [266], [252, 175], [236], [260], [259], [243], [27, 102], [261], [53, 189], [53], [139, 262], [100], [175], [144], [144], [267, 270], [264, 270], [205], [32, 34], [17, 18], [], [205, 271], [205], [273], [258, 274], [258], [], [280, 102], [236], [3, 279], [3], [102]], "fname": "quotearg_buffer_restyled", "n_num": 281}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_5DC7"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_5DC7"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[4, 2, 0, 5, 4, 61, 4, 4, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r15, argsize", "sub     rsp, 28h", "test    o, o", "cmovz   rbx, rax", "call    ___errno_location", "mov     r11d, [rax]", "mov     ebp, [rbx+4]", "lea     r10, [rbx+8]", "sub     rsp, 8", "mov     r8d, [rbx]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     [rsp+60h+var_3C], r11d", "or      ebp, 1", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "push    r10; quote_these_too", "mov     r9d, ebp; flags", "mov     r13, rax", "mov     [rsp+78h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "add     rsp, 20h", "mov     rdi, rsi; n", "mov     [rsp+58h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "mov     r10, [rsp+70h+quote_these_too]", "mov     r8d, [rbx]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "mov     r12, rax", "push    r10; quote_these_too", "mov     rsi, [rsp+78h+buffersize]; buffersize", "call    quotearg_buffer_restyled", "mov     r11d, [rsp+78h+var_3C]", "mov     rax, r12", "mov     [r13+0], r11d", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "call~FOO", "mov~r11d,<TAG>", "mov~ebp,[rbx+0]", "lea~r10,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~[rsp+0],r11d", "or~ebp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "push~r10", "mov~r9d,ebp", "mov~r13,rax", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "add~rsp,<STR>", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "mov~r10,[rsp+0]", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "mov~r12,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~r11d,[rsp+0]", "mov~rax,r12", "mov~[r13+0],r11d", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [4, 4, 4, 1, 1, 0, 0, 61, 0.0, 1, 5], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_5FEF"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 0, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_6079"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_6051"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_6040"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_6094"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_611F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_6147"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_6259"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_6238"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_625E"], ["cmp~ebx,0", "jz~FOO"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, default_quoting_options.quote_these_too", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_621B"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_61CF"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 3, -1, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 12], [1, 2], [5, 13], [9, 10], [11], [8, 11], [], [10], [], []], "fname": "quotearg_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 11, 0, 0, 0, 0, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "lea     r15, default_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_63D9"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_62E5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_630D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_6419"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_63F8"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_641E"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_6391"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[], [0, 11], [0], [1], [3], [3], [1, 9], [12, 6], [4, 5], [8, 13], [2], [10, 2], [], []], "fname": "quotearg_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_6532"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_657E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6484"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6598"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_64B1"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[9, 7], [0, 8], [1], [2], [2], [3, 4], [1, 5], [9], [], [8]], "fname": "quotearg", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_66C4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_670C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_661A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6730"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_6647"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[4], [0, 4], [], [1, 2], [2], [7], [8, 5], [3], [7], [3, 6]], "fname": "quotearg_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 10, 1, 0, 6, 0, 1, 0, 0, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_6940"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_6983"], ["cmp~ebx,0", "jz~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_6979"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6915"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_685A"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_6968"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_68CA"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 16, 0, 1, 16, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_6979"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_697E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6818"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 10, 134, 0.05127, 5, 14], "succs": [[12, 14], [0, 13], [10, 15], [8, 11], [3], [3], [1, 4], [11], [9, 7], [7], [6, 15], [16, 17], [5], [], [5], [], [], []], "fname": "quotearg_n_style", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 6, 1, 1, 0, 0, 0.09558823529411764, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_6BAD"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, argsize; argsize", "add     rbx, r12", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6B43"], ["shl~n,0", "sub~rsp,0", "mov~rcx,argsize", "add~rbx,r12", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_6AFC"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_6B70"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, ebp", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6A50"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     r12d, cs:nslots", "mov     r8d, [rsp+88h+flags]", "jl      loc_6B98"], ["cmp~r12d,<TAG>", "mov~r8d,<TAG>", "jl~FOO"]], [1, 0, 16, 0, 1, 18, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  r12, edi", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+flags], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "test    r12d, r12d", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_84], eax", "js      loc_6BA8"], ["pxor~xmm0,xmm0", "movsxd~r12,edi", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],esi", "mov~<TAG>,esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "test~r12d,r12d", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_6BA8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     r12d, 7FFFFFFFh", "jz      loc_6BB2"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_6A8F"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 2, 18, 22, 0, 137, 0.05127, 5, 14], "succs": [[8, 9], [0, 3], [0], [16, 2], [6], [4, 7], [1], [6], [], [], [14, 15], [17, 10], [17, 11], [], [13, 5], [1], [2], []], "fname": "quotearg_n_style_mem", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 10, 0, 0, 3, 0, 1, 0, 0, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6D80"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 17, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r12, arg", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+s], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+s]", "test    eax, eax", "jg      loc_6DB0"], ["pxor~xmm0,xmm0", "mov~r12,arg", "mov~[rsp+0],edi", "mov~[rsp+0],edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,[rsp+0]", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_6DC6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6D58"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,0", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_6CA4"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6C5D"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_6D0D"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_6DC1"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [10, 8, 18, 4, 15, 18, 16, 126, 0.05458, 5, 11], "succs": [[13, 7], [0, 5], [1, 3], [], [9, 10], [4], [4], [6], [11], [8, 11], [12, 14], [10], [], [6], []], "fname": "quotearg_style", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 1, 3, 3, 2, 18, 0, 2, 0, 0, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_6F1D"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 12, 0, 1, 19, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+flags], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+flags]", "mov     [rsp+88h+var_84], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      loc_6FC0"], ["pxor~xmm0,xmm0", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],edi", "mov~<TAG>,edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_6FD5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_6E71"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_6F90"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_6F64"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,argsize", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_6EB7"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_6FD0"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 8, 18, 5, 15, 18, 0, 129, 0.05458, 5, 11], "succs": [[11], [0, 2], [0], [9, 6], [3, 14], [13], [8, 5], [1, 11], [13], [7], [], [10, 12], [], [7], []], "fname": "quotearg_style_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 6, 1, 1, 0, 0, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], eax", "mov     rax, r12", "jnz     short loc_71DE"], ["mov~eax,[rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],eax", "mov~rax,r12", "jnz~FOO"]], [2, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+options.flags]", "mov     r11, [rbx]", "sub     rsp, 8", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbp+8]", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdi, r12; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_7188"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r12,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r12", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbp, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    rbp; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbp,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbp", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_7143"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_71B8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 43, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     ecx, edx", "push    rbp", "push    rbx", "and     ecx, 1Fh", "mov     r14, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbp, [rsp+88h+options]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+88h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     argsize, [rbp+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+18h], xmm0", "mov     edx, [rsi]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, edx", "mov     [rsi], eax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_70D2"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~ecx,edx", "push~rbp", "push~rbx", "and~ecx,0", "mov~r14,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbp,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~argsize,[rbp+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,edx", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_70A5"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 133, 0.075, 9, 12], "succs": [[10, 11], [0, 3], [0], [2, 4], [2], [8, 9], [1, 5], [1], [7], [7], [], []], "fname": "quotearg_char_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r15, rax", "mov     [r12], rsi", "jz      short loc_7354"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r15,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "mov     r11, [r12]", "sub     rsp, 8", "mov     r15, [r12+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbx+8]", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r15; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_739E"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r15,[r12+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbx+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r15", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     arg", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~arg", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], r14d", "mov     rax, r15", "jnz     short loc_73EE"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],r14d", "mov~rax,r15", "jnz~FOO"]], [3, 1, 11, 2, 1, 41, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     ecx, esi", "push    r13", "push    r12", "and     ecx, 1Fh", "push    rbp", "push    rbx", "mov     rbp, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbx, [rsp+88h+quoting_style]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+right_quote], rax", "mov     eax, esi", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     rdx, [rbx+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "mov     esi, [rdx]", "mov     eax, esi", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, esi", "mov     [rdx], eax", "call    ___errno_location", "mov     r13, rax", "mov     r14d, [rax]", "mov     eax, cs:nslots", "mov     r12, cs:slotvec_0", "test    eax, eax", "jg      short loc_72DC"], ["push~r15", "push~r14", "mov~ecx,esi", "push~r13", "push~r12", "and~ecx,0", "push~rbp", "push~rbx", "mov~rbp,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,esi", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~rdx,[rbx+0]", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,esi", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~r14d,<TAG>", "mov~eax,<TAG>", "mov~r12,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, r12; p", "mov     esi, 10h; n", "call    xrealloc", "mov     r12, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r12", "mov~esi,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     r12, rax", "jz      loc_73C8"], ["lea~rax,<TAG>", "cmp~r12,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r12, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_72AF"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r12,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r12; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r12", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r15; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r15", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbx, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r12+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    rbx; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r15, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbx,0", "call~FOO", "sub~rsp,0", "mov~[r12+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbx", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 130, 0.075, 9, 12], "succs": [[9, 10], [0, 3], [], [2, 11], [1, 6], [8], [5, 7], [8], [1], [10], [3], []], "fname": "quotearg_char", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 1, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_75EE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [1, 1, 11, 1, 1, 32, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_74D7"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_75C8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_74AA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [3, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r14; buffer", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_759B"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,r14", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_7551"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]]], "func_feature": [9, 8, 15, 2, 12, 15, 2, 122, 0.075, 9, 11], "succs": [[], [0, 8], [4, 6], [7], [3, 5], [7], [1, 11], [6], [], [1], [9], [9, 10]], "fname": "quotearg_colon", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_7754"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_779A"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_77EE"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 1, 11, 1, 1, 34, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_76DD"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_77C8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_76B0"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]]], "func_feature": [9, 8, 15, 3, 12, 15, 0, 125, 0.075, 9, 11], "succs": [[4, 5], [0, 3], [], [9, 2], [3], [4], [8, 1], [10], [11, 7], [], [1], [10]], "fname": "quotearg_colon_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 1, 17, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_7A21"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 0, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_7A26"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_7A2B"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_78C0"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_79E8"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 0, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_7A10"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [1, 0, 16, 0, 1, 17, 1, 2, 0, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+options.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+options.flags], 0", "movups  xmmword ptr [rsp+88h+options.left_quote], xmm0", "movdqa  xmm0, cs:xmmword_10910", "movups  xmmword ptr [rsp+88h+options.quote_these_too], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+options.quote_these_too+10h], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_7A21"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 0, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+options]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_79BD"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_7902"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 0, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+options.flags]", "mov     rdx, [rsp+88h+options.right_quote]", "mov     r8d, [rsp+88h+options.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+options.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_7972"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]]], "func_feature": [11, 8, 21, 1, 18, 22, 3, 135, 0.05127, 6, 14], "succs": [[16, 9], [], [1, 7], [], [3, 6], [12], [17, 5], [], [11, 4], [8, 16], [2, 14], [10], [10], [15], [13, 15], [2], [], [12]], "fname": "quotearg_n_style_colon", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 1, 18, 1, 0, 21, 2, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote_0, left_quote_0", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_7C73"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote_0,left_quote_0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [4, 1, 6, 4, 1, 23, 1, 2, 0, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+quoting_style+4]", "shl     n, 4", "sub     rsp, 8", "add     r15, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     r11, [r15]", "mov     rbp, [r15+8]", "or      r9d, 1; flags", "mov     dword ptr [rsp+90h+left_quote], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    rsi; left_quote", "mov     rdi, rbp; buffer", "mov     rsi, r11; buffersize", "lea     r14, [rsp+0A0h+quoting_style]", "lea     rax, [r14+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_7C14"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~r15,r14", "mov~rcx,0", "mov~r11,<TAG>", "mov~rbp,[r15+0]", "or~r9d,0", "mov~[word ptr [rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~rsi", "mov~rdi,rbp", "mov~rsi,r11", "lea~r14,[rsp+0]", "lea~rax,[r14+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_7B54"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 0, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r14; s", "shl     rdx, 4; n", "call    _memset", "mov     rdx, [rsp+88h+var_48]", "mov     rsi, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, ebp"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r14", "shl~rdx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [r15], rsi", "jz      short loc_7BCA"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.07189542483660132, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     r14, rax", "jz      loc_7C40"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~r14,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.06535947712418301, ["cmp     r15d, 7FFFFFFFh", "jz      loc_7C7D"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 0, -1, 0.09150326797385622, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbx], r13d", "mov     rax, rbp", "jnz     short loc_7C78"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,r13d", "mov~rax,rbp", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r14, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r15+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r14; quote_these_too", "mov     r9d, dword ptr [rsp+0A8h+left_quote]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r14,0", "call~FOO", "sub~rsp,0", "mov~[r15+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r14", "mov~r9d,[word ptr [rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 16, 0, 1, 12, 1, 2, 0, 3, 0.09803921568627451, ["movsxd  r15, edi", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote_0", "mov     [rsp+88h+left_quote], left_quote_0", "mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "test    r15d, r15d", "mov     rbx, rax", "mov     r13d, [rax]", "mov     r14, cs:slotvec_0", "js      loc_7C73"], ["movsxd~r15,edi", "mov~r12,arg", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "test~r15d,r15d", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~r14,<TAG>", "js~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 0, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_7C73"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 0, 2, 0.13725490196078433, ["cmp     r15d, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "mov     rsi, [rsp+88h+left_quote]", "jl      loc_7C68"], ["cmp~r15d,<TAG>", "mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "jl~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r14, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7B1F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r14,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.032679738562091505, ["mov     rdi, r14; p", "call    xrealloc", "mov     r14, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r14", "call~FOO", "mov~r14,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [11, 8, 22, 4, 19, 24, 0, 139, 0.05538, 9, 14], "succs": [[11, 15], [8, 5], [1], [1], [9], [9, 4], [13, 14], [18, 6], [16, 17], [8], [12, 15], [10, 15], [2, 7], [3], [3], [], [], [], []], "fname": "quotearg_n_custom", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[3, 1, 6, 4, 1, 23, 1, 2, 0, 0, 0.19607843137254902, ["mov     r9d, [rsp+88h+o.flags]", "shl     n, 4", "sub     rsp, 8", "add     rbx, rbp", "mov     rcx, argsize; argsize", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    r12; left_quote", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+o]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_7E6C"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~rbx,rbp", "mov~rcx,argsize", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "or~r9d,0", "mov~[rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~r12", "mov~rsi,r11", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_7DB2"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r12, [rsp+88h+o.left_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d", "mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "mov~r8d,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_7E26"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_7EA0"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     ebp, 7FFFFFFFh", "jz      loc_7EDD"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 6, -1, 0.09150326797385622, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_7ED8"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 2, 0.13725490196078433, ["cmp     ebp, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "jl      loc_7EC8"], ["cmp~ebp,<TAG>", "mov~rdx,<TAG>", "jl~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+o.style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+o.right_quote], rax", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "jz      loc_7ED3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 16, 0, 1, 14, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  rbp, edi", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.left_quote], left_quote", "mov     [rsp+88h+o.right_quote], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "js      loc_7ED3"], ["movsxd~rbp,edi", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_7ED3"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7D7B"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [11, 8, 22, 2, 19, 24, 0, 141, 0.05538, 9, 14], "succs": [[4, 7], [0], [0], [8], [8, 3], [13, 14], [17, 5], [16, 18], [7], [1, 6], [12, 15], [9, 15], [11, 15], [2], [2], [], [], [], []], "fname": "quotearg_n_custom_mem", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 8, 0, 1, 8, 1, 2, 0, 0, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_7FBC"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_80E0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, r14; buffer", "push    r15; left_quote", "mov     rsi, r11; buffersize", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_80B2"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,r14", "push~r15", "mov~rsi,r11", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 11, 0, 1, 14, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r15, left_quote", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "test    eax, eax", "jg      short loc_7FF8"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r15,left_quote", "mov~r12,arg", "mov~[rsp+0],left_quote", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_8068"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_8106"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_810B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_810B"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [10, 8, 18, 4, 15, 19, 0, 129, 0.05897, 9, 11], "succs": [[4], [0, 13], [8, 6], [1, 2], [2], [9], [9, 5], [], [14, 7], [8], [], [10, 12], [10, 3], [4], []], "fname": "quotearg_custom", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 8, 0, 1, 8, 1, 2, 0, 0, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_81E2"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_8300"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 11, 0, 1, 16, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_821E"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [2, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, rbp; buffer", "push    r12; left_quote", "mov     rsi, r11; buffersize", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_82D1"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,rbp", "push~r12", "mov~rsi,r11", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_828B"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_8326"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_832B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_832B"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [10, 8, 18, 5, 15, 19, 0, 132, 0.05897, 9, 11], "succs": [[4], [0, 13], [1, 3], [6, 7], [3], [8], [8, 5], [12, 14], [7], [], [9, 11], [9, 2], [], [4], []], "fname": "quotearg_custom_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 1, 1, 2, 2, 17, 0, 2, 0, 0, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_8451"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_83A5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "lea     r15, quote_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_8499"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_83CD"], ["cmp~ebp,<TAG>", "jl~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_84D9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_84B8"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_84DE"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[6], [0, 2], [0], [7], [3], [3], [], [1, 6], [11, 7], [8, 13], [4, 5], [10, 12], [], []], "fname": "quote_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 9, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_8577"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_85F4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 4, 2, 1, 22, 1, 2, 0, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_863C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 0, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 0, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_8660"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 0, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_854A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 0, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 2, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 0, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[2, 4], [9, 7], [8, 1], [6], [3, 5], [6], [2], [9], [], [8]], "fname": "quote_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_86FF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_8727"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_8839"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_8818"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_883E"], ["cmp~ebx,0", "jz~FOO"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, quote_quoting_options.quote_these_too", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_87FB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_87AF"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 3, -1, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 2, 108, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 12], [1, 2], [5, 13], [9, 10], [11], [8, 11], [], [10], [], []], "fname": "quote_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_8952"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_899E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_88A4"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_89B8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_88D1"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 0, 10, 13, 2, 99, 0.08194, 9, 10], "succs": [[9, 7], [0, 8], [1], [2], [2], [3, 4], [1, 5], [9], [], [8]], "fname": "quote", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["add     rsp, 0A0h", "pop     root_d_i", "retn"], ["add~rsp,0", "pop~root_d_i", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_8A4C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 1, 2, 0.07500000000000001, ["movdqa  xmm0, xmmword ptr [rsp+0A8h+statbuf.st_dev]", "mov     rax, root_d_i", "shufpd  xmm0, xmm0, 1", "movups  xmmword ptr [root_d_i], xmm0"], ["movdqa~xmm0,<TAG>", "mov~rax,root_d_i", "shufpd~xmm0,xmm0,0", "movups~<TAG>,xmm0"]], [2, 0, 5, 1, 1, 12, 2, 2, 0, 3, 0.0, ["push    rbx", "lea     rsi, aLibs+6; filename", "mov     rbx, root_d_i", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "test    eax, eax", "jnz     short loc_8A48"], ["push~rbx", "lea~rsi,<TAG>", "mov~rbx,root_d_i", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_8A26"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 5, 1, 6, 6, 1, 25, 0.075, 2, 2], "succs": [[], [0, 5], [1], [2, 4], [1], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 2, 1, 1, 16, 1, 1, 0, 0, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000008B04 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_10C04", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_8B54"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000008B04 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_8D16"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000008B04 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 1, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_8E30; jumptable 0000000000008B04 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000008B04 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_8C02"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000008B04 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000008B04 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000008B04 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000008B04 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000008B04 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000008B04 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_8DB3"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8A9C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_8B98"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000008B04 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 0, 275, 0.01905, 16, 13], "succs": [[2], [0, 5, 6, 9, 10, 13, 14, 15, 16, 19], [19], [2], [], [4], [4], [8, 1], [3], [3], [20], [], [11, 7], [11], [11], [11], [20], [7], [17, 12], [], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 2, 1, 1, 16, 1, 1, 0, 0, 0.008893280632411066, ["mov     r10, [authors+38h]; jumptable 0000000000008F3C case 8", "mov     r9, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     [rsp+58h+var_48], r10", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~[rsp+0],r10", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 4, -1, 0.1768774703557312, ["lea     rdx, off_10C2C", "movsxd  rax, dword ptr [rdx+rbx*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [3, 0, 1, 1, 1, 18, 2, 2, 5, -1, 0.001976284584980237, ["mov     rbx, [authors+0]; jumptable 0000000000008F3C case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 6, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbp", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 5, -1, 0.007905138339920948, ["mov     r9, [authors+10h]; jumptable 0000000000008F3C case 7", "mov     r14, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     edx, 5; category", "mov     r15, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_91EB"], ["mov~r9,[authors+0]", "mov~r14,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "mov~r15,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 5, -1, 0.007905138339920948, ["mov     r8, [authors+8]; jumptable 0000000000008F3C case 6", "mov     r13, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     edx, 5; category", "mov     r14, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    r13", "push    rbx", "push    r15"], ["mov~r8,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "xor~edi,edi", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~r13", "push~rbx", "push~r15"]], [2, 0, 23, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "mov     rbp, authors", "sub     rsp, 28h", "cmp     qword ptr [authors], 0", "jz      short loc_8EAC"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "mov~rbp,authors", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 5, -1, 0.001976284584980237, ["mov     r14, [authors+10h]; jumptable 0000000000008F3C case 3", "mov     r13, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r14", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r14", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 5, 0.001976284584980237, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [5, 0, 17, 0, 4, 20, 3, 5, 3, 1, 0.19169960474308298, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbx, 9; switch 10 cases", "ja      loc_9270; jumptable 0000000000008F3C default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbx,0", "ja~FOO"]], [1, 0, 18, 0, 1, 8, 1, 2, 2, 2, 0.06719367588932806, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     stream, r12", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8ED4"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~stream,r12", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 8, 1, 1, 2, 2, 0.07509881422924901, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     stream, r12", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~stream,r12", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [2, 0, 22, 1, 0, 3, 0, 1, 2, 4, 0.04150197628458498, ["add     n_authors, 1", "cmp     qword ptr [rbp+n_authors*8+0], 0", "jnz     short loc_8EA0"], ["add~n_authors,0", "cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 1, 15, 1, 2, 5, -1, 0.007905138339920948, ["mov     rbx, [authors+20h]; jumptable 0000000000008F3C case 5", "mov     r15, [authors+18h]", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     edx, 5; category", "mov     authors, [authors+0]", "xor     edi, edi; domainname", "call    _dcgettext", "push    rbx", "mov     r9, r14", "push    r15", "mov     r8, r13", "mov     rcx, rbp", "jmp     short loc_9152"], ["mov~rbx,[authors+0]", "mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~edx,0", "mov~authors,[authors+0]", "xor~edi,edi", "call~FOO", "push~rbx", "mov~r9,r14", "push~r15", "mov~r8,r13", "mov~rcx,rbp", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 5, -1, 0.001976284584980237, ["mov     r11, [authors+40h]; jumptable 0000000000008F3C case 9", "mov     r10, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     authors, [authors+0]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "lea~rsi,<TAG>", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~authors,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8"]], [2, 0, 1, 1, 1, 15, 1, 1, 6, -1, 0.007905138339920948, ["mov     r10, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r10", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_58]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r10,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r10", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 5, -1, 0.014822134387351778, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r11, [rsp+58h+var_40]", "push    r11", "jmp     loc_8F85"], ["xor~edi,edi", "call~FOO", "mov~r11,[rsp+0]", "push~r11", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 4, 0, 0.02075098814229249, ["mov     r11, [authors+40h]; jumptable 0000000000008F3C default case", "mov     r10, [authors+38h]", "mov     edx, 5", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "jmp     loc_9033"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "mov~edx,0", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000008F3C case 0", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 0, 1, 1, 1, 20, 2, 2, 5, -1, 0.001976284584980237, ["mov     r13, [authors+8]; jumptable 0000000000008F3C case 2", "mov     rbx, [authors+0]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 3, 0.11857707509881422, ["test    command_name, command_name", "jz      loc_8FC8"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 1, 1, 1, 13, 1, 1, 5, -1, 0.007905138339920948, ["mov     r15, [authors+18h]; jumptable 0000000000008F3C case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "mov     r8, r13", "push    r15", "mov     rcx, rbx"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "mov~r8,r13", "push~r15", "mov~rcx,rbx"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 0, 1, 1, 15, 1, 1, 6, -1, 0.0, ["mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 22, 31, 4, 24, 34, 0, 287, 0.03187, 16, 14], "succs": [[15], [0, 2, 4, 5, 7, 13, 14, 18, 19, 21], [22], [], [3], [3], [8, 20], [22], [12], [17, 1], [9], [9, 22], [20, 12], [23], [16], [18], [15], [16], [], [22], [10, 11], [23], [], []], "fname": "version_etc_ar", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 41, 0, 0, 6, 1, 1, 0, 0, 0.015829941203075532, ["lea     r10d, [rax+28h]", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab+20h], r9", "jz      short loc_94E0"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 0, 8, 7, 0.014699231117141566, ["cmp     r9d, 2Fh ; '/'", "jbe     short loc_94F0"], ["cmp~r9d,0", "jbe~FOO"]], [1, 0, 41, 1, 0, 7, 1, 1, 4, 6, 0.04794210764360018, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+18h], rdi", "jnz     short loc_94BF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 44, 1, 0, 7, 1, 1, 3, 7, 0.0407055630936228, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+10h], rdi", "jnz     short loc_946F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 7, 7, 0.006105834464043419, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, -1, 0.01826096788783356, ["mov     rax, [rsp+0B8h+var_40]; jumptable 00000000000093A2 case 0", "xor     rax, fs:28h", "jnz     loc_99B1"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 20, 1, 0, 4, 0, 1, 6, -1, 0.1824966078697422, ["lea     rdx, off_10C54", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 1, 3, 1, 1, 8, 1, 2, 8, -1, 0.0013568521031207597, ["mov     rcx, [rsp+0D8h+var_B8]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_9678; jumptable 00000000000093A2 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 8, -1, 0.0013568521031207597, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_9678; jumptable 00000000000093A2 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 8, -1, 0.0027137042062415195, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+0E8h+var_A8]", "mov     rdi, stream", "mov     r8, [rsp+0E8h+var_B0]", "mov     rcx, [rsp+0E8h+var_B8]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 27, 0, 0, 1, 0, 0, 5, -1, 0.013794663048394391, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 39, 0, 0, 2, 0, 0, 10, 6, 0.009724106739032113, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_9540"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 49, 0, 0, 8, 1, 1, 1, 9, 0.007914970601537766, ["mov     rax, [authors+8]", "mov     stream, rax", "lea     rax, [rax+8]", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab], rdi", "jnz     loc_93CE"], ["mov~rax,[authors+0]", "mov~stream,rax", "lea~rax,[rax+0]", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 1, 67, 1, 0, 14, 1, 0, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 88h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "jbe     loc_93A4"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 11, 5, 0.0024875621890547263, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [2, 0, 4, 1, 1, 10, 1, 2, 7, -1, 0.005314337403889643, ["lea     rsi, aWrittenBySSSAn; jumptable 00000000000093A2 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "sub     rsp, 8", "jmp     short loc_97EE"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 10, 1, 1, 7, -1, 0.005314337403889643, ["mov     r15, [rsp+0B8h+authtab+20h]; jumptable 00000000000093A2 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "push    r15"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15"]], [5, 0, 22, 0, 4, 20, 3, 5, 5, -1, 0.21393034825870647, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_9960; jumptable 00000000000093A2 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 23, 0, 1, 8, 1, 2, 4, -1, 0.10696517412935323, ["mov     authors, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_933A"], ["mov~authors,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 23, 0, 1, 8, 1, 1, 4, -1, 0.11668928086838534, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 26, 0, 0, 1, 1, 0, 2, -1, 0.017639077340569877, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 65, 0, 0, 8, 1, 1, 1, 11, 0.0067842605156037995, ["mov     rdi, [authors+10h]", "lea     r10d, [rax+8]", "mov     r9d, eax", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab], r9", "jz      loc_9310"], ["mov~rdi,[authors+0]", "lea~r10d,[rax+0]", "mov~r9d,eax", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 10, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySSAnd; jumptable 00000000000093A2 case 3", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_99B1"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 9, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySAndS; jumptable 00000000000093A2 case 2", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_99B1"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenByS; jumptable 00000000000093A2 case 1", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_99B1"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 59, 0, 0, 6, 1, 1, 3, 10, 0.01594301221166893, ["lea     r11d, [rax+10h]", "mov     [authors], r11d", "mov     r9, [rdi+r10]", "test    r9, r9", "mov     [rsp+0B8h+authtab+8], r9", "jz      short loc_93F0"], ["lea~r11d,[rax+0]", "mov~<TAG>,r11d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 2, 10, 0.011872455902306648, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_9400"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 3, -1, 0.2233152419719584, ["test    command_name, command_name", "jz      loc_95C5"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 4, -1, 0.02939846223428313, ["mov     ebp, 1", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, -1, 0.02939846223428313, ["mov     ebp, 2", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 6, -1, 0.02939846223428313, ["mov     ebp, 3", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.02939846223428313, ["mov     ebp, 4", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.023518769787426504, ["mov     ebp, 5", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.017639077340569877, ["mov     ebp, 6", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.0030529172320217096, ["mov     ebp, 7", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 10, 0, 0.0002261420171867933, ["mov     ebp, 8", "jmp     loc_9312"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 0, 4, 9, 0.015829941203075532, ["cmp     r11d, 2Fh ; '/'", "jbe     short loc_9450"], ["cmp~r11d,0", "jbe~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 5, 8, 0.007462686567164179, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 30, 0, 0, 6, 1, 1, 8, 2, 0.022614201718679332, ["lea     rdi, [rax+10h]", "mov     [authors+8], rdi", "mov     rdi, [rax+8]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+38h], rdi", "jz      loc_99C0"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 88h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 35, 1, 0, 6, 1, 1, 11, 5, 0.011080958842152872, ["add     eax, 30h ; '0'", "mov     [authors], eax", "mov     rax, [rdi+r10]", "test    rax, rax", "mov     [rsp+0B8h+authtab+28h], rax", "jz      short loc_9530"], ["add~eax,0", "mov~<TAG>,eax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, -1, 0.009724106739032113, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 35, 1, 0, 7, 1, 1, 6, 4, 0.04590682948891904, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+28h], rdi", "jnz     short loc_9558"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 38, 1, 0, 7, 1, 1, 5, 5, 0.050203527815468114, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+20h], rdi", "jnz     short loc_950F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 6, -1, 0.015603799185888738, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 00000000000093A2 default case", "mov     r9, [rsp+0B8h+authtab+10h]", "mov     edx, 5", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     [rsp+0B8h+var_A0], r10", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "jmp     loc_963C"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 1, 1, 1, 0, 14, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 7, -1, 0.007010402532790593, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+0B8h+var_A0]", "push    r10"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10"]], [1, 0, 5, 0, 0, 15, 0, 0, 7, -1, 0.0002261420171867933, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 00000000000093A2 case 9", "mov     r9, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A0], r10", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [0, 0, 47, 0, 0, 6, 1, 1, 7, 8, 0.018995929443690638, ["lea     r9d, [rax+20h]", "mov     [authors], r9d", "mov     r10, [rdi+r10]", "test    r10, r10", "mov     [rsp+0B8h+authtab+18h], r10", "jz      short loc_9490"], ["lea~r9d,[rax+0]", "mov~<TAG>,r9d", "mov~r10,<TAG>", "test~r10,r10", "mov~[rsp+0],r10", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 0, 6, 8, 0.016734509271822705, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_94A0"], ["cmp~r10d,0", "jbe~FOO"]], [2, 0, 4, 1, 1, 18, 1, 2, 7, -1, 0.005314337403889643, ["mov     rcx, [rsp+0B8h+authtab]; jumptable 00000000000093A2 case 6", "mov     r13, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14", "jmp     short loc_9746"], ["mov~rcx,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14", "jmp~FOO"]], [2, 0, 25, 1, 0, 8, 2, 1, 10, -1, 0.008480325644504749, ["lea     rdi, [rax+20h]", "xor     ebp, ebp", "mov     [authors+8], rdi", "cmp     qword ptr [rax+18h], 0", "setnz   bpl", "add     rbp, 9", "test    command_name, command_name", "jnz     loc_931B"], ["lea~rdi,[rax+0]", "xor~ebp,ebp", "mov~[authors+0],rdi", "cmp~[word ptr [rax+0],0", "setnz~bpl", "add~rbp,0", "test~command_name,command_name", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 4, -1, 0.013116236996834011, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.004975124378109453, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 32, 0, 0, 6, 1, 1, 7, 3, 0.04432383536861149, ["lea     rdi, [rax+8]", "mov     [authors+8], rdi", "mov     rdi, [rax]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+30h], rdi", "jz      loc_99B6"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 47, 1, 0, 7, 1, 1, 2, 8, 0.02838082315694256, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+8], rdi", "jnz     short loc_941F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 4, 0, 1, 19, 1, 1, 7, -1, 0.005314337403889643, ["mov     r8, [rsp+0B8h+authtab+8]; jumptable 00000000000093A2 case 7", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "push    r12", "push    rbp", "mov     r9, r13", "push    r15", "push    r14", "mov     r8, [rsp+0D8h+var_B0]"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "push~rbp", "mov~r9,r13", "push~r15", "push~r14", "mov~r8,[rsp+0]"]], [0, 0, 53, 0, 0, 6, 1, 1, 5, 9, 0.018995929443690638, ["lea     r10d, [rax+18h]", "mov     [authors], r10d", "mov     r9, [rdi+r11]", "test    r9, r9", "mov     [rsp+0B8h+authtab+10h], r9", "jz      short loc_9440"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 3, 9, 0.008819538670284939, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 33, 0, 0, 1, 0, 0, 12, 4, 0.003165988240615106, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 28, 0, 0, 6, 1, 1, 9, 1, 0.014586160108548168, ["lea     rdi, [rax+18h]", "mov     [authors+8], rdi", "mov     rdi, [rax+10h]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+40h], rdi", "jz      loc_99CA"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [2, 0, 4, 1, 1, 17, 1, 2, 7, -1, 0.005427408412483039, ["mov     r9, [rsp+0B8h+authtab+10h]; jumptable 00000000000093A2 case 8", "mov     r8, [rsp+0B8h+authtab+8]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "jmp     loc_964A"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 6, -1, 0.014699231117141566, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 1, 1, 1, 0, 13, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     rcx, rbp", "mov     rdi, stream", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~rcx,rbp", "mov~rdi,stream", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 1, 1, 1, 0, 15, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 3, -1, 0.012550881953867029, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [19, 44, 60, 5, 68, 103, 0, 425, 0.02504, 17, 18], "succs": [[32, 11], [0, 54], [10, 44], [2, 53], [2], [40, 22], [16, 5, 15, 48, 51, 57, 23, 24, 25, 62], [5], [5], [5], [31], [41, 14], [56, 20], [12, 21], [43], [8], [8], [45, 6], [17], [17, 67], [28], [27, 20], [], [65, 22], [46, 22], [64, 22], [37, 29], [26, 59], [18, 19], [28], [28], [28], [28], [28], [28], [28], [28], [58, 38], [3], [35, 61], [], [33, 60], [33], [42, 55], [43, 63], [47], [67], [9], [47], [1, 31], [49, 4], [7], [18, 19], [30], [44], [34, 39], [66, 3], [7], [50, 30], [56], [55], [52, 36], [9], [32], [67], [67], [29], []], "fname": "version_etc_va", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 16, 1, 0, 4, 0, 1, 0, 0, 0.21865079365079365, ["lea     rdx, off_10C7C", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [5, 0, 18, 0, 4, 20, 3, 5, 4, -1, 0.2571428571428571, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_9F40; jumptable 0000000000009C00 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [2, 0, 22, 1, 0, 6, 1, 0, 9, -1, 0.00873015873015873, ["xor     ebp, ebp", "cmp     qword ptr [rdi+18h], 0", "lea     rax, [rsp+108h+arg_40]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "setnz   bpl", "add     rbp, 9"], ["xor~ebp,ebp", "cmp~[word ptr [rdi+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "setnz~bpl", "add~rbp,0"]], [0, 0, 24, 0, 0, 6, 1, 1, 8, -1, 0.012698412698412698, ["lea     rax, [rsp+108h+arg_38]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+10h]", "test    rax, rax", "mov     [rsp+108h+var_88], rax", "jz      loc_9FB9"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 2, 6, 0.024603174603174603, ["mov     rax, [rsp+108h+arg_0]", "lea     rdi, [rsp+108h+arg_8]", "mov     ebp, 2", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_B8], rax", "jz      loc_9B70"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 34, 0, 0, 5, 1, 1, 1, 7, 0.009523809523809525, ["mov     rax, [rdi+28h]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "test    rax, rax", "mov     [rsp+108h+var_C0], rax", "jz      loc_9FA0"], ["mov~rax,[rdi+0]", "mov~[rsp+0],0", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 6, 2, 0.02857142857142857, ["lea     rax, [rsp+108h+arg_28]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi]", "test    rax, rax", "mov     [rsp+108h+var_98], rax", "jz      loc_9FAF"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 29, 0, 0, 7, 1, 1, 5, 3, 0.027777777777777776, ["mov     rax, [rax]", "lea     rdi, [rsp+108h+arg_20]", "mov     ebp, 5", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_A0], rax", "jz      short loc_9B70"], ["mov~rax,<TAG>", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 3, 0, 2, 14, 2, 3, 6, -1, 0.0, ["mov     r12, [rsp+108h+var_C0]; jumptable 0000000000009C00 case 2", "mov     rbp, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_9C83; jumptable 0000000000009C00 case 0"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 1, 3, -1, 0.12063492063492064, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, -1, 0.25, ["test    command_name, command_name", "jz      loc_9CB0"], ["test~command_name,command_name", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, -1, 0.05396825396825397, ["mov     rax, [rsp+108h+var_70]; jumptable 0000000000009C00 case 0", "xor     rax, fs:28h", "jnz     loc_9FAA"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 2, 12, 2, 3, 6, -1, 0.0, ["mov     rbp, [rsp+108h+var_C8]; jumptable 0000000000009C00 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_9C83; jumptable 0000000000009C00 case 0"], ["mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 2, 16, 2, 3, 6, -1, 0.0, ["mov     r13, [rsp+108h+var_B8]; jumptable 0000000000009C00 case 3", "mov     r12, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbp, [rsp+108h+var_C8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r9, r13", "mov     rdx, rax", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_9C83; jumptable 0000000000009C00 case 0"], ["mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "lea~rsi,<TAG>", "mov~rbp,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r9,r13", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 7, -1, 0.004761904761904762, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_9C83; jumptable 0000000000009C00 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 7, -1, 0.004761904761904762, ["mov     rcx, [rsp+128h+var_108]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_9C83; jumptable 0000000000009C00 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 7, -1, 0.009523809523809525, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+138h+var_F8]", "mov     rdi, stream", "mov     r8, [rsp+138h+var_100]", "mov     rcx, [rsp+138h+var_108]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, -1, 0.01746031746031746, ["xor     ebp, ebp", "jmp     loc_9B70"], ["xor~ebp,ebp", "jmp~FOO"]], [2, 0, 36, 1, 0, 23, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_70], rax", "xor     eax, eax", "lea     rax, [rsp+108h+arg_0]", "mov     [rsp+108h+var_48], r8", "mov     [rsp+108h+var_40], r9", "mov     [rsp+108h+authors.gp_offset], 28h ; '('", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_68]", "mov     [rsp+108h+authors.reg_save_area], rax", "mov     stream, rax", "mov     rax, [rax+20h]", "test    rax, rax", "mov     [rsp+108h+var_C8], rax", "jz      loc_9F98"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~stream,rax", "mov~rax,[rax+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 15, 0, 0, 6, -1, 0.0007936507936507937, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000009C00 case 9", "mov     r9, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F0], r10", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, -1, 0.00873015873015873, ["mov     ebp, 1", "jmp     loc_9B70"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 9, 1, 1, 6, -1, 0.007936507936507936, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000009C00 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 0D8h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 26, 0, 0, 6, 1, 1, 7, 1, 0.022222222222222223, ["lea     rax, [rsp+108h+arg_30]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+8]", "test    rax, rax", "mov     [rsp+108h+var_90], rax", "jz      loc_9FC3"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 31, 0, 0, 7, 1, 1, 3, 5, 0.02142857142857143, ["mov     rax, [rdi]", "lea     r8, [rsp+108h+arg_10]", "mov     ebp, 3", "mov     [rsp+108h+authors.overflow_arg_area], r8", "test    rax, rax", "mov     [rsp+108h+var_B0], rax", "jz      loc_9B70"], ["mov~rax,<TAG>", "lea~r8,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],r8", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 8, 0, 0.01746031746031746, ["mov     ebp, 7", "jmp     loc_9B70"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 30, 0, 0, 7, 1, 1, 4, 4, 0.025396825396825397, ["mov     rdi, [r8]", "lea     rax, [rsp+108h+arg_18]", "mov     ebp, 4", "mov     [rsp+108h+authors.overflow_arg_area], rax", "test    rdi, rdi", "mov     [rsp+108h+var_A8], rdi", "jz      loc_9B70"], ["mov~rdi,<TAG>", "lea~rax,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rax", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.01746031746031746, ["mov     ebp, 6", "jmp     loc_9B70"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, -1, 0.00873015873015873, ["mov     ebp, 8", "jmp     loc_9B70"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 6, -1, 0.013888888888888888, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+108h+var_F0]", "push    r10", "jmp     loc_9C55"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 5, -1, 0.02261904761904762, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000009C00 default case", "mov     r9, [rsp+108h+var_B8]", "mov     edx, 5", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     [rsp+108h+var_F0], r10", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "jmp     loc_9D27"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 4, 0, 1, 20, 1, 2, 6, -1, 0.007936507936507936, ["mov     r8, [rsp+108h+var_C0]; jumptable 0000000000009C00 case 7", "mov     r13, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     r12, [rsp+108h+var_98]", "mov     edx, 5; category", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "push    r12", "mov     r9, r13", "push    rbp", "push    r15", "push    r14", "mov     r8, [rsp+128h+var_100]", "jmp     short loc_9EC4"], ["mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~r12,[rsp+0]", "mov~edx,0", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "mov~r9,r13", "push~rbp", "push~r15", "push~r14", "mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 4, 1, 1, 17, 1, 1, 6, -1, 0.007936507936507936, ["mov     rcx, [rsp+108h+var_C8]; jumptable 0000000000009C00 case 6", "mov     rbp, [rsp+108h+var_A0]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "xor     edi, edi; domainname", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14"], ["mov~rcx,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14"]], [1, 0, 4, 0, 1, 11, 1, 2, 6, -1, 0.007936507936507936, ["mov     r15, [rsp+108h+var_A8]; jumptable 0000000000009C00 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "push    r15", "jmp     short loc_9E2B"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 2, 3, -1, 0.12063492063492064, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_9B98"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 4, 1, 1, 16, 1, 1, 6, -1, 0.008333333333333333, ["mov     r9, [rsp+108h+var_B8]; jumptable 0000000000009C00 case 8", "mov     r8, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0"]]], "func_feature": [22, 34, 50, 17, 37, 56, 1, 329, 0.03698, 17, 9], "succs": [[32, 33, 34, 36, 8, 11, 12, 13, 19, 21], [0, 31], [10], [2, 29], [25, 10], [20, 4], [24, 28], [10, 6], [11], [1], [9, 35], [22, 23], [11], [11], [11], [11], [11], [10], [17, 5], [30], [10], [14], [], [], [26, 3], [10, 27], [10], [10, 7], [10], [10], [16], [30], [15], [15], [14], [1], [16]], "fname": "version_etc", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3065", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3064, 0", "jz      short loc_A068"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3064, 1", "setz    al", "mov     cs:can_write_3065, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 2, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 5, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     rbx, rax", "seto    al", "test    rbx, rbx", "js      short loc_A0BE"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~rbx,rax", "seto~al", "test~rbx,rbx", "js~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.15000000000000002, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_A0BE"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.2, ["mov     n, rbx; size", "call    _malloc", "test    rax, rax", "jnz     short loc_A0BC"], ["mov~n,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05, ["test    rbx, rbx", "jnz     short loc_A0BE"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 4, 6, 0, 6, 8, 0, 19, 0.06667, 0, 1], "succs": [[1, 5], [2, 5], [3, 4], [4, 5], [], []], "fname": "xnmalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 8, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_A119"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.17857142857142855, ["mov     rsi, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_A109"], ["mov~rsi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.17857142857142855, ["test    rsi, rsi", "mov     rbx, rsi", "jnz     short loc_A0F7"], ["test~rsi,rsi", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 0, 3, 0.05357142857142857, ["test    p, p", "jnz     short loc_A110"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05357142857142857, ["test    rbx, rbx", "jnz     short loc_A119"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.10714285714285714, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_A119"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 4, 1, 1, 0, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 7, 9, 0, 9, 12, 0, 28, 0.06349, 0, 1], "succs": [[8, 5], [4, 6], [1, 3], [1, 7], [8, 6], [8, 2], [], [], []], "fname": "xnrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.13636363636363635, ["mov     pn, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_A16D"], ["mov~pn,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 4, 3, 0.09090909090909091, ["mov     [pn], n", "mov     rbx, rcx", "jmp     short loc_A15B"], ["mov~<TAG>,n", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 5, 1, 0, 7, 1, 1, 2, 3, 0.06060606060606061, ["mov     rax, n", "shr     rax, 1", "lea     rbx, [rax+n+1]", "mov     [pn], n", "imul    n, s", "test    rbx, rbx", "jz      short loc_A1C0"], ["mov~rax,n", "shr~rax,0", "lea~rbx,[rax+0]", "mov~<TAG>,n", "imul~n,s", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 1, 0, 7, 1, 1, 2, 1, 0.10606060606060606, ["mov     rax, s", "mul     n", "mov     s, rax", "seto    al", "test    rcx, rcx", "movzx   eax, al", "js      short loc_A1C9"], ["mov~rax,s", "mul~,n", "mov~s,rax", "seto~al", "test~rcx,rcx", "movzx~eax,al", "js~FOO"]], [0, 1, 7, 2, 0, 8, 3, 1, 2, 2, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "add     r8, n", "jmp     short loc_A175"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "add~r8,n", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.030303030303030304, ["test    n, n", "jz      short loc_A1A0"], ["test~n,n", "jz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 3, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 6, 1, 0, 5, 1, 0, 1, 1, 0.045454545454545456, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     loc_A1C9"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.022727272727272728, ["test    rbx, rbx", "jnz     short loc_A1C9"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 1, 0.09848484848484848, ["test    rax, rax", "jnz     short loc_A1C9"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    p, p", "push    rbx", "mov     rcx, s", "mov     r8, [pn]", "jz      short loc_A170"], ["test~p,p", "push~rbx", "mov~rcx,s", "mov~r8,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 12, 12, 0, 13, 18, 0, 52, 0.04545, 0, 5], "succs": [[9, 12], [0], [0, 6], [10, 7], [3], [3, 4], [], [], [2, 7], [12, 7], [1, 7], [8, 5], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_A1E5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    rax, rax", "jnz     short loc_A1E3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xcharalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_A205"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_A203"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 23, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 1, 4, 1, 1, 0, 0, 0.0, ["call    free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_A238"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_A241"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_A230"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_A21E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [3, 5, 7, 0, 7, 8, 42, 19, 0.04762, 0, 0], "succs": [[], [0, 4], [], [2, 6], [3, 6], [1, 4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_A2A1"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 0, 0.16666666666666666, ["mov     [pn], rax", "mov     pn, rax; size", "call    _realloc", "test    rax, rax", "jz      short loc_A2A1"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 0, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_A276"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 2, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rax+rdx+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rax+0]"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    p, p", "mov     rax, [pn]", "jz      short loc_A290"], ["sub~rsp,0", "test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 0, 7, 9, 0, 23, 0.05238, 0, 2], "succs": [[], [0, 4], [0, 6], [0, 2], [2], [1, 3], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 1; size", "mov     rbx, s", "call    _calloc", "test    rax, rax", "jnz     short loc_A2C8"], ["push~rbx", "mov~esi,0", "mov~rbx,s", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.16666666666666666, ["test    s, s", "jnz     short loc_A2CA"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     s", "retn"], ["pop~s", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 11, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xzalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_A2F9"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_A2F9"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_A2F9"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    s, s", "jnz     short loc_A332"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 4, 1, 1, 9, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; size", "mov     rbx, s", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "jnz     short loc_A31E"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "test~rax,rax", "jnz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 5, 1, 19, 0.05, 0, 2], "succs": [[], [0, 3], [], [2], [1, 3]], "fname": "xmemdup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 1, 2, 10, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, string", "sub     rsp, 8", "call    _strlen", "lea     rbx, [rax+1]", "mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "jz      short loc_A373"], ["push~rbp", "push~rbx", "mov~rbp,string", "sub~rsp,0", "call~FOO", "lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, rbx; n", "mov     rsi, string; src", "pop     rbx", "pop     string", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,rbx", "mov~rsi,string", "pop~rbx", "pop~string", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [3, 1, 5, 0, 4, 3, 0, 18, 0.04167, 0, 2], "succs": [[], [0, 2], [3], []], "fname": "xstrdup", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aS+2; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 22, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 1, 4, 1, 1, 5, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "or      esi, 200h; options", "call    rpl_fts_open", "test    fts, fts", "jz      short loc_A3E0"], ["sub~rsp,0", "or~esi,<STR>", "call~FOO", "test~fts,fts", "jz~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 1, 1, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      short loc_A3F0"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3434; \"xfts_open\"", "lea     rsi, aLibXftsC; \"lib/xfts.c\"", "lea     rdi, aErrnoEinval; \"errno != EINVAL\"", "mov     edx, 29h ; ')'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [4, 2, 6, 0, 5, 4, 1, 16, 0.03333, 3, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "xfts_open", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     qword ptr [ent+58h], 0", "setnz   al", "retn"], ["cmp~[word ptr [ent+0],0", "setnz~al", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["xor     eax, eax", "cmp     edx, 11h", "jz      short loc_A430"], ["xor~eax,eax", "cmp~edx,0", "jz~FOO"]], [3, 0, 3, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     edx, [fts+48h]", "mov     eax, 1", "and     edx, 11h", "cmp     edx, 10h", "jz      short locret_A427"], ["mov~edx,[fts+0]", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 3], [1, 3], []], "fname": "cycle_warning_required", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 1, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 1, 0.26666666666666666, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     short loc_A4D2"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [3, 1, 6, 1, 1, 15, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_A4A2"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 3, 0.0, ["mov     byte ptr [rax], 0", "mov     rdi, [rsp+28h+response]", "jmp     short loc_A498"], ["mov~<TAG>,0", "mov~rdi,[rsp+0]", "jmp~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 1, 3, 0.06666666666666667, ["mov     rdi, [rsp+28h+response]; response", "lea     rax, [rdi+rax-1]", "cmp     byte ptr [rax], 0Ah", "jz      short loc_A4C8"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 2, 2, 0.2, ["call    _rpmatch", "test    eax, eax", "setnle  bl"], ["call~FOO", "test~eax,eax", "setnle~bl"]]], "func_feature": [4, 5, 8, 1, 7, 8, 3, 35, 0.07619, 2, 2], "succs": [[], [0, 5], [1, 4], [6], [3, 6], [], [1]], "fname": "yesno", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 1, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 3, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_A4FA"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 1, 2, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_A4FA"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_A508"], ["test~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 2, 19, 0.05833, 0, 0], "succs": [[], [0], [0], [1, 4], [1, 5], [1, 2]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_A547"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_A547"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 2, 0, 0, 0, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [1, 0, 2, 0, 2, 13, 0, 3, 3, 1, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_A5A2"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_A55A"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_A560"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_A55A"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 2, 7, 0, 8, 10, 2, 29, 0.05655, 0, 0], "succs": [[2], [0, 2], [], [5, 6], [3, 6], [1, 6], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [ay+8]", "cmp     [ax_0+8], rdx", "jz      short loc_A5C0"], ["xor~eax,eax", "mov~rdx,[ay+0]", "cmp~[ax_0+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "AD_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [ax_0+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[ax_0+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [ax_0]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_type_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_type_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["setnbe  al", "movzx   eax, al", "retn"], ["setnbe~al", "movzx~eax,al", "retn"]], [0, 0, 2, 0, 0, 5, 0, 0, 0, 1, 0.0, ["mov     rdx, [a]", "mov     rax, [b]", "mov     rax, [rax+80h]", "cmp     [rdx+80h], rax", "jb      short loc_A620"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~[rdx+0],rax", "jb~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 0, 0, 0, 3, 2, 0, 10, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "fts_compare_ino", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["cmp     eax, 8000h", "setz    al", "movzx   eax, al", "pop     sbp", "lea     eax, [rax+rax*4+3]", "pop     p", "pop     sp_0", "retn"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "pop~sbp", "lea~eax,[rax+0]", "pop~p", "pop~sp_0", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.025, ["cmp     eax, 0A000h", "jz      loc_A7C8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 4, -1, 0.02, ["mov     rsi, [p+30h]; filename", "mov     rdx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      short loc_A7B0"], ["mov~rsi,[p+0]", "mov~rdx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 3, -1, 0.04, ["call    ___errno_location", "mov     sp_0, rax", "mov     eax, [rax]", "cmp     eax, 2", "jz      loc_A780"], ["call~FOO", "mov~sp_0,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, -1, 0.0016666666666666668, ["mov     eax, [r12]", "jmp     err"], ["mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 9, 0, 0, 3, 0, 0, 4, 5, 0.09333333333333334, ["mov     rax, [p+88h]", "cmp     rax, 1", "jbe     loc_A7A0"], ["mov~rax,[p+0]", "cmp~rax,0", "jbe~FOO"]], [1, 1, 13, 0, 0, 4, 1, 1, 3, 6, 0.12000000000000001, ["mov     eax, [p+90h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_A710"], ["mov~eax,[p+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [5, 0, 1, 1, 0, 11, 2, 0, 4, -1, 0.015000000000000001, ["lea     rdi, [sbp+8]", "mov     [p+40h], eax", "mov     qword ptr [p+78h], 0", "mov     qword ptr [sbp+88h], 0", "xor     eax, eax", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     sbp, rdi", "lea     ecx, [rbx+90h]", "shr     ecx, 3", "rep stosq", "mov     eax, 0Ah"], ["lea~rdi,[sbp+0]", "mov~[p+0],eax", "mov~[word ptr [p+0],0", "mov~[word ptr [sbp+0],0", "xor~eax,eax", "and~rdi,0", "sub~sbp,rdi", "lea~ecx,[rbx+0]", "shr~ecx,0", "stosq~<TAG>,", "mov~eax,0"]], [0, 0, 2, 0, 1, 3, 0, 2, 4, -1, 0.005, ["call    ___errno_location", "mov     eax, [rax]", "jmp     err"], ["call~FOO", "mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, 5, 0.013333333333333334, ["cmp     qword ptr [p+58h], 0", "jle     short loc_A7A0"], ["cmp~[word ptr [p+0],0", "jle~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 4, 0.07333333333333333, ["mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_A736"], ["mov~rax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     p", "pop     r12", "retn"], ["pop~rbx", "pop~p", "pop~r12", "retn"]], [2, 0, 5, 0, 0, 4, 0, 1, 6, 3, 0.08, ["cmp     byte ptr [p+108h], 2Eh ; '.'", "mov     [p+68h], rax", "mov     eax, 1", "jnz     loc_A6A8"], ["cmp~[yte ptr [p+0],0", "mov~[p+0],rax", "mov~eax,0", "jnz~FOO"]], [3, 0, 1, 1, 0, 5, 1, 1, 8, -1, 0.0025, ["cmp     qword ptr [p+58h], 1", "sbb     eax, eax", "and     eax, 0FFFFFFFCh", "add     eax, 5", "jmp     loc_A6A8"], ["cmp~[word ptr [p+0],0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0016666666666666668, ["mov     dword ptr [r12], 0", "mov     eax, 0Dh", "jmp     loc_A6A8"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.0033333333333333335, ["mov     eax, 0Ch", "jmp     loc_A6A8"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 8, 1, 0.022500000000000003, ["mov     edx, [p+108h]", "and     edx, 0FFFF00h", "cmp     edx, 2E00h", "jnz     loc_A6A8"], ["mov~edx,[p+0]", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 1, 8, 0.02666666666666667, ["test    al, 2", "jnz     short loc_A650"], ["test~al,0", "jnz~FOO"]], [1, 0, 25, 0, 0, 10, 0, 1, 0, 9, 0.0, ["push    r12", "push    rbp", "mov     rbp, p", "push    rbx", "cmp     qword ptr [rbp+58h], 0", "lea     rbx, [p+78h]", "mov     r12, sp_0", "mov     eax, [sp_0+48h]", "mov     p, [p+30h]; filename", "jnz     short loc_A6B0"], ["push~r12", "push~rbp", "mov~rbp,p", "push~rbx", "cmp~[word ptr [rbp+0],0", "lea~rbx,[p+0]", "mov~r12,sp_0", "mov~eax,[sp_0+0]", "mov~p,[p+0]", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 1, 1, 1, 8, 0.016666666666666666, ["test    al, 1", "jz      short loc_A6B0"], ["test~al,0", "jz~FOO"]], [0, 1, 6, 0, 0, 3, 1, 0, 6, 4, 0.005, ["test    byte ptr [sp_0+48h], 20h", "lea     rdx, [rax-2]", "cmovz   rax, rdx"], ["test~[yte ptr [sp_0+0],<STR>", "lea~rdx,[rax-2]+0]", "cmovz~rax,rdx"]], [0, 0, 22, 0, 0, 2, 1, 1, 2, 8, 0.01, ["test    dl, dl", "jnz     short loc_A650"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 7, 2, 0.060000000000000005, ["cmp     byte ptr [p+109h], 0", "jnz     loc_A7D8"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [2, 0, 16, 0, 1, 8, 1, 2, 3, 7, 0.01916666666666667, ["mov     follow, rsi; filename", "mov     esi, [r12+2Ch]; fildes", "mov     r8d, 100h; flag", "mov     rcx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_A770"], ["mov~follow,rsi", "mov~esi,[r12+0]", "mov~r8d,0", "mov~rcx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 19, 0, 1, 5, 1, 2, 2, 7, 0.11416666666666668, ["mov     follow, sbp; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      short loc_A6DB"], ["mov~follow,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 9, 0, 0.0016666666666666668, ["jmp     loc_A759"], ["jmp~FOO"]]], "func_feature": [5, 12, 26, 0, 26, 39, 8, 105, 0.02962, 0, 2], "succs": [[], [0, 15], [4, 14], [2, 7], [7], [9, 10], [1, 5], [11], [7], [10, 20], [12], [], [11, 22], [11], [11], [11], [25, 11], [24, 21], [17, 19], [24, 17], [12], [24, 23], [16, 13], [8, 6], [3, 6], [13]], "fname": "fts_stat", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 4, 0, 0, 2, 1, 1, 0, 0, 0.044444444444444446, ["xor     r12d, r12d", "jmp     short loc_A83C"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 10, 0, 0, 8, 1, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     eax, [sp_0+48h]", "lea     rbx, [sp_0+60h]", "mov     r12d, eax", "and     r12d, 4", "jnz     short loc_A880"], ["push~r12", "push~rbp", "push~rbx", "mov~eax,[sp_0+0]", "lea~rbx,[sp_0+0]", "mov~r12d,eax", "and~r12d,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.022222222222222223, ["mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "jmp     short loc_A83C"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 6, 0, 1, 5, 1, 1, 2, 1, 0.044444444444444446, ["mov     esi, [sp_0+2Ch]; val", "mov     sp_0, rbx; ir", "call    i_ring_push", "test    eax, eax", "jns     short loc_A885"], ["mov~esi,[sp_0+0]", "mov~sp_0,rbx", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, -1, 0.26666666666666666, ["mov     rdi, rbx; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_A830"], ["mov~rdi,rbx", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 1, 6, 2, 2, 2, -1, 0.044444444444444446, ["mov     edi, [sp_0+28h]; fd", "xor     r12d, r12d", "call    _fchdir", "test    eax, eax", "setnz   r12b", "jmp     short loc_A83C"], ["mov~edi,[sp_0+0]", "xor~r12d,r12d", "call~FOO", "test~eax,eax", "setnz~r12b", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 4, -1, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_A83C"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 4, 0, 2, 3, 0, 0.022222222222222223, ["mov     edi, eax; fd", "call    _close", "mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "jmp     short loc_A83C"], ["mov~edi,eax", "call~FOO", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 3, -1, 0.08888888888888889, ["mov     rdi, rbx; ir", "call    i_ring_pop", "test    eax, eax", "jns     short loc_A870"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 1, 2, 0.044444444444444446, ["test    ah, 2", "mov     rbp, sp_0", "jnz     short loc_A850"], ["test~ah,0", "mov~rbp,sp_0", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, r12d", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~eax,r12d", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [6, 8, 14, 0, 11, 15, 3, 46, 0.05253, 0, 0], "succs": [[4], [0, 9], [4], [2, 7], [8, 10], [4], [4], [4], [4, 6], [3, 5], []], "fname": "restore_initial_cwd", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.20899470899470898, ["cmp     rbx, 52654973h", "jz      loc_AA00"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 5, 4, 0.07671957671957672, ["test    r12, r12", "mov     rbx, [rsp+0B8h+buf.f_type]", "jz      loc_A8F9"], ["test~r12,r12", "mov~rbx,[rsp+0]", "jz~FOO"]], [1, 0, 20, 0, 1, 5, 1, 2, 6, 3, 0.046296296296296294, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "mov     dir_fd, rax", "jz      loc_A8F9"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~dir_fd,rax", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.05952380952380952, ["mov     rbx, [rsp+0B8h+buf.f_type]", "jmp     loc_A8F9"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 3, -1, 0.0582010582010582, ["mov     rbx, [rax+8]"], ["mov~rbx,[rax+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.06613756613756613, ["mov     rdx, [rsp+0B8h+var_30]", "xor     rdx, fs:28h", "jnz     loc_AA4A"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.005952380952380952, ["mov     eax, 1", "jmp     short loc_A970"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.037698412698412696, ["mov     eax, 2", "jmp     loc_A970"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.04365079365079365, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 8, 0, 0, 2, 0, 1, 6, -1, 0.05291005291005291, ["cmp     rbx, 58465342h", "jz      loc_AA00"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 5, -1, 0.15873015873015872, ["jle     loc_AA10"], ["jle~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 8, 1, 0.027777777777777776, ["cmp     r13, rax", "jnz     short loc_AA4F"], ["cmp~r13,rax", "jnz~FOO"]], [0, 0, 19, 0, 1, 8, 1, 2, 7, 2, 0.042328042328042326, ["mov     rax, [p+78h]", "mov     [r13+8], rbx", "mov     rsi, r13; entry", "mov     rdi, r12; table", "mov     [r13+0], rax", "call    hash_insert", "test    rax, rax", "jz      short loc_AA40"], ["mov~rax,[p+0]", "mov~[r13+0],rbx", "mov~rsi,r13", "mov~rdi,r12", "mov~[r13+0],rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 8, -1, 0.03505291005291005, ["test    rbx, rbx", "jnz     loc_A92C"], ["test~rbx,rbx", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.012566137566137565, ["cmp     rbx, 5346414Fh", "jz      short loc_A96E"], ["cmp~rbx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [1, 0, 8, 0, 0, 2, 0, 1, 6, -1, 0.08333333333333333, ["cmp     rbx, 6969h", "jz      loc_A96E"], ["cmp~rbx,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.03373015873015873, ["mov     eax, 0FF534D42h", "cmp     rbx, rax", "jz      short loc_A96E"], ["mov~eax,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, -1, 0.05357142857142857, ["cmp     rbx, 9FA0h", "jz      loc_A96E"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 4, 5, 0.06084656084656084, ["lea     rsi, [rsp+0B8h+buf]; buf", "mov     edi, r13d; fildes", "call    _fstatfs", "test    eax, eax", "jnz     short loc_A96E"], ["lea~rsi,[rsp+0]", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 0, 3, 6, 0.0582010582010582, ["test    r13d, r13d", "jns     short loc_A998"], ["test~r13d,r13d", "jns~FOO"]], [0, 0, 25, 0, 1, 7, 1, 2, 2, 7, 0.062169312169312166, ["mov     rax, [p+78h]", "mov     rsi, rsp; entry", "mov     rdi, r12; table", "mov     [rsp+0B8h+var_B8], rax", "call    hash_lookup", "test    rax, rax", "jz      short loc_A969"], ["mov~rax,[p+0]", "mov~rsi,rsp", "mov~rdi,r12", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 26, 0, 1, 10, 2, 2, 2, 7, 0.01455026455026455, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, dev_type_compare; comparator", "lea     rdx, dev_type_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "test    rax, rax", "mov     r12, rax", "mov     [rbx+50h], rax", "jnz     loc_A8DD"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~[rbx+0],rax", "jnz~FOO"]], [0, 0, 27, 0, 0, 5, 1, 1, 1, 8, 0.03042328042328042, ["mov     r12, [rbx+50h]", "mov     rbp, p", "mov     r13d, esi", "test    r12, r12", "jz      short loc_A938"], ["mov~r12,[rbx+0]", "mov~rbp,p", "mov~r13d,esi", "test~r12,r12", "jz~FOO"]], [2, 0, 28, 1, 0, 11, 2, 1, 0, 9, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rbx, [p+50h]", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    byte ptr [rbx+49h], 2", "jz      loc_A96E"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,[p+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 9, -1, 0.0013227513227513227, ["jmp     loc_A96E"], ["jmp~FOO"]], [0, 0, 16, 0, 1, 3, 0, 2, 8, -1, 0.015873015873015872, ["mov     rdi, r13; ptr", "call    free", "jmp     short loc_A9EE"], ["mov~rdi,r13", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 14, 31, 2, 29, 45, 2, 97, 0.04643, 4, 2], "succs": [[10, 7], [0, 2], [0, 12], [0], [0], [25, 15], [5], [5], [5], [17, 7], [16, 9], [26, 3], [11, 28], [27, 6], [8, 6], [], [8, 18], [8, 14], [8, 13], [8, 1], [8, 19], [4, 20], [20, 21], [21, 22], [8, 23], [], [], [8], [3]], "fname": "leaf_optimization_0", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 23, 0, 0, 1, 0, 1, 0, 0, 0.004292929292929293, ["jmp     loc_AB20"], ["jmp~FOO"]], [2, 0, 25, 0, 0, 4, 1, 1, 4, 0, 0.01893939393939394, ["test    bl, 2", "mov     r14d, r12d", "mov     [rsp+0E8h+is_dotdot], 1", "jz      loc_ABC6"], ["test~bl,0", "mov~r14d,r12d", "mov~[rsp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 7, 0, 0.011447811447811448, ["cmp     esi, 0FFFFFF9Ch", "jnz     loc_AD6D"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 6, 0, 0.1, ["mov     esi, [sp_0+2Ch]; val", "cmp     r14d, esi", "jnz     short loc_AC8A"], ["mov~esi,[sp_0+0]", "cmp~r14d,esi", "jnz~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 6, 0, 0.09385521885521886, ["test    r14d, r14d", "js      loc_AD50"], ["test~r14d,r14d", "js~FOO"]], [0, 0, 30, 0, 1, 7, 1, 2, 5, 0, 0.05084175084175085, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "xor     eax, eax", "mov     rsi, dir; file", "call    openat_safer", "mov     r14d, eax", "jmp     loc_AB02"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "xor~eax,eax", "mov~rsi,dir", "call~FOO", "mov~r14d,eax", "jmp~FOO"]], [0, 0, 30, 0, 1, 4, 1, 1, 6, 0, 0.028535353535353535, ["mov     rdi, dir; file", "xor     eax, eax", "call    open_safer", "mov     r14d, eax"], ["mov~rdi,dir", "xor~eax,eax", "call~FOO", "mov~r14d,eax"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 0, 0.035016835016835016, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_AD5A"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 6, 0, 0.033080808080808086, ["test    r12d, r12d", "jns     short loc_AB75"], ["test~r12d,r12d", "jns~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 7, 0, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     edi, r14d; fd", "call    _close", "mov     [rbp+0], r12d", "jmp     short loc_AB75"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~edi,r14d", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, 0, 0.000505050505050505, ["mov     edi, r12d; fd", "xor     ebx, ebx", "call    _close", "jmp     loc_AB75"], ["mov~edi,r12d", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 9, 0, 0.00808080808080808, ["mov     [sp_0+2Ch], r14d", "xor     ebx, ebx", "jmp     loc_AB75"], ["mov~[sp_0+0],r14d", "xor~ebx,ebx", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 0, 0.011363636363636364, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_AB75"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 3, 0, 0.005555555555555556, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 21, 0, 0, 3, 0, 1, 5, 0, 0.045454545454545456, ["mov     rax, [rsp+0E8h+sb.st_dev]", "cmp     [p+78h], rax", "jz      loc_ACB8"], ["mov~rax,[rsp+0]", "cmp~[p+0],rax", "jz~FOO"]], [1, 0, 22, 0, 1, 6, 1, 2, 4, 0, 0.07777777777777779, ["lea     rdx, [rsp+0E8h+sb]; stat_buf", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jz      loc_AC00"], ["lea~rdx,[rsp+0]", "mov~esi,r14d", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 39, 0, 1, 6, 1, 2, 5, 0, 0.018181818181818184, ["lea     r14, [sp_0+60h]", "mov     rdi, r14; ir", "call    i_ring_empty", "test    al, al", "mov     [rsp+0E8h+is_dotdot], al", "jz      loc_ACD8"], ["lea~r14,[sp_0+0]", "mov~rdi,r14", "call~FOO", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 1, 1, 4, 0, 0.017592592592592594, ["test    bh, 2", "jnz     loc_AC30"], ["test~bh,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, 0, 0.07272727272727274, ["cmp     [rsp+0E8h+is_dotdot], 0", "jz      short loc_AD08"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 9, 0, 0.012457912457912458, ["test    esi, esi", "js      short loc_ACA8"], ["test~esi,esi", "js~FOO"]], [1, 0, 6, 0, 0, 2, 1, 1, 8, 0, 0.03181818181818182, ["and     ebx, 4", "jnz     short loc_ACA8"], ["and~ebx,0", "jnz~FOO"]], [1, 0, 27, 0, 0, 3, 1, 1, 7, 0, 0.08013468013468014, ["mov     ebx, [sp_0+48h]", "test    bl, 2", "jz      loc_ABBA"], ["mov~ebx,[sp_0+0]", "test~bl,0", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 8, 0, 0.0196969696969697, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_ACA8"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 23, 0, 0, 1, 0, 0, 8, 0, 0.024074074074074074, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 3, 0, 2, 6, 0, 0.00404040404040404, ["call    ___errno_location", "mov     dword ptr [rax], 2", "jmp     loc_AB3A"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 6, 0, 0.030303030303030304, ["mov     rax, [rsp+0E8h+sb.st_ino]", "cmp     [p+80h], rax", "jnz     loc_AC0F"], ["mov~rax,[rsp+0]", "cmp~[p+0],rax", "jnz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 9, 0, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_ACA8"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [2, 0, 55, 1, 0, 19, 3, 1, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r15, p", "push    r13", "push    r12", "mov     r13, sp_0", "push    rbp", "push    rbx", "mov     r12d, edx", "mov     rbp, dir", "sub     rsp, 0B8h", "mov     ebx, [sp_0+48h]", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     r9d, ebx", "and     r9d, 4", "test    dir, dir", "jz      loc_AB60"], ["push~r15", "push~r14", "mov~r15,p", "push~r13", "push~r12", "mov~r13,sp_0", "push~rbp", "push~rbx", "mov~r12d,edx", "mov~rbp,dir", "sub~rsp,0", "mov~ebx,[sp_0+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,ebx", "and~r9d,0", "test~dir,dir", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, 0, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     sp_0", "pop     r14", "pop     p", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~sp_0", "pop~r14", "pop~p", "retn"]], [0, 0, 4, 0, 1, 3, 0, 1, 10, 0, 0.0, ["mov     edi, esi; fd", "call    _close", "nop     dword ptr [rax+00000000h]"], ["mov~edi,esi", "call~FOO", "nop~[word ptr [rax+0]"]], [3, 0, 31, 1, 0, 4, 2, 0, 6, 0, 0.004713804713804714, ["mov     esi, ebx", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h"], ["mov~esi,ebx", "shl~esi,0", "and~esi,0", "or~esi,0"]], [0, 0, 36, 0, 0, 2, 1, 1, 2, 0, 0.029461279461279462, ["test    r12d, r12d", "js      loc_AD5F"], ["test~r12d,r12d", "js~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 1, 0, 0.02255892255892256, ["test    r9d, r9d", "jz      short loc_ABA0"], ["test~r9d,r9d", "jz~FOO"]], [1, 1, 34, 0, 0, 3, 1, 0, 7, 0, 0.006734006734006735, ["mov     eax, ebx", "mov     [rsp+0E8h+is_dotdot], 1", "and     eax, 200h"], ["mov~eax,ebx", "mov~[rsp+0],0", "and~eax,<STR>"]], [0, 0, 37, 0, 1, 6, 1, 2, 6, 0, 0.02255892255892256, ["mov     rdi, r14; ir", "call    i_ring_pop", "test    eax, eax", "mov     r14d, eax", "mov     ebx, [sp_0+48h]", "js      short loc_AD20"], ["mov~rdi,r14", "call~FOO", "test~eax,eax", "mov~r14d,eax", "mov~ebx,[sp_0+0]", "js~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 3, 0, 0.0016835016835016836, ["test    r12d, r12d", "jns     loc_AC20"], ["test~r12d,r12d", "jns~FOO"]], [0, 0, 5, 0, 1, 4, 0, 2, 6, 0, 0.016582491582491584, ["mov     edi, r14d; fd", "call    _fchdir", "mov     ebx, eax", "jmp     bail"], ["mov~edi,r14d", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 1, 1, 5, 0, 0.13341750841750843, ["test    bh, 2", "jnz     loc_AC78"], ["test~bh,0", "jnz~FOO"]], [2, 0, 26, 0, 0, 4, 1, 1, 3, 0, 0.029292929292929294, ["test    bl, 2", "mov     r14d, r12d", "mov     [rsp+0E8h+is_dotdot], 0", "jnz     loc_AB20"], ["test~bl,0", "mov~r14d,r12d", "mov~[rsp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 23, 0, 0, 8, 1, 1, 5, 0, 0.029461279461279462, ["mov     ecx, 3", "mov     rsi, rbp", "mov     rdi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_AB20"], ["mov~ecx,0", "mov~rsi,rbp", "mov~rdi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 1, 8, 0, 0.00808080808080808, ["jmp     loc_AB20"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 5, 0, 0.025252525252525256, ["mov     ebx, 0FFFFFFFFh"], ["mov~ebx,0"]], [0, 0, 25, 0, 0, 2, 1, 1, 4, 0, 0.07457912457912458, ["test    dir, dir", "jz      short loc_ABE0"], ["test~dir,dir", "jz~FOO"]], [2, 0, 54, 0, 0, 9, 1, 1, 1, 0, 0.004545454545454546, ["lea     fd, dir; \"..\"", "mov     ecx, 3", "mov     p, dir", "mov     sp_0, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_AB60"], ["lea~fd,<TAG>", "mov~ecx,0", "mov~p,dir", "mov~sp_0,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 5, 0, 0.007744107744107744, ["lea     rdx, dir; \"..\""], ["lea~rdx,<TAG>"]], [0, 0, 31, 0, 0, 1, 0, 1, 5, 0, 0.0025252525252525255, ["jmp     loc_AAF5"], ["jmp~FOO"]], [3, 0, 33, 1, 0, 6, 3, 1, 4, 0, 0.035521885521885524, ["mov     esi, ebx", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h", "test    eax, eax", "jnz     loc_AC59"], ["mov~esi,ebx", "shl~esi,0", "and~esi,0", "or~esi,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 2, 0, 0.012457912457912458, ["test    r9d, r9d", "jnz     loc_AB65"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 7, 0, 0.024242424242424242, ["mov     ebx, [sp_0+48h]", "jmp     loc_ABE0"], ["mov~ebx,[sp_0+0]", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 0, 3, 0, 0.02441077441077441, ["test    r12d, r12d", "jns     loc_AD72"], ["test~r12d,r12d", "jns~FOO"]], [1, 1, 34, 0, 0, 4, 1, 1, 3, 0, 0.009595959595959597, ["mov     eax, ebx", "mov     [rsp+0E8h+is_dotdot], 0", "and     eax, 200h", "jmp     short loc_AD2C"], ["mov~eax,ebx", "mov~[rsp+0],0", "and~eax,<STR>", "jmp~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 7, 0, 0.02356902356902357, ["test    bl, 2", "mov     r12d, eax", "mov     [rsp+0E8h+is_dotdot], 1", "jz      loc_ABE0"], ["test~bl,0", "mov~r12d,eax", "mov~[rsp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 1, 1, 2, 0, 0.00808080808080808, ["and     bh, 2", "jz      short loc_AB73"], ["and~bh,0", "jz~FOO"]], [4, 0, 31, 1, 0, 5, 2, 0, 5, 0, 0.00984848484848485, ["mov     esi, ebx", "mov     [rsp+0E8h+is_dotdot], 1", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags"], ["mov~esi,ebx", "mov~[rsp+0],0", "shl~esi,0", "and~esi,0", "or~esi,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [15, 41, 56, 1, 56, 84, 4, 197, 0.02505, 2, 5], "succs": [[15], [0, 40], [18, 39], [2, 18], [12, 21], [4], [4], [28, 55], [9, 7], [7], [7], [7], [7], [7], [24, 25], [42, 14], [34, 30], [16, 54], [20, 22], [11, 29], [11, 19], [43, 23], [26, 11], [15], [42], [24, 49], [11], [32, 44], [], [11], [5], [51, 38], [53, 31], [47], [33, 52], [10, 13], [8], [3, 36], [43, 15], [], [37, 15], [15], [8], [45, 37], [48, 32], [40], [6], [5, 46], [50, 53], [37], [17, 1], [47], [41, 37], [35, 13], [6], []], "fname": "fts_safe_changedir", "n_num": 56}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 169, 0, 0, 3, 0, 0, 0, 0, 0.02011904761904762, ["mov     eax, [sp_0+48h]", "mov     rcx, [rsp+158h+compar]", "mov     [rsp+158h+descend], 1"], ["mov~eax,[sp_0+0]", "mov~rcx,<TAG>", "mov~[rsp+0],0"]], [0, 0, 170, 0, 0, 1, 0, 1, 12, 16, 0.014146825396825397, ["jmp     loc_ADFC"], ["jmp~FOO"]], [1, 0, 170, 0, 0, 1, 0, 0, 3, 16, 5.9523809523809524e-05, ["mov     [rsp+158h+max_entries], 0FFFFFFFFFFFFFFFFh"], ["mov~[rsp+0],0"]], [1, 0, 207, 0, 0, 2, 1, 1, 6, 20, 0.0031547619047619046, ["test    eax, 102h", "jnz     loc_BBE6"], ["test~eax,0", "jnz~FOO"]], [1, 0, 208, 0, 0, 3, 1, 1, 5, 17, 0.016051587301587303, ["mov     eax, [sp_0+48h]", "test    ah, 1", "jnz     loc_B600"], ["mov~eax,[sp_0+0]", "test~ah,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 13, -1, 0.04425595238095238, ["mov     rcx, [sp_0+40h]", "test    rcx, rcx", "jz      loc_B2C8"], ["mov~rcx,[sp_0+0]", "test~rcx,rcx", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 12, -1, 0.09419642857142857, ["cmp     [rsp+158h+sort_by_inode], 0", "jnz     loc_B850"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 200, 0, 1, 8, 1, 2, 7, 20, 0.0003968253968253968, ["mov     rax, [rsp+158h+compar]", "mov     rdi, [sp_0+58h]; table", "lea     rsi, [rsp+158h+var_D8]; entry", "movdqu  xmm0, xmmword ptr [rax+78h]", "movaps  [rsp+158h+var_D8], xmm0", "call    hash_delete", "test    rax, rax", "jz      loc_BD1E"], ["mov~rax,<TAG>", "mov~rdi,[sp_0+0]", "lea~rsi,[rsp+0]", "movdqu~xmm0,[mmword ptr [rax+0]", "movaps~[rsp+0],xmm0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 169, 0, 0, 4, 0, 1, 7, 15, 0.09896825396825397, ["mov     [rsp+158h+descend], 0", "mov     eax, [sp_0+48h]", "mov     rcx, [rsp+158h+compar]", "jmp     loc_AE09"], ["mov~[rsp+0],0", "mov~eax,[sp_0+0]", "mov~rcx,<TAG>", "jmp~FOO"]], [4, 0, 190, 1, 0, 7, 1, 1, 6, 16, 0.09301587301587301, ["cmp     qword ptr [sp_0+40h], 1", "sbb     rax, rax", "and     eax, 186A1h", "sub     rax, 1", "cmp     [rsp+158h+type], 2", "mov     [rsp+158h+max_entries], rax", "jz      loc_BA00"], ["cmp~[word ptr [sp_0+0],0", "sbb~rax,rax", "and~eax,0", "sub~rax,0", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 16, 0.010843253968253969, ["cmp     [rsp+158h+type], 3", "jnz     loc_BA00"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 14, -1, 0.03595238095238095, ["cmp     nitems, 1", "jz      loc_B2C8"], ["cmp~nitems,0", "jz~FOO"]], [0, 0, 204, 0, 0, 4, 1, 1, 7, 19, 0.0064682539682539685, ["mov     rcx, [rsp+158h+compar]", "mov     rax, [rcx+8]", "test    rax, rax", "jz      short loc_B660"], ["mov~rcx,<TAG>", "mov~rax,[rcx+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 182, 0, 0, 4, 1, 1, 11, 20, 0.0003869047619047619, ["mov     eax, [rsp+158h+dir_fd]", "xor     ebp, ebp", "mov     ebx, 1", "jmp     loc_B521"], ["mov~eax,[rsp+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [0, 0, 199, 0, 1, 3, 0, 2, 8, 19, 0.003928571428571429, ["mov     rdi, rax; ptr", "call    free", "jmp     loc_B660"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 203, 0, 0, 2, 0, 1, 8, 19, 0.0008928571428571428, ["cmp     qword ptr [rax+58h], 0", "js      short loc_B660"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 11, 0, 1, 9, 0, 2, 13, -1, 0.00021825396825396825, ["mov     r15, sp_0", "mov     r12, [rsp+158h+head]", "mov     sp_0, r13", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     rax, [rsp+158h+p_saved_errno]", "mov     qword ptr [sp_0+20h], 0", "mov     r13d, [rax]", "jmp     mem1"], ["mov~r15,sp_0", "mov~r12,[rsp+0]", "mov~sp_0,r13", "mov~rdi,[sp_0+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[word ptr [sp_0+0],0", "mov~r13d,<TAG>", "jmp~FOO"]], [0, 0, 166, 0, 1, 7, 1, 2, 12, 10, 0.01373015873015873, ["mov     rdi, oldaddr_0; ptr", "mov     [sp_0+30h], rsi", "mov     [rsp+158h+oldaddr], oldaddr_0", "call    _realloc", "test    rax, rax", "mov     rdx, [rsp+158h+oldaddr]", "jz      loc_B7F0"], ["mov~rdi,oldaddr_0", "mov~[sp_0+0],rsi", "mov~[rsp+0],oldaddr_0", "call~FOO", "test~rax,rax", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 15, -1, 0.033174603174603176, ["cmp     nitems, [sp_0+38h]", "mov     rdi, [sp_0+10h]; ptr", "jbe     short loc_B264"], ["cmp~nitems,[sp_0+0]", "mov~rdi,[sp_0+0]", "jbe~FOO"]], [1, 0, 202, 0, 0, 3, 0, 1, 9, 20, 0.000753968253968254, ["mov     rdx, [sp_0+58h]", "cmp     qword ptr [rdx+10h], 0", "jz      loc_BD1E"], ["mov~rdx,[sp_0+0]", "cmp~[word ptr [rdx+0],0", "jz~FOO"]], [3, 0, 168, 0, 0, 8, 1, 1, 4, 14, 0.17152777777777778, ["mov     rbx, [rcx+48h]", "mov     rcx, [rcx+38h]", "mov     [rsp+158h+cp], 0", "cmp     byte ptr [rcx+rbx-1], 2Fh ; '/'", "lea     rdx, [rbx-1]", "cmovz   rbx, rdx", "test    al, 4", "jz      short loc_AE3E"], ["mov~rbx,[rcx+0]", "mov~rcx,[rcx+0]", "mov~[rsp+0],0", "cmp~[yte ptr [rcx+0],0", "lea~rdx,[rbx-1]+0]", "cmovz~rbx,rdx", "test~al,0", "jz~FOO"]], [2, 0, 169, 0, 0, 4, 0, 1, 13, 15, 0.03017857142857143, ["mov     rcx, [rsp+158h+compar]", "mov     [rsp+158h+descend], 0", "mov     qword ptr [rcx+18h], 0", "jmp     loc_AE09"], ["mov~rcx,<TAG>", "mov~[rsp+0],0", "mov~[word ptr [rcx+0],0", "jmp~FOO"]], [2, 0, 169, 0, 0, 5, 0, 1, 3, 15, 0.009880952380952381, ["mov     [rsp+158h+max_entries], 186A0h", "mov     [rsp+158h+descend], 1", "mov     eax, [sp_0+48h]", "mov     rcx, [rsp+158h+compar]", "jmp     loc_AE09"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~eax,[sp_0+0]", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 10, -1, 0.0008928571428571428, ["call    ___errno_location", "xor     r12d, r12d", "mov     dword ptr [rax], 0Ch", "jmp     loc_B2C8"], ["call~FOO", "xor~r12d,r12d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 195, 0, 1, 5, 1, 2, 9, 18, 0.0022222222222222222, ["mov     edi, 18h; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_BC1E"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 193, 0, 1, 4, 1, 2, 11, 18, 0.000496031746031746, ["mov     rdi, rbx; ptr", "call    free", "test    rbp, rbp", "jz      loc_BC1E"], ["mov~rdi,rbx", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [3, 0, 3, 0, 1, 11, 2, 2, 13, -1, 0.002113095238095238, ["mov     rbx, [rsp+158h+compar]", "xor     r12d, r12d", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "mov     rax, [rsp+158h+p_saved_errno]", "mov     r9d, 7", "mov     qword ptr [rbx+18h], 0", "mov     [rbx+70h], r9w", "or      dword ptr [sp_0+48h], 2000h", "mov     [rax], r13d", "jmp     loc_B2C8"], ["mov~rbx,<TAG>", "xor~r12d,r12d", "mov~rdi,[rbx+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~r9d,0", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],r9w", "or~[word ptr [sp_0+0],0", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 9, 0, 2, 5, 1, 3, 13, -1, 0.0013194444444444445, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      short loc_B400"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 14, -1, 7.936507936507937e-05, ["jmp     short loc_B400"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 12, -1, 0.0040575396825396825, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 201, 0, 0, 3, 0, 1, 10, 19, 0.0044444444444444444, ["mov     rsi, [rcx+80h]", "cmp     [rdx], rsi", "jnz     short loc_B660"], ["mov~rsi,[rcx+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 0, 167, 1, 0, 5, 0, 0, 5, 14, 0.0, ["mov     rax, [sp_0+20h]", "add     rax, len_0", "lea     rcx, [cp_0+1]", "mov     byte ptr [cp_0], 2Fh ; '/'", "mov     [rsp+158h+cp], rcx"], ["mov~rax,[sp_0+0]", "add~rax,len_0", "lea~rcx,[cp_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rcx"]], [1, 0, 13, 0, 0, 6, 0, 1, 16, -1, 0.012202380952380952, ["lea     rax, [nitems+28h]", "mov     rdx, 1FFFFFFFFFFFFFFFh", "mov     [rsp+158h+compar], rcx", "cmp     rax, rdx", "mov     [sp_0+38h], rax", "ja      loc_BACA"], ["lea~rax,[nitems+0]", "mov~rdx,0", "mov~<TAG>,rcx", "cmp~rax,rdx", "mov~[sp_0+0],rax", "ja~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 7.936507936507937e-05, ["mov     ebp, 4", "mov     [rbx+70h], bp", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+40h], eax", "jmp     loc_B5F0"], ["mov~ebp,0", "mov~[rbx+0],bp", "call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 5.9523809523809524e-05, ["mov     rbx, [rsp+158h+compar]", "jmp     loc_B82E"], ["mov~rbx,<TAG>", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 4, -1, 0.0005952380952380953, ["cmp     [rsp+158h+type], 3", "mov     rbx, rsi", "jnz     loc_B5F0"], ["cmp~[rsp+0],0", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 200, 0, 0, 3, 0, 1, 11, 19, 0.0002777777777777778, ["mov     rsi, [rcx+78h]", "cmp     [rdx+8], rsi", "jnz     short loc_B660"], ["mov~rsi,[rcx+0]", "cmp~[rdx+0],rsi", "jnz~FOO"]], [1, 0, 166, 0, 1, 5, 1, 2, 27, 17, 0.010515873015873017, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_B132"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 166, 0, 0, 4, 1, 1, 26, 17, 0.012837301587301586, ["mov     rdx, [rsp+158h+oldaddr]", "mov     r12, [rsp+158h+var_B8]", "test    rdx, rdx", "jz      loc_B132"], ["mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 14, -1, 0.002996031746031746, ["cmp     ax, 4", "jz      loc_BB84"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 13, -1, 0.005952380952380952, ["mov     rcx, [rsp+158h+compar]", "movzx   eax, word ptr [rcx+70h]", "cmp     ax, 7", "jz      loc_BB84"], ["mov~rcx,<TAG>", "movzx~eax,[ord ptr [rcx+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 55, 0, 1, 8, 1, 2, 14, -1, 0.012232142857142856, ["mov     rsi, [rax+8]; p", "lea     rcx, dir; \"..\"", "mov     edx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "setnz   al", "jmp     loc_B1E7"], ["mov~rsi,[rax+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 13, -1, 0.02908730158730159, ["mov     rax, [rsp+158h+compar]", "cmp     qword ptr [rax+58h], 0", "jnz     loc_BA2E"], ["mov~rax,<TAG>", "cmp~[word ptr [rax+0],0", "jnz~FOO"]], [0, 0, 178, 0, 1, 7, 2, 2, 11, 17, 0.011507936507936509, ["mov     rsi, [rsp+158h+compar]; p", "xor     ecx, ecx; dir", "mov     edx, eax; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jnz     loc_B534"], ["mov~rsi,<TAG>", "xor~ecx,ecx", "mov~edx,eax", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 10, 18, 0.02388888888888889, ["test    eax, eax", "jns     loc_BA50"], ["test~eax,eax", "jns~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 12, -1, 0.009404761904761905, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_B440"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 11, 1, 0, 5, 1, 1, 16, -1, 0.0001984126984126984, ["add     rdx, 8", "mov     [rdx-8], r12", "mov     r12, [r12+10h]", "test    r12, r12", "jnz     short loc_B8A8"], ["add~rdx,0", "mov~[rdx-8]+0],r12", "mov~r12,[r12+0]", "test~r12,r12", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 15, -1, 0.0030753968253968253, ["mov     rdx, rdi", "nop     dword ptr [rax]"], ["mov~rdx,rdi", "nop~<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 14, -1, 9.92063492063492e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [0, 0, 9, 0, 1, 4, 1, 2, 13, -1, 0.003521825396825397, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_B452"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 18, -1, 0.004503968253968254, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_BB46"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 17, -1, 0.012023809523809523, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_BB30"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [6, 0, 166, 0, 1, 17, 0, 2, 10, 8, 0.10498015873015873, ["lea     r15, [rax+108h]", "mov     rsi, [rsp+158h+oldaddr]; src", "mov     rdx, d_namelen; n", "mov     rdi, r15; dest", "call    _memcpy", "cmp     [rsp+158h+maxlen], d_namelen", "mov     rdx, [sp_0+20h]", "mov     byte ptr [r13+d_namelen+108h], 0", "mov     [r13+60h], d_namelen", "mov     [r13+50h], sp_0", "mov     dword ptr [r13+40h], 0", "mov     [r13+38h], rdx", "mov     qword ptr [r13+18h], 0", "mov     dword ptr [r13+72h], 30000h", "mov     qword ptr [r13+20h], 0", "mov     qword ptr [r13+28h], 0", "ja      loc_AEB0"], ["lea~r15,[rax+0]", "mov~rsi,[rsp+0]", "mov~rdx,d_namelen", "mov~rdi,r15", "call~FOO", "cmp~[rsp+0],d_namelen", "mov~rdx,[sp_0+0]", "mov~[yte ptr [r13+0],0", "mov~[r13+0],d_namelen", "mov~[r13+0],sp_0", "mov~[word ptr [r13+0],0", "mov~[r13+0],rdx", "mov~[word ptr [r13+0],0", "mov~[word ptr [r13+0],0", "mov~[word ptr [r13+0],0", "mov~[word ptr [r13+0],0", "ja~FOO"]], [1, 0, 166, 0, 2, 11, 2, 3, 9, 9, 0.12483134920634921, ["lea     rsi, [r12+13h]", "mov     rdi, rsi; s", "mov     [rsp+158h+oldaddr], rsi", "call    _strlen", "lea     rdi, [rax+110h]", "mov     r14, rax", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    _malloc", "test    rax, rax", "mov     r13, rax", "jz      loc_B598"], ["lea~rsi,[r12+0]", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "lea~rdi,[rax+0]", "mov~r14,rax", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 199, 0, 0, 5, 0, 0, 12, 19, 0.0, ["mov     rcx, [rax+78h]", "mov     rax, [rax+80h]", "mov     [rdx+8], rcx", "mov     [rdx], rax", "nop     word ptr [rax+rax+00000000h]"], ["mov~rcx,[rax+0]", "mov~rax,[rax+0]", "mov~[rdx+0],rcx", "mov~<TAG>,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 12, 0, 1, 6, 1, 2, 17, -1, 0.00623015873015873, ["lea     rsi, ds:0[rax*8]; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "mov     rcx, [rsp+158h+compar]; compar", "jz      loc_BAC6"], ["lea~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rdi,rax", "mov~rcx,<TAG>", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0035317460317460317, ["mov     rax, r12", "jmp     loc_B902"], ["mov~rax,r12", "jmp~FOO"]], [2, 0, 9, 1, 1, 9, 0, 2, 15, -1, 0.015892857142857143, ["lea     rcx, fts_compare_ino; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     rdi, [sp_0+10h]", "mov     rdx, nitems", "sub     rdx, 1", "mov     r12, [rdi]", "jz      loc_BC5B"], ["lea~rcx,<TAG>", "mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~rdi,[sp_0+0]", "mov~rdx,nitems", "sub~rdx,0", "mov~r12,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 18, -1, 0.0002380952380952381, ["mov     [sp_0+10h], rax"], ["mov~[sp_0+0],rax"]], [0, 0, 10, 0, 1, 4, 1, 2, 11, -1, 0.017668650793650792, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jnz     short loc_B455"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 18, 0, 0, 5, 0, 0, 13, -1, 0.044642857142857144, ["cmp     nitems, [sp_0+38h]", "lea     rax, fts_compare_ino", "mov     rdi, [sp_0+10h]; ptr", "mov     [sp_0+40h], rax", "jbe     short loc_B89D"], ["cmp~nitems,[sp_0+0]", "lea~rax,<TAG>", "mov~rdi,[sp_0+0]", "mov~[sp_0+0],rax", "jbe~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 16, -1, 0.015535714285714286, ["test    head_0, head_0", "jz      short loc_B282"], ["test~head_0,head_0", "jz~FOO"]], [0, 0, 166, 0, 1, 5, 1, 2, 25, 15, 0.014781746031746031, ["mov     rsi, [rsp+158h+buf]; buf", "mov     edi, r14d; fildes", "call    _fstatfs", "test    eax, eax", "jnz     loc_B160"], ["mov~rsi,[rsp+0]", "mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 166, 0, 1, 10, 2, 2, 23, 16, 0.010734126984126985, ["mov     r8, cs:data_freer; data_freer", "lea     rdx, dev_type_hash; hasher", "lea     rcx, dev_type_compare; comparator", "xor     esi, esi; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "test    rax, rax", "mov     rdx, rax", "mov     [r12+50h], rax", "jnz     loc_B0FE"], ["mov~r8,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~rdx,rax", "mov~[r12+0],rax", "jnz~FOO"]], [0, 0, 166, 0, 0, 4, 1, 1, 22, 17, 0.034523809523809526, ["mov     rdx, [r12+50h]", "mov     r14d, [rsp+158h+dir_fd]", "test    rdx, rdx", "jz      loc_B93B"], ["mov~rdx,[r12+0]", "mov~r14d,[rsp+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 17, -1, 0.003115079365079365, ["mov     rdx, rdi", "nop     dword ptr [rax+00h]"], ["mov~rdx,rdi", "nop~[word ptr [rax+0]"]], [0, 0, 166, 1, 0, 6, 0, 1, 11, 11, 0.015257936507936509, ["mov     rax, [sp_0+30h]", "mov     rcx, [rsp+158h+len]", "lea     rsi, [rcx+rax+101h]", "add     rsi, d_namelen; size", "cmp     rax, rsi", "ja      loc_B3C0"], ["mov~rax,[sp_0+0]", "mov~rcx,[rsp+0]", "lea~rsi,[rcx+0]", "add~rsi,d_namelen", "cmp~rax,rsi", "ja~FOO"]], [2, 0, 10, 0, 0, 6, 2, 1, 16, -1, 0.017857142857142856, ["mov     rax, [rsp+158h+compar]", "mov     edi, 7", "mov     [rax+70h], di", "or      dword ptr [sp_0+48h], 2000h", "test    head_0, head_0", "jnz     short loc_BB49"], ["mov~rax,<TAG>", "mov~edi,0", "mov~[rax+0],di", "or~[word ptr [sp_0+0],0", "test~head_0,head_0", "jnz~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 15, -1, 0.02373015873015873, ["test    al, al", "jnz     loc_BB10"], ["test~al,al", "jnz~FOO"]], [0, 0, 213, 0, 1, 6, 1, 2, 3, 19, 0.021984126984126984, ["lea     rcx, [rsp+158h+dir_fd]; pnew_fd", "call    opendirat", "mov     rsi, [rsp+158h+compar]; p", "test    rax, rax", "mov     [rsi+18h], rax", "jz      loc_B820"], ["lea~rcx,[rsp+0]", "call~FOO", "mov~rsi,<TAG>", "test~rax,rax", "mov~[rsi+0],rax", "jz~FOO"]], [1, 0, 198, 0, 1, 7, 2, 2, 8, 18, 0.036626984126984126, ["mov     r14, [rsp+158h+compar]", "xor     edx, edx; follow", "mov     rdi, sp_0; sp_0", "mov     rsi, r14; p", "call    fts_stat", "test    dword ptr [sp_0+48h], 102h", "jz      loc_BA9A"], ["mov~r14,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "mov~rsi,r14", "call~FOO", "test~[word ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 17, 0, 0, 5, 0, 1, 14, -1, 0.01503968253968254, ["lea     rax, [nitems+28h]", "mov     rdx, 1FFFFFFFFFFFFFFFh", "cmp     rax, rdx", "mov     [sp_0+38h], rax", "ja      loc_BAE8"], ["lea~rax,[nitems+0]", "mov~rdx,0", "cmp~rax,rdx", "mov~[sp_0+0],rax", "ja~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 14, -1, 0.01242063492063492, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_BB90"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 13, -1, 0.02121031746031746, ["test    head_0, head_0", "jnz     short loc_BBA9"], ["test~head_0,head_0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 16, -1, 9.92063492063492e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [0, 0, 86, 0, 0, 4, 1, 1, 9, -1, 0.006726190476190476, ["mov     rsi, [rsp+158h+compar]", "test    nitems, nitems", "mov     [rsi+40h], eax", "jnz     loc_BB02"], ["mov~rsi,<TAG>", "test~nitems,nitems", "mov~[rsi+0],eax", "jnz~FOO"]], [0, 0, 87, 0, 0, 6, 1, 1, 8, -1, 0.01488095238095238, ["mov     rax, [rsp+158h+p_saved_errno]", "mov     r12, [rsp+158h+head]", "mov     r15, sp_0", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_B730"], ["mov~rax,[rsp+0]", "mov~r12,[rsp+0]", "mov~r15,sp_0", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 1, 0, 5, 1, 1, 18, -1, 0.00011904761904761905, ["add     rdx, 8", "mov     [rdx-8], r12", "mov     r12, [r12+10h]", "test    r12, r12", "jnz     short loc_B270"], ["add~rdx,0", "mov~[rdx-8]+0],r12", "mov~r12,[r12+0]", "test~r12,r12", "jnz~FOO"]], [0, 0, 73, 0, 0, 1, 0, 0, 14, -1, 0.005515873015873016, ["mov     rax, rdx"], ["mov~rax,rdx"]], [0, 0, 73, 0, 0, 4, 1, 1, 13, -1, 0.007976190476190477, ["mov     rdx, [rax+10h]", "mov     [rax+38h], rcx", "test    rdx, rdx", "jnz     short loc_B7A0"], ["mov~rdx,[rax+0]", "mov~[rax+0],rcx", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 73, 0, 0, 2, 0, 1, 14, -1, 0.0, ["mov     rdx, [rax+8]", "jmp     short loc_B7A0"], ["mov~rdx,[rax+0]", "jmp~FOO"]], [1, 0, 191, 0, 0, 4, 0, 1, 10, 17, 0.0, ["mov     r10d, 2", "mov     [rbx], rbx", "mov     [rbx+70h], r10w", "jmp     loc_B4DF"], ["mov~r10d,0", "mov~<TAG>,rbx", "mov~[rbx+0],r10w", "jmp~FOO"]], [0, 0, 192, 0, 1, 6, 1, 2, 9, 17, 0.03757936507936508, ["mov     rbx, [rsp+158h+compar]", "mov     rdi, [sp_0+58h]; state", "lea     rsi, [rbx+78h]; sb", "call    cycle_check", "test    al, al", "jz      loc_B4DF"], ["mov~rbx,<TAG>", "mov~rdi,[sp_0+0]", "lea~rsi,[rbx+0]", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 217, 0, 0, 3, 1, 1, 2, 21, 3.968253968253968e-05, ["test    al, 1", "mov     edx, 20000h; extra_flags", "jnz     loc_B5B0"], ["test~al,0", "mov~edx,0", "jnz~FOO"]], [1, 0, 218, 0, 0, 4, 1, 1, 1, 21, 0.0009523809523809524, ["mov     eax, [sp_0+48h]", "mov     edx, eax", "and     edx, 10h", "jz      short loc_B48F"], ["mov~eax,[sp_0+0]", "mov~edx,eax", "and~edx,0", "jz~FOO"]], [0, 0, 187, 0, 1, 5, 1, 2, 9, 17, 0.008472222222222223, ["mov     rdi, rsi; p", "mov     esi, eax; dir_fd", "call    leaf_optimization_0", "test    eax, eax", "jnz     loc_BC63"], ["mov~rdi,rsi", "mov~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 188, 0, 0, 3, 0, 1, 8, 18, 0.005595238095238095, ["mov     rsi, [rsp+158h+compar]", "cmp     qword ptr [rsi+88h], 2", "jnz     loc_B514"], ["mov~rsi,<TAG>", "cmp~[word ptr [rsi+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 19, -1, 0.00035714285714285714, ["mov     rax, [rdi+nitems*8-8]", "mov     qword ptr [rax+10h], 0", "nop     word ptr [rax+rax+00h]"], ["mov~rax,[rdi+0]", "mov~[word ptr [rax+0],0", "nop~[ord ptr [rax+0]"]], [2, 0, 5, 2, 0, 6, 0, 1, 18, -1, 0.003472222222222222, ["mov     rcx, [rax]", "mov     rsi, [rax+8]", "add     rax, 8", "sub     rdx, 1", "mov     [rcx+10h], rsi", "jnz     short loc_B2A0"], ["mov~rcx,<TAG>", "mov~rsi,[rax+0]", "add~rax,0", "sub~rdx,0", "mov~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 15, -1, 0.00621031746031746, ["lea     rsi, ds:0[rax*8]; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "jz      loc_BAE4"], ["lea~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [2, 0, 166, 1, 0, 4, 0, 1, 22, 14, 0.02369047619047619, ["add     nitems, 1", "cmp     [rsp+158h+max_entries], rbp", "mov     [rsp+158h+sort_by_inode], 1", "ja      loc_AF7C"], ["add~nitems,0", "cmp~[rsp+0],rbp", "mov~[rsp+0],0", "ja~FOO"]], [1, 0, 166, 0, 0, 4, 1, 1, 21, 15, 0.04007936507936508, ["mov     rax, [rsp+158h+compar]", "mov     r12, [rax+50h]", "test    byte ptr [r12+49h], 2", "jz      short loc_B160"], ["mov~rax,<TAG>", "mov~r12,[rax+0]", "test~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 166, 0, 0, 3, 1, 1, 24, 15, 0.025515873015873016, ["test    r14d, r14d", "mov     [rsp+158h+oldaddr], rdx", "js      loc_B160"], ["test~r14d,r14d", "mov~[rsp+0],rdx", "js~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 28, 15, 0.0011706349206349206, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 13, 0, 0, 1, 0, 0, 16, -1, 0.00035714285714285714, ["mov     [sp_0+10h], rax"], ["mov~[sp_0+0],rax"]], [0, 0, 166, 0, 0, 3, 0, 1, 13, 9, 0.012361111111111111, ["cmp     rdx, rax", "mov     [sp_0+20h], rax", "jz      short loc_B0B4"], ["cmp~rdx,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 16, -1, 7.936507936507937e-05, ["jmp     loc_B5F0"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 15, -1, 0.004652777777777777, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_BBA6"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 14, -1, 0.024523809523809524, ["test    head_0, head_0", "jz      short loc_B8BA"], ["test~head_0,head_0", "jz~FOO"]], [4, 0, 166, 2, 0, 22, 2, 1, 5, 13, 0.1760515873015873, ["mov     rsi, [sp_0+30h]", "lea     rax, [len_0+1]", "xor     r12d, r12d", "mov     [rsp+158h+sort_by_inode], 0", "mov     [rsp+158h+doadjust], 0", "xor     ebp, ebp", "mov     [rsp+158h+len], rax", "mov     [rsp+158h+tail], 0", "mov     rbx, sp_0", "sub     rsi, len_0", "mov     len_0, [rsp+158h+compar]", "mov     [rsp+158h+head], r12", "mov     [rsp+158h+maxlen], rsi", "mov     rax, [rax+58h]", "mov     [rsp+158h+oldaddr], rax", "add     rax, 1", "mov     [rsp+158h+level], rax", "lea     level_0, [rsp+158h+var_B8]", "mov     [rsp+158h+buf], rax", "lea     rax, [rsp+158h+var_D8]", "mov     [rsp+158h+entry], rax", "jmp     loc_AF81"], ["mov~rsi,[sp_0+0]", "lea~rax,[len_0+0]", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~rbx,sp_0", "sub~rsi,len_0", "mov~len_0,<TAG>", "mov~[rsp+0],r12", "mov~[rsp+0],rsi", "mov~rax,[rax+0]", "mov~[rsp+0],rax", "add~rax,0", "mov~[rsp+0],rax", "lea~level_0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 1, 215, 0, 0, 6, 1, 1, 2, 20, 0.01369047619047619, ["mov     rcx, [rsp+158h+compar]", "and     eax, 204h", "mov     edi, 0FFFFFF9Ch", "cmp     eax, 200h", "mov     type_0, [rcx+30h]; dir", "jnz     short loc_B4AC"], ["mov~rcx,<TAG>", "and~eax,0", "mov~edi,0", "cmp~eax,<STR>", "mov~type_0,[rcx+0]", "jnz~FOO"]], [2, 0, 216, 1, 0, 6, 1, 1, 3, 21, 0.0, ["mov     rcx, [rsp+158h+compar]", "xor     edx, edx", "cmp     qword ptr [rcx+58h], 0", "setnz   dl", "shl     edx, 11h", "jmp     loc_B48F"], ["mov~rcx,<TAG>", "xor~edx,edx", "cmp~[word ptr [rcx+0],0", "setnz~dl", "shl~edx,0", "jmp~FOO"]], [2, 0, 166, 0, 0, 3, 1, 1, 14, 9, 0.0021825396825396826, ["test    byte ptr [sp_0+48h], 4", "mov     [rsp+158h+doadjust], 1", "jz      short loc_B0B4"], ["test~[yte ptr [sp_0+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 166, 1, 0, 2, 0, 0, 15, 9, 0.0, ["add     rax, [rsp+158h+len]", "mov     [rsp+158h+cp], rax"], ["add~rax,[rsp+0]", "mov~[rsp+0],rax"]], [0, 0, 8, 0, 2, 5, 1, 3, 14, -1, 0.0012103174603174604, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      short loc_BCD1"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 13, -1, 0.006884920634920635, ["mov     rdi, [r12+18h]; dirp", "mov     rbx, [r12+10h]", "test    rdi, rdi", "jnz     short loc_BCA0"], ["mov~rdi,[r12+0]", "mov~rbx,[r12+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 15, -1, 7.936507936507937e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [0, 0, 8, 0, 1, 4, 1, 2, 14, -1, 0.0012103174603174604, ["mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_BCB2"], ["mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 5, 0, 1, 8, 0, 1, 17, -1, 0.006547619047619048, ["mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     rdi, [sp_0+10h]", "lea     rdx, [nitems-1]", "mov     r12, [rdi]", "mov     rax, rdi", "nop     dword ptr [rax]"], ["mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~rdi,[sp_0+0]", "lea~rdx,[nitems-1]+0]", "mov~r12,<TAG>", "mov~rax,rdi", "nop~<TAG>"]], [0, 0, 194, 0, 1, 9, 0, 2, 10, 17, 0.004523809523809524, ["movdqu  xmm0, xmmword ptr [r14+78h]", "mov     rsi, rax; entry", "mov     rdi, [sp_0+58h]; table", "mov     [rax+10h], r14", "movups  xmmword ptr [rax], xmm0", "call    hash_insert", "cmp     rbx, rax", "mov     rbp, rax", "jz      loc_B4DF"], ["movdqu~xmm0,[mmword ptr [r14+0]", "mov~rsi,rax", "mov~rdi,[sp_0+0]", "mov~[rax+0],r14", "movups~<TAG>,xmm0", "call~FOO", "cmp~rbx,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 166, 0, 0, 2, 0, 1, 29, 18, 0.004603174603174603, ["cmp     r14, rax", "jnz     loc_BD1E"], ["cmp~r14,rax", "jnz~FOO"]], [0, 0, 166, 1, 0, 3, 0, 0, 11, 7, 0.10744047619047618, ["mov     rcx, d_namelen", "add     rcx, [rsp+158h+len]", "jb      loc_BC80"], ["mov~rcx,d_namelen", "add~rcx,[rsp+0]", "jb~FOO"]], [0, 0, 166, 1, 0, 4, 0, 1, 14, 8, 0.015575396825396826, ["mov     rax, [sp_0+30h]", "sub     rax, [rsp+158h+len]", "mov     [rsp+158h+maxlen], rax", "jmp     loc_AEB0"], ["mov~rax,[sp_0+0]", "sub~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 171, 0, 0, 3, 1, 1, 13, 16, 0.0008333333333333333, ["mov     edi, [rsp+158h+dir_fd]; fd", "test    edi, edi", "js      short loc_B57F"], ["mov~edi,[rsp+0]", "test~edi,edi", "js~FOO"]], [3, 0, 172, 0, 1, 8, 2, 2, 12, 16, 0.02255952380952381, ["mov     rbx, [rsp+158h+compar]", "or      word ptr [rbx+72h], 1", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "mov     eax, [sp_0+48h]", "mov     qword ptr [rbx+18h], 0", "test    ah, 2", "jz      short loc_B57F"], ["mov~rbx,<TAG>", "or~[ord ptr [rbx+0],0", "mov~rdi,[rbx+0]", "call~FOO", "mov~eax,[sp_0+0]", "mov~[word ptr [rbx+0],0", "test~ah,0", "jz~FOO"]], [0, 0, 214, 0, 0, 1, 0, 0, 3, 20, 0.0, ["mov     edi, [sp_0+2Ch]; dir_fd"], ["mov~edi,[sp_0+0]"]], [0, 0, 4, 0, 0, 1, 0, 0, 18, -1, 7.936507936507937e-05, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [1, 0, 210, 0, 0, 2, 0, 1, 4, 18, 0.02533730158730159, ["cmp     word ptr [rsi+70h], 0Bh", "jz      loc_BA18"], ["cmp~[ord ptr [rsi+0],0", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 20, 15, 0.04186507936507936, ["cmp     qword ptr [sp_0+40h], 0", "jnz     loc_AF6D"], ["cmp~[word ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 19, 15, 0.11188492063492063, ["cmp     nitems, 2710h", "jz      loc_B0D0"], ["cmp~nitems,0", "jz~FOO"]], [2, 0, 189, 0, 0, 5, 1, 1, 7, 19, 0.010158730158730159, ["mov     edx, [sp_0+48h]", "mov     eax, [rsp+158h+dir_fd]", "and     edx, 38h", "cmp     edx, 18h", "jz      loc_BA6D"], ["mov~edx,[sp_0+0]", "mov~eax,[rsp+0]", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 2, 5, 1, 3, 15, -1, 0.0016964285714285714, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      loc_B5F0"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.008809523809523809, ["mov     rsi, [rsp+158h+var_40]", "xor     rsi, fs:28h", "mov     rax, r12", "jnz     loc_BD19"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.0019047619047619048, ["xor     r12d, r12d", "jmp     loc_B2C8"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, -1, 0.0008928571428571428, ["mov     qword ptr [sp_0+40h], 0", "jmp     loc_B2C8"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 17, -1, 0.0002380952380952381, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "jmp     loc_B2C8"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [4, 0, 3, 0, 1, 11, 2, 2, 14, -1, 0.0007142857142857143, ["mov     rbx, [rsp+158h+compar]", "xor     r12d, r12d", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "mov     rax, [rsp+158h+p_saved_errno]", "mov     r8d, 7", "mov     qword ptr [rbx+18h], 0", "mov     [rbx+70h], r8w", "or      dword ptr [sp_0+48h], 2000h", "mov     dword ptr [rax], 24h ; '$'", "jmp     loc_B2C8"], ["mov~rbx,<TAG>", "xor~r12d,r12d", "mov~rdi,[rbx+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~r8d,0", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],r8w", "or~[word ptr [sp_0+0],0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 191, 0, 0, 5, 0, 1, 12, 17, 0.0037301587301587303, ["mov     rax, [rbp+10h]", "mov     r11d, 2", "mov     [r14+70h], r11w", "mov     [r14], rax", "jmp     loc_B4DF"], ["mov~rax,[rbp+0]", "mov~r11d,0", "mov~[r14+0],r11w", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 166, 0, 0, 10, 1, 1, 12, 6, 0.09259920634920635, ["mov     rax, [rsp+158h+level]", "mov     [r13+48h], rcx", "mov     [r13+58h], rax", "mov     rax, [sp_0]", "mov     [r13+8], rax", "mov     rax, [r12]", "mov     [r13+80h], rax", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     loc_B2F8"], ["mov~rax,[rsp+0]", "mov~[r13+0],rcx", "mov~[r13+0],rax", "mov~rax,<TAG>", "mov~[r13+0],rax", "mov~rax,<TAG>", "mov~[r13+0],rax", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 9.92063492063492e-05, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [2, 0, 85, 0, 0, 3, 0, 1, 10, -1, 0.001954365079365079, ["cmp     [rsp+158h+dp], 0", "mov     eax, 4", "jnz     loc_BB02"], ["cmp~[rsp+0],0", "mov~eax,0", "jnz~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 13, 5, 0.04573412698412698, ["mov     [r13+30h], r15"], ["mov~[r13+0],r15"]], [1, 0, 166, 0, 0, 2, 0, 1, 26, 15, 0.030456349206349206, ["mov     [rsp+158h+sort_by_inode], 0", "jmp     loc_AF6D"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 25, 16, 0.030615079365079366, ["cmp     r12, 1021994h", "jz      loc_B6E8"], ["cmp~r12,0", "jz~FOO"]], [1, 0, 166, 0, 0, 3, 0, 1, 26, 16, 0.004662698412698413, ["mov     eax, 0FF534D42h", "cmp     r12, rax", "jz      loc_B6E8"], ["mov~eax,0", "cmp~r12,rax", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 27, 16, 0.0025396825396825397, ["cmp     r12, 6969h", "jz      loc_B6E8"], ["cmp~r12,0", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 14, 4, 0.09581349206349206, ["cmp     qword ptr [sp_0+40h], 0", "jz      short loc_AEFC"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 166, 0, 1, 9, 0, 2, 13, 5, 0.04573412698412698, ["mov     rax, [r13+38h]", "mov     rdi, [rsp+158h+cp]; dest", "mov     rsi, r15; src", "mov     [r13+30h], rax", "mov     rax, [r13+60h]", "lea     rdx, [rax+1]; n", "call    _memmove", "mov     eax, [sp_0+48h]", "jmp     loc_AEEC"], ["mov~rax,[r13+0]", "mov~rdi,[rsp+0]", "mov~rsi,r15", "mov~[r13+0],rax", "mov~rax,[r13+0]", "lea~rdx,[rax+0]", "call~FOO", "mov~eax,[sp_0+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     sp_0", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~sp_0", "retn"]], [1, 0, 14, 0, 0, 2, 0, 1, 12, -1, 0.032242063492063495, ["cmp     [rsp+158h+type], 3", "jz      loc_BC31"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 11, -1, 0.1300892857142857, ["test    nitems, nitems", "jz      loc_BB79"], ["test~nitems,nitems", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 1, 1, 15, 4, 0.07773809523809523, ["test    ah, 4", "jz      loc_B3A0"], ["test~ah,0", "jz~FOO"]], [0, 0, 191, 0, 1, 6, 1, 2, 5, 17, 0.013134920634920635, ["mov     rbx, rsi", "xor     edx, edx; follow", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [rbx+70h], ax", "jmp     loc_B4DF"], ["mov~rbx,rsi", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "mov~[rbx+0],ax", "jmp~FOO"]], [0, 0, 73, 0, 0, 4, 0, 1, 12, -1, 0.010436507936507937, ["mov     rdx, [rax+30h]", "lea     rsi, [rax+108h]", "cmp     rdx, rsi", "jz      short loc_B7C9"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 73, 2, 0, 3, 0, 0, 13, -1, 0.0, ["sub     rdx, [rax+38h]", "add     rdx, rcx", "mov     [rax+30h], rdx"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx"]], [2, 0, 7, 2, 0, 6, 0, 1, 17, -1, 0.003253968253968254, ["mov     rcx, [rax]", "mov     rsi, [rax+8]", "add     rax, 8", "sub     rdx, 1", "mov     [rcx+10h], rsi", "jnz     short loc_B8E8"], ["mov~rcx,<TAG>", "mov~rsi,[rax+0]", "add~rax,0", "sub~rdx,0", "mov~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 16, -1, 0.00626984126984127, ["mov     rax, rdi", "nop     dword ptr [rax]"], ["mov~rax,rdi", "nop~<TAG>"]], [0, 0, 5, 0, 0, 1, 0, 0, 18, -1, 0.0001984126984126984, ["mov     rax, [rdi+nitems*8-8]"], ["mov~rax,[rdi+0]"]], [1, 0, 225, 1, 0, 18, 2, 1, 0, 18, 0.0, ["push    r15", "push    r14", "mov     r15, sp_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 128h", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "mov     rax, [sp_0]", "mov     [rsp+158h+type], esi", "mov     [rsp+158h+compar], rax", "mov     cur, [cur+18h]", "test    rax, rax", "mov     [rsp+158h+dp], rax", "jz      loc_B478"], ["push~r15", "push~r14", "mov~r15,sp_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~[rsp+0],esi", "mov~<TAG>,rax", "mov~cur,[cur+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 17, -1, 0.0007142857142857143, ["mov     qword ptr [rax+10h], 0"], ["mov~[word ptr [rax+0],0"]], [0, 0, 4, 0, 0, 1, 0, 1, 13, -1, 0.0026587301587301586, ["jmp     short loc_BCD1"], ["jmp~FOO"]], [1, 0, 166, 0, 2, 8, 1, 3, 7, 11, 0.14713293650793652, ["call    ___errno_location", "mov     rdi, r13; dirp", "mov     dword ptr [rax], 0", "mov     [rsp+158h+p_saved_errno], rax", "call    _readdir", "test    rax, rax", "mov     r12, rax", "jz      loc_B6F8"], ["call~FOO", "mov~rdi,r13", "mov~<TAG>,0", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 84, 0, 0, 3, 0, 1, 10, -1, 0.001954365079365079, ["mov     eax, 7", "mov     rsi, [rsp+158h+compar]", "jmp     loc_B72C"], ["mov~eax,0", "mov~rsi,<TAG>", "jmp~FOO"]], [3, 0, 166, 1, 0, 6, 1, 1, 15, 3, 0.017123015873015873, ["movzx   edx, byte ptr [r12+12h]", "and     eax, 18h", "mov     ecx, edx", "sub     edx, 1", "cmp     eax, 18h", "jz      loc_B368"], ["movzx~edx,[yte ptr [r12+0]", "and~eax,0", "mov~ecx,edx", "sub~edx,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 12, -1, 0.01369047619047619, ["mov     r12, [rsp+158h+head]", "mov     rdi, r13; ptr", "mov     r15, sp_0", "call    free", "test    r12, r12", "jnz     short loc_BCB5"], ["mov~r12,[rsp+0]", "mov~rdi,r13", "mov~r15,sp_0", "call~FOO", "test~r12,r12", "jnz~FOO"]], [2, 0, 4, 0, 1, 4, 0, 2, 15, -1, 0.0032936507936507935, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "jmp     loc_B90A"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 166, 0, 1, 3, 0, 2, 29, 18, 0.0026785714285714286, ["mov     rdi, r14; ptr", "call    free", "jmp     loc_B9ED"], ["mov~rdi,r14", "call~FOO", "jmp~FOO"]], [0, 0, 166, 0, 1, 10, 1, 2, 28, 19, 0.008412698412698413, ["mov     rax, [rsp+158h+compar]", "mov     rdx, [rsp+158h+oldaddr]", "mov     rsi, r14; entry", "mov     rax, [rax+78h]", "mov     rdi, rdx; table", "mov     [r14+8], r12", "mov     [r14], rax", "call    hash_insert", "test    rax, rax", "jz      loc_BD0C"], ["mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,r14", "mov~rax,[rax+0]", "mov~rdi,rdx", "mov~[r14+0],r12", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 180, 0, 1, 7, 1, 2, 10, 19, 0.0, ["mov     edi, eax; fd", "mov     edx, 3", "mov     esi, 406h; action", "xor     eax, eax", "call    rpl_fcntl", "mov     [rsp+158h+dir_fd], eax", "jmp     loc_B52C"], ["mov~edi,eax", "mov~edx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 181, 0, 0, 2, 1, 1, 9, 19, 0.018134920634920636, ["test    byte ptr [sp_0+49h], 2", "jnz     loc_BBCA"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 182, 0, 0, 3, 0, 0, 8, 20, 0.011200396825396825, ["cmp     [rsp+158h+type], 3", "mov     ebp, 1", "setz    bl"], ["cmp~[rsp+0],0", "mov~ebp,0", "setz~bl"]], [0, 0, 183, 0, 0, 2, 0, 1, 10, 21, 0.00014880952380952382, ["mov     eax, [rsp+158h+dir_fd]", "jmp     loc_B514"], ["mov~eax,[rsp+0]", "jmp~FOO"]], [2, 0, 166, 0, 0, 4, 0, 1, 16, 20, 0.011121031746031747, ["mov     ecx, 0Bh", "cmp     edx, 0Bh", "mov     [r13+70h], cx", "ja      loc_B330"], ["mov~ecx,0", "cmp~edx,0", "mov~[r13+0],cx", "ja~FOO"]], [1, 0, 166, 0, 0, 2, 1, 1, 16, 2, 0.006507936507936508, ["and     ecx, 0FBh", "jz      loc_AF13"], ["and~ecx,0", "jz~FOO"]], [0, 0, 166, 0, 0, 2, 0, 1, 18, 16, 0.05376984126984127, ["mov     [rsp+158h+head], r13", "jmp     loc_AF60"], ["mov~[rsp+0],r13", "jmp~FOO"]], [2, 0, 166, 0, 0, 3, 0, 1, 17, 17, 0.10867063492063492, ["cmp     [rsp+158h+head], 0", "mov     qword ptr [r13+10h], 0", "jz      loc_B320"], ["cmp~[rsp+0],0", "mov~[word ptr [r13+0],0", "jz~FOO"]], [0, 0, 166, 0, 1, 10, 1, 2, 23, 16, 0.022817460317460316, ["mov     rax, [rsp+158h+compar]", "mov     rsi, [rsp+158h+entry]; entry", "mov     rdi, rdx; table", "mov     [rsp+158h+oldaddr], rdx", "mov     rax, [rax+78h]", "mov     qword ptr [rsp+158h+var_D8], rax", "call    hash_lookup", "test    rax, rax", "mov     rdx, [rsp+158h+oldaddr]", "jz      loc_B96D"], ["mov~rax,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,rdx", "mov~[rsp+0],rdx", "mov~rax,[rax+0]", "mov~[word ptr [rsp+0],rax", "call~FOO", "test~rax,rax", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, -1, 0.00031746031746031746, ["jmp     loc_B5F0"], ["jmp~FOO"]], [0, 0, 83, 0, 0, 1, 0, 0, 11, -1, 0.0049404761904761904, ["mov     [rsi+70h], ax"], ["mov~[rsi+0],ax"]], [0, 0, 166, 0, 0, 1, 0, 0, 24, 17, 0.01001984126984127, ["mov     r12, [rax+8]"], ["mov~r12,[rax+0]"]], [0, 0, 175, 0, 0, 2, 1, 1, 11, 17, 0.014583333333333334, ["test    bl, bl", "jz      short loc_B54B"], ["test~bl,bl", "jz~FOO"]], [1, 0, 166, 0, 0, 4, 0, 0, 17, 19, 0.0049950396825396825, ["lea     rax, CSWTCH_53", "mov     eax, [rax+rdx*4]", "mov     [r13+90h], eax", "mov     eax, 2"], ["lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[r13+0],eax", "mov~eax,0"]], [0, 0, 166, 0, 0, 2, 0, 1, 30, 17, 0.009682539682539683, ["mov     r12, [rsp+158h+var_B8]", "jmp     loc_B132"], ["mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 174, 0, 0, 2, 1, 1, 12, 17, 0.0007738095238095238, ["test    bpl, bpl", "jz      short loc_B54B"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 18, 18, 0.025694444444444443, ["mov     [r13+0A8h], rax"], ["mov~[r13+0],rax"]], [2, 0, 166, 0, 0, 3, 0, 1, 17, 19, 0.0049950396825396825, ["mov     dword ptr [r13+90h], 0", "mov     eax, 2", "jmp     loc_AF3C"], ["mov~[word ptr [r13+0],0", "mov~eax,0", "jmp~FOO"]], [2, 0, 166, 0, 0, 3, 0, 1, 18, 19, 0.0024057539682539684, ["mov     dword ptr [r13+90h], 0", "mov     eax, 1", "jmp     loc_AF3C"], ["mov~[word ptr [r13+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 166, 0, 0, 5, 0, 1, 18, 0, 0.0024057539682539684, ["lea     rax, CSWTCH_53", "mov     eax, [rax+rdx*4]", "mov     [r13+90h], eax", "mov     eax, 1", "jmp     loc_AF3C"], ["lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[r13+0],eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 172, 0, 0, 2, 0, 1, 2, 16, 0.006646825396825397, ["cmp     qword ptr [sp_0+40h], 0", "jz      loc_B920"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 19, -1, 9.92063492063492e-05, ["mov     r12, rbx"], ["mov~r12,rbx"]], [0, 0, 9, 0, 2, 5, 1, 3, 18, -1, 0.0016468253968253967, ["call    _closedir", "mov     rdi, r12; ptr", "call    free", "test    rbx, rbx", "jz      loc_B5F0"], ["call~FOO", "mov~rdi,r12", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 173, 0, 1, 4, 0, 1, 13, 17, 0.0, ["call    ___errno_location", "mov     rcx, [rsp+158h+compar]", "mov     eax, [rax]", "mov     [rcx+40h], eax"], ["call~FOO", "mov~rcx,<TAG>", "mov~eax,<TAG>", "mov~[rcx+0],eax"]], [1, 0, 166, 0, 0, 2, 0, 1, 10, 11, 0.009067460317460318, ["cmp     byte ptr [rax+14h], 0", "jz      short loc_B359"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 9, 10, 0.009424603174603174, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jz      loc_B348"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [0, 0, 166, 0, 1, 6, 1, 2, 16, 18, 0.07863095238095238, ["xor     edx, edx; follow", "mov     rsi, r13; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [r13+70h], ax", "jmp     loc_AF43"], ["xor~edx,edx", "mov~rsi,r13", "mov~rdi,sp_0", "call~FOO", "mov~[r13+0],ax", "jmp~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 11, 10, 0.0014285714285714286, ["cmp     word ptr [rax+14h], 2Eh ; '.'", "jnz     loc_AFC6"], ["cmp~[ord ptr [rax+0],0", "jnz~FOO"]], [2, 0, 166, 0, 0, 4, 0, 0, 17, 1, 0.005942460317460318, ["mov     eax, 0Bh", "cmp     edx, 0Bh", "mov     [r13+70h], ax", "jbe     loc_BD23"], ["mov~eax,0", "cmp~edx,0", "mov~[r13+0],ax", "jbe~FOO"]], [0, 0, 166, 0, 0, 2, 0, 0, 18, 16, 0.05376984126984127, ["mov     rax, [rsp+158h+tail]", "mov     [rax+10h], r13"], ["mov~rax,[rsp+0]", "mov~[rax+0],r13"]], [0, 0, 166, 0, 0, 2, 0, 1, 11, 14, 0.008353174603174604, ["mov     r13, [rsp+158h+tail]", "jmp     loc_AF7C"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [0, 0, 170, 0, 1, 2, 0, 1, 14, 16, 0.0, ["call    _close", "mov     eax, [sp_0+48h]"], ["call~FOO", "mov~eax,[sp_0+0]"]], [0, 0, 82, 0, 0, 4, 1, 1, 9, -1, 0.011904761904761904, ["mov     sp_0, [rsp+158h+compar]", "mov     rdi, [rbx+18h]; dirp", "test    rdi, rdi", "jz      break_without_closedir"], ["mov~sp_0,<TAG>", "mov~rdi,[rbx+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 79, 0, 0, 4, 1, 1, 9, -1, 0.029047619047619048, ["mov     rax, [sp_0+8]", "mov     rcx, [sp_0+20h]", "test    rax, rax", "jz      short loc_B798"], ["mov~rax,[sp_0+0]", "mov~rcx,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 80, 0, 0, 2, 0, 1, 8, -1, 0.18154761904761904, ["cmp     [rsp+158h+doadjust], 0", "jnz     loc_B759"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 80, 0, 1, 4, 0, 2, 10, -1, 0.005525793650793651, ["call    _closedir", "cmp     [rsp+158h+doadjust], 0", "mov     qword ptr [rbx+18h], 0", "jz      loc_B18B"], ["call~FOO", "cmp~[rsp+0],0", "mov~[word ptr [rbx+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 19, -1, 7.936507936507937e-05, ["jmp     loc_B5F0"], ["jmp~FOO"]], [0, 0, 78, 0, 0, 1, 0, 0, 10, -1, 0.009761904761904762, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 82, 0, 0, 1, 0, 0, 23, -1, 0.013015873015873015, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 166, 1, 0, 3, 0, 0, 20, 14, 0.10547619047619047, ["add     nitems, 1", "cmp     [rsp+158h+max_entries], nitems", "jbe     loc_B178"], ["add~nitems,0", "cmp~[rsp+0],nitems", "jbe~FOO"]], [2, 0, 6, 0, 1, 6, 0, 2, 2, -1, 0.0002380952380952381, ["mov     rbx, [rsp+158h+compar]", "mov     rdi, [rbx+18h]; dirp", "call    _closedir", "cmp     [rsp+158h+type], 3", "mov     qword ptr [rbx+18h], 0", "jz      loc_BB70"], ["mov~rbx,<TAG>", "mov~rdi,[rbx+0]", "call~FOO", "cmp~[rsp+0],0", "mov~[word ptr [rbx+0],0", "jz~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 12, 13, 0.06373015873015873, ["mov     [rsp+158h+tail], r13"], ["mov~[rsp+0],r13"]], [0, 0, 81, 0, 0, 2, 0, 0, 7, -1, 0.17665674603174603, ["mov     r12, [rsp+158h+head]", "mov     r15, sp_0"], ["mov~r12,[rsp+0]", "mov~r15,sp_0"]], [0, 0, 166, 0, 0, 4, 1, 1, 6, 12, 0.2441468253968254, ["mov     rax, [rsp+158h+compar]", "mov     r13, [rax+18h]", "test    r13, r13", "jz      loc_B178"], ["mov~rax,<TAG>", "mov~r13,[rax+0]", "test~r13,r13", "jz~FOO"]], [0, 0, 78, 0, 0, 4, 0, 1, 11, -1, 0.00890873015873016, ["mov     rdx, [rax+30h]", "lea     rsi, [rax+108h]", "cmp     rdx, rsi", "jz      short loc_B7E0"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 78, 2, 0, 7, 1, 1, 12, -1, 0.0029365079365079364, ["sub     rdx, [rax+38h]", "mov     [rax+38h], rcx", "add     rdx, rcx", "mov     [rax+30h], rdx", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_B770"], ["sub~rdx,[rax+0]", "mov~[rax+0],rcx", "add~rdx,rcx", "mov~[rax+0],rdx", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 78, 0, 0, 4, 1, 1, 12, -1, 0.0025, ["mov     [rax+38h], rcx", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_B770"], ["mov~[rax+0],rcx", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 15, -1, 0.0, ["mov     esi, 6", "mov     [rcx+70h], si", "jmp     loc_BB84"], ["mov~esi,0", "mov~[rcx+0],si", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 14, -1, 0.0030753968253968253, ["jmp     loc_B5F0"], ["jmp~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 13, -1, 0.0014682539682539682, ["jmp     short loc_B798"], ["jmp~FOO"]], [1, 0, 66, 0, 0, 2, 1, 1, 9, -1, 0.1733829365079365, ["test    byte ptr [sp_0+48h], 4", "jz      short loc_B1B0"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 11, -1, 0.0289484126984127, ["cmp     qword ptr [rax+58h], 0", "js      loc_B18B"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [0, 0, 65, 0, 0, 3, 0, 1, 10, -1, 0.008095238095238095, ["mov     rax, [rsp+158h+len]", "cmp     [sp_0+30h], rax", "jz      short loc_B1A2"], ["mov~rax,[rsp+0]", "cmp~[sp_0+0],rax", "jz~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 11, -1, 0.0019742063492063492, ["test    nitems, nitems", "jnz     short loc_B1A8"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 63, 1, 0, 1, 0, 0, 11, -1, 0.0019742063492063492, ["sub     [rsp+158h+cp], 1"], ["sub~[rsp+0],0"]], [0, 0, 73, 0, 0, 2, 0, 1, 10, -1, 0.023214285714285715, ["mov     rax, head_0", "jmp     short loc_B7A3"], ["mov~rax,head_0", "jmp~FOO"]], [0, 0, 11, 0, 0, 6, 0, 1, 10, -1, 0.018700396825396825, ["mov     r15, sp_0", "mov     sp_0, rax", "mov     rax, [rsp+158h+p_saved_errno]", "mov     r12, [rsp+158h+head]", "mov     r13d, [rax]", "jmp     mem1"], ["mov~r15,sp_0", "mov~sp_0,rax", "mov~rax,[rsp+0]", "mov~r12,[rsp+0]", "mov~r13d,<TAG>", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 0, 12, -1, 0.0036904761904761906, ["mov     rax, [rsp+158h+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 61, 0, 0, 2, 0, 1, 10, -1, 0.16604166666666667, ["cmp     [rsp+158h+dp], 0", "jnz     short loc_B1EF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 1, 166, 0, 0, 2, 1, 1, 8, 10, 0.13110119047619048, ["test    byte ptr [sp_0+48h], 20h", "jnz     short loc_AFC6"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 11, -1, 0.03636904761904762, ["cmp     [rsp+158h+descend], 0", "jz      short loc_B1EF"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 12, -1, 0.03380952380952381, ["cmp     [rsp+158h+type], 1", "jz      short loc_B1CB"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 58, 0, 0, 2, 1, 1, 13, -1, 0.0006746031746031745, ["test    nitems, nitems", "jnz     short loc_B1F8"], ["test~nitems,nitems", "jnz~FOO"]], [0, 0, 176, 0, 1, 5, 1, 2, 1, 17, 0.003472222222222222, ["mov     sp_0, dp_0; dirp", "call    _dirfd", "test    eax, eax", "mov     [rsp+158h+dir_fd], eax", "js      loc_B5D0"], ["mov~sp_0,dp_0", "call~FOO", "test~eax,eax", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 55, 0, 1, 4, 1, 1, 14, -1, 0.012232142857142856, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "setnz   al"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al"]], [3, 0, 11, 0, 1, 9, 0, 1, 12, -1, 0.000376984126984127, ["mov     rdi, oldaddr_0; ptr", "mov     r12, [rsp+158h+head]", "mov     r15, sp_0", "call    free", "mov     rax, [rsp+158h+p_saved_errno]", "mov     sp_0, r13", "mov     qword ptr [sp_0+20h], 0", "mov     r13d, 24h ; '$'", "mov     dword ptr [rax], 24h ; '$'"], ["mov~rdi,oldaddr_0", "mov~r12,[rsp+0]", "mov~r15,sp_0", "call~FOO", "mov~rax,[rsp+0]", "mov~sp_0,r13", "mov~[word ptr [sp_0+0],0", "mov~r13d,0", "mov~<TAG>,0"]]], "func_feature": [62, 102, 237, 3, 226, 356, 4, 878, 0.02234, 7, 26], "succs": [[20], [0], [0], [12, 7], [9, 3], [123, 11], [60, 5], [110, 14], [20], [8, 121], [8, 13], [18, 123], [70, 15], [160], [70], [19, 70], [59], [16, 95], [32, 61], [110, 30], [99, 31], [20], [20], [123], [109, 23], [128, 23], [123], [48, 26], [26], [26], [36, 70], [99], [126, 55], [124], [33], [33, 124], [70, 54], [158, 134], [37, 134], [73, 207], [73, 39], [68], [224, 41], [1, 172], [43, 172], [49, 27], [57, 46], [46], [45], [48, 28], [196, 181], [50, 182], [112, 66], [216, 52], [70], [58, 117], [150], [56, 147], [61], [45, 29], [98, 71], [65, 108], [90, 38], [168, 92], [168, 63], [77], [17, 225], [169, 51], [67, 141], [35, 118], [24, 82], [89, 156], [97, 122], [72, 208], [72], [153, 131], [192, 75], [108, 77], [211], [80, 78], [78], [9], [81, 9], [100, 101], [83, 100], [10, 163], [162, 85], [123], [88, 87], [130, 94], [201, 198], [64, 90], [90, 62], [90], [98], [113, 102], [124], [96, 74], [57, 47], [203], [116, 69], [100], [113, 103], [113], [106, 127], [104, 107], [105], [106, 127], [88], [25, 9], [], [174, 110], [129, 155], [112], [21, 191], [114, 21], [69], [126], [4, 143], [91, 199], [199, 119], [162, 86], [74, 124], [161, 139], [123], [123], [123], [123], [9], [138, 132], [156], [153, 170], [137], [199], [133, 135], [136, 133], [133, 93], [154, 142], [137], [], [40, 73], [140, 6], [154, 186], [9], [145, 79], [79], [146, 148], [146], [150], [84, 223], [125], [127], [219, 76], [170], [164, 165], [105, 151], [125], [174], [157, 111], [44], [44, 159], [], [160], [162], [177, 173], [188, 164], [120], [189, 166], [171, 92], [124], [192], [134], [115, 175], [176], [134], [115, 183], [167], [176], [176], [176], [2, 22], [51], [124, 181], [115], [187, 190], [184, 53], [167], [53, 190], [178, 179], [120], [201], [21], [194, 195], [197, 215], [193, 210], [193, 210], [124], [204], [202], [201, 202], [34, 124], [203], [194], [152, 202], [205, 206], [204, 215], [209, 204], [73], [124], [215], [218, 212], [144, 210], [213, 214], [217, 214], [217], [211], [59], [218], [220, 141], [185, 53], [221, 141], [42, 222], [42, 6], [200, 180], [68], [59]], "fname": "fts_build", "n_num": 226}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 73, 0, 0, 5, 0, 1, 0, 0, 0.11928864569083447, ["mov     rax, [sp_0+30h]", "mov     rdi, [sp_0+20h]; ptr", "lea     rsi, [rax+r12+100h]; size", "cmp     rax, rsi", "ja      loc_C120"], ["mov~rax,[sp_0+0]", "mov~rdi,[sp_0+0]", "lea~rsi,[rax+0]", "cmp~rax,rsi", "ja~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 7, 19, 0.08043775649794802, ["mov     r12d, 1000h", "jmp     loc_BDFD"], ["mov~r12d,0", "jmp~FOO"]], [3, 0, 74, 1, 0, 4, 0, 0, 9, 19, 0.02024623803009576, ["add     r12, 1", "mov     eax, 1000h", "cmp     r12, 1000h", "cmovb   r12, rax"], ["add~r12,0", "mov~eax,0", "cmp~r12,0", "cmovb~r12,rax"]], [0, 0, 25, 0, 0, 1, 0, 0, 26, -1, 0.003419972640218878, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [0, 0, 36, 0, 1, 7, 1, 2, 25, 4, 0.013543091655266758, ["lea     rsi, ds:0[rax*8]; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "mov     r8, [rsp+68h+compar]", "mov     rcx, [rsp+68h+argv]; compar", "jz      loc_C3AE"], ["lea~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rdi,rax", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 62, 0, 1, 6, 2, 2, 17, 10, 0.026744186046511628, ["lea     rdi, [len+110h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jnz     loc_BF0C"], ["lea~rdi,[len+0]", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 17, 11, 0.014090287277701778, ["cmp     byte ptr [v+len-2], 2Fh ; '/'", "jnz     loc_C000"], ["cmp~[yte ptr [v+0],0", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 16, 11, 0.028522571819425444, ["cmp     byte ptr [v+len-1], 2Fh ; '/'", "jz      loc_C090"], ["cmp~[yte ptr [v+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 18, -1, 0.004103967168262654, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 2, 1, 1, 15, -1, 0.06990424076607388, ["test    root, root", "jnz     short loc_C045"], ["test~root,root", "jnz~FOO"]], [0, 0, 62, 0, 1, 4, 1, 2, 16, 10, 0.13399452804377565, ["call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_C020"], ["call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 1, 18, 0, 1, 5, 1, 2, 15, -1, 0.009575923392612859, ["mov     edi, 20h ; ' '; size", "call    _malloc", "test    rax, rax", "mov     [sp_0+58h], rax", "jz      loc_C020"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 16, -1, 0.0012311901504787962, ["jmp     loc_C020"], ["jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.05471956224350205, ["mov     qword ptr [sp_0+0], 0", "jmp     loc_C020"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 71, 0, 1, 5, 1, 2, 9, 17, 0.12270861833105334, ["mov     [sp_0+30h], rsi", "call    _realloc", "test    rax, rax", "mov     r13, rax", "jz      loc_C3A0"], ["mov~[sp_0+0],rsi", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 21, 5, 0.14555403556771546, ["cmp     [rsp+68h+compar], 0", "jz      loc_C149"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 62, 0, 0, 6, 1, 1, 20, 6, 0.17578659370725033, ["mov     rax, [rsp+68h+nitems]", "lea     r8, [rax+1]", "mov     rax, [rsp+68h+argv]", "mov     v, [rax+nitems_0*8]", "test    r15, r15", "jz      loc_C220"], ["mov~rax,[rsp+0]", "lea~r8,[rax+0]", "mov~rax,[rsp+0]", "mov~v,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 0, 22, 4, 0.08618331053351573, ["cmp     nitems_0, 1", "jbe     loc_C149"], ["cmp~nitems_0,0", "jbe~FOO"]], [0, 0, 69, 0, 0, 5, 1, 1, 10, 16, 0.1283173734610123, ["mov     [sp_0+20h], rax", "mov     rax, [rsp+68h+argv]", "mov     r15, [rax]", "test    r15, r15", "jz      loc_C138"], ["mov~[sp_0+0],rax", "mov~rax,[rsp+0]", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 8, 0, 2, 5, 1, 3, 17, -1, 0.005198358413132695, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jz      short loc_C05F"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 16, -1, 0.028590971272229822, ["mov     rdi, [rbx+18h]; dirp", "mov     r13, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_C030"], ["mov~rdi,[rbx+0]", "mov~r13,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 38, 0, 0, 4, 0, 0, 23, 3, 0.08235294117647059, ["cmp     nitems_0, [sp_0+38h]", "mov     rcx, [sp_0+40h]", "mov     rdi, [sp_0+10h]; ptr", "jbe     short loc_C295"], ["cmp~nitems_0,[sp_0+0]", "mov~rcx,[sp_0+0]", "mov~rdi,[sp_0+0]", "jbe~FOO"]], [1, 0, 67, 0, 1, 5, 1, 2, 11, 16, 0.006429548563611491, ["mov     edi, 110h; size", "call    _malloc", "test    rax, rax", "mov     r12, rax", "jz      mem2"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 17, -1, 0.005198358413132695, ["mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jnz     short loc_C042"], ["mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 17, -1, 0.018194254445964432, ["mov     rdi, r12; ptr", "call    free", "mov     r13, [sp_0+20h]"], ["mov~rdi,r12", "call~FOO", "mov~r13,[sp_0+0]"]], [0, 0, 4, 0, 0, 1, 0, 1, 16, -1, 0.0253077975376197, ["jmp     short loc_C05F"], ["jmp~FOO"]], [2, 0, 37, 1, 0, 8, 0, 1, 24, 5, 0.027359781121751026, ["mov     rax, [rsp+68h+nitems]", "mov     rdx, 1FFFFFFFFFFFFFFFh", "mov     [rsp+68h+argv], rcx", "mov     [rsp+68h+compar], nitems_0", "add     rax, 29h", "cmp     rax, rdx", "mov     [sp_0+38h], rax", "ja      loc_C3B2"], ["mov~rax,[rsp+0]", "mov~rdx,0", "mov~[rsp+0],rcx", "mov~[rsp+0],nitems_0", "add~rax,0", "cmp~rax,rdx", "mov~[sp_0+0],rax", "ja~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 12, -1, 0.011354309165526676, ["mov     rdi, r13; ptr", "call    free"], ["mov~rdi,r13", "call~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 10, -1, 0.00506155950752394, ["mov     rdi, sp_0; ptr", "xor     ebp, ebp", "call    free"], ["mov~rdi,sp_0", "xor~ebp,ebp", "call~FOO"]], [1, 0, 2, 0, 2, 4, 0, 3, 9, -1, 0.003009575923392613, ["call    free", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "jmp     mem1"], ["call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 10, -1, 0.00027359781121751026, ["mov     rdi, [sp_0+20h]; ptr", "call    free", "jmp     mem1"], ["mov~rdi,[sp_0+0]", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 1, -1, 0.0003419972640218878, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 16h", "jmp     loc_C07D"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 86, 1, 0, 11, 1, 1, 0, 26, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "test    esi, 0FFFFF000h", "mov     [rsp+68h+argv], argv_0", "mov     [rsp+68h+compar], compar_0", "jnz     loc_C208"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~esi,0", "mov~[rsp+0],argv_0", "mov~[rsp+0],compar_0", "jnz~FOO"]], [2, 0, 85, 0, 0, 5, 1, 1, 1, 25, 0.011354309165526676, ["mov     eax, esi", "mov     ebx, esi", "and     eax, 204h", "cmp     eax, 204h", "jz      loc_C208"], ["mov~eax,esi", "mov~ebx,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 1, 84, 0, 0, 2, 1, 1, 2, 24, 0.02243502051983584, ["test    sil, 12h", "jz      loc_C208"], ["test~sil,<STR>", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 1, 82, 0, 1, 6, 1, 2, 3, 23, 0.03331053351573188, ["mov     esi, 1; size", "mov     edi, 80h; nmemb", "call    _calloc", "test    rax, rax", "mov     rbp, rax", "jz      loc_C07D"], ["mov~esi,0", "mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.005745554035567715, ["lea     rdi, [sp_0+60h]; ir", "mov     esi, 0FFFFFFFFh; default_val", "call    i_ring_init", "jmp     loc_C07D"], ["lea~rdi,[sp_0+0]", "mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 26, 3, 0.0024623803009575923, ["mov     [sp_0+10h], rax"], ["mov~[sp_0+0],rax"]], [2, 0, 62, 1, 0, 3, 0, 1, 18, 12, 0.00560875512995896, ["sub     len, 1", "cmp     len, 1", "jnz     short loc_C090"], ["sub~len,0", "cmp~len,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 24, 2, 0.05471956224350205, ["test    root, root", "jz      short loc_C2B1"], ["test~root,root", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 25, 3, 0.006566347469220246, ["mov     rdx, rdi", "nop     dword ptr [rax]"], ["mov~rdx,rdi", "nop~<TAG>"]], [9, 0, 66, 0, 0, 14, 0, 1, 12, 15, 0.0106703146374829, ["cmp     [rsp+68h+compar], 0", "mov     byte ptr [rax+108h], 0", "mov     qword ptr [rax+60h], 0", "mov     [rax+50h], sp_0", "mov     [rax+38h], r13", "mov     dword ptr [rax+40h], 0", "mov     qword ptr [rax+18h], 0", "mov     dword ptr [rax+72h], 30000h", "mov     qword ptr [rax+20h], 0", "mov     qword ptr [rax+28h], 0", "mov     rax, 0FFFFFFFFFFFFFFFFh", "mov     [r12+58h], rax", "mov     [r12+68h], rax", "jz      loc_C390"], ["cmp~[rsp+0],0", "mov~[yte ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[rax+0],sp_0", "mov~[rax+0],r13", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~rax,0", "mov~[r12+0],rax", "mov~[r12+0],rax", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 19, 11, 0.004924760601915185, ["mov     edi, 110h", "jmp     loc_BEFB"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 31, 1, 0, 5, 1, 1, 26, 2, 0.004103967168262654, ["add     rdx, 8", "mov     [rdx-8], rbx", "mov     rbx, [rbx+10h]", "test    rbx, rbx", "jnz     short loc_C2A0"], ["add~rdx,0", "mov~[rdx-8]+0],rbx", "mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 79, 0, 0, 5, 2, 1, 5, 21, 0.026744186046511628, ["mov     eax, ebx", "and     ah, 0FDh", "or      eax, 4", "mov     [sp_0+48h], eax", "jmp     loc_BDB2"], ["mov~eax,ebx", "and~ah,0", "or~eax,0", "mov~[sp_0+0],eax", "jmp~FOO"]], [1, 0, 81, 0, 0, 4, 1, 1, 4, 22, 0.04377564979480164, ["mov     sp_0, [rsp+68h+compar]", "test    bl, 2", "mov     [sp_0+40h], rax", "jnz     loc_C0B0"], ["mov~sp_0,[rsp+0]", "test~bl,0", "mov~[sp_0+0],rax", "jnz~FOO"]], [2, 0, 64, 0, 0, 6, 2, 1, 12, 14, 0.09712722298221614, ["mov     eax, [sp_0+48h]", "shr     eax, 0Ah", "and     eax, 1", "test    r15, r15", "mov     [rsp+68h+var_42], al", "jz      loc_C147"], ["mov~eax,[sp_0+0]", "shr~eax,0", "and~eax,0", "test~r15,r15", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 65, 0, 0, 3, 1, 1, 11, 15, 0.12722298221614226, ["xor     r12d, r12d", "cmp     [rsp+68h+compar], 0", "jnz     loc_BEB0"], ["xor~r12d,r12d", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 29, 0, 1, 8, 1, 2, 25, 1, 0.047332421340629274, ["mov     edx, 8; size", "mov     rsi, r8; nmemb", "call    _qsort", "mov     rdx, [rsp+68h+nitems]", "mov     rdi, [sp_0+10h]", "test    rdx, rdx", "mov     rbx, [rdi]", "jz      loc_C3F2"], ["mov~edx,0", "mov~rsi,r8", "call~FOO", "mov~rdx,[rsp+0]", "mov~rdi,[sp_0+0]", "test~rdx,rdx", "mov~rbx,<TAG>", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 27, -1, 0.029548563611491108, ["mov     qword ptr [rax+10h], 0", "jmp     loc_C149"], ["mov~[word ptr [rax+0],0", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 0, 1, 26, 0, 0.023392612859097127, ["mov     rax, rbx", "jmp     loc_C2FE"], ["mov~rax,rbx", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 28, -1, 0.006839945280437756, ["mov     rax, [rsp+68h+nitems]", "mov     rax, [rdi+rax*8]"], ["mov~rax,[rsp+0]", "mov~rax,<TAG>"]], [0, 0, 27, 0, 0, 2, 0, 0, 26, -1, 0.013953488372093023, ["mov     rax, rdi", "nop     word ptr [rax+rax+00000000h]"], ["mov~rax,rdi", "nop~[ord ptr [rax+0]"]], [1, 0, 62, 0, 1, 7, 1, 2, 18, 8, 0.14103967168262654, ["xor     edx, edx; follow", "mov     rsi, r14; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "cmp     [rsp+68h+compar], 0", "mov     [r14+70h], ax", "jnz     loc_BFAA"], ["xor~edx,edx", "mov~rsi,r14", "mov~rdi,sp_0", "call~FOO", "cmp~[rsp+0],0", "mov~[r14+0],ax", "jnz~FOO"]], [7, 0, 62, 0, 1, 21, 1, 2, 17, 9, 0.14993160054719562, ["lea     r9, [rax+108h]", "mov     rdx, len; n", "mov     rsi, v; src", "mov     rdi, r9; dest", "call    _memcpy", "mov     r9, rax", "mov     rax, [sp_0+20h]", "test    root, root", "mov     byte ptr [r14+len+108h], 0", "mov     [r14+60h], len", "mov     [r14+50h], sp_0", "mov     dword ptr [r14+40h], 0", "mov     [r14+38h], rax", "mov     qword ptr [r14+18h], 0", "mov     dword ptr [r14+72h], 30000h", "mov     qword ptr [r14+20h], 0", "mov     qword ptr [r14+28h], 0", "mov     qword ptr [r14+58h], 0", "mov     [r14+8], r12", "mov     [r14+30h], r9", "jz      loc_C0C0"], ["lea~r9,[rax+0]", "mov~rdx,len", "mov~rsi,v", "mov~rdi,r9", "call~FOO", "mov~r9,rax", "mov~rax,[sp_0+0]", "test~root,root", "mov~[yte ptr [r14+0],0", "mov~[r14+0],len", "mov~[r14+0],sp_0", "mov~[word ptr [r14+0],0", "mov~[r14+0],rax", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[word ptr [r14+0],0", "mov~[r14+0],r12", "mov~[r14+0],r9", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 18, 9, 0.010533515731874145, ["cmp     [rsp+68h+var_42], 0", "jz      loc_C0C0"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 19, 8, 0.010328317373461012, ["test    root, root", "mov     qword ptr [r14+10h], 0", "jnz     short loc_C108"], ["test~root,root", "mov~[word ptr [r14+0],0", "jnz~FOO"]], [2, 0, 27, 2, 0, 6, 0, 1, 27, -1, 0.010533515731874145, ["mov     rcx, [rax]", "mov     rsi, [rax+8]", "add     rax, 8", "sub     rdx, 1", "mov     [rcx+10h], rsi", "jnz     short loc_C2E0"], ["mov~rcx,<TAG>", "mov~rsi,[rax+0]", "add~rax,0", "sub~rdx,0", "mov~[rcx+0],rsi", "jnz~FOO"]], [2, 0, 62, 1, 0, 2, 1, 0, 15, 11, 0.11785225718194255, ["add     rdi, 110h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size"], ["add~rdi,0", "and~rdi,0"]], [1, 0, 62, 0, 1, 6, 0, 1, 14, 12, 0.14610123119015048, ["mov     rdi, r15; s", "call    _strlen", "cmp     rax, 2", "mov     r13, rax", "mov     rdi, rax", "jbe     loc_BEF0"], ["mov~rdi,r15", "call~FOO", "cmp~rax,0", "mov~r13,rax", "mov~rdi,rax", "jbe~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 15, 12, 0.030232558139534883, ["cmp     [rsp+68h+var_41], 0", "jz      loc_BEF0"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 62, 0, 0, 1, 0, 0, 20, 8, 0.0002051983584131327, ["mov     qword ptr [r14+10h], 0"], ["mov~[word ptr [r14+0],0"]], [3, 0, 62, 0, 0, 5, 0, 1, 19, 8, 0.009165526675786594, ["cmp     [rsp+68h+compar], 0", "mov     ecx, 0Bh", "mov     qword ptr [r14+0A8h], 2", "mov     [r14+70h], cx", "jz      loc_C100"], ["cmp~[rsp+0],0", "mov~ecx,0", "mov~[word ptr [r14+0],0", "mov~[r14+0],cx", "jz~FOO"]], [0, 0, 62, 0, 0, 4, 0, 1, 20, 7, 0.012243502051983584, ["mov     rax, [rsp+68h+tmp]", "mov     [rsp+68h+tmp], r14", "mov     [rax+10h], r14", "jmp     loc_BFB1"], ["mov~rax,[rsp+0]", "mov~[rsp+0],r14", "mov~[rax+0],r14", "jmp~FOO"]], [1, 0, 18, 0, 1, 9, 2, 2, 15, -1, 0.07127222982216141, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "test    rax, rax", "mov     [sp_0+58h], rax", "jnz     loc_C1E2"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jnz~FOO"]], [10, 0, 21, 0, 0, 17, 1, 1, 14, -1, 0.09466484268125855, ["mov     rdx, [sp_0+20h]", "test    dword ptr [sp_0+48h], 102h", "mov     byte ptr [rax+108h], 0", "mov     qword ptr [rax+60h], 0", "mov     [rax+50h], sp_0", "mov     dword ptr [rax+40h], 0", "mov     [rax+38h], rdx", "mov     edx, 3", "mov     qword ptr [rax+18h], 0", "mov     qword ptr [rax+20h], 0", "mov     qword ptr [rax+28h], 0", "mov     [sp_0+0], rax", "mov     [rax+10h], root", "mov     dword ptr [rax+70h], 9", "mov     [rax+74h], dx", "mov     qword ptr [rax+58h], 1", "jnz     loc_C310"], ["mov~rdx,[sp_0+0]", "test~[word ptr [sp_0+0],0", "mov~[yte ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[rax+0],sp_0", "mov~[word ptr [rax+0],0", "mov~[rax+0],rdx", "mov~edx,0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "mov~[sp_0+0],rax", "mov~[rax+0],root", "mov~[word ptr [rax+0],0", "mov~[rax+0],dx", "mov~[word ptr [rax+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 1, 1, 0, 12, -1, 0.05581395348837209, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [5, 0, 62, 0, 0, 9, 3, 1, 13, 13, 0.10725034199726402, ["shr     ebx, 0Bh", "mov     [rsp+68h+tmp], 0", "mov     [rsp+68h+nitems], 0", "xor     ebx, 1", "mov     eax, ebx", "xor     ebx, ebx", "and     eax, 1", "mov     [rsp+68h+var_41], al", "jmp     loc_BFD1"], ["shr~ebx,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,0", "mov~eax,ebx", "xor~ebx,ebx", "and~eax,0", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 13, 14, 0.00533515731874145, ["mov     [rsp+68h+var_42], 1", "jmp     loc_BEC6"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 78, 0, 0, 5, 1, 1, 6, 20, 0.07414500683994528, ["mov     r13, [rsp+68h+argv]", "mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "mov     rdi, [r13+0]; s", "test    rdi, rdi", "jz      loc_C348"], ["mov~r13,[rsp+0]", "mov~[word ptr [sp_0+0],0", "mov~rdi,[r13+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 62, 0, 0, 1, 0, 0, 21, 13, 0.02749658002735978, ["mov     [rsp+68h+nitems], nitems_0"], ["mov~[rsp+0],nitems_0"]], [1, 0, 23, 0, 1, 4, 1, 2, 13, -1, 0.16265389876880984, ["mov     edi, 110h; size", "call    _malloc", "test    rax, rax", "jz      loc_C3E5"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 24, 0, 1, 4, 0, 2, 25, -1, 0.013132694938440492, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "jmp     loc_C149"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [4, 0, 6, 1, 0, 6, 3, 1, 17, -1, 0.03556771545827633, ["mov     esi, eax", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags", "test    ah, 2", "jnz     short loc_C3D0"], ["mov~esi,eax", "shl~esi,0", "and~esi,0", "or~esi,0", "test~ah,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.057455540355677154, ["mov     eax, [sp_0+48h]", "test    eax, 204h", "jz      loc_C358"], ["mov~eax,[sp_0+0]", "test~eax,0", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 1, 18, -1, 0.009165526675786594, ["lea     rdi, dir+1; file", "xor     eax, eax", "call    open_safer"], ["lea~rdi,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 19, -1, 0.01012311901504788, ["test    eax, eax", "mov     [sp_0+28h], eax", "jns     loc_C1F0"], ["test~eax,eax", "mov~[sp_0+0],eax", "jns~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 18, -1, 0.009165526675786594, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "jmp     short loc_C37C"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 20, -1, 0.0, ["or      dword ptr [sp_0+48h], 4", "jmp     loc_C1F0"], ["or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 18, -1, 0.0005471956224350205, ["mov     rbx, r13"], ["mov~rbx,r13"]], [0, 0, 62, 0, 0, 2, 0, 0, 19, 7, 0.1399452804377565, ["mov     [r14+10h], root", "mov     rbx, r14"], ["mov~[r14+0],root", "mov~rbx,r14"]], [0, 0, 79, 0, 0, 1, 0, 0, 5, 21, 0.026744186046511628, ["mov     [sp_0+48h], ebx"], ["mov~[sp_0+0],ebx"]], [0, 0, 62, 0, 0, 3, 0, 1, 20, 7, 0.004035567715458276, ["mov     root, r14", "mov     [rsp+68h+tmp], r14", "jmp     loc_BFB1"], ["mov~root,r14", "mov~[rsp+0],r14", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 0, 7, 21, 0.002188782489740082, ["xor     r12d, r12d", "xchg    ax, ax"], ["xor~r12d,r12d", "xchg~ax,ax"]], [0, 0, 8, 0, 1, 2, 0, 1, 16, -1, 0.001094391244870041, ["mov     rdi, rax; state", "call    cycle_check_init"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 76, 1, 1, 7, 1, 2, 8, 20, 0.011354309165526676, ["call    _strlen", "cmp     r12, rax", "cmovb   r12, rax", "add     r13, 8", "mov     rdi, [r13+0]", "test    rdi, rdi", "jnz     short loc_BDD0"], ["call~FOO", "cmp~r12,rax", "cmovb~r12,rax", "add~r13,0", "mov~rdi,[r13+0]", "test~rdi,rdi", "jnz~FOO"]]], "func_feature": [29, 51, 91, 0, 87, 133, 1, 366, 0.04129, 4, 11], "succs": [[29, 14], [0], [0], [73], [3, 38], [8, 55], [5, 39], [5, 6], [9], [25, 20], [9, 55], [9, 85], [9], [9], [18, 30], [72, 17], [71, 15], [72, 21], [48, 22], [24, 80], [19, 23], [40, 26], [42, 27], [24, 80], [27], [24], [73, 4], [28], [35], [28], [28], [35], [33, 31], [34, 31], [36, 31], [], [35, 46], [35], [40], [43, 6], [41, 49], [44], [69, 47], [10], [49, 44], [70], [82, 45], [67, 68], [67, 47], [51, 53], [72], [50], [50], [58], [57, 81], [56, 54], [54, 63], [64, 83], [58, 52], [10], [59, 61], [59, 7], [64], [81, 62], [16], [75, 12], [65, 11], [72], [60], [68], [1, 84], [60], [66, 13], [72], [76, 78], [74, 37], [77], [37, 79], [77], [37], [20], [16], [70], [16], [86], [75], [2, 86]], "fname": "rpl_fts_open", "n_num": 87}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 29, 0, 0, 4, 1, 1, 0, 0, 0.03982930298719772, ["mov     rdi, [rbx+18h]; dirp", "mov     r12, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_C460"], ["mov~rdi,[rbx+0]", "mov~r12,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 1, 11, 0.17069701280227598, ["mov     rbx, [sp_0+8]", "test    rbx, rbx", "jnz     short loc_C475"], ["mov~rbx,[sp_0+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 29, 0, 0, 1, 0, 0, 4, 12, 0.002844950213371266, ["mov     rbx, r12"], ["mov~rbx,r12"]], [0, 0, 3, 0, 1, 1, 0, 1, 11, 2, 0.0, ["call    hash_free"], ["call~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 10, 2, 0.05867709815078236, ["test    rdi, rdi", "jz      short loc_C505"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 13, 0, 1, 3, 0, 2, 6, 7, 0.004623044096728307, ["call    ___errno_location", "mov     r12d, [rax]", "jmp     loc_C4BB"], ["call~FOO", "mov~r12d,<TAG>", "jmp~FOO"]], [0, 0, 15, 0, 1, 3, 1, 2, 5, 8, 0.011379800853485065, ["call    _close", "test    eax, eax", "jz      loc_C4B8"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 38, 0, 0, 7, 1, 1, 0, 12, 0.0, ["push    r12", "push    rbp", "mov     rbp, sp_0", "push    rbx", "mov     sp_0, [sp_0]", "test    rdi, rdi", "jz      short loc_C450"], ["push~r12", "push~rbp", "mov~rbp,sp_0", "push~rbx", "mov~sp_0,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 11, 1, 0.05120910384068279, ["mov     rdi, sp_0; ptr", "call    free", "test    r12d, r12d", "jnz     loc_C5B6"], ["mov~rdi,sp_0", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 10, 2, 0.03520625889046942, ["call    free", "jmp     short loc_C505"], ["call~FOO", "jmp~FOO"]], [1, 0, 37, 0, 0, 3, 0, 0, 1, 14, 0.004267425320056899, ["cmp     qword ptr [p+58h], 0", "mov     rbx, p", "jns     short loc_C42F"], ["cmp~[word ptr [p+0],0", "mov~rbx,p", "jns~FOO"]], [0, 0, 32, 0, 0, 1, 0, 1, 2, 13, 0.023470839260312945, ["jmp     short loc_C448"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 12, -1, 0.0, ["mov     eax, r12d", "pop     rbx", "pop     sp_0", "pop     r12", "retn"], ["mov~eax,r12d", "pop~rbx", "pop~sp_0", "pop~r12", "retn"]], [1, 0, 1, 0, 1, 4, 0, 2, 12, 0, 0.0, ["call    ___errno_location", "mov     [rax], r12d", "mov     r12d, 0FFFFFFFFh", "jmp     loc_C516"], ["call~FOO", "mov~<TAG>,r12d", "mov~r12d,0", "jmp~FOO"]], [0, 0, 15, 0, 2, 7, 1, 3, 6, 7, 0.027382645803698438, ["call    ___errno_location", "mov     edi, [sp_0+28h]; fd", "mov     r12d, [rax]", "mov     rbx, rax", "call    _close", "test    r12d, r12d", "jnz     loc_C4BB"], ["call~FOO", "mov~edi,[sp_0+0]", "mov~r12d,<TAG>", "mov~rbx,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 19, 0, 1, 4, 1, 2, 5, 8, 0.05689900426742532, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_C58A"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 24, 0, 2, 7, 1, 3, 3, 9, 0.23897581792318637, ["mov     rdi, [sp_0+10h]; ptr", "call    free", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     eax, [sp_0+48h]", "test    ah, 2", "jz      loc_C540"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~ah,0", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 2, 10, 0.1600284495021337, ["jmp     short loc_C48F"], ["jmp~FOO"]], [0, 0, 29, 0, 2, 5, 1, 3, 3, 10, 0.021337126600284497, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      short loc_C48F"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 29, 0, 1, 4, 1, 2, 3, 10, 0.021337126600284497, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jnz     short loc_C472"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, 7, 0.006756756756756757, ["test    eax, eax", "jz      loc_C4BB"], ["test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 1, 3, 0, 2, 3, 13, 0.023826458036984355, ["call    free", "cmp     qword ptr [p+58h], 0", "js      short loc_C448"], ["call~FOO", "cmp~[word ptr [p+0],0", "js~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 2, 14, 0.029871977240398296, ["mov     p, [rdi+10h]", "test    rbx, rbx", "jnz     short loc_C420"], ["mov~p,[rdi+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 4, 15, 0.002844950213371266, ["mov     rdi, p; ptr"], ["mov~rdi,p"]], [1, 0, 36, 0, 1, 4, 0, 1, 3, 13, 0.023826458036984355, ["mov     rbx, [p+8]", "call    free", "cmp     qword ptr [p+58h], 0", "jns     short loc_C42C"], ["mov~rbx,[p+0]", "call~FOO", "cmp~[word ptr [p+0],0", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 8, 7, 0.009246088193456615, ["mov     r12d, [rbx]", "jmp     loc_C4BB"], ["mov~r12d,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 1, 3, 0, 2, 7, 8, 0.006756756756756757, ["call    ___errno_location", "mov     rbx, rax", "jmp     short loc_C5AE"], ["call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 0, 4, 8, 0.09601706970128024, ["mov     edi, [sp_0+2Ch]; fd", "test    edi, edi", "jns     loc_C570"], ["mov~edi,[sp_0+0]", "test~edi,edi", "jns~FOO"]], [0, 0, 16, 0, 1, 4, 1, 2, 6, 8, 0.01884779516358464, ["mov     edi, [sp_0+28h]; fd", "call    _close", "test    eax, eax", "jz      loc_C4B8"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 9, 3, 0.13655761024182078, ["test    dword ptr [sp_0+48h], 102h", "mov     rdi, [sp_0+58h]; ptr", "jz      short loc_C530"], ["test~[word ptr [sp_0+0],0", "mov~rdi,[sp_0+0]", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 1, 0, 5, 7, 0.17105263157894737, ["xor     r12d, r12d"], ["xor~r12d,r12d"]], [1, 0, 20, 0, 0, 2, 1, 1, 4, 8, 0.1386913229018492, ["test    al, 4", "jnz     loc_C4B8"], ["test~al,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.22190611664295876, ["lea     rbx, [sp_0+60h]", "jmp     short loc_C4D4"], ["lea~rbx,[sp_0+0]", "jmp~FOO"]], [0, 0, 31, 0, 1, 2, 0, 1, 3, 12, 0.13229018492176386, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [0, 0, 12, 0, 1, 4, 1, 1, 8, 6, 0.01991465149359886, ["mov     rdi, rbx; ir", "call    i_ring_pop", "test    eax, eax", "jns     short loc_C520"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 12, 0, 1, 4, 1, 2, 7, 5, 0.22475106685633003, ["mov     rdi, rbx; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_C4C8"], ["mov~rdi,rbx", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 12, 0, 1, 3, 0, 2, 9, 6, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_C4D4"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 8, 4, 0.17069701280227598, ["mov     rdi, [sp_0+50h]; table", "test    rdi, rdi", "jz      short loc_C4EE"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 9, 4, 0.0, ["call    hash_free"], ["call~FOO"]]], "func_feature": [23, 21, 51, 0, 39, 61, 2, 121, 0.06056, 0, 0], "succs": [[18, 19], [0, 17], [0], [8], [8, 3], [32], [5, 30], [1, 10], [12, 13], [8], [11, 22], [33], [], [12], [32, 20], [28, 14], [27, 31], [16], [16, 2], [16, 2], [32, 25], [33, 23], [24, 21], [22], [33, 23], [32], [25], [6, 30], [26, 30], [9, 4], [32], [30, 15], [35], [1], [35, 36], [34, 37], [35], [29, 38], [29]], "fname": "rpl_fts_close", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 3, 0, 2, 7, 1, 3, 0, 0, 0.00048729667966124484, ["mov     rdi, rbx; ptr", "xor     ebp, ebp", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "jmp     loc_C740"], ["mov~rdi,rbx", "xor~ebp,ebp", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 7, 3, 0.01735784379620917, ["mov     [sp_0], rbx", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [rbx+58h], 0FFFFFFFFFFFFFFFFh", "jz      loc_CDE3"], ["mov~<TAG>,rbx", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [rbx+0],0", "jz~FOO"]], [0, 1, 172, 0, 0, 4, 1, 1, 1, 3, 0.005645920150557871, ["mov     edx, [sp_0+48h]", "mov     r12, sp_0", "test    dh, 20h", "jnz     loc_C928"], ["mov~edx,[sp_0+0]", "mov~r12,sp_0", "test~dh,<STR>", "jnz~FOO"]], [1, 0, 173, 1, 0, 12, 2, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 60h", "mov     rbp, [sp_0]", "mov     rax, fs:28h", "mov     [rsp+88h+var_30], rax", "xor     eax, eax", "test    rbp, rbp", "jz      loc_C928"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~rbp,rbp", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 11, 6, 0.0015627100416722678, ["test    al, 1", "jnz     loc_C711"], ["test~al,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 7, 0.00774633687323565, ["movzx   eax, word ptr [rbx+72h]", "test    al, 2", "jz      loc_CC00"], ["movzx~eax,[ord ptr [rbx+0]", "test~al,0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 15, 2, 0.0019827933862078236, ["mov     rsi, [p_0+80h]", "cmp     [rax], rsi", "jnz     loc_C740"], ["mov~rsi,[p_0+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 14, 3, 0.002789353407716091, ["mov     rax, [sp_0+58h]", "cmp     qword ptr [rax+10h], 0", "jz      loc_D047"], ["mov~rax,[sp_0+0]", "cmp~[word ptr [rax+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 12, 2, 0.004805753461486759, ["mov     rax, [p_0+8]", "test    rax, rax", "jz      loc_C740"], ["mov~rax,[p_0+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 12, 0, 0, 4, 1, 1, 11, 3, 0.0070125912981135454, ["test    dword ptr [sp_0+48h], 102h", "mov     r13d, 6", "mov     [p_0+70h], r13w", "jnz     loc_CED0"], ["test~[word ptr [sp_0+0],0", "mov~r13d,0", "mov~[p_0+0],r13w", "jnz~FOO"]], [0, 0, 34, 0, 1, 4, 1, 1, 8, 4, 0.001285455034278801, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO"]], [4, 0, 36, 1, 0, 6, 3, 1, 7, 5, 0.0018987767173007126, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 90900h; flags", "test    ah, 2", "jnz     short loc_D050"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jnz~FOO"]], [1, 0, 25, 0, 0, 3, 0, 1, 9, 4, 0.02746784962136488, ["mov     rbx, [p_0+8]", "cmp     qword ptr [parent+68h], 0", "jnz     short loc_CE24"], ["mov~rbx,[p_0+0]", "cmp~[word ptr [parent+0],0", "jnz~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 8, 3, 0.03543262983375902, ["mov     rax, [p_0+0A8h]", "cmp     rax, 2", "jz      loc_CE08"], ["mov~rax,[p_0+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 13, 2, 0.0031254200833445355, ["cmp     qword ptr [rax+58h], 0", "js      loc_C740"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 9, 3, 0.004520096787202581, ["test    eax, eax", "mov     [p_0+44h], eax", "js      short loc_D065"], ["test~eax,eax", "mov~[p_0+0],eax", "js~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 8, 4, 0.001285455034278801, ["mov     edi, [sp_0+2Ch]; fd", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "jmp     short loc_D010"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 171, 0, 0, 5, 0, 1, 2, 3, 0.011224626965990053, ["movzx   eax, word ptr [p_0+74h]", "mov     ecx, 3", "mov     [p_0+74h], cx", "cmp     ax, 1", "jz      loc_C940"], ["movzx~eax,[ord ptr [p_0+0]", "mov~ecx,0", "mov~[p_0+0],cx", "cmp~ax,0", "jz~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 10, 4, 0.0048393601290496035, ["mov     eax, [sp_0+48h]", "and     eax, 18h", "cmp     eax, 18h", "jz      loc_CFCB"], ["mov~eax,[sp_0+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 31, 0, 0, 3, 1, 1, 10, 4, 0.004419276784514048, ["or      word ptr [p_0+72h], 2", "movzx   eax, word ptr [p_0+70h]", "jmp     check_for_dir"], ["or~[ord ptr [p_0+0],0", "movzx~eax,[ord ptr [p_0+0]", "jmp~FOO"]], [1, 0, 21, 0, 1, 7, 1, 2, 12, 6, 6.721333512568894e-05, ["mov     rsi, [rbx+8]; p", "lea     rcx, dir; \"..\"", "mov     edx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_C711"], ["mov~rsi,[rbx+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 14, 3, 0.0024868933996504907, ["mov     rdx, [sp_0+58h]", "cmp     qword ptr [rdx+10h], 0", "jz      loc_D047"], ["mov~rdx,[sp_0+0]", "cmp~[word ptr [rdx+0],0", "jz~FOO"]], [1, 0, 169, 0, 0, 3, 0, 1, 3, 5, 0.016668907111170857, ["cmp     ax, 2", "movzx   ecx, word ptr [p_0+70h]", "jz      loc_C768"], ["cmp~ax,0", "movzx~ecx,[ord ptr [p_0+0]", "jz~FOO"]], [1, 0, 31, 0, 1, 10, 1, 1, 12, 4, 0.01135905363624143, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Fh; candidate", "mov     rbp, p_0", "call    hash_initialize", "mov     [sp_0+58h], rax", "movzx   eax, word ptr [p_0+70h]", "nop     dword ptr [rax+00h]"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "mov~rbp,p_0", "call~FOO", "mov~[sp_0+0],rax", "movzx~eax,[ord ptr [p_0+0]", "nop~[word ptr [rax+0]"]], [1, 0, 35, 0, 0, 5, 1, 1, 11, 5, 0.01300578034682081, ["test    dword ptr [sp_0+48h], 102h", "mov     rax, [sp_0+20h]", "mov     [p_0+38h], rax", "mov     [p_0+30h], rax", "jz      loc_CB50"], ["test~[word ptr [sp_0+0],0", "mov~rax,[sp_0+0]", "mov~[p_0+0],rax", "mov~[p_0+0],rax", "jz~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 4, 6, 0.011560693641618498, ["cmp     cx, 1", "jnz     short next"], ["cmp~cx,0", "jnz~FOO"]], [0, 0, 84, 0, 0, 1, 0, 1, 5, 8, 0.003170228973428328, ["jmp     loc_C930"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 15, 2, 0.0017811533808307569, ["mov     rsi, [p_0+80h]", "cmp     [rdx], rsi", "jnz     loc_C740"], ["mov~rsi,[p_0+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 0, 30, 0, 0, 3, 0, 1, 10, 3, 0.05812833266119998, ["cmp     ax, 0Bh", "mov     [sp_0], p_0", "jz      loc_C890"], ["cmp~ax,0", "mov~<TAG>,p_0", "jz~FOO"]], [3, 0, 31, 2, 1, 15, 0, 2, 9, 4, 0.038350808800466006, ["mov     rax, [p_0+8]", "lea     rsi, [p_0+108h]; src", "mov     rdi, [rax+48h]", "mov     rax, [rax+38h]", "cmp     byte ptr [rax+rdi-1], 2Fh ; '/'", "lea     rdx, [rdi-1]", "cmovz   rdi, rdx", "add     rdi, [sp_0+20h]", "mov     byte ptr [rdi], 2Fh ; '/'", "mov     rax, [p_0+60h]", "add     rdi, 1; dest", "lea     rdx, [rax+1]; n", "call    _memmove", "movzx   eax, word ptr [p_0+70h]", "jmp     check_for_dir"], ["mov~rax,[p_0+0]", "lea~rsi,[p_0+0]", "mov~rdi,[rax+0]", "mov~rax,[rax+0]", "cmp~[yte ptr [rax+0],0", "lea~rdx,[rdi-1]+0]", "cmovz~rdi,rdx", "add~rdi,[sp_0+0]", "mov~<TAG>,0", "mov~rax,[p_0+0]", "add~rdi,0", "lea~rdx,[rax+0]", "call~FOO", "movzx~eax,[ord ptr [p_0+0]", "jmp~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 13, 4, 0.002083613388896357, ["movzx   eax, word ptr [p_0+70h]", "mov     rbp, p_0", "jmp     check_for_dir"], ["movzx~eax,[ord ptr [p_0+0]", "mov~rbp,p_0", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 19, 4, 0.0014114800376394678, ["mov     rsi, [rbx+78h]", "cmp     [rcx+8], rsi", "jnz     loc_C731"], ["mov~rsi,[rbx+0]", "cmp~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 18, 4, 0.0029573867455303135, ["mov     rsi, [rbx+80h]", "cmp     [rcx], rsi", "jnz     loc_C731"], ["mov~rsi,[rbx+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [0, 1, 19, 0, 1, 7, 1, 2, 11, 5, 0.009292243581126496, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+40h], eax", "mov     eax, [sp_0+48h]", "or      ah, 20h", "mov     [sp_0+48h], eax", "jmp     loc_C716"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "mov~eax,[sp_0+0]", "or~ah,<STR>", "mov~[sp_0+0],eax", "jmp~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 10, 6, 0.009762736927006318, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jnz     short loc_CC28"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 1, 7, 1, 2, 12, 3, 0.0010194022494062823, ["mov     rdi, [sp_0+58h]; table", "lea     rsi, [rsp+88h+var_68]; entry", "movdqu  xmm0, xmmword ptr [p_0+78h]", "movaps  [rsp+88h+var_68], xmm0", "call    hash_delete", "test    rax, rax", "jnz     loc_CEEF"], ["mov~rdi,[sp_0+0]", "lea~rsi,[rsp+0]", "movdqu~xmm0,[mmword ptr [p_0+0]", "movaps~[rsp+0],xmm0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 1, 1, 11, 3, 0.0069005690729040635, ["test    eax, 102h", "jnz     loc_D025"], ["test~eax,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 16, 2, 0.0008737733566339562, ["mov     rsi, [p_0+78h]", "cmp     [rdx+8], rsi", "jnz     loc_C740"], ["mov~rsi,[p_0+0]", "cmp~[rdx+0],rsi", "jnz~FOO"]], [1, 1, 21, 0, 1, 9, 2, 2, 10, 3, 0.01980552941703634, ["xor     edx, edx; follow", "mov     rsi, p_0; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     edx, [p_0+90h]", "mov     [p_0+70h], ax", "and     edx, 0F000h", "cmp     edx, 4000h", "jnz     loc_CA3E"], ["xor~edx,edx", "mov~rsi,p_0", "mov~rdi,sp_0", "call~FOO", "mov~edx,[p_0+0]", "mov~[p_0+0],ax", "and~edx,<STR>", "cmp~edx,0", "jnz~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 11, 4, 0.0024532867320876464, ["mov     esi, [sp_0+2Ch]; dir_fd", "mov     rdi, parent; p", "call    leaf_optimization_0", "cmp     eax, 2", "jnz     loc_CE24"], ["mov~esi,[sp_0+0]", "mov~rdi,parent", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 8, 4, 0.023726307299368195, ["cmp     qword ptr [p_0+58h], 0", "jnz     short loc_CA58"], ["cmp~[word ptr [p_0+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.0023860733969619575, ["mov     [sp_0], p_0", "jmp     loc_CA48"], ["mov~<TAG>,p_0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 11, 2, 0.02745664739884393, ["cmp     ax, 1", "jnz     loc_C740"], ["cmp~ax,0", "jnz~FOO"]], [1, 0, 103, 0, 1, 5, 0, 2, 6, 4, 0.009597504144822334, ["mov     [sp_0], p_0", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [p_0+58h], 0", "jz      loc_C958"], ["mov~<TAG>,p_0", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [p_0+0],0", "jz~FOO"]], [0, 0, 103, 0, 0, 3, 1, 1, 5, 5, 0.022622888381054806, ["mov     rbx, [tmp+10h]", "test    rbx, rbx", "jnz     short loc_C640"], ["mov~rbx,[tmp+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 37, 0, 0, 5, 0, 1, 9, 7, 0.017408253797553435, ["mov     rdx, [sp_0+20h]", "mov     rax, [rbx+48h]", "mov     byte ptr [rdx+rax], 0", "cmp     qword ptr [rbx+58h], 0", "jz      loc_CC48"], ["mov~rdx,[sp_0+0]", "mov~rax,[rbx+0]", "mov~<TAG>,0", "cmp~[word ptr [rbx+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 9, 4, 0.0007729533539454228, ["mov     rax, [p_0+78h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p_0+0]", "mov~[sp_0+0],rax"]], [0, 0, 12, 0, 0, 1, 0, 1, 13, 5, 0.0004704933458798226, ["jmp     loc_CA4F"], ["jmp~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 11, 6, 0.00031926334184702245, ["jmp     loc_C711"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 17, 2, 0.0, ["mov     rcx, [rax+78h]", "mov     rax, [rax+80h]", "mov     [rdx+8], rcx", "mov     [rdx], rax", "jmp     loc_C740"], ["mov~rcx,[rax+0]", "mov~rax,[rax+0]", "mov~[rdx+0],rcx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 9, 3, 0.021004167226777795, ["test    dword ptr [sp_0+48h], 102h", "jz      loc_CB20"], ["test~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 14, 4, 0.0009409866917596452, ["jmp     loc_CA58"], ["jmp~FOO"]], [1, 0, 103, 0, 0, 4, 0, 1, 7, 6, 0.007060200743827576, ["movzx   eax, word ptr [p_0+74h]", "mov     tmp, p_0", "cmp     ax, 4", "jnz     loc_CAD0"], ["movzx~eax,[ord ptr [p_0+0]", "mov~tmp,p_0", "cmp~ax,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 4, 0, 1, 12, 3, 0.007796746874579917, ["mov     rsi, [parent+68h]", "lea     rdx, [rsi-1]", "cmp     rdx, 0FFFFFFFFFFFFFFFDh", "ja      short loc_CE6A"], ["mov~rsi,[parent+0]", "lea~rdx,[rsi-1]+0]", "cmp~rdx,0", "ja~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 11, 3, 0.015123000403280011, ["cmp     qword ptr [p_0+58h], 0", "jz      loc_CFBC"], ["cmp~[word ptr [p_0+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 13, 3, 0.0, ["mov     [parent+68h], rdx"], ["mov~[parent+0],rdx"]], [1, 0, 38, 0, 0, 3, 1, 1, 6, 6, 0.0034782900927544025, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      loc_CFEA"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [2, 0, 41, 0, 1, 6, 0, 2, 5, 3, 0.006178025720302908, ["mov     edx, 1; follow", "mov     rsi, p_0; p", "call    fts_stat", "cmp     ax, 1", "mov     [p_0+70h], ax", "jz      loc_CD0A"], ["mov~edx,0", "mov~rsi,p_0", "call~FOO", "cmp~ax,0", "mov~[p_0+0],ax", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 10, 4, 0.0078079490971008645, ["mov     ebx, [p_0+40h]", "test    ebx, ebx", "jz      short loc_CD7B"], ["mov~ebx,[p_0+0]", "test~ebx,ebx", "jz~FOO"]], [0, 1, 17, 0, 0, 3, 1, 1, 9, 3, 0.009757135815745844, ["mov     eax, [sp_0+48h]", "test    ah, 20h", "jnz     loc_C928"], ["mov~eax,[sp_0+0]", "test~ah,<STR>", "jnz~FOO"]], [2, 0, 15, 0, 0, 4, 1, 1, 14, 5, 0.01045167361204463, ["mov     edx, 6", "test    eax, 102h", "mov     [rbx+70h], dx", "jnz     loc_CD20"], ["mov~edx,0", "test~eax,0", "mov~[rbx+0],dx", "jnz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 13, 5, 0.012568893668503832, ["mov     esi, [rbx+40h]", "test    esi, esi", "jz      loc_CC60"], ["mov~esi,[rbx+0]", "test~esi,esi", "jz~FOO"]], [1, 0, 152, 0, 0, 2, 0, 1, 5, 6, 0.009516288031545458, ["cmp     cx, 1", "jnz     next"], ["cmp~cx,0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 13, 2, 0.003495093426535825, ["cmp     ax, 1", "jnz     loc_C740"], ["cmp~ax,0", "jnz~FOO"]], [1, 0, 164, 0, 0, 3, 0, 0, 4, 4, 0.01051888694717032, ["lea     eax, [rcx-0Ch]", "cmp     ax, 1", "jbe     loc_C860"], ["lea~eax,[rcx-0Ch]+0]", "cmp~ax,0", "jbe~FOO"]], [1, 0, 7, 0, 1, 5, 1, 2, 10, 3, 0.011829546982121254, ["mov     edi, 18h; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_CCF8"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 73, 0, 0, 3, 0, 1, 6, 4, 0.01581473764394856, ["mov     rbx, [tmp+8]", "cmp     qword ptr [rbx+18h], 0", "jnz     loc_CE90"], ["mov~rbx,[tmp+0]", "cmp~[word ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 15, 4, 0.006586906842317516, ["mov     rdx, [rbx+8]", "test    rdx, rdx", "jz      loc_C731"], ["mov~rdx,[rbx+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 10, 2, 0.0004704933458798226, ["call    ___errno_location", "mov     eax, [rax]", "mov     r14d, 7", "mov     [p_0+70h], r14w", "mov     [p_0+40h], eax", "mov     [sp_0], p_0", "jmp     loc_C740"], ["call~FOO", "mov~eax,<TAG>", "mov~r14d,0", "mov~[p_0+0],r14w", "mov~[p_0+0],eax", "mov~<TAG>,p_0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, 2, 0.0028229600752789357, ["cmp     ax, 1", "jnz     loc_C740"], ["cmp~ax,0", "jnz~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 6, 2, 0.0036743289868709952, ["cmp     ax, 0Bh", "mov     [sp_0], p_0", "jnz     loc_C740"], ["cmp~ax,0", "mov~<TAG>,p_0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 16, 4, 0.005276246807366582, ["cmp     qword ptr [rdx+58h], 0", "js      loc_C731"], ["cmp~[word ptr [rdx+0],0", "js~FOO"]], [0, 0, 32, 0, 1, 4, 0, 2, 8, 5, 0.0034978939821660618, ["mov     rdi, tmp; ptr", "mov     tmp, rbx", "call    free", "jmp     name"], ["mov~rdi,tmp", "mov~tmp,rbx", "call~FOO", "jmp~FOO"]], [2, 0, 72, 0, 1, 10, 1, 2, 7, 4, 0.0039347806604830395, ["mov     rax, [p_0+48h]", "mov     rdx, [sp_0+20h]", "mov     esi, 3; type", "mov     [sp_0], p_0", "mov     rdi, sp_0; sp_0", "mov     byte ptr [rdx+rax], 0", "call    fts_build", "test    rax, rax", "mov     p_0, rax", "jz      short loc_CF29"], ["mov~rax,[p_0+0]", "mov~rdx,[sp_0+0]", "mov~esi,0", "mov~<TAG>,p_0", "mov~rdi,sp_0", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~p_0,rax", "jz~FOO"]], [0, 0, 20, 0, 1, 3, 0, 2, 9, 6, 0.0, ["mov     edi, [p_0+44h]; fd", "call    _close", "jmp     loc_C7A1"], ["mov~edi,[p_0+0]", "call~FOO", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 1, 1, 8, 6, 0.0070125912981135454, ["test    byte ptr [p_0+72h], 2", "jnz     loc_CE80"], ["test~[yte ptr [p_0+0],0", "jnz~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 7, 4, 0.004077608997625129, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 41, 0, 0, 2, 0, 1, 9, 4, 0.0024868933996504907, ["mov     rbx, [tmp+8]", "jmp     cd_dot_dot"], ["mov~rbx,[tmp+0]", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 17, 5, 0.004100013442667025, ["mov     rcx, [sp_0+58h]", "cmp     qword ptr [rcx+10h], 0", "jz      loc_D047"], ["mov~rcx,[sp_0+0]", "cmp~[word ptr [rcx+0],0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 8, 8, 0.01720661379217637, ["cmp     word ptr [rbx+70h], 0Bh", "jz      loc_D047"], ["cmp~[ord ptr [rbx+0],0", "jz~FOO"]], [0, 0, 35, 0, 0, 6, 1, 1, 12, 7, 0.001646726710579379, ["mov     rdx, [p_0+8]", "mov     rdx, [rdx+30h]", "mov     [p_0+30h], rdx", "mov     p_0, [p_0+10h]", "test    p_0, p_0", "jnz     short loc_C908"], ["mov~rdx,[p_0+0]", "mov~rdx,[rdx+0]", "mov~[p_0+0],rdx", "mov~p_0,[p_0+0]", "test~p_0,p_0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 11, 8, 0.0010082000268853341, ["mov     rax, p_0", "nop     dword ptr [p_0+p_0+00h]"], ["mov~rax,p_0", "nop~[word ptr [p_0+0]"]], [1, 0, 5, 0, 0, 2, 0, 1, 9, 2, 0.004167226777792714, ["cmp     rax, 1", "jz      loc_C740"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 10, -1, 0.0016131200430165346, ["jmp     loc_D047"], ["jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 12, 3, 0.0030582067482188466, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      loc_CCF8"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 6, 0, 1, 9, 0, 2, 11, 2, 0.006032396827530582, ["movdqu  xmm0, xmmword ptr [p_0+78h]", "mov     rsi, rax; entry", "mov     rdi, [sp_0+58h]; table", "mov     [rax+10h], p_0", "movups  xmmword ptr [rax], xmm0", "call    hash_insert", "cmp     rbx, rax", "mov     sp_0, rax", "jz      loc_C740"], ["movdqu~xmm0,[mmword ptr [p_0+0]", "mov~rsi,rax", "mov~rdi,[sp_0+0]", "mov~[rax+0],p_0", "movups~<TAG>,xmm0", "call~FOO", "cmp~rbx,rax", "mov~sp_0,rax", "jz~FOO"]], [1, 0, 33, 0, 1, 6, 0, 2, 14, 6, 0.002218040059147735, ["call    ___errno_location", "mov     eax, [rax]", "mov     r10d, 7", "mov     [p_0+70h], r10w", "mov     [p_0+40h], eax", "jmp     loc_CF16"], ["call~FOO", "mov~eax,<TAG>", "mov~r10d,0", "mov~[p_0+0],r10w", "mov~[p_0+0],eax", "jmp~FOO"]], [0, 0, 35, 0, 0, 3, 1, 1, 13, 7, 0.004402473450732625, ["test    eax, eax", "mov     [p_0+44h], eax", "js      loc_D09B"], ["test~eax,eax", "mov~[p_0+0],eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.01135905363624143, ["mov     rcx, [rsp+88h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     loc_D0B5"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 7, 5, 0.014798135950172514, ["mov     rbx, [r12+8]", "test    rbx, rbx", "jz      loc_CBD0"], ["mov~rbx,[r12+0]", "test~rbx,rbx", "jz~FOO"]], [1, 0, 81, 0, 0, 2, 1, 1, 6, 6, 0.013700318143119594, ["test    dl, 40h", "jz      loc_C8B0"], ["test~dl,0", "jz~FOO"]], [0, 0, 80, 0, 0, 3, 0, 1, 7, 6, 0.0029685889680512614, ["mov     rax, [r12+18h]", "cmp     [p_0+78h], rax", "jz      loc_C8B0"], ["mov~rax,[r12+0]", "cmp~[p_0+0],rax", "jz~FOO"]], [1, 0, 61, 0, 0, 2, 1, 1, 8, 8, 0.0048393601290496035, ["test    dh, 10h", "jnz     loc_CB8A"], ["test~dh,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 0, 12, 4, 0.0, ["mov     r11d, 7", "mov     [p_0+70h], r11w"], ["mov~r11d,0", "mov~[p_0+0],r11w"]], [1, 0, 14, 0, 0, 2, 0, 1, 11, 4, 0.0007393466863825784, ["cmp     word ptr [p_0+70h], 4", "jz      short loc_CD7B"], ["cmp~[ord ptr [p_0+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 13, 2, 5.0410001344266705e-05, ["mov     rax, [r12+10h]", "mov     r8d, 2", "mov     [p_0+70h], r8w", "mov     [p_0+0], rax", "jmp     loc_C740"], ["mov~rax,[r12+0]", "mov~r8d,0", "mov~[p_0+0],r8w", "mov~[p_0+0],rax", "jmp~FOO"]], [0, 0, 36, 0, 1, 5, 1, 2, 12, 8, 0.0012602500336066677, ["mov     edi, [sp_0+2Ch]; fd", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "jmp     loc_CFA7"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [4, 0, 38, 1, 0, 6, 3, 1, 11, 9, 0.0021844333915848908, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 90900h; flags", "test    ah, 2", "jnz     loc_D083"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 20, 4, 0.0, ["mov     rsi, [rdx+78h]", "mov     rdx, [rdx+80h]", "mov     [rcx+8], rsi", "mov     [rcx], rdx", "jmp     loc_C731"], ["mov~rsi,[rdx+0]", "mov~rdx,[rdx+0]", "mov~[rcx+0],rsi", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 30, 0, 0, 4, 1, 1, 11, 7, 0.006116413496437693, ["mov     eax, [sp_0+48h]", "mov     ebp, [rbx+44h]", "test    al, 4", "jnz     short loc_C70A"], ["mov~eax,[sp_0+0]", "mov~ebp,[rbx+0]", "test~al,0", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 8, 5, 0.006556100730384909, ["cmp     ax, 2", "jz      loc_CEFC"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 1, 1, 12, 9, 0.005209033472240893, ["test    ah, 2", "jz      loc_CF3E"], ["test~ah,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 14, 9, 0.00016803333781422234, ["cmp     esi, 0FFFFFF9Ch", "jnz     loc_D047"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 15, 5, 0.0018147600483936013, ["mov     rdi, [sp_0+58h]; table", "lea     rsi, [rsp+88h+entry]; entry", "movdqu  xmm0, xmmword ptr [rbx+78h]", "movaps  [rsp+88h+entry], xmm0", "call    hash_delete", "test    rax, rax", "jz      loc_D047"], ["mov~rdi,[sp_0+0]", "lea~rsi,[rsp+0]", "movdqu~xmm0,[mmword ptr [rbx+0]", "movaps~[rsp+0],xmm0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 1, 7, 1, 2, 12, 3, 0.0011314244746157638, ["mov     rdi, [sp_0+58h]; table", "mov     rsi, rsp; entry", "movdqu  xmm0, xmmword ptr [p_0+78h]", "movaps  [rsp+88h+var_88], xmm0", "call    hash_delete", "test    rax, rax", "jz      loc_D047"], ["mov~rdi,[sp_0+0]", "mov~rsi,rsp", "movdqu~xmm0,[mmword ptr [p_0+0]", "movaps~<TAG>,xmm0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 38, 0, 1, 7, 1, 2, 9, 7, 0.003293453421158758, ["mov     rcx, [p_0+30h]; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, p_0; p", "mov     sp_0, r12; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_CCEA"], ["mov~rcx,[p_0+0]", "mov~edx,0", "mov~rsi,p_0", "mov~sp_0,r12", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 12, 7, 0.000571313348568356, ["cmp     byte ptr [p_0+109h], 0", "jnz     loc_C9C1"], ["cmp~[yte ptr [p_0+0],0", "jnz~FOO"]], [0, 0, 39, 0, 0, 2, 0, 1, 11, 7, 0.0016131200430165346, ["cmp     rbp, rax", "jz      loc_CCD8"], ["cmp~rbp,rax", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 0, 1, 13, 9, 0.0028229600752789357, ["mov     esi, [sp_0+2Ch]; val", "cmp     esi, ebp", "jnz     short loc_C6ED"], ["mov~esi,[sp_0+0]", "cmp~esi,ebp", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 13, 6, 0.0006049200161312004, ["jmp     loc_C9E3"], ["jmp~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 10, 6, 0.0011090200295738675, ["mov     p_0, [sp_0+8]", "jmp     loc_CBEE"], ["mov~p_0,[sp_0+0]", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 13, 2, 0.00020164000537706682, ["mov     rdi, rax; ptr", "call    free", "jmp     loc_C740"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 12, 2, 0.0046041134561096925, ["mov     rdx, [p_0+8]", "test    rdx, rdx", "jz      loc_C740"], ["mov~rdx,[p_0+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 14, 8, 0.0028229600752789357, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_C702"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 36, 0, 1, 7, 2, 2, 10, 6, 0.0025205000672133353, ["call    ___errno_location", "mov     eax, [rax]", "or      word ptr [p_0+72h], 1", "mov     [p_0+40h], eax", "mov     p_0, [sp_0+8]", "test    p_0, p_0", "jz      loc_CBEE"], ["call~FOO", "mov~eax,<TAG>", "or~[ord ptr [p_0+0],0", "mov~[p_0+0],eax", "mov~p_0,[sp_0+0]", "test~p_0,p_0", "jz~FOO"]], [0, 0, 22, 0, 1, 2, 0, 1, 15, 8, 0.0, ["mov     edi, eax; fd", "call    _close"], ["mov~edi,eax", "call~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 11, 2, 0.00010082000268853341, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     loc_C740"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 15, 7, 0.0027557467401532467, ["mov     [sp_0+2Ch], ebp", "mov     ebp, [rbx+44h]"], ["mov~[sp_0+0],ebp", "mov~ebp,[rbx+0]"]], [0, 0, 20, 0, 1, 2, 0, 1, 12, 6, 0.006586906842317516, ["mov     edi, ebp; fd", "call    _close"], ["mov~edi,ebp", "call~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 14, 7, 0.002083613388896357, ["mov     ebp, [rbx+44h]", "jmp     loc_C70A"], ["mov~ebp,[rbx+0]", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 12, 5, 0.00909060357574943, ["mov     eax, [sp_0+48h]"], ["mov~eax,[sp_0+0]"]], [2, 0, 40, 0, 1, 7, 0, 2, 9, 6, 0.0029573867455303135, ["mov     edx, 1; follow", "mov     rsi, p_0; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "cmp     ax, 1", "mov     [p_0+70h], ax", "jz      short loc_CF74"], ["mov~edx,0", "mov~rsi,p_0", "mov~rdi,sp_0", "call~FOO", "cmp~ax,0", "mov~[p_0+0],ax", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 10, 5, 0.019895147197203925, ["mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 32, 0, 0, 4, 0, 1, 10, 5, 0.008603306896088184, ["mov     r9d, 3", "mov     rbp, p_0", "mov     [p_0+74h], r9w", "jmp     name"], ["mov~r9d,0", "mov~rbp,p_0", "mov~[p_0+0],r9w", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 12, 4, 0.018483667159564458, ["cmp     word ptr [rbx+70h], 2", "jz      short loc_C731"], ["cmp~[ord ptr [rbx+0],0", "jz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, 6, 0.002218040059147735, ["jmp     loc_CBEE"], ["jmp~FOO"]], [1, 0, 39, 0, 0, 3, 1, 1, 10, 6, 0.0024196800645248017, ["mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_CF16"], ["mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 1, 1, 14, 6, 0.002218040059147735, ["or      word ptr [p_0+72h], 2", "jmp     loc_CF16"], ["or~[ord ptr [p_0+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.0033774700900658693, ["xor     ebp, ebp", "jmp     loc_C740"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 1, 5, 0, 0, 3, 1, 1, 13, 3, 0.005948380158623472, ["test    ah, 20h", "mov     rbp, rbx", "jnz     loc_C928"], ["test~ah,<STR>", "mov~rbp,rbx", "jnz~FOO"]], [0, 1, 42, 0, 0, 2, 1, 1, 8, 3, 0.0020500067213335125, ["test    byte ptr [sp_0+49h], 20h", "jnz     loc_C928"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 0, 14, 4, 0.00020164000537706682, ["mov     ecx, 7", "mov     [rbx+70h], cx"], ["mov~ecx,0", "mov~[rbx+0],cx"]], [0, 0, 4, 0, 1, 5, 1, 2, 10, 2, 0.0035959134292243584, ["mov     rdi, [sp_0+58h]; state", "lea     rsi, [p_0+78h]; sb", "call    cycle_check", "test    al, al", "jz      loc_C740"], ["mov~rdi,[sp_0+0]", "lea~rsi,[p_0+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 6, 7, 0.005791549043330196, ["cmp     ax, 4", "jnz     loc_C77F"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 2, 16, 4, 0.00020164000537706682, ["mov     rdi, rax; ptr", "call    free", "mov     eax, [sp_0+48h]", "jmp     loc_C731"], ["mov~rdi,rax", "call~FOO", "mov~eax,[sp_0+0]", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 7, 7, 0.0030694089707397946, ["jmp     loc_C797"], ["jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 12, 4, 0.0017475467132679124, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [0, 0, 18, 0, 2, 5, 1, 3, 11, 5, 0.0009913966931039118, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jz      short loc_C7DF"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [0, 0, 18, 0, 1, 4, 1, 2, 11, 5, 0.0009913966931039118, ["mov     rdi, rbx; sp_0", "call    free", "test    r13, r13", "jnz     short loc_C7C2"], ["mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 14, 2, 0.0016635300443608014, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 3, 0, 0, 4, 0, 1, 11, 2, 0.0, ["mov     edi, 2", "mov     [p_0+0], p_0", "mov     [p_0+70h], di", "jmp     loc_C740"], ["mov~edi,0", "mov~[p_0+0],p_0", "mov~[p_0+0],di", "jmp~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 13, 8, 0.0020164000537706683, ["mov     edi, ebp; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_CF5C"], ["mov~edi,ebp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 3, 2, 0.00010082000268853341, ["xor     edx, edx; follow", "mov     rsi, p_0; p", "call    fts_stat", "mov     [p_0+70h], ax", "jmp     loc_C740"], ["xor~edx,edx", "mov~rsi,p_0", "call~FOO", "mov~[p_0+0],ax", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 13, 2, 0.0035287000940986695, ["cmp     qword ptr [rdx+58h], 0", "js      loc_C740"], ["cmp~[word ptr [rdx+0],0", "js~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 16, 2, 0.0009745933593224897, ["mov     rsi, [p_0+78h]", "cmp     [rax+8], rsi", "jnz     loc_C740"], ["mov~rsi,[p_0+0]", "cmp~[rax+0],rsi", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 17, 2, 0.0, ["mov     rcx, [rdx+78h]", "mov     rdx, [rdx+80h]", "mov     [rax+8], rcx", "mov     [rax], rdx", "jmp     loc_C740"], ["mov~rcx,[rdx+0]", "mov~rdx,[rdx+0]", "mov~[rax+0],rcx", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 2, 1, 8, 2, 0.0003864766769727114, ["or      dword ptr [sp_0+48h], 2000h", "xor     ebp, ebp", "jmp     loc_C740"], ["or~[word ptr [sp_0+0],0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 22, 0, 1, 4, 1, 1, 14, 8, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+40h], eax", "or      dword ptr [sp_0+48h], 2000h"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "or~[word ptr [sp_0+0],0"]], [0, 0, 14, 0, 0, 2, 0, 1, 12, 3, 0.0002352466729399113, ["movzx   eax, word ptr [p_0+70h]", "jmp     loc_CA3E"], ["movzx~eax,[ord ptr [p_0+0]", "jmp~FOO"]], [1, 0, 48, 0, 1, 6, 1, 2, 8, 4, 0.021418649460052872, ["mov     esi, 3; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    rax, rax", "mov     [sp_0+8], rax", "jz      loc_CD54"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 46, 0, 1, 4, 1, 2, 7, 3, 0.005326656808710848, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jnz     loc_CF64"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 32, 0, 1, 2, 0, 1, 13, 5, 0.0, ["mov     rdi, rax; state", "call    cycle_check_init"], ["mov~rdi,rax", "call~FOO"]], [0, 1, 33, 0, 1, 5, 1, 2, 12, 5, 0.0014114800376394678, ["mov     edi, 20h ; ' '; size", "call    _malloc", "test    rax, rax", "mov     [sp_0+58h], rax", "jz      short loc_CB6C"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [1, 0, 44, 0, 0, 3, 1, 1, 8, 8, 0.0057467401532464045, ["test    dword ptr [sp_0+48h], 102h", "mov     rdi, [sp_0+58h]; ptr", "jz      loc_CB80"], ["test~[word ptr [sp_0+0],0", "mov~rdi,[sp_0+0]", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 9, 7, 0.0034110767576287135, ["test    rdi, rdi", "jz      short loc_C986"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 41, 0, 1, 1, 0, 1, 10, 7, 0.0, ["call    hash_free"], ["call~FOO"]], [0, 0, 41, 0, 1, 2, 0, 2, 9, 7, 0.00300779674687458, ["call    free", "jmp     loc_C986"], ["call~FOO", "jmp~FOO"]], [1, 0, 54, 0, 0, 3, 1, 1, 9, 8, 0.002722140072590402, ["and     dh, 0EFh", "mov     [r12+48h], edx", "jmp     short loc_CBAD"], ["and~dh,0", "mov~[r12+0],edx", "jmp~FOO"]], [0, 0, 36, 0, 1, 4, 1, 1, 12, 8, 0.0012602500336066677, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO"]], [0, 0, 54, 0, 2, 5, 1, 3, 11, 6, 0.003259846753595914, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jz      short loc_CBC7"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [0, 0, 54, 0, 0, 4, 1, 1, 10, 7, 0.005881166823497782, ["mov     rdi, [rbx+18h]; dirp", "mov     r13, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_CB98"], ["mov~rdi,[rbx+0]", "mov~r13,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 54, 0, 0, 1, 0, 0, 12, 8, 0.00013442667025137788, ["mov     rbx, r13"], ["mov~rbx,r13"]], [0, 0, 54, 0, 1, 4, 1, 2, 11, 6, 0.003259846753595914, ["mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jnz     short loc_CBAA"], ["mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 10, 4, 0.005097011247031411, ["jmp     short loc_C7E8"], ["jmp~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 9, 5, 0.007483084643993368, ["mov     rbx, [sp_0+8]", "test    rbx, rbx", "jnz     short loc_C7C5"], ["mov~rbx,[sp_0+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 40, 1, 2, 12, 1, 3, 10, 6, 0.009645113590536363, ["mov     rdx, [p_0+60h]", "lea     tmp, [p_0+108h]", "mov     rdi, [sp_0+20h]; dest", "mov     rsi, rbp; src", "mov     [p_0+48h], rdx", "add     rdx, 1; n", "call    _memmove", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_C9E3"], ["mov~rdx,[p_0+0]", "lea~tmp,[p_0+0]", "mov~rdi,[sp_0+0]", "mov~rsi,rbp", "mov~[p_0+0],rdx", "add~rdx,0", "call~FOO", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 18, 0, 0, 4, 1, 1, 10, 6, 0.0026213200699018685, ["mov     rdi, [rbx+18h]; dirp", "mov     r13, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_C7B0"], ["mov~rdi,[rbx+0]", "mov~r13,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 12, 7, 0.00013442667025137788, ["mov     rbx, r13"], ["mov~rbx,r13"]], [1, 0, 49, 0, 0, 1, 0, 0, 12, 5, 0.008771340233902407, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [0, 0, 33, 0, 0, 1, 0, 0, 9, 6, 0.011930366984809787, ["mov     p_0, rax"], ["mov~p_0,rax"]], [0, 0, 36, 0, 2, 9, 0, 2, 12, 6, 0.0018147600483936013, ["lea     r13, [rax+1]", "mov     rdi, r13; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     r14, rax", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memmove", "mov     [p_0+60h], r14"], ["lea~r13,[rax+0]", "mov~rdi,r13", "call~FOO", "lea~rdx,[rax+0]", "mov~r14,rax", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[p_0+0],r14"]]], "func_feature": [58, 83, 205, 3, 174, 278, 5, 620, 0.00582, 6, 7], "succs": [[89], [0, 79], [17, 130], [2, 130], [122, 20], [100, 4], [89, 146], [6, 103], [89, 14], [8, 106], [15], [16, 10], [18, 38], [82, 12], [89, 21], [19, 68], [15], [144, 22], [38, 39], [28], [33, 122], [27, 103], [64, 25], [28], [155, 23], [26, 44], [135], [89, 37], [42, 13], [28], [28], [99, 131], [131, 31], [126], [48, 33], [113, 103], [114, 35], [49, 89], [42, 54], [150, 38], [50, 46], [40], [40, 89], [152, 52], [66, 43], [34, 5], [50], [46], [122], [89], [65, 134], [50], [44, 101], [63, 55], [53, 69], [63], [41, 11], [56, 70], [36, 95], [58, 130], [105, 67], [60, 133], [91, 44], [89, 51], [57, 62], [85, 118], [1, 73], [131, 71], [89], [89, 47], [89, 76], [131, 78], [29], [72, 132], [167], [74, 167], [13], [1], [32, 103], [45, 103], [80, 127], [80], [89, 83], [103], [96, 118], [89, 84], [125], [129, 86], [], [88, 153], [93, 151], [90, 92], [90, 75], [160, 107], [36], [36, 94], [89], [87], [97, 161], [131], [120, 102], [123, 29], [110, 143], [], [115, 103], [136, 103], [113, 103], [112, 116], [173, 111], [108, 173], [104, 115], [24], [124], [89], [89, 145], [117, 119], [81, 124], [119], [89], [120], [122], [120], [126], [128, 125], [29], [29], [131, 61], [124], [98, 125], [125], [89], [130, 141], [130, 77], [131], [89, 142], [137, 91], [131], [75], [9], [138, 170], [138, 170], [89], [89], [121, 149], [89], [89, 7], [89, 147], [89], [89], [121], [42], [59, 172], [148, 156], [], [30], [154, 30], [157, 159], [168, 158], [168], [168], [163], [87], [171, 164], [162, 165], [163], [171, 164], [9], [169, 166], [24, 109], [139, 140], [169], [151], [124], [24]], "fname": "rpl_fts_read", "n_num": 174}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[4, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     edx, 4", "ja      short loc_D0D0"], ["cmp~edx,0", "ja~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["mov     [p+74h], dx", "xor     eax, eax", "retn"], ["mov~[p+0],dx", "xor~eax,eax", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 3, 11, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "rpl_fts_set", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 9, 1, 0, 0, 0, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     rbx", "pop     sp_0", "pop     r12", "pop     p", "pop     instr", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~sp_0", "pop~r12", "pop~p", "pop~instr", "pop~r15", "retn"]], [1, 1, 33, 0, 0, 4, 1, 1, 1, 15, 0.02689075630252101, ["mov     r13, [sp_0+0]", "mov     dword ptr [rax], 0", "test    byte ptr [sp_0+49h], 20h", "jnz     loc_D1F0"], ["mov~r13,[sp_0+0]", "mov~<TAG>,0", "test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 3, 13, 0.073109243697479, ["cmp     ax, 1", "jnz     loc_D1F0"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 27, 0, 1, 4, 1, 2, 6, 11, 0.02184873949579832, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jnz     short loc_D16A"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 5, 12, 0.03529411764705882, ["mov     rdi, [rbx+18h]; dirp", "mov     r12, [rbx+10h]", "test    rdi, rdi", "jnz     short loc_D158"], ["mov~rdi,[rbx+0]", "mov~r12,[rbx+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 1, -1, 0.0008403361344537816, ["mov     dword ptr [rax], 16h", "xor     eax, eax", "jmp     loc_D1C6"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 35, 1, 1, 13, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "mov     r14d, esi", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, sp_0", "sub     rsp, 8", "call    ___errno_location", "test    r14d, 0FFFFEFFFh", "mov     r15, rax", "jnz     loc_D280"], ["push~r15", "push~r14", "mov~r14d,esi", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,sp_0", "sub~rsp,0", "call~FOO", "test~r14d,0", "mov~r15,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 1, 0.01764705882352941, ["cmp     esi, 0FFFFFF9Ch", "jnz     loc_D2EA"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 16, -1, 0.0067226890756302525, ["mov     [sp_0+2Ch], r12d"], ["mov~[sp_0+0],r12d"]], [0, 0, 4, 0, 1, 4, 1, 2, 15, -1, 0.040336134453781515, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_D271"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     edi, eax; fd", "call    _close"], ["mov~edi,eax", "call~FOO"]], [2, 0, 22, 0, 0, 3, 0, 1, 6, 10, 0.18403361344537816, ["cmp     r14d, 1000h", "mov     ebx, 1", "jnz     short loc_D1A1"], ["cmp~r14d,0", "mov~ebx,0", "jnz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 1, 5, 11, 0.0957983193277311, ["jmp     short loc_D187"], ["jmp~FOO"]], [0, 0, 27, 0, 2, 5, 1, 3, 6, 11, 0.02184873949579832, ["call    _closedir", "mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      short loc_D187"], ["call~FOO", "mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [4, 0, 16, 1, 0, 6, 3, 1, 10, 6, 0.18907563025210086, ["mov     esi, eax", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags", "test    ah, 2", "jnz     short loc_D290"], ["mov~esi,eax", "shl~esi,0", "and~esi,0", "or~esi,0", "test~ah,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 9, 7, 0.18823529411764706, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      short loc_D208"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 7, 9, 0.2008403361344538, ["cmp     qword ptr [p+58h], 0", "jnz     short loc_D1B8"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [2, 0, 21, 0, 0, 2, 1, 0, 7, 10, 0.0, ["or      dword ptr [sp_0+48h], 1000h", "mov     ebx, 2"], ["or~[word ptr [sp_0+0],0", "mov~ebx,0"]], [0, 0, 14, 0, 1, 4, 1, 1, 11, 5, 0.08781512605042018, ["lea     rdi, dir+1; file", "xor     eax, eax", "call    open_safer", "mov     r12d, eax"], ["lea~rdi,<TAG>", "xor~eax,eax", "call~FOO", "mov~r12d,eax"]], [1, 0, 19, 0, 0, 3, 0, 1, 8, 8, 0.18571428571428572, ["mov     rax, [p+30h]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_D1B8"], ["mov~rax,[p+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 12, 4, 0.18403361344537816, ["test    r12d, r12d", "js      loc_D2C6"], ["test~r12d,r12d", "js~FOO"]], [0, 0, 14, 0, 1, 7, 1, 2, 11, 5, 0.08781512605042018, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "lea     rsi, dir+1; file", "xor     eax, eax", "call    openat_safer", "mov     r12d, eax", "jmp     short loc_D22F"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "mov~r12d,eax", "jmp~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 2, 14, 0.05126050420168068, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 9", "jz      loc_D1D8"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 14, -1, 0.05126050420168068, ["mov     edi, r12d; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_D2D5"], ["mov~edi,r12d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 0, 1, 6, 1, 2, 13, 3, 0.1596638655462185, ["mov     esi, ebx; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    byte ptr [sp_0+49h], 2", "mov     [sp_0+8], rax", "jz      short loc_D2B0"], ["mov~esi,ebx", "mov~rdi,sp_0", "call~FOO", "test~[yte ptr [sp_0+0],0", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 8, -1, 0.011764705882352941, ["mov     esi, ebx; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax"], ["mov~esi,ebx", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax"]], [0, 0, 2, 0, 1, 3, 0, 2, 15, -1, 0.01764705882352941, ["mov     edi, r12d; fd", "call    _close", "jmp     short loc_D275"], ["mov~edi,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 4, 12, 0.09327731092436975, ["mov     rbx, [sp_0+8]", "test    rbx, rbx", "jnz     short loc_D16D"], ["mov~rbx,[sp_0+0]", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 13, -1, 0.0033613445378151263, ["mov     qword ptr [sp_0+8], 0", "xor     eax, eax", "jmp     loc_D1C6"], ["mov~[word ptr [sp_0+0],0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 14, 2, 0.08403361344537816, ["mov     esi, [sp_0+2Ch]; val", "cmp     r12d, esi", "jnz     short loc_D25D"], ["mov~esi,[sp_0+0]", "cmp~r12d,esi", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     sp_0", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~sp_0", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 16, -1, 0.005042016806722689, ["mov     rax, [sp_0+8]", "jmp     loc_D1C6"], ["mov~rax,[sp_0+0]", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 1, 2, 15, -1, 0.0016806722689075631, ["mov     ebx, [r15]", "mov     edi, r12d; fd", "call    _close", "xor     eax, eax", "mov     [r15], ebx", "jmp     loc_D1C6"], ["mov~ebx,<TAG>", "mov~edi,r12d", "call~FOO", "xor~eax,eax", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, 13, 0.0033613445378151263, ["mov     rbx, r12"], ["mov~rbx,r12"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["mov     rax, [p+10h]", "add     rsp, 8", "pop     rbx", "pop     sp_0", "pop     r12", "pop     p", "pop     instr", "pop     r15", "retn"], ["mov~rax,[p+0]", "add~rsp,0", "pop~rbx", "pop~sp_0", "pop~r12", "pop~p", "pop~instr", "pop~r15", "retn"]]], "func_feature": [14, 21, 40, 0, 36, 51, 0, 142, 0.05917, 1, 5], "succs": [[], [0, 23], [0, 28], [34, 12], [3, 14], [31], [1, 5], [], [10, 7], [32], [9, 11], [9], [17, 18], [12], [34, 12], [19, 22], [26, 15], [26, 20], [17], [21], [16, 26], [25, 29], [21], [2, 35], [33, 27], [24, 30], [31], [32], [4, 13], [31], [8, 10], [], [31], [31], [4], []], "fname": "rpl_fts_children", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_D36E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_D350"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_D350"], ["test~n,n", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_D350"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_D3D8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_D3AF"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_D3B8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_D3E8"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 5, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     qword ptr [state+10h], 0", "mov     dword ptr [state+18h], 95F616h", "retn"], ["mov~[word ptr [state+0],0", "mov~[word ptr [state+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 3, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.01818181818181818, ["mov     qword ptr [state+10h], 1"], ["mov~[word ptr [state+0],0"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, -1, 0.08181818181818182, ["mov     rdx, [state+10h]", "mov     rcx, [sb+8]", "test    rdx, rdx", "jz      short loc_D440"], ["mov~rdx,[state+0]", "mov~rcx,[sb+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     dword ptr [state+18h], 95F616h", "jnz     short loc_D477"], ["cmp~[word ptr [state+0],0", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.08181818181818182, ["test    r8, r8", "jz      short loc_D461"], ["test~r8,r8", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, -1, 0.02727272727272727, ["mov     rax, [state+8]", "cmp     [sb], rax", "jnz     short loc_D42B"], ["mov~rax,[state+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.10909090909090909, ["cmp     [state], rcx", "jz      short loc_D458"], ["cmp~<TAG>,rcx", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 2, 1, 3, -1, 0.12727272727272726, ["lea     r8, [rdx+1]", "xor     eax, eax", "test    rdx, r8", "mov     [state+10h], r8", "jz      short loc_D470"], ["lea~r8,[rdx+0]", "xor~eax,eax", "test~rdx,r8", "mov~[state+0],r8", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["mov     rax, [sb]", "mov     [state], rcx", "mov     [state+8], rax", "xor     eax, eax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rcx", "mov~[state+0],rax", "xor~eax,eax", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.03636363636363636, ["jmp     short loc_D448"], ["jmp~FOO"]], [2, 0, 0, 1, 1, 6, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3994; \"cycle_check\"", "lea     sb, aLibCycleCheckC; \"lib/cycle-check.c\"", "lea     state, aStateMagic9827; \"state->magic == 9827862\"", "sub     rsp, 8", "mov     edx, 3Ch ; '<'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~sb,<TAG>", "lea~state,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 5, 8, 0, 12, 14, 2, 34, 0.04015, 3, 1], "succs": [[8], [0, 6], [1, 10], [], [9, 3], [3, 7], [5, 7], [11, 4], [], [8], [], []], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_D4C1"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 2, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_D4E8"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 1, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_D509"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 5, 25, 0.06667, 1, 2], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_D545"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC_0; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_D550"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 6, 1, 0, 0, 0, 0.0, ["mov     rax, data", "xor     edx, edx", "ror     rax, 3", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "xor~edx,edx", "ror~rax,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0.013157894736842105, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 16, 0, 1, 4, 1, 2, 3, -1, 0.08157894736842106, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D660"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 6, -1, 0.060526315789473685, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_D600"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 5, -1, 0.09473684210526316, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_D619"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 8, -1, 0.013157894736842105, ["mov     rsi, [rax]", "cmp     rsi, entry", "jz      short loc_D62B"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jz~FOO"]], [1, 0, 0, 0, 0, 13, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [rbx], xmm0", "mov     qword ptr [next], 0", "mov     rdx, [table+48h]", "mov     [next+8], rdx", "mov     [table+48h], next", "mov     next, rsi", "pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[next+0],rdx", "mov~[table+0],next", "mov~next,rsi", "pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.031578947368421054, ["mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_D6A0"], ["mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 2, -1, 0.08421052631578947, ["cmp     rsi, entry", "jz      loc_D663"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.05263157894736842, ["test    r12b, r12b", "jz      short loc_D64B"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 8, -1, 0.0, ["mov     rdx, [rax+8]", "mov     [cursor+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["mov~rdx,[rax+0]", "mov~[cursor+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 2, 0, 0, 2, 1, 1, 7, -1, 0.04736842105263158, ["test    r12b, r12b", "jz      short loc_D64B"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 7, -1, 0.007894736842105263, ["mov     rax, [cursor+8]", "mov     rsi, [rax]"], ["mov~rax,[cursor+0]", "mov~rsi,<TAG>"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.002631578947368421, ["mov     qword ptr [rbx], 0", "jmp     short loc_D64B"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 7, -1, 0.02631578947368421, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_D6B0"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [1, 0, 18, 2, 0, 7, 1, 1, 1, -1, 0.04736842105263158, ["shl     rax, 4", "add     rax, [table+0]", "mov     [bucket_head], rax", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jz      loc_D6B0"], ["shl~rax,0", "add~rax,[table+0]", "mov~<TAG>,rax", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 20, 0, 1, 14, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_D6BE"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 4, -1, 0.08947368421052632, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_D6B0"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 6, -1, 0.03684210526315789, ["jmp     short loc_D62B"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     esi, esi", "pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["xor~esi,esi", "pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [4, 9, 17, 0, 21, 29, 2, 92, 0.03283, 0, 2], "succs": [[8], [0, 17], [11, 13], [2, 18], [2, 10], [], [12, 5], [8, 1], [6, 14], [14], [9, 14], [10], [14], [19, 4], [], [19, 7], [20, 15], [19, 3], [10], [], []], "fname": "hash_find_entry", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 22, 0, 0, 1, 0, 0, 0, 0, 0.15612648221343872, ["mov     data, [bucket]"], ["mov~data,<TAG>"]], [0, 0, 22, 0, 0, 6, 1, 1, 7, 2, 0.06620553359683794, ["mov     rcx, [rax+8]", "test    next, next", "mov     [cursor+8], rcx", "mov     [rax+8], cursor", "mov     r13, next", "jz      short loc_D781"], ["mov~rcx,[rax+0]", "test~next,next", "mov~[cursor+0],rcx", "mov~[rax+0],cursor", "mov~r13,next", "jz~FOO"]], [2, 0, 22, 1, 0, 9, 1, 1, 7, 2, 0.06620553359683794, ["mov     [rax], data", "add     qword ptr [dst+18h], 1", "test    next, next", "mov     qword ptr [cursor+0], 0", "mov     rax, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor", "mov     r13, next", "jnz     short loc_D734"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "test~next,next", "mov~[word ptr [cursor+0],0", "mov~rax,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor", "mov~r13,next", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 2, 4, 0.4110671936758893, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_D7E6"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 22, 1, 0, 3, 0, 0, 3, 5, 0.3636363636363636, ["add     bucket, 10h", "cmp     bucket, rax", "jb      loc_D700"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 1, 5, 0.04150197628458498, ["mov     r14, dst", "mov     rbp, src", "mov     r12d, edx", "nop     word ptr [rax+rax+00000000h]"], ["mov~r14,dst", "mov~rbp,src", "mov~r12d,edx", "nop~[ord ptr [rax+0]"]], [1, 0, 22, 0, 0, 3, 1, 1, 4, 2, 0.3942687747035573, ["test    r12b, r12b", "mov     qword ptr [bucket+8], 0", "jnz     short loc_D7E2"], ["test~r12b,r12b", "mov~[word ptr [bucket+0],0", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 3, 3, 0.40316205533596833, ["mov     r13, [bucket+8]", "test    cursor, cursor", "jz      short loc_D784"], ["mov~r13,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 22, 1, 0, 3, 0, 1, 7, 8, 0.08102766798418971, ["mov     [rax], r15", "add     qword ptr [dst+18h], 1", "jmp     short loc_D7D6"], ["mov~<TAG>,r15", "add~[word ptr [dst+0],0", "jmp~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 9, 0.26482213438735175, ["shl     rax, 4", "add     rax, [dst]", "cmp     qword ptr [rax], 0", "mov     cursor, rax", "jz      short loc_D810"], ["shl~rax,0", "add~rax,<TAG>", "cmp~<TAG>,0", "mov~cursor,rax", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 2, 0.16897233201581027, ["mov     rsi, [dst+10h]", "jmp     short loc_D734"], ["mov~rsi,[dst+0]", "jmp~FOO"]], [0, 0, 22, 0, 1, 5, 0, 1, 5, 1, 0.2816205533596838, ["mov     rsi, [dst+10h]", "mov     rdi, r15", "call    qword ptr [dst+30h]", "cmp     rax, [dst+10h]", "jnb     loc_D840"], ["mov~rsi,[dst+0]", "mov~rdi,r15", "call~[word ptr [dst+0]", "cmp~rax,[dst+0]", "jnb~FOO"]], [2, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     bucket", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~bucket", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 23, 1, 0, 11, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [src]", "mov     rax, [src+8]", "cmp     bucket, rax", "jnb     loc_D7F3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,[src+0]", "cmp~bucket,rax", "jnb~FOO"]], [1, 0, 22, 0, 1, 4, 1, 2, 8, 9, 0.07411067193675888, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_D7C7"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 7, 10, 0.14624505928853754, ["mov     rax, [dst+48h]", "test    rax, rax", "jz      short loc_D820"], ["mov~rax,[dst+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 3, 0.16996047430830039, ["shl     rax, 4", "add     rax, [dst]", "mov     rdx, [cursor+8]", "cmp     qword ptr [rax], 0", "jnz     short loc_D720"], ["shl~rax,0", "add~rax,<TAG>", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 9, -1, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     bucket", "pop     src", "pop     safe", "pop     r13", "pop     dst", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~bucket", "pop~src", "pop~safe", "pop~r13", "pop~dst", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 22, 0, 1, 6, 0, 1, 5, 1, 0.19071146245059287, ["mov     r15, [cursor+0]", "mov     rdi, data", "call    qword ptr [dst+30h]", "mov     rsi, [dst+10h]", "cmp     rax, rsi", "jnb     loc_D840"], ["mov~r15,[cursor+0]", "mov~rdi,data", "call~[word ptr [dst+0]", "mov~rsi,[dst+0]", "cmp~rax,rsi", "jnb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 8, 9, 0.034584980237154145, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [0, 0, 22, 0, 0, 4, 0, 0, 9, 8, 0.11067193675889328, ["mov     rdx, [r13+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [r13+8], rax"], ["mov~rdx,[r13+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[r13+0],rax"]], [2, 0, 22, 1, 0, 2, 0, 0, 8, 7, 0.2351778656126482, ["mov     qword ptr [bucket], 0", "sub     qword ptr [src+18h], 1"], ["mov~<TAG>,0", "sub~[word ptr [src+0],0"]], [0, 0, 22, 0, 0, 1, 0, 0, 5, 6, 0.3517786561264822, ["mov     rax, [src+8]"], ["mov~rax,[src+0]"]]], "func_feature": [4, 8, 15, 0, 24, 34, 3, 104, 0.16716, 0, 11], "succs": [[6], [0, 19], [0, 19], [4, 7], [3, 12], [3], [11, 23], [10, 6], [22], [8, 15], [19], [9, 18], [], [12, 5], [17, 21], [20, 14], [1, 2], [], [], [16, 18], [21], [22], [23], [4]], "fname": "transfer_entries", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_D8B5"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_D8BC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_D890"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_D8C7"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_D8A8"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[3, 4], [0, 2], [1, 5], [2], [9], [], [], [8, 6], [1], [9, 3]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_D90D"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 2, 2, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_D8E0"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_D916"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_D920"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_D900"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_D90D"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[8, 1], [0, 4], [0, 4], [], [3, 7], [1, 5], [5], [], [1, 6]], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 13, 1, 0, 4, 1, 1, 0, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_D978"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_D98C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_D960"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_D9E8"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_DA30"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_D995"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_D985"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_10E48", "jns     short loc_D9DF"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_10E48", "js      short loc_DA59"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[0, 10], [0], [3, 11], [8, 2], [2], [14], [5], [5], [12, 13], [8, 4], [3], [1, 10], [6, 7], [6, 7], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.011111111111111112, ["mov     entry, [cursor]"], ["mov~entry,<TAG>"]], [0, 0, 7, 0, 1, 4, 1, 2, 3, -1, 0.15555555555555556, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_DAE0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.022222222222222223, ["jmp     short loc_DAD5"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 4, -1, 0.08888888888888889, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_DAB8"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.2, ["cmp     entry, rsi", "jz      short loc_DAE3"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 10, 0, 1, 10, 0, 1, 0, 1, 0.0, ["push    r12", "mov     r12, table", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_DAEB"], ["push~r12", "mov~r12,table", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [1, 0, 8, 2, 0, 6, 1, 1, 1, -1, 0.08888888888888889, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jnz     short loc_DABB"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.05555555555555556, ["mov     rsi, [cursor]"], ["mov~rsi,<TAG>"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, rbp", "pop     cursor", "pop     rbp", "pop     table", "retn"], ["mov~rax,rbp", "pop~cursor", "pop~rbp", "pop~table", "retn"]]], "func_feature": [3, 4, 8, 0, 11, 13, 2, 39, 0.05657, 0, 2], "succs": [[10], [0, 4], [], [2], [9, 2], [1, 10], [], [8, 6], [3, 5], [5], []], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 7, 0, 0, 4, 0, 0, 0, 0, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_DB28"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_DB23"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_DB26"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 6, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_DB10"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 4, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_DB28"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[8, 4], [0, 2], [], [], [3, 7], [], [9, 5], [9], [], [8, 6]], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, -1, 0.030303030303030304, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_DBAB"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 5, -1, 0.030303030303030304, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["mov     cursor, [cursor]", "add     rsp, 8", "pop     entry", "pop     table", "retn"], ["mov~cursor,<TAG>", "add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.13257575757575757, ["test    cursor, cursor", "jnz     short loc_DBB8"], ["test~cursor,cursor", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 4, -1, 0.030303030303030304, ["mov     rcx, [cursor]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jnz     short loc_DB78"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, -1, 0.0946969696969697, ["test    rax, rax", "jz      short loc_DB8E"], ["test~rax,rax", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 1, 4, -1, 0.16666666666666669, ["add     bucket, 10h", "cmp     rcx, bucket", "ja      short loc_DB98"], ["add~bucket,0", "cmp~rcx,bucket", "ja~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.18181818181818182, ["mov     rcx, [table+8]", "jmp     short loc_DBA0"], ["mov~rcx,[table+0]", "jmp~FOO"]], [1, 0, 10, 2, 0, 7, 0, 1, 1, -1, 0.07575757575757576, ["shl     rax, 4", "add     rax, [table+0]", "mov     rcx, [rax]", "mov     rdx, rax", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_DB89"], ["shl~rax,0", "add~rax,[table+0]", "mov~rcx,<TAG>", "mov~rdx,rax", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 12, 1, 1, 10, 0, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     rbp, table", "mov     rbx, entry", "sub     rsp, 8", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_DBC2"], ["push~rbp", "push~rbx", "mov~rbp,table", "mov~rbx,entry", "sub~rsp,0", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, -1, 0.030303030303030304, ["nop     dword ptr [cursor+cursor+00h]"], ["nop~[word ptr [cursor+0]"]]], "func_feature": [2, 4, 9, 0, 13, 17, 0, 45, 0.05944, 0, 6], "succs": [[], [0, 7], [0], [], [8, 3], [4, 6], [8, 5], [1, 2], [7], [12, 4], [], [9, 10], [6]], "fname": "hash_get_next", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_DC30"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_DC00"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     dword ptr [counter]"], ["nop~<TAG>"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, -1, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_DC21"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 0, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     bucket, r10", "jb      short loc_DBDF"], ["add~bucket,0", "cmp~bucket,r10", "jb~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 0, 5, -1, 0.17424242424242425, ["mov     r10, [table+8]", "mov     r8, counter"], ["mov~r10,[table+0]", "mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_DC2A"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     r10, [table+8]", "cmp     r10, bucket", "jbe     short loc_DC32"], ["mov~bucket,<TAG>", "mov~r10,[table+0]", "cmp~r10,bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_DC1A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 13, 17, 0, 34, 0.1317, 0, 2], "succs": [[9, 1], [0, 6], [0], [4, 7], [8, 3], [3], [4], [8, 12], [], [], [], [10, 5], [2, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 8, 1, 0, 4, 1, 1, 0, 0, 0.24444444444444446, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_DC78"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 4, -1, 0.29444444444444445, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_DC9F"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 0, 1, -1, 0.07777777777777778, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 10, 1, 0, 11, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "mov     rax, [table+8]", "cmp     rax, bucket", "jbe     short loc_DCB1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "mov~rax,[table+0]", "cmp~rax,bucket", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.011111111111111112, ["xor     ebp, ebp", "jmp     short loc_DC9F"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 2, -1, 0.2777777777777778, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_DC96"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, -1, 0.17222222222222222, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_DC65"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 8, 0, 0, 2, 0, 1, 3, -1, 0.2111111111111111, ["mov     rbx, bucket", "jmp     short loc_DC7B"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.1277777777777778, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]]], "func_feature": [1, 5, 6, 0, 11, 15, 0, 44, 0.1303, 0, 4], "succs": [[9, 10], [0, 7], [5], [2, 4], [7], [8, 6], [5, 7], [], [1], [1], [6]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_DCED"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_DCD0"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["movaps  xmm0, cs:xmmword_10E50", "mov     byte ptr [tuning+10h], 0", "movups  xmmword ptr [tuning], xmm0", "retn"], ["movaps~xmm0,<TAG>", "mov~[yte ptr [tuning+0],0", "movups~<TAG>,xmm0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 32, 0, 0, 3, 0, 1, 0, 0, 0.02177177177177177, ["movss   xmm1, dword ptr [tuning+8]", "ucomiss xmm1, cs:dword_10E64", "ja      short loc_DDA8"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 2, 11, 0.03303303303303303, ["mov     [table+28h], tuning", "lea     table, default_tuning", "cmp     tuning, rax", "jz      loc_DE2B"], ["mov~[table+0],tuning", "lea~table,<TAG>", "cmp~tuning,rax", "jz~FOO"]], [5, 0, 17, 0, 0, 7, 1, 1, 8, 5, 0.23123123123123124, ["cmp     r15, 0Ah", "mov     ebx, 0Ah", "mov     rcx, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, r15", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["cmp~r15,0", "mov~ebx,0", "mov~rcx,0", "cmovnb~rbx,r15", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 10, 6, 0.12312312312312312, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_DE68"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [1, 0, 18, 0, 0, 5, 1, 1, 7, 6, 0.06081081081081081, ["subss   xmm0, cs:dword_10E7C", "mov     rax, 8000000000000000h", "cvttss2si r15, xmm0", "xor     r15, rax", "jmp     loc_DE68"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~r15,xmm0", "xor~r15,rax", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 7, 6, 0.06081081081081081, ["cvttss2si r15, xmm0", "nop     dword ptr [rax+00h]"], ["cvttss2si~r15,xmm0", "nop~[word ptr [rax+0]"]], [0, 0, 1, 0, 1, 3, 1, 1, 4, -1, 0.02515015015015015, ["mov     rdi, table; ptr", "xor     r14d, r14d", "call    free"], ["mov~rdi,table", "xor~r14d,r14d", "call~FOO"]], [0, 0, 31, 0, 0, 3, 0, 0, 4, 12, 0.03753753753753754, ["movss   xmm0, cs:dword_10E68", "ucomiss xmm0, xmm1", "jbe     short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 30, 0, 0, 3, 0, 0, 5, 11, 0.05555555555555555, ["movss   xmm0, dword ptr [tuning+0Ch]", "ucomiss xmm0, cs:dword_10E6C", "jbe     short fail"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 10, 0.07207207207207207, ["movss   xmm0, dword ptr [tuning]", "ucomiss xmm0, cs:dword_10E70", "jb      short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 28, 0, 0, 4, 0, 0, 7, 9, 0.08708708708708708, ["addss   xmm0, cs:dword_10E64", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm0", "jbe     short fail"], ["addss~xmm0,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm0", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 8, 8, 0.1006006006006006, ["movss   xmm3, cs:dword_10E74", "ucomiss xmm3, xmm2", "jb      short fail"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 9, 7, 0.11261261261261261, ["ucomiss xmm1, xmm0", "jbe     short fail"], ["ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 5, 8, 0.13963963963963963, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_10E78", "jnb     fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 13, -1, 0.00925925925925926, ["jmp     fail"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 13, -1, 0.07557557557557558, ["test    rax, rax", "js      fail"], ["test~rax,rax", "js~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 14, -1, 0.04804804804804805, ["test    rcx, rcx", "jnz     fail"], ["test~rcx,rcx", "jnz~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 15, -1, 0.024774774774774775, ["mov     [table+10h], rbx", "mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      fail"], ["mov~[table+0],rbx", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 9, 4, 0.22072072072072071, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 16, 2, 0, 10, 0, 0, 10, 3, 0.23385885885885885, ["mov     rax, rbx", "mov     rsi, rbx", "mul     rcx", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rsi, rax", "cmp     rbx, 9", "mov     rax, rsi", "jbe     short loc_DEF0"], ["mov~rax,rbx", "mov~rsi,rbx", "mul~,rcx", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rsi,rax", "cmp~rbx,0", "mov~rax,rsi", "jbe~FOO"]], [2, 0, 16, 1, 0, 3, 0, 1, 12, 4, 0.041916916916916916, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DE90"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [4, 0, 1, 2, 0, 10, 0, 1, 16, -1, 0.00037537537537537537, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0", "jmp     loc_DD91"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0", "jmp~FOO"]], [1, 1, 37, 1, 1, 23, 3, 2, 0, 13, 0.0, ["push    r15", "push    r14", "lea     rax, raw_hasher", "push    r13", "push    r12", "mov     r12, hasher", "push    rbp", "push    rbx", "mov     r13, comparator", "mov     r15, candidate", "mov     edi, 50h ; 'P'; size", "mov     rbx, tuning", "sub     rsp, 8", "test    hasher, hasher", "mov     rbp, data_freer", "cmovz   r12, rax", "lea     rax, raw_comparator", "test    comparator, comparator", "cmovz   r13, rax", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      short loc_DD91"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,hasher", "push~rbp", "push~rbx", "mov~r13,comparator", "mov~r15,candidate", "mov~edi,<STR>", "mov~rbx,tuning", "sub~rsp,0", "test~hasher,hasher", "mov~rbp,data_freer", "cmovz~r12,rax", "lea~rax,<TAG>", "test~comparator,comparator", "cmovz~r13,rax", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 4, 9, 0.05930930930930931, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     r15d, 1", "or      rax, r15", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_DE41"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~r15d,0", "or~rax,r15", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 3, 10, 0.06756756756756757, ["test    candidate, candidate", "movss   xmm1, cs:dword_10E60", "js      short loc_DDFF"], ["test~candidate,candidate", "movss~xmm1,<TAG>", "js~FOO"]], [0, 0, 24, 0, 0, 2, 1, 0, 11, 10, 0.036036036036036036, ["test    candidate, candidate", "jns     short loc_DE38"], ["test~candidate,candidate", "jns~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 6, 7, 0.13363363363363362, ["ucomiss xmm0, cs:dword_10E7C", "jnb     loc_DF04"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 13, 0, 0.0, ["mov     ecx, 1", "jmp     short loc_DF37"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 7, 1, 0, 5, 1, 0, 12, 1, 0.11161161161161161, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_DF9A"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     data_freer", "pop     hasher", "pop     comparator", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~data_freer", "pop~hasher", "pop~comparator", "pop~r14", "pop~r15", "retn"]], [0, 0, 25, 0, 0, 2, 0, 0, 2, 11, 0.017267267267267267, ["lea     table, default_tuning", "mov     [table+28h], rax"], ["lea~table,<TAG>", "mov~[table+0],rax"]], [0, 0, 36, 0, 0, 2, 1, 1, 1, 12, 0.026276276276276277, ["test    tuning, tuning", "jz      loc_DE20"], ["test~tuning,tuning", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 5, 0.07607607607607607, ["test    rsi, rsi", "jz      short loc_DEF5"], ["test~rsi,rsi", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 2, 0.15077577577577578, ["test    rax, rax", "jnz     short loc_DF28"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 4, 9, 0.05930930930930931, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [3, 0, 16, 0, 0, 4, 0, 1, 12, 4, 0.041666666666666664, ["mov     r8d, 10h", "mov     edi, 9", "mov     esi, 3", "jmp     short loc_DED9"], ["mov~r8d,0", "mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 16, 1, 0, 3, 1, 1, 14, 4, 0.004379379379379379, ["add     r8, 8", "test    rdx, rdx", "jz      short loc_DEF5"], ["add~r8,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 16, 3, 0, 8, 1, 0, 13, 3, 0.03791291291291291, ["add     rsi, 2", "xor     edx, edx", "mov     rax, rbx", "div     rsi", "add     rdi, r8", "cmp     rdi, rbx", "mov     rax, rdx", "jb      short loc_DED0"], ["add~rsi,0", "xor~edx,edx", "mov~rax,rbx", "div~,rsi", "add~rdi,r8", "cmp~rdi,rbx", "mov~rax,rdx", "jb~FOO"]]], "func_feature": [3, 19, 23, 0, 38, 63, 4, 162, 0.0694, 11, 12], "succs": [[6, 7], [0, 24], [18, 6], [25, 2], [2], [2], [29], [8, 6], [9, 6], [10, 6], [11, 6], [12, 6], [3, 6], [26, 6], [6], [16, 6], [17, 6], [21, 6], [19], [32, 33], [19, 14], [29], [29, 31], [13], [34, 23], [34, 23], [4, 5], [15], [27, 15], [], [24], [1, 30], [35, 20], [20, 28], [13], [37], [20, 37], [33, 36]], "fname": "hash_initialize", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 14, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "mov     rax, [table+8]", "cmp     bucket, rax", "jnb     short loc_E036"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "mov~rax,[table+0]", "cmp~bucket,rax", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, 7, 0.06593406593406594, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 0, 0, 3, 0, 0, 0, 8, 0.37362637362637363, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0", "mov     rax, [table+8]"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0", "mov~rax,[table+0]"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 9, 0.20329670329670332, ["test    rax, rax", "jz      short loc_E018"], ["test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 0, 0, 0.11538461538461539, ["jmp     short loc_E018"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 0, 9, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [2, 0, 0, 0, 0, 6, 0, 0, 0, -1, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 13, 1, 0, 3, 0, 1, 0, 7, 0.39560439560439564, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_DFC8"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [1, 0, 13, 0, 1, 11, 1, 2, 0, 4, 0.08241758241758243, ["mov     rdi, [cursor]", "call    rax", "mov     rcx, [cursor+8]", "mov     rdx, [table+48h]", "mov     rax, [table+40h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_DFE0"], ["mov~rdi,<TAG>", "call~rax", "mov~rcx,[cursor+0]", "mov~rdx,[table+0]", "mov~rax,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 3, 0.28571428571428575, ["test    rax, rax", "jz      short loc_E04B"], ["test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 8, 1, 1, 0, 1, 0.1208791208791209, ["mov     rax, [cursor+8]", "mov     qword ptr [cursor], 0", "mov     [cursor+8], rdx", "mov     rdx, cursor", "mov     [table+48h], cursor", "test    next, next", "mov     rbx, next", "jnz     short loc_E050"], ["mov~rax,[cursor+0]", "mov~<TAG>,0", "mov~[cursor+0],rdx", "mov~rdx,cursor", "mov~[table+0],cursor", "test~next,next", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 0, 2, 0.1263736263736264, ["mov     rdx, [table+48h]", "nop"], ["mov~rdx,[table+0]", "nop"]], [1, 0, 13, 0, 0, 2, 0, 1, 0, 6, 0.4560439560439561, ["cmp     qword ptr [bucket], 0", "jz      short loc_E02D"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 1, 1, 0, 5, 0.42307692307692313, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_E00D"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, 4, 0.2692307692307693, ["nop     dword ptr [rax]"], ["nop~<TAG>"]]], "func_feature": [2, 5, 10, 0, 15, 22, 0, 56, 0.19451, 0, 1], "succs": [[1, 6], [12], [7], [2, 5], [2], [2], [], [12, 6], [9, 3], [8, 11], [10, 4], [10], [13, 7], [3, 14], [9]], "fname": "hash_clear", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 10, 0, 0, 1, 0, 0, 0, 0, 0.032467532467532464, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 10, 0, 1, 5, 1, 2, 5, 4, 0.049783549783549784, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_E0F0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [1, 0, 22, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_E0D3"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.045454545454545456, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.15584415584415584, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_E131"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004329004329004329, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_E120"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 3, 0.01948051948051948, ["cmp     qword ptr [table+20h], 0", "jz      short loc_E0D3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.0670995670995671, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_E0E0"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 3, 3, 0.13636363636363635, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_E106"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 2, 2, 0.04004329004329004, ["cmp     bucket, rax", "jnb     short loc_E10F"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 3, 6, 0.06060606060606061, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 11, 0, 0, 2, 0, 0, 1, 2, 0.24567099567099568, ["cmp     rax, bucket", "jbe     short loc_E10F"], ["cmp~rax,bucket", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04112554112554113, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 19, 0, 0, 3, 1, 1, 4, 5, 0.11255411255411256, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_E0C6"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 19, 1, 0, 3, 0, 0, 5, 4, 0.20995670995670995, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_E098"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 7, 0.04329004329004329, ["mov     rbx, bucket", "jmp     short loc_E0B3"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 19, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 19, 0, 1, 4, 1, 2, 6, 6, 0.10173160173160173, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_E0B0"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 5, 0.10173160173160173, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 12, 0, 0, 1, 0, 0, 6, 3, 0.19696969696969696, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 10, 0, 0, 1, 0, 0, 2, 4, 0.12987012987012986, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 5, 0.0670995670995671, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [4, 6, 15, 0, 23, 34, 3, 60, 0.08093, 0, 2], "succs": [[7], [0, 1], [11, 6], [16], [3, 12], [3, 5], [9, 11], [8, 4], [22, 7], [10, 4], [13], [4, 21], [5], [14, 15], [20, 13], [18], [], [18], [17, 19], [14], [11], [8], [1]], "fname": "hash_free", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 12, 0, 0, 2, 0, 1, 0, 0, 0.1590909090909091, ["cmp     [table+10h], rbx", "jz      loc_E385"], ["cmp~[table+0],rbx", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 4, 3, 0.17045454545454547, ["test    rcx, rcx", "jnz     loc_E340"], ["test~rcx,rcx", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 5, 6, 0.05397727272727273, ["cvttss2si rsi, xmm0", "jmp     loc_E1C8"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 4, 7, 0.0928030303030303, ["ucomiss xmm0, cs:dword_10E7C", "jb      loc_E37B"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 2, 4, 0.017361111111111112, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [0, 0, 32, 0, 0, 2, 1, 1, 1, 5, 0.008207070707070706, ["test    candidate, candidate", "js      loc_E35D"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.002840909090909091, ["mov     ebx, 1", "jmp     short loc_E342"], ["mov~ebx,0", "jmp~FOO"]], [2, 0, 24, 2, 0, 10, 0, 0, 3, 6, 0.08664772727272728, ["mov     rax, rbx", "mov     rdi, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rdi, rax", "cmp     rbx, 9", "mov     rax, rdi", "jbe     short loc_E248"], ["mov~rax,rbx", "mov~rdi,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rdi,rax", "cmp~rbx,0", "mov~rax,rdi", "jbe~FOO"]], [2, 0, 24, 1, 0, 3, 0, 1, 5, 5, 0.045928030303030304, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E1F0"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 2, 7, 0.05965909090909091, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 6, 0.04403409090909091, ["test    rdi, rdi", "jz      short loc_E24D"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 3, 3, 0.08775252525252526, ["divss   xmm0, dword ptr [r12+8]", "ucomiss xmm0, cs:dword_10E78", "jnb     loc_E340"], ["divss~xmm0,[word ptr [r12+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 30, 0, 0, 8, 2, 1, 2, 4, 0.017361111111111112, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     esi, 1", "or      rax, rsi", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_E189"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~esi,0", "or~rax,rsi", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 8, 4, 0.06818181818181818, ["mov     rax, [new_table+78h+storage.free_entry_list]", "mov     edx, 1; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "mov     [table+48h], rax", "call    transfer_entries", "test    al, al", "jz      loc_E3B3"], ["mov~rax,[new_table+0]", "mov~edx,0", "mov~rsi,r12", "mov~rdi,table", "mov~[table+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [3, 0, 8, 2, 1, 21, 2, 2, 7, 3, 0.10890151515151515, ["mov     [new_table+78h+storage.n_buckets], rbx", "shl     rbx, 4", "mov     [new_table+78h+storage.tuning], r12", "add     rbx, rax", "mov     rax, [table+40h]", "mov     r12, new_table", "movdqu  xmm0, xmmword ptr [table+30h]", "xor     edx, edx; safe", "mov     rsi, table; src", "mov     rdi, r12; dst", "mov     [new_table+78h+storage.bucket_limit], rbx", "mov     [new_table+78h+storage.data_freer], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+storage.n_buckets_used], 0", "mov     [new_table+78h+storage.n_entries], 0", "movaps  xmmword ptr [new_table+78h+storage.hasher], xmm0", "mov     [new_table+78h+storage.free_entry_list], rax", "call    transfer_entries", "test    al, al", "mov     ebx, eax", "jnz     loc_E38C"], ["mov~[new_table+0],rbx", "shl~rbx,0", "mov~[new_table+0],r12", "add~rbx,rax", "mov~rax,[table+0]", "mov~r12,new_table", "movdqu~xmm0,[mmword ptr [table+0]", "xor~edx,edx", "mov~rsi,table", "mov~rdi,r12", "mov~[new_table+0],rbx", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],0", "mov~[new_table+0],0", "movaps~[mmword ptr [new_table+0],xmm0", "mov~[new_table+0],rax", "call~FOO", "test~al,al", "mov~ebx,eax", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 6, 3, 0.1259469696969697, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [new_table+78h+storage.bucket], rax", "jz      loc_E340"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [3, 0, 24, 0, 0, 4, 0, 1, 5, 7, 0.026988636363636364, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_E231"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 6, 2, 2, 9, 3, 0.026515151515151516, ["xor     edx, edx; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      loc_E3B3"], ["xor~edx,edx", "mov~rsi,r12", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 1, 1, 7, 6, 0.0033143939393939395, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_E24D"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 24, 3, 0, 8, 1, 0, 6, 6, 0.03551136363636364, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rsi, rbx", "mov     rax, rdx", "jb      short loc_E228"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rsi,rbx", "mov~rax,rdx", "jb~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 8, 2, 0.002840909090909091, ["mov     rdi, [table+0]; ptr", "call    free", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.bucket]", "mov     rax, [new_table+78h+storage.free_entry_list]", "movups  xmmword ptr [table+0], xmm0", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.n_buckets]", "mov     [table+48h], rax", "movups  xmmword ptr [table+10h], xmm0", "jmp     short loc_E342"], ["mov~rdi,[table+0]", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rax,[new_table+0]", "movups~[mmword ptr [table+0],xmm0", "movdqa~xmm0,[mmword ptr [new_table+0]", "mov~[table+0],rax", "movups~[mmword ptr [table+0],xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 10, 2, 0.005681818181818182, ["mov     rdi, [new_table+78h+storage.bucket]; ptr", "call    free", "jmp     short loc_E342"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 4, 2, 0.0625, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 14, 0, 0, 2, 1, 1, 3, 3, 0.23421717171717174, ["test    rax, rax", "js      loc_E340"], ["test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.05681818181818182, ["mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_E3C2"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 26, 0, 0, 5, 1, 0, 5, 6, 0.05397727272727273, ["subss   xmm0, cs:dword_10E7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "nop     dword ptr [rax+00h]"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "nop~[word ptr [rax+0]"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 5, 0.07291666666666667, ["test    rax, rax", "jnz     short loc_E257"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 6, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]], [1, 0, 16, 1, 0, 5, 1, 0, 2, 4, 0.23989898989898992, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      loc_E3B8"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [5, 0, 25, 0, 0, 7, 1, 1, 1, 5, 0.17171717171717174, ["cmp     rsi, 0Ah", "mov     ebx, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, rsi", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_E257"], ["cmp~rsi,0", "mov~ebx,0", "mov~r8,0", "cmovnb~rbx,rsi", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [2, 0, 33, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "sub     rsp, 60h", "mov     r12, [table+28h]", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "cmp     byte ptr [r12+10h], 0", "jnz     short loc_E1C8"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "sub~rsp,0", "mov~r12,[table+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     ecx, 1", "jmp     loc_E26A"], ["mov~ecx,0", "jmp~FOO"]]], "func_feature": [8, 21, 30, 1, 34, 51, 3, 155, 0.063, 3, 12], "succs": [[6, 15], [0, 23], [31], [2, 27], [11], [12, 4], [26], [10, 28], [30, 7], [7], [16, 8], [3, 23], [11], [17, 21], [20, 13], [14, 23], [19], [21, 22], [8, 19], [18, 28], [26], [], [26], [26], [1, 23], [], [25, 29], [31], [8, 30], [], [24, 33], [9, 30], [5, 31], [24]], "fname": "hash_rehash", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 40, 0, 0, 1, 0, 0, 0, 0, 0.01709039548022599, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 48, 0, 1, 4, 1, 2, 4, 5, 0.029096045197740113, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_E480"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.09613935969868175, ["mov     rbx, [rsp+38h+bucket]", "cmp     qword ptr [rbx], 0", "jz      loc_E6D0"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.02824858757062147, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_E4F9"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.049764595103578155, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_10E60", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E4F9"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.13898305084745763, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_E5B8"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.08582862523540491, ["mulss   xmm0, cs:dword_10E80"], ["mulss~xmm0,<TAG>"]], [0, 0, 29, 0, 0, 3, 0, 1, 9, 6, 0.16638418079096046, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_E69C"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.03728813559322034, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_10E70", "jb      short loc_E680"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.04519774011299435, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_10E6C", "jbe     loc_E680"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 6, 3, 0.05918079096045198, ["test    rsi, rsi", "jz      short loc_E4B8"], ["test~rsi,rsi", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 1, 7, 4, 0.009887005649717515, ["jmp     short loc_E483"], ["jmp~FOO"]], [0, 0, 40, 0, 0, 3, 0, 1, 8, 4, 0.0016949152542372883, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_E483"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.01652542372881356, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.024858757062146894, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_E74A"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.010451977401129945, ["mov     eax, 0FFFFFFFFh", "jmp     loc_E493"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.08606403013182673, ["ucomiss xmm0, cs:dword_10E78", "jnb     loc_E703"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.042090395480225994, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_E703"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.014218455743879472, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_E51C"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 2, 1, 4, 2, 0.014689265536723164, ["xor     eax, eax", "test    matched_ent, matched_ent", "jz      short loc_E493"], ["xor~eax,eax", "test~matched_ent,matched_ent", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 3, 3, 0.022033898305084745, ["cmp     entry, rsi", "jz      short loc_E488"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 59, 0, 1, 9, 0, 1, 1, 5, 0.01638418079096045, ["mov     r13, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_E67B"], ["mov~r13,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [1, 0, 60, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_E67B"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.0, ["mov     [matched_ent], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05112994350282486, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_E72C"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.01652542372881356, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_E586"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.0288135593220339, ["addss   xmm4, cs:dword_10E64", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_E680"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.08531073446327683, ["ucomiss xmm2, cs:dword_10E64", "jbe     loc_E680"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 11, 6, 0.05254237288135594, ["movss   xmm3, cs:dword_10E68", "ucomiss xmm3, xmm2", "jbe     loc_E680"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.020856873822975523, ["movss   xmm6, cs:dword_10E74", "ucomiss xmm6, xmm5", "jb      short loc_E680"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.014077212806026366, ["ucomiss xmm2, xmm4", "jbe     short loc_E680"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.05677966101694915, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_E4CA"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11186440677966102, ["mov     rax, [table+18h]", "test    rax, rax", "js      short loc_E540"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007203389830508475, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.04712806026365348, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_E6F0"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.028389830508474576, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.028389830508474576, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_E5A1"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.03220338983050847, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_E76B"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 15, 2, 0.0018361581920903955, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "mov     eax, 1", "add     qword ptr [table+20h], 1", "jmp     loc_E493"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "mov~eax,0", "add~[word ptr [table+0],0", "jmp~FOO"]], [3, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.020762711864406782, ["add     rsi, 1", "mov     [rbx], entry", "mov     eax, 1", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "jmp     loc_E493"], ["add~rsi,0", "mov~<TAG>,entry", "mov~eax,0", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "jmp~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.06949152542372881, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07231638418079096, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E6D4"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08060263653483994, ["mulss   xmm0, xmm2", "jmp     short loc_E633"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.0072975517890772135, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_E6A4"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [1, 0, 58, 2, 0, 7, 1, 1, 2, 4, 0.03220338983050847, ["shl     rax, 4", "add     rax, [table+0]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+38h+bucket], rax", "test    rsi, rsi", "jz      loc_E570"], ["shl~rax,0", "add~rax,[table+0]", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 6, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     entry", "pop     matched_ent", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~matched_ent", "pop~table", "retn"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.023870056497175142, ["jmp     short loc_E4B8"], ["jmp~FOO"]], [0, 0, 45, 0, 0, 4, 1, 1, 8, 6, 0.014971751412429379, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_E4B8"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.05677966101694915, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 46, 0, 0, 3, 1, 1, 5, 6, 0.022740112994350282, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_E46C"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.06666666666666667, ["ucomiss xmm0, cs:dword_10E7C", "jnb     loc_E70D"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.0635593220338983, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_E4E9"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.12796610169491526, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_E6B0"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.02344632768361582, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.024717514124293787, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.02344632768361582, ["subss   xmm0, cs:dword_10E7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_E652"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 45, 0, 1, 4, 1, 2, 7, 5, 0.00903954802259887, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_E560"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 45, 0, 0, 3, 0, 1, 6, 5, 0.011299435028248588, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_E450"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.0635593220338983, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [8, 29, 43, 1, 61, 93, 0, 218, 0.03951, 11, 7], "succs": [[10], [0, 49], [34, 55], [2, 60], [2, 6], [2, 7], [42], [27, 6], [26, 4], [8, 4], [32, 19], [10], [10], [24], [25, 13], [37], [50, 15], [3, 15], [38, 15], [37, 23], [1, 19], [60, 44], [60, 21], [37], [35, 36], [24], [4, 29], [28, 4], [9, 4], [4, 30], [43, 4], [52], [48, 31], [38], [33, 18], [41], [41], [45, 53], [37], [37], [7], [40, 39], [16], [16, 42], [20, 14], [], [32], [32, 58], [52], [58, 46], [56, 54], [5], [59, 51], [], [17], [39], [17], [12, 47], [57, 11], [5], []], "fname": "hash_insert_if_absent", "n_num": 61}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 27, 0, 0, 3, 0, 0, 0, 0, 0.056261343012704176, ["movss   xmm3, cs:dword_10E68", "ucomiss xmm3, xmm2", "jbe     loc_EA20"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.0913490623109498, ["ucomiss xmm2, cs:dword_10E64", "jbe     loc_EA20"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [1, 0, 3, 1, 0, 6, 0, 0, 15, 2, 0.0019661222020568663, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     rsi, entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "add     qword ptr [table+20h], 1"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~rsi,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "add~[word ptr [table+0],0"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.015224843718491633, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_E899"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007713248638838476, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [2, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.02223230490018149, ["add     rsi, 1", "mov     [rbx], entry", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "mov     rsi, entry", "jmp     loc_E8B1"], ["add~rsi,0", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "mov~rsi,entry", "jmp~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07743496672716274, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_EA75"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.026467029643073202, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [0, 0, 38, 0, 0, 3, 0, 1, 8, 3, 0.0012099213551119178, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_E823"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 43, 0, 1, 4, 1, 2, 7, 4, 0.009679370840895343, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_E900"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.0176950998185118, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_E927"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.02661826981246219, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_EAED"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.05046380318612624, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_EA90"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.10294414196410567, ["mov     rbx, [rsp+28h+var_28]", "cmp     qword ptr [rbx], 0", "jz      loc_EA70"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 58, 1, 0, 9, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_EA1B"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.022333131679774153, ["movss   xmm6, cs:dword_10E74", "ucomiss xmm6, xmm5", "jb      short loc_EA20"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.030852994555353903, ["addss   xmm4, cs:dword_10E64", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_EA20"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03327283726557774, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, rsi", "jnz     loc_EB0E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rsi", "jnz~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.048396854204476716, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_10E6C", "jbe     loc_EA20"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 43, 0, 0, 3, 0, 1, 6, 4, 0.01088929219600726, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_E7F0"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 5, 5, 0.024349667271627348, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_E80D"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 43, 0, 0, 4, 1, 1, 8, 5, 0.016031457955232913, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_E82C"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 3, 0.008771929824561405, ["jmp     short loc_E823"], ["jmp~FOO"]], [1, 0, 56, 2, 0, 7, 1, 1, 2, 3, 0.03327283726557774, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+28h+var_28], rax", "test    rsi, rsi", "jz      loc_E910"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 57, 0, 1, 8, 0, 1, 1, 4, 0.01693889897156685, ["mov     r12, table", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_EA1B"], ["mov~r12,table", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.030248033877797946, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_E874"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 0, 5, 3, 0.0176950998185118, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 46, 0, 1, 4, 1, 2, 4, 4, 0.031155474894131886, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_E820"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.0176950998185118, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.039927404718693285, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_10E70", "jb      short loc_EA20"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 13, 2, 0.01119177253478524, ["xor     esi, esi", "jmp     loc_E8B1"], ["xor~esi,esi", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.09215567654769108, ["ucomiss xmm0, cs:dword_10E78", "jnb     loc_EAA3"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.04506957047791894, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_EAA3"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 6, 2, 0.05852994555353903, ["test    rsi, rsi", "jnz     loc_E8B1"], ["test~rsi,rsi", "jnz~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.030399274047186935, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_E943"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05474894131881428, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_EACF"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11978221415607987, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_E8D8"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.025559588626739262, ["jmp     short loc_E82C"], ["jmp~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.05328695301472071, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_10E60", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_E874"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.015073603549102643, ["ucomiss xmm2, xmm4", "jbe     short loc_EA20"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 3, 2, 0.02177858439201452, ["cmp     entry, rsi", "jz      loc_E8B1"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.09190360959870941, ["mulss   xmm0, cs:dword_10E80"], ["mulss~xmm0,<TAG>"]], [0, 0, 29, 0, 0, 3, 0, 1, 9, 6, 0.1781609195402299, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_EA3D"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.06079854809437387, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08630772333131681, ["mulss   xmm0, xmm2", "jmp     short loc_E9D3"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.007814075418431137, ["cmp     byte ptr [rcx+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_EA45"], ["cmp~[yte ptr [rcx+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.025105868118572294, ["subss   xmm0, cs:dword_10E7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_E9F2"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.07138535995160315, ["ucomiss xmm0, cs:dword_10E7C", "jnb     loc_EAB0"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.030399274047186935, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [1, 0, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~table", "retn"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.07441016333938294, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.1370235934664247, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_EA50"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.06079854809437387, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_E843"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.06805807622504538, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.14882032667876588, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_E958"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.025105868118572294, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.06805807622504538, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_E864"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [8, 28, 41, 2, 59, 90, 4, 211, 0.04323, 11, 7], "succs": [[40, 19], [0, 40], [18], [32, 2], [2], [18], [52, 5], [5], [35], [8, 22], [37], [10, 30], [3, 4], [12, 7], [25, 26], [40, 41], [40, 15], [], [17, 51], [40, 31], [9, 23], [20, 39], [20, 38], [35], [42, 11], [], [24, 25], [25, 13], [35], [28, 21], [37], [16, 40], [18], [32, 49], [32, 27], [18, 38], [6], [50, 36], [45, 54], [38], [43, 13], [40, 47], [18, 29], [46], [1, 43], [53], [33], [33, 46], [34], [48, 57], [6], [], [44], [58, 55], [53], [56], [44, 13], [34], [56]], "fname": "hash_insert", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 9, 0, 0, 1, 0, 0, 0, 0, 0.11673469387755102, ["mulss   xmm1, xmm3"], ["mulss~xmm1,xmm3"]], [0, 0, 11, 0, 0, 5, 0, 1, 15, -1, 0.04204081632653062, ["mulss   xmm4, xmm1", "mov     [table+28h], rax", "movss   xmm3, cs:dword_10E60", "ucomiss xmm4, xmm0", "ja      loc_ED00"], ["mulss~xmm4,xmm1", "mov~[table+0],rax", "movss~xmm3,<TAG>", "ucomiss~xmm4,xmm0", "ja~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 13, -1, 0.09551020408163266, ["movss   xmm3, cs:dword_10E60", "jmp     loc_ED00"], ["movss~xmm3,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 21, -1, 0.00040816326530612246, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.04183673469387755, ["subss   xmm1, cs:dword_10E7C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm1", "xor     rsi, rax", "jmp     loc_ED16"], ["subss~xmm1,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm1", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.11306122448979593, ["ucomiss xmm1, cs:dword_10E7C", "jnb     loc_EDE0"], ["ucomiss~xmm1,<TAG>", "jnb~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 12, -1, 0.22448979591836735, ["lea     rax, default_tuning", "cmp     rdx, rax", "jz      loc_EE00"], ["lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 11, -1, 0.22775510204081634, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm1", "ucomiss xmm3, xmm0", "jbe     short loc_EC23"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm1", "ucomiss~xmm3,xmm0", "jbe~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 5, -1, 0.025714285714285714, ["mov     rbx, [rax]", "mov     r14, bucket", "cmp     entry, rbx", "jnz     short loc_EBA9"], ["mov~rbx,<TAG>", "mov~r14,bucket", "cmp~entry,rbx", "jnz~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 4, -1, 0.012244897959183675, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_ED88"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 6, -1, 0.02938775510204082, ["jmp     short loc_EBBD"], ["jmp~FOO"]], [1, 0, 34, 0, 0, 6, 0, 0, 4, -1, 0.04081632653061225, ["movdqu  xmm0, xmmword ptr [rax]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 36, 0, 0, 3, 1, 1, 3, -1, 0.07183673469387755, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_ED50"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 20, -1, 0.018367346938775512, ["cmp     byte ptr [rdx+10h], 0", "mulss   xmm1, xmm5", "jnz     short loc_ED04"], ["cmp~[yte ptr [rdx+0],0", "mulss~xmm1,xmm5", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 50, 0, 1, 12, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, entry", "push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_EE0D"], ["push~r14", "push~r13", "mov~r13,entry", "push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 5, -1, 0.21204081632653063, ["test    rbx, rbx", "jz      loc_ED88"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 34, 0, 0, 7, 0, 1, 7, -1, 0.0953061224489796, ["mov     rdx, [rax+8]", "mov     [r14+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax", "jmp     short loc_EC0E"], ["mov~rdx,[rax+0]", "mov~[r14+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 4, -1, 0.04081632653061225, ["mov     qword ptr [bucket], 0", "jmp     loc_EC0E"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 13, -1, 0.11714285714285715, ["movss   xmm3, dword ptr [rdx+8]", "ucomiss xmm3, cs:dword_10E64", "jbe     loc_ED60"], ["movss~xmm3,[word ptr [rdx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     ebx, ebx", "mov     rax, rbx", "pop     rbx", "pop     table", "pop     bucket", "pop     entry", "pop     r14", "retn"], ["xor~ebx,ebx", "mov~rax,rbx", "pop~rbx", "pop~table", "pop~bucket", "pop~entry", "pop~r14", "retn"]], [1, 0, 48, 2, 0, 6, 1, 1, 1, -1, 0.019591836734693877, ["shl     rax, 4", "add     rax, [table+0]", "mov     rbx, [rax]", "mov     r12, rax", "test    rbx, rbx", "jz      loc_ED88"], ["shl~rax,0", "add~rax,[table+0]", "mov~rbx,<TAG>", "mov~r12,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 39, 0, 0, 4, 1, 1, 7, -1, 0.0038775510204081634, ["mov     r14, [r14+8]", "mov     rax, [r14+8]", "test    rax, rax", "jz      loc_ED88"], ["mov~r14,[r14+0]", "mov~rax,[r14+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 39, 0, 1, 5, 1, 2, 6, -1, 0.009183673469387756, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_EB90"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.07142857142857142, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_EC23"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.04183673469387755, ["cvttss2si rsi, xmm1; candidate"], ["cvttss2si~rsi,xmm1"]], [2, 0, 31, 1, 0, 3, 0, 1, 6, -1, 0.21510204081632653, ["sub     qword ptr [table+20h], 1", "cmp     qword ptr [bucket], 0", "jz      short loc_EC30"], ["sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 14, -1, 0.07714285714285715, ["movss   xmm4, cs:dword_10E68", "ucomiss xmm4, xmm3", "jbe     loc_ED60"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,xmm3", "jbe~FOO"]], [0, 0, 39, 0, 0, 3, 0, 1, 8, -1, 0.01469387755102041, ["mov     rbx, [rax]", "cmp     entry, rbx", "jz      short loc_EBBD"], ["mov~rbx,<TAG>", "cmp~entry,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 18, -1, 0.052653061224489796, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_ED41"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     table", "pop     r12", "pop     entry", "pop     r14", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~table", "pop~r12", "pop~entry", "pop~r14", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 19, -1, 0.0012244897959183673, ["mov     qword ptr [table+48h], 0", "jmp     loc_EC23"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 16, -1, 0.004081632653061225, ["jmp     loc_EC23"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 19, -1, 0.017959183673469388, ["nop"], ["nop"]], [0, 0, 3, 0, 1, 5, 1, 2, 20, -1, 0.0008163265306122449, ["mov     r12, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_ED30"], ["mov~r12,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 10, -1, 0.10857142857142857, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_EC6C"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 27, 0, 0, 5, 1, 1, 9, -1, 0.22408163265306122, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx]", "js      loc_EDA0"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,<TAG>", "js~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 7, -1, 0.013877551020408163, ["mov     rax, [r14+8]", "mov     rbx, [rax]"], ["mov~rax,[r14+0]", "mov~rbx,<TAG>"]], [0, 0, 18, 0, 0, 4, 0, 0, 15, -1, 0.07102040816326531, ["movss   xmm4, dword ptr [rdx+0Ch]", "ucomiss xmm4, cs:dword_10E6C", "pxor    xmm4, xmm4", "jbe     loc_ED64"], ["movss~xmm4,[word ptr [rdx+0]", "ucomiss~xmm4,<TAG>", "pxor~xmm4,xmm4", "jbe~FOO"]], [1, 0, 30, 1, 0, 5, 1, 1, 7, -1, 0.21306122448979592, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_EDC0"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 14, -1, 0.028979591836734694, ["pxor    xmm4, xmm4"], ["pxor~xmm4,xmm4"]], [0, 0, 17, 0, 0, 2, 0, 0, 16, -1, 0.05918367346938776, ["ucomiss xmm2, xmm4", "jb      loc_ED64"], ["ucomiss~xmm2,xmm4", "jb~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 8, -1, 0.10489795918367348, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 16, 0, 0, 4, 0, 0, 17, -1, 0.0489795918367347, ["addss   xmm2, cs:dword_10E64", "movss   xmm5, dword ptr [rdx+4]", "ucomiss xmm5, xmm2", "jbe     loc_ED64"], ["addss~xmm2,<TAG>", "movss~xmm5,[word ptr [rdx+0]", "ucomiss~xmm5,xmm2", "jbe~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 18, -1, 0.03795918367346939, ["movss   xmm6, cs:dword_10E74", "ucomiss xmm6, xmm5", "jb      short loc_ED64"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 19, -1, 0.027755102040816326, ["ucomiss xmm3, xmm2", "jbe     short loc_ED64"], ["ucomiss~xmm3,xmm2", "jbe~FOO"]], [2, 0, 28, 0, 0, 8, 2, 1, 8, -1, 0.10489795918367348, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_EC4E"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 2, -1, 0.037551020408163265, ["cmp     entry, rbx", "jz      loc_EBE4"], ["cmp~entry,rbx", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 4, -1, 0.01469387755102041, ["mov     rbx, [bucket]"], ["mov~rbx,<TAG>"]], [0, 0, 46, 0, 1, 5, 1, 2, 3, -1, 0.011428571428571429, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_EBE0"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 10, -1, 0.10857142857142857, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]]], "func_feature": [6, 18, 34, 0, 51, 77, 4, 182, 0.06413, 7, 4], "succs": [[5], [0, 32], [0], [0], [24], [25, 4], [2, 19], [30, 6], [10, 23], [8, 20], [17], [16], [18, 11], [3, 5], [], [21, 14], [26, 20], [16], [16], [40, 27], [], [20, 47], [28, 20], [37, 22], [29, 30], [24], [30, 39], [40, 38], [17, 23], [33, 31], [], [30], [30], [34], [34, 31], [7], [50, 35], [17], [41, 1], [42, 46], [1], [1, 43], [36], [1, 44], [1, 45], [1, 13], [36], [49, 12], [12], [48, 9], [7]], "fname": "hash_delete", "n_num": 51}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "mov     qword ptr [ir+14h], 0", "mov     [ir], esi", "mov     [ir+4], esi", "mov     [ir+8], esi", "mov     [ir+0Ch], esi", "mov     [ir+10h], esi", "retn"], ["mov~[yte ptr [ir+0],0", "mov~[word ptr [ir+0],0", "mov~<TAG>,esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [ir+1Ch]", "retn"], ["movzx~eax,[yte ptr [ir+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 2, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 0", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [2, 0, 2, 1, 0, 14, 2, 1, 0, 0, 0.0, ["movzx   edx, byte ptr [ir+1Ch]", "mov     ecx, [ir+14h]", "xor     edx, 1", "movzx   edx, dl", "add     ecx, edx", "and     ecx, 3", "mov     eax, ecx", "lea     r8, [ir+old_val*4]", "mov     eax, [r8]", "mov     [r8], esi", "mov     esi, [ir+18h]", "mov     [ir+14h], ecx", "cmp     esi, ecx", "jnz     short loc_EE80"], ["movzx~edx,[yte ptr [ir+0]", "mov~ecx,[ir+0]", "xor~edx,0", "movzx~edx,dl", "add~ecx,edx", "and~ecx,0", "mov~eax,ecx", "lea~r8,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,esi", "mov~esi,[ir+0]", "mov~[ir+0],ecx", "cmp~esi,ecx", "jnz~FOO"]], [1, 0, 1, 1, 0, 3, 1, 0, 1, 0, 0.0, ["add     edx, esi", "and     edx, 3", "mov     [ir+18h], edx"], ["add~edx,esi", "and~edx,0", "mov~[ir+0],edx"]]], "func_feature": [0, 3, 1, 0, 3, 3, 4, 19, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [0, 0, 2, 0, 0, 8, 0, 1, 1, -1, 0.16666666666666666, ["mov     eax, [ir+14h]", "mov     esi, [ir+10h]", "lea     rcx, [ir+rax*4]", "mov     rdx, rax", "mov     eax, [rcx]", "mov     [rcx], esi", "cmp     edx, [ir+18h]", "jz      short loc_EEC0"], ["mov~eax,[ir+0]", "mov~esi,[ir+0]", "lea~rcx,<TAG>", "mov~rdx,rax", "mov~eax,<TAG>", "mov~<TAG>,esi", "cmp~edx,[ir+0]", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     byte ptr [ir+1Ch], 0", "jnz     short loc_EEC5"], ["cmp~[yte ptr [ir+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 4, 1, 0, 2, -1, 0.0, ["add     edx, 3", "and     edx, 3", "mov     [ir+14h], edx", "retn"], ["add~edx,0", "and~edx,0", "mov~[ir+0],edx", "retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 1, 3, 0, 5, 4, 3, 18, 0.03333, 0, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "i_ring_pop", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_EF00"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rsp+58h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_EF79"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 18h", "mov     ecx, dword ptr [rsp+58h+var_20]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_EF30"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~ecx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_20], rcx", "xor     ecx, ecx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    dl, 40h", "jnz     short loc_EF58"], ["sub~rsp,<STR>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~dl,0", "jnz~FOO"]]], "func_feature": [3, 5, 6, 3, 5, 5, 6, 25, 0.06667, 1, 2], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "openat_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [pnew_fd], ebx", "add     rsp, 8", "mov     dirp, rbp", "pop     new_fd", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["mov~<TAG>,ebx", "add~rsp,0", "mov~dirp,rbp", "pop~new_fd", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, -1, 0.16666666666666666, ["mov     edi, eax; fd", "mov     ebx, eax", "call    _fdopendir", "test    rax, rax", "mov     rbp, rax", "jz      short loc_EFC8"], ["mov~edi,eax", "mov~ebx,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 0, 1, 2, 13, 0, 2, 2, -1, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     pnew_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     rax, dirp", "mov     [r12], r13d", "add     rsp, 8", "pop     new_fd", "pop     dirp", "pop     r12", "pop     fdopendir_errno", "retn"], ["call~FOO", "mov~r13d,<TAG>", "mov~pnew_fd,rax", "mov~edi,ebx", "call~FOO", "mov~rax,dirp", "mov~<TAG>,r13d", "add~rsp,0", "pop~new_fd", "pop~dirp", "pop~r12", "pop~fdopendir_errno", "retn"]], [2, 0, 4, 1, 1, 11, 3, 2, 0, 1, 0.0, ["push    r13", "push    r12", "or      edx, 90900h; flags", "push    rbp", "push    rbx", "xor     eax, eax", "mov     r12, pnew_fd", "sub     rsp, 8", "call    openat_safer", "test    eax, eax", "js      short loc_EFF0"], ["push~r13", "push~r12", "or~edx,0", "push~rbp", "push~rbx", "xor~eax,eax", "mov~r12,pnew_fd", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 8, 1, 0, 1, 0, 0.0, ["add     rsp, 8", "xor     ebp, ebp", "pop     rbx", "mov     new_fd, rbp", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["add~rsp,0", "xor~ebp,ebp", "pop~rbx", "mov~new_fd,rbp", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]]], "func_feature": [4, 5, 6, 0, 5, 4, 1, 46, 0.03333, 0, 4], "succs": [[], [0, 2], [], [1, 4], []], "fname": "opendirat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_F032"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 2, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 7, 0, 2, 8, 1, 3, 0, 0, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_F05C"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 1, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_F088"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_F080"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_F0B0"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 2, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_F0A4"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_F0A7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]]], "func_feature": [7, 5, 14, 0, 10, 13, 1, 42, 0.05278, 0, 0], "succs": [[9, 7], [0, 7], [], [2], [], [4], [4, 5], [9, 6], [1, 3], [3]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0101010101010101, ["cmp     esi, 1", "jnz     short loc_F1E8"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, -1, 0.013131313131313131, ["jg      short loc_F190"], ["jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, -1, 0.00202020202020202, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 1, 6, 1, 2, 10, -1, 0.006060606060606061, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     short loc_F1A0"], ["mov~rdx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, -1, 0.006818181818181818, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_F1F9"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 9, -1, 0.006818181818181818, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.004545454545454545, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     loc_F283"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 7, 0, 1, 8, 3, 2, 5, -1, 0.006313131313131313, ["xor     esi, esi; cmd", "xor     eax, eax", "mov     edx, r12d", "mov     edi, ebp; fd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_F1A0"], ["xor~esi,esi", "xor~eax,eax", "mov~edx,r12d", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 1, 45, 1, 0, 19, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "sub     rsp, 50h", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+68h+arg_0]", "test    esi, esi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+var_20], r9", "mov     [rsp+68h+arg.gp_offset], 10h", "mov     [rsp+68h+arg.reg_save_area], rax", "jz      loc_F312"], ["push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~esi,esi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],r9", "mov~<TAG>,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.043434343434343436, ["mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_F30D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 9", "jz      loc_F190"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 5, 3, 0.021178451178451182, ["jg      loc_F230"], ["jg~FOO"]], [1, 0, 5, 0, 1, 6, 2, 2, 5, -1, 0.010606060606060607, ["xor     eax, eax", "mov     esi, 1; cmd", "mov     edi, ebx; fd", "call    _fcntl", "test    eax, eax", "js      short loc_F2B1"], ["xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.006060606060606061, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_F1A0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.02016835016835017, ["cmp     esi, 409h", "jz      short loc_F240"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.025185185185185185, ["cmp     esi, 407h", "jg      short loc_F210"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 1, 5, 0.0202020202020202, ["cmp     esi, 406h", "jnz     short loc_F160"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, -1, 0.021683501683501687, ["jl      loc_F190"], ["jl~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 3, -1, 0.023383838383838382, ["mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "nop~[word ptr [rax+0]"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 4, 0.02904040404040404, ["cmp     esi, 0Bh", "jz      short loc_F190"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 401h", "jz      short loc_F190"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.00202020202020202, ["jmp     loc_F190"], ["jmp~FOO"]], [0, 0, 7, 0, 1, 6, 3, 2, 3, -1, 0.008333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_F1A0"], ["xor~esi,esi", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [2, 0, 13, 0, 0, 6, 0, 1, 2, -1, 0.010858585858585859, ["mov     rax, [rsp+68h+arg.reg_save_area]", "cmp     cs:have_dupfd_cloexec_3326, 0", "mov     [rsp+68h+arg.gp_offset], 18h", "mov     r12d, [rax+10h]", "mov     edx, r12d", "js      loc_F263"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "mov~<TAG>,0", "mov~r12d,[rax+0]", "mov~edx,r12d", "js~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.017676767676767676, ["cmp     esi, 40Ah", "jnz     short loc_F1E8"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 5, 1, 0.030404040404040406, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_F334"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.02531986531986532, ["cmp     esi, 4", "jz      loc_F240"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.013131313131313131, ["cmp     esi, 2", "jz      loc_F240"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.010067340067340067, ["cmp     esi, 406h", "jge     short loc_F240"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 2, 0.009595959595959595, ["cmp     esi, 402h", "jz      short loc_F240"], ["cmp~esi,0", "jz~FOO"]], [0, 1, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 400h", "jz      short loc_F240"], ["cmp~esi,<STR>", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 2, 0.009595959595959595, ["jg      short loc_F240"], ["jg~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 8", "jnz     short loc_F1E8"], ["cmp~esi,0", "jnz~FOO"]], [3, 0, 4, 0, 1, 8, 2, 2, 6, -1, 0.0015151515151515152, ["or      eax, 1", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_F1A0"], ["or~eax,0", "mov~esi,0", "mov~edi,ebx", "mov~edx,eax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, -1, 0.031818181818181815, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_F32A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0022727272727272726, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_F1A0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 7, -1, 0.010707070707070707, ["mov     edx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_F1A0"], ["mov~edx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 6, -1, 0.0015151515151515152, ["call    ___errno_location", "mov     r12d, [rax]", "mov     fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, 0FFFFFFFFh", "mov     [rbp+0], r12d", "jmp     loc_F1A0"], ["call~FOO", "mov~r12d,<TAG>", "mov~fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,0", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 3, 0, 1, 7, 2, 2, 1, -1, 0.0015151515151515152, ["mov     rax, [rsp+68h+arg.reg_save_area]", "xor     esi, esi; cmd", "mov     edx, [rax+10h]", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_F1A0"], ["mov~rax,[rsp+0]", "xor~esi,esi", "mov~edx,[rax+0]", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.008131313131313132, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_F251"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 6, -1, 0.008131313131313132, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 30, 0, 0, 1, 0, 1, 3, 3, 0.03939393939393939, ["jg      short loc_F1C0"], ["jg~FOO"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, -1, 0.006060606060606061, ["xor     eax, eax", "mov     esi, 406h; cmd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_F2D8"], ["xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 4, -1, 0.005555555555555556, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     loc_F14F"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [13, 20, 53, 6, 46, 75, 2, 157, 0.0123, 2, 4], "succs": [[2, 35], [0, 19], [19], [10], [3], [3], [13], [10, 6], [17, 39], [], [9, 42], [32, 19], [11, 28], [34, 38], [10, 13], [18, 26], [29, 15], [24, 20], [25, 19], [10], [43, 19], [19, 30], [19], [10, 14], [44, 23], [35, 22], [40, 41], [26, 12], [1, 26], [26, 21], [26, 31], [26, 35], [33, 26], [26, 35], [10, 38], [4, 5], [10], [10], [10], [10], [37], [37], [], [16, 27], [36, 45], [36, 7]], "fname": "rpl_fcntl", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi", "xor     eax, eax", "jmp     rpl_fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_F3A6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_F390"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn faccessat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "faccessat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fstatfs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
