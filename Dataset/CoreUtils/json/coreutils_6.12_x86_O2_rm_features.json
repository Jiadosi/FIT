{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_17FA"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20DDC0", "jmp     cs:qword_20DDC8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 62, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1800", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:group_member_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "group_member", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 30, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 64, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_obstack_begin_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rewinddir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strndup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_setjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:obstack_free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "obstack_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getegid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getegid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_obstack_newchunk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "_obstack_newchunk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__longjmp_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__longjmp_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 29, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 60, 0, 0, 2, 0, 1, 0, 0, 0.04811676082862523, ["cmp     eax, 83h", "jz      loc_1F12"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 60, 0, 0, 1, 0, 1, 5, 5, 0.13083804143126176, ["jle     short loc_1D50"], ["jle~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 10, -1, 0.042090395480225994, ["mov     rbp, [rbx]", "cmp     byte ptr [rbp+0], 2Dh ; '-'", "jnz     short loc_1E70"], ["mov~rbp,<TAG>", "cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 9, -1, 0.04943502824858757, ["lea     eax, [argc-2]", "lea     prompt_once, [argv+8]", "lea     preserve_root, [rsp+0E8h+stat_buf]", "lea     r13, [argv+rax*8+10h]", "jmp     short loc_1E79"], ["lea~eax,[argc-2]+0]", "lea~prompt_once,[argv+0]", "lea~preserve_root,[rsp+0]", "lea~r13,[argv+0]", "jmp~FOO"]], [1, 0, 6, 1, 0, 3, 0, 1, 11, -1, 0.0018361581920903955, ["add     rbx, 8", "cmp     r13, rbx", "jz      short loc_1EF2"], ["add~rbx,0", "cmp~r13,rbx", "jz~FOO"]], [1, 0, 60, 0, 0, 3, 1, 1, 11, 10, 0.007909604519774011, ["mov     [rsp+0E8h+x.interactive], 5", "xor     ebx, ebx", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 60, 0, 0, 1, 0, 0, 10, 11, 0.017231638418079096, ["jb      loc_20A9"], ["jb~FOO"]], [0, 0, 60, 0, 0, 1, 0, 1, 7, 11, 0.029613935969868176, ["jl      loc_1E3D"], ["jl~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 2, -1, 0.14981167608286253, ["cmp     cs:optind@@GLIBC_2_2_5, ebp", "jl      short loc_1F53"], ["cmp~<TAG>,ebp", "jl~FOO"]], [1, 0, 60, 0, 1, 8, 1, 2, 1, 9, 0.4255178907721281, ["lea     rdx, shortopts; \"dfirvIR\"", "xor     r8d, r8d; longind", "mov     rcx, r13; longopts", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1F3A"], ["lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rcx,r13", "mov~rsi,argv", "mov~edi,ebp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 2, 10, 4, 3, 4, -1, 0.005743879472693033, ["lea     rsi, aMissingOperand; \"missing operand\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_1EF2"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.02410546139359699, ["cmp     [rsp+0E8h+x.ignore_missing_files], 0", "jz      loc_1FE8"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 60, 0, 0, 4, 0, 1, 5, 10, 0.014124293785310734, ["mov     [rsp+0E8h+x.interactive], 5", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     ebx, 1", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 4, 11, 0.12584745762711866, ["cmp     eax, 49h ; 'I'", "jz      loc_1EFC"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 8, 11, 0.015207156308851225, ["cmp     eax, 84h", "jnz     loc_1E4E"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 7, 10, 0.01765536723163842, ["mov     r14d, 1", "jmp     loc_1CC3"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 12, -1, 0.011016949152542373, ["mov     rdx, r14; stat_buf", "mov     rsi, rbp; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_1E70"], ["mov~rdx,r14", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 11, -1, 0.021468926553672316, ["cmp     byte ptr [rbp+1], 0", "jz      short loc_1E70"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 9, 10, 0.014124293785310734, ["mov     [rsp+0E8h+x.stdin_tty], 1", "jmp     short loc_1CC3"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 5, 0, 1, 5, 1, 1, 7, -1, 0.0005649717514124294, ["lea     rsi, aSRemoveAllArgu; \"%s: remove all arguments? \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     prompt_once, cs:program_name", "call    _dcgettext"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~prompt_once,<TAG>", "call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 0, 6, -1, 0.011864406779661017, ["cmp     n_files, 3", "jbe     short loc_1FC4"], ["cmp~n_files,0", "jbe~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 5, 10, 0.011958568738229754, ["mov     [rsp+0E8h+x.one_file_system], 1", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 4, 6, 0.14364406779661018, ["cmp     eax, 81h", "jz      loc_1F1D"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 60, 0, 0, 1, 0, 1, 3, 7, 0.27033898305084747, ["jle     short loc_1D20"], ["jle~FOO"]], [2, 0, 60, 0, 1, 10, 0, 2, 9, 1, 0.03333333333333333, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, interactive_args; arglist", "lea     rcx, interactive_types; vallist", "lea     rdi, context; \"--interactive\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, interactive_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      loc_20B8"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 60, 0, 0, 3, 1, 1, 8, 2, 0.04745762711864407, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "test    rsi, rsi", "jz      short loc_1DB9"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6470; \"main\"", "lea     rsi, file; \"rm.c\"", "lea     rdi, assertion; \"VALID_STATUS (status)\"", "mov     edx, 176h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 2, 0, 1, 7, 0, 2, 5, -1, 0.024293785310734464, ["mov     rdx, rsp; x", "mov     rsi, file; file", "mov     rdi, n_files; n_files", "call    rm", "lea     edx, [status-2]", "cmp     edx, 2", "ja      short loc_200E"], ["mov~rdx,rsp", "mov~rsi,file", "mov~rdi,n_files", "call~FOO", "lea~edx,[status-2]+0]", "cmp~edx,0", "ja~FOO"]], [0, 0, 60, 0, 0, 1, 0, 1, 5, 11, 0.11087570621468927, ["jle     loc_1DCC"], ["jle~FOO"]], [1, 0, 5, 0, 1, 6, 1, 2, 6, -1, 0.012711864406779662, ["lea     rsi, aSRemoveAllArgu_0; \"%s: remove all arguments recursively? \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     prompt_once, cs:program_name", "call    _dcgettext", "jmp     loc_1FA2"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~prompt_once,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, -1, 0.044350282485875706, ["cmp     [rsp+0E8h+x.recursive], 0", "jnz     loc_202D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 4, -1, 0.0192090395480226, ["test    r14b, r14b", "jnz     loc_204C"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, -1, 0.11186440677966102, ["cmp     [rsp+0E8h+x.recursive], 0", "jz      short loc_1F63"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 6, 10, 0.0402542372881356, ["cmp     eax, 64h ; 'd'", "jz      short loc_1CC3"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 11, 10, 0.00847457627118644, ["cmp     eax, 2", "jnz     loc_1CC3"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 9, 10, 0.03418079096045198, ["mov     [rsp+0E8h+x.recursive], 1", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 8, 11, 0.016760828625235407, ["cmp     eax, 72h ; 'r'", "jz      loc_1F30"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 8, 11, 0.008615819209039548, ["cmp     eax, 52h ; 'R'", "jnz     loc_1E4E"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 7, 11, 0.023022598870056497, ["cmp     eax, 66h ; 'f'", "jnz     loc_1F27"], ["cmp~eax,0", "jnz~FOO"]], [2, 1, 0, 2, 2, 17, 2, 2, 7, -1, 0.0, ["lea     c, aJimMeyering; \"Jim Meyering\"", "sub     rsp, 8", "mov     rdi, cs:__bss_start; stream", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aPaulRubin; \"Paul Rubin\"", "push    rax", "lea     rax, aRichardStallma; \"Richard Stallman\"", "lea     rcx, version; \"6.12\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"rm\"", "push    rax", "xor     eax, eax", "call    version_etc", "add     rsp, 20h", "xor     edi, edi; status", "call    _exit"], ["lea~c,<TAG>", "sub~rsp,0", "mov~rdi,<TAG>", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "push~rax", "lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "push~rax", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "xor~edi,edi", "call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, -1, 0.06949152542372881, ["cmp     eax, 0FFFFFF7Dh", "jz      short loc_1DEB"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 1, 1, 8, 10, 0.013559322033898306, ["xor     r14d, r14d", "jmp     loc_1CC3"], ["xor~r14d,r14d", "jmp~FOO"]], [10, 0, 60, 1, 5, 37, 4, 5, 0, 10, 0.0, ["push    r14", "push    r13", "lea     r13, long_opts", "push    r12", "push    rbp", "mov     r12, argv", "push    rbx", "mov     ebp, edi", "mov     edi, 6; category", "mov     r14d, 1", "sub     rsp, 0C0h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_30], rax", "xor     eax, eax", "mov     rax, [argv]", "lea     argv, aReportBugsToS+16h; locale", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "xor     edi, edi; fd", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.one_file_system], 0", "mov     [rsp+0E8h+x.recursive], 0", "mov     [rsp+0E8h+x.root_dev_ino], 0", "call    _isatty", "test    eax, eax", "mov     [rsp+0E8h+x.verbose], 0", "mov     [rsp+0E8h+x.require_restore_cwd], 0", "setnz   [rsp+0E8h+x.stdin_tty]", "xor     ebx, ebx"], ["push~r14", "push~r13", "lea~r13,<TAG>", "push~r12", "push~rbp", "mov~r12,argv", "push~rbx", "mov~ebp,edi", "mov~edi,0", "mov~r14d,0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~argv,<TAG>", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "xor~edi,edi", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~[rsp+0],0", "mov~[rsp+0],0", "setnz~[rsp+0]", "xor~ebx,ebx"]], [1, 0, 4, 0, 2, 9, 2, 3, 7, -1, 0.00423728813559322, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "call    yesno", "test    al, al", "jz      short loc_1F4C"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 60, 0, 0, 4, 1, 1, 3, 10, 0.02627118644067797, ["mov     [rsp+0E8h+x.interactive], 3", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "xor     ebx, ebx", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "mov~<TAG>,0", "xor~ebx,ebx", "jmp~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 2, 8, 0.2745762711864407, ["cmp     eax, 69h ; 'i'", "jz      loc_1DB9"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 60, 0, 0, 2, 0, 1, 7, 3, 0.06506591337099811, ["cmp     eax, 80h", "jnz     loc_1E45"], ["cmp~eax,<STR>", "jnz~FOO"]], [3, 0, 60, 0, 0, 4, 0, 1, 10, 0, 0.015254237288135594, ["mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     ebx, 1", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 60, 0, 0, 4, 1, 1, 8, 10, 0.013559322033898306, ["mov     [rsp+0E8h+x.interactive], 5", "mov     [rsp+0E8h+x.ignore_missing_files], 1", "xor     ebx, ebx", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "mov~<TAG>,0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 4, -1, 0.0, ["xor     edi, edi; status", "call    _exit"], ["xor~edi,edi", "call~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 6, 4, 0.0818738229755179, ["cmp     eax, 76h ; 'v'", "jz      loc_1DE1"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 9, 1, 0, 6, 1, 1, 4, -1, 0.0847457627118644, ["movsxd  rax, cs:optind@@GLIBC_2_2_5", "sub     ebp, eax", "test    bl, bl", "lea     argv, [argv+rax*8]", "movsxd  rbp, ebp", "jz      short loc_1FC4"], ["movsxd~rax,<TAG>", "sub~ebp,eax", "test~bl,bl", "lea~argv,<TAG>", "movsxd~rbp,ebp", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.05395480225988701, ["cmp     eax, 0FFFFFF7Eh", "jnz     short loc_1E4E"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 10, 0, 4, 16, 2, 5, 6, -1, 0.0, ["lea     rdi, filename; \"/\"", "call    quote", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     preserve_root, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r14", "mov     rdx, r13; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1F63"], ["lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~preserve_root,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r14", "mov~rdx,r13", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 1, 5, 1, 2, 5, -1, 0.009887005649717515, ["lea     rdi, dev_ino_buf_6466; root_d_i", "call    get_root_dev_ino", "test    rax, rax", "mov     [rsp+0E8h+x.root_dev_ino], rax", "jnz     loc_1F63"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 8, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 7, 10, 0.01596045197740113, ["mov     [rsp+0E8h+x.verbose], 1", "jmp     loc_1CC3"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 4, 1, 1, 6, -1, 0.0, ["xor     edi, edi", "cmp     eax, 4", "setz    dil; status", "call    _exit"], ["xor~edi,edi", "cmp~eax,0", "setz~dil", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 8, -1, 0.0620527306967985, ["cmp     ebp, 1", "jle     loc_1EF2"], ["cmp~ebp,0", "jle~FOO"]], [4, 0, 1, 0, 4, 21, 2, 4, 13, -1, 0.00014124293785310735, ["mov     rdi, rbp; name", "call    quote", "mov     rdx, rbp; arg", "mov     esi, 1; s", "mov     edi, 1; n", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, msgid; \"Try `%s ./%s' to remove the file %s.\\n\"", "mov     rbx, [argv]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r9, r13", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rdi,rbp", "call~FOO", "mov~rdx,rbp", "mov~esi,0", "mov~edi,0", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r9,r13", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [31, 31, 81, 1, 61, 92, 0, 272, 0.0478, 33, 5], "succs": [[15, 7], [0, 50], [17, 4], [2], [2, 60], [9], [34, 5], [41, 14], [32, 11], [8, 45], [60], [49, 10], [9], [28, 12], [18, 58], [9], [59, 4], [16, 4], [9], [43], [27, 19], [9], [1, 21], [13, 22], [6, 47], [24, 44], [], [57, 26], [40, 33], [43], [20, 29], [51, 54], [51, 31], [9, 38], [9, 44], [9], [58, 35], [58, 35], [48, 37], [], [52, 39], [9], [9], [49, 27], [9], [44, 23], [25, 36], [9], [9], [], [56, 46], [27, 30], [58, 55], [51], [51, 53], [], [9], [], [3, 60], [60], []], "fname": "main", "n_num": 61}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2130"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2130"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2180"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2180"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_21B3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_21C8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [13, 0, 1, 0, 22, 93, 14, 23, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... FILE...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:__bss_start", "lea     rsi, aRemoveUnlinkTh; \"Remove (unlink) the FILE(s).\\n\\n  -f, -\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aIPromptOnceBef; \"  -I                    prompt once bef\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aOneFileSystemW; \"      --one-file-system  when removing \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aNoPreserveRoot; \"      --no-preserve-root  do not treat \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aByDefaultRmDoe; \"\\nBy default, rm does not remove direct\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "lea     rsi, aToRemoveAFileW; \"\\nTo remove a file whose name starts wi\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:__bss_start", "lea     rsi, aNoteThatIfYouU; \"\\nNote that if you use rm to remove a f\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_221F"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_2226"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [25, 17, 27, 0, 4, 4, 3, 112, 0.04167, 16, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     free"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "hash_freer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 0, 2, 1, 6, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "hash_compare_strings", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 2, 1, 3, 13, 0, 4, 0, 0, 0.13392857142857142, ["mov     rdx, rm_dir_len; n", "mov     rsi, rm_dir_name; src", "mov     rdi, rbp; dest", "call    _mempcpy", "lea     rdx, [filename_len+1]; n", "mov     rsi, r13; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rdi, rbp; s", "call    _strlen", "add     rax, 1", "cmp     rax, n_bytes_needed", "jnz     short loc_24DE"], ["mov~rdx,rm_dir_len", "mov~rsi,rm_dir_name", "mov~rdi,rbp", "call~FOO", "lea~rdx,[filename_len+0]", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "mov~rdi,rbp", "call~FOO", "add~rax,0", "cmp~rax,n_bytes_needed", "jnz~FOO"]], [2, 0, 5, 0, 0, 8, 1, 1, 1, 2, 0.23214285714285712, ["lea     rdi, asc_A85B+1; \".\"", "mov     ecx, 2", "mov     rsi, filename", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_245B"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,filename", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 2, 2, 0.07142857142857142, ["test    rm_dir_len, rm_dir_len", "jnz     short loc_24A0"], ["test~rm_dir_len,rm_dir_len", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 1, 4, 0.03571428571428571, ["mov     rdi, rbp; ptr", "mov     rsi, n_bytes_needed; size", "call    _realloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_248A"], ["mov~rdi,rbp", "mov~rsi,n_bytes_needed", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 8, 2, 1, 18, 0, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, filename", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [__o+10h]", "mov     rbx, [__o+18h]", "mov     __o, filename; s", "call    _strlen", "sub     ebx, r14d", "mov     r12, rax", "mov     rbp, cs:g_buf", "lea     r15, [rm_dir_len+filename_len+1]", "cmp     cs:g_n_allocated, n_bytes_needed", "jb      short loc_24B8"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,filename", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,[__o+0]", "mov~rbx,[__o+0]", "mov~__o,filename", "call~FOO", "sub~ebx,r14d", "mov~r12,rax", "mov~rbp,<TAG>", "lea~r15,[rm_dir_len+0]", "cmp~<TAG>,n_bytes_needed", "jb~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 3, -1, 0.008928571428571428, ["lea     rdx, [rm_dir_len-1]; n", "mov     rsi, rm_dir_name; src", "mov     rdi, rbp; dest", "call    _mempcpy", "mov     byte ptr [rax], 0", "jmp     short loc_248A"], ["lea~rdx,[rm_dir_len-1]+0]", "mov~rsi,rm_dir_name", "mov~rdi,rbp", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 2, 3, 0.08928571428571427, ["mov     cs:g_buf, new_buf", "mov     cs:g_n_allocated, n_bytes_needed", "jmp     loc_243C"], ["mov~<TAG>,new_buf", "mov~<TAG>,n_bytes_needed", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6563; \"full_filename0\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aStrlenGBuf1NBy; \"strlen (g_buf) + 1 == n_bytes_needed\"", "mov     edx, 15Bh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rm_dir_len", "pop     rbp", "pop     filename_len", "pop     r13", "pop     rm_dir_name", "pop     n_bytes_needed", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rm_dir_len", "pop~rbp", "pop~filename_len", "pop~r13", "pop~rm_dir_name", "pop~n_bytes_needed", "retn"]]], "func_feature": [7, 3, 13, 0, 9, 12, 3, 70, 0.06349, 6, 4], "succs": [[8, 7], [0, 2], [0, 5], [8, 6], [1, 3], [8], [1], [], []], "fname": "full_filename0", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 1, 0, 5, 0, 1, 3, -1, 0.09523809523809523, ["add     rsp, 8", "mov     rdi, filename; ptr", "pop     filename", "pop     ht", "jmp     free"], ["add~rsp,0", "mov~rdi,filename", "pop~filename", "pop~ht", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.21428571428571427, ["cmp     filename, ent", "jz      short loc_2538"], ["cmp~filename,ent", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 1, 1, 0.20238095238095238, ["mov     rsi, filename; entry", "call    hash_insert", "test    ent, ent", "jz      short loc_256D"], ["mov~rsi,filename", "call~FOO", "test~ent,ent", "jz~FOO"]], [1, 0, 6, 0, 1, 10, 2, 2, 1, 1, 0.011904761904761904, ["lea     rdx, hash_pjw; hasher", "lea     r8, hash_freer; data_freer", "lea     rcx, hash_compare_strings; comparator", "xor     esi, esi; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "test    rax, rax", "mov     rdi, rax", "mov     [ht+0], rax", "jnz     short loc_2514"], ["lea~rdx,<TAG>", "lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~rdi,rax", "mov~[ht+0],rax", "jnz~FOO"]], [1, 0, 7, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     rbp, ht", "mov     rbx, filename", "sub     rsp, 8", "mov     ht, [ht]; table", "test    rdi, rdi", "jz      short loc_2540"], ["push~rbp", "push~rbx", "mov~rbp,ht", "mov~rbx,filename", "sub~rsp,0", "mov~ht,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     filename", "pop     ht", "retn"], ["add~rsp,0", "pop~filename", "pop~ht", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 9, 4, 34, 0.06548, 3, 3], "succs": [[], [0], [1, 7], [2, 6], [3, 6], [3, 4], [], []], "fname": "AD_mark_helper", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 1, 0, 1, 5, 1, 1, 0, 0, 0.017857142857142856, ["call    ___errno_location", "test    r12d, r12d", "mov     subdir_sb, rax", "mov     eax, 14h", "cmovz   r12d, eax"], ["call~FOO", "test~r12d,r12d", "mov~subdir_sb,rax", "mov~eax,0", "cmovz~r12d,eax"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, -1, 0.10714285714285714, ["mov     eax, [subdir_sb+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_25D8"], ["mov~eax,[subdir_sb+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, -1, 0.07142857142857142, ["mov     edi, ebx; fd", "call    _fdopendir", "test    subdir_dirp, subdir_dirp", "jz      short loc_2600"], ["mov~edi,ebx", "call~FOO", "test~subdir_dirp,subdir_dirp", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 2, -1, 0.05357142857142857, ["call    ___errno_location", "mov     subdir_sb, rax", "mov     r12d, [rax]", "jmp     short loc_25EC"], ["call~FOO", "mov~subdir_sb,rax", "mov~r12d,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 1, 7, 1, 2, 1, -1, 0.10714285714285714, ["mov     rdx, subdir_sb; stat_buf", "mov     esi, eax; fildes", "mov     edi, 1; ver", "mov     ebx, eax", "call    ___fxstat", "test    eax, eax", "jnz     short loc_2600"], ["mov~rdx,subdir_sb", "mov~esi,eax", "mov~edi,0", "mov~ebx,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 8, 0, 1, 11, 3, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "xor     eax, eax", "push    rbx", "mov     r12d, edx", "mov     rbp, subdir_sb", "mov     edx, 20900h; oflag", "xor     ecx, ecx", "call    _openat", "test    eax, eax", "js      short loc_2610"], ["push~r12", "push~rbp", "xor~eax,eax", "push~rbx", "mov~r12d,edx", "mov~rbp,subdir_sb", "mov~edx,0", "xor~ecx,ecx", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     subdir_sb", "pop     prev_errno", "retn"], ["pop~rbx", "pop~subdir_sb", "pop~prev_errno", "retn"]], [0, 0, 0, 0, 0, 5, 1, 0, 1, 0, 0.0, ["pop     rbx", "xor     eax, eax", "pop     subdir_sb", "pop     prev_errno", "retn"], ["pop~rbx", "xor~eax,eax", "pop~subdir_sb", "pop~prev_errno", "retn"]], [0, 0, 0, 0, 1, 8, 1, 1, 3, -1, 0.0, ["mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r12d", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     saved_errno", "retn"], ["mov~edi,ebx", "call~FOO", "mov~[rbp+0],r12d", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~saved_errno", "retn"]]], "func_feature": [6, 9, 11, 0, 9, 10, 2, 52, 0.03968, 0, 0], "succs": [[8], [0, 2], [3, 6], [8], [1, 3], [4, 7], [], [], []], "fname": "fd_to_subdirp", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6677; \"AD_mark_current_as_unremovable\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, a1AdStackHeight; \"1 < AD_stack_height (ds)\"", "mov     edx, 27Ch; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [4, 0, 3, 4, 2, 26, 0, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, ds_0", "sub     rsp, 8", "mov     rdx, [ds_0+68h]", "mov     rax, [ds_0+70h]", "mov     r13, [ds_0+18h]", "mov     r12, [ds_0+0C8h]", "sub     rax, rdx", "shr     eax, 3", "mov     rbp, [rdx+rax*8-8]", "mov     ds_0, rbp; n", "sub     r13, rbp", "call    xmalloc", "lea     rdx, [rbp-1]; n", "mov     rsi, r13; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rcx, rax", "mov     byte ptr [rax+rbp-1], 0", "mov     rax, [ds_0+0C8h]", "sub     rax, [ds_0+0C0h]", "cmp     eax, 3Fh ; '?'", "jbe     short loc_2697"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,ds_0", "sub~rsp,0", "mov~rdx,[ds_0+0]", "mov~rax,[ds_0+0]", "mov~r13,[ds_0+0]", "mov~r12,[ds_0+0]", "sub~rax,rdx", "shr~eax,0", "mov~rbp,[rdx+0]", "mov~ds_0,rbp", "sub~r13,rbp", "call~FOO", "lea~rdx,[rbp-1]+0]", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~[yte ptr [rax+0],0", "mov~rax,[ds_0+0]", "sub~rax,[ds_0+0]", "cmp~eax,0", "jbe~FOO"]], [1, 0, 1, 1, 0, 8, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "lea     rdi, [r12-40h]", "mov     rsi, rcx", "pop     ds_0", "pop     rbp", "pop     r12", "pop     r13", "jmp     AD_mark_helper"], ["add~rsp,0", "lea~rdi,[r12-40h]+0]", "mov~rsi,rcx", "pop~ds_0", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [3, 0, 4, 0, 4, 3, 2, 39, 0.04167, 3, 5], "succs": [[], [0, 2], [3], []], "fname": "AD_mark_current_as_unremovable", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 4, 0, 0, 4, 1, 1, 0, 0, 0.13333333333333333, ["mov     rbx, ds_0", "mov     ds_0, [rax-20h]; table", "test    rdi, rdi", "jz      short loc_26EF"], ["mov~rbx,ds_0", "mov~ds_0,[rax-20h]+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 6, 1, 0, 6, 0, 0, 0, 1, 0.0, ["push    rbx", "mov     rax, [ds_0+0C8h]", "mov     rdx, rax", "sub     rdx, [ds_0+0C0h]", "cmp     edx, 1Fh", "jbe     short loc_2724"], ["push~rbx", "mov~rax,[ds_0+0]", "mov~rdx,rax", "sub~rdx,[ds_0+0]", "cmp~edx,0", "jbe~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["sub     rax, 20h", "mov     [ds_0+0C8h], rax", "pop     ds_0", "retn"], ["sub~rax,<STR>", "mov~[ds_0+0],rax", "pop~ds_0", "retn"]], [1, 0, 2, 1, 0, 4, 0, 1, 2, -1, 0.2, ["mov     rdx, [ds_0+0D0h]", "sub     rdx, rax", "cmp     rdx, 0FFFFFFFFFFFFFFE0h", "jge     short loc_2717"], ["mov~rdx,[ds_0+0]", "sub~rdx,rax", "cmp~rdx,0", "jge~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 3, -1, 0.0, ["lea     rdi, [ds_0+0B0h]; struct obstack *", "mov     esi, 0FFFFFFE0h; int", "call    __obstack_newchunk", "mov     rax, [ds_0+0C8h]"], ["lea~rdi,[ds_0+0]", "mov~esi,0", "call~FOO", "mov~rax,[ds_0+0]"]], [0, 0, 3, 0, 1, 2, 0, 1, 2, -1, 0.0, ["call    hash_free", "mov     rax, [ds_0+0C8h]"], ["call~FOO", "mov~rax,[ds_0+0]"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6595; \"AD_stack_pop\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     ds_0, a0AdStackHeight; \"0 < AD_stack_height (ds)\"", "mov     edx, 1ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~ds_0,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [3, 1, 5, 0, 7, 8, 4, 29, 0.04762, 3, 3], "succs": [[3, 5], [0, 6], [], [2, 4], [2], [3], []], "fname": "AD_stack_pop", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.17857142857142855, ["test    rax, rax", "js      short loc_27B6"], ["test~rax,rax", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["mov     rax, [st+30h]", "jmp     short loc_275E"], ["mov~rax,[st+0]", "jmp~FOO"]], [1, 0, 7, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbx", "mov     rax, [st+30h]", "mov     rbx, st", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_2770"], ["push~rbx", "mov~rax,[st+0]", "mov~rbx,st", "cmp~rax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 2, -1, 0.0, ["xor     eax, eax", "pop     st", "retn"], ["xor~eax,eax", "pop~st", "retn"]], [1, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["mov     [rax], edx", "mov     eax, 0FFFFFFFFh", "pop     st", "retn"], ["mov~<TAG>,edx", "mov~eax,0", "pop~st", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.05952380952380952, ["call    ___errno_location", "mov     rdx, [st+8]", "jmp     short loc_27A0"], ["call~FOO", "mov~rdx,[st+0]", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 2, -1, 0.03571428571428571, ["mov     qword ptr [st+30h], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "movsxd  rdx, dword ptr [rax]", "mov     [st+8], rdx"], ["mov~[word ptr [st+0],0", "call~FOO", "movsxd~rdx,<TAG>", "mov~[st+0],rdx"]], [2, 0, 6, 0, 1, 8, 1, 2, 1, 3, 0.05952380952380952, ["mov     rcx, st; stat_buf", "mov     r8d, 100h; flag", "mov     st, file; filename", "mov     esi, edi; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      short loc_27B0"], ["mov~rcx,st", "mov~r8d,0", "mov~st,file", "mov~esi,edi", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]]], "func_feature": [3, 3, 8, 0, 8, 9, 6, 31, 0.0506, 0, 0], "succs": [[3, 5], [0], [0, 7], [], [], [4], [4], [1, 6]], "fname": "cache_fstatat", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 12, 0, 0, 8, 1, 1, 0, 0, 0.04963235294117647, ["lea     r8, static_buf_6575", "test    rm_dir_len, rm_dir_len", "lea     rsi, [filename+rax-1FFh]", "mov     ecx, 40h ; '@'", "mov     rdi, r8", "mov     rax, r8", "rep movsq", "jz      short loc_2908"], ["lea~r8,<TAG>", "test~rm_dir_len,rm_dir_len", "lea~rsi,[filename+0]", "mov~ecx,0", "mov~rdi,r8", "mov~rax,r8", "movsq~<TAG>,<TAG>", "jz~FOO"]], [0, 1, 16, 1, 2, 11, 0, 3, 1, 2, 0.05514705882352941, ["mov     r8, [ds_0+18h]", "mov     rdi, cs:g_buf; ptr", "mov     r13, [ds_0+10h]", "mov     ebx, r8d", "call    free", "mov     rdi, filename; s", "sub     ebx, r13d", "call    _strlen", "lea     rdx, [rax+1]; n", "cmp     rdx, 200h", "ja      short loc_2890"], ["mov~r8,[ds_0+0]", "mov~rdi,<TAG>", "mov~r13,[ds_0+0]", "mov~ebx,r8d", "call~FOO", "mov~rdi,filename", "sub~ebx,r13d", "call~FOO", "lea~rdx,[rax+0]", "cmp~rdx,<STR>", "ja~FOO"]], [1, 0, 5, 1, 0, 3, 0, 0, 7, -1, 0.0, ["movzx   ecx, word ptr [rsi+rax]", "mov     [rdi+rax], cx", "add     rax, 2"], ["movzx~ecx,<TAG>", "mov~<TAG>,cx", "add~rax,0"]], [1, 0, 6, 0, 0, 2, 1, 1, 6, -1, 0.1948529411764706, ["test    dl, 2", "jz      short loc_28F5"], ["test~dl,0", "jz~FOO"]], [0, 0, 11, 1, 0, 2, 0, 1, 3, 0, 0.06985294117647059, ["sub     rm_dir_len, r15", "jmp     short loc_28B5"], ["sub~rm_dir_len,r15", "jmp~FOO"]], [0, 1, 13, 1, 1, 10, 0, 2, 2, 1, 0.04963235294117647, ["lea     r8, static_buf_6575", "mov     r15d, 200h", "mov     rsi, filename; src", "sub     r15, rdx", "lea     rdi, [r8+r15]; dest", "mov     [rsp+48h+var_40], r8", "call    _memcpy", "cmp     rm_dir_len, r15", "mov     r8, [rsp+48h+var_40]", "ja      loc_2920"], ["lea~r8,<TAG>", "mov~r15d,<STR>", "mov~rsi,filename", "sub~r15,rdx", "lea~rdi,<TAG>", "mov~[rsp+0],r8", "call~FOO", "cmp~rm_dir_len,r15", "mov~r8,[rsp+0]", "ja~FOO"]], [1, 0, 17, 1, 2, 17, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, filename", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, ds_0", "sub     rsp, 18h", "call    ___errno_location", "mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "mov     rbp, rax", "mov     r12d, [rax]", "call    full_filename0", "test    full_name, full_name", "jz      short loc_2818"], ["push~r15", "push~r14", "mov~r14,filename", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,ds_0", "sub~rsp,0", "call~FOO", "mov~rsi,filename", "mov~rdi,ds_0", "mov~rbp,rax", "mov~r12d,<TAG>", "call~FOO", "test~full_name,full_name", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 0, 5, -1, 0.0, ["shr     r15d, 3", "mov     ecx, r15d", "rep movsq"], ["shr~r15d,0", "mov~ecx,r15d", "movsq~<TAG>,<TAG>"]], [1, 0, 10, 0, 0, 5, 0, 0, 4, -1, 0.1948529411764706, ["cmp     r15d, 8", "mov     edx, r15d", "lea     rdi, static_buf_6575", "lea     rsi, [r13+rbx+0]", "jb      short loc_28D4"], ["cmp~r15d,0", "mov~edx,r15d", "lea~rdi,<TAG>", "lea~rsi,[r13+0]", "jb~FOO"]], [0, 0, 1, 1, 1, 6, 0, 2, 3, -1, 0.005514705882352941, ["sub     r15, rm_dir_len", "mov     rdx, rm_dir_len; n", "mov     rsi, r13; src", "lea     rdi, [r8+r15]; dest", "call    _memcpy", "jmp     loc_27FF"], ["sub~r15,rm_dir_len", "mov~rdx,rm_dir_len", "mov~rsi,r13", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 2, 1, 5, -1, 0.20955882352941177, ["xor     eax, eax", "test    dl, 4", "jz      short loc_28E4"], ["xor~eax,eax", "test~dl,0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 0, 6, -1, 0.0, ["mov     eax, [rsi]", "mov     [rdi], eax", "mov     eax, 4"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~eax,0"]], [0, 0, 2, 0, 0, 1, 0, 0, 8, -1, 0.07720588235294118, ["lea     rax, static_buf_6575"], ["lea~rax,<TAG>"]], [1, 0, 4, 0, 0, 2, 1, 1, 7, -1, 0.15073529411764705, ["and     edx, 1", "jz      short loc_2901"], ["and~edx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 8, -1, 0.0, ["movzx   edx, byte ptr [rsi+rax]", "mov     [rdi+rax], dl"], ["movzx~edx,<TAG>", "mov~<TAG>,dl"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     [rbp+0], r12d", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     saved_errno", "pop     r13", "pop     filename", "pop     r15", "retn"], ["mov~[rbp+0],r12d", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~saved_errno", "pop~r13", "pop~filename", "pop~r15", "retn"]], [2, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.04595588235294117, ["mov     cs:static_buf_6575, 2E2E2E5Bh", "mov     cs:byte_20E0A4, 5Dh ; ']'", "jmp     loc_27FF"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 1, 0, 3, -1, 0.0661764705882353, ["xor     r15d, r15d"], ["xor~r15d,r15d"]]], "func_feature": [6, 7, 16, 1, 18, 25, 23, 91, 0.06495, 3, 7], "succs": [[16, 17], [0, 5], [13], [2, 13], [8], [9, 4], [1, 15], [10], [10, 7], [15], [11, 3], [3], [16], [12, 14], [12], [], [15], [8]], "fname": "full_filename_", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[3, 0, 2, 3, 0, 11, 0, 1, 0, 0, 0.0935672514619883, ["lea     rax, [rcx+20h]", "mov     [ds_0+0C8h], rax", "sub     rax, [ds_0+0C0h]", "shr     eax, 5", "mov     edx, eax", "mov     rax, [ds_0+70h]", "sub     rax, [ds_0+68h]", "shr     eax, 3", "add     rax, 1", "cmp     rdx, rax", "jnz     loc_2B1F"], ["lea~rax,[rcx+0]", "mov~[ds_0+0],rax", "sub~rax,[ds_0+0]", "shr~eax,0", "mov~edx,eax", "mov~rax,[ds_0+0]", "sub~rax,[ds_0+0]", "shr~eax,0", "add~rax,0", "cmp~rdx,rax", "jnz~FOO"]], [0, 1, 3, 0, 1, 5, 0, 2, 7, 2, 0.0, ["lea     rdi, [ds_0+0B0h]; struct obstack *", "mov     esi, 20h ; ' '; int", "call    __obstack_newchunk", "mov     rcx, [ds_0+0C8h]", "jmp     loc_2A17"], ["lea~rdi,[ds_0+0]", "mov~esi,<STR>", "call~FOO", "mov~rcx,[ds_0+0]", "jmp~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 6, 2, 0.16374269005847952, ["mov     rcx, [ds_0+0C8h]", "mov     rax, [ds_0+0D0h]", "sub     rax, rcx", "cmp     rax, 1Fh", "jle     short loc_2A90"], ["mov~rcx,[ds_0+0]", "mov~rax,[ds_0+0]", "sub~rax,rcx", "cmp~rax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 7, 1, 2, 5, 3, 0.22807017543859648, ["mov     [rax], rbx", "add     qword ptr [ds_0+70h], 8", "lea     rdi, [ds_0+108h]; state", "mov     rsi, dir_sb_from_parent; sb", "call    cycle_check", "test    al, al", "jnz     loc_2AD0"], ["mov~<TAG>,rbx", "add~[word ptr [ds_0+0],0", "lea~rdi,[ds_0+0]", "mov~rsi,dir_sb_from_parent", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 8, 1, 0, 7, 0, 0, 4, 4, 0.2573099415204678, ["mov     [ds_0+18h], rax", "mov     byte ptr [rdx], 2Fh ; '/'", "add     rbx, 1", "mov     rax, [ds_0+70h]", "lea     rdx, [rax+8]", "cmp     [ds_0+78h], rdx", "jnb     short loc_29E1"], ["mov~[ds_0+0],rax", "mov~<TAG>,0", "add~rbx,0", "mov~rax,[ds_0+0]", "lea~rdx,[rax+0]", "cmp~[ds_0+0],rdx", "jnb~FOO"]], [1, 0, 7, 0, 1, 4, 0, 1, 5, 4, 0.0, ["lea     rdi, [ds_0+58h]; struct obstack *", "mov     esi, 8; int", "call    __obstack_newchunk", "mov     rax, [ds_0+70h]"], ["lea~rdi,[ds_0+0]", "mov~esi,0", "call~FOO", "mov~rax,[ds_0+0]"]], [1, 0, 9, 0, 1, 6, 0, 2, 4, 5, 0.0, ["mov     esi, 1; int", "mov     rdi, ds_0; struct obstack *", "call    __obstack_newchunk", "mov     rdx, [ds_0+18h]", "lea     rax, [rdx+1]", "jmp     loc_29B6"], ["mov~esi,0", "mov~rdi,ds_0", "call~FOO", "mov~rdx,[ds_0+0]", "lea~rax,[rdx+0]", "jmp~FOO"]], [0, 0, 10, 1, 1, 9, 0, 2, 3, 5, 0.2631578947368421, ["mov     rdx, r14; n", "mov     rsi, dir; src", "call    _memcpy", "mov     rdx, [ds_0+18h]", "add     rdx, r14", "lea     rax, [rdx+1]", "cmp     rax, [ds_0+20h]", "mov     [ds_0+18h], rdx", "ja      loc_2A70"], ["mov~rdx,r14", "mov~rsi,dir", "call~FOO", "mov~rdx,[ds_0+0]", "add~rdx,r14", "lea~rax,[rdx+0]", "cmp~rax,[ds_0+0]", "mov~[ds_0+0],rdx", "ja~FOO"]], [1, 0, 0, 0, 0, 11, 0, 0, 8, -1, 0.0, ["mov     rax, [dir_sb_from_parent]", "mov     [rcx+18h], rax", "mov     rax, [dir_sb_from_parent+8]", "mov     qword ptr [rcx], 0", "mov     [rcx+10h], rax", "pop     rbx", "pop     ds_0", "pop     dir_sb_from_parent", "pop     dir", "pop     r14", "retn"], ["mov~rax,<TAG>", "mov~[rcx+0],rax", "mov~rax,[dir_sb_from_parent+0]", "mov~<TAG>,0", "mov~[rcx+0],rax", "pop~rbx", "pop~ds_0", "pop~dir_sb_from_parent", "pop~dir", "pop~r14", "retn"]], [2, 0, 0, 0, 5, 19, 4, 5, 6, -1, 0.0, ["lea     rsi, asc_A85B+1; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "mov     rcx, rbx", "xor     eax, eax", "call    _error", "lea     rdi, [ds_0+128h]", "mov     esi, 1", "call    ___longjmp_chk"], ["lea~rsi,<TAG>", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "mov~rcx,rbx", "xor~eax,eax", "call~FOO", "lea~rdi,[ds_0+0]", "mov~esi,0", "call~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 1, 7, 0.07602339181286549, ["mov     rbx, rax", "jmp     loc_297D"], ["mov~rbx,rax", "jmp~FOO"]], [1, 0, 19, 0, 1, 12, 0, 1, 0, 8, 0.0, ["push    r14", "push    r13", "mov     r13, dir", "push    r12", "push    rbp", "mov     rbp, ds_0", "push    rbx", "mov     ds_0, dir; s", "mov     r12, dir_sb_from_parent", "call    _strlen", "cmp     rax, 1", "jbe     loc_2AC8"], ["push~r14", "push~r13", "mov~r13,dir", "push~r12", "push~rbp", "mov~rbp,ds_0", "push~rbx", "mov~ds_0,dir", "mov~r12,dir_sb_from_parent", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 2, 8, 0.0029239766081871343, ["jmp     loc_2AC8"], ["jmp~FOO"]], [0, 0, 12, 0, 0, 5, 0, 0, 2, 6, 0.24561403508771928, ["mov     rdi, [ds_0+18h]; dest", "movsxd  r14, ebx", "lea     rax, [rdi+r14]", "cmp     [ds_0+20h], rax", "jb      loc_2AB0"], ["mov~rdi,[ds_0+0]", "movsxd~r14,ebx", "lea~rax,<TAG>", "cmp~[ds_0+0],rax", "jb~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 3, 7, 0.008771929824561403, ["cmp     byte ptr [dir+rbx-1], 2Fh ; '/'", "lea     rax, [rbx-1]", "jnz     short loc_297D"], ["cmp~[yte ptr [dir+0],0", "lea~rax,[rbx-1]+0]", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 2, 7, 0.09064327485380116, ["cmp     rbx, 1", "jnz     short loc_2968"], ["cmp~rbx,0", "jnz~FOO"]], [0, 0, 11, 0, 1, 5, 0, 2, 3, 6, 0.0, ["mov     rdi, ds_0; struct obstack *", "mov     esi, ebx; int", "call    __obstack_newchunk", "mov     rdi, [ds_0+18h]", "jmp     loc_2992"], ["mov~rdi,ds_0", "mov~esi,ebx", "call~FOO", "mov~rdi,[ds_0+0]", "jmp~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 4, 8, 0.0029239766081871343, ["mov     rbx, rax"], ["mov~rbx,rax"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6698; \"AD_push\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aAdStackHeightD; \"AD_stack_height (ds) == 1 + obstack_obj\"...", "mov     edx, 2CBh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 1, 8, 0.011695906432748537, ["cmp     byte ptr [dir+rax-1], 2Fh ; '/'", "lea     rbx, [rax-1]", "jz      short loc_2977"], ["cmp~[yte ptr [dir+0],0", "lea~rbx,[rax-1]+0]", "jz~FOO"]]], "func_feature": [13, 5, 25, 0, 20, 27, 2, 123, 0.07222, 5, 7], "succs": [[8, 18], [0], [0, 1], [9, 2], [3, 5], [3], [4], [4, 6], [], [], [13], [10, 19], [10], [16, 7], [17, 13], [13, 14], [7], [15], [], [12, 15]], "fname": "AD_push", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 10, 0, 2, 6, 0, 2, 0, 0, 0.04489981785063752, ["mov     rdi, ds_0; ds_0", "mov     rsi, filename; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "mov     ds_0, rax"], ["mov~rdi,ds_0", "mov~rsi,filename", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~ds_0,rax"]], [0, 0, 11, 0, 0, 1, 0, 1, 5, -1, 0.014754098360655738, ["jmp     loc_2BF0"], ["jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, -1, 0.007923497267759563, ["mov     dword ptr [rcx], 0", "jmp     loc_2BF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 6, -1, 0.0336976320582878, ["cmp     r10d, 0Ah", "jz      loc_2C95"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 6, -1, 0.14007285974499084, ["cmp     byte ptr [x+9], 0", "jz      loc_2EA8"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 5, -1, 0.1540983606557377, ["cmp     r10d, 4", "jz      loc_2D00"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 0, 8, -1, 0.015300546448087432, ["mov     dword ptr [rcx], 4", "nop     word ptr [rax+rax+00000000h]"], ["mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [3, 0, 0, 1, 4, 25, 3, 4, 7, -1, 0.0, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     filename, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, quoted_name", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "add     rsp, 18h", "mov     eax, 4", "pop     quoted_name", "pop     sbuf", "pop     fd_cwd", "pop     wp_errno", "pop     x", "pop     ds_0", "retn"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~filename,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,quoted_name", "mov~rdx,rax", "mov~esi,r13d", "xor~eax,eax", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~quoted_name", "pop~sbuf", "pop~fd_cwd", "pop~wp_errno", "pop~x", "pop~ds_0", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 7, -1, 0.001366120218579235, ["mov     r13d, 15h", "jmp     short loc_2E38"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 43, 0, 1, 6, 0, 2, 10, -1, 0.025683060109289616, ["mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    ___errno_location", "mov     r13d, [rax]", "cmp     r13d, 0Dh", "jnz     loc_2E38"], ["mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "mov~r13d,<TAG>", "cmp~r13d,0", "jnz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.004371584699453552, ["call    ___errno_location", "mov     r13d, [rax]"], ["call~FOO", "mov~r13d,<TAG>"]], [1, 0, 10, 0, 0, 3, 0, 1, 13, -1, 0.01459016393442623, ["mov     rax, [rsp+48h+is_empty]", "mov     dword ptr [rax], 4", "jmp     loc_2C06"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 15, 0, 1, 8, 1, 2, 12, -1, 0.026748633879781422, ["mov     rax, qword ptr [rsp+48h+fd]", "mov     rdi, r14; dirp", "mov     edx, [rax]", "mov     [rsp+48h+fd], edx", "call    _closedir", "mov     edx, [rsp+48h+fd]", "test    edx, edx", "jnz     loc_2DA5"], ["mov~rax,<TAG>", "mov~rdi,r14", "mov~edx,<TAG>", "mov~<TAG>,edx", "call~FOO", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 3, 7, 0.001366120218579235, ["cmp     byte ptr [x+18h], 0", "jz      short loc_2BB8"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 2, 7, 0.014754098360655738, ["cmp     eax, 3", "jz      loc_2C88"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 4, 6, 0.014754098360655738, ["cmp     r10d, 0Ah", "jz      short loc_2BB8"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 56, 0, 0, 3, 1, 1, 3, 6, 0.027868852459016394, ["xor     r13d, r13d", "cmp     r10d, 0Ah", "jnz     loc_2B90"], ["xor~r13d,r13d", "cmp~r10d,0", "jnz~FOO"]], [1, 0, 47, 0, 1, 9, 1, 2, 9, -1, 0.01953551912568306, ["mov     esi, 2; type", "mov     rdi, rax; name", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    _euidaccess", "test    eax, eax", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jz      loc_2BAF"], ["mov~esi,0", "mov~rdi,rax", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "test~eax,eax", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 49, 0, 1, 9, 1, 2, 8, 1, 0.012158469945355192, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    full_filename0", "test    rax, rax", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jz      loc_3039"], ["mov~rsi,filename", "mov~rdi,ds_0", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "test~rax,rax", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 53, 0, 0, 6, 1, 1, 6, 3, 0.029234972677595627, ["mov     eax, [sbuf+18h]", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_2BAF"], ["mov~eax,[sbuf+0]", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 54, 0, 1, 8, 1, 2, 5, 4, 0.020491803278688523, ["mov     rdx, sbuf; st", "mov     rsi, filename; file", "mov     edi, r12d; fd", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    cache_fstatat", "test    eax, eax", "jnz     loc_2E30"], ["mov~rdx,sbuf", "mov~rsi,filename", "mov~edi,r12d", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 7, -1, 0.07747723132969034, ["mov     rdx, sbuf; st", "mov     rsi, filename; file", "mov     edi, r12d; fd", "call    cache_fstatat", "test    eax, eax", "jnz     loc_2DF8"], ["mov~rdx,sbuf", "mov~rsi,filename", "mov~edi,r12d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 25, 0, 2, 8, 0, 3, 7, -1, 0.13214936247723127, ["mov     rdi, ds_0; ds_0", "mov     rsi, filename; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "cmp     [rsp+48h+mode], 2", "mov     ds_0, rax", "jnz     loc_2C06"], ["mov~rdi,ds_0", "mov~rsi,filename", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~[rsp+0],0", "mov~ds_0,rax", "jnz~FOO"]], [1, 0, 21, 0, 0, 6, 2, 1, 13, -1, 0.011256830601092897, ["xor     edx, edx", "cmp     byte ptr [rax+14h], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+14h]", "test    al, al", "jz      short loc_2D70"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 12, -1, 0.025683060109289616, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jnz     short loc_2D9D"], ["cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, -1, 0.002185792349726776, ["mov     dword ptr [rcx], 0Ah", "jmp     loc_2C95"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 36, 0, 0, 5, 1, 1, 6, -1, 0.031420765027322405, ["mov     eax, [sbuf+18h]", "mov     rcx, qword ptr [rsp+48h+fd]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_2FD0"], ["mov~eax,[sbuf+0]", "mov~rcx,<TAG>", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, -1, 0.02459016393442623, ["cmp     dword ptr [x+4], 3", "jnz     loc_2BB8"], ["cmp~[word ptr [x+0],0", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 14, -1, 0.0012295081967213114, ["cmp     al, 2Fh ; '/'", "jz      short loc_2D70"], ["cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 9, -1, 0.01518670309653916, ["lea     rsi, aSRemoveWritePr; \"%s: remove write-protected %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     loc_2C4A"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 8, -1, 0.052504553734061946, ["mov     rdi, sbuf; st", "call    file_type", "test    r13d, r13d", "mov     sbuf, rax", "mov     filename, cs:program_name", "mov     edx, 5; category", "jnz     loc_2E90"], ["mov~rdi,sbuf", "call~FOO", "test~r13d,r13d", "mov~sbuf,rax", "mov~filename,<TAG>", "mov~edx,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 1, 9, -1, 0.01518670309653916, ["lea     rsi, aSRemoveSS; \"%s: remove %s %s? \"", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO"]], [0, 0, 55, 0, 1, 7, 1, 2, 4, 5, 0.058469945355191254, ["mov     [rsp+48h+pdirent_type], pdirent_type_0", "mov     [rsp+48h+fd], r10d", "call    can_write_any_file", "test    al, al", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]; flag", "jz      loc_2EE0"], ["mov~[rsp+0],pdirent_type_0", "mov~<TAG>,r10d", "call~FOO", "test~al,al", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 5, -1, 0.06775956284153005, ["mov     eax, [x+4]"], ["mov~eax,[x+0]"]], [0, 0, 45, 0, 0, 1, 0, 1, 9, -1, 0.0020491803278688526, ["jmp     loc_2BAF"], ["jmp~FOO"]], [0, 0, 21, 0, 1, 4, 1, 2, 11, -1, 0.06527322404371584, ["mov     rdi, r14; dirp", "call    _readdir", "test    rax, rax", "jz      loc_2FE0"], ["mov~rdi,r14", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 38, 0, 1, 7, 1, 2, 5, -1, 0.03306010928961749, ["mov     rdx, sbuf; st", "mov     rsi, filename; file", "mov     edi, r12d; fd", "mov     qword ptr [rsp+48h+fd], rcx", "call    cache_fstatat", "test    eax, eax", "jnz     loc_2E30"], ["mov~rdx,sbuf", "mov~rsi,filename", "mov~edi,r12d", "mov~<TAG>,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.09262295081967213, ["cmp     eax, 3", "jz      short loc_2BD0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 60, 0, 0, 7, 0, 1, 1, 8, 0.015846994535519125, ["cmp     byte ptr [x], 0", "mov     r14, x", "mov     rbp, sbuf", "mov     rbx, filename", "mov     r15, ds_0", "mov     r12d, edi", "jnz     short loc_2BB3"], ["cmp~<TAG>,0", "mov~r14,x", "mov~rbp,sbuf", "mov~rbx,filename", "mov~r15,ds_0", "mov~r12d,edi", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0.00896174863387978, ["mov     eax, 2"], ["mov~eax,0"]], [3, 0, 61, 1, 0, 13, 0, 1, 0, 9, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r10d, [pdirent_type_0]", "mov     rax, [rsp+48h+is_empty]", "mov     dword ptr [rax], 2", "mov     eax, [x+4]", "cmp     eax, 5", "jz      short loc_2BB8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r10d,<TAG>", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~eax,[x+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 1, 5, 1, 2, 11, -1, 0.02530054644808743, ["call    yesno", "mov     edx, eax", "mov     eax, 3", "test    dl, dl", "jnz     loc_2BB8"], ["call~FOO", "mov~edx,eax", "mov~eax,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 46, 0, 1, 8, 1, 2, 8, -1, 0.03510928961748634, ["mov     esi, 2; mode", "mov     rdi, sbuf; st", "mov     r13d, 1", "call    euidaccess_stat", "test    al, al", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jz      loc_2BD3"], ["mov~esi,0", "mov~rdi,sbuf", "mov~r13d,0", "call~FOO", "test~al,al", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 9, -1, 0.04410746812386157, ["mov     rax, [rsp+48h+is_empty]", "test    r13d, r13d", "mov     filename, cs:program_name", "mov     dword ptr [rax], 3", "jz      loc_2EB0"], ["mov~rax,[rsp+0]", "test~r13d,r13d", "mov~filename,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 24, 0, 1, 7, 2, 2, 8, -1, 0.10760473588342442, ["xor     eax, eax", "mov     edx, 30900h; oflag", "mov     rsi, filename; file", "mov     edi, r12d; fd", "call    _openat", "test    eax, eax", "js      short loc_2DA5"], ["xor~eax,eax", "mov~edx,0", "mov~rsi,filename", "mov~edi,r12d", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 10, -1, 0.0021311475409836063, ["mov     edi, edx; fd", "call    _close", "jmp     loc_2DA5"], ["mov~edi,edx", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 13, -1, 0.005, ["mov     rdi, r14; dirp", "call    _closedir"], ["mov~rdi,r14", "call~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 4, -1, 0.18688524590163935, ["test    r10d, r10d", "jz      loc_2CA8"], ["test~r10d,r10d", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 10, -1, 0.012627504553734063, ["lea     rsi, aSDescendIntoDi; \"%s: descend into directory %s? \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     loc_2DD3"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 52, 2, 1, 11, 0, 2, 7, 2, 0.038524590163934426, ["mov     rdi, filename; s", "mov     [rsp+48h+pdirent_type], rcx", "mov     [rsp+48h+fd], r10d", "call    _strlen", "mov     rdx, [ds_0+18h]", "sub     edx, [ds_0+10h]", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "add     rax, rdx", "cmp     rax, 0FFFh", "ja      loc_3010"], ["mov~rdi,filename", "mov~[rsp+0],rcx", "mov~<TAG>,r10d", "call~FOO", "mov~rdx,[ds_0+0]", "sub~edx,[ds_0+0]", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "add~rax,rdx", "cmp~rax,0", "ja~FOO"]], [2, 0, 42, 0, 0, 5, 0, 1, 11, -1, 0.032513661202185795, ["mov     dword ptr [rax], 0", "mov     r13d, 1", "mov     r10d, [rsp+48h+fd]", "mov     rcx, [rsp+48h+pdirent_type]", "jmp     loc_2BD3"], ["mov~<TAG>,0", "mov~r13d,0", "mov~r10d,<TAG>", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 12, -1, 0.0018579234972677598, ["jmp     loc_2BBD"], ["jmp~FOO"]], [2, 0, 1, 0, 3, 14, 3, 4, 8, -1, 0.003934426229508197, ["lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     filename, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, quoted_name", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "mov     eax, 4", "jmp     loc_2BBD"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~filename,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,quoted_name", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 1, 1, 10, -1, 0.012627504553734063, ["lea     rsi, aSDescendIntoWr; \"%s: descend into write-protected direct\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO"]], [0, 0, 42, 0, 0, 1, 1, 0, 3, -1, 0.09398907103825137, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [0, 0, 23, 0, 1, 7, 1, 2, 9, -1, 0.07049180327868852, ["mov     edi, eax; fd", "mov     [rsp+48h+fd], eax", "call    _fdopendir", "test    rax, rax", "mov     x, rax", "mov     edx, [rsp+48h+fd]", "jz      loc_2ED0"], ["mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "test~rax,rax", "mov~x,rax", "mov~edx,<TAG>", "jz~FOO"]], [1, 0, 21, 0, 1, 4, 0, 1, 10, -1, 0.05879781420765027, ["call    ___errno_location", "mov     qword ptr [rsp+48h+fd], rax", "mov     dword ptr [rax], 0", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~<TAG>,rax", "mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [1, 0, 32, 0, 0, 2, 0, 1, 7, -1, 0.027049180327868853, ["cmp     eax, 4000h", "jz      short loc_2CF0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 1, 8, 1, 2, 11, -1, 0.01705828779599271, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, quoted_name", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_2C69"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,quoted_name", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 8, 1, 1, 10, -1, 0.020537340619307825, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r9, quoted_name", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r9,quoted_name", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]]], "func_feature": [37, 34, 85, 0, 62, 94, 2, 305, 0.03472, 7, 5], "succs": [[21], [0], [0], [0, 27], [8, 22], [3, 4], [4], [], [7], [51, 7], [7], [21], [11, 44], [40, 15], [16, 13], [32, 40], [32, 27], [9, 34], [17, 33], [34, 50], [10, 19], [54, 30], [21, 45], [36, 28], [47, 23], [27], [25, 59], [40, 1], [36, 47], [61], [29, 31], [61], [34, 20], [], [38], [34], [24, 12], [10, 26], [40, 56], [14, 38], [52], [40, 39], [40, 53], [48, 35], [49, 55], [57, 44], [44], [44], [37, 5], [60], [18, 43], [48], [], [52], [52], [60], [48], [58, 46], [36], [2, 6], [42], [42]], "fname": "prompt", "n_num": 62}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 48, 0, 0, 2, 0, 1, 0, 0, 0.01315020455873758, ["cmp     eax, 14h", "jz      loc_308C"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 2, 0.0029222676797194622, ["cmp     eax, 2", "jz      loc_308C"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 3, 0, 4, 18, 3, 5, 3, 2, 0.0017533606078316772, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     s, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 15h; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     ebx, 4", "call    _error", "jmp     loc_308C"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~s,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "xor~edi,edi", "xor~eax,eax", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 2, 3, 0.0026300409117475157, ["cmp     byte ptr [x+9], 0", "jz      loc_32C0"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [2, 0, 3, 0, 4, 20, 3, 5, 8, 2, 0.009059029807130333, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "mov     [rsp+58h+var_58], r8", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     s, rax", "call    _dcgettext", "mov     r8, [rsp+58h+var_58]", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     ebx, 4", "mov     esi, [r8]; errnum", "call    _error", "jmp     loc_308C"], ["mov~rsi,filename", "mov~rdi,ds_0", "mov~<TAG>,r8", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~s,rax", "call~FOO", "mov~r8,<TAG>", "mov~rcx,rbx", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~ebx,0", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 9, 3, 0.012857977790765633, ["cmp     ecx, 14h", "jnz     loc_313D"], ["cmp~ecx,0", "jnz~FOO"]], [2, 0, 19, 0, 0, 3, 0, 1, 8, 3, 0.031560490940970194, ["cmp     byte ptr [x+9], 0", "mov     dword ptr [r8], 1", "jz      loc_313D"], ["cmp~[yte ptr [x+0],0", "mov~<TAG>,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 9, 3, 0.021332554061952072, ["cmp     byte ptr [x+9], 0", "mov     dword ptr [r8], 15h", "jz      loc_313D"], ["cmp~[yte ptr [x+0],0", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, 3, 0.05406195207481005, ["cmp     byte ptr [x+0], 0", "jnz     loc_32A0"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 1, 5, 5, 0.16043249561659848, ["cmp     ecx, 1", "movzx   eax, byte ptr [x+9]", "jnz     loc_3240"], ["cmp~ecx,0", "movzx~eax,[yte ptr [x+0]", "jnz~FOO"]], [1, 0, 39, 0, 1, 5, 0, 2, 4, 3, 0.14377556984219753, ["call    ___errno_location", "cmp     byte ptr [x+0], 0", "mov     r8, rax", "mov     ecx, [rax]; flag", "jz      short loc_30FF"], ["call~FOO", "cmp~[yte ptr [x+0],0", "mov~r8,rax", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 6, 2, 0.009935710111046171, ["cmp     ecx, 14h", "jz      short loc_308C"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 25, 0, 1, 8, 1, 2, 7, 4, 0.05669199298655757, ["mov     rdx, st; st", "mov     rsi, filename; file", "mov     edi, r13d; fd", "mov     [rsp+58h+var_58], r8", "call    cache_fstatat", "test    eax, eax", "mov     r8, [rsp+58h+var_58]", "jnz     short loc_339A"], ["mov~rdx,st", "mov~rsi,filename", "mov~edi,r13d", "mov~<TAG>,r8", "call~FOO", "test~eax,eax", "mov~r8,<TAG>", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 6, 5, 0.12799532437171243, ["cmp     al, 1", "jnz     loc_3370"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 5, 3, 0.07860900058445353, ["cmp     eax, 27h ; '''", "jz      short loc_3231"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 50, 0, 1, 6, 0, 2, 4, 3, 0.04529514903565166, ["mov     dword ptr [rsp+58h+var_58], ecx", "call    ___errno_location", "cmp     byte ptr [x+0], 0", "mov     eax, [rax]", "mov     ecx, dword ptr [rsp+58h+var_58]", "jz      short loc_3207"], ["mov~<TAG>,ecx", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~eax,<TAG>", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 6, 3, 0.08679135008766803, ["cmp     eax, 11h", "jz      short loc_3231"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6765; \"remove_entry\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aCacheStatOkStS; \"!cache_stat_ok (st) || S_ISDIR (st->st_\"...", "mov     edx, 459h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 11, 3, 0.010812390414962009, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3231"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 8, 4, 0.024254821741671536, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3418"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 4, 0.04850964348334307, ["cmp     ecx, 1", "jz      short loc_331E"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 7, 5, 0.07977790765634131, ["cmp     qword ptr [st+30h], 0", "js      loc_3310"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 2, 0.009059029807130333, ["cmp     byte ptr [x+19h], 0", "jz      loc_308C"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 43, 0, 1, 6, 2, 2, 3, 3, 0.14845119812974866, ["xor     edx, edx; flag", "mov     rsi, filename; name", "mov     edi, r13d; fd", "call    _unlinkat", "test    eax, eax", "jz      loc_3190"], ["xor~edx,edx", "mov~rsi,filename", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 2, 8, 2, 3, 6, 2, 0.0017533606078316772, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_308C"], ["xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 2, 9, 0, 3, 5, 3, 0.0030683810637054353, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aRemovedS; \"removed %s\\n\"", "jmp     loc_327C"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 4, 0, 2, 8, 0, 2, 5, 3, 0.0016072472238457041, ["mov     rsi, filename; filename", "mov     rdi, ds_0; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aRemovedDirecto; \"removed directory: %s\\n\"", "mov     x, rax", "mov     edx, 5; category"], ["mov~rsi,filename", "mov~rdi,ds_0", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x,rax", "mov~edx,0"]], [0, 0, 44, 0, 0, 1, 0, 1, 8, 4, 0.10432495616598479, ["jmp     loc_30D0"], ["jmp~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 7, 3, 0.09585037989479836, ["cmp     ecx, 4", "jz      short loc_3231"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 9, 3, 0.004675628287551139, ["cmp     ecx, 0Dh", "jnz     loc_3231"], ["cmp~ecx,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 7, 6, 0.004091174751607247, ["jmp     loc_3114"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.03272939801285798, ["mov     rdx, [rsp+58h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_345C"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 5, 2, 0.0052600818234950315, ["cmp     ecx, 2", "jz      short loc_308C"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.015195791934541203, ["mov     ebx, 5", "jmp     loc_308C"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 2, 0.004383401519579193, ["cmp     byte ptr [x+19h], 0", "jz      loc_308C"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, 2, 0.0287843366452367, ["cmp     ecx, 2", "jz      loc_308C"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, 2, 0.0004383401519579193, ["jmp     loc_308C"], ["jmp~FOO"]], [3, 0, 59, 1, 1, 26, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15, ds_0", "push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, filename", "mov     r14, st", "mov     rbp, x", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "lea     rax, [rsp+58h+is_empty_directory]", "mov     [rsp+58h+dirent_type], ecx", "lea     dirent_type_arg, [rsp+58h+dirent_type]; pdirent_type", "push    rax; is_empty", "push    2; mode", "call    prompt", "cmp     eax, 2", "mov     ebx, eax", "pop     rdx", "pop     rcx", "jz      short loc_30B8"], ["push~r15", "push~r14", "mov~r15,ds_0", "push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,filename", "mov~r14,st", "mov~rbp,x", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],ecx", "lea~dirent_type_arg,[rsp+0]", "push~rax", "push~0", "call~FOO", "cmp~eax,0", "mov~ebx,eax", "pop~rdx", "pop~rcx", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, 6, 0.026592635885447104, ["cmp     qword ptr [st+30h], 0", "js      loc_3452"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 58, 0, 0, 3, 0, 1, 1, 4, 0.016072472238457043, ["mov     ecx, [rsp+58h+dirent_type]", "cmp     ecx, 4", "jz      loc_3220"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 18, 0, 0, 4, 1, 1, 8, 4, 0.024547048509643482, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3360"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, 3, 0.016656925774400935, ["cmp     qword ptr [st+30h], 0", "js      loc_3231"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 3, 3, 0.01548801870251315, ["cmp     [rsp+58h+is_empty_directory], 4", "jz      short loc_31C8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     filename", "pop     fd_cwd", "pop     st", "pop     ds_0", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~filename", "pop~fd_cwd", "pop~st", "pop~ds_0", "retn"]], [0, 1, 53, 0, 1, 8, 1, 2, 3, 3, 0.037697253068381065, ["mov     edx, 200h; flag", "mov     rsi, filename; name", "mov     edi, r13d; fd", "mov     dword ptr [rsp+58h+var_58], ecx", "call    _unlinkat", "test    eax, eax", "mov     ecx, dword ptr [rsp+58h+var_58]", "jz      short loc_3250"], ["mov~edx,<STR>", "mov~rsi,filename", "mov~edi,r13d", "mov~<TAG>,ecx", "call~FOO", "test~eax,eax", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 10, 3, 0.00847457627118644, ["cmp     ecx, 0Dh", "jnz     loc_3231"], ["cmp~ecx,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 10, 3, 0.02688486265341905, ["cmp     qword ptr [st+30h], 0", "mov     [r8], ecx", "js      loc_3231"], ["cmp~[word ptr [st+0],0", "mov~<TAG>,ecx", "js~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 12, 3, 0.0005844535359438924, ["jmp     loc_3231"], ["jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 6, 4, 0.03243717124488603, ["test    al, al", "jz      loc_3133"], ["test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 11, 4, 0.011689070718877849, ["mov     [r8], ecx", "jmp     loc_3133"], ["mov~<TAG>,ecx", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 11, 4, 0.0061367621274108705, ["mov     ecx, 1", "jmp     loc_3133"], ["mov~ecx,0", "jmp~FOO"]], [3, 0, 10, 0, 0, 5, 1, 1, 11, 4, 0.011104617182933957, ["mov     eax, [st+18h]", "mov     ecx, 15h", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3133"], ["mov~eax,[st+0]", "mov~ecx,0", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 14, 0, 1, 10, 1, 2, 9, 4, 0.0619520748100526, ["mov     rdx, st; st", "mov     rsi, filename; file", "mov     edi, r13d; fd", "mov     [rsp+58h+var_50], ecx", "mov     [rsp+58h+var_58], r8", "call    cache_fstatat", "test    eax, eax", "mov     r8, [rsp+58h+var_58]", "mov     ecx, [rsp+58h+var_50]", "jnz     loc_33D4"], ["mov~rdx,st", "mov~rsi,filename", "mov~edi,r13d", "mov~[rsp+0],ecx", "mov~<TAG>,r8", "call~FOO", "test~eax,eax", "mov~r8,<TAG>", "mov~ecx,[rsp+0]", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 9, 4, 0.01548801870251315, ["cmp     ecx, 1", "jz      short loc_331E"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 11, 5, 0.0032144944476914083, ["jmp     short loc_331E"], ["jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 10, 5, 0.009935710111046171, ["mov     ecx, 1", "jmp     loc_331E"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 17, 0, 0, 4, 1, 1, 10, 5, 0.010520163646990063, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3452"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 2, 4, 0.029222676797194622, ["cmp     [rsp+58h+is_empty_directory], 4", "jz      loc_31C8"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 13, 0, 0, 4, 1, 1, 10, 4, 0.020455873758036234, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_33D4"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]]], "func_feature": [23, 22, 79, 3, 60, 100, 2, 251, 0.03112, 7, 2], "succs": [[14, 31], [0, 31], [31], [2, 43], [31], [36, 4], [4, 38], [42, 4], [35, 4], [49, 13], [32, 9], [9, 31], [19, 6], [12, 21], [16, 33], [1, 14], [33, 28], [], [17, 33], [6, 7], [29, 53], [41, 20], [25, 31], [10, 22], [31], [24], [24], [23], [33, 27], [33, 53], [21], [40, 44], [11, 31], [31], [26, 31], [5, 31], [31], [39, 31], [56, 57], [58, 3], [], [8, 54], [33, 52], [33, 45], [], [34, 15], [33, 55], [33, 18], [33], [8, 30], [8], [8], [8, 48], [59, 47], [53, 46], [53], [53], [56, 51], [45, 23], [50, 47]], "fname": "remove_entry", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 146, 0, 0, 3, 0, 1, 0, 0, 0.08692550543379272, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "lea     r15, [rax+13h]", "jnz     short loc_3A22"], ["cmp~[yte ptr [rax+0],0", "lea~r15,[rax+0]", "jnz~FOO"]], [0, 0, 146, 0, 1, 4, 1, 2, 9, -1, 0.25478113047173817, ["mov     rdi, rbx; dirp", "call    _readdir", "test    rax, rax", "jz      loc_3E20"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [3, 0, 146, 3, 3, 34, 1, 4, 15, -1, 0.21398215044623883, ["mov     rax, [r14+0C8h]", "mov     rdx, [r14+68h]", "mov     rsi, [r14+18h]", "mov     rcx, [rax-10h]", "mov     r13d, [rax-18h]", "mov     [rsp+328h+var_2E0], rcx", "mov     rcx, [rax-8]", "mov     rax, [r14+70h]", "mov     [rsp+328h+var_2C8], rcx", "sub     rax, rdx", "shr     eax, 3", "mov     r15, [rdx+rax*8-8]", "sub     rsi, r15", "mov     rdi, r15; n", "mov     [rsp+328h+src], rsi", "call    xmalloc", "mov     rsi, [rsp+328h+src]; src", "lea     rdx, [r15-1]; n", "mov     rdi, rax; dest", "mov     [rsp+328h+ptr], rax", "call    _memcpy", "mov     rax, [rsp+328h+ptr]", "mov     rdi, r14; ds_0", "mov     byte ptr [rax+r15-1], 0", "call    AD_stack_pop", "mov     rax, [r14+70h]", "mov     rcx, [r14+68h]", "mov     rdx, rax", "mov     rdi, rax", "sub     rdx, rcx", "shr     edx, 3", "test    edx, edx", "mov     esi, edx", "jz      loc_4602"], ["mov~rax,[r14+0]", "mov~rdx,[r14+0]", "mov~rsi,[r14+0]", "mov~rcx,[rax-10h]+0]", "mov~r13d,[rax-18h]+0]", "mov~[rsp+0],rcx", "mov~rcx,[rax-8]+0]", "mov~rax,[r14+0]", "mov~[rsp+0],rcx", "sub~rax,rdx", "shr~eax,0", "mov~r15,[rdx+0]", "sub~rsi,r15", "mov~rdi,r15", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdx,[r15-1]+0]", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "mov~rdi,r14", "mov~[yte ptr [rax+0],0", "call~FOO", "mov~rax,[r14+0]", "mov~rcx,[r14+0]", "mov~rdx,rax", "mov~rdi,rax", "sub~rdx,rcx", "shr~edx,0", "test~edx,edx", "mov~esi,edx", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 14, -1, 0.23192277335923744, ["test    r13, r13", "jz      short loc_3B85"], ["test~r13,r13", "jz~FOO"]], [3, 0, 146, 0, 6, 22, 4, 6, 17, -1, 0.005707000182138303, ["mov     rsi, r13; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "mov     ebp, 4", "call    _error", "mov     rdi, r13; ptr", "call    free", "mov     rdi, r14; ds_0", "call    AD_mark_current_as_unremovable", "mov     [rsp+328h+var_2E4], 4"], ["mov~rsi,r13", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "mov~ebp,0", "call~FOO", "mov~rdi,r13", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~[rsp+0],0"]], [2, 1, 35, 0, 1, 7, 1, 2, 7, -1, 0.0019428085726428267, ["mov     rsi, [rsp+328h+filename]; name", "mov     edx, 200h; flag", "mov     edi, 0FFFFFF9Ch; fd", "mov     r15d, 2", "call    _unlinkat", "test    eax, eax", "jnz     loc_4442"], ["mov~rsi,[rsp+0]", "mov~edx,<STR>", "mov~edi,0", "mov~r15d,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 38, 0, 1, 5, 0, 2, 6, -1, 0.0029749256268593286, ["call    ___errno_location", "mov     ebx, [rax]", "mov     rax, [rsp+328h+x]", "cmp     byte ptr [rax], 0", "jz      short loc_3DF3"], ["call~FOO", "mov~ebx,<TAG>", "mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, -1, 9.106915184263251e-05, ["cmp     ebx, 14h", "jz      loc_3836"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 2, 0, 2, 9, 0, 2, 31, -1, 0.00015178191973772083, ["mov     r14, [rsp+328h+ptr]", "mov     rdi, [rsp+328h+ds_0]; ds_0", "mov     rsi, r14; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalCannotOpe; \"FATAL: cannot open .. from %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~r14,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rsi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [1, 0, 146, 0, 1, 8, 3, 1, 30, -1, 0.007558739602938498, ["xor     edx, edx; oflag", "mov     rsi, rax; file", "mov     edi, 0FFFFFF9Ch; fd", "xor     eax, eax", "call    _openat", "test    eax, eax", "mov     r13d, eax", "jns     loc_3D04"], ["xor~edx,edx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~r13d,eax", "jns~FOO"]], [4, 0, 146, 0, 1, 16, 0, 2, 31, -1, 0.049389836682654356, ["lea     rax, [rsp+328h+is_empty]", "mov     [rsp+328h+var_28C], 4", "mov     [rsp+328h+var_138], 0FFFFFFFFFFFFFFFFh", "mov     rsi, r14; ds_0", "mov     edi, r13d; fd_cwd", "push    rax; is_empty", "push    3; mode", "mov     r9, [rsp+338h+x]; x", "mov     r8, [rsp+338h+sbuf]; sbuf", "mov     rcx, [rsp+338h+pdirent_type]; pdirent_type", "mov     rdx, [rsp+338h+ptr]; filename", "call    prompt", "cmp     eax, 2", "pop     rdx", "pop     rcx", "jnz     loc_4418"], ["lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rsi,r14", "mov~edi,r13d", "push~rax", "push~0", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "call~FOO", "cmp~eax,0", "pop~rdx", "pop~rcx", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 32, -1, 0.07874445995992957, ["cmp     ebp, 2", "jz      loc_3FC7"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 146, 0, 0, 1, 0, 0, 30, -1, 0.03776334163074494, ["mov     r13d, 0FFFFFF9Ch"], ["mov~r13d,0"]], [1, 0, 146, 0, 0, 1, 0, 0, 17, -1, 0.002140125068301864, ["mov     ebp, 2"], ["mov~ebp,0"]], [1, 0, 146, 0, 0, 2, 0, 1, 16, -1, 0.0036124096897577557, ["cmp     ebp, 3", "jz      loc_3F1E"], ["cmp~ebp,0", "jz~FOO"]], [0, 1, 165, 0, 1, 6, 0, 2, 3, 8, 0.0, ["mov     rbx, [rsp+328h+ds_0]", "mov     esi, 20h ; ' '; int", "lea     rdi, [rbx+0B0h]; struct obstack *", "call    __obstack_newchunk", "mov     rax, [rbx+0C8h]", "jmp     loc_35D8"], ["mov~rbx,[rsp+0]", "mov~esi,<STR>", "lea~rdi,[rbx+0]", "call~FOO", "mov~rax,[rbx+0]", "jmp~FOO"]], [1, 0, 166, 1, 0, 8, 0, 1, 2, 8, 0.039675793819440225, ["mov     rcx, [rsp+328h+ds_0]", "mov     rax, [rcx+0C8h]", "mov     rcx, [rcx+0D0h]", "mov     rdx, rcx", "mov     [rsp+328h+var_2D0], rcx", "sub     rdx, rax", "cmp     rdx, 1Fh", "jle     loc_37FB"], ["mov~rcx,[rsp+0]", "mov~rax,[rcx+0]", "mov~rcx,[rcx+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "sub~rdx,rax", "cmp~rdx,0", "jle~FOO"]], [1, 0, 146, 0, 0, 3, 0, 0, 16, -1, 0.21191791633780582, ["mov     rsi, [rcx+rsi*8-8]", "cmp     rsi, 1", "jbe     loc_4640"], ["mov~rsi,[rcx+0]", "cmp~rsi,0", "jbe~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 8, -1, 0.0019428085726428267, ["mov     rbx, [rsp+328h+ds_0]", "jmp     loc_3850"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [1, 0, 146, 0, 0, 6, 2, 1, 11, -1, 0.006648048084512173, ["xor     edx, edx", "cmp     byte ptr [rax+14h], 2Eh ; '.'", "setz    dl", "movzx   edx, byte ptr [rax+rdx+14h]", "test    dl, dl", "jz      short loc_39F0"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~edx,[yte ptr [rax+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 16, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aNLengths0; \"n_lengths > 0\"", "mov     edx, 10Ch; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 12, -1, 0.0008803351344787809, ["cmp     dl, 2Fh ; '/'", "jz      short loc_39F0"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 1, 1, 10, -1, 0.16582174731346, ["mov     eax, [r12]", "test    eax, eax", "jnz     short loc_3E34"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [5, 0, 164, 0, 1, 17, 1, 2, 3, 7, 0.04914698561107401, ["mov     rsi, [rsp+328h+ds_0]; ds_0", "lea     rdx, [rax+20h]", "mov     r9, [rsp+328h+x]; x", "lea     r8, [rsp+328h+st]; st", "xor     ecx, ecx; dirent_type_arg", "mov     edi, 0FFFFFF9Ch; fd_cwd", "mov     [rsi+0C8h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rax], 0", "mov     [rax+18h], rdx", "mov     [rax+10h], rdx", "mov     rdx, [rsp+328h+filename]; filename", "mov     dword ptr [rax+8], 2", "call    remove_entry", "cmp     eax, 5", "mov     r15d, eax", "jz      loc_381D"], ["mov~rsi,[rsp+0]", "lea~rdx,[rax+0]", "mov~r9,[rsp+0]", "lea~r8,[rsp+0]", "xor~ecx,ecx", "mov~edi,0", "mov~[rsi+0],rdx", "mov~rdx,0", "mov~<TAG>,0", "mov~[rax+0],rdx", "mov~[rax+0],rdx", "mov~rdx,[rsp+0]", "mov~[word ptr [rax+0],0", "call~FOO", "cmp~eax,0", "mov~r15d,eax", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 3, 2, 29, -1, 0.0031874203144921375, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 2, 10, 0, 3, 28, -1, 0.006223058709246554, ["mov     r14, [rsp+328h+ptr]", "mov     rdi, [rsp+328h+ds_0]; ds_0", "mov     rsi, r14; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aFatalFailedToC; \"FATAL: failed to close directory %s\"", "jmp     loc_4215"], ["mov~r14,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rsi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 34, 0, 1, 6, 0, 2, 32, -1, 0.016210309027988586, ["mov     r14, [rsp+328h+ptr]", "mov     ebx, eax", "mov     rdi, r14; ptr", "call    free", "cmp     r13d, 0FFFFFF9Ch", "jz      short loc_4435"], ["mov~r14,[rsp+0]", "mov~ebx,eax", "mov~rdi,r14", "call~FOO", "cmp~r13d,0", "jz~FOO"]], [0, 0, 146, 1, 0, 5, 0, 1, 17, -1, 0.2098536822293728, ["mov     rdx, [r14+18h]", "mov     ecx, edx", "sub     ecx, [r14+10h]", "cmp     rsi, rcx", "ja      loc_4621"], ["mov~rdx,[r14+0]", "mov~ecx,edx", "sub~ecx,[r14+0]", "cmp~rsi,rcx", "ja~FOO"]], [0, 1, 146, 0, 1, 6, 1, 2, 32, -1, 0.03111529354623277, ["mov     rsi, [rsp+328h+ptr]; name", "mov     edx, 200h; flag", "mov     edi, r13d; fd", "call    _unlinkat", "test    eax, eax", "jnz     loc_4250"], ["mov~rsi,[rsp+0]", "mov~edx,<STR>", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 11, -1, 0.004204359176734867, ["cmp     [rsp+328h+var_2F0], 9", "ja      loc_41A2"], ["cmp~[rsp+0],0", "ja~FOO"]], [0, 0, 163, 0, 1, 5, 1, 2, 4, 6, 0.0447453099386801, ["mov     status, [rsp+328h+ds_0]", "lea     rdi, [rax+128h]; env", "call    __setjmp", "test    eax, eax", "jz      loc_3908"], ["mov~status,[rsp+0]", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 146, 0, 0, 5, 1, 1, 11, -1, 0.08000424989375265, ["mov     r13, rax", "mov     rax, [r14+0C8h]", "mov     rdi, [rax-20h]; table", "test    rdi, rdi", "jz      short loc_3A42"], ["mov~r13,rax", "mov~rax,[r14+0]", "mov~rdi,[rax-20h]+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 11, -1, 0.16292271264646954, ["xor     r13d, r13d", "jmp     loc_3AC0"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 18, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aObstackObjectS_0; \"obstack_object_size (&ds->dir_stack) >=\"...", "mov     edx, 111h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 146, 0, 0, 3, 0, 1, 33, -1, 0.016134418068119726, ["mov     rax, [rsp+328h+x]", "cmp     byte ptr [rax+19h], 0", "jnz     loc_42C7"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 13, -1, 0.22600327848946633, ["cmp     ebp, 2", "jz      short loc_3B07"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 146, 0, 1, 2, 0, 1, 16, -1, 0.013053245097443992, ["mov     rdi, r14; ds_0", "call    AD_mark_current_as_unremovable"], ["mov~rdi,r14", "call~FOO"]], [0, 0, 28, 0, 0, 5, 0, 1, 4, -1, 0.10815979600509987, ["mov     rax, [rsp+328h+ds_0]", "mov     rsi, [rax+10h]; block", "mov     rdx, [rax+18h]", "cmp     rsi, rdx", "jz      loc_387B"], ["mov~rax,[rsp+0]", "mov~rsi,[rax+0]", "mov~rdx,[rax+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 29, 0, 0, 1, 0, 1, 7, -1, 0.10211887559953858, ["jmp     loc_362F"], ["jmp~FOO"]], [0, 0, 146, 0, 1, 4, 1, 2, 12, -1, 0.003688300649626616, ["mov     rsi, r15; entry", "call    hash_lookup", "test    rax, rax", "jnz     short loc_39E0"], ["mov~rsi,r15", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 146, 1, 0, 6, 0, 1, 18, -1, 0.20778944812093983, ["mov     rcx, [r14+20h]", "neg     esi; int", "movsxd  r8, esi", "sub     rcx, rdx", "cmp     rcx, r8", "jl      loc_40A7"], ["mov~rcx,[r14+0]", "neg~esi", "movsxd~r8,esi", "sub~rcx,rdx", "cmp~rcx,r8", "jl~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 13, -1, 0.04699168235079837, ["cmp     eax, 5", "jnz     loc_3F38"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 146, 0, 2, 14, 0, 3, 12, -1, 0.07507133750227672, ["mov     [rsp+328h+var_1C8], 0FFFFFFFFFFFFFFFFh", "movzx   r13d, byte ptr [r13+12h]", "mov     rdi, rbx; dirp", "call    _dirfd", "mov     r9, [rsp+328h+x]; x", "mov     r8, [rsp+328h+subdir_sb]; st", "mov     rdx, r15; filename", "mov     rsi, r14; ds_0", "mov     edi, eax; fd_cwd", "mov     ecx, r13d; dirent_type_arg", "call    remove_entry", "cmp     eax, 4", "mov     r13d, eax", "ja      loc_3E40"], ["mov~[rsp+0],0", "movzx~r13d,[yte ptr [r13+0]", "mov~rdi,rbx", "call~FOO", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rdx,r15", "mov~rsi,r14", "mov~edi,eax", "mov~ecx,r13d", "call~FOO", "cmp~eax,0", "mov~r13d,eax", "ja~FOO"]], [2, 0, 0, 1, 2, 6, 0, 2, 30, -1, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rdi, [rsp+328h+ds_0]", "mov     esi, 1", "add     rdi, 128h", "call    ___longjmp_chk"], ["mov~rdi,r14", "call~FOO", "mov~rdi,[rsp+0]", "mov~esi,0", "add~rdi,0", "call~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 31, -1, 0.00018213830368526501, ["mov     edi, r13d; fd", "call    _close", "jmp     loc_422F"], ["mov~edi,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 146, 1, 0, 2, 0, 0, 19, -1, 0.10126889684900735, ["add     rdx, r8", "mov     [r14+18h], rdx"], ["add~rdx,r8", "mov~[r14+0],rdx"]], [0, 0, 32, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, rbx; ds_0", "call    AD_stack_pop"], ["mov~rdi,rbx", "call~FOO"]], [1, 0, 32, 1, 0, 4, 0, 1, 6, -1, 0.10885799283589338, ["mov     rax, [rbx+0C8h]", "sub     rax, [rbx+0C0h]", "cmp     eax, 1Fh", "ja      short loc_3848"], ["mov~rax,[rbx+0]", "sub~rax,[rbx+0]", "cmp~eax,0", "ja~FOO"]], [2, 0, 37, 0, 1, 14, 1, 2, 9, 1, 0.0049480905834497, ["mov     status, [rsp+328h+filename]", "mov     r14, [rsp+328h+ds_0]", "mov     rsi, r15; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "lea     rdx, filename; \"/\"", "mov     rsi, rax", "mov     ecx, 2", "mov     rdi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_4697"], ["mov~status,[rsp+0]", "mov~r14,[rsp+0]", "mov~rsi,r15", "mov~rdi,r14", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~ecx,0", "mov~rdi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 153, 0, 0, 3, 0, 1, 8, 2, 0.004280250136603728, ["mov     rax, [rax+8]", "cmp     [rsp+328h+st.st_dev], rax", "jnz     loc_3959"], ["mov~rax,[rax+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 146, 0, 1, 4, 0, 2, 34, -1, 0.03585088944204966, ["mov     rdi, [rsp+328h+ptr]; ptr", "call    free", "cmp     r13d, 0FFFFFF9Ch", "jnz     loc_3D58"], ["mov~rdi,[rsp+0]", "call~FOO", "cmp~r13d,0", "jnz~FOO"]], [3, 0, 146, 0, 6, 27, 3, 7, 33, -1, 0.012946997753627587, ["mov     r15, [rsp+328h+ptr]", "mov     rdi, r14; ds_0", "mov     rsi, r15; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveDi; \"cannot remove directory %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, r15; string", "call    xstrdup", "mov     rcx, [r14+0C8h]", "mov     rsi, rax; filename", "lea     rdi, [rcx-20h]; ht", "call    AD_mark_helper", "mov     rax, [r14+0C8h]", "mov     [rsp+328h+var_2E4], 4", "mov     dword ptr [rax-18h], 4", "jmp     loc_4042"], ["mov~r15,[rsp+0]", "mov~rdi,r14", "mov~rsi,r15", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,r15", "call~FOO", "mov~rcx,[r14+0]", "mov~rsi,rax", "lea~rdi,[rcx-20h]+0]", "call~FOO", "mov~rax,[r14+0]", "mov~[rsp+0],0", "mov~[word ptr [rax-18h]+0],0", "jmp~FOO"]], [2, 0, 146, 0, 4, 16, 2, 5, 34, -1, 0.0, ["mov     rsi, [rsp+328h+ptr]; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aRemovedDirecto; \"removed directory: %s\\n\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4042"], ["mov~rsi,[rsp+0]", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 35, -1, 0.0053123671908202295, ["mov     r15d, [rsp+328h+var_2E4]"], ["mov~r15d,[rsp+0]"]], [1, 0, 146, 1, 0, 4, 0, 1, 20, -1, 0.20809301196041527, ["mov     rdx, [r14+78h]", "sub     rdx, rdi", "cmp     rdx, 0FFFFFFFFFFFFFFF8h", "jge     short loc_3C6D"], ["mov~rdx,[r14+0]", "sub~rdx,rdi", "cmp~rdx,0", "jge~FOO"]], [1, 0, 146, 2, 1, 11, 0, 2, 19, -1, 0.10448667354744702, ["mov     rdi, r14; struct obstack *", "mov     [rsp+328h+var_2B8], r8", "call    __obstack_newchunk", "mov     rax, [r14+70h]", "mov     r8, [rsp+328h+var_2B8]", "add     [r14+18h], r8", "mov     rdx, rax", "sub     rdx, [r14+68h]", "mov     rdi, rax", "cmp     edx, 7", "ja      loc_3C4E"], ["mov~rdi,r14", "mov~[rsp+0],r8", "call~FOO", "mov~rax,[r14+0]", "mov~r8,[rsp+0]", "add~[r14+0],r8", "mov~rdx,rax", "sub~rdx,[r14+0]", "mov~rdi,rax", "cmp~edx,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 17, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aTopLen2; \"top_len >= 2\"", "mov     edx, 10Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 5, -1, 0.013630016392447332, ["mov     r15d, 4", "mov     rbx, [rsp+328h+ds_0]", "jmp     short loc_3850"], ["mov~r15d,0", "mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 32, 0, 1, 4, 0, 2, 31, -1, 0.08062655576467731, ["mov     rbx, [rsp+328h+ds_0]", "mov     rdi, rbx; ds_0", "call    AD_stack_pop", "jmp     loc_3850"], ["mov~rbx,[rsp+0]", "mov~rdi,rbx", "call~FOO", "jmp~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 33, -1, 0.011656851435856961, ["mov     r15d, ebx", "mov     rbx, [rsp+328h+ds_0]", "jmp     loc_3850"], ["mov~r15d,ebx", "mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 33, 0, 1, 5, 0, 2, 30, -1, 0.07661951308360147, ["mov     r14, [rsp+328h+ptr]", "mov     r15d, [rsp+328h+var_2E4]", "mov     rdi, r14; ptr", "call    free", "jmp     loc_405B"], ["mov~r14,[rsp+0]", "mov~r15d,[rsp+0]", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 1, 4, 0, 1, 21, -1, 0.0, ["lea     rdi, [r14+58h]; struct obstack *", "mov     esi, 0FFFFFFF8h; int", "call    __obstack_newchunk", "mov     rax, [r14+70h]"], ["lea~rdi,[r14+0]", "mov~esi,0", "call~FOO", "mov~rax,[r14+0]"]], [0, 0, 146, 0, 2, 10, 1, 3, 14, -1, 0.02556007528383219, ["mov     r13d, [r12]", "mov     rdi, rbx; dirp", "call    _dirfd", "mov     rcx, [rsp+328h+subdir_sb]; subdir_sb", "mov     rsi, r15; f", "mov     edi, eax; fd_cwd", "mov     edx, r13d; prev_errno", "call    fd_to_subdirp", "test    rax, rax", "jz      loc_40F8"], ["mov~r13d,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,r15", "mov~edi,eax", "mov~edx,r13d", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 33, 0, 4, 17, 4, 5, 12, -1, 0.0, ["mov     rdi, [rsp+328h+ds_0]; ds_0", "lea     rsi, asc_A85B+1; filename", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFailedToCloseD; \"failed to close directory %s\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3836"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 34, 0, 3, 13, 5, 4, 11, -1, 0.006587335316617084, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, rbx; dirp", "call    _closedir", "test    eax, eax", "jz      loc_3836"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 17, -1, 4.5534575921316254e-05, ["mov     [rdi+0C0h], rsi", "mov     [rdi+0C8h], rsi", "jmp     loc_37CF"], ["mov~[rdi+0],rsi", "mov~[rdi+0],rsi", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 16, -1, 0.004583813976079169, ["cmp     rsi, rcx", "jb      loc_3868"], ["cmp~rsi,rcx", "jb~FOO"]], [0, 0, 26, 3, 0, 16, 1, 1, 5, -1, 0.10196709367980086, ["mov     rbx, [rsp+328h+ds_0]", "movsxd  rax, dword ptr [rbx+30h]", "mov     rcx, rax", "add     rax, rdx", "mov     rdx, [rbx+20h]", "not     ecx", "movsxd  rcx, ecx", "and     rax, rcx", "mov     rcx, [rbx+8]", "mov     rdi, rdx", "mov     r8, rax", "mov     [rbx+18h], rax", "sub     r8, rcx", "sub     rdi, rcx", "cmp     r8, rdi", "jle     short loc_3680"], ["mov~rbx,[rsp+0]", "movsxd~rax,[word ptr [rbx+0]", "mov~rcx,rax", "add~rax,rdx", "mov~rdx,[rbx+0]", "not~ecx", "movsxd~rcx,ecx", "and~rax,rcx", "mov~rcx,[rbx+0]", "mov~rdi,rdx", "mov~r8,rax", "mov~[rbx+0],rax", "sub~r8,rcx", "sub~rdi,rcx", "cmp~r8,rdi", "jle~FOO"]], [1, 0, 27, 0, 0, 2, 1, 1, 5, -1, 0.0, ["or      byte ptr [rax+50h], 2", "jmp     loc_3645"], ["or~[yte ptr [rax+0],0", "jmp~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 23, -1, 0.0031874203144921375, ["mov     rax, [rsp+328h+var_2C8]", "cmp     rax, [r14+110h]", "jnz     loc_3C9C"], ["mov~rax,[rsp+0]", "cmp~rax,[r14+0]", "jnz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 22, -1, 0.2083965757998907, ["mov     rax, [rsp+328h+var_2E0]", "cmp     rax, [r14+108h]", "jz      loc_406D"], ["mov~rax,[rsp+0]", "cmp~rax,[r14+0]", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 6, -1, 0.0, ["mov     [rbx+18h], rdx", "mov     rax, rdx"], ["mov~[rbx+0],rdx", "mov~rax,rdx"]], [1, 0, 33, 0, 4, 17, 3, 5, 8, -1, 3.0356383947544167e-05, ["mov     rsi, [rsp+328h+filename]; filename", "mov     rdi, [rsp+328h+ds_0]; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, ebx; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3836"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,ebx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 0, 13, -1, 0.026045777426992895, ["cmp     eax, 3", "jnb     loc_3EED"], ["cmp~eax,0", "jnb~FOO"]], [0, 0, 146, 0, 3, 11, 3, 4, 27, -1, 0.09170663590553092, ["call    _dirfd", "lea     rsi, asc_A85B; \"..\"", "xor     edx, edx; oflag", "mov     edi, eax; fd", "xor     eax, eax", "call    _openat", "mov     rdi, rbx; dirp", "mov     r13d, eax", "call    _closedir", "test    eax, eax", "jnz     loc_465F"], ["call~FOO", "lea~rsi,<TAG>", "xor~edx,edx", "mov~edi,eax", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "mov~r13d,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 146, 0, 1, 3, 1, 2, 27, -1, 0.12206301985307509, ["call    _closedir", "test    eax, eax", "jnz     loc_465F"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 6, -1, 0.09553154028292149, ["mov     rdi, [rsp+328h+ds_0]", "cmp     rsi, rdx", "mov     [rdi+10h], rax", "jnb     short loc_36A0"], ["mov~rdi,[rsp+0]", "cmp~rsi,rdx", "mov~[rdi+0],rax", "jnb~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 14, -1, 0.0032987270556331326, ["cmp     eax, 2", "jnz     loc_3F38"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 7, -1, 0.004037399065023374, ["cmp     rsi, rcx", "jbe     short loc_36A0"], ["cmp~rsi,rcx", "jbe~FOO"]], [0, 0, 146, 0, 2, 10, 1, 3, 15, -1, 0.006739117236354805, ["mov     rdi, r15; string", "mov     [rsp+328h+var_2B0], rax", "call    xstrdup", "mov     rdi, rbx; dirp", "mov     r13, rax", "call    _closedir", "mov     rdx, [rsp+328h+var_2B0]", "test    eax, eax", "mov     rbx, rdx", "jz      loc_3A9C"], ["mov~rdi,r15", "mov~[rsp+0],rax", "call~FOO", "mov~rdi,rbx", "mov~r13,rax", "call~FOO", "mov~rdx,[rsp+0]", "test~eax,eax", "mov~rbx,rdx", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 18, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6787; \"remove_cwd_entries\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, assertion; \"VALID_STATUS (status)\"", "mov     edx, 4D1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 146, 0, 0, 5, 0, 1, 17, -1, 0.12534150931940988, ["mov     rax, [rsp+328h+var_310]", "mov     ebp, [rax-18h]", "lea     eax, [rbp-2]", "cmp     eax, 2", "ja      loc_44A9"], ["mov~rax,[rsp+0]", "mov~ebp,[rax-18h]+0]", "lea~eax,[rbp-2]+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 146, 0, 0, 5, 0, 1, 24, -1, 0.0, ["mov     rax, [r15-8]", "mov     [r14+110h], rax", "mov     rax, [r15-10h]", "mov     [r14+108h], rax", "jmp     loc_3C9C"], ["mov~rax,[r15-8]+0]", "mov~[r14+0],rax", "mov~rax,[r15-10h]+0]", "mov~[r14+0],rax", "jmp~FOO"]], [2, 0, 146, 1, 0, 5, 0, 1, 21, -1, 0.21046080990832372, ["sub     rax, 8", "cmp     qword ptr [r14+118h], 0", "mov     r15, [r14+0C8h]", "mov     [r14+70h], rax", "jz      loc_468D"], ["sub~rax,0", "cmp~[word ptr [r14+0],0", "mov~r15,[r14+0]", "mov~[r14+0],rax", "jz~FOO"]], [1, 0, 146, 1, 0, 2, 1, 0, 15, -1, 0.002210956630846133, ["add     [rsp+328h+var_2F0], 1", "xor     r13d, r13d"], ["add~[rsp+0],0", "xor~r13d,r13d"]], [0, 0, 21, 0, 0, 3, 0, 1, 8, -1, 0.00031874203144921374, ["mov     [rdi+10h], rsi", "mov     [rdi+18h], rsi", "jmp     short loc_36AA"], ["mov~[rdi+0],rsi", "mov~[rdi+0],rsi", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 15, -1, 0.03386254629348552, ["cmp     ebp, 4", "jz      loc_3EE0"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 146, 0, 0, 3, 1, 1, 15, -1, 0.01713111934106409, ["xor     r13d, r13d", "cmp     ebp, 2", "jnz     loc_3A9C"], ["xor~r13d,r13d", "cmp~ebp,0", "jnz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 14, -1, 0.02166939874122194, ["xor     r13d, r13d", "jmp     loc_3A9C"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 23, -1, 0.21194827272175337, ["cmp     r13d, 4", "jz      loc_3F88"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 15, -1, 0.0037338352255479323, ["mov     [rsp+328h+var_2E4], 4", "jmp     loc_3AFF"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 14, -1, 0.009501548175581324, ["cmp     ebp, 4", "jz      loc_409A"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 29, -1, 0.11644708882277942, ["cmp     ebp, 2", "jnz     loc_4309"], ["cmp~ebp,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.00983546839900431, ["mov     rcx, [rsp+328h+var_40]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_44A4"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [0, 0, 21, 0, 1, 2, 0, 1, 7, -1, 0.08446663833404164, ["mov     rdi, [rsp+328h+ds_0]; obstack", "call    _obstack_free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 24, -1, 0.10817497419707364, ["cmp     r13d, 3", "jz      loc_3F78"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 182, 1, 1, 17, 1, 2, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 2F8h", "mov     [rsp+328h+ds_0], ds_0_0", "mov     ds_0_0, filename_0; name", "mov     [rsp+328h+filename], filename_0", "mov     rax, fs:28h", "mov     [rsp+328h+var_40], rax", "xor     eax, eax", "mov     [rsp+328h+x], x_0", "call    last_component", "cmp     byte ptr [base], 2Eh ; '.'", "jnz     short loc_34D1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],ds_0_0", "mov~ds_0_0,filename_0", "mov~[rsp+0],filename_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],x_0", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 146, 0, 3, 12, 0, 4, 16, -1, 0.019458442110375812, ["mov     rdi, rbx; dirp", "call    _dirfd", "mov     rdx, [rsp+328h+subdir_sb]; dir", "mov     rdi, r14; fd_cwd", "mov     rsi, r13; ds_0", "call    AD_push", "mov     rax, [r14+0C8h]", "mov     rdi, r13; ptr", "mov     dword ptr [rax-18h], 2", "mov     [rsp+328h+var_310], rax", "call    free", "jmp     loc_3D78"], ["mov~rdi,rbx", "call~FOO", "mov~rdx,[rsp+0]", "mov~rdi,r14", "mov~rsi,r13", "call~FOO", "mov~rax,[r14+0]", "mov~rdi,r13", "mov~[word ptr [rax-18h]+0],0", "mov~[rsp+0],rax", "call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 0, 3, 0, 1, 15, -1, 0.026015421043045352, ["mov     rax, [rsp+328h+x]", "cmp     byte ptr [rax+8], 0", "jz      loc_3F40"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 16, -1, 0.006040920405561289, ["mov     rax, [rsp+328h+var_2C0]", "cmp     rax, [rsp+328h+var_1F8]", "jz      loc_3F40"], ["mov~rax,[rsp+0]", "cmp~rax,[rsp+0]", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 17, -1, 0.07042681075830247, ["test    r13, r13", "jz      loc_39E0"], ["test~r13,r13", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 16, -1, 0.04089004917734199, ["mov     rax, [rsp+328h+var_310]", "mov     [rax-18h], ebp", "jmp     loc_3AB3"], ["mov~rax,[rsp+0]", "mov~[rax-18h]+0],ebp", "jmp~FOO"]], [2, 0, 146, 0, 0, 4, 0, 1, 16, -1, 0.020687875660251348, ["mov     rax, [rsp+328h+var_310]", "mov     ebp, 3", "cmp     dword ptr [rax-18h], 2", "jnz     loc_3AB3"], ["mov~rax,[rsp+0]", "mov~ebp,0", "cmp~[word ptr [rax-18h]+0],0", "jnz~FOO"]], [0, 0, 20, 0, 0, 5, 0, 1, 8, -1, 0.0819318802744217, ["mov     rax, [rsp+328h+ds_0]", "mov     rsi, [rax+68h]; block", "mov     rdx, [rax+70h]", "cmp     rsi, rdx", "jz      loc_38EB"], ["mov~rax,[rsp+0]", "mov~rsi,[rax+0]", "mov~rdx,[rax+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 146, 0, 0, 1, 0, 0, 18, -1, 0.059559225305081655, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 146, 0, 1, 5, 1, 2, 29, -1, 0.009622973711371502, ["lea     rsi, asc_A85B+1; filename", "mov     rdi, r14; ds_0", "call    full_filename0", "test    rax, rax", "jz      loc_4692"], ["lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 146, 0, 0, 2, 1, 1, 28, -1, 0.08815493898366826, ["test    r13d, r13d", "js      loc_41B8"], ["test~r13d,r13d", "js~FOO"]], [1, 0, 146, 1, 0, 5, 1, 1, 25, -1, 0.21786776759152449, ["mov     rax, r15", "sub     rax, [r14+0C0h]", "shr     eax, 5", "test    eax, eax", "jz      loc_44C8"], ["mov~rax,r15", "sub~rax,[r14+0]", "shr~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 25, -1, 0.003217776698439682, ["cmp     dword ptr [r15-18h], 2", "jnz     loc_3CB0"], ["cmp~[word ptr [r15-18h]+0],0", "jnz~FOO"]], [0, 0, 146, 0, 0, 2, 0, 1, 24, -1, 0.10620180924048327, ["mov     [r15-18h], r13d", "jmp     loc_3CB0"], ["mov~[r15-18h]+0],r13d", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 181, 0, 0, 7, 2, 1, 1, 11, 0.00018213830368526501, ["mov     rbx, base", "xor     eax, eax", "cmp     byte ptr [base+1], 2Eh ; '.'", "setz    al", "movzx   eax, byte ptr [base+rax+1]", "test    al, al", "jz      loc_3884"], ["mov~rbx,base", "xor~eax,eax", "cmp~[yte ptr [base+0],0", "setz~al", "movzx~eax,[yte ptr [base+0]", "test~al,al", "jz~FOO"]], [1, 0, 180, 0, 0, 2, 0, 1, 2, 10, 0.0053123671908202295, ["cmp     al, 2Fh ; '/'", "jz      loc_3884"], ["cmp~al,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 29, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6820; \"remove_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aFdAtFdcwdAdSta; \"fd != AT_FDCWD || AD_stack_height (ds) \"...", "mov     edx, 5BBh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 146, 1, 0, 5, 0, 1, 28, -1, 0.11851132293121243, ["mov     rax, [r14+0C8h]", "sub     rax, [r14+0C0h]", "shr     eax, 5", "cmp     eax, 1", "jnz     loc_4485"], ["mov~rax,[r14+0]", "sub~rax,[r14+0]", "shr~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 146, 0, 2, 8, 2, 3, 12, -1, 0.2280675125978993, ["mov     rdi, rbx; dirp", "call    _dirfd", "mov     esi, 1; cmd", "mov     edi, eax; fd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "js      loc_45E3"], ["mov~rdi,rbx", "call~FOO", "mov~esi,0", "mov~edi,eax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 4, 0, 4, 24, 5, 5, 2, -1, 0.00036427660737053003, ["mov     r14, [rsp+328h+filename]", "mov     edi, 1; n", "mov     rsi, r14; name", "call    quote_n", "mov     rsi, base; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotRemoveSD; \"cannot remove %s directory %s\"", "mov     rbp, rax", "lea     rax, aCannotRemoveDi; \"cannot remove directory %s\"", "cmp     r14, base", "mov     edx, 5; category", "cmovz   rsi, rax; msgid", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_356C"], ["mov~r14,[rsp+0]", "mov~edi,0", "mov~rsi,r14", "call~FOO", "mov~rsi,base", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "lea~rax,<TAG>", "cmp~r14,base", "mov~edx,0", "cmovz~rsi,rax", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 26, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6655; \"AD_pop_and_chdir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, a0AdStackHeight+4; assertion", "mov     edx, 20Fh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 146, 0, 0, 1, 0, 1, 17, -1, 6.0712767895088334e-05, ["jmp     short loc_3EE0"], ["jmp~FOO"]], [2, 0, 146, 0, 4, 18, 4, 4, 16, -1, 0.003809726185416793, ["lea     rsi, asc_A85B+1; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFailedToCloseD; \"failed to close directory %s\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     ebp, 4", "call    _error", "nop     dword ptr [rax+rax+00h]"], ["lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "mov~ebp,0", "call~FOO", "nop~[word ptr [rax+0]"]], [2, 0, 35, 0, 5, 23, 5, 6, 10, 0, 0.002519579867646166, ["mov     rsi, rdx; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rsp+328h+filename]; filename", "mov     rdi, [rsp+328h+ds_0]; ds_0", "mov     r12, rax", "call    full_filename_", "xor     edi, edi; n", "mov     rsi, rax; name", "call    quote_n", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_43A2"], ["mov~rsi,rdx", "mov~edi,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~r12,rax", "call~FOO", "xor~edi,edi", "mov~rsi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 20, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6527; \"pop_dir\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aObstackObjectS; \"obstack_object_size (&ds->len_stack) >=\"...", "mov     edx, 115h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 9, -1, 0.0, ["or      byte ptr [rax+0A8h], 2", "jmp     loc_36C0"], ["or~[yte ptr [rax+0],0", "jmp~FOO"]], [0, 0, 18, 3, 0, 16, 1, 1, 9, -1, 0.07476777366280128, ["mov     rbx, [rsp+328h+ds_0]", "movsxd  rax, dword ptr [rbx+88h]", "mov     rcx, rax", "add     rax, rdx", "mov     rdx, [rbx+78h]", "not     ecx", "movsxd  rcx, ecx", "and     rax, rcx", "mov     rcx, [rbx+60h]", "mov     rdi, rdx", "mov     r8, rax", "mov     [rbx+70h], rax", "sub     r8, rcx", "sub     rdi, rcx", "cmp     r8, rdi", "jle     short loc_36FE"], ["mov~rbx,[rsp+0]", "movsxd~rax,[word ptr [rbx+0]", "mov~rcx,rax", "add~rax,rdx", "mov~rdx,[rbx+0]", "not~ecx", "movsxd~rcx,ecx", "and~rax,rcx", "mov~rcx,[rbx+0]", "mov~rdi,rdx", "mov~r8,rax", "mov~[rbx+0],rax", "sub~r8,rcx", "sub~rdi,rcx", "cmp~r8,rdi", "jle~FOO"]], [2, 0, 178, 0, 1, 7, 0, 2, 1, 9, 0.015846032420618054, ["mov     rax, [rsp+328h+ds_0]", "mov     [rsp+328h+st.st_size], 0FFFFFFFFFFFFFFFFh", "lea     rdi, [rax+108h]; state", "call    cycle_check_init", "mov     r14, [rsp+328h+x]", "cmp     qword ptr [r14+10h], 0", "jz      loc_35B0"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "lea~rdi,[rax+0]", "call~FOO", "mov~r14,[rsp+0]", "cmp~[word ptr [r14+0],0", "jz~FOO"]], [2, 0, 146, 0, 0, 5, 0, 0, 15, -1, 0.0037338352255479323, ["mov     ecx, [rsp+328h+var_2E4]", "mov     eax, 3", "cmp     ecx, 2", "cmovnz  eax, ecx", "mov     [rsp+328h+var_2E4], eax"], ["mov~ecx,[rsp+0]", "mov~eax,0", "cmp~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],eax"]], [1, 0, 9, 0, 0, 3, 1, 1, 14, -1, 0.0, ["mov     rcx, [rsp+328h+ds_0]", "or      byte ptr [rcx+100h], 2", "jmp     loc_375A"], ["mov~rcx,[rsp+0]", "or~[yte ptr [rcx+0],0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 13, -1, 0.043682836500516055, ["cmp     rax, rsi", "jz      loc_38F7"], ["cmp~rax,rsi", "jz~FOO"]], [1, 0, 146, 0, 0, 4, 0, 1, 15, -1, 0.016787080322991924, ["mov     rax, [rsp+328h+x]", "mov     r13d, [r12]", "cmp     byte ptr [rax], 0", "jz      short loc_4112"], ["mov~rax,[rsp+0]", "mov~r13d,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 10, -1, 0.0673608159796005, ["mov     rbx, [rsp+328h+ds_0]", "cmp     rsi, rdx", "mov     [rbx+68h], rax", "jnb     short loc_3720"], ["mov~rbx,[rsp+0]", "cmp~rsi,rdx", "mov~[rbx+0],rax", "jnb~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 10, -1, 0.0, ["mov     [rbx+70h], rdx", "mov     rax, rdx"], ["mov~[rbx+0],rdx", "mov~rax,rdx"]], [1, 0, 146, 0, 2, 8, 0, 3, 14, -1, 0.020713172646874303, ["mov     rdi, r15; string", "call    xstrdup", "mov     rcx, [r14+0C8h]", "mov     rsi, rax; filename", "lea     rdi, [rcx-20h]; ht", "call    AD_mark_helper", "cmp     r13d, 4", "jz      loc_418C"], ["mov~rdi,r15", "call~FOO", "mov~rcx,[r14+0]", "mov~rsi,rax", "lea~rdi,[rcx-20h]+0]", "call~FOO", "cmp~r13d,0", "jz~FOO"]], [1, 0, 146, 0, 1, 4, 0, 2, 12, -1, 0.002049055916459231, ["mov     rdi, rbx; dirp", "call    _rewinddir", "mov     [rsp+328h+var_2F0], 0", "jmp     loc_39E0"], ["mov~rdi,rbx", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 11, -1, 0.004280250136603728, ["cmp     rsi, rcx", "jbe     short loc_3720"], ["cmp~rsi,rcx", "jbe~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 17, -1, 0.00218565964422318, ["cmp     r13d, 14h", "jz      short loc_4171"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 16, -1, 0.006374840628984275, ["cmp     r13d, 2", "jz      short loc_4171"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 177, 0, 1, 6, 1, 2, 2, 10, 0.0012142553579017666, ["mov     rsi, [rsp+328h+filename]; file", "lea     rdx, [rsp+328h+st]; st", "mov     edi, 0FFFFFF9Ch; fd", "call    cache_fstatat", "test    eax, eax", "jz      short loc_3580"], ["mov~rsi,[rsp+0]", "lea~rdx,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 12, -1, 0.0001973164956590371, ["mov     [rbx+68h], rsi", "mov     [rbx+70h], rsi", "jmp     short loc_3738"], ["mov~[rbx+0],rsi", "mov~[rbx+0],rsi", "jmp~FOO"]], [1, 0, 146, 0, 1, 6, 1, 2, 29, -1, 0.08505858782101876, ["lea     rdx, [rsp+328h+stat_buf]; stat_buf", "mov     esi, r13d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_459A"], ["lea~rdx,[rsp+0]", "mov~esi,r13d", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 33, 0, 1, 2, 0, 1, 33, -1, 0.0, ["mov     edi, r13d; fd", "call    _close"], ["mov~edi,r13d", "call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 2, 3, -1, 0.0008499787505312367, ["call    ___errno_location", "cmp     byte ptr [r14], 0", "mov     rbx, rax", "mov     eax, [rax]", "jz      short loc_353B"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "mov~eax,<TAG>", "jz~FOO"]], [0, 0, 146, 0, 2, 6, 0, 2, 17, -1, 0.006678404468459717, ["mov     rdi, r15; string", "call    xstrdup", "mov     rcx, [r14+0C8h]", "mov     rsi, rax; filename", "lea     rdi, [rcx-20h]; ht", "call    AD_mark_helper"], ["mov~rdi,r15", "call~FOO", "mov~rcx,[r14+0]", "mov~rsi,rax", "lea~rdi,[rcx-20h]+0]", "call~FOO"]], [1, 0, 146, 0, 4, 16, 3, 4, 17, -1, 6.0712767895088334e-05, ["mov     rsi, r15; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,r15", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,r13d", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.0005008803351344788, ["cmp     eax, 2", "jz      loc_38E0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 30, -1, 0.07974622063019852, ["mov     rax, [r15-10h]", "cmp     [rsp+328h+stat_buf.st_ino], rax", "jnz     loc_4548"], ["mov~rax,[r15-10h]+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 11, -1, 0.05520308420860907, ["mov     rbx, [rsp+328h+ds_0]", "lea     rdi, [rbx+58h]; obstack", "call    _obstack_free", "jmp     short loc_3738"], ["mov~rbx,[rsp+0]", "lea~rdi,[rbx+0]", "call~FOO", "jmp~FOO"]], [1, 1, 146, 0, 2, 9, 1, 3, 16, -1, 0.014904984518244187, ["mov     rdi, rbx; dirp", "mov     ebp, 2", "call    _dirfd", "mov     edx, 200h; flag", "mov     rsi, r15; name", "mov     edi, eax; fd", "call    _unlinkat", "test    eax, eax", "jz      loc_39E0"], ["mov~rdi,rbx", "mov~ebp,0", "call~FOO", "mov~edx,<STR>", "mov~rsi,r15", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 13, -1, 0.0, ["mov     rdi, rbx; ds_0", "call    AD_stack_pop"], ["mov~rdi,rbx", "call~FOO"]], [1, 0, 13, 1, 0, 6, 0, 1, 12, -1, 0.052152267621880875, ["mov     rax, [rbx+0C8h]", "mov     rsi, [rbx+0C0h]; block", "mov     rdx, rax", "sub     rdx, rsi", "cmp     edx, 1Fh", "ja      short loc_3730"], ["mov~rax,[rbx+0]", "mov~rsi,[rbx+0]", "mov~rdx,rax", "sub~rdx,rsi", "cmp~edx,0", "ja~FOO"]], [1, 0, 162, 0, 1, 10, 2, 2, 5, 5, 0.04699168235079837, ["mov     rax, [rsp+328h+st.st_dev]", "mov     rsi, [rsp+328h+filename]; f", "lea     rcx, [rsp+328h+st]; subdir_sb", "xor     edx, edx; prev_errno", "mov     edi, 0FFFFFF9Ch; fd_cwd", "mov     [rsp+328h+var_2C0], rax", "call    fd_to_subdirp", "test    rax, rax", "mov     rbx, rax", "jz      loc_3DD0"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rcx,[rsp+0]", "xor~edx,edx", "mov~edi,0", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, -1, 6.0712767895088334e-05, ["cmp     eax, 14h", "jz      loc_38E0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 146, 0, 0, 3, 0, 1, 31, -1, 0.07765163013781798, ["mov     rax, [r15-8]", "cmp     [rsp+328h+stat_buf.st_dev], rax", "jnz     loc_4548"], ["mov~rax,[r15-8]+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [3, 0, 0, 1, 6, 23, 3, 6, 35, -1, 0.0, ["mov     r14, [rsp+328h+ds_0]", "lea     rsi, asc_A85B+1; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalCannotRet; \"FATAL: cannot return to .. from %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     edi, r13d; fd", "call    _close", "mov     rdi, r14", "mov     esi, 1", "add     rdi, 128h", "call    ___longjmp_chk"], ["mov~r14,[rsp+0]", "lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~edi,r13d", "call~FOO", "mov~rdi,r14", "mov~esi,0", "add~rdi,0", "call~FOO"]], [0, 0, 146, 0, 1, 5, 1, 2, 34, -1, 0.10236172667111892, ["mov     edi, r13d; fd", "call    _fdopendir", "test    rax, rax", "mov     rbx, rax", "jz      loc_44E7"], ["mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 155, 0, 0, 4, 1, 1, 6, 4, 0.048145224940805045, ["mov     rax, [rsp+328h+x]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_3959"], ["mov~rax,[rsp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 154, 0, 0, 3, 0, 1, 7, 3, 0.0035516969218626674, ["mov     rcx, [rax]", "cmp     [rsp+328h+st.st_ino], rcx", "jz      loc_4320"], ["mov~rcx,<TAG>", "cmp~[rsp+0],rcx", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.00031874203144921374, ["mov     r15d, 2", "jmp     loc_37CF"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 146, 0, 1, 2, 0, 1, 33, -1, 0.0694857628559286, ["mov     rdi, [rsp+328h+ptr]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 4, 0, 3, 13, 3, 3, 4, -1, 0.0002883856475016696, ["mov     rdi, [rsp+328h+filename]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 30, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.0008651569425050088, ["mov     r15d, 4", "jmp     loc_37CF"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 4, 0, 3, 14, 4, 4, 5, -1, 0.00024285107158035334, ["mov     rdi, [rsp+328h+filename]; name", "call    quote", "lea     rsi, aCannotRemoveRo; \"cannot remove root directory %s\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_356C"], ["mov~rdi,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 146, 0, 0, 2, 0, 0, 35, -1, 0.10029749256268593, ["mov     rax, [r14+0C8h]", "mov     [rsp+328h+var_310], rax"], ["mov~rax,[r14+0]", "mov~[rsp+0],rax"]], [1, 0, 2, 0, 4, 18, 3, 5, 30, -1, 0.003248133082387226, ["mov     rdi, [rsp+328h+ds_0]; ds_0", "lea     rsi, asc_A85B+1; filename", "mov     r14, [rsp+328h+ptr]", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalCannotEns; \"FATAL: cannot ensure %s (returned to vi\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_458D"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "mov~r14,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 4, 17, 4, 4, 31, -1, 0.00012142553579017667, ["mov     rdi, [rsp+328h+ds_0]; ds_0", "lea     rsi, asc_A85B+1; filename", "mov     r14, [rsp+328h+ptr]", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aFatalDirectory; \"FATAL: directory %s changed dev/ino\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[rsp+0]", "lea~rsi,<TAG>", "mov~r14,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 146, 0, 0, 1, 0, 0, 26, -1, 6.0712767895088334e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 37, 0, 0, 2, 0, 1, 7, -1, 0.0014571064294821201, ["cmp     ebx, 2", "jz      loc_3836"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 146, 0, 0, 3, 0, 1, 26, -1, 0.21580353348309148, ["cmp     eax, 1", "mov     rdi, rbx; dirp", "jz      loc_3F91"], ["cmp~eax,0", "mov~rdi,rbx", "jz~FOO"]], [0, 0, 171, 0, 0, 5, 0, 1, 3, 9, 0.005433792726610406, ["mov     rax, [rsp+328h+x]", "mov     rax, [rax+10h]", "mov     rcx, [rax]", "cmp     [rsp+328h+st.st_ino], rcx", "jnz     short loc_35B0"], ["mov~rax,[rsp+0]", "mov~rax,[rax+0]", "mov~rcx,<TAG>", "cmp~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 18, -1, 0.12327727521097687, ["mov     [rsp+328h+var_2F0], 0", "jmp     loc_39E0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 8, 3, 0, 16, 1, 1, 14, -1, 0.03530447453099387, ["mov     rbx, [rsp+328h+ds_0]", "movsxd  rdx, dword ptr [rbx+0E0h]", "mov     rcx, rdx", "add     rax, rdx", "mov     rdx, [rbx+0B8h]", "not     ecx", "movsxd  rcx, ecx", "and     rax, rcx", "mov     rcx, [rbx+0D0h]", "mov     r8, rax", "mov     [rbx+0C8h], rax", "sub     r8, rdx", "mov     rdi, rcx", "sub     rdi, rdx", "cmp     r8, rdi", "jle     short loc_37A4"], ["mov~rbx,[rsp+0]", "movsxd~rdx,[word ptr [rbx+0]", "mov~rcx,rdx", "add~rax,rdx", "mov~rdx,[rbx+0]", "not~ecx", "movsxd~rcx,ecx", "and~rax,rcx", "mov~rcx,[rbx+0]", "mov~r8,rax", "mov~[rbx+0],rax", "sub~r8,rdx", "mov~rdi,rcx", "sub~rdi,rdx", "cmp~r8,rdi", "jle~FOO"]], [2, 0, 146, 0, 0, 4, 0, 1, 15, -1, 0.012628255722178374, ["mov     rax, [rsp+328h+var_310]", "mov     ebp, 4", "mov     dword ptr [rax-18h], 4", "jmp     loc_39E0"], ["mov~rax,[rsp+0]", "mov~ebp,0", "mov~[word ptr [rax-18h]+0],0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     [rbx+0C8h], rcx", "mov     rax, rcx"], ["mov~[rbx+0],rcx", "mov~rax,rcx"]], [0, 0, 170, 0, 0, 3, 0, 1, 4, 10, 0.00048570214316070667, ["mov     rax, [rax+8]", "cmp     [rsp+328h+st.st_dev], rax", "jz      loc_3D9A"], ["mov~rax,[rax+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [0, 0, 167, 0, 0, 1, 0, 0, 5, 9, 0.004978446967397243, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 35, 0, 4, 16, 4, 4, 10, -1, 0.002519579867646166, ["mov     rsi, r15; filename", "mov     rdi, r14; ds_0", "call    full_filename_", "mov     rdi, rax; name", "call    quote", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,r15", "mov~rdi,r14", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 15, -1, 0.026683261489891322, ["mov     rdi, [rsp+328h+ds_0]", "cmp     rsi, rdx", "mov     [rdi+0C0h], rax", "jbe     short loc_37BE"], ["mov~rdi,[rsp+0]", "cmp~rsi,rdx", "mov~[rdi+0],rax", "jbe~FOO"]], [1, 0, 3, 1, 1, 3, 0, 1, 16, -1, 0.013159492441260396, ["mov     rdi, [rsp+328h+ds_0]", "add     rdi, 0B0h; obstack", "call    _obstack_free"], ["mov~rdi,[rsp+0]", "add~rdi,0", "call~FOO"]], [4, 0, 146, 0, 3, 23, 0, 3, 7, -1, 0.05537004432032056, ["mov     rdi, rbx; dirp", "mov     r15d, 2", "mov     ebp, 2", "call    _dirfd", "mov     r14, [rsp+328h+ds_0]", "mov     rsi, [rsp+328h+filename]; ds_0", "lea     rdx, [rsp+328h+st]; dir", "mov     rdi, r14; fd_cwd", "call    AD_push", "mov     rax, [r14+0C8h]", "mov     dword ptr [rax-18h], 2", "mov     [rsp+328h+var_310], rax", "call    ___errno_location", "mov     r12, rax", "lea     rax, [rsp+328h+var_1F8]", "mov     [rsp+328h+var_2F0], 0", "mov     [rsp+328h+var_2E4], r15d", "mov     [rsp+328h+subdir_sb], rax", "lea     rax, [rsp+328h+var_168]", "mov     [rsp+328h+sbuf], rax", "lea     rax, [rsp+328h+var_28C]", "mov     [rsp+328h+pdirent_type], rax", "nop     dword ptr [rax+00h]"], ["mov~rdi,rbx", "mov~r15d,0", "mov~ebp,0", "call~FOO", "mov~r14,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdx,[rsp+0]", "mov~rdi,r14", "call~FOO", "mov~rax,[r14+0]", "mov~[word ptr [rax-18h]+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~r12,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],r15d", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [1, 0, 146, 0, 0, 2, 0, 0, 8, -1, 0.24312427903588124, ["mov     dword ptr [r12], 0", "nop     dword ptr [rax+rax+00000000h]"], ["mov~<TAG>,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 2F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 0, 0, 1, 5, 0, 1, 13, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6787; \"remove_cwd_entries\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, a0FcntlDirfdDir; \"0 <= fcntl (dirfd (*dirp), F_GETFD)\"", "mov     edx, 542h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [149, 111, 277, 15, 183, 269, 1, 1079, 0.04422, 32, 30], "succs": [[19, 31], [0, 22], [17, 20], [2, 99], [2], [72, 18], [5, 167], [57, 5], [24], [8, 139], [26, 28], [10, 158], [10], [101], [13, 103], [23], [23, 15], [56, 27], [47], [1, 21], [], [1, 31], [32, 29], [37, 30], [43], [24], [59, 140], [40, 33], [34, 51], [32, 133], [57, 150], [42, 39], [116], [], [50, 52], [91, 3], [3], [67, 68], [37], [42, 180], [45, 55], [88, 62], [41, 73], [], [43], [54], [47], [38, 46], [176, 121], [48, 179], [154, 53], [50], [50], [58], [83, 61], [122, 54], [], [47], [47], [47], [58], [83], [129, 79], [57], [57, 63], [94], [65, 178], [76, 71], [67], [89, 82], [89, 69], [76], [57], [132, 77], [25, 107], [25, 115], [78, 95], [88, 84], [85, 95], [120, 86], [], [80, 170], [89], [70, 111], [86], [104], [102, 14], [86, 103], [86], [96, 110], [36], [90, 126], [12, 60], [], [93, 181], [104], [108, 109], [112, 125], [81], [98, 100], [98, 4], [105, 180], [101], [101, 119], [123, 124], [116], [160, 9], [106, 139], [168, 118], [108, 166], [108], [], [113, 117], [117, 125], [], [114, 92], [35, 182], [161], [], [102], [102], [64], [], [124], [130, 131], [16, 137], [36], [171], [171, 127], [136, 147], [146, 134], [130], [172, 87], [180], [138, 146], [147, 142], [142, 135], [169, 141], [149], [145, 164], [59], [144, 159], [172], [142], [157, 151], [152, 165], [149], [180, 143], [149], [128, 148], [155, 6], [157, 159], [11, 165], [], [153, 163], [179, 156], [49, 179], [94], [154], [161], [], [94], [161], [81], [44], [44], [110], [57, 7], [74, 75], [16, 174], [180], [177, 173], [180], [177], [162, 175], [16], [64], [66, 178], [94], [180], [1], [], []], "fname": "rm_1", "n_num": 183}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.12222222222222223, ["cmp     eax, 3", "jnz     short loc_478B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 3, 0.2555555555555556, ["cmp     eax, 4", "jnz     short loc_4780"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 0, 5, 3, 0.0, ["cmp     ebx, 2", "cmovz   ebx, eax"], ["cmp~ebx,0", "cmovz~ebx,eax"]], [2, 0, 8, 1, 0, 4, 0, 1, 4, 2, 0.05555555555555556, ["add     i, 1", "mov     ebx, 4", "cmp     n_files, i", "jnz     short loc_4794"], ["add~i,0", "mov~ebx,0", "cmp~n_files,i", "jnz~FOO"]], [1, 0, 8, 0, 1, 7, 0, 2, 2, 1, 0.34444444444444444, ["mov     rsi, [file+i*8+0]; filename", "mov     rdx, x; x", "mov     rdi, rbp; ds_0", "call    rm_1", "lea     edx, [s-2]", "cmp     edx, 2", "ja      short loc_4800"], ["mov~rsi,[file+0]", "mov~rdx,x", "mov~rdi,rbp", "call~FOO", "lea~edx,[s-2]+0]", "cmp~edx,0", "ja~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 1, 2, 0.07777777777777778, ["xor     r15d, r15d", "mov     ebx, 2", "jmp     short loc_4794"], ["xor~r15d,r15d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 3, 0, 1, 5, 2, 0.12222222222222223, ["add     i, 1", "cmp     n_files, i", "jz      short loc_47BF"], ["add~i,0", "cmp~n_files,i", "jz~FOO"]], [2, 0, 10, 1, 4, 39, 7, 5, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, x", "push    r13", "push    r12", "mov     r12, n_files", "push    rbp", "push    rbx", "mov     edi, 1F0h; n", "mov     r13, file", "sub     rsp, 18h", "call    xmalloc", "mov     rbx, cs:free_ptr", "mov     r15, cs:malloc_ptr", "mov     rbp, rax", "xor     edx, edx; int", "xor     esi, esi; int", "mov     rdi, rax; struct obstack *", "mov     r8, rbx; void (*)(void *)", "mov     rcx, r15; void *(*)(__int64)", "call    __obstack_begin", "lea     rax, [rbp+58h]", "xor     edx, edx; int", "xor     esi, esi; int", "mov     r8, rbx; void (*)(void *)", "mov     rcx, r15; void *(*)(__int64)", "mov     rdi, rax; struct obstack *", "mov     [rsp+48h+obstack], rax", "call    __obstack_begin", "lea     rax, [rbp+0B0h]", "xor     edx, edx; int", "xor     esi, esi; int", "mov     r8, rbx; void (*)(void *)", "mov     rcx, r15; void *(*)(__int64)", "mov     rdi, rax; struct obstack *", "mov     [rsp+48h+var_40], rax", "call    __obstack_begin", "test    n_files, n_files", "jz      loc_47F9"], ["push~r15", "push~r14", "mov~r14,x", "push~r13", "push~r12", "mov~r12,n_files", "push~rbp", "push~rbx", "mov~edi,0", "mov~r13,file", "sub~rsp,0", "call~FOO", "mov~rbx,<TAG>", "mov~r15,<TAG>", "mov~rbp,rax", "xor~edx,edx", "xor~esi,esi", "mov~rdi,rax", "mov~r8,rbx", "mov~rcx,r15", "call~FOO", "lea~rax,[rbp+0]", "xor~edx,edx", "xor~esi,esi", "mov~r8,rbx", "mov~rcx,r15", "mov~rdi,rax", "mov~<TAG>,rax", "call~FOO", "lea~rax,[rbp+0]", "xor~edx,edx", "xor~esi,esi", "mov~r8,rbx", "mov~rcx,r15", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~n_files,n_files", "jz~FOO"]], [1, 0, 0, 1, 4, 20, 3, 4, 2, -1, 0.0, ["mov     rdi, rbp; obstack", "xor     esi, esi; block", "call    _obstack_free", "mov     rdi, [rsp+48h+obstack]; obstack", "xor     esi, esi; block", "call    _obstack_free", "mov     rdi, [rsp+48h+var_40]; obstack", "xor     esi, esi; block", "call    _obstack_free", "mov     rdi, rbp; ptr", "call    free", "add     rsp, 18h", "mov     eax, ebx", "pop     status", "pop     rbp", "pop     n_files", "pop     file", "pop     x", "pop     r15", "retn"], ["mov~rdi,rbp", "xor~esi,esi", "call~FOO", "mov~rdi,<TAG>", "xor~esi,esi", "call~FOO", "mov~rdi,[rsp+0]", "xor~esi,esi", "call~FOO", "mov~rdi,rbp", "call~FOO", "add~rsp,0", "mov~eax,ebx", "pop~status", "pop~rbp", "pop~n_files", "pop~file", "pop~x", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.011111111111111112, ["mov     ebx, 2", "jmp     short loc_47BF"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6846; \"rm\"", "lea     rsi, aRemoveC; \"remove.c\"", "lea     rdi, aValidStatusS; \"VALID_STATUS (s)\"", "mov     edx, 64Dh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [10, 11, 18, 1, 11, 15, 1, 89, 0.0899, 5, 4], "succs": [[2, 6], [0, 3], [6], [8, 4], [1, 10], [4], [8, 4], [9, 5], [], [8], []], "fname": "rm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_4830"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_4850"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 0, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort; jumptable 0000000000004950 case 0"], ["call~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_B00C", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_4A86"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 0000000000004950 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_48AF"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_4A8B"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_4898"], ["add~n_authors,0", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000004950 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 0000000000004950 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_4990"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 3, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_48C0"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_4A70; jumptable 0000000000004950 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 5, -1, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_48E8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_4958"], ["test~command_name,command_name", "jz~FOO"]]], "func_feature": [10, 10, 28, 1, 25, 36, 1, 119, 0.05442, 17, 6], "succs": [[], [0, 4, 8, 11, 12, 13, 14, 15, 16, 17], [], [2, 23], [3], [7], [19], [10, 6], [3], [7], [19], [3], [3], [3], [3], [3], [3], [3], [3], [24, 9], [1, 18], [20], [20], [], [21, 22]], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_4B42"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_4AEC"], ["sub~rsp,0", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 8, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     edi, 1; status", "xor     eax, eax", "jmp     usage"], ["mov~edi,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 12, 2, 1, 11, 1, 1, 0, 0, 0.03311965811965811, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_4CA0"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_4C37"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_4C8D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965811, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_4C27"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_4C27"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 2, 0, 6, 1, 1, 5, 3, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_4C37"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_4C78"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4BF0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_4CB0"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_4C8D"], ["mov~<TAG>,i", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]]], "func_feature": [4, 7, 14, 1, 14, 20, 1, 76, 0.11538, 0, 8], "succs": [[7], [0, 4], [5], [2, 13], [7], [10, 7], [9, 5], [11, 5], [1, 6], [11], [8, 12], [13], [13], []], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_4CE6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_4D20"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [3, 0, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_4E10"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_4D98"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_4D98"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_4DC1"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, aS; \", `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_4DC1"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS_0; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_4E10"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_4E40"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[], [0], [9, 5], [6, 7], [3, 7], [4], [8, 4], [9, 4], [9], [1, 10], []], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_4E96"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_4EA5"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 1, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_4EF0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_4EFF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_4F11"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_4F11"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_4F7A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.16666666666666669, ["test    sil, sil", "jz      short loc_4F5A"], ["test~sil,sil", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_4F65"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_4F7A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_4F50"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_4F65"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_4F3C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_4F30"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 1, 30, 0.10505, 0, 3], "succs": [[10, 5], [0, 2], [0], [5], [10, 3], [1, 6], [10, 5], [8, 4], [9], [9, 4], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 1, 2, 0, 10, 1, 1, 0, 0, 0.016798418972332016, ["xor     edx, edx", "cmp     byte ptr [rbx+rax], 2Fh ; '/'", "mov     rdi, rbx; string", "setz    dl", "add     rsp, 8", "pop     rbx", "pop     name", "add     rax, rdx", "mov     rsi, length; n", "jmp     xstrndup"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rdi,rbx", "setz~dl", "add~rsp,0", "pop~rbx", "pop~name", "add~rax,rdx", "mov~rsi,length", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 6, 4, 0.11561264822134387, ["mov     name, rbx; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_4FF6"], ["mov~name,rbx", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 8, 2, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_4FF6"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 9, 1, 0.02766798418972332, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_4FF6"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 7, 3, 0.07114624505928853, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_5060"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [2, 0, 23, 1, 0, 8, 0, 1, 0, 10, 0.0, ["push    rbp", "push    rbx", "mov     rbp, name", "mov     rbx, name", "sub     rsp, 8", "movzx   eax, byte ptr [name]", "cmp     al, 2Fh ; '/'", "jnz     short loc_4FA3"], ["push~rbp", "push~rbx", "mov~rbp,name", "mov~rbx,name", "sub~rsp,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 11, 0.001976284584980237, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 22, 1, 0, 4, 0, 1, 2, 10, 0.04150197628458498, ["add     rbx, 1", "movzx   eax, byte ptr [rbx]", "cmp     al, 2Fh ; '/'", "jz      short loc_4F98"], ["add~rbx,0", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 2, -1, 0.12351778656126482, ["mov     name, rbp; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_5031"], ["mov~name,rbp", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 9, 0.11857707509881422, ["test    al, al", "jz      short loc_5018"], ["test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.20158102766798416, ["cmp     byte ptr [rbx], 0", "jz      short loc_5018"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 8, 0.09486166007905138, ["mov     rdx, rbx", "xor     ecx, ecx", "jmp     short loc_4FC4"], ["mov~rdx,rbx", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, -1, 0.07114624505928853, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_5048"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 4, 7, 0.029644268774703556, ["test    cl, cl", "jz      short loc_4FB9"], ["test~cl,cl", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 3, 7, 0.14031620553359683, ["cmp     al, 2Fh ; '/'", "jnz     short loc_4FB0"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 0, 5, 7, 0.0, ["mov     rbx, rdx", "xor     ecx, ecx"], ["mov~rbx,rdx", "xor~ecx,ecx"]], [0, 0, 5, 0, 0, 1, 0, 1, 10, 0, 0.001976284584980237, ["jmp     short loc_5060"], ["jmp~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 3, -1, 0.024703557312252964, ["add     rsp, 8", "mov     rdi, name; string", "mov     rsi, rax; n", "pop     rbx", "pop     name", "jmp     xstrndup"], ["add~rsp,0", "mov~rdi,name", "mov~rsi,rax", "pop~rbx", "pop~name", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 4, -1, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_5031"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 5, -1, 0.02766798418972332, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_5031"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [1, 0, 19, 1, 0, 4, 1, 1, 5, 6, 0.06521739130434782, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_4FD8"], ["add~rdx,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 19, 1, 0, 5, 1, 1, 4, 6, 0.11067193675889328, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "mov     ecx, 1", "test    al, al", "jnz     short loc_4FC4"], ["add~rdx,0", "movzx~eax,<TAG>", "mov~ecx,0", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 6, -1, 0.001976284584980237, ["jmp     short loc_5048"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [2, 7, 21, 0, 24, 39, 0, 79, 0.05838, 0, 7], "succs": [[23], [0, 4], [0, 3], [0, 16], [0, 2], [9, 6], [7], [9, 7], [17, 12], [8, 11], [8, 1], [14], [17, 18], [20, 15], [13, 21], [20], [2], [23], [17, 19], [17, 22], [10, 14], [10, 14], [18], []], "fname": "base_name", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 5, 0, 0, 2, 0, 0, 0, 0, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, 3, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_50A0"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_50C0"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_50A8"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_509A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 0, 23, 0.07738, 0, 0], "succs": [[3], [0, 7], [], [1, 2], [3, 6], [4, 6], [], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_51D0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_5138"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_5138"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 3, 2, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    _fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_51BA"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 1, 3, 0.030303030303030304, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "xor     esi, esi; off", "mov     edx, 1; whence", "call    _fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_5118"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_5183"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 0, 3, 0.0, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; fp", "push    r12", "push    rbp", "push    rbx", "call    freadahead", "test    rax, rax", "jnz     loc_5198"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 64, 0.03205, 6, 0], "succs": [[11, 6], [0, 9], [0, 8], [0], [2, 3], [2, 4], [10], [1, 5], [12], [12], [], [10], []], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_5273"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:__bss_start; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_5229"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 1, 1, 0.06666666666666667, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name_0", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_527E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_5273"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [8, 8, 12, 0, 7, 8, 3, 43, 0.02381, 7, 0], "succs": [[2, 6], [0, 4], [], [6], [3, 5], [6], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     qword ptr [state+10h], 0", "mov     dword ptr [state+18h], 95F616h", "retn"], ["mov~[word ptr [state+0],0", "mov~[word ptr [state+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.01818181818181818, ["mov     qword ptr [state+10h], 1"], ["mov~[word ptr [state+0],0"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, -1, 0.08181818181818182, ["mov     rdx, [state+10h]", "mov     rcx, [sb+8]", "test    rdx, rdx", "jz      short loc_52E0"], ["mov~rdx,[state+0]", "mov~rcx,[sb+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     dword ptr [state+18h], 95F616h", "jnz     short loc_5317"], ["cmp~[word ptr [state+0],0", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.08181818181818182, ["test    r8, r8", "jz      short loc_5301"], ["test~r8,r8", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, -1, 0.02727272727272727, ["mov     rax, [state+8]", "cmp     [sb], rax", "jnz     short loc_52CB"], ["mov~rax,[state+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.10909090909090909, ["cmp     [state], rcx", "jz      short loc_52F8"], ["cmp~<TAG>,rcx", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 2, 1, 3, -1, 0.12727272727272726, ["lea     r8, [rdx+1]", "xor     eax, eax", "test    rdx, r8", "mov     [state+10h], r8", "jz      short loc_5310"], ["lea~r8,[rdx+0]", "xor~eax,eax", "test~rdx,r8", "mov~[state+0],r8", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["mov     rax, [sb]", "mov     [state], rcx", "mov     [state+8], rax", "xor     eax, eax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rcx", "mov~[state+0],rax", "xor~eax,eax", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.03636363636363636, ["jmp     short loc_52E8"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 1, 1, 6, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___4570; \"cycle_check\"", "lea     sb, aCycleCheckC; \"cycle-check.c\"", "lea     state, aStateMagicCcMa; \"state->magic == CC_MAGIC\"", "sub     rsp, 8", "mov     edx, 3Ch ; '<'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~sb,<TAG>", "lea~state,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 5, 8, 0, 12, 14, 1, 34, 0.04015, 3, 1], "succs": [[8], [0, 6], [1, 11], [], [9, 3], [3, 7], [5, 7], [10, 4], [], [8], [], []], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.07352941176470588, ["cmp     eax, 0A000h", "jz      loc_5420"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 7, 0, 0, 2, 0, 1, 4, 2, 0.08823529411764705, ["cmp     eax, 1000h", "jz      loc_5410"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 4, 0.07352941176470588, ["cmp     eax, 6000h", "jz      short loc_53D0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 5, 0.04534313725490196, ["cmp     eax, 4000h", "jz      loc_53F0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.00980392156862745, ["cmp     qword ptr [st+30h], 0", "jnz     short loc_53B8"], ["cmp~[word ptr [st+0],0", "jnz~FOO"]], [3, 0, 17, 0, 0, 5, 1, 1, 0, 6, 0.0, ["mov     eax, [st+18h]", "mov     edx, 5; category", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      short loc_53A0"], ["mov~eax,[st+0]", "mov~edx,0", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.003063725490196078, ["lea     rsi, aRegularFile; \"regular file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.001838235294117647, ["lea     rsi, aSocket; \"socket\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 1, 3, 0, 0, 2, 0, 1, 6, -1, 0.044117647058823525, ["cmp     eax, 0C000h", "jz      short loc_53E0"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 1, 9, 0, 0, 2, 0, 1, 3, 3, 0.08823529411764705, ["cmp     eax, 2000h", "jz      loc_5400"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 3, -1, 0.003676470588235294, ["lea     rsi, aBlockSpecialFi; \"block special file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.003063725490196078, ["lea     rsi, aRegularEmptyFi; \"regular empty file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 2, -1, 0.004901960784313725, ["lea     rsi, aDirectory; \"directory\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 4, -1, 0.003676470588235294, ["lea     rsi, aCharacterSpeci; \"character special file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 6, 0, 0.003676470588235294, ["lea     rsi, aSymbolicLink; \"symbolic link\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.001838235294117647, ["lea     rsi, aWeirdFile; \"weird file\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 5, -1, 0.003676470588235294, ["lea     rsi, aFifo; \"fifo\"", "xor     edi, edi; domainname", "jmp     _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 10, 17, 0, 18, 25, 1, 46, 0.02512, 9, 0], "succs": [[8, 14], [0, 16], [9, 10], [2, 12], [11, 6], [3, 4], [17], [17], [15, 7], [1, 13], [17], [17], [17], [17], [17], [17], [17], []], "fname": "file_type", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 7, 0, 1, 5, 1, 2, 0, 0, 0.07692307692307693, ["mov     rsi, [rax]", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_54E0"], ["mov~rsi,<TAG>", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.1043956043956044, ["mov     rax, [cursor+8]", "test    rax, rax", "jnz     short loc_54B8"], ["mov~rax,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.01098901098901099, ["mov     cursor, [cursor+8]"], ["mov~cursor,[cursor+0]"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.04395604395604396, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      loc_5510"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.05494505494505495, ["test    r12b, r12b", "mov     rax, [bucket]", "jz      short loc_54D5"], ["test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     rdx, [cursor+8]", "test    r12b, r12b", "mov     rax, [rdx]", "jz      short loc_54D5"], ["mov~rdx,[cursor+0]", "test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.005494505494505495, ["mov     qword ptr [bucket], 0", "jmp     short loc_54D5"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 1, -1, 0.06593406593406594, ["mov     [bucket_head], bucket", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_54D3"], ["mov~<TAG>,bucket", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 14, 2, 1, 17, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     rbx, [table]", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [table+8], bucket", "jbe     loc_5519"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~rbx,<TAG>", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.02197802197802198, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 0, 0, 0, 12, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     bucket", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~bucket", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 11, 0, 1, 4, 1, 2, 2, -1, 0.09890109890109891, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_54CA"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 0, 0, 12, 0, 0, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     cursor", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~cursor", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]]], "func_feature": [4, 8, 12, 0, 15, 19, 2, 78, 0.0348, 0, 2], "succs": [[2, 5], [0, 10], [1], [11, 6], [9, 3], [9, 14], [9], [10, 12], [13, 7], [], [9], [], [1, 4], [], []], "fname": "hash_find_entry", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.09027777777777778, ["ucomiss xmm0, xmm1", "mov     eax, 1", "ja      short locret_5594"], ["ucomiss~xmm0,xmm1", "mov~eax,0", "ja~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 2, 0.1388888888888889, ["movss   xmm3, cs:dword_B244", "ucomiss xmm3, xmm2", "jb      short loc_5588"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.013888888888888888, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 4, 0, 0, 4, 2, 0.16666666666666666, ["addss   xmm1, cs:dword_B234", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_5588"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 2, 0.16666666666666666, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_B240", "jb      short loc_5588"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 2, 2, 0.1388888888888889, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_B23C", "jbe     short loc_5588"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 1, 2, 0.08333333333333333, ["movss   xmm1, cs:dword_B238", "ucomiss xmm1, xmm0", "jbe     short loc_5588"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 2, 0.0, ["mov     rax, [rdi]", "movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_B234", "jbe     short loc_5588"], ["mov~rax,<TAG>", "movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 1, 0, 0, 3, 1, 0, 1, 1, 0.09027777777777778, ["lea     rax, default_tuning", "mov     [rdi], rax", "xor     eax, eax"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "xor~eax,eax"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 10, 16, 4, 28, 0.08889, 6, 0], "succs": [[9, 2], [0, 8], [8], [8, 1], [8, 3], [8, 4], [8, 5], [8, 6], [9], []], "fname": "check_tuning", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 7, 1, 0, 4, 1, 1, 0, 0, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_55F8"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_560C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_55E0"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [1, 0, 7, 0, 0, 4, 1, 1, 3, -1, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_5605"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_5617"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[0, 5], [0], [3, 6], [2, 7], [2], [3], [1, 5], [], [], [8, 4]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_5630"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_565D"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_565D"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_5650"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_5670"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_5666"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 5], [0, 2], [0, 4], [0, 3], [3], [8, 7], [1, 5], [], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 2, 0, 0, 8, 2, 1, 0, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_5738"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 0, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_B258", "js      short loc_57A9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 0, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_B258", "jns     short loc_572F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 0, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_56D5"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 0, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_56DC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 0, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_56B0"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 0, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 0, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_56E5"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 0, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0.0, [], []], [4, 0, 1, 1, 1, 18, 1, 2, 4, 0, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 0, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_5780"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 5, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_56C8"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, 0, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[11], [0, 14], [0, 14], [6, 7], [3, 5], [12, 4], [5], [13], [9, 12], [4], [], [10], [1, 2], [13, 6], [11]], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.03571428571428571, ["jmp     short loc_5821"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 1, -1, 0.10714285714285714, ["mov     rsi, [bucket+0]", "test    rsi, rsi", "jnz     short loc_580C"], ["mov~rsi,[bucket+0]", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 2, 1, 13, 0, 1, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, entry", "push    rbp", "mov     rbp, [table]", "mov     r12, table", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     short loc_583A"], ["push~r13", "push~r12", "mov~r13,entry", "push~rbp", "mov~rbp,<TAG>", "mov~r12,table", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, -1, 0.03571428571428571, ["mov     rsi, [cursor+0]"], ["mov~rsi,[cursor+0]"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.08928571428571427, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5808"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbp", "xor     eax, eax", "pop     table", "pop     entry", "retn"], ["pop~rbp", "xor~eax,eax", "pop~table", "pop~entry", "retn"]], [0, 0, 5, 0, 1, 4, 1, 2, 2, -1, 0.17857142857142855, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_5830"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, [cursor+0]", "pop     cursor", "pop     table", "pop     entry", "retn"], ["mov~rax,[cursor+0]", "pop~cursor", "pop~table", "pop~entry", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 4, 7, 0, 9, 10, 1, 36, 0.0496, 0, 2], "succs": [[5], [0, 6], [8, 1], [6], [3, 5], [], [4, 7], [], []], "fname": "hash_lookup", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_5873"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 0, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_5878"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_5860"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 0, 4, 0, 0, 0, 1, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_5878"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 0, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_5876"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[4, 5], [9, 2], [8, 1], [1], [9, 7], [], [], [3, 6], [], []], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 9, 0, 0, 3, 1, 1, 0, 0, 0.08181818181818182, ["test    cursor, cursor", "mov     rax, cursor", "jz      short loc_58F8"], ["test~cursor,cursor", "mov~rax,cursor", "jz~FOO"]], [1, 0, 11, 1, 1, 14, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbx, [table]", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rsi, [table+8]", "shl     rax, 4", "lea     rdx, [rbx+rax]", "cmp     rsi, bucket", "jbe     short loc_5908"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbx,<TAG>", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rsi,[table+0]", "shl~rax,0", "lea~rdx,<TAG>", "cmp~rsi,bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.09090909090909091, ["test    rax, rax", "jz      short loc_58F8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, -1, 0.07272727272727272, ["mov     rcx, [rax]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_58E0"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 4, -1, 0.01818181818181818, ["mov     rcx, [cursor]", "mov     cursor, [cursor+8]", "cmp     rcx, entry", "jnz     short loc_58CF"], ["mov~rcx,<TAG>", "mov~cursor,[cursor+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.02727272727272727, ["mov     rax, [rax]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [1, 0, 4, 1, 0, 3, 0, 1, 2, -1, 0.14545454545454545, ["add     bucket, 10h", "cmp     rsi, bucket", "ja      short loc_58F0"], ["add~bucket,0", "cmp~rsi,bucket", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.03636363636363636, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_58E8"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, -1, 0.05454545454545454, ["test    rax, rax", "jz      short loc_58F8"], ["test~rax,rax", "jz~FOO"]]], "func_feature": [2, 5, 9, 0, 12, 17, 0, 46, 0.04394, 0, 2], "succs": [[3, 7], [0, 8], [5, 7], [2, 11], [2, 11], [9], [], [10, 6], [], [], [9, 7], [4, 7]], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_595D"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_591C"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_5970"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5940"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_5967"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_5972"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_595A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[1, 7], [0, 8], [0], [9, 4], [3, 6], [3], [1], [8, 12], [], [], [], [10, 2], [5, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 0, 0, 0, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_59E6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_59D4"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_59D4"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_59A2"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_59CA"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_59B3"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 6, -1, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_59B0"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[6], [0, 4], [], [9, 2], [2], [2, 6], [5, 7], [3], [3], [8, 5]], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_5A1D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_5A00"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 18, 0, 0, 3, 0, 0, 0, 0, 0.12931034482758622, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_B24C", "jnb     short fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 19, 0, 0, 8, 2, 1, 6, 0, 0.04802955665024631, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_5BFF"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 6, -1, 0.04802955665024631, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [2, 0, 13, 2, 0, 10, 0, 0, 8, -1, 0.2210591133004926, ["mov     rax, rbx", "mov     rcx, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     rbx, 9", "mov     rax, rcx", "jbe     short loc_5B48"], ["mov~rax,rbx", "mov~rcx,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~rbx,0", "mov~rax,rcx", "jbe~FOO"]], [1, 0, 13, 1, 0, 2, 0, 1, 10, -1, 0.021551724137931036, ["add     rbx, 2", "jmp     short loc_5AF0"], ["add~rbx,0", "jmp~FOO"]], [4, 0, 13, 0, 0, 6, 1, 0, 7, -1, 0.19704433497536947, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      rbx, 1", "nop     dword ptr [rax+00h]"], ["cmp~candidate,0", "mov~eax,0", "mov~r8,0", "cmovb~candidate,rax", "or~rbx,0", "nop~[word ptr [rax+0]"]], [0, 1, 27, 0, 1, 9, 1, 2, 2, 4, 0.06157635467980296, ["mov     rbx, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "mov     rbp, hasher", "mov     r13, data_freer", "call    malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_5BD0"], ["mov~rbx,candidate", "mov~edi,<STR>", "mov~r15,tuning", "mov~rbp,hasher", "mov~r13,data_freer", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 1, 5, 0.03201970443349754, ["test    comparator, comparator", "mov     r12, comparator", "jz      loc_5BD0"], ["test~comparator,comparator", "mov~r12,comparator", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.0874384236453202, ["test    rcx, rcx", "jz      short loc_5B4D"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, -1, 0.11822660098522167, ["ucomiss xmm0, cs:dword_B250", "jb      short loc_5C34"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 15, 0, 0, 5, 1, 1, 9, -1, 0.053571428571428575, ["subss   xmm0, cs:dword_B250", "mov     rax, 8000000000000000h", "cvttss2si rbx, xmm0", "xor     rbx, rax", "jmp     loc_5ABE"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbx,xmm0", "xor~rbx,rax", "jmp~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 3, 3, 0.08866995073891626, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_5BD5"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [3, 0, 13, 0, 0, 4, 0, 1, 10, -1, 0.05603448275862069, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_5B31"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 12, -1, 0.0067733990147783255, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [1, 0, 4, 0, 1, 6, 1, 2, 11, -1, 0.03633004926108374, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 3, 0.07266009852216748, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 5, -1, 0.049876847290640396, ["mov     rdi, table; ptr", "call    free"], ["mov~rdi,table", "call~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 6, -1, 0.21798029556650247, ["mov     rax, 0FFFFFFFFFFFFFFFh", "cmp     candidate, rax", "ja      fail"], ["mov~rax,0", "cmp~candidate,rax", "ja~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 10, -1, 0.08866995073891626, ["mov     rax, 0FFFFFFFFFFFFFFFh", "mov     [table+10h], rbx", "cmp     rbx, rax", "ja      short fail"], ["mov~rax,0", "mov~[table+0],rbx", "cmp~rbx,rax", "ja~FOO"]], [0, 0, 22, 0, 1, 6, 1, 2, 4, 2, 0.038177339901477834, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_B248", "jz      short fail"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 1, 1, 12, -1, 0.004310344827586207, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_5B4D"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 13, 3, 0, 8, 1, 1, 11, -1, 0.05233990147783251, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rbx, rsi", "mov     rax, rdx", "ja      short loc_5B28"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rbx,rsi", "mov~rax,rdx", "ja~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 2, 0.0874384236453202, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_5C3E"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.053571428571428575, ["cvttss2si rbx, xmm0", "jmp     loc_5ABE"], ["cvttss2si~rbx,xmm0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.02647783251231527, ["xor     r14d, r14d", "jmp     short loc_5BAF"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 1, 0, 6, 1, 0.014778325123152709, ["test    candidate, candidate", "movss   xmm1, dword ptr [tuning+8]", "jns     short loc_5BF6"], ["test~candidate,candidate", "movss~xmm1,[word ptr [tuning+0]", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.12623152709359606, ["test    rax, rax", "jnz     short loc_5B58"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 29, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    hasher, hasher", "jz      loc_5BD0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~hasher,hasher", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 5, 1, 0.05172413793103448, ["test    candidate, candidate", "js      short loc_5C49"], ["test~candidate,candidate", "js~FOO"]]], "func_feature": [5, 18, 26, 0, 30, 48, 2, 135, 0.06966, 4, 11], "succs": [[16, 9], [0], [0], [8, 27], [3], [3], [25, 11], [25, 6], [4, 12], [10, 23], [17], [19, 15], [21], [24], [16, 13], [16, 22], [25], [16, 5], [16, 14], [16, 29], [4, 21], [27, 20], [17, 26], [17], [], [24], [1, 2], [18, 4], [25, 7], [1, 2]], "fname": "hash_initialize", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 11, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_5CA6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_5C98"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_5CE1"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5C80"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_5CEB"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_5CD0"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 4, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_5CC5"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2], [0, 2], [1, 6], [4, 7], [11, 3], [11, 3], [8, 9], [10, 6], [4], [8], [1], []], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 9, 0, 1, 5, 1, 2, 0, 0, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_5D80"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 4, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 21, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_5D63"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_5D63"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 4, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5D70"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_5D91"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_5D9C"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 3, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_5DC1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 1, 2, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_5D9C"], ["cmp~rbp,rax", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_5D56"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 5, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_5D28"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 5, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_5D43"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_5DB0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 18, 0, 1, 4, 1, 2, 6, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5D40"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 5, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 1, 0, 0, 6, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[0, 4], [0], [9, 3], [9, 6], [8, 5], [1, 4], [8, 7], [11], [17, 10], [8, 20], [14], [12, 13], [19, 11], [16], [17, 14], [16], [18, 15], [21], [12], [9], [5], []], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 20, 2, 1, 8, 0, 1, 0, 0, 0.44155844155844154, ["mov     rbx, [new_table]", "mov     rsi, [new_table+10h]", "mov     rdi, r15", "call    qword ptr [new_table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [new_table+8], new_bucket", "jbe     loc_5F90"], ["mov~rbx,<TAG>", "mov~rsi,[new_table+0]", "mov~rdi,r15", "call~[word ptr [new_table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[new_table+0],new_bucket", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.19047619047619047, ["mov     r13, bucket", "jmp     short loc_5E71"], ["mov~r13,bucket", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 2, 0.2077922077922078, ["mov     r15, [next+0]", "mov     r13, next"], ["mov~r15,[next+0]", "mov~r13,next"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 22, 1, 1, 17, 1, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     rax, table_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rcx, [rax+38h]; comparator", "mov     rdx, [rax+30h]; hasher", "mov     [rsp+48h+table], table_0", "mov     r8, [rax+40h]; data_freer", "mov     table_0, candidate; candidate", "mov     candidate, [table_0+28h]; tuning", "call    hash_initialize", "test    new_table, new_table", "jz      loc_5F7F"], ["push~r15", "push~r14", "mov~rax,table_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rcx,[rax+0]", "mov~rdx,[rax+0]", "mov~[rsp+0],table_0", "mov~r8,[rax+0]", "mov~table_0,candidate", "mov~candidate,[table_0+0]", "call~FOO", "test~new_table,new_table", "jz~FOO"]], [1, 0, 20, 0, 1, 4, 1, 2, 9, 5, 0.07034632034632035, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     short loc_5F53"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 6, 5, 0.4025974025974026, ["cmp     qword ptr [new_bucket], 0", "mov     rbp, [cursor+8]", "jnz     short loc_5E50"], ["cmp~<TAG>,0", "mov~rbp,[cursor+0]", "jnz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 7, 4, 0.16017316017316016, ["mov     [new_bucket], r15", "add     qword ptr [new_table+18h], 1", "cmp     bucket, cursor", "jz      short loc_5E65"], ["mov~<TAG>,r15", "add~[word ptr [new_table+0],0", "cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 9, 5, 0.010822510822510822, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 20, 0, 0, 6, 1, 1, 8, 3, 0.06060606060606061, ["mov     qword ptr [cursor+0], 0", "mov     rax, [new_table+48h]", "test    next, next", "mov     [cursor+8], rax", "mov     [new_table+48h], cursor", "jnz     short loc_5E6A"], ["mov~[word ptr [cursor+0],0", "mov~rax,[new_table+0]", "test~next,next", "mov~[cursor+0],rax", "mov~[new_table+0],cursor", "jnz~FOO"]], [0, 0, 21, 0, 0, 7, 0, 0, 1, 5, 0.04329004329004329, ["mov     rcx, [rsp+48h+table]", "mov     r12, new_table", "mov     r14, [rcx]", "cmp     [rcx+8], bucket", "mov     new_table, [rcx+48h]", "mov     [new_table+48h], rax", "jbe     loc_5EE6"], ["mov~rcx,[rsp+0]", "mov~r12,new_table", "mov~r14,<TAG>", "cmp~[rcx+0],bucket", "mov~new_table,[rcx+0]", "mov~[new_table+0],rax", "jbe~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 2, 4, 0.08008658008658008, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 1, 2, 24, 0, 2, 2, -1, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rax, [new_table]", "mov     rdx, [rsp+48h+table]", "mov     rdi, new_table; ptr", "mov     [rdx], rax", "mov     rax, [new_table+8]", "mov     [rdx+8], rax", "mov     rax, [new_table+10h]", "mov     [rdx+10h], rax", "mov     rax, [new_table+18h]", "mov     [rdx+18h], rax", "mov     rax, [new_table+48h]", "mov     [rdx+48h], rax", "call    free", "add     rsp, 18h", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     new_table", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,new_table", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~new_table", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.0367965367965368, ["mov     bucket, [rax]"], ["mov~bucket,<TAG>"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 3, 0.20995670995670995, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_5ED0"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 4, 4, 0.16233766233766234, ["mov     rax, [rsp+48h+table]", "add     bucket, 10h", "cmp     [rax+8], bucket", "ja      loc_5E38"], ["mov~rax,[rsp+0]", "add~bucket,0", "cmp~[rax+0],bucket", "ja~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 8, 6, 0.1406926406926407, ["mov     rax, [new_table+48h]", "test    rax, rax", "jz      short loc_5F70"], ["mov~rax,[new_table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 7, 5, 0.20562770562770563, ["cmp     bucket, cursor", "jz      loc_5F40"], ["cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 5, 0.03354978354978355, ["mov     rcx, [rax+8]", "mov     [new_table+48h], rcx"], ["mov~rcx,[rax+0]", "mov~[new_table+0],rcx"]], [0, 0, 20, 0, 0, 2, 1, 1, 8, 3, 0.2813852813852814, ["test    next, next", "jz      short loc_5ED0"], ["test~next,next", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 8, 4, 0.02813852813852814, ["mov     rax, [new_bucket+8]", "mov     [cursor+8], rax", "mov     [new_bucket+8], cursor"], ["mov~rax,[new_bucket+0]", "mov~[cursor+0],rax", "mov~[new_bucket+0],cursor"]], [0, 0, 20, 0, 0, 5, 0, 1, 10, 4, 0.10822510822510822, ["mov     rdx, [new_bucket+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax", "jmp     loc_5E65"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax", "jmp~FOO"]]], "func_feature": [6, 7, 18, 0, 23, 32, 2, 114, 0.12498, 0, 7], "succs": [[6, 7], [0], [0], [], [11, 3], [3, 22], [], [8, 18], [10, 20], [16], [9, 2], [12, 13], [15], [], [13], [16, 1], [14, 15], [19, 5], [17, 21], [22], [16, 2], [20], [20]], "fname": "hash_rehash", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 31, 0, 0, 3, 0, 1, 0, 0, 0.049910873440285206, ["mov     r12, [rsp+28h+bucket]", "cmp     qword ptr [r12], 0", "jz      short loc_6030"], ["mov~r12,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 32, 0, 1, 7, 2, 2, 1, -1, 0.0285204991087344, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rbp, table", "mov     rbx, entry", "call    hash_find_entry", "test    data, data", "jz      short loc_5FF8"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "test~data,data", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 14, -1, 0.10606060606060605, ["ucomiss xmm0, cs:dword_B24C", "jnb     short loc_609B"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 13, -1, 0.11853832442067735, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jnz     short loc_6101"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mulss   xmm0, xmm2"], ["mulss~xmm0,xmm2"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.013368983957219251, ["mov     data, [table+48h]", "test    rax, rax", "jz      short loc_6088"], ["mov~data,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 4, -1, 0.0035650623885918, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.07397504456327986, ["ucomiss xmm0, cs:dword_B250", "jnb     loc_61BE"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 4, -1, 0.0089126559714795, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     loc_6014"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.021836007130124777, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 14, 0, 0, 8, 2, 1, 11, -1, 0.06818181818181818, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_60E6"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 10, -1, 0.14705882352941177, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_6180"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 5, -1, 0.011140819964349376, ["xor     eax, eax", "jmp     loc_5FD6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.0338680926916221, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_607B"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.021836007130124777, ["subss   xmm0, cs:dword_B250", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_611C"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [1, 0, 3, 1, 0, 7, 0, 1, 5, -1, 0.007575757575757575, ["mov     rdx, [r12+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [r12+8], rax", "mov     rax, entry", "add     qword ptr [table+20h], 1", "jmp     short loc_5FD6"], ["mov~rdx,[r12+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[r12+0],rax", "mov~rax,entry", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 18, -1, 0.0053475935828877, ["xor     eax, eax", "jmp     loc_5FD6"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 9, -1, 0.0641711229946524, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_60D0"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 1, 7, 1, 2, 8, -1, 0.13101604278074866, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_61A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [1, 0, 34, 1, 0, 9, 2, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_61E2"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [2, 0, 24, 0, 0, 8, 2, 1, 4, -1, 0.0374331550802139, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_6057"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [2, 0, 26, 2, 0, 7, 1, 1, 3, -1, 0.058823529411764705, ["mov     data, [table+18h]", "mov     [r12], entry", "add     qword ptr [table+20h], 1", "add     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_6160"], ["mov~data,[table+0]", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 7, -1, 0.1497326203208556, ["mulss   xmm1, dword ptr [rdx+8]", "ucomiss xmm0, xmm1", "ja      short loc_60A8"], ["mulss~xmm1,[word ptr [rdx+0]", "ucomiss~xmm0,xmm1", "ja~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 9, -1, 0.0641711229946524, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 21, 0, 0, 8, 2, 1, 6, -1, 0.06016042780748663, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_6071"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 5, -1, 0.1122994652406417, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_6138"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 4, -1, 0.0374331550802139, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.0552584670231729, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_61DD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 11, -1, 0.06818181818181818, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0427807486631016, ["mov     rax, entry", "jmp     loc_5FD6"], ["mov~rax,entry", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 6, -1, 0.06016042780748663, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 13, 0, 0, 4, 0, 0, 12, -1, 0.14705882352941177, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     short loc_607B"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]]], "func_feature": [6, 23, 28, 1, 35, 48, 1, 137, 0.05167, 3, 5], "succs": [[5, 21], [0, 29], [12, 7], [2, 4], [2], [8, 6], [15], [9, 14], [12, 15], [13], [33], [10, 30], [29], [16, 31], [13], [29], [29], [11], [17, 23], [24, 1], [26], [27, 20], [18, 31], [11], [], [22], [32, 25], [26], [], [34, 28], [33], [29], [22], [3, 31], []], "fname": "hash_insert", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.02717391304347826, ["mov     rdi, table; table", "call    hash_rehash", "jmp     loc_622D"], ["mov~rdi,table", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 5, 1, 1, 14, 3, 0.025362318840579712, ["subss   xmm0, cs:dword_B250", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     short loc_62F8"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.025362318840579712, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 17, 0, 0, 2, 0, 0, 5, 3, 0.08695652173913043, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 19, 0, 0, 4, 1, 1, 4, 4, 0.161231884057971, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_6308"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 2, 0.2210144927536232, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_622D"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 5, 3, 0.08695652173913043, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_6288"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [2, 0, 10, 0, 0, 8, 2, 1, 10, 3, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_62CA"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, 4, 0.21195652173913043, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_6380"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 24, 1, 1, 13, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ecx, 1; delete", "mov     rbx, table", "sub     rsp, 18h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_622D"], ["push~rbp", "push~rbx", "mov~ecx,0", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 7, 6, 0.1956521739130435, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_63A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 23, 1, 0, 4, 0, 1, 1, 2, 0.036231884057971016, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_6250"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 8, 5, 0.09329710144927536, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 13, 0, 0, 8, 2, 1, 8, 5, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_62B4"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.07971014492753624, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_63BE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 11, 2, 0.1956521739130435, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_622D"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 10, 3, 0.09329710144927536, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 20, 0, 0, 8, 2, 1, 3, 5, 0.04891304347826087, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_626E"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 22, 1, 0, 5, 1, 1, 2, 6, 0.06884057971014493, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_6330"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     rbp", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "retn"]], [1, 0, 8, 0, 0, 3, 0, 1, 12, 5, 0.14492753623188406, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_6370"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 3, 5, 0.04891304347826087, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 6, 0, 0, 2, 0, 0, 13, 4, 0.10869565217391304, ["ucomiss xmm0, cs:dword_B250", "jnb     short loc_6350"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_62EA"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]]], "func_feature": [4, 16, 19, 1, 25, 34, 0, 107, 0.08587, 2, 4], "succs": [[14], [0], [0], [5], [3, 6], [10, 14], [5], [15], [16, 7], [11, 14], [12, 13], [18, 14], [8], [8], [19, 21], [20, 14], [15], [4], [17, 22], [], [24, 23], [], [4], [1, 2], [23]], "fname": "hash_delete", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 5, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 25, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 159, 0, 0, 2, 0, 1, 0, 0, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_6BFB"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_6BFB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.05155444386943438, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_6BFB"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.047126866386828434, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_6BFB"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625936, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_660C"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_65FA"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_6DF0"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_6DF8"], ["cmp~r14,len", "jbe~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000006558 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.32742875579687775, ["lea     rcx, off_B2C0", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.03691199516626467, ["lea     rcx, off_B4BC", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 0000000000006558 cases 35,126", "jnz     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_6E1A"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.04600080501408775, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_6488"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.019435340118452073, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_69F5"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_69F5"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.013915243516761544, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_69E0"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 0000000000006558 case 92", "jz      loc_6C08"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_6C08"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.00575489237728327, ["test    r11b, r11b; jumptable 0000000000006B18 case 92", "jz      short loc_6C08"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_6C08"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_6822"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_6822"], ["cmp~rbx,r14", "jnb~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.1799267181620125, ["test    r11b, r11b; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122", "jz      loc_66ED"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573208, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.05586701933950511, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117054, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000006558 case 39", "mov     ebp, 27h ; '''", "jnz     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_6618; jumptable 0000000000006558 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250467995, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_6663"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_6621"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_6621"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_6621"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_6621"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000006468 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_6488"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_B2A0", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_6F27"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_6C73"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 0000000000006558 default case", "jnz     loc_6C20"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_6E2C"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000006468 case 2", "jnz     loc_6EE4"], ["test~ebx,ebx", "jnz~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450209, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_6663"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_6E04"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_6E04"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_6E04"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.0023000402507043875, ["lea     rax, aS+5; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.0468729036091465, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.01048946134335128, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 66h ; 'f'; jumptable 0000000000006B18 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 76h ; 'v'; jumptable 0000000000006B18 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 62h ; 'b'; jumptable 0000000000006B18 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 61h ; 'a'; jumptable 0000000000006B18 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_6F2C; jumptable 0000000000006468 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.0023000402507043875, ["lea     rax, aS+5; jumptable 0000000000006468 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.06287255860310889, ["test    r11b, r11b; jumptable 0000000000006558 case 0", "jnz     loc_6B20; jumptable 0000000000006B18 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_665F"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 159, 0, 0, 3, 2, 1, 10, -1, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_66ED"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.30266612999060816, ["add     i_0, 1"], ["add~i_0,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.13253981944684023, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_6663"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_64A0"], ["add~i_0,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437793, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 0000000000006558 case 63", "cmp     eax, 2", "jz      loc_6BF0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_6674"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.5060843822703411, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_6870; jumptable 0000000000006558 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.039729544473377544, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_6870; jumptable 0000000000006558 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_64A0"], ["add~rbx,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_6DA1"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_6E4F"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_6D47"], ["cmp~bytes,0", "jz~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000006468 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.0023000402507043875, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, aS+5; \"'\"", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_6DD0"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_6DB0"], ["test~r12b,r12b", "jz~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 0000000000006558 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_6695"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000006468 case 3", "jnz     loc_6F04"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_6AA2"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342419, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.00920016100281755, ["lea     rax, unk_B260", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.0023000402507043875, ["lea     rax, unk_B260; jumptable 0000000000006468 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408775, ["lea     rax, aS+5; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408775, ["lea     rax, unk_B260", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_6488"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_64B6"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_6E81"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_67ED"], ["jmp~FOO"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099304, ["lea     rsi, aS+5; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, aS+5; \"'\"", "cmp     rsi, rax", "jnz     short loc_69C6"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, unk_B260", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_6ECF"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_6EDC"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_6EDC"], ["jmp~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_6538"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_68C7"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169706, ["test    r11b, r11b", "jz      short loc_6538"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.0031043698026620293, ["mov     ebp, 9; jumptable 0000000000006558 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_6EDC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_6EC8"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453128, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_6AF8"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0031043698026620293, ["mov     ebp, 0Dh; jumptable 0000000000006558 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0031043698026620293, ["mov     ebp, 0Ah; jumptable 0000000000006558 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_6D70"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_6CAD"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_6DA1"], ["mov~r12d,r11d", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_68FA"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_68D3"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.0465971041397986, ["test    r11b, r11b", "jnz     loc_6798"], ["test~r11b,r11b", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011998, ["mov     ebp, 7; jumptable 0000000000006558 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011998, ["mov     ebp, 0Ch; jumptable 0000000000006558 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011998, ["mov     ebp, 0Bh; jumptable 0000000000006558 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_68F1"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_68E8"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381075, ["test    r11b, r11b; jumptable 0000000000006558 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_66ED"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254328, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_6D47"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_6948"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_67ED"], ["test~sil,sil", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_6D47"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_6911"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_6538"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_6926"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_6D3E"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_6D18"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_652F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.043264715465853996, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000006B18 case 0", "mov     rdx, rbx", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 0000000000006468 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_693E"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_6B3B"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951642, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.033719548425430776, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_6748"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572595, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_675A"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084872, ["cmp     buffersize, rbx", "jbe     short loc_69E8"], ["cmp~buffersize,rbx", "jbe~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_676C"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_6B6F"], ["cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_6B81"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_B262; jumptable 0000000000006468 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_B262; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_698D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, unk_B260", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [0, 0, 159, 0, 0, 1, 0, 0, 10, -1, 0.002245528384048306, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_6BAC"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.04272803940735629, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_67ED"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_65D6"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_65E8"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 19, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[31], [0, 2], [0, 32], [0, 4], [0, 183], [0, 41], [16, 28], [8, 6], [6], [10, 30], [9, 11], [9], [35, 31], [68, 133, 134, 12, 138, 76, 36, 15, 51, 117, 24, 132, 123, 124, 93, 31], [64, 36, 12, 76, 61, 63, 15, 26, 51, 117, 154, 123, 124, 93, 62, 31], [12, 31], [28], [39], [17, 150], [97], [19, 21], [168, 19], [19, 167], [122], [25, 23], [182, 23], [27, 23], [86, 23], [31], [49], [49, 29], [42, 74], [33, 31], [3, 31], [15, 31], [107, 31], [160, 31], [31], [120, 31], [49], [55, 39], [39], [73, 54], [42], [42, 45], [42, 171], [42], [97], [99, 47, 176, 67, 53, 89, 94], [65, 153], [77, 103], [113, 50], [58, 90], [100, 52], [73, 59], [56, 30], [57, 30], [179, 30], [97], [41, 69], [59], [59], [59], [59], [59], [], [48, 156], [97], [72, 154], [70, 71], [71], [73], [74, 75], [79], [73, 43], [104], [1, 5], [103], [82], [82, 78], [51, 13], [51, 14], [104], [130], [105, 83], [79], [79], [149], [126, 87], [97], [97], [40, 55], [114, 91], [34, 95], [96, 101], [34], [98, 102], [104], [97], [97], [97], [97], [98], [125], [106, 92], [140, 111], [92], [41], [20, 109], [20], [112, 119], [128, 110], [128], [38], [80, 116], [38], [80, 121], [122], [128, 119], [128, 118], [129], [81, 146], [131, 127], [122], [122], [180, 84], [180, 125], [41, 131], [130], [141], [129, 115], [74, 60], [131], [131], [131], [137, 139], [85, 135], [139], [74, 178], [141], [126, 143], [136, 142], [144, 41], [88, 126], [145, 147], [147], [80, 148], [157, 151], [152, 41], [18, 150], [149, 126], [157], [155, 159], [], [41, 158], [159], [], [162, 165], [161, 44], [80], [41, 163], [44], [165], [164, 166], [166], [136], [169, 170], [181, 22], [167], [170], [172, 37], [173, 174], [37], [174], [46, 175], [46], [177, 108], [108], [60], [10], [130], [22], [41, 86], [184, 41], [185, 186], [186], [187, 7], [7]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_6FDF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [1, 0, 11, 1, 1, 18, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_70D3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, -1, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_708B"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, -1, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, -1, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_7051"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, -1, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_6FBD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, -1, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_70A8"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, -1, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[9, 3], [0, 10], [], [2, 6], [2], [3], [4, 7], [4], [5], [8, 11], [], [5]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[3, 0, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_72EB"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_7379"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_7351"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_7340"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_7394"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_7497"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 5, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_7513"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 1, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_75C6"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 5, 1, 1, 12, 2, 2, 0, 0, 0.0, ["push    rbx", "lea     rsi, filename; \"/\"", "mov     rbx, root_d_i", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "test    eax, eax", "jnz     short loc_7678"], ["push~rbx", "lea~rsi,<TAG>", "mov~rbx,root_d_i", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_767C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_7659"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 0, 0, 2, 0.07500000000000001, ["mov     rax, [rsp+0A8h+statbuf.st_ino]", "mov     [root_d_i], rax", "mov     rax, [rsp+0A8h+statbuf.st_dev]", "mov     [root_d_i+8], rax", "mov     rax, root_d_i"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[root_d_i+0],rax", "mov~rax,root_d_i"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     root_d_i", "retn"], ["add~rsp,0", "pop~root_d_i", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 5, 1, 6, 6, 1, 26, 0.075, 2, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_7753"], ["cmp~len,0", "ja~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_7730"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_776D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_7705"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 1, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_775E"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,<STR>", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 3, 3, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_7705"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 3, 2, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    free", "mov     [r12], r13d", "jmp     short loc_7705"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[3, 6], [0, 8], [], [2, 7], [3], [1, 4], [4], [], [9, 3], [3]], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3583", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3582, 0", "jz      short loc_7798"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3582, 1", "setz    al", "mov     cs:can_write_3583, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_77D5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    malloc", "test    p, p", "jnz     short loc_77D3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 7, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_77F5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_77F3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_7830"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_7844"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[5], [0, 3], [5], [2, 4], [], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_7883"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[1], []], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 4, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.3333333333333333, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_7964"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 6, 1, 1, 1, 0, 0.0, ["mov     rdx, [rsp+28h+response]", "mov     byte ptr [rdx+rax-1], 0", "mov     rdi, [rsp+28h+response]; response", "call    _rpmatch", "test    eax, eax", "setnle  bl"], ["mov~rdx,[rsp+0]", "mov~[yte ptr [rdx+0],0", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnle~bl"]], [3, 1, 4, 1, 1, 15, 3, 2, 0, 0, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_7942"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]]], "func_feature": [4, 5, 6, 1, 5, 5, 2, 31, 0.06667, 2, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "yesno", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.03787878787878788, ["and     ebx, 1", "jz      short loc_797D"], ["and~ebx,0", "jz~FOO"]], [0, 0, 11, 0, 1, 5, 1, 2, 1, 4, 0.07575757575757576, ["mov     ebx, esi", "mov     rbp, st", "call    _geteuid", "test    eax, eax", "jz      short loc_79C0"], ["mov~ebx,esi", "mov~rbp,st", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.1893939393939394, ["cmp     [st+1Ch], eax", "jnz     short loc_79D0"], ["cmp~[st+0],eax", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 3, 3, 0.06818181818181818, ["mov     ebx, [st+18h]", "test    bl, 49h", "jz      short loc_79A1"], ["mov~ebx,[st+0]", "test~bl,0", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 2, 3, 0.09090909090909091, ["mov     ebx, [st+18h]"], ["mov~ebx,[st+0]"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.045454545454545456, ["shr     ebx, 6"], ["shr~ebx,0"]], [1, 0, 0, 0, 0, 5, 0, 0, 1, -1, 0.0, ["pop     rbx", "mov     eax, 1", "pop     rbp", "pop     mode", "retn"], ["pop~rbx", "mov~eax,0", "pop~rbp", "pop~mode", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, -1, 0.007575757575757576, ["jmp     short loc_797D"], ["jmp~FOO"]], [1, 0, 12, 0, 0, 6, 1, 1, 0, 5, 0.0, ["push    r12", "mov     r12d, esi", "push    rbp", "and     r12d, 7", "push    rbx", "jnz     short loc_7990"], ["push~r12", "mov~r12d,esi", "push~rbp", "and~r12d,0", "push~rbx", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 0, 0.003787878787878788, ["shr     ebx, 3", "jmp     short loc_79A9"], ["shr~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 4, 1, 0.09090909090909091, ["call    _getegid", "mov     edi, [st+20h]; gid", "cmp     edi, eax", "jz      short loc_79E5"], ["call~FOO", "mov~edi,[st+0]", "cmp~edi,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 5, 1, 0.003787878787878788, ["call    _group_member", "test    eax, eax", "jz      short loc_79A9"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 1, 0, 5, -1, 0.0, ["not     ebx", "test    ebx, r12d", "setz    al", "pop     rbx", "pop     st", "pop     mode", "retn"], ["not~ebx", "test~ebx,r12d", "setz~al", "pop~rbx", "pop~st", "pop~mode", "retn"]]], "func_feature": [3, 6, 12, 0, 13, 18, 1, 42, 0.0472, 0, 0], "succs": [[3, 6], [0, 4], [10, 5], [2, 7], [2], [12], [], [6], [1, 6], [12], [9, 11], [9, 12], []], "fname": "euidaccess_stat", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_7A17"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_7A17"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _strndup", "test    s, s", "jz      short loc_7A43"], ["sub~rsp,0", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 2, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xstrndup", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_7AA8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_7A7F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_7AB8"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_7A88"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 5, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 344, 2, 0, 8, 0, 1, 0, 0, 0.031188369825140186, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8498"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_B6E0", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_90B0"], ["test~length,length", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708451, ["cmp     eax, 2", "jz      loc_8480"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_8838"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_8811"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_8813"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_90B0"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8CFA"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_7DA3"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8D80"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_8019"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_903E"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_8D80"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_8DD3"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_8838"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.1274049060342461, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_818D"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [5, 0, 344, 3, 1, 17, 1, 2, 34, 30, 0.02376700746435112, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_8046"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.02644748240249408, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_8046"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166662, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_8046"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.023770897848876742, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_8046"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_8F97"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_9050"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_9050"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.1826859733482724, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_806B"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.19359072117354764, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_8055"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_8C10; jumptable 0000000000007FDE default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_8CFA"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_9060"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.18305945026273046, ["cmp     ecx, eax", "jl      loc_8460"], ["cmp~ecx,eax", "jl~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_8C10; jumptable 0000000000007FDE default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_8F49"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486252, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_8475"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_907E"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_907E"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396358, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.18250312527556872, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_807F"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_8BFD"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_8CFA"], ["cmp~allocated,r12", "jnb~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_8CC6"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_9099"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_88E8"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_8891"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_8891"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_8891"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.01886577135950784, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_8660"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_8CC6"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_8ED1"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_8CFA"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.015540789384956143, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_7FA0"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.010020333743120502, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_88EE"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_90B8"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_90C3"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_88E8"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_8C10; jumptable 0000000000007FDE default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_80D8"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198768, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_7F92"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_90C8"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759969, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_88EE"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.027746222436625636, ["jmp     loc_88CB"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.0025754345559515102, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.002554685838481609, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_8700"], ["jns~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_88EE"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_81F0"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434865, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.01904472904768574, ["test    r12b, r12b", "jnz     loc_81F0"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_80EC"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.21632612834119191, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549117, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_8BB8"], ["cmp~r12,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_902C"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.12736989257351497, ["test    eax, eax", "jns     loc_8460"], ["test~eax,eax", "jns~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04304671573738348, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8360"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042961, ["cmp     eax, 2", "jz      loc_83A8"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105393, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_813E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105393, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_813E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105393, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_813E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408213, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02367733410103584, ["cmp     eax, 2", "jnz     loc_8147"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_8C18"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_8913"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [1, 0, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_8E10"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_8151"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.13897879999792506, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_84A8"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_8A00"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_898D"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_898D"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_8A00"], ["cmp~rdx,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_8660"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_8FD5"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_89E3"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_7FA0"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_89CC"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_8A00"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301049, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_89EB"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.018488404060524006, ["mov     rdi, rbx; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_8C10; jumptable 0000000000007FDE default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_8A00"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_8A00"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_8510"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_8C0E"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_8C4F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_8C4F"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_8C4F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_8510"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_8A40"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_8D5F"], ["test~rsi,rsi", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_7FA0"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_7DC8"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_7DA3"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_87C0"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.052272503280890996, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8AF0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02692599969914365, ["cmp     eax, 2", "jnz     loc_86D0"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_84E4"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_8A40"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_8A40"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_8A40"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_8A40"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    free", "jmp     loc_84E4"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8A80"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_8A80"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_8BB0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8BB0"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_84DF"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_7D2B"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_8AD0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8AD0"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.051214318689926, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8AE0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02577833626408971, ["cmp     eax, 2", "jnz     loc_8690"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.02343632477967455, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_82F5"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585593, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_83BB"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_8B22"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_8BF0"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_8B70"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_8B36"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_8B22"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_8E21"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8B53"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    free"], ["call~FOO"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_7C62"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.05123701259965855, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04609988951307934, ["mov     rax, [dp+50h]; jumptable 0000000000007FDE case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_8360"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8360"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8360"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.022912743862270036, ["push    [rbp+var_388]", "push    arg", "jmp     loc_8368"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_7C62"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_7C90"], ["cmp~rdi,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_8B80"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_85E1"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8B92"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_85E1"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199638, ["mov     result_0, rcx", "jmp     loc_7F92"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_8BA8"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8BA8"], ["test~dl,dl", "jz~FOO"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_7BB8"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_7BA2"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.004617108354989774, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_84DF"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547248, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_83B4"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_8501"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_7E09"], ["test~al,<STR>", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_7DFC"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.04840675785727994, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_7CC0"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.5391320811482341, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_7BF5"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020722, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_8658"], ["cmp~allocated,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 0000000000007FDE default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_8C10; jumptable 0000000000007FDE default case"], ["cmp~rdx,0", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_8C10; jumptable 0000000000007FDE default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_8C10; jumptable 0000000000007FDE default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_8C10; jumptable 0000000000007FDE default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_8C10; jumptable 0000000000007FDE default case"], ["cmp~rdx,0", "jnz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_8C10; jumptable 0000000000007FDE default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_8C10; jumptable 0000000000007FDE default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_8C10; jumptable 0000000000007FDE default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_7C23"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 14, 26, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.00026324935289937385, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_8680"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_7C23"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_8DF7"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_7C54"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_7C62"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_7C62"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_8DE4"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.23597775737487228, ["lea     r12, [rcx+length]", "jmp     short loc_84E4"], ["lea~r12,<TAG>", "jmp~FOO"]], [1, 1, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,<STR>", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_8C87"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_8C9A"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_7FA0"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_84B8"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_7D2B"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_8630"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_85C0"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8642"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_8FF0"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_8FF0"], ["test~r13b,r13b", "jnz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_84DF"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_84DF"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8520"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_7CDD"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_7CDD"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_8520"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000085BC cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_84E4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000085BC case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_84E4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000085BC case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_84E4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000085BC case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_84E4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_8D1F"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_7D3A"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_8D1F"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_7FA0"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_8680"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_8D33"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_7D2B"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_7D2B"], ["mov~r14,allocated", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.027246956422506134, ["test    dl, dl", "jnz     loc_8730"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8D50"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.027512799365089245, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_85A0"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8E51"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_7D96"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_8E51"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_8EEA"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_8F3A"], ["mov~rcx,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_B728", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_7DD5"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_7DE2"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_7DEF"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_8FB9"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_8680"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566827, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_7E46"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_7EFF"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_8618"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8E3E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 22, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.01388089198736403, ["mov     result_0, memory", "jmp     loc_7FA0"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_7E83"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.008709274157991111, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_7FA0"], ["cmp~allocated,0", "jz~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_7EBF"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_9058"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9058"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_7EB6"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_8780"], ["test~ah,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445137, ["test    ah, 6", "jz      short loc_7EBF"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 27, 9, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824855, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_86E8"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_7F92"], ["cmp~allocated,rax", "jnb~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806069, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_7EBF"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_7F60"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.0026532422464636404, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746903, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_8F06"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_8700"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_7F34"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215123, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_8F44"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_8F37"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_7F73"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_8F21"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.03050450506528065, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8730"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [1, 0, 344, 1, 0, 7, 0, 1, 19, 41, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_8F74"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_8F58"], ["cmp~rdi,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318204, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_7F92"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_8FA6"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_8FAB"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_8F85"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_8F92"], ["mov~rax,digitp", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_8FDE"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[177, 4], [0, 91, 138, 173, 211, 89, 155, 92, 93], [8, 59], [2, 220], [10, 199], [20, 7], [9, 5], [12], [59, 11], [12], [15], [276], [135], [17, 294], [220, 13], [22], [15], [19, 220], [17, 292], [294], [37, 54], [20, 6], [101, 30], [22], [22], [22], [22], [55], [354, 27], [355, 27], [32, 35], [101, 30], [35, 211], [276, 39], [33, 47], [40, 45], [211, 46], [36, 206], [41, 220], [220, 38], [248, 44], [49, 220], [41, 255], [41], [56, 160], [248, 44], [52, 53], [51, 276], [260], [48, 220], [57, 220], [50, 42], [80, 58], [52], [52], [52], [320, 60], [43, 260], [67, 63], [276], [61, 215], [220, 69], [83], [333, 62], [], [64, 250], [72, 80], [66, 211], [74, 220], [68, 79], [75, 358], [331, 70], [83, 76], [72], [79], [220, 77], [220, 78], [228, 236], [83], [81, 119], [83], [84, 119], [81, 115], [220, 85], [220, 318], [200, 87], [18, 14], [96], [106, 45], [90, 172], [195, 94], [90, 170], [90, 174], [90, 175], [31], [189, 94], [241, 98], [96, 201], [104, 100], [31], [102], [88, 253], [120, 105], [102], [102], [120, 107], [320, 108], [121, 109], [220, 110], [114, 111], [82, 215], [112], [112, 113], [114], [120, 116], [119], [117], [117, 118], [120], [123, 220], [130, 211], [120, 359], [120], [129, 279], [210, 218], [124], [124, 127], [124], [124], [132, 279], [131, 140], [133, 141], [215], [220, 134], [140], [301, 302], [137, 135], [21, 135], [139, 159], [16, 23], [208, 145], [140, 86], [140], [140], [140], [208], [220, 149], [146, 148], [146, 311], [196, 150], [196, 151], [264], [285], [152, 154], [152, 286], [156, 157], [26, 158], [24], [24], [25], [161, 163], [163, 164], [178, 166], [165, 167], [163], [167], [169, 315], [168, 171], [171], [176, 242], [172], [65], [99], [172, 95], [172], [172], [242, 179], [99], [65], [184, 194], [220, 182], [186, 180], [185, 147], [242, 187], [242, 183], [220, 188], [185, 305], [193], [147], [195], [358], [192, 190], [352, 190], [202, 197], [193], [198], [264], [202], [25], [198], [97, 220], [220], [277, 207], [312, 310], [203, 205], [203], [349], [256, 209], [277, 207], [220, 287], [211], [], [211, 293], [211, 335], [346, 211], [1, 211], [258, 211], [211, 300], [211, 219], [211, 247], [237, 238], [291, 220], [220, 262], [153, 220], [268, 220], [220, 269], [220], [220, 334], [220, 229], [220, 343], [220, 191], [220, 271], [220, 142], [323, 220], [220, 342], [344, 220], [220], [238, 239], [240, 242], [238], [242], [128, 309], [243, 244], [244], [65], [65], [65], [249, 251], [208], [103], [], [103], [34, 254], [215], [216, 212], [260], [257, 285], [224, 259], [265, 222], [225, 261], [3, 263], [267], [264], [3, 231], [208], [264, 181], [264], [270, 223], [225, 267], [267], [280, 223], [276], [208], [208], [208], [208], [283, 278], [252], [281, 283], [215], [282, 239], [283], [285], [289, 284], [289], [252], [285], [285], [221, 230], [290, 245], [245], [358], [294], [217, 295], [296, 233], [136, 137], [232, 233], [337, 73], [297], [297], [272, 273, 274, 275], [302], [304, 303], [304], [306, 307], [147], [307], [204, 308], [204], [125, 126], [312], [266, 239], [317, 319], [340], [313, 213], [316, 246], [246], [319], [215], [321, 322], [226, 215], [322], [314, 325], [144, 324], [144, 143], [329, 326], [332, 327], [328, 314], [329], [314], [339, 227], [330, 358], [314], [337], [336, 347], [340], [228], [338, 341], [341], [348, 228], [214, 71], [234, 298], [299, 235], [288, 345], [299, 235], [230], [71], [288, 230], [347], [353, 351], [349, 55], [353], [358], [28, 357], [356, 29], [354], [350], [350], [215], [122, 359]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [2, 1, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_9120"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_9128"], ["xor~eax,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 34, 0, 0, 3, 0, 1, 0, 0, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009176 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_930B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_91D1"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009176 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_92FA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000009176 case 11", "cmp     r11d, 0AFh", "ja      loc_932D"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9217"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000009176 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_91A0"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9292"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_91A0"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009176 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_92CA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009176 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_92EC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_91F5"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009176 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_931C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_9168"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_91A0"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_91A0"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_91A0"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_91A0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_91A0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_91AD"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000009176 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_91B0; jumptable 0000000000009176 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9239"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_92B7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009176 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_92DB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_B750", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_925F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[6, 7], [0, 3, 5, 8, 12, 13, 15, 25, 30], [17], [2, 31], [9], [10, 4], [11], [11], [16], [16], [9], [16], [27, 28], [24, 29], [18], [35, 14], [26, 22], [16], [16], [16], [16], [16], [], [33, 22], [21], [], [25, 1], [19], [19], [21], [32, 34], [17], [20], [26], [20], [18]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[1, 0, 184, 1, 0, 5, 0, 1, 0, 0, 0.0051410105757931845, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_9DB1"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["cmp~bl,0", "ja~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_9DAE"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_97F8"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_9578"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.01063454759106933, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_98E0"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_9C0F"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233843, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_9C7E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_980E"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_9C4A"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_9C4A"], ["test~r9,r9", "js~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_9578"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210341, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_94E6"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_9CF7"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_9E03"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.13125734430082256, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_94EF"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056337, ["cmp     eax, 0Fh; jumptable 0000000000009565 case 73", "mov     ecx, 16h", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [0, 0, 184, 1, 0, 5, 0, 1, 22, 22, 0.4343419506462985, ["lea     rsi, off_B7CC", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_9578"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.013513513513513478, ["cmp     eax, 0Fh; jumptable 0000000000009565 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_9831"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9578"], ["test~al,0", "jnz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_9C25"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_987A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["cmp~dil,0", "ja~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_9BB9"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_9838"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_9476"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_93F0"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_9C5B"], ["test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_9476"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 0000000000009565 default case"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.43827849588719153, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_9B0D; jumptable 0000000000009565 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.0445945945945946, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_9B0D; jumptable 0000000000009565 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_9B0D; jumptable 0000000000009565 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.0445945945945946, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_9B0D; jumptable 0000000000009565 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_9490"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_9450"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_94A0"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_9D90"], ["cmp~bl,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_94B0"], ["cmp~bl,<STR>", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_93B9"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_9C4A"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_94C0"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_9578"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_9578"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_94D0"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_93B9"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 0000000000009565 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_9665"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_9877"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_9856"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.032961222091656875, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_9470"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_9470"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_9470"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_9470"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_9470"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752057, ["mov     ecx, 11h; jumptable 0000000000009565 case 75", "jmp     loc_9578"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_93DE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.0051410105757931845, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_97D6"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_9476"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_994A"], ["cmp~edi,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752057, ["mov     ecx, 0Eh; jumptable 0000000000009565 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_9578"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_9D6F"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_9914"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_9955"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_966E"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752057, ["xor     ecx, ecx; jumptable 0000000000009565 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_9578"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_9BF2"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752057, ["xor     ecx, ecx; jumptable 0000000000009565 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_9578"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_9695"], ["cmp~r11b,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_9C90"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056337, ["cmp     eax, 0Fh; jumptable 0000000000009565 cases 63,68", "mov     ecx, 9", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9578"], ["test~al,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_992E"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_9731"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.0445945945945946, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_96BA"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.0051410105757931845, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_999A"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_98E7"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 0, 12, 8, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_98BF"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_9906"], ["jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_9724"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_9D09"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_9578"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_9578"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_9787"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802584, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_94E6"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_9B2C"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_9527"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386603, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_94EF"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 17, 31, 0.030258519388954172, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_94EF"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_9C4A"], ["test~memory,memory", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_9540"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.461192714453584, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_9500"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_97E3"], ["mov~[a+0],memory", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_9D72"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.4472972972972973, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_9520"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.4427144535840188, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_9520"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 15, -1, 0.024118683901292598, ["test    rax, rax", "jz      short loc_9B1E"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_9D2A"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_9520"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.443096357226792, ["cmp     bl, 74h ; 't'", "jnz     short loc_9548"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371328, ["add     eax, 8"], ["add~eax,0"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975325, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_9523"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_9523"], ["or~eax,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.02743830787309048, ["test    memory, memory", "jz      loc_9C4A"], ["test~memory,memory", "jz~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824912, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_9920"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.0254406580493537, ["mov     [a+8], memory"], ["mov~[a+0],memory"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_9BCB"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_93DE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_975E"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.023824911868390128, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_95DB; jumptable 0000000000009565 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_9748"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_9D48"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359576, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_9958"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_9B50"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [2, 0, 184, 0, 0, 3, 0, 0, 23, 28, 0.008578143360752057, ["mov     ecx, 10h; jumptable 0000000000009565 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_9997"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775558, ["cmp     r11b, 9", "jbe     short loc_9975"], ["cmp~r11b,0", "jbe~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056337, ["cmp     eax, 0Fh; jumptable 0000000000009565 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_9578"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9578"], ["test~al,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_97C7"], ["cmp~dil,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_9587"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_95C7"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_9594"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_93BC"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_93B0"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_9C4A"], ["test~memory,memory", "jz~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_95B0"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_9B41"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_9DED"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.0445945945945946, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_97D6"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[181], [0, 41], [174], [2, 174], [8, 4], [4], [17, 146], [146, 6], [13], [116], [112, 9], [18, 130], [121, 11], [21, 85], [13, 5], [61, 53], [53, 15], [146], [115], [123], [19, 119], [120], [146, 28], [98, 68, 22, 41, 162, 79, 86, 25, 92, 158, 95], [146], [24, 146], [34], [26], [146, 91], [177], [33, 29], [93], [41, 31], [177], [40, 34], [27, 55], [176, 35], [65, 81], [37, 39], [37], [56, 55], [130], [41, 23], [41, 99], [41, 84], [104, 41], [41, 167], [41, 106], [41, 83], [184, 41], [38, 111], [30, 38], [20, 38], [38], [57, 74], [73, 54], [69], [75, 59], [49, 3], [76, 62], [176], [60, 53], [66, 77], [146], [146, 63], [81], [90, 71], [176], [16, 67], [80, 78], [44, 69], [72], [55], [72], [72], [72], [72], [72], [80], [146], [93], [185], [81, 173], [97], [55], [122, 132], [146], [154, 94], [102, 87], [152, 43], [89, 108], [64, 146], [146], [32, 70], [127], [146], [43, 159], [52, 14], [146, 100], [103], [105, 146], [144], [101, 150], [50, 148], [103], [114, 146], [133], [10, 109], [115, 107], [116], [143], [138, 110], [10], [146], [113, 146], [120, 88], [115], [147], [147, 117], [123], [125], [120, 88], [120], [53, 126], [128, 142], [124, 141], [14], [165, 127], [129, 139], [139, 134], [118, 135], [130], [130], [161, 47], [136, 139], [118], [137, 42], [139], [143], [140], [125], [140], [140], [145, 53], [144, 150], [148], [164, 46], [185], [12, 149], [153], [122], [131, 68], [156], [153, 155], [48, 97], [12], [96, 156], [170, 51], [146], [160], [168, 169], [160, 45], [146, 163], [146, 7], [157], [154, 166], [3], [157], [169], [133], [180, 172], [170], [178], [175], [181], [36, 183], [175], [171, 53], [178, 179], [180], [182, 151], [1, 58], [68], [185], [97], []], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_9E86"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_9E70"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn group_member:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "group_member", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _obstack_begin:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rewinddir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strndup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _setjmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn obstack_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "obstack_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getegid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getegid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _obstack_newchunk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_obstack_newchunk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __longjmp_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__longjmp_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn euidaccess:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
