{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_31EA"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_21EC90", "jmp     cs:qword_21EC98"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 99, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_31F0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 44, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localtime_r_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "localtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswcntrl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcswidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbstowcs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbstowcs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 85, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 43, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:snprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "snprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gmtime_r_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gmtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fnmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getcwd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getcwd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strspn_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_setjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 38, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:signal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tzset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "tzset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tcgetpgrp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcwidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcoll_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mktime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpncpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:timegm_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "timegm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strftime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unsetenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "unsetenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcstombs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcstombs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gethostname_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gethostname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:freefun"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 54, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chunkfun"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_38B0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_38B0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3900"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3900"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3933"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_3948"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [p]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_ino_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "movzx   eax, al", "jmp     short loc_3976"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_397A"], ["mov~eax,0", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]]], "func_feature": [0, 1, 2, 0, 3, 3, 0, 11, 0.0, 0, 0], "succs": [[2], [0, 2], []], "fname": "dev_ino_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_399A"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     cs:interrupt_signal, edi"], ["mov~<TAG>,edi"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 5, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "sighandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_39B5"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 1, 0, 3, 0, 0, 0, 1, 0.0, ["mov     eax, cs:stop_signal_count", "add     eax, 1", "mov     cs:stop_signal_count, eax"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 7, 0.0, 2, 1], "succs": [[1, 2], [], [1]], "fname": "stophandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 0, 0, 7, 2, 0, 0, 0, 0.0, ["lea     eax, [err-16h]", "test    eax, 0FFFFFFEFh", "setz    al", "cmp     edi, 5Fh ; '_'", "setz    dl", "or      eax, edx", "retn"], ["lea~eax,[err-16h]+0]", "test~eax,0", "setz~al", "cmp~edi,0", "setz~dl", "or~eax,edx", "retn"]]], "func_feature": [0, 2, 0, 0, 1, 0, 3, 7, 0.0, 0, 0], "succs": [[]], "fname": "errno_unsupported", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["cmp     eax, 9", "jz      short loc_39F5"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     eax, [f+0A8h]", "cmp     eax, 3", "jz      short loc_39F5"], ["mov~eax,[f+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.125, ["mov     eax, 1", "jmp     short loc_39F1"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 1, 0, 2, -1, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]], [2, 0, 1, 0, 0, 5, 1, 0, 2, -1, 0.041666666666666664, ["mov     eax, [f+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    al", "movzx   eax, al"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "setz~al", "movzx~eax,al"]]], "func_feature": [0, 2, 3, 0, 5, 6, 52, 14, 0.05, 0, 0], "succs": [[2, 4], [0, 2], [3], [], [3]], "fname": "is_linked_directory", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 2, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["mov     [rdx], rax", "add     rax, 0C8h", "add     rdx, 8", "cmp     rax, rcx", "jnz     short loc_3A22"], ["mov~<TAG>,rax", "add~rax,0", "add~rdx,0", "cmp~rax,rcx", "jnz~FOO"]], [0, 0, 2, 0, 0, 5, 0, 0, 1, 2, 0.16666666666666666, ["mov     rax, cs:cwd_file", "mov     rdx, cs:sorted_file", "lea     rcx, [rcx+rcx*4]", "lea     rcx, [rcx+rcx*4]", "lea     rcx, [rax+rcx*8]"], ["mov~rax,<TAG>", "mov~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rcx,<TAG>", "lea~rcx,<TAG>"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.0, ["mov     rcx, cs:cwd_n_used", "test    rcx, rcx", "jz      short locret_3A34"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]]], "func_feature": [0, 1, 2, 0, 4, 5, 2, 14, 0.08333, 3, 2], "succs": [[0, 2], [0], [], [1, 2]], "fname": "initialize_ordering_vector", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 1, 4, 0, 0, 3, 0, 1, 7, -1, 0.05303030303030303, ["mov     eax, 7Ch ; '|'", "cmp     esi, 1000h", "jz      short locret_3B01"], ["mov~eax,0", "cmp~esi,<STR>", "jz~FOO"]], [3, 0, 0, 0, 0, 6, 2, 0, 3, -1, 0.0, ["and     esi, 49h", "cmp     esi, 1", "sbb     eax, eax", "not     eax", "and     eax, 2Ah", "retn"], ["and~esi,0", "cmp~esi,0", "sbb~eax,eax", "not~eax", "and~eax,0", "retn"]], [2, 0, 2, 0, 0, 3, 0, 1, 2, -1, 0.008658008658008658, ["mov     eax, 0", "cmp     cs:indicator_style_0, 3", "jz      short loc_3A75"], ["mov~eax,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 8, 0, 0.0, ["rep retn"], ["retn"]], [2, 0, 4, 0, 0, 3, 0, 1, 7, 1, 0.05303030303030303, ["mov     eax, 7Ch ; '|'", "cmp     edx, 1", "jz      short locret_3B03"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 15, 0, 0, 4, 1, 0, 2, 6, 0.045454545454545456, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    cl"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "setz~cl"]], [2, 0, 18, 0, 0, 4, 1, 1, 1, 7, 0.023809523809523808, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_3A83"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 3, 5, 0.1471861471861472, ["mov     eax, 2Fh ; '/'", "test    cl, cl", "jnz     short locret_3A57"], ["mov~eax,0", "test~cl,cl", "jnz~FOO"]], [2, 0, 15, 0, 0, 6, 1, 1, 2, 6, 0.047619047619047616, ["cmp     edx, 3", "setz    cl", "cmp     edx, 9", "setz    al", "or      ecx, eax", "jmp     short loc_3A92"], ["cmp~edx,0", "setz~cl", "cmp~edx,0", "setz~al", "or~ecx,eax", "jmp~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 4, 4, 0.15584415584415584, ["mov     eax, 0", "cmp     cs:indicator_style_0, 1", "jz      short locret_3A57"], ["mov~eax,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 5, 3, 0.16666666666666666, ["test    dil, dil", "jz      short loc_3AE3"], ["test~dil,dil", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 0, 8, 0.0, ["test    dil, dil", "jz      short loc_3A59"], ["test~dil,dil", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [2, 1, 6, 0, 0, 4, 1, 1, 6, -1, 0.07900432900432901, ["and     esi, 0F000h", "mov     eax, 40h ; '@'", "cmp     esi, 0A000h", "jz      short locret_3AE1"], ["and~esi,0", "mov~eax,0", "cmp~esi,<STR>", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 8, -1, 0.0183982683982684, ["cmp     esi, 0C000h", "setz    al"], ["cmp~esi,0", "setz~al"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 3, 1, 1, 9, -1, 0.015151515151515152, ["neg     eax", "and     eax, 3Dh", "jmp     locret_3A57"], ["neg~eax", "and~eax,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 8, -1, 0.0183982683982684, ["cmp     edx, 7", "setz    al", "jmp     short loc_3AD7"], ["cmp~edx,0", "setz~al", "jmp~FOO"]], [2, 0, 17, 0, 0, 3, 0, 1, 1, 7, 0.01948051948051948, ["mov     eax, 0", "cmp     edx, 5", "jz      short locret_3A73"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 6, 2, 0.07900432900432901, ["mov     eax, 40h ; '@'", "cmp     edx, 6", "jz      short locret_3AFF"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 10, 14, 0, 23, 27, 2, 63, 0.04047, 1, 0], "succs": [[], [0, 15], [], [16, 2], [], [18, 4], [8], [3, 6], [16, 10], [8], [16, 11], [20, 14], [19, 7], [], [1, 13], [17], [], [16], [17], [9, 21], [5, 22], [], []], "fname": "get_type_indicator", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[13, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0.0, ["mov     cs:cwd_n_used, 0", "mov     cs:cwd_some_quoted, 0", "mov     cs:any_has_acl, 0", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, cs:cwd_n_used", "test    r12, r12", "jz      short loc_3B49"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 2, 1, 3, 11, 0, 4, 2, 0, 0.16666666666666666, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+i*8]", "mov     rdi, [f+0]; ptr", "call    free", "mov     rdi, [f+8]; ptr", "call    free", "mov     rdi, [f+10h]; ptr", "call    free", "add     i, 1", "cmp     i, r12", "jnz     short loc_3B1A"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "add~i,0", "cmp~i,r12", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["mov     ebx, 0"], ["mov~ebx,0"]]], "func_feature": [3, 1, 5, 0, 4, 5, 3, 35, 0.08333, 14, 1], "succs": [[], [0, 3], [0, 2], [2]], "fname": "clear_files", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    free", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 2], "succs": [[]], "fname": "dev_ino_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 49, 0, 0, 1, 0, 0, 0, 0, 3.865182436611008e-05, ["mov     r11d, 7; jumptable 0000000000003C9F case 97"], ["mov~r11d,0"]], [0, 0, 49, 1, 0, 4, 0, 1, 4, 9, 0.26794217687074845, ["movzx   eax, bpl", "movsxd  rax, dword ptr [r14+rax*4]", "add     rax, r14", "jmp     rax; switch jump"], ["movzx~eax,bpl", "movsxd~rax,<TAG>", "add~rax,r14", "jmp~rax"]], [2, 0, 49, 2, 0, 4, 0, 1, 5, 6, 0.00467687074829932, ["add     p, 1; jumptable 0000000000003D85 cases 0-9", "shl     r11d, 4", "lea     r11d, [r12+r11-30h]", "jmp     short loc_3D21"], ["add~p,0", "shl~r11d,0", "lea~r11d,[r12+0]", "jmp~FOO"]], [0, 0, 49, 1, 0, 4, 0, 1, 4, 7, 0.05612244897959184, ["movzx   ebp, bpl", "movsxd  rbp, dword ptr [r15+rbp*4]", "add     rbp, r15", "jmp     rbp; switch jump"], ["movzx~ebp,bpl", "movsxd~rbp,<TAG>", "add~rbp,r15", "jmp~rbp"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.004889455782312925, ["mov     eax, 5", "jmp     loc_3DFD"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 4, 7, 0.05505952380952381, ["test    dl, dl", "jz      short loc_3C5A"], ["test~dl,dl", "jz~FOO"]], [0, 1, 49, 0, 0, 4, 0, 1, 3, 7, 0.09204931972789115, ["movzx   r12d, byte ptr [p]; jumptable 0000000000003D33 case 3", "lea     ebp, [r12-30h]", "cmp     bpl, 36h ; '6'; switch 55 cases", "ja      short loc_3DBA; jumptable 0000000000003D85 default case"], ["movzx~r12d,<TAG>", "lea~ebp,[r12-30h]+0]", "cmp~bpl,<STR>", "ja~FOO"]], [1, 0, 49, 1, 0, 4, 0, 0, 5, 8, 0.22806122448979624, ["mov     [r10], r11b", "add     count, 1", "lea     r10, [r10+1]", "mov     eax, r13d"], ["mov~<TAG>,r11b", "add~count,0", "lea~r10,[r10+0]", "mov~eax,r13d"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 8; jumptable 0000000000003C9F case 98", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 1Bh; jumptable 0000000000003C9F case 101", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 0Ch; jumptable 0000000000003C9F case 102", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 0Ah; jumptable 0000000000003C9F case 110", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 0Dh; jumptable 0000000000003C9F case 114", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 9; jumptable 0000000000003C9F case 116", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 0Bh; jumptable 0000000000003C9F case 118", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 7Fh; jumptable 0000000000003C9F case 63", "jmp     short loc_3D06"], ["mov~r11d,0", "jmp~FOO"]], [0, 1, 49, 0, 0, 2, 0, 1, 5, 9, 3.865182436611008e-05, ["mov     r11d, 20h ; ' '; jumptable 0000000000003C9F case 95", "jmp     short loc_3D06"], ["mov~r11d,<STR>", "jmp~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 4, 9, 0.02231756338899197, ["mov     r11d, ebp; jumptable 0000000000003C9F default case", "jmp     short loc_3D06"], ["mov~r11d,ebp", "jmp~FOO"]], [1, 0, 49, 0, 0, 3, 0, 1, 3, 10, 0.30765306122448965, ["movzx   ebp, byte ptr [p]; jumptable 0000000000003D33 case 1", "cmp     bpl, 78h ; 'x'; switch 121 cases", "ja      short loc_3CFB; jumptable 0000000000003C9F default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [0, 0, 49, 1, 0, 4, 0, 1, 2, 4, 0.7946428571428571, ["mov     ebp, eax", "movsxd  rbp, dword ptr [r9+rbp*4]", "add     rbp, r9", "jmp     rbp; switch jump"], ["mov~ebp,eax", "movsxd~rbp,<TAG>", "add~rbp,r9", "jmp~rbp"]], [1, 0, 49, 1, 0, 1, 0, 0, 6, 7, 0.3293367346938772, ["add     p, 1"], ["add~p,0"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 8, 0.012925170068027203, ["mov     eax, 6; jumptable 0000000000003C9F case 0", "jmp     short loc_3D14"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 3, 0, 1, 5, 8, 0.012925170068027203, ["lea     r11d, [rbp-30h]; jumptable 0000000000003C9F cases 48-55", "mov     eax, 2", "jmp     short loc_3D14"], ["lea~r11d,[rbp-30h]+0]", "mov~eax,0", "jmp~FOO"]], [2, 0, 49, 0, 0, 3, 0, 1, 5, 8, 0.012925170068027203, ["mov     r11d, 0; jumptable 0000000000003C9F cases 88,120", "mov     eax, 3", "jmp     short loc_3D14"], ["mov~r11d,0", "mov~eax,0", "jmp~FOO"]], [5, 0, 49, 1, 0, 17, 0, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r8, [src]", "mov     r10, [dest]", "mov     eax, 0", "mov     ebx, 0", "mov     r11d, 0", "lea     r9, off_14E04", "mov     r13d, 0", "lea     r15, off_14E18", "lea     r14, off_14C20", "jmp     loc_3D21"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r8,<TAG>", "mov~r10,<TAG>", "mov~eax,0", "mov~ebx,0", "mov~r11d,0", "lea~r9,<TAG>", "mov~r13d,0", "lea~r15,<TAG>", "lea~r14,<TAG>", "jmp~FOO"]], [2, 0, 0, 1, 0, 13, 0, 0, 6, -1, 0.0, ["mov     [dest], q", "mov     [src], p", "mov     [output_count], count", "cmp     eax, 6", "setnz   al", "add     rsp, 8", "pop     count", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~<TAG>,q", "mov~<TAG>,p", "mov~<TAG>,count", "cmp~eax,0", "setnz~al", "add~rsp,0", "pop~count", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 49, 0, 0, 2, 0, 1, 7, 6, 0.36500850340136054, ["cmp     eax, 4", "ja      loc_3DFD"], ["cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.004889455782312925, ["mov     eax, 6"], ["mov~eax,0"]], [1, 0, 49, 0, 0, 2, 0, 1, 6, 0, 0.01398809523809524, ["mov     eax, 5", "jmp     loc_3D18"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 49, 2, 0, 4, 0, 1, 5, 6, 0.00467687074829932, ["add     p, 1; jumptable 0000000000003D85 cases 49-54", "shl     r11d, 4", "lea     r11d, [r12+r11-57h]", "jmp     loc_3D21"], ["add~p,0", "shl~r11d,0", "lea~r11d,[r12+0]", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 1, 5, 0.8129251700680272, ["cmp     eax, 4; switch 5 cases", "ja      loc_3E2F; jumptable 0000000000003D33 default case"], ["cmp~eax,0", "ja~FOO"]], [2, 0, 49, 1, 0, 3, 0, 1, 7, 6, 0.00977891156462585, ["add     p, 1", "mov     eax, 4", "jmp     loc_3D21"], ["add~p,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 49, 2, 0, 5, 0, 1, 5, 6, 0.07164115646258504, ["add     p, 1", "mov     [r10], bpl", "add     count, 1", "lea     r10, [r10+1]", "jmp     loc_3D21"], ["add~p,0", "mov~<TAG>,bpl", "add~count,0", "lea~r10,[r10+0]", "jmp~FOO"]], [2, 0, 49, 1, 0, 3, 0, 1, 6, 6, 0.03486394557823129, ["add     p, 1", "mov     eax, 1", "jmp     loc_3D21"], ["add~p,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 49, 1, 0, 5, 0, 1, 4, 6, 0.009991496598639455, ["mov     [r10], r11b", "add     count, 1", "lea     r10, [r10+1]", "mov     eax, r13d", "jmp     short loc_3D21"], ["mov~<TAG>,r11b", "add~count,0", "lea~r10,[r10+0]", "mov~eax,r13d", "jmp~FOO"]], [1, 0, 49, 1, 0, 3, 0, 1, 4, 6, 0.009991496598639455, ["add     p, 1", "lea     r11d, [rbp+r11*8-30h]", "jmp     short loc_3D21"], ["add~p,0", "lea~r11d,[rbp+0]", "jmp~FOO"]], [2, 0, 49, 2, 0, 4, 0, 1, 5, 6, 0.00467687074829932, ["add     p, 1; jumptable 0000000000003D85 cases 17-22", "shl     r11d, 4", "lea     r11d, [r12+r11-37h]", "jmp     loc_3D21"], ["add~p,0", "shl~r11d,0", "lea~r11d,[r12+0]", "jmp~FOO"]], [1, 0, 49, 1, 0, 5, 0, 1, 4, 6, 0.02317176870748299, ["mov     [r10], r11b; jumptable 0000000000003D85 default case", "add     count, 1", "lea     r10, [r10+1]", "mov     eax, r13d", "jmp     loc_3D21"], ["mov~<TAG>,r11b", "add~count,0", "lea~r10,[r10+0]", "mov~eax,r13d", "jmp~FOO"]], [3, 0, 49, 2, 0, 7, 1, 1, 4, 6, 0.018494897959183673, ["add     p, 1", "and     eax, 1Fh", "mov     [r10], al", "add     count, 1", "lea     r10, [r10+1]", "mov     eax, r13d", "jmp     loc_3D21"], ["add~p,0", "and~eax,0", "mov~<TAG>,al", "add~count,0", "lea~r10,[r10+0]", "mov~eax,r13d", "jmp~FOO"]], [2, 0, 49, 1, 0, 5, 0, 1, 5, 6, 0.01913265306122449, ["mov     byte ptr [r10], 7Fh", "add     count, 1", "lea     r10, [r10+1]", "mov     eax, r13d", "jmp     loc_3D21"], ["mov~<TAG>,0", "add~count,0", "lea~r10,[r10+0]", "mov~eax,r13d", "jmp~FOO"]], [1, 0, 49, 0, 0, 3, 0, 1, 3, 3, 0.20318877551020398, ["movzx   ebp, byte ptr [p]; jumptable 0000000000003D33 case 0", "cmp     bpl, 3Dh ; '='", "jz      short loc_3C7C"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 4, 7, 0.04230442176870748, ["cmp     al, 3Fh ; '?'", "jz      short loc_3E1B"], ["cmp~al,0", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 4, 2, 0.13027210884353732, ["cmp     bpl, 3Dh ; '='", "jle     short loc_3C47"], ["cmp~bpl,0", "jle~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 0000000000003D33 default case"], ["call~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 7, 0.07206632653061225, ["cmp     bpl, 5Ch ; '\\'", "jz      short loc_3C6E"], ["cmp~bpl,0", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 6, 7, 0.019345238095238096, ["cmp     bpl, 5Eh ; '^'", "jnz     short loc_3C5A"], ["cmp~bpl,0", "jnz~FOO"]], [1, 0, 49, 0, 0, 4, 0, 0, 3, 7, 0.03784013605442177, ["movzx   ebp, byte ptr [p]; jumptable 0000000000003D33 case 2", "lea     r12d, [rbp-30h]", "cmp     r12b, 7", "jbe     short loc_3D60"], ["movzx~ebp,<TAG>", "lea~r12d,[rbp-30h]+0]", "cmp~r12b,0", "jbe~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 5, 1, 0.040348639455782334, ["test    bpl, bpl", "jz      loc_3E34"], ["test~bpl,bpl", "jz~FOO"]], [0, 1, 49, 0, 0, 2, 0, 1, 6, 1, 0.00977891156462585, ["cmp     bpl, 3Ah ; ':'", "jz      loc_3E34"], ["cmp~bpl,<STR>", "jz~FOO"]], [1, 0, 49, 0, 0, 4, 0, 1, 3, 7, 0.078656462585034, ["movzx   eax, byte ptr [p]; jumptable 0000000000003D33 case 4", "lea     ebp, [rax-40h]", "cmp     bpl, 3Eh ; '>'", "ja      short loc_3DF4"], ["movzx~eax,<TAG>", "lea~ebp,[rax-40h]+0]", "cmp~bpl,0", "ja~FOO"]]], "func_feature": [1, 3, 44, 0, 50, 82, 3, 166, 0.08478, 3, 23], "succs": [[7], [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23], [30], [2, 36, 29, 37], [25], [32, 4], [3, 37], [20], [7], [7], [7], [7], [7], [7], [7], [7], [7], [7], [1, 17], [40, 49, 18, 6, 46], [26], [20], [20], [20], [30], [], [25, 30], [25], [26], [30], [19, 43], [30], [30], [30], [30], [30], [30], [30], [30], [30], [42, 5], [27, 39], [44, 47], [], [33, 45], [32, 31], [34, 35], [48, 28], [32, 28], [41, 38]], "fname": "get_funky_string", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0.17777777777777778, ["mov     rcx, [a+60h]", "mov     b_is_dir, [b+60h]", "cmp     rcx, rax", "jg      short loc_3EAB"], ["mov~rcx,[a+0]", "mov~b_is_dir,[b+0]", "cmp~rcx,rax", "jg~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_3E77"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_3E77"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_3E61"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_3EA4"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_3E70"], ["mov~edx,0", "jl~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [b+0]; b", "mov     rdi, [a]; a", "call    xstrcoll", "mov     edx, eax", "jmp     short loc_3E70"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [b+68h]", "sub     edx, [a+68h]", "jnz     short loc_3E70"], ["mov~rdx,[b+0]", "sub~edx,[a+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_3E70"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, edx", "pop     a", "pop     b", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~a", "pop~b", "pop~a_is_dir", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_3E70"], ["mov~edx,0", "jmp~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[8, 5], [0, 2], [0, 9], [1, 4], [1, 10], [9, 7], [9], [9, 6], [9], [], [9]], "fname": "xstrcoll_df_atime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_3EEB"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_3EEB"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_3EE4"], ["mov~edx,0", "jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 1, 0.17777777777777778, ["mov     rcx, [b+80h]", "mov     b_is_dir, [a+80h]", "cmp     rcx, rax", "jg      short loc_3F2B"], ["mov~rcx,[b+0]", "mov~b_is_dir,[a+0]", "cmp~rcx,rax", "jg~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_3EE4"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_3F24"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, edx", "pop     b", "pop     a", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~b", "pop~a", "pop~a_is_dir", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [a+88h]", "sub     edx, [b+88h]", "jnz     short loc_3EE4"], ["mov~rdx,[a+0]", "sub~edx,[b+0]", "jnz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [a+0]; b", "mov     rdi, [b]; a", "call    xstrcoll", "mov     edx, eax", "jmp     short loc_3EE4"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_3EE4"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_3ED5"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[3, 6], [0, 3], [6, 7], [9, 2], [6], [1, 4], [], [8, 6], [6], [6], [1, 5]], "fname": "rev_xstrcoll_df_ctime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_3F6B"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_3F6B"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_3F64"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 1, 0.17777777777777778, ["mov     rcx, [b+70h]", "mov     b_is_dir, [a+70h]", "cmp     rcx, rax", "jg      short loc_3F9F"], ["mov~rcx,[b+0]", "mov~b_is_dir,[a+0]", "cmp~rcx,rax", "jg~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [a+0]; b", "mov     rdi, [b]; a", "call    xstrcoll", "mov     edx, eax", "jmp     short loc_3F64"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [a+78h]", "sub     edx, [b+78h]", "jnz     short loc_3F64"], ["mov~rdx,[a+0]", "sub~edx,[b+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_3F64"], ["mov~edx,0", "jl~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, edx", "pop     b", "pop     a", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~b", "pop~a", "pop~a_is_dir", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_3F64"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_3F55"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_3F98"], ["test~r12b,r12b", "jnz~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[3, 7], [0, 3], [7], [2, 6], [7], [4, 7], [5, 7], [], [7], [1, 10], [8, 1]], "fname": "rev_xstrcoll_df_mtime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, pattern", "mov     edi, 10h; n", "call    xmalloc", "mov     [ignore], pattern", "mov     rdx, cs:ignore_patterns", "mov     [ignore+8], rdx", "mov     cs:ignore_patterns, ignore", "pop     pattern", "retn"], ["push~rbx", "mov~rbx,pattern", "mov~edi,0", "call~FOO", "mov~<TAG>,pattern", "mov~rdx,<TAG>", "mov~[ignore+0],rdx", "mov~<TAG>,ignore", "pop~pattern", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 3, 10, 0.0, 1, 0], "succs": [[]], "fname": "add_ignore_pattern", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 5, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     eax, edi", "shl     rax, 4", "lea     len, color_indicator", "mov     len, [len+rax]", "mov     eax, 0", "test    len, len", "jz      short loc_402F"], ["mov~eax,edi", "shl~rax,0", "lea~len,<TAG>", "mov~len,<TAG>", "mov~eax,0", "test~len,len", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 1, 0, 1, 0.125, ["mov     eax, 1", "cmp     len, 2", "jnz     short loc_402F"], ["mov~eax,0", "cmp~len,0", "jnz~FOO"]], [2, 0, 4, 1, 0, 6, 0, 1, 0, 2, 0.15000000000000002, ["mov     edi, edi", "shl     type, 4", "lea     rax, color_indicator", "mov     rsi, [rax+rdi+8]", "cmp     len, 1", "jz      short loc_4026"], ["mov~edi,edi", "shl~type,0", "lea~rax,<TAG>", "mov~rsi,[rax+0]", "cmp~len,0", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 0, 1, 0.025, ["cmp     byte ptr [rsi], 30h ; '0'", "setnz   al", "movzx   eax, al"], ["cmp~<TAG>,0", "setnz~al", "movzx~eax,al"]], [1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]], [2, 0, 1, 0, 0, 9, 1, 1, 0, 1, 0.0, ["mov     ecx, 2", "lea     rdi, unk_165E4", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "movzx   eax, al", "jmp     short loc_402F"], ["mov~ecx,0", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "movzx~eax,al", "jmp~FOO"]]], "func_feature": [0, 3, 4, 0, 6, 8, 24, 30, 0.05, 2, 2], "succs": [[2, 4], [4, 5], [1, 3], [4], [], [4]], "fname": "is_colored", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 1, 7, 1, 1, 11, 2, 2, 0, 0, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "mov     rcx, rsp; val", "lea     r8, a8+6; valid_suffixes", "mov     edx, 0; strtol_base", "mov     esi, 0; ptr", "call    xstrtoumax", "test    eax, eax", "jz      short loc_4070"], ["sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rcx,rsp", "lea~r8,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 0, 2, 0.03571428571428571, ["mov     cs:line_length, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_4080"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 3, 0.047619047619047616, ["cmp     eax, 1", "jz      short loc_4095"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.23809523809523808, ["mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_40A7"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.03571428571428571, ["mov     eax, 0", "jmp     short loc_4080"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 0, 2, 0.07142857142857142, ["mov     rax, [rsp+18h+val]", "mov     cs:line_length, rax", "mov     eax, 1"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "mov~eax,0"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [2, 3, 7, 1, 8, 9, 2, 27, 0.05357, 3, 2], "succs": [[2, 6], [4], [1, 5], [], [3, 7], [4], [4], []], "fname": "set_line_length", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 32, 0, 0, 3, 0, 1, 0, 0, 0.029233870967741934, ["movzx   eax, byte ptr [rdx+1]", "cmp     al, 25h ; '%'", "jz      short loc_40E4"], ["movzx~eax,[yte ptr [rdx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 2, 8, 0.03125, ["mov     rcx, rdx", "cmp     al, 25h ; '%'", "jnz     short loc_40E8"], ["mov~rcx,rdx", "cmp~al,0", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 4, 6, 0.040826612903225805, ["cmp     al, 62h ; 'b'", "jnz     short loc_40E8"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 19, 0, 2, 9, 1, 3, 7, 2, 0.2288306451612903, ["mov     [rsp+678h+width], r13", "mov     edi, r12d; item", "call    _nl_langinfo", "mov     rbx, rax", "mov     esi, 25h ; '%'; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jnz     loc_42BE"], ["mov~[rsp+0],r13", "mov~edi,r12d", "call~FOO", "mov~rbx,rax", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jnz~FOO"]], [2, 0, 19, 2, 0, 7, 0, 1, 9, 3, 0.20766129032258063, ["mov     rax, [rsp+678h+width]", "cmp     rbp, rax", "cmovb   rbp, rax", "add     r12d, 1", "sub     r15, 0FFFFFFFFFFFFFF80h", "cmp     r15, [rsp+678h+var_678]", "jnz     short loc_4168"], ["mov~rax,[rsp+0]", "cmp~rbp,rax", "cmovb~rbp,rax", "add~r12d,0", "sub~r15,0", "cmp~r15,<TAG>", "jnz~FOO"]], [2, 0, 19, 0, 0, 3, 0, 0, 6, 3, 0.22278225806451613, ["mov     r15, [rsp+678h+dest]", "mov     r12d, 2000Eh", "mov     ebp, 0"], ["mov~r15,[rsp+0]", "mov~r12d,0", "mov~ebp,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, 1, 0.06048387096774194, ["mov     rax, [rsp+678h+var_40]", "xor     rax, fs:28h", "jnz     short loc_42E3"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 11, 5, 0.1723790322580645, ["mov     r12d, 0", "lea     r14, aSSS; \"%.*s%s%s\"", "jmp     loc_4294"], ["mov~r12d,0", "lea~r14,<TAG>", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 10, 5, 0.20161290322580644, ["cmp     r13, rbp", "jbe     short loc_4202"], ["cmp~r13,rbp", "jbe~FOO"]], [2, 0, 12, 1, 0, 3, 0, 1, 17, 3, 0.03477822580645161, ["add     r12, 8", "cmp     r12, 10h", "jz      short loc_42B7"], ["add~r12,0", "cmp~r12,0", "jz~FOO"]], [2, 0, 12, 2, 0, 4, 0, 1, 16, 4, 0.06955645161290322, ["sub     nfmt, 0FFFFFFFFFFFFFF80h", "sub     rbx, 0FFFFFFFFFFFFFF80h", "cmp     rbx, r15", "jz      short loc_428A"], ["sub~nfmt,0", "sub~rbx,0", "cmp~rbx,r15", "jz~FOO"]], [2, 0, 32, 1, 0, 4, 0, 1, 3, 5, 0.23286290322580644, ["mov     [rsp+rsi+678h+pb], rdx", "add     rsi, 8", "cmp     rsi, 10h", "jz      short loc_412B"], ["mov~[rsp+0],rdx", "add~rsi,0", "cmp~rsi,0", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 2, 6, 0.04838709677419355, ["mov     rdx, r8", "jmp     short loc_4107"], ["mov~rdx,r8", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 4, 6, 0.0655241935483871, ["mov     rdx, r8", "jmp     short loc_4107"], ["mov~rdx,r8", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 648h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 32, 0, 0, 4, 1, 1, 1, 7, 0.055443548387096774, ["mov     rdx, [rdi+rsi]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jnz     short loc_40F4"], ["mov~rdx,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 1, 32, 1, 0, 14, 1, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 648h", "mov     rax, fs:28h", "mov     [rsp+678h+var_40], rax", "xor     eax, eax", "mov     esi, 0", "lea     rdi, long_time_format", "mov     r8d, 0", "jmp     short loc_4116"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~esi,0", "lea~rdi,<TAG>", "mov~r8d,0", "jmp~FOO"]], [0, 1, 12, 0, 1, 4, 0, 1, 14, 3, 0.09274193548387097, ["mov     rcx, fmt", "lea     rdx, aS_0+2; format", "mov     esi, 80h; maxlen", "call    _snprintf"], ["mov~rcx,fmt", "lea~rdx,<TAG>", "mov~esi,<STR>", "call~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 13, 3, 0.17288306451612903, ["mov     rdi, rbp; s", "mov     rax, [rsp+r12+678h+pb]", "test    rax, rax", "jz      short loc_4214"], ["mov~rdi,rbp", "mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 32, 0, 0, 4, 1, 1, 3, 7, 0.05443548387096774, ["lea     rdx, [rcx+1]", "movzx   eax, byte ptr [rcx+1]", "test    al, al", "jz      short loc_4126"], ["lea~rdx,[rcx+0]", "movzx~eax,[yte ptr [rcx+0]", "test~al,al", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 15, 2, 0.09475806451612903, ["cmp     eax, 7Fh", "ja      loc_42BE"], ["cmp~eax,0", "ja~FOO"]], [5, 2, 12, 3, 1, 13, 0, 2, 15, 3, 0.007056451612903226, ["sub     rsp, 8", "add     rax, 2", "push    rax", "push    rbx", "push    fmt", "mov     r8, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     esi, 80h", "mov     eax, 0", "call    ___snprintf_chk", "add     rsp, 20h", "jmp     short loc_4228"], ["sub~rsp,0", "add~rax,0", "push~rax", "push~rbx", "push~fmt", "mov~r8,r14", "mov~rcx,0", "mov~edx,0", "mov~esi,<STR>", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 1, 12, 1, 0, 4, 0, 1, 14, 2, 0.03679435483870968, ["mov     r9, rax", "sub     r9, fmt", "cmp     r9, 80h", "jg      short loc_42BE"], ["mov~r9,rax", "sub~r9,fmt", "cmp~r9,<STR>", "jg~FOO"]], [1, 0, 12, 2, 0, 7, 0, 1, 12, 4, 0.17036290322580644, ["lea     rax, long_time_format", "mov     r13, [rax+r12]", "imul    rbp, r12, 0C0h", "lea     rax, abformat", "add     rbp, rax", "mov     rbx, [rsp+678h+dest]", "jmp     short loc_423E"], ["lea~rax,<TAG>", "mov~r13,<TAG>", "imul~rbp,r12,0", "lea~rax,<TAG>", "add~rbp,rax", "mov~rbx,[rsp+0]", "jmp~FOO"]], [2, 0, 22, 0, 0, 3, 0, 1, 4, 4, 0.2217741935483871, ["mov     r13d, 0Ch", "cmp     [rsp+678h+pb], 0", "jz      loc_41F1"], ["mov~r13d,0", "cmp~[rsp+0],0", "jz~FOO"]], [4, 1, 19, 0, 2, 14, 1, 3, 8, 2, 0.21068548387096775, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [rbx]", "mov     rax, [rax]", "movzx   r8d, word ptr [rax+rdx*2]", "shr     r8w, 0Bh", "mov     r9d, 0; flags", "and     r8d, 1; align", "mov     rcx, r14; width", "mov     edx, 80h; dest_size", "mov     rsi, r15; dest", "mov     rdi, rbx; src", "call    mbsalign", "cmp     rax, 7Fh", "ja      loc_42BE"], ["call~FOO", "movzx~edx,<TAG>", "mov~rax,<TAG>", "movzx~r8d,<TAG>", "shr~r8w,0", "mov~r9d,0", "and~r8d,0", "mov~rcx,r14", "mov~edx,<STR>", "mov~rsi,r15", "mov~rdi,rbx", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 18, 2, 0.004536290322580645, ["mov     cs:use_abformat, 1"], ["mov~<TAG>,0"]], [0, 0, 3, 0, 0, 1, 0, 1, 6, 2, 0.03629032258064516, ["jmp     loc_42BE"], ["jmp~FOO"]], [0, 0, 19, 0, 0, 5, 0, 0, 5, 4, 0.1935483870967742, ["lea     rax, [rsp+678h+abmon]", "mov     [rsp+678h+dest], rax", "lea     rax, [rsp+678h+var_48]", "mov     [rsp+678h+var_678], rax", "lea     r14, [rsp+678h+width]"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~r14,[rsp+0]"]], [1, 0, 21, 0, 0, 2, 0, 1, 5, 3, 0.04435483870967742, ["cmp     [rsp+678h+pb+8], 0", "jnz     loc_413D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 11, 4, 0.010080645161290322, ["mov     r13, rbp", "jmp     loc_4158"], ["mov~r13,rbp", "jmp~FOO"]], [0, 0, 32, 0, 0, 1, 0, 0, 4, 8, 0.0015120967741935483, ["lea     rcx, [rdx+1]"], ["lea~rcx,[rdx+0]"]]], "func_feature": [7, 7, 32, 3, 33, 49, 1, 144, 0.09253, 6, 14], "succs": [[32, 2], [0, 20], [20, 12], [26, 7], [9, 3], [3], [], [6, 15], [24], [8, 31], [24, 27], [10, 19], [16, 25], [12], [12], [], [1, 13], [16], [21], [18, 23], [1, 14], [11, 7], [21], [22, 7], [19], [29, 30], [4, 7], [7], [7], [5], [28, 29], [5], [20]], "fname": "abformat_init", "n_num": 33}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 1, 4, 1, 1, 14, 1, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, name", "mov     r12, realname", "mov     r13d, edx", "mov     edi, 20h ; ' '; n", "call    xmalloc", "mov     rbx, rax", "mov     eax, 0", "test    realname, realname", "jz      short loc_431A"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,name", "mov~r12,realname", "mov~r13d,edx", "mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~eax,0", "test~realname,realname", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, 0, 0.0, ["mov     [new], rax", "mov     [new+10h], r13b", "mov     rax, cs:pending_dirs", "mov     [new+18h], rax", "mov     cs:pending_dirs, new", "add     rsp, 8", "pop     new", "pop     name", "pop     realname", "pop     r13", "retn"], ["mov~<TAG>,rax", "mov~[new+0],r13b", "mov~rax,<TAG>", "mov~[new+0],rax", "mov~<TAG>,new", "add~rsp,0", "pop~new", "pop~name", "pop~realname", "pop~r13", "retn"]], [1, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.3333333333333333, ["mov     [new+8], rax", "mov     eax, 0", "test    name, name", "jz      short loc_4330"], ["mov~[new+0],rax", "mov~eax,0", "test~name,name", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, 1, 0.0, ["mov     rdi, name; string", "call    xstrdup"], ["mov~rdi,name", "call~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 0, 2, 0.0, ["mov     rdi, realname; string", "call    xstrdup"], ["mov~rdi,realname", "call~FOO"]]], "func_feature": [3, 2, 5, 0, 5, 6, 4, 33, 0.06667, 1, 2], "succs": [[2, 4], [], [1, 3], [1], [2]], "fname": "queue_directory", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 4, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [b+48h]", "mov     rdx, [a+48h]", "cmp     rcx, rdx", "jl      short loc_437C"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0.16666666666666666, ["mov     eax, 1", "jg      short locret_4382"], ["mov~eax,0", "jg~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 3, 0, 5, 4, 0, 15, 0.03333, 0, 2], "succs": [[], [0, 3], [], [2, 4], []], "fname": "strcmp_size", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 0, 0.16666666666666666, ["mov     eax, 1", "jg      short locret_43B5"], ["mov~eax,0", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [a+48h]", "mov     rdx, [b+48h]", "cmp     rcx, rdx", "jl      short loc_43AF"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jl~FOO"]], [2, 0, 0, 2, 1, 7, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 3, 0, 5, 4, 0, 16, 0.03333, 0, 2], "succs": [[], [0, 4], [], [1, 2], []], "fname": "rev_strcmp_size", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.14583333333333331, ["cmp     r12b, 1", "jz      short loc_43F0"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 9, 0, 2, 12, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_43DC"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.020833333333333332, ["test    r12b, r12b", "jnz     short loc_4412"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, -1, 0.07638888888888888, ["mov     eax, 1", "jl      short loc_43EB"], ["mov~eax,0", "jl~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 1, 0.16666666666666666, ["mov     b_is_dir, [b+48h]", "mov     rcx, [a+48h]", "cmp     rcx, rdx", "jg      short loc_4419"], ["mov~b_is_dir,[b+0]", "mov~rcx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, 2, 0.020833333333333332, ["mov     eax, 1", "test    dl, dl", "jz      short loc_43F0"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     a", "pop     b", "pop     a_is_dir", "retn"], ["pop~a", "pop~b", "pop~a_is_dir", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 4, -1, 0.0, ["mov     rsi, [b+0]; s2", "mov     rdi, [a]; s1", "call    _strcmp", "jmp     short loc_43EB"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.020833333333333332, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_43EB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.006944444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_43EB"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 2, 12, 0, 10, 15, 0, 37, 0.04583, 0, 0], "succs": [[4, 5], [0, 2], [0, 8], [6, 7], [9, 3], [4, 6], [], [6], [6], [6]], "fname": "strcmp_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.020833333333333332, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_4454"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.020833333333333332, ["test    r12b, r12b", "jnz     short loc_447B"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 9, 0, 2, 12, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_4445"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 1, 0.16666666666666666, ["mov     b_is_dir, [a+48h]", "mov     rcx, [b+48h]", "cmp     rcx, rdx", "jg      short loc_4482"], ["mov~b_is_dir,[a+0]", "mov~rcx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.14583333333333331, ["cmp     r12b, 1", "jz      short loc_4459"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, 2, 0.020833333333333332, ["mov     eax, 1", "test    dl, dl", "jz      short loc_4459"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.006944444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_4454"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, -1, 0.07638888888888888, ["mov     eax, 1", "jl      short loc_4454"], ["mov~eax,0", "jl~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     a_is_dir", "retn"], ["pop~b", "pop~a", "pop~a_is_dir", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 4, -1, 0.0, ["mov     rsi, [a+0]; s2", "mov     rdi, [b]; s1", "call    _strcmp", "jmp     short loc_4454"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]]], "func_feature": [3, 2, 12, 0, 10, 15, 0, 37, 0.04583, 0, 0], "succs": [[8], [0, 4], [1, 4], [6, 7], [3, 5], [8, 3], [8], [8, 9], [], [8]], "fname": "rev_strcmp_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "strcmp_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "rev_strcmp_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.027777777777777776, ["mov     eax, 1", "test    dl, dl", "jnz     short loc_44F4"], ["mov~eax,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.15555555555555553, ["cmp     r12b, 1", "jz      short loc_44E8"], ["cmp~r12b,0", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 2, -1, 0.027777777777777776, ["mov     rsi, [b+0]; s2", "mov     rdi, [a]; s1", "call    _strcmp"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO"]], [1, 0, 6, 0, 2, 12, 0, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_44D9"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 1, 0.04444444444444444, ["test    r12b, r12b", "jnz     short loc_44F9"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     a", "pop     b", "pop     a_is_dir", "retn"], ["pop~a", "pop~b", "pop~a_is_dir", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.04444444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_44F4"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 2, 8, 0, 7, 10, 0, 28, 0.04286, 0, 0], "succs": [[2, 5], [0, 2], [5], [1, 4], [1, 6], [], [5]], "fname": "strcmp_df_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.04444444444444444, ["test    r12b, r12b", "jnz     short loc_4545"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 6, 0, 2, 12, 0, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_4525"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     a_is_dir", "retn"], ["pop~b", "pop~a", "pop~a_is_dir", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.027777777777777776, ["mov     eax, 1", "test    dl, dl", "jnz     short loc_4540"], ["mov~eax,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.04444444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_4540"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 2, -1, 0.027777777777777776, ["mov     rsi, [a+0]; s2", "mov     rdi, [b]; s1", "call    _strcmp"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.15555555555555553, ["cmp     r12b, 1", "jz      short loc_4534"], ["cmp~r12b,0", "jz~FOO"]]], "func_feature": [3, 2, 8, 0, 7, 10, 0, 28, 0.04286, 0, 0], "succs": [[4, 6], [0, 6], [], [2, 5], [2], [2], [3, 5]], "fname": "rev_strcmp_df_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     cs:exit_status, 1", "jmp     short loc_45A4"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0.125, ["cmp     cs:exit_status, 0", "jnz     short loc_45A4"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     message", "pop     r12", "retn"], ["pop~rbx", "pop~message", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.041666666666666664, ["mov     cs:exit_status, 2"], ["mov~<TAG>,0"]], [3, 0, 4, 0, 3, 18, 1, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "mov     rbp, message", "mov     message, file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, message; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "test    bl, bl", "jnz     short loc_459A"], ["push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "mov~rbp,message", "mov~message,file", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,message", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "test~bl,bl", "jnz~FOO"]]], "func_feature": [3, 1, 6, 0, 5, 6, 9, 27, 0.03333, 1, 0], "succs": [[2], [0, 2], [], [2], [1, 3]], "fname": "file_failure", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 3, 1, 0, 11, 0, 1, 0, 0, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     rax, len", "setnz   al", "movzx   eax, al", "jmp     short loc_45F3"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~rax,len", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [4, 0, 4, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    rbx", "sub     rsp, 10h", "mov     rbx, name", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "lea     name, [rsp+18h+test]; buffer", "mov     r8, cs:filename_quoting_options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "mov     esi, 2; buffersize", "call    quotearg_buffer", "mov     rdx, rax", "mov     eax, 1", "movzx   esi, [rsp+18h+test]", "cmp     [name], sil", "jz      short loc_460C"], ["push~rbx", "sub~rsp,0", "mov~rbx,name", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~name,[rsp+0]", "mov~r8,<TAG>", "mov~rcx,0", "mov~rdx,name", "mov~esi,0", "call~FOO", "mov~rdx,rax", "mov~eax,0", "movzx~esi,[rsp+0]", "cmp~<TAG>,sil", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 4, 2, 1, 1, 1, 0.3333333333333333, ["and     eax, 1", "mov     rcx, [rsp+18h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_4632"], ["and~eax,0", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]]], "func_feature": [2, 3, 5, 1, 5, 5, 2, 36, 0.06667, 2, 3], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "needs_quoting", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[4, 0, 13, 1, 0, 15, 0, 0, 0, 0, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, str", "mov     r12d, esi", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     esi, 0", "mov     eax, 3", "mul     rcx", "jo      short loc_4693"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,str", "mov~r12d,esi", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~esi,0", "mov~eax,0", "mul~,rcx", "jo~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 0, 3, 0.03632478632478632, ["mov     [rbp+0], al", "lea     rbp, [rbp+1]"], ["mov~[rbp+0],al", "lea~rbp,[rbp+0]"]], [1, 0, 9, 0, 0, 4, 0, 1, 0, 4, 0.16239316239316237, ["movzx   r8d, al", "movsxd  rdx, r8d", "cmp     byte ptr [r13+rdx+0], 0", "jz      short loc_46D4"], ["movzx~r8d,al", "movsxd~rdx,r8d", "cmp~[yte ptr [r13+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 4, 0.08119658119658119, ["test    r12b, r12b", "jz      short loc_469F"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 5, 0.3141025641025641, ["cmp     al, 2Fh ; '/'", "jnz     short loc_469F"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     byte ptr [p+0], 0", "mov     rax, r14", "pop     rbx", "pop     p", "pop     path", "pop     r13", "pop     r14", "retn"], ["mov~[yte ptr [p+0],0", "mov~rax,r14", "pop~rbx", "pop~p", "pop~path", "pop~r13", "pop~r14", "retn"]], [0, 0, 9, 0, 0, 3, 1, 1, 0, 1, 0.41025641025641024, ["movzx   eax, byte ptr [rbx-1]", "test    al, al", "jz      short loc_46FB"], ["movzx~eax,[yte ptr [rbx-1]+0]", "test~al,al", "jz~FOO"]], [1, 0, 9, 1, 1, 7, 0, 2, 0, 2, 0.17307692307692307, ["lea     rdi, [rcx+rcx*2]; n", "call    xmalloc", "mov     r14, rax", "add     rbx, 1", "mov     rbp, p", "lea     r13, RFC3986", "jmp     short loc_46B9"], ["lea~rdi,<TAG>", "call~FOO", "mov~r14,rax", "add~rbx,0", "mov~rbp,p", "lea~r13,<TAG>", "jmp~FOO"]], [2, 0, 11, 0, 0, 5, 2, 1, 0, 3, 0.14102564102564102, ["test    rax, rax", "mov     eax, 1", "cmovs   rsi, rax", "test    sil, 1", "jnz     short loc_469A"], ["test~rax,rax", "mov~eax,0", "cmovs~rsi,rax", "test~sil,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 0, 3, 0.04273504273504272, ["mov     byte ptr [rbp+0], 2Fh ; '/'", "lea     rbp, [rbp+1]", "jmp     short loc_46B5"], ["mov~[yte ptr [rbp+0],0", "lea~rbp,[rbp+0]", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 4, 0.0, ["mov     esi, 1", "jmp     short loc_4665"], ["mov~esi,0", "jmp~FOO"]], [3, 0, 9, 1, 1, 9, 0, 2, 0, 3, 0.03632478632478632, ["lea     rcx, a02x; \"%%%02x\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "mov     eax, 0", "call    ___sprintf_chk", "cdqe", "add     p, rax", "jmp     short loc_46B5"], ["lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "mov~eax,0", "call~FOO", "cdqe~", "add~p,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 0, 2, 0.1987179487179487, ["add     str, 1"], ["add~str,0"]]], "func_feature": [3, 4, 12, 0, 14, 18, 2, 64, 0.11401, 2, 4], "succs": [[8, 10], [13], [1, 11], [9, 2], [2, 3], [], [4, 5], [6], [12, 7], [13], [8], [13], [], [6]], "fname": "file_escape", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 5, 1, 0, 7, 2, 1, 0, 0, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    name, name", "jz      short loc_474F"], ["push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~name,name", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_478F"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [5, 0, 3, 0, 1, 16, 0, 2, 0, 2, 0.07500000000000001, ["mov     rbx, rsp", "mov     r8, id", "lea     rcx, aLu_0+1; \"%lu\"", "mov     edx, 15h", "mov     esi, 1", "mov     name, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, rbx", "repne scasb", "mov     rax, rcx", "not     rax", "lea     eax, [rax-1]", "jmp     short loc_4739"], ["mov~rbx,rsp", "mov~r8,id", "lea~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "mov~name,rbx", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~eax,[rax-1]+0]", "jmp~FOO"]], [2, 0, 3, 0, 1, 5, 1, 1, 0, 2, 0.07500000000000001, ["mov     esi, 0; flags", "call    gnu_mbswidth", "test    eax, eax", "mov     edx, 0", "cmovs   eax, edx"], ["mov~esi,0", "call~FOO", "test~eax,eax", "mov~edx,0", "cmovs~eax,edx"]], [0, 1, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 4, 6, 1, 6, 6, 2, 35, 0.075, 2, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "format_user_or_group_width", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["mov     rsi, u; id", "mov     rdi, rax; uid", "call    format_user_or_group_width", "pop     u", "retn"], ["mov~rsi,u", "mov~rdi,rax", "call~FOO", "pop~u", "retn"]], [0, 0, 1, 0, 1, 2, 0, 2, 1, 0, 0.0, ["call    getuser", "jmp     short loc_47A5"], ["call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 0, 5, 0, 1, 0, 1, 0.0, ["push    rbx", "mov     ebx, edi", "mov     eax, 0", "cmp     cs:numeric_ids, 0", "jz      short loc_47B2"], ["push~rbx", "mov~ebx,edi", "mov~eax,0", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [2, 0, 4, 0, 3, 3, 2, 12, 0.0, 1, 0], "succs": [[], [0], [0, 1]], "fname": "format_user_width", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 111, 0, 0, 2, 0, 1, 0, 0, 0.0009748410875487421, ["mov     r14, name", "jmp     loc_4B19"], ["mov~r14,name", "jmp~FOO"]], [1, 0, 113, 0, 0, 3, 0, 1, 7, 5, 0.08636023716681801, ["mov     r14, name", "cmp     cs:dereference, 5", "jnz     loc_4BF3"], ["mov~r14,name", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 17, 9, 0.003685700550184285, ["cmp     cs:immediate_dirs, 0", "jnz     short loc_5214"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 16, 9, 0.010976977725548849, ["test    r13b, r13b", "jz      short loc_5214"], ["test~r13b,r13b", "jz~FOO"]], [2, 0, 110, 0, 1, 5, 0, 1, 7, 4, 0.2007549454267044, ["lea     rdx, [f+18h]; stat_buf", "mov     rsi, r14; filename", "mov     edi, 1; ver", "call    ___lxstat", "mov     [rbp+var_391], 0"], ["lea~rdx,[f+0]", "mov~rsi,r14", "mov~edi,0", "call~FOO", "mov~[rbp+0],0"]], [1, 0, 122, 0, 0, 3, 0, 0, 6, 5, 0.11747502804337376, ["mov     r15d, cs:dereference", "cmp     r15d, 3", "jb      loc_4BF3"], ["mov~r15d,<TAG>", "cmp~r15d,0", "jb~FOO"]], [1, 0, 112, 0, 0, 2, 0, 1, 8, 5, 0.002773178070971992, ["cmp     r15d, 5", "jnz     loc_4BF3"], ["cmp~r15d,0", "jnz~FOO"]], [2, 0, 114, 0, 0, 4, 1, 1, 11, 4, 0.002012000783433933, ["mov     edx, [f+30h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jnz     loc_4BF3"], ["mov~edx,[f+0]", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [1, 0, 112, 0, 1, 3, 0, 2, 11, 3, 0.0011395402667236437, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "jz      loc_4BF3"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 118, 0, 0, 2, 1, 1, 8, 5, 0.013345084842333921, ["test    r13b, r13b", "jnz     loc_4CFB"], ["test~r13b,r13b", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 11, 4, 0.0013621067250681052, ["mov     r14d, 0", "jmp     loc_4F60"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 155, 0, 0, 2, 0, 1, 10, 5, 0.008101419083738402, ["cmp     cs:format_needs_type, 0", "jz      loc_5401"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 100, 0, 2, 6, 1, 3, 13, 14, 0.004673895625233695, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     edi, 5Fh ; '_'; err", "call    errno_unsupported", "test    al, al", "jz      short loc_4E23"], ["call~FOO", "mov~<TAG>,0", "mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 12, 15, 0.008867047700443352, ["mov     rax, cs:unsupported_device_10326", "cmp     [f+18h], rax", "jz      short loc_4E18"], ["mov~rax,<TAG>", "cmp~[f+0],rax", "jz~FOO"]], [0, 0, 109, 0, 0, 2, 1, 1, 8, 3, 0.20998032512508236, ["test    eax, eax", "jnz     loc_4D7A"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 110, 0, 1, 5, 0, 2, 9, 4, 0.005379431298185638, ["lea     rdx, [f+18h]; stat_buf", "mov     rsi, r14; filename", "mov     edi, 1; ver", "call    ___xstat", "jmp     loc_4C0B"], ["lea~rdx,[f+0]", "mov~rsi,r14", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 76, 0, 0, 3, 0, 0, 18, 12, 0.006089418300304471, ["mov     edx, dword ptr [rbp+type]", "shr     edx, 1Fh", "mov     eax, 0"], ["mov~edx,[word ptr [rbp+0]", "shr~edx,0", "mov~eax,0"]], [0, 0, 78, 0, 1, 4, 1, 2, 18, 13, 0.002750921425137546, ["mov     edi, [r15]; err", "call    errno_unsupported", "test    al, al", "jz      short loc_5005"], ["mov~edi,<TAG>", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 77, 0, 0, 3, 0, 1, 19, 13, 0.0, ["mov     rax, [f+18h]", "mov     cs:unsupported_device_10320, rax", "jmp     short loc_5005"], ["mov~rax,[f+0]", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 77, 0, 0, 2, 0, 0, 17, 13, 0.0026975054751348752, ["mov     dword ptr [r15], 5Fh ; '_'", "mov     dword ptr [rbp+type], 0"], ["mov~<TAG>,0", "mov~[word ptr [rbp+0],0"]], [1, 0, 43, 0, 0, 2, 0, 1, 18, 8, 0.0005742214625287111, ["mov     dword ptr [f+0A8h], 9", "jmp     loc_4E8E"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 15, 4, 0.0003739116500186956, ["mov     r14d, 0", "jmp     loc_4F60"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 150, 0, 0, 2, 0, 1, 14, 5, 0.0057956305752897815, ["cmp     cs:print_with_color, 0", "jz      loc_540C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 99, 0, 0, 3, 0, 1, 14, 14, 0.0, ["mov     rax, [f+18h]", "mov     cs:unsupported_device_10326, rax", "jmp     short loc_4E23"], ["mov~rax,[f+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 192, 0, 0, 6, 0, 1, 1, 10, 0.005127931200256397, ["mov     r12, name", "mov     r14, inode", "mov     r13d, ecx", "mov     command_line_arg, cs:cwd_n_used", "cmp     rcx, cs:cwd_n_alloc", "jnz     short loc_486F"], ["mov~r12,name", "mov~r14,inode", "mov~r13d,ecx", "mov~command_line_arg,<TAG>", "cmp~rcx,<TAG>", "jnz~FOO"]], [2, 0, 194, 1, 0, 20, 4, 1, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 378h", "mov     dword ptr [rbp+type], esi", "mov     [rbp+dirname], dirname_0", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "test    inode, inode", "setz    r15b", "mov     eax, ecx", "xor     eax, 1", "or      al, r15b", "mov     [rbp+var_391], al", "jz      loc_4943"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[word ptr [rbp+0],esi", "mov~[rbp+0],dirname_0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "test~inode,inode", "setz~r15b", "mov~eax,ecx", "xor~eax,0", "or~al,r15b", "mov~[rbp+0],al", "jz~FOO"]], [1, 0, 162, 0, 0, 7, 2, 1, 8, 7, 0.0074960383170414695, ["mov     esi, dword ptr [rbp+type]", "cmp     esi, 6", "setz    dl", "test    esi, esi", "setz    r14b", "or      r14b, dl", "jz      short loc_49D8"], ["mov~esi,[word ptr [rbp+0]", "cmp~esi,0", "setz~dl", "test~esi,esi", "setz~r14b", "or~r14b,dl", "jz~FOO"]], [0, 0, 168, 0, 0, 3, 1, 1, 7, 6, 0.008555454658761105, ["movzx   eax, cs:print_inode", "test    al, al", "jnz     loc_4A07"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 99, 0, 1, 2, 0, 1, 13, 14, 0.0024304257251215214, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 43, 0, 0, 2, 0, 1, 17, 8, 0.0017226643875861332, ["mov     dword ptr [f+0A8h], 3", "jmp     loc_4E8E"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 20, 11, 0.014422306500721115, ["cmp     cs:indicator_style_0, 1", "ja      short loc_5110"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 56, 0, 1, 4, 1, 2, 20, 12, 0.003391912825169596, ["mov     rdi, [f+8]; name", "call    needs_quoting", "test    al, al", "jz      loc_50FE"], ["mov~rdi,[f+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 21, 12, 0.0, ["mov     dword ptr [f+0C4h], 0FFFFFFFFh", "jmp     loc_50FE"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 19, 12, 0.020191229101009563, ["cmp     dword ptr [f+0C4h], 0", "jz      loc_51CB"], ["cmp~[word ptr [f+0],0", "jz~FOO"]], [2, 0, 106, 0, 0, 3, 0, 1, 9, 14, 0.21312964051065647, ["mov     byte ptr [f+0B8h], 1", "cmp     dword ptr [rbp+type], 5", "jz      loc_4DC6"], ["mov~[yte ptr [f+0],0", "cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 107, 0, 0, 2, 0, 1, 11, 15, 0.007869949967060164, ["mov     [rbp+var_391], r13b", "jmp     loc_4C13"], ["mov~[rbp+0],r13b", "jmp~FOO"]], [0, 0, 162, 0, 0, 1, 0, 1, 11, 8, 0.0002136638000106832, ["jmp     loc_4A1E"], ["jmp~FOO"]], [1, 0, 163, 0, 0, 2, 0, 1, 10, 6, 0.0026886028168010964, ["cmp     eax, 6", "jnz     loc_4A4B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 161, 0, 0, 2, 0, 1, 9, 7, 0.021179424176058972, ["cmp     cs:dereference, 5", "jz      short loc_49E1"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 164, 0, 0, 3, 1, 1, 9, 7, 0.0071755426170254455, ["mov     eax, dword ptr [rbp+type]", "test    eax, eax", "jz      loc_4A1E"], ["mov~eax,[word ptr [rbp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 75, 0, 0, 6, 3, 1, 18, 11, 0.014716094225735804, ["mov     [f+0BCh], eax", "test    eax, eax", "setnz   al", "or      cs:any_has_acl, al", "test    edx, edx", "jz      loc_4E66"], ["mov~[f+0],eax", "test~eax,eax", "setnz~al", "or~<TAG>,al", "test~edx,edx", "jz~FOO"]], [3, 0, 79, 0, 1, 11, 1, 2, 17, 12, 0.012793120025639657, ["mov     dword ptr [r15], 0", "lea     rsi, [f+18h]; sb", "mov     rdi, r14; name", "call    file_has_acl", "mov     esi, eax", "mov     dword ptr [rbp+type], eax", "mov     edx, eax", "shr     edx, 1Fh", "mov     eax, 2", "test    esi, esi", "jg      short loc_5013"], ["mov~<TAG>,0", "lea~rsi,[f+0]", "mov~rdi,r14", "call~FOO", "mov~esi,eax", "mov~[word ptr [rbp+0],eax", "mov~edx,eax", "shr~edx,0", "mov~eax,0", "test~esi,esi", "jg~FOO"]], [1, 0, 98, 0, 0, 2, 0, 1, 14, 13, 0.010469526200523476, ["mov     byte ptr [f+0C0h], 0", "jmp     loc_4C3A"], ["mov~[yte ptr [f+0],0", "jmp~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 19, 12, 0.0002136638000106832, ["jmp     loc_4CC8"], ["jmp~FOO"]], [0, 0, 59, 0, 1, 4, 0, 2, 17, 11, 0.02815020565140751, ["mov     rdi, r15; string", "call    xstrdup", "mov     [rbp+type], rax", "jmp     loc_50E7"], ["mov~rdi,r15", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 16, 12, 0.045483681427274186, ["cmp     byte ptr [r15], 2Fh ; '/'", "jz      loc_51A3"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 160, 0, 0, 2, 0, 1, 10, 7, 0.00267079750013354, ["cmp     cs:color_symlink_as_referent, 0", "jnz     short loc_49E1"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 31, 0, 1, 4, 0, 2, 20, 8, 0.0039794882751989745, ["mov     edi, [f+34h]; u", "call    format_user_width", "cmp     cs:owner_width, eax", "jge     loc_4EFE"], ["mov~edi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 19, 8, 0.044041450777202076, ["cmp     cs:print_owner, 0", "jnz     loc_5223"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 105, 0, 0, 4, 1, 1, 10, 13, 0.09943379092997169, ["mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_4DC6"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, 7, 0.0024838416751241923, ["cmp     cs:check_symlink_mode, 0", "jnz     short loc_49E1"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 18, 10, 0.012926659900646334, ["cmp     cs:format_0, 0", "jz      short loc_5047"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 1, 72, 0, 0, 4, 1, 1, 17, 10, 0.04278617595213931, ["mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_5031"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 87, 0, 1, 3, 0, 2, 13, 14, 0.04078307782703915, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     loc_4C94"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 93, 0, 0, 3, 0, 1, 12, 15, 0.05288179050264409, ["mov     rax, cs:unsupported_device_10314", "cmp     [f+18h], rax", "jz      loc_4E2F"], ["mov~rax,<TAG>", "cmp~[f+0],rax", "jz~FOO"]], [0, 0, 158, 0, 0, 2, 0, 1, 12, 7, 0.0022434699001121737, ["mov     eax, r14d", "jmp     short loc_49D8"], ["mov~eax,r14d", "jmp~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 21, 8, 0.0, ["mov     cs:owner_width, eax", "jmp     loc_4EFE"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 11, 12, 0.21745633246087281, ["cmp     cs:format_0, 0", "jz      short loc_4C50"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 10, 13, 0.1124138667806207, ["cmp     cs:print_with_color, 0", "jz      loc_4C3A"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 103, 0, 1, 4, 1, 2, 11, 13, 0.010950269750547513, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "jz      loc_4C3A"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 157, 0, 0, 2, 1, 1, 9, 6, 0.016006979684133688, ["test    r15b, r15b", "jz      short loc_4A3E"], ["test~r15b,r15b", "jz~FOO"]], [0, 0, 156, 0, 0, 2, 1, 1, 10, 6, 0.010976977725548849, ["test    al, al", "jz      short loc_4A3E"], ["test~al,al", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 18, 5, 0.0664761497783238, ["cmp     cs:print_scontext, 0", "jnz     loc_4F21"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 17, 6, 0.06973452272848672, ["cmp     cs:print_block_size, 0", "jz      loc_555A"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 189, 0, 0, 5, 2, 1, 3, 11, 0.010202446450510123, ["test    rax, rax", "mov     eax, 1", "cmovs   rsi, rax", "test    sil, 1", "jnz     loc_496C"], ["test~rax,rax", "mov~eax,0", "cmovs~rsi,rax", "test~sil,0", "jnz~FOO"]], [1, 0, 190, 0, 0, 2, 0, 1, 3, 12, 0.0, ["mov     esi, 1", "jmp     loc_483A"], ["mov~esi,0", "jmp~FOO"]], [1, 1, 191, 1, 0, 6, 0, 0, 2, 12, 0.0002136638000106832, ["mov     name, cs:cwd_file; p", "mov     esi, 0", "mov     edx, 190h", "mov     rax, rdx", "mul     rcx", "jo      loc_4962"], ["mov~name,<TAG>", "mov~esi,0", "mov~edx,<STR>", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [3, 0, 5, 1, 1, 13, 0, 2, 11, 3, 0.004914267400245713, ["lea     rsi, [rbp+buf]; buf", "mov     rdi, [f+20h]; i", "call    umaxtostr", "mov     rdi, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rdx, rcx", "not     rdx", "mov     rcx, rdx", "sub     rcx, 1", "cmp     cs:inode_number_width, ecx", "jge     loc_4F6D"], ["lea~rsi,[rbp+0]", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,rax", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "mov~rcx,rdx", "sub~rcx,0", "cmp~<TAG>,ecx", "jge~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 10, 3, 0.024598044976229902, ["cmp     cs:print_inode, 0", "jnz     loc_5417"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 153, 0, 0, 3, 1, 1, 11, 5, 0.01538379360076919, ["mov     eax, dword ptr [rbp+type]", "test    eax, eax", "jz      short loc_49E1"], ["mov~eax,[word ptr [rbp+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 28, 0, 0, 5, 0, 1, 21, 8, 0.012178836600608941, ["mov     eax, [f+38h]", "mov     r13d, eax", "mov     edi, 0; name", "cmp     cs:numeric_ids, 0", "jz      short loc_5275"], ["mov~eax,[f+0]", "mov~r13d,eax", "mov~edi,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 20, 7, 0.03450670370172534, ["cmp     cs:print_group, 0", "jnz     loc_5242"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 15, 12, 0.04517653971475883, ["cmp     cs:format_0, 0", "jz      loc_4FA5"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 86, 0, 1, 7, 0, 2, 14, 13, 0.0521339672026067, ["lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "mov     [f+0B0h], rax", "call    ___errno_location", "mov     r15, rax", "mov     eax, [rax]", "cmp     eax, 5Fh ; '_'", "jz      loc_4E4F"], ["lea~rax,<TAG>", "mov~[f+0],rax", "call~FOO", "mov~r15,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 15, 13, 0.005234763100261738, ["cmp     eax, 3Dh ; '='", "jz      loc_4E4F"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 12, 3, 0.0, ["mov     cs:inode_number_width, ecx", "jmp     loc_4F6D"], ["mov~<TAG>,ecx", "jmp~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 8, 5, 0.006547905204494063, ["cmp     cs:format_needs_type, 0", "jnz     loc_545C"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 12, 11, 0.16299877143314995, ["cmp     cs:print_scontext, 0", "jz      loc_54E0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 73, 0, 0, 1, 0, 0, 16, 11, 0.02332941616366647, ["mov     dword ptr [f+0BCh], 0"], ["mov~[word ptr [f+0],0"]], [0, 0, 69, 0, 1, 7, 1, 2, 15, 12, 0.05867742107793387, ["mov     rsi, [f+48h]; size", "mov     rdi, r14; file", "call    areadlink_with_size", "mov     r15, rax", "mov     [f+8], rax", "test    rax, rax", "jz      loc_516D"], ["mov~rsi,[f+0]", "mov~rdi,r14", "call~FOO", "mov~r15,rax", "mov~[f+0],rax", "test~rax,rax", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 14, 9, 0.14678703060733936, ["cmp     cs:check_symlink_mode, 0", "jz      loc_515E"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 152, 0, 0, 3, 0, 1, 12, 4, 0.0076117728753805885, ["mov     r14d, 0", "cmp     eax, 5", "jnz     loc_4F60"], ["mov~r14d,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 26, 0, 1, 4, 0, 2, 22, 7, 0.005448426900272421, ["mov     rsi, r13; id", "call    format_user_or_group_width", "cmp     cs:group_width, eax", "jge     loc_4F0B"], ["mov~rsi,r13", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 27, 0, 1, 4, 0, 2, 22, 8, 0.0, ["mov     edi, eax; gid", "call    getgroup", "mov     rdi, rax", "jmp     short loc_5256"], ["mov~edi,eax", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 17, 13, 0.00040061962502003096, ["mov     r15, rax", "jmp     loc_5063"], ["mov~r15,rax", "jmp~FOO"]], [2, 0, 187, 2, 1, 6, 0, 1, 4, 10, 0.01498317397574916, ["lea     rax, [rcx+rcx*4]", "lea     rsi, [rax+rax*4]", "shl     rsi, 4; n", "call    xrealloc", "mov     cs:cwd_file, rax", "shl     cs:cwd_n_alloc, 1"], ["lea~rax,<TAG>", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~<TAG>,rax", "shl~<TAG>,0"]], [1, 0, 151, 0, 0, 2, 0, 1, 13, 6, 0.010015490625500775, ["cmp     cs:indicator_style_0, 3", "jz      loc_49E1"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 1, 23, 7, 0.0, ["mov     cs:group_width, eax", "jmp     loc_4F0B"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 13, 16, 0.009721702900486085, ["cmp     [rbp+var_391], 0", "jz      loc_4E3F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 89, 0, 1, 2, 0, 1, 14, 15, 0.0036189306126809466, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 116, 0, 0, 2, 1, 1, 10, 4, 0.003739116500186956, ["test    eax, eax", "js      short loc_4D3B"], ["test~eax,eax", "js~FOO"]], [2, 0, 117, 0, 1, 6, 0, 2, 9, 4, 0.010796698894289835, ["lea     rdx, [f+18h]; stat_buf", "mov     rsi, r14; filename", "mov     edi, 1; ver", "call    ___xstat", "cmp     r15d, 3", "jz      short loc_4D2B"], ["lea~rdx,[f+0]", "mov~rsi,r14", "mov~edi,0", "call~FOO", "cmp~r15d,0", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 15, 9, 0.04457561027722878, ["cmp     eax, 4000h", "jz      loc_51F7"], ["cmp~eax,0", "jz~FOO"]], [1, 1, 50, 0, 1, 6, 1, 2, 18, 9, 0.025693071951284653, ["mov     rdi, [rbp+type]; ptr", "call    free", "mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_4E79"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~eax,[f+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 49, 0, 0, 3, 1, 1, 14, 10, 0.014582554350729127, ["mov     eax, [f+30h]", "and     eax, 0F000h", "jmp     loc_4E79"], ["mov~eax,[f+0]", "and~eax,0", "jmp~FOO"]], [0, 0, 63, 0, 1, 5, 1, 2, 17, 12, 0.01271299610063565, ["mov     rdi, r14; file", "call    dir_len", "mov     [rbp+dirname], rax", "test    rax, rax", "jz      loc_51B7"], ["mov~rdi,r14", "call~FOO", "mov~[rbp+0],rax", "test~rax,rax", "jz~FOO"]], [1, 0, 141, 0, 0, 3, 0, 1, 5, 8, 0.0013621067250681052, ["movzx   edx, byte ptr [name]", "cmp     dl, 2Fh ; '/'", "jz      loc_4BE2"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 4, 8, 0.013073553763153677, ["cmp     cs:print_hyperlink, 0", "jnz     loc_5478"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 43, 0, 0, 1, 0, 0, 16, 8, 0.02756263020137813, ["mov     dword ptr [f+0A8h], 5"], ["mov~[word ptr [f+0],0"]], [0, 0, 16, 0, 0, 1, 0, 0, 22, 6, 0.0, ["mov     cs:nlink_width, ecx"], ["mov~<TAG>,ecx"]], [3, 0, 17, 1, 1, 13, 0, 2, 21, 6, 0.044602318252230114, ["lea     rsi, [rbp+b]; buf", "mov     rdi, [f+28h]; i", "call    umaxtostr", "mov     rdi, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "sub     rcx, 1", "cmp     cs:nlink_width, ecx", "jge     short loc_52DC"], ["lea~rsi,[rbp+0]", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,rax", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "sub~rcx,0", "cmp~<TAG>,ecx", "jge~FOO"]], [0, 0, 88, 0, 2, 5, 1, 3, 15, 14, 0.009481331125474066, ["call    ___errno_location", "mov     edi, [rax]; err", "call    errno_unsupported", "test    al, al", "jz      short loc_4C94"], ["call~FOO", "mov~edi,<TAG>", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 89, 0, 1, 3, 0, 2, 14, 15, 0.0036189306126809466, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     loc_4C79"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, 1, 0.010149030500507451, ["mov     rax, r14", "mov     rdx, [rbp+var_38]", "xor     rdx, fs:28h", "jnz     loc_556C"], ["mov~rax,r14", "mov~rdx,[rbp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 148, 0, 1, 4, 1, 2, 15, 7, 0.0075049409753752475, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jnz     loc_49E1"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 87, 0, 0, 2, 0, 0, 16, 14, 0.0, ["mov     rax, [f+18h]", "mov     cs:unsupported_device_10314, rax"], ["mov~rax,[f+0]", "mov~<TAG>,rax"]], [0, 0, 23, 0, 1, 4, 0, 2, 22, 6, 0.004193152075209657, ["mov     edi, [f+34h]; u", "call    format_user_width", "cmp     cs:author_width, eax", "jge     loc_4F18"], ["mov~edi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 21, 6, 0.017547139575877356, ["cmp     cs:print_author, 0", "jnz     loc_5281"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 9, 4, 0.0026841514876342074, ["mov     r14d, 0", "jmp     loc_4F60"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 19, 4, 0.0006276374125313819, ["jmp     loc_4F60"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 5, 0, 1, 25, 4, 0.0053950109502697505, ["mov     edx, cs:major_device_number_width", "mov     eax, cs:minor_device_number_width", "lea     eax, [rdx+rax+2]", "cmp     cs:file_size_width, eax", "jge     loc_4F60"], ["mov~edx,<TAG>", "mov~eax,<TAG>", "lea~eax,[rdx+0]", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 26, 4, 0.0, ["mov     cs:file_size_width, eax", "jmp     loc_4F60"], ["mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 8, 0, 2, 11, 0, 3, 23, 4, 0.005101223225255061, ["lea     rsi, [rbp+buf]; buf", "mov     rdi, [f+48h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, cs:file_human_output_opts; opts", "call    human_readable", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     cs:file_size_width, eax", "jge     loc_4F60"], ["lea~rsi,[rbp+0]", "mov~rdi,[f+0]", "mov~r8,<TAG>", "mov~ecx,0", "mov~edx,<TAG>", "call~FOO", "mov~esi,0", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 24, 4, 0.0, ["mov     cs:file_size_width, eax", "jmp     loc_4F60"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 19, 4, 0.01722664387586133, ["cmp     cs:print_scontext, 0", "jz      loc_4F60"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 21, 0, 0, 10, 0, 1, 20, 4, 0.004887559425244378, ["mov     rdi, [f+0B0h]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rdx, rcx", "not     rdx", "lea     rdx, [rdx-1]", "mov     eax, edx", "cmp     cs:scontext_width, edx", "jge     loc_4F60"], ["mov~rdi,[f+0]", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rdx,[rdx-1]+0]", "mov~eax,edx", "cmp~<TAG>,edx", "jge~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 19, 4, 0.008573259975428663, ["jmp     loc_4F60"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 20, 4, 0.051573099727578654, ["cmp     cs:format_0, 0", "jz      loc_52A0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 139, 0, 0, 5, 1, 1, 6, 7, 0.0025906735751295338, ["mov     rax, [rbp+dirname]", "movzx   esi, byte ptr [rax]", "mov     inode, name", "test    sil, sil", "jnz     loc_4B2F"], ["mov~rax,[rbp+0]", "movzx~esi,<TAG>", "mov~inode,name", "test~sil,sil", "jnz~FOO"]], [1, 0, 42, 0, 0, 3, 0, 1, 16, 7, 0.14988515570749425, ["mov     r14, [f+58h]", "cmp     cs:format_0, 0", "jz      short loc_4EA8"], ["mov~r14,[f+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 15, 8, 0.11925110838096256, ["mov     dword ptr [f+0A8h], 6", "jmp     loc_4E8E"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 23, 6, 0.0, ["mov     cs:author_width, eax", "jmp     loc_4F18"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 147, 0, 1, 4, 1, 2, 16, 7, 0.003071417125153571, ["mov     edi, 10h; type", "call    is_colored", "test    al, al", "jnz     loc_49E1"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 146, 0, 1, 4, 1, 2, 17, 6, 0.002283531862614177, ["mov     edi, 11h; type", "call    is_colored", "test    al, al", "jnz     loc_49E1"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 124, 0, 1, 6, 1, 2, 6, 6, 0.011778216975588911, ["mov     esi, 2; can_mode", "mov     rdi, full_name; name", "call    canonicalize_filename_mode", "mov     [f+10h], rax", "test    rax, rax", "jnz     loc_4AF4"], ["mov~esi,0", "mov~rdi,full_name", "call~FOO", "mov~[f+0],rax", "test~rax,rax", "jnz~FOO"]], [1, 0, 125, 0, 0, 2, 0, 1, 5, 6, 0.08708135249185407, ["cmp     cs:print_hyperlink, 0", "jnz     loc_549C"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 125, 0, 0, 2, 0, 1, 6, 7, 0.0018428502750921425, ["mov     inode, name", "jmp     loc_549C"], ["mov~inode,name", "jmp~FOO"]], [4, 0, 73, 0, 2, 11, 0, 3, 17, 11, 0.004874205437743711, ["mov     rdx, r14; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rcx, rax", "lea     rdx, aS_0+2; format", "mov     esi, [r15]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_4E66"], ["mov~rdx,r14", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [3, 0, 61, 1, 1, 11, 0, 2, 18, 12, 0.006409914000320495, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, r15", "repne scasb", "mov     rdi, [rbp+dirname]", "sub     rdi, rcx; n", "call    xmalloc", "mov     [rbp+type], rax", "mov     rdi, [rbp+dirname]", "cmp     byte ptr [r14+rdi-1], 2Fh ; '/'", "jz      short loc_50C6"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,r15", "scasb~<TAG>,", "mov~rdi,[rbp+0]", "sub~rdi,rcx", "call~FOO", "mov~[rbp+0],rax", "mov~rdi,[rbp+0]", "cmp~[yte ptr [r14+0],0", "jz~FOO"]], [1, 0, 74, 0, 0, 1, 0, 0, 16, 12, 0.0036189306126809466, ["mov     dword ptr [f+0BCh], 0"], ["mov~[word ptr [f+0],0"]], [1, 0, 60, 1, 0, 2, 0, 0, 19, 12, 0.0, ["add     rdi, 1", "mov     [rbp+dirname], rdi"], ["add~rdi,0", "mov~[rbp+0],rdi"]], [1, 0, 145, 0, 1, 4, 1, 2, 18, 5, 0.0014822926125741146, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "jnz     loc_49E1"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 140, 0, 0, 4, 0, 1, 4, 7, 0.03980823673949041, ["movzx   edx, byte ptr [name]", "mov     inode, name", "cmp     dl, 2Fh ; '/'", "jz      short loc_4AE7"], ["movzx~edx,<TAG>", "mov~inode,name", "cmp~dl,0", "jz~FOO"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 8, 0.04860851450243043, ["test    r13b, r13b", "jnz     loc_4ACB"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 123, 0, 2, 9, 0, 3, 7, 6, 0.0, ["mov     edx, 5; category", "lea     rsi, aErrorCanonical; \"error canonicalizing %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, r13b; serious", "mov     rdx, full_name; file", "mov     rsi, rax; message", "call    file_failure", "jmp     loc_4AF4"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,r13b", "mov~rdx,full_name", "mov~rsi,rax", "call~FOO", "jmp~FOO"]], [1, 1, 38, 0, 2, 11, 0, 3, 17, 6, 0.07403450670370172, ["lea     rsi, [rbp+buf]; buf", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "mov     edx, cs:human_output_opts; opts", "mov     rdi, blocks; n", "call    human_readable", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     cs:block_size_width, eax", "jge     short loc_4EE4"], ["lea~rsi,[rbp+0]", "mov~r8,<TAG>", "mov~ecx,<STR>", "mov~edx,<TAG>", "mov~rdi,blocks", "call~FOO", "mov~esi,0", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [8, 0, 186, 2, 0, 22, 1, 1, 2, 9, 0.029806100101490304, ["mov     rax, cs:cwd_n_used", "lea     rax, [rax+rax*4]", "lea     rdx, [rax+rax*4]", "mov     rax, cs:cwd_file", "lea     rbx, [rax+rdx*8]", "mov     qword ptr [f], 0", "mov     qword ptr [f+0BCh], 0", "lea     rdi, [f+8]", "and     rdi, 0FFFFFFFFFFFFFFF8h", "mov     rcx, f", "sub     rcx, rdi", "add     ecx, 0C4h", "shr     ecx, 3", "mov     ecx, ecx", "mov     eax, 0", "rep stosq", "mov     [f+20h], inode", "mov     eax, dword ptr [rbp+type]", "mov     [f+0A8h], eax", "mov     dword ptr [f+0C4h], 0FFFFFFFFh", "cmp     cs:cwd_some_quoted, 0", "jnz     short loc_48EC"], ["mov~rax,<TAG>", "lea~rax,<TAG>", "lea~rdx,<TAG>", "mov~rax,<TAG>", "lea~rbx,<TAG>", "mov~<TAG>,0", "mov~[word ptr [f+0],0", "lea~rdi,[f+0]", "and~rdi,0", "mov~rcx,f", "sub~rcx,rdi", "add~ecx,0", "shr~ecx,0", "mov~ecx,ecx", "mov~eax,0", "stosq~<TAG>,", "mov~[f+0],inode", "mov~eax,[word ptr [rbp+0]", "mov~[f+0],eax", "mov~[word ptr [f+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 18, 6, 0.0, ["mov     cs:block_size_width, eax"], ["mov~<TAG>,eax"]], [1, 0, 174, 0, 0, 2, 0, 1, 6, 7, 0.011804924950590247, ["cmp     dword ptr [rbp+type], 3", "jz      short loc_4996"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 59, 0, 2, 7, 0, 2, 19, 11, 0.003151541050157577, ["mov     rdx, [rbp+dirname]; n", "mov     rsi, r14; src", "mov     rdi, [rbp+type]; dest", "call    _stpncpy", "mov     rsi, r15; src", "mov     rdi, rax; dest", "call    _strcpy"], ["mov~rdx,[rbp+0]", "mov~rsi,r14", "mov~rdi,[rbp+0]", "call~FOO", "mov~rsi,r15", "mov~rdi,rax", "call~FOO"]], [0, 0, 139, 0, 0, 4, 1, 1, 5, 7, 0.004166444100208323, ["mov     rax, [rbp+dirname]", "movzx   esi, byte ptr [rax]", "test    sil, sil", "jnz     short loc_4B2F"], ["mov~rax,[rbp+0]", "movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 185, 0, 0, 2, 0, 1, 3, 9, 0.0003739116500186956, ["cmp     cs:align_variable_outer_quotes, 0", "jnz     loc_4971"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 15, 0, 0, 4, 1, 1, 22, 5, 0.036483093851824154, ["mov     eax, [f+30h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jnz     loc_53BB"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 18, 5, 0.06821216815341061, ["cmp     cs:format_0, 0", "jnz     loc_5500"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 1, 72, 0, 0, 4, 1, 1, 13, 10, 0.16254473585812723, ["mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_503A"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 9, 7, 0.04286629987714331, ["mov     byte ptr [rax], 0", "jmp     loc_4AE7"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 184, 0, 1, 6, 1, 2, 4, 9, 0.0002136638000106832, ["mov     rdi, name; name", "call    needs_quoting", "movzx   edx, al", "mov     [f+0C4h], edx", "test    al, al", "jz      loc_48EC"], ["mov~rdi,name", "call~FOO", "movzx~edx,al", "mov~[f+0],edx", "test~al,al", "jz~FOO"]], [1, 0, 183, 0, 0, 2, 0, 1, 5, 9, 0.0, ["mov     cs:cwd_some_quoted, 1", "jmp     loc_48EC"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 52, 0, 1, 6, 1, 2, 21, 10, 0.006222958175311148, ["lea     rdx, [rbp+linkstats]; stat_buf", "mov     rsi, [rbp+type]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_513F"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 21, 10, 0.0027242134501362105, ["cmp     cs:check_symlink_mode, 0", "jz      short loc_513F"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 123, 0, 0, 2, 0, 1, 8, 6, 0.011804924950590247, ["mov     r14, name", "jmp     loc_4AF4"], ["mov~r14,name", "jmp~FOO"]], [1, 0, 121, 0, 0, 2, 0, 0, 7, 6, 0.016412050638320602, ["cmp     r15d, 4", "jbe     loc_4BEA"], ["cmp~r15d,0", "jbe~FOO"]], [0, 0, 175, 0, 0, 3, 1, 1, 5, 7, 0.015851183163292558, ["movzx   r14d, cs:format_needs_stat", "test    r14b, r14b", "jnz     loc_49E1"], ["movzx~r14d,<TAG>", "test~r14b,r14b", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 22, 5, 0.00673040970033652, ["cmp     cs:print_scontext, 0", "jz      short loc_4F53"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 109, 0, 0, 2, 1, 1, 10, 3, 0.009025069885867919, ["test    eax, eax", "jnz     short loc_4D49"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 167, 0, 0, 3, 1, 1, 8, 6, 0.004998842654416609, ["movzx   eax, cs:print_inode", "test    al, al", "jz      loc_492B"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 21, 6, 0.0012552748250627638, ["jmp     loc_4F4D"], ["jmp~FOO"]], [5, 2, 12, 1, 1, 21, 3, 2, 23, 6, 0.02270177875113509, ["mov     rax, [f+40h]", "mov     rdi, rax", "shr     rdi, 8", "mov     edx, edi", "and     edx, 0FFFh", "lea     rsi, [rbp+buf]; buf", "shr     rax, 20h", "mov     rdi, rax", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "sub     rcx, 1", "cmp     cs:major_device_number_width, ecx", "jge     short loc_5349"], ["mov~rax,[f+0]", "mov~rdi,rax", "shr~rdi,0", "mov~edx,edi", "and~edx,<STR>", "lea~rsi,[rbp+0]", "shr~rax,<STR>", "mov~rdi,rax", "and~edi,0", "or~edi,edx", "call~FOO", "mov~rdi,rax", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "sub~rcx,0", "cmp~<TAG>,ecx", "jge~FOO"]], [3, 0, 20, 1, 0, 11, 0, 1, 19, 5, 0.05101223225255061, ["mov     rdi, [f+0B0h]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "sub     rcx, 1", "mov     eax, ecx", "cmp     cs:scontext_width, ecx", "jge     short loc_4F53"], ["mov~rdi,[f+0]", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "sub~rcx,0", "mov~eax,ecx", "cmp~<TAG>,ecx", "jge~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 7, 7, 0.02200737140110037, ["mov     rax, [rbp+dirname]", "movzx   esi, byte ptr [rax]", "test    sil, sil", "jnz     loc_4B2F"], ["mov~rax,[rbp+0]", "movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 143, 0, 0, 3, 0, 1, 6, 6, 0.10673842209283692, ["movzx   edx, byte ptr [name]", "cmp     dl, 2Fh ; '/'", "jnz     loc_553F"], ["movzx~edx,<TAG>", "cmp~dl,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 20, 5, 0.0016291864750814593, ["mov     cs:scontext_width, eax"], ["mov~<TAG>,eax"]], [1, 0, 51, 0, 0, 3, 0, 0, 22, 10, 0.0, ["mov     byte ptr [f+0B9h], 1", "mov     eax, [rbp+linkstats.st_mode]", "mov     [f+0ACh], eax"], ["mov~[yte ptr [f+0],0", "mov~eax,[rbp+0]", "mov~[f+0],eax"]], [1, 0, 58, 0, 0, 2, 0, 1, 18, 10, 0.034266331926713314, ["cmp     [rbp+type], 0", "jz      short loc_513F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 51, 0, 0, 2, 0, 1, 17, 10, 0.006116126275305806, ["mov     [rbp+type], r15", "jmp     loc_513F"], ["mov~[rbp+0],r15", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     command_line_arg, __PRETTY_FUNCTION___10342; \"gobble_file\"", "mov     edx, 0C2Fh; line", "lea     type_0, file; \"src/ls.c\"", "lea     name, assertion; \"! command_line_arg || inode == NOT_AN_I\"...", "call    ___assert_fail"], ["lea~command_line_arg,<TAG>", "mov~edx,0", "lea~type_0,<TAG>", "lea~name,<TAG>", "call~FOO"]], [4, 0, 3, 0, 2, 10, 0, 3, 11, 2, 0.0004607125687730356, ["mov     edx, 5; category", "lea     rsi, msgid; \"cannot access %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, r14; file", "mov     rsi, rax; message", "mov     edi, 1; serious", "call    file_failure", "mov     r14d, 0", "jmp     loc_4F80"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,r14", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r14d,0", "jmp~FOO"]], [3, 0, 4, 0, 2, 11, 1, 3, 9, 2, 0.006323113081566156, ["mov     edx, 5; category", "lea     rsi, msgid; \"cannot access %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, r13b; serious", "mov     rdx, r14; file", "mov     rsi, rax; message", "call    file_failure", "mov     r14d, 0", "test    r13b, r13b", "jnz     loc_4F80"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,r13b", "mov~rdx,r14", "mov~rsi,rax", "call~FOO", "mov~r14d,0", "test~r13b,r13b", "jnz~FOO"]], [1, 0, 3, 1, 1, 5, 0, 2, 10, 2, 0.0, ["mov     rdi, r12; string", "call    xstrdup", "mov     [f], rax", "add     cs:cwd_n_used, 1", "jmp     loc_4F80"], ["mov~rdi,r12", "call~FOO", "mov~<TAG>,rax", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 1, 1, 4, 0, 1, 11, 2, 0.010175738475508787, ["mov     rdi, r12; string", "call    xstrdup", "mov     [f], rax", "add     cs:cwd_n_used, 1"], ["mov~rdi,r12", "call~FOO", "mov~<TAG>,rax", "add~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [5, 0, 138, 1, 0, 20, 2, 1, 6, 10, 0.01722664387586133, ["mov     r9, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rcx, r9", "mov     rdi, name", "repne scasb", "not     rcx", "mov     r8, rcx", "mov     rcx, r9", "mov     rdi, [rbp+dirname]", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rax, [r8+rax+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+3A0h+var_391]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "mov     r14, rdi", "cmp     sil, 2Eh ; '.'", "jz      short loc_4B82"], ["mov~r9,0", "mov~eax,0", "mov~rcx,r9", "mov~rdi,name", "scasb~<TAG>,", "not~rcx", "mov~r8,rcx", "mov~rcx,r9", "mov~rdi,[rbp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rax,[r8+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "mov~r14,rdi", "cmp~sil,0", "jz~FOO"]], [0, 0, 135, 0, 0, 2, 0, 1, 7, 11, 0.010015490625500775, ["mov     rcx, [rbp+dirname]", "jmp     short loc_4B97"], ["mov~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 8, 12, 0.0001602478500080124, ["jmp     short loc_4B79"], ["jmp~FOO"]], [5, 0, 10, 1, 1, 18, 1, 2, 24, 5, 0.014155226750707761, ["mov     rax, [f+40h]", "movzx   edx, al", "lea     rsi, [rbp+buf]; buf", "shr     rax, 0Ch", "mov     rdi, rax", "mov     dil, 0", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rdx, rcx", "not     rdx", "mov     rcx, rdx", "sub     rcx, 1", "cmp     cs:minor_device_number_width, ecx", "jge     short loc_5394"], ["mov~rax,[f+0]", "movzx~edx,al", "lea~rsi,[rbp+0]", "shr~rax,0", "mov~rdi,rax", "mov~dil,0", "or~edi,edx", "call~FOO", "mov~rdi,rax", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "mov~rcx,rdx", "sub~rcx,0", "cmp~<TAG>,ecx", "jge~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 24, 6, 0.0, ["mov     cs:major_device_number_width, ecx"], ["mov~<TAG>,ecx"]], [0, 0, 9, 0, 0, 1, 0, 0, 25, 5, 0.0, ["mov     cs:minor_device_number_width, ecx"], ["mov~<TAG>,ecx"]], [1, 0, 137, 0, 0, 4, 0, 1, 7, 9, 0.012125420650606272, ["mov     rax, full_name", "mov     rcx, [rbp+dirname]", "cmp     byte ptr [rcx+1], 0", "jz      short loc_4BC1"], ["mov~rax,full_name", "mov~rcx,[rbp+0]", "cmp~[yte ptr [rcx+0],0", "jz~FOO"]], [0, 0, 135, 0, 0, 1, 0, 0, 9, 11, 0.0, ["mov     rdi, rax"], ["mov~rdi,rax"]], [1, 0, 135, 1, 0, 6, 1, 1, 8, 10, 0.015837829175791893, ["add     rcx, 1", "lea     rax, [rdi+1]", "mov     [rax-1], sil", "movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_4B94"], ["add~rcx,0", "lea~rax,[rdi+0]", "mov~[rax-1]+0],sil", "movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [2, 0, 68, 0, 2, 11, 1, 3, 16, 11, 0.010950269750547513, ["mov     edx, 5; category", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, r13b; serious", "mov     rdx, r14; file", "mov     rsi, rax; message", "call    file_failure", "mov     rax, [f+8]", "test    rax, rax", "jz      short loc_51EB"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,r13b", "mov~rdx,r14", "mov~rsi,rax", "call~FOO", "mov~rax,[f+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 59, 0, 1, 4, 0, 2, 18, 11, 0.0015757705250787886, ["mov     rdi, r15; string", "call    xstrdup", "mov     [rbp+type], rax", "jmp     loc_50E7"], ["mov~rdi,r15", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 171, 0, 0, 2, 0, 1, 7, 7, 0.007148834642024109, ["cmp     cs:print_with_color, 0", "jz      short loc_49C9"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 11, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     f", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~f", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 170, 0, 1, 4, 1, 2, 8, 7, 0.008119224400405961, ["mov     edi, 13h; type", "call    is_colored", "test    al, al", "jnz     short loc_49E1"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 81, 0, 0, 3, 0, 1, 16, 13, 0.018722290475936116, ["mov     rax, cs:unsupported_device_10320", "cmp     [f+18h], rax", "jz      short loc_4FF4"], ["mov~rax,<TAG>", "cmp~[f+0],rax", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 0, 0, 9, 9, 0.01666577640083329, ["cmp     [rbp+dirname], rcx", "jnb     short loc_4BC1"], ["cmp~[rbp+0],rcx", "jnb~FOO"]], [1, 0, 131, 0, 0, 2, 0, 1, 10, 9, 0.0014155226750707762, ["cmp     byte ptr [rcx-1], 2Fh ; '/'", "jz      short loc_4BC1"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [0, 1, 169, 0, 1, 4, 1, 2, 9, 7, 0.0011751509000587576, ["mov     edi, 12h; type", "call    is_colored", "test    al, al", "jnz     short loc_49E1"], ["mov~edi,<STR>", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 130, 0, 0, 2, 0, 0, 11, 9, 0.0, ["mov     byte ptr [rax], 2Fh ; '/'", "lea     rax, [rdi+2]"], ["mov~<TAG>,0", "lea~rax,[rdi+0]"]], [0, 0, 129, 0, 0, 2, 1, 1, 8, 8, 0.03717750120185888, ["test    dl, dl", "jz      short loc_4BDA"], ["test~dl,dl", "jz~FOO"]], [0, 0, 128, 0, 0, 1, 0, 0, 9, 9, 0.0014956466000747824, ["mov     rcx, r12"], ["mov~rcx,r12"]], [1, 0, 168, 0, 1, 4, 1, 2, 10, 7, 0.0014956466000747824, ["mov     edi, 14h; type", "call    is_colored", "test    al, al", "jnz     short loc_49E1"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 128, 2, 0, 6, 1, 1, 10, 8, 0.003391912825169596, ["add     rcx, 1", "add     rax, 1", "mov     [rax-1], dl", "movzx   edx, byte ptr [rcx]", "test    dl, dl", "jnz     short loc_4BC8"], ["add~rcx,0", "add~rax,0", "mov~[rax-1]+0],dl", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]]], "func_feature": [63, 65, 228, 2, 195, 316, 3, 761, 0.02239, 49, 19], "succs": [[15], [0, 4], [20, 29], [2, 29], [14], [152, 4], [4, 15], [155, 4], [4, 167], [91, 4], [68], [10, 69], [42, 23], [28, 12], [168, 34], [14], [40], [16, 18], [16], [16], [120], [68], [105, 21], [42], [137, 66], [24, 166], [60, 38], [26, 76], [42], [120], [149, 150], [32, 30], [30], [30, 31], [49, 58], [34], [38], [36, 69], [161, 46], [37, 38], [43, 52], [40, 17], [57], [128], [164], [44, 95], [161, 50], [56, 71], [71, 47], [57, 58], [161, 55], [80, 79], [51, 92], [73], [88, 53], [60], [71], [77, 54], [57, 59], [57, 13], [11, 61], [161, 11], [117, 159], [136, 62], [171, 85], [64], [64, 65], [170, 75], [170, 67], [81, 161], [82, 83], [108, 70], [186, 78], [72, 74], [72, 130], [170], [109, 39], [145, 54], [52], [45, 181], [121, 79], [68, 86], [108, 87], [82], [45], [137], [161, 22], [108], [89, 102], [101], [8, 7], [90, 155], [98, 3], [121, 92], [92], [129, 182], [127, 119], [96, 153], [120], [143], [99, 143], [73, 106], [101], [], [184, 103], [161, 123], [73], [122, 154], [154, 107], [68], [68], [112, 68], [68], [114, 68], [68], [116, 68], [68, 157], [68], [100, 68], [172, 125], [136, 63], [120], [154], [161, 124], [161, 132], [5, 135], [125, 5], [125], [52], [131, 140], [128], [140], [161, 110], [141, 126], [97, 133], [5], [144, 138], [134, 142], [144], [27, 183], [164], [172, 126], [147, 134], [113, 158], [48, 115], [80, 94], [126], [148, 134], [134], [163, 93], [149, 93], [5], [9, 6], [161, 139], [118, 159], [35, 167], [60, 76], [162], [176, 175], [162, 118], [172, 151], [160, 1], [118], [93], [33, 93], [93], [], [104], [104, 169], [104], [104], [], [178, 173], [180], [173], [177, 111], [175], [111], [174, 191], [180], [179, 187], [84, 165], [164], [185, 156], [], [161, 189], [41, 19], [188, 191], [190, 191], [193, 161], [191], [192, 146], [194], [161, 156], [194, 146]], "fname": "gobble_file", "n_num": 195}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 6, 0, 1, 4, 1, 2, 0, 0, 0.1923076923076923, ["lea     rdi, failed_strcoll; env", "call    __setjmp", "test    eax, eax", "jz      short loc_5642"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 1, 3, 0, 2, 1, 1, 0.22435897435897434, ["call    initialize_ordering_vector", "cmp     cs:sort_type_0, 0FFFFFFFFh", "jz      loc_569A"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 3, 2, 0.05128205128205128, ["mov     eax, 0"], ["mov~eax,0"]], [1, 1, 12, 1, 1, 7, 0, 1, 1, 4, 0.02564102564102564, ["mov     rdi, cs:sorted_file; ptr", "call    free", "mov     ecx, 0", "mov     edx, 18h", "mov     rax, rdx", "mul     rbx", "jo      short loc_5617"], ["mov~rdi,<TAG>", "call~FOO", "mov~ecx,0", "mov~edx,<STR>", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [1, 0, 13, 1, 0, 7, 0, 0, 0, 2, 0.0, ["push    rbx", "mov     rbx, cs:cwd_n_used", "mov     rax, rbx", "shr     rax, 1", "add     rax, rbx", "cmp     rax, cs:sorted_file_alloc", "jbe     short loc_55E0"], ["push~rbx", "mov~rbx,<TAG>", "mov~rax,rbx", "shr~rax,0", "add~rax,rbx", "cmp~rax,<TAG>", "jbe~FOO"]], [1, 0, 8, 1, 1, 7, 0, 1, 3, 2, 0.15384615384615385, ["lea     rdi, [rbx+rbx*2]", "shl     rdi, 3; n", "call    xmalloc", "mov     cs:sorted_file, rax", "mov     rax, cs:cwd_n_used", "lea     rax, [rax+rax*2]", "mov     cs:sorted_file_alloc, rax"], ["lea~rdi,<TAG>", "shl~rdi,0", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 2, 0, 1, 3, 0, 2, 4, 2, 0.01282051282051282, ["call    initialize_ordering_vector", "mov     eax, 1", "jmp     short loc_5647"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.08974358974358974, ["cmp     cs:sort_type_0, 3", "jz      short loc_5623"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 10, 0, 0, 5, 2, 1, 2, 3, 0.14102564102564102, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "test    cl, 1", "jnz     short loc_561E"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "test~cl,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 4, 0.0, ["mov     ecx, 1", "jmp     short loc_55A9"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [3, 0, 1, 0, 1, 16, 1, 1, 4, 1, 0.02564102564102564, ["mov     ecx, cs:sort_type_0", "cmp     ecx, 4", "mov     edx, 0", "cmovz   edx, cs:time_type_0", "movzx   esi, cs:directories_first", "and     eax, 1", "lea     edx, [rcx+rdx]", "lea     rdx, [rax+rdx*2]", "movzx   eax, cs:sort_reverse", "lea     rax, [rax+rdx*2]", "lea     rdx, [rsi+rax*2]", "lea     rax, sort_functions", "mov     rdx, [rax+rdx*8]; cmp", "mov     rsi, cs:cwd_n_used; n", "mov     rdi, cs:sorted_file; base", "call    mpsort"], ["mov~ecx,<TAG>", "cmp~ecx,0", "mov~edx,0", "cmovz~edx,<TAG>", "movzx~esi,<TAG>", "and~eax,0", "lea~edx,<TAG>", "lea~rdx,<TAG>", "movzx~eax,<TAG>", "lea~rax,<TAG>", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rdx,<TAG>", "mov~rsi,<TAG>", "mov~rdi,<TAG>", "call~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___10745; \"sort_files\"", "mov     edx, 0EEAh; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aSortTypeSortVe; \"sort_type != sort_version\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,<STR>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [8, 4, 14, 0, 14, 17, 3, 65, 0.06548, 12, 3], "succs": [[2, 7], [0, 10], [11], [8, 9], [1, 3], [1], [11], [12, 6], [5, 13], [8], [], [10], [], []], "fname": "sort_files", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 2, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, a", "mov     rbp, b", "call    ___errno_location", "mov     dword ptr [diff], 0", "mov     rsi, b; s2", "mov     rdi, a; s1", "call    _strcoll", "add     rsp, 8", "pop     a", "pop     b", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~<TAG>,0", "mov~rsi,b", "mov~rdi,a", "call~FOO", "add~rsp,0", "pop~a", "pop~b", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 28, 14, 0.0, 0, 2], "succs": [[]], "fname": "xstrcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [b+48h]", "mov     rdx, [a+48h]", "cmp     rcx, rdx", "jl      short loc_56EF"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, -1, 0.16666666666666666, ["mov     eax, 1", "jle     short loc_56DB"], ["mov~eax,0", "jle~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; b", "mov     a, [a]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 3, 0, 5, 4, 0, 15, 0.03333, 0, 2], "succs": [[2, 3], [], [1, 4], [], []], "fname": "xstrcoll_size", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [a+48h]", "mov     rdx, [b+48h]", "cmp     rcx, rdx", "jl      short loc_5722"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, -1, 0.16666666666666666, ["mov     eax, 1", "jle     short loc_570B"], ["mov~eax,0", "jle~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 0, 2, 1, 7, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 3, 0, 5, 4, 0, 16, 0.03333, 0, 2], "succs": [[2, 3], [], [1, 4], [], []], "fname": "rev_xstrcoll_size", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     a", "pop     b", "pop     a_is_dir", "retn"], ["pop~a", "pop~b", "pop~a_is_dir", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, -1, 0.07638888888888888, ["mov     eax, 1", "jl      short loc_575C"], ["mov~eax,0", "jl~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 4, -1, 0.0, ["mov     rsi, [b+0]; b", "mov     rdi, [a]; a", "call    xstrcoll", "jmp     short loc_575C"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.020833333333333332, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_575C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.006944444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_575C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, 2, 0.020833333333333332, ["mov     eax, 1", "test    dl, dl", "jz      short loc_5761"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 9, 0, 2, 12, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_574D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.020833333333333332, ["test    r12b, r12b", "jnz     short loc_5783"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 1, 0.16666666666666666, ["mov     b_is_dir, [b+48h]", "mov     rcx, [a+48h]", "cmp     rcx, rdx", "jg      short loc_578A"], ["mov~b_is_dir,[b+0]", "mov~rcx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.14583333333333331, ["cmp     r12b, 1", "jz      short loc_5761"], ["cmp~r12b,0", "jz~FOO"]]], "func_feature": [3, 2, 12, 0, 10, 15, 0, 37, 0.04583, 0, 0], "succs": [[], [0, 2], [0], [0], [0], [0, 8], [9, 7], [9, 3], [1, 4], [8, 5]], "fname": "xstrcoll_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 5, 0, 0, 3, 1, 1, 0, 0, 0.020833333333333332, ["mov     eax, 1", "test    dl, dl", "jz      short loc_57CA"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.14583333333333331, ["cmp     r12b, 1", "jz      short loc_57CA"], ["cmp~r12b,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     a_is_dir", "retn"], ["pop~b", "pop~a", "pop~a_is_dir", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, -1, 0.07638888888888888, ["mov     eax, 1", "jl      short loc_57C5"], ["mov~eax,0", "jl~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 4, -1, 0.0, ["mov     rsi, [a+0]; b", "mov     rdi, [b]; a", "call    xstrcoll", "jmp     short loc_57C5"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.020833333333333332, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_57C5"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.006944444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_57C5"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 2, 12, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_57B6"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.020833333333333332, ["test    r12b, r12b", "jnz     short loc_57EC"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 1, 0.16666666666666666, ["mov     b_is_dir, [a+48h]", "mov     rcx, [b+48h]", "cmp     rcx, rdx", "jg      short loc_57F3"], ["mov~b_is_dir,[a+0]", "mov~rcx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]]], "func_feature": [3, 2, 12, 0, 10, 15, 0, 37, 0.04583, 0, 0], "succs": [[9, 2], [0, 9], [], [2, 4], [2], [2], [2], [8, 1], [1, 5], [3, 6]], "fname": "rev_xstrcoll_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; b", "mov     a, [a]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "xstrcoll_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "rev_xstrcoll_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 2, 12, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     r12, b", "call    is_linked_directory", "mov     ebx, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_5848"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~r12,b", "call~FOO", "mov~ebx,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 0, 1, 0.04444444444444444, ["test    bl, bl", "jnz     short loc_586A"], ["test~bl,bl", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 0, -1, 0.027777777777777776, ["mov     rsi, [b]; b", "mov     rdi, [a+0]; a", "call    xstrcoll", "jmp     short loc_5856"], ["mov~rsi,<TAG>", "mov~rdi,[a+0]", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, -1, 0.15555555555555553, ["cmp     bl, 1", "jz      short loc_585B"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 0, -1, 0.027777777777777776, ["mov     eax, 1", "test    dl, dl", "jz      short loc_585B"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.04444444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_5856"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     a_is_dir", "pop     a", "pop     b", "retn"], ["pop~a_is_dir", "pop~a", "pop~b", "retn"]]], "func_feature": [3, 2, 9, 0, 7, 10, 0, 29, 0.04286, 0, 0], "succs": [[1, 3], [3, 5], [6], [2, 4], [2, 6], [6], []], "fname": "xstrcoll_df_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.027777777777777776, ["mov     eax, 1", "test    dl, dl", "jz      short loc_58A7"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.15555555555555553, ["cmp     bl, 1", "jz      short loc_58A7"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     a_is_dir", "pop     b", "pop     a", "retn"], ["pop~a_is_dir", "pop~b", "pop~a", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 2, -1, 0.027777777777777776, ["mov     rsi, [a]; b", "mov     rdi, [b+0]; a", "call    xstrcoll", "jmp     short loc_58A2"], ["mov~rsi,<TAG>", "mov~rdi,[b+0]", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.04444444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_58A2"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 2, 12, 0, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, a", "mov     rbp, b", "call    is_linked_directory", "mov     ebx, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_5894"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,a", "mov~rbp,b", "call~FOO", "mov~ebx,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 1, 0.04444444444444444, ["test    bl, bl", "jnz     short loc_58B6"], ["test~bl,bl", "jnz~FOO"]]], "func_feature": [3, 2, 9, 0, 7, 10, 0, 29, 0.04286, 0, 0], "succs": [[2, 3], [0, 3], [], [2], [2], [1, 6], [1, 4]], "fname": "rev_xstrcoll_df_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.04444444444444444, ["test    r12b, r12b", "jnz     short loc_5902"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 6, 0, 2, 12, 0, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_58E2"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     a_is_dir", "retn"], ["pop~b", "pop~a", "pop~a_is_dir", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.027777777777777776, ["mov     eax, 1", "test    dl, dl", "jnz     short loc_58FD"], ["mov~eax,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.04444444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_58FD"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 2, -1, 0.027777777777777776, ["mov     rsi, [a+0]; s2", "mov     rdi, [b]; s1", "call    filevercmp"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.15555555555555553, ["cmp     r12b, 1", "jz      short loc_58F1"], ["cmp~r12b,0", "jz~FOO"]]], "func_feature": [3, 2, 8, 0, 7, 10, 0, 28, 0.04286, 0, 0], "succs": [[4, 6], [0, 6], [], [2, 5], [2], [2], [3, 5]], "fname": "rev_xstrcoll_df_version", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "call    filevercmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "rev_xstrcoll_version", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.04444444444444444, ["test    r12b, r12b", "jnz     short loc_5965"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 6, 0, 2, 12, 0, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_5945"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     a", "pop     b", "pop     a_is_dir", "retn"], ["pop~a", "pop~b", "pop~a_is_dir", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.027777777777777776, ["mov     eax, 1", "test    dl, dl", "jnz     short loc_5960"], ["mov~eax,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.04444444444444444, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_5960"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 2, -1, 0.027777777777777776, ["mov     rsi, [b+0]; s2", "mov     rdi, [a]; s1", "call    filevercmp"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.15555555555555553, ["cmp     r12b, 1", "jz      short loc_5954"], ["cmp~r12b,0", "jz~FOO"]]], "func_feature": [3, 2, 8, 0, 7, 10, 0, 28, 0.04286, 0, 0], "succs": [[4, 6], [0, 6], [], [2, 5], [2], [2], [3, 5]], "fname": "xstrcoll_df_version", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    filevercmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "xstrcoll_version", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.031746031746031744, ["test    r12b, r12b", "jnz     short loc_5A09"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 7, 0, 2, 12, 0, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_59A5"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 3, -1, 0.0, ["mov     rsi, [a+0]; b", "mov     rdi, [b]; a", "call    xstrcoll", "jmp     short loc_59B4"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 3, 17, 3, 4, 2, -1, 0.11507936507936506, ["mov     esi, 2Eh ; '.'; c", "mov     rdi, [b]; s", "call    _strrchr", "mov     a_is_dir, rax", "mov     esi, 2Eh ; '.'; c", "mov     rdi, [a+0]; s", "call    _strrchr", "test    rax, rax", "lea     rdx, a8+6; \"\"", "cmovz   rax, rdx", "test    r12, r12", "cmovz   r12, rdx", "mov     rsi, rax; b", "mov     rdi, r12; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_59B4"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "mov~a_is_dir,rax", "mov~esi,0", "mov~rdi,[a+0]", "call~FOO", "test~rax,rax", "lea~rdx,<TAG>", "cmovz~rax,rdx", "test~r12,r12", "cmovz~r12,rdx", "mov~rsi,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, -1, 0.1587301587301587, ["cmp     r12b, 1", "jz      short loc_59B9"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.031746031746031744, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_59B4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.019841269841269837, ["mov     eax, 1", "test    dl, dl", "jz      short loc_59B9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     r12", "retn"], ["pop~b", "pop~a", "pop~r12", "retn"]]], "func_feature": [6, 5, 13, 0, 8, 12, 0, 46, 0.04464, 1, 0], "succs": [[4, 5], [0, 4], [7], [2, 7], [3, 6], [7], [3, 7], []], "fname": "rev_xstrcoll_df_extension", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0.0, ["test    bl, bl", "setnz   al", "pop     c", "retn"], ["test~bl,bl", "setnz~al", "pop~c", "retn"]], [0, 0, 5, 0, 1, 6, 1, 2, 0, 2, 0.0, ["push    rbx", "movzx   edi, dil; stat_ok", "call    get_type_indicator", "mov     ebx, eax", "test    al, al", "jz      short loc_5A43"], ["push~rbx", "movzx~edi,dil", "call~FOO", "mov~ebx,eax", "test~al,al", "jz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 3, -1, 0.15000000000000002, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [0, 0, 4, 0, 0, 4, 0, 0, 1, 1, 0.15000000000000002, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     c, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_5A4A"], ["mov~rdi,<TAG>", "mov~c,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 2, 0, 0.07500000000000001, ["movzx   esi, bl; int", "call    ___overflow", "jmp     short loc_5A3B"], ["movzx~esi,bl", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 2, -1, 0.07500000000000001, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     [rax], bl"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,bl"]]], "func_feature": [2, 2, 4, 0, 6, 7, 3, 21, 0.075, 2, 1], "succs": [[], [0, 3], [0], [4, 5], [2], [2]], "fname": "print_type_indicator", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 12, 0, 0, 3, 0, 0, 0, 0, 0.07007575757575758, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 9"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 12, 0, 0, 4, 0, 0, 3, 6, 0.22348484848484848, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_5A6C"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 12, 1, 0, 7, 0, 0, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, from", "mov     rbp, to", "cmp     from, to", "jb      short loc_5A9D"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,from", "mov~rbp,to", "cmp~from,to", "jb~FOO"]], [2, 0, 12, 2, 0, 9, 0, 0, 2, 2, 0.26515151515151514, ["mov     rax, to", "mov     edx, 0", "div     rcx", "mov     rsi, rax", "lea     rax, [from+1]", "mov     edx, 0", "div     rcx", "cmp     rsi, rax", "jbe     short loc_5A78"], ["mov~rax,to", "mov~edx,0", "div~,rcx", "mov~rsi,rax", "lea~rax,[from+0]", "mov~edx,0", "div~,rcx", "cmp~rsi,rax", "jbe~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 1, 2, 0.5530303030303031, ["mov     rcx, cs:tabsize", "test    rcx, rcx", "jz      short loc_5A78"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 0, 2, 1, 0.24621212121212122, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_5AFE"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 1, 12, 0, 1, 3, 0, 2, 3, 0, 0.08143939393939394, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_5A94"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "pop     from", "pop     to", "retn"], ["add~rsp,0", "pop~from", "pop~to", "retn"]], [0, 0, 12, 0, 0, 2, 0, 0, 5, 3, 0.5530303030303031, ["cmp     to, from", "jbe     short loc_5A65"], ["cmp~to,from", "jbe~FOO"]], [0, 1, 12, 0, 0, 3, 0, 0, 3, 5, 0.08143939393939394, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [1, 0, 12, 1, 0, 1, 0, 0, 4, 4, 0.24621212121212122, ["add     from, 1"], ["add~from,0"]], [1, 0, 12, 0, 1, 3, 0, 2, 4, 5, 0.07007575757575758, ["mov     esi, 9; int", "call    ___overflow", "jmp     short loc_5AE4"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 12, 3, 0, 7, 0, 1, 5, 4, 0.22348484848484848, ["mov     rcx, cs:tabsize", "mov     rax, from", "mov     edx, 0", "div     rcx", "add     from, rcx", "sub     rbx, rdx", "jmp     short loc_5A98"], ["mov~rcx,<TAG>", "mov~rax,from", "mov~edx,0", "div~,rcx", "add~from,rcx", "sub~rbx,rdx", "jmp~FOO"]]], "func_feature": [2, 1, 6, 0, 13, 18, 2, 53, 0.20105, 2, 8], "succs": [[12], [0, 11], [4, 7], [1, 5], [3, 5], [9, 6], [10], [], [4, 7], [10], [8], [12], [8]], "fname": "indent", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     displayed_width", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~displayed_width", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 7, 1, 1, 6, 1, 0.02855924978687127, ["mov     rax, [rsp+88h+inbuf]", "mov     rsi, [rsp+88h+buf]", "mov     [rax], rsi", "mov     rax, len", "mov     rsi, [rsp+88h+var_40]", "xor     rsi, fs:28h", "jnz     loc_5F55"], ["mov~rax,[rsp+0]", "mov~rsi,<TAG>", "mov~<TAG>,rsi", "mov~rax,len", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 11, 0, 1, 5, 0, 1, 5, 5, 0.012894288150042626, ["mov     edx, 0; flags", "mov     rsi, len; nbytes", "mov     rdi, [rsp+88h+buf]; string", "call    mbsnwidth", "movsxd  rbp, eax"], ["mov~edx,0", "mov~rsi,len", "mov~rdi,<TAG>", "call~FOO", "movsxd~rbp,eax"]], [1, 0, 17, 0, 1, 3, 0, 2, 4, 6, 0.022058823529411766, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_5EBC"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [2, 0, 29, 2, 0, 5, 0, 1, 13, 8, 0.011295822676896846, ["add     p, bytes", "mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "lea     rbx, [rbx+1]", "jmp     short loc_5DAC"], ["add~p,bytes", "mov~<TAG>,0", "add~displayed_width,0", "lea~rbx,[rbx+0]", "jmp~FOO"]], [1, 0, 29, 0, 1, 7, 2, 1, 12, 9, 0.0319693094629156, ["test    bytes, bytes", "mov     eax, 1", "cmovz   bytes, rax", "mov     edi, [rsp+88h+wc]; c", "call    _wcwidth", "test    eax, eax", "jns     short loc_5D87"], ["test~bytes,bytes", "mov~eax,0", "cmovz~bytes,rax", "mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 29, 1, 0, 5, 0, 1, 12, 7, 0.0040494458653026425, ["mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "lea     rbx, [rbx+1]", "mov     r12, plimit", "jmp     short loc_5D3D"], ["mov~<TAG>,0", "add~displayed_width,0", "lea~rbx,[rbx+0]", "mov~r12,plimit", "jmp~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 11, 8, 0.04369138959931799, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      short loc_5D77"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 4, 3, 0.018222506393861894, ["cmp     cs:align_variable_outer_quotes, 0", "jz      short loc_5EF5"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 3, 4, 0.0392156862745098, ["cmp     [rsp+88h+width], 0", "jz      loc_5F02"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 60, 1, 0, 11, 0, 1, 3, 6, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     rax, len", "setnz   al", "movzx   eax, al", "jmp     short loc_5C24"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~rax,len", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 61, 0, 0, 5, 0, 1, 2, 6, 0.026641091219096334, ["mov     eax, 1", "mov     rsi, [rsp+88h+buf]", "movzx   esi, byte ptr [rsi]", "cmp     [name+0], sil", "jz      short loc_5C66"], ["mov~eax,0", "mov~rsi,<TAG>", "movzx~esi,<TAG>", "cmp~[name+0],sil", "jz~FOO"]], [0, 0, 29, 0, 0, 2, 0, 0, 13, 10, 0.01300085251491901, ["lea     rsi, [p+bytes]", "mov     rdx, q"], ["lea~rsi,<TAG>", "mov~rdx,q"]], [1, 0, 7, 0, 0, 2, 0, 1, 6, 3, 0.0026641091219096334, ["cmp     [rsp+88h+quoted], 0", "jnz     loc_5E31"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, 4, 0.009697357203751065, ["cmp     cs:cwd_some_quoted, 1", "jnz     loc_5E31"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 0, 5, 6, 0.029411764705882353, ["mov     options, [rsp+88h+buf]", "lea     rbx, [r14+len]", "cmp     plimit, r14", "jbe     short loc_5EE6"], ["mov~options,<TAG>", "lea~rbx,<TAG>", "cmp~plimit,r14", "jbe~FOO"]], [1, 0, 39, 0, 1, 3, 0, 1, 4, 7, 0.08248081841432225, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_5E82"], ["call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 10, 8, 0.0023444160272804776, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "ja      short loc_5D5B"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 9, 8, 0.00980392156862745, ["cmp     al, 5Fh ; '_'", "jle     short loc_5D2F"], ["cmp~al,0", "jle~FOO"]], [1, 0, 63, 0, 1, 9, 0, 1, 1, 7, 0.0010656436487638534, ["mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "mov     rsi, bufsize; buffersize", "mov     rdi, [rsp+88h+buf]; buffer", "call    quotearg_buffer", "mov     needs_general_quoting, rax", "cmp     bufsize, len", "jbe     short loc_5C3C"], ["mov~r8,options", "mov~rcx,0", "mov~rdx,name", "mov~rsi,bufsize", "mov~rdi,<TAG>", "call~FOO", "mov~needs_general_quoting,rax", "cmp~bufsize,len", "jbe~FOO"]], [1, 1, 69, 1, 1, 27, 3, 2, 0, 7, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     [rsp+88h+inbuf], inbuf_0", "mov     r15, bufsize", "mov     r13, name", "mov     r14, options", "mov     ebx, r8d", "mov     [rsp+88h+width], width_0", "mov     rax, [rsp+88h+pad]", "mov     [rsp+88h+var_68], rax", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, [inbuf_0]", "mov     [rsp+88h+buf], rax", "mov     inbuf_0, options; o", "call    get_quoting_style", "cmp     eax, 2", "setbe   r12b", "and     r12b, cs:qmark_funny_chars", "test    ebx, ebx", "jnz     loc_5BF1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],inbuf_0", "mov~r15,bufsize", "mov~r13,name", "mov~r14,options", "mov~ebx,r8d", "mov~[rsp+0],width_0", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~inbuf_0,options", "call~FOO", "cmp~eax,0", "setbe~r12b", "and~r12b,<TAG>", "test~ebx,ebx", "jnz~FOO"]], [2, 0, 42, 0, 0, 9, 0, 0, 2, 9, 0.015345268542199489, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     needs_general_quoting, rcx", "not     rbx", "lea     rbp, [rbx-1]", "cmp     len, bufsize", "jnb     loc_5C8C"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~needs_general_quoting,rcx", "not~rbx", "lea~rbp,[rbx-1]+0]", "cmp~len,bufsize", "jnb~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 1, 6, 0.013213981244671782, ["test    r12b, r12b", "jz      loc_5C9E"], ["test~r12b,r12b", "jz~FOO"]], [4, 0, 13, 1, 0, 8, 1, 1, 7, 6, 0.004901960784313725, ["movzx   eax, byte ptr [p]", "movzx   eax, word ptr [rcx+rax*2]", "and     ax, 4000h", "cmp     ax, 1", "sbb     displayed_width, 0FFFFFFFFFFFFFFFFh", "add     p, 1", "cmp     plimit, p", "jnz     short loc_5CFE"], ["movzx~eax,<TAG>", "movzx~eax,<TAG>", "and~ax,0", "cmp~ax,0", "sbb~displayed_width,0", "add~p,0", "cmp~plimit,p", "jnz~FOO"]], [1, 0, 13, 0, 1, 4, 0, 1, 6, 7, 0.004688832054560955, ["call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rdx, r15", "mov     ebp, 0"], ["call~FOO", "mov~rcx,<TAG>", "mov~rdx,r15", "mov~ebp,0"]], [0, 0, 41, 0, 1, 4, 0, 2, 3, 9, 0.0, ["lea     rdi, [len+1]; n", "call    xmalloc", "mov     [rsp+88h+buf], rax", "jmp     loc_5B9D"], ["lea~rdi,[len+0]", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 8, 5, 0.004688832054560955, ["jmp     loc_5ED0"], ["jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 4, 0.06265984654731457, ["cmp     cs:align_variable_outer_quotes, 0", "jz      short loc_5E31"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 9, 5, 0.0076726342710997444, ["mov     plimit, len", "jmp     loc_5E13"], ["mov~plimit,len", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, 5, 0.0159846547314578, ["mov     plimit, len", "jmp     loc_5E13"], ["mov~plimit,len", "jmp~FOO"]], [0, 0, 9, 1, 0, 1, 0, 0, 7, 5, 0.04219948849104859, ["sub     rbx, [rsp+88h+buf]"], ["sub~rbx,<TAG>"]], [1, 0, 13, 1, 0, 3, 0, 1, 8, 6, 0.00937766410912191, ["add     p, 1", "cmp     plimit, p", "jz      short loc_5EB4"], ["add~p,0", "cmp~plimit,p", "jz~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 7, 7, 0.011082693947144074, ["movzx   esi, byte ptr [p]", "mov     rcx, [rax]", "test    byte ptr [rcx+rsi*2+1], 40h", "jnz     short loc_5E99"], ["movzx~esi,<TAG>", "mov~rcx,<TAG>", "test~[yte ptr [rcx+0],0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 8, 7, 0.0, ["mov     byte ptr [p], 3Fh ; '?'", "jmp     short loc_5E99"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 8, 9, 0.058823529411764705, ["cmp     al, 41h ; 'A'", "jl      short loc_5D5B"], ["cmp~al,0", "jl~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 7, 9, 0.08631713554987212, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jg      short loc_5D1F"], ["movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [1, 0, 62, 0, 2, 11, 0, 3, 2, 7, 0.0, ["lea     bufsize, [len+1]", "mov     rdi, r15; n", "call    xmalloc", "mov     [rsp+88h+buf], rax", "mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "mov     rsi, r15; buffersize", "mov     rdi, buf_0; buffer", "call    quotearg_buffer", "jmp     short loc_5C12"], ["lea~bufsize,[len+0]", "mov~rdi,r15", "call~FOO", "mov~<TAG>,rax", "mov~r8,options", "mov~rcx,0", "mov~rdx,name", "mov~rsi,r15", "mov~rdi,buf_0", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 8, 4, 0.009164535379369138, ["cmp     cs:cwd_some_quoted, 1", "jnz     short loc_5E31"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 9, 9, 0.050724637681159424, ["mov     qword ptr [rsp+88h+mbstate.__count], 0", "jmp     short loc_5DB8"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 29, 0, 0, 3, 0, 0, 9, 8, 0.0023444160272804776, ["lea     edx, [rax-20h]", "cmp     dl, 3", "jbe     short loc_5D2F"], ["lea~edx,[rax-20h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, 2, 0.0009590792838874681, ["mov     rax, [rsp+88h+var_68]", "mov     byte ptr [rax], 1", "jmp     loc_5E50"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 13, 0, 1, 3, 0, 2, 6, 8, 0.011082693947144074, ["call    ___ctype_b_loc", "mov     rdx, r14", "jmp     short loc_5EA2"], ["call~FOO", "mov~rdx,r14", "jmp~FOO"]], [1, 0, 40, 0, 1, 5, 0, 1, 3, 8, 0.03154305200341006, ["lea     rdx, [len+1]; n", "mov     rsi, r13; src", "mov     rdi, [rsp+88h+buf]; dest", "call    _memcpy", "mov     [rsp+88h+quoted], 0"], ["lea~rdx,[len+0]", "mov~rsi,r13", "mov~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0"]], [1, 0, 59, 0, 0, 4, 2, 1, 3, 5, 0.05051150895140665, ["and     eax, 1", "mov     [rsp+88h+quoted], al", "test    r12b, r12b", "jz      loc_5CC2"], ["and~eax,0", "mov~[rsp+0],al", "test~r12b,r12b", "jz~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 9, 3, 0.0005328218243819267, ["mov     eax, 1", "cmp     [rsp+88h+quoted], 0", "jz      short loc_5E36"], ["mov~eax,0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 6, 3, 0.04656862745098039, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 4, 0.010656436487638534, ["cmp     cs:cwd_some_quoted, 1", "jnz     loc_5E31"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 8, 4, 0.003942881500426257, ["cmp     [rsp+88h+quoted], 0", "jnz     loc_5E31"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, 5, 0.0023444160272804776, ["mov     ebp, 0", "jmp     short loc_5ED0"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 4, 0, 0, 5, 6, 0.008525149190110827, ["mov     r15, [rsp+88h+buf]", "lea     needs_further_quoting, [r15+len]", "cmp     plimit, r15", "jbe     loc_5EEE"], ["mov~r15,<TAG>", "lea~needs_further_quoting,<TAG>", "cmp~plimit,r15", "jbe~FOO"]], [0, 0, 29, 0, 1, 4, 1, 2, 14, 7, 0.027706734867860187, ["mov     rdi, r14; ps", "call    _mbsinit", "test    eax, eax", "jnz     short loc_5D3D"], ["mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 29, 2, 0, 3, 0, 0, 15, 8, 0.011295822676896846, ["add     rbx, bytes", "cdqe", "add     displayed_width, w"], ["add~rbx,bytes", "cdqe~", "add~displayed_width,w"]], [0, 0, 40, 0, 0, 2, 0, 1, 4, 8, 0.036231884057971016, ["mov     rbp, len", "jmp     loc_5BB2"], ["mov~rbp,len", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 0, 0, 10, 6, 0.07097186700767263, ["cmp     p, plimit", "jnb     loc_5E0F"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 10, 0, 0, 2, 0, 0, 6, 6, 0.004688832054560955, ["mov     rbx, [rsp+88h+buf]", "mov     ebp, 0"], ["mov~rbx,<TAG>", "mov~ebp,0"]], [2, 0, 29, 2, 0, 4, 0, 0, 9, 7, 0.023657289002557546, ["add     p, 1", "mov     [rbx], al", "add     displayed_width, 1", "lea     rbx, [rbx+1]"], ["add~p,0", "mov~<TAG>,al", "add~displayed_width,0", "lea~rbx,[rbx+0]"]], [1, 0, 29, 0, 0, 2, 0, 1, 8, 8, 0.019820971867007674, ["cmp     al, 25h ; '%'", "jge     short loc_5D2F"], ["cmp~al,0", "jge~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 5, 7, 0.056265984654731455, ["mov     rax, [rsp+88h+buf]", "lea     r15, [rax+len]", "cmp     plimit, rax", "jbe     loc_5E06"], ["mov~rax,<TAG>", "lea~r15,<TAG>", "cmp~plimit,rax", "jbe~FOO"]], [2, 0, 24, 0, 0, 9, 0, 0, 2, 5, 0.010230179028132991, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     needs_general_quoting, [rsi-1]", "mov     [rsp+88h+quoted], r12b", "mov     [rsp+88h+buf], buf_0"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~needs_general_quoting,[rsi-1]+0]", "mov~[rsp+0],r12b", "mov~<TAG>,buf_0"]], [3, 0, 29, 2, 0, 5, 0, 1, 11, 7, 0.007885763000852515, ["add     p, 1", "mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "lea     rbx, [rbx+1]", "jmp     short loc_5D3D"], ["add~p,0", "mov~<TAG>,0", "add~displayed_width,0", "lea~rbx,[rbx+0]", "jmp~FOO"]], [2, 0, 4, 0, 0, 5, 1, 1, 7, 2, 0.036231884057971016, ["mov     rdi, [rsp+88h+var_68]", "mov     [rdi], al", "and     byte ptr [rdi], 1", "cmp     [rsp+88h+width], 0", "jz      short loc_5E50"], ["mov~rdi,[rsp+0]", "mov~<TAG>,al", "and~<TAG>,0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 29, 0, 0, 7, 0, 1, 6, 10, 0.05264279624893436, ["mov     rbx, rax", "mov     needs_further_quoting, rax", "mov     ebp, 0", "lea     options, [rsp+88h+mbstate]", "lea     rax, [rsp+88h+wc]", "mov     [rsp+88h+pwc], rax", "jmp     loc_5D46"], ["mov~rbx,rax", "mov~needs_further_quoting,rax", "mov~ebp,0", "lea~options,[rsp+0]", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 8, 2, 0.006713554987212276, ["mov     rax, [rsp+88h+width]", "mov     [rax], displayed_width"], ["mov~rax,[rsp+0]", "mov~<TAG>,displayed_width"]], [1, 0, 4, 0, 0, 3, 0, 1, 7, 3, 0.00777919863597613, ["mov     rax, [rsp+88h+var_68]", "mov     byte ptr [rax], 0", "jmp     loc_5E48"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 9, 3, 0.000639386189258312, ["mov     rax, [rsp+88h+var_68]", "mov     byte ptr [rax], 1", "jmp     loc_5E48"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 29, 1, 1, 9, 0, 2, 10, 8, 0.05924978687127025, ["mov     rdx, plimit", "sub     rdx, p; n", "mov     rcx, r14; ps", "mov     rsi, p; s", "mov     rdi, [rsp+88h+pwc]; pwc", "call    rpl_mbrtowc", "mov     r13, rax", "cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_5D66"], ["mov~rdx,plimit", "sub~rdx,p", "mov~rcx,r14", "mov~rsi,p", "mov~rdi,[rsp+0]", "call~FOO", "mov~r13,rax", "cmp~bytes,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, 4, 0.02355072463768116, ["cmp     cs:align_variable_outer_quotes, 0", "jnz     short loc_5F30"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 5, 2, 0.00639386189258312, ["mov     rax, [rsp+88h+var_68]", "mov     byte ptr [rax], 0", "jmp     loc_5E50"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 29, 2, 0, 6, 0, 1, 14, 9, 0.012148337595907928, ["add     p, 1", "add     q, 1", "movzx   ecx, byte ptr [p-1]", "mov     [q-1], cl", "cmp     rsi, p", "jnz     short loc_5D8E"], ["add~p,0", "add~q,0", "movzx~ecx,[yte ptr [p-1]+0]", "mov~[q-1]+0],cl", "cmp~rsi,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [15, 13, 63, 2, 70, 106, 2, 290, 0.02041, 4, 18], "succs": [[], [0, 69], [66], [49, 2], [50], [12, 4], [53], [5, 6], [67, 14], [8, 3], [43], [10, 43], [68], [40, 45], [13, 45], [41, 29], [57, 15], [38, 55], [17, 55], [11, 36], [19, 22], [25, 42], [58, 21], [26, 23], [23], [42], [66], [37, 45], [27], [27], [27], [32, 28], [33, 31], [31], [18, 38], [56, 34], [11], [44, 45], [65], [38, 55], [1], [32], [16], [9, 52], [60, 45], [60], [45, 47], [64, 45], [66], [48, 24], [65, 53], [50], [16], [35, 30], [30], [53], [39, 55], [61, 54], [9], [53], [1, 62], [35], [1], [62], [62], [59, 7], [46, 63], [1], [51, 68], []], "fname": "quote_name_buf", "n_num": 70}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 1, 2, 0.05, ["lea     rax, [rsp+2038h+smallbuf]", "cmp     rdi, rax", "jz      short loc_5FC6"], ["lea~rax,[rsp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 2, 1, 0, 5, 1, 1, 1, 1, 0.30000000000000004, ["movzx   eax, [rsp+2038h+pad]", "add     rax, [rsp+2038h+width]", "mov     rdx, [rsp+2038h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5FEC"], ["movzx~eax,[rsp+0]", "add~rax,[rsp+0]", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [4, 0, 5, 3, 1, 22, 1, 2, 0, 2, 0.0, ["push    rbx", "sub     rsp, 2030h", "mov     rbx, name", "mov     rcx, options; options", "mov     r8d, edx; needs_general_quoting", "mov     rax, fs:28h", "mov     [rsp+2038h+var_10], rax", "xor     eax, eax", "lea     rax, [rsp+2038h+smallbuf]", "mov     [rsp+2038h+buf], rax", "lea     name, [rsp+2038h+buf]; inbuf", "sub     rsp, 8", "lea     rax, [rsp+2040h+pad]", "push    rax; pad", "lea     r9, [rsp+2048h+width]; width", "mov     needs_general_quoting, name; name", "mov     esi, 2000h; bufsize", "call    quote_name_buf", "mov     rdi, [rsp+2048h+buf]; ptr", "add     rsp, 10h", "cmp     rdi, name", "jz      short loc_5FC6"], ["push~rbx", "sub~rsp,0", "mov~rbx,name", "mov~rcx,options", "mov~r8d,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~name,[rsp+0]", "sub~rsp,0", "lea~rax,[rsp+0]", "push~rax", "lea~r9,[rsp+0]", "mov~needs_general_quoting,name", "mov~esi,0", "call~FOO", "mov~rdi,[rsp+0]", "add~rsp,0", "cmp~rdi,name", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 2030h", "pop     name", "retn"], ["add~rsp,0", "pop~name", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 6, 1, 6, 7, 1, 35, 0.05833, 1, 5], "succs": [[2], [0, 2], [4, 5], [1, 2], [], []], "fname": "quote_name_width", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 6, 0, 0, 8, 0, 1, 0, 0, 0.015810276679841896, ["mov     rdi, [f+0B0h]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "jmp     loc_60FF"], ["mov~rdi,[f+0]", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 5, 0.06521739130434782, ["cmp     cs:format_0, 4", "jz      short loc_6164"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 3, 6, 0.04150197628458498, ["cmp     cs:format_0, 4", "jnz     short loc_60D4"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 2, 4, 0.10573122529644267, ["cmp     cs:print_block_size, 0", "jz      short loc_60E2"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 3, 1, 1, 8, 1, 1, 5, 2, 0.0, ["mov     edx, [f+0A8h]; type", "mov     esi, [f+30h]; mode", "movzx   edi, byte ptr [f+0B8h]; stat_ok", "call    get_type_indicator", "test    al, al", "setnz   al", "movzx   eax, al", "add     len, rax"], ["mov~edx,[f+0]", "mov~esi,[f+0]", "movzx~edi,[yte ptr [f+0]", "call~FOO", "test~al,al", "setnz~al", "movzx~eax,al", "add~len,rax"]], [1, 0, 4, 1, 1, 7, 0, 2, 4, 2, 0.15019762845849802, ["mov     edx, [f+0C4h]; needs_general_quoting", "mov     rsi, cs:filename_quoting_options; options", "mov     rdi, [f+0]; name", "call    quote_name_width", "add     len, rax", "cmp     cs:indicator_style_0, 0", "jz      short loc_6144"], ["mov~edx,[f+0]", "mov~rsi,<TAG>", "mov~rdi,[f+0]", "call~FOO", "add~len,rax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 4, 6, 0.023715415019762844, ["lea     rdi, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jnz     short loc_60B1"], ["lea~rdi,<TAG>", "cmp~[yte ptr [f+0],0", "jnz~FOO"]], [2, 0, 23, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rbp, f", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "cmp     cs:print_inode, 0", "jz      short loc_6071"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,f", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 6, 0.015810276679841896, ["cmp     cs:format_0, 4", "jz      short loc_604C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 4, 3, 0.024703557312252964, ["jmp     loc_6102"], ["jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.1867588932806324, ["cmp     cs:print_scontext, 0", "jz      short loc_6102"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 1, 0, 1, 0, 0, 5, 3, 0.029644268774703556, ["add     len, rcx"], ["add~len,rcx"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.08300395256916995, ["mov     rax, rbx", "mov     rsi, [rsp+2B8h+var_20]", "xor     rsi, fs:28h", "jnz     short loc_6187"], ["mov~rax,rbx", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [2, 0, 11, 0, 0, 7, 0, 1, 5, 5, 0.043478260869565216, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "jmp     short loc_60DF"], ["mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "jmp~FOO"]], [0, 1, 12, 0, 1, 8, 0, 2, 5, 6, 0.0, ["mov     rsi, rsp; buf", "mov     rdi, [f+58h]; n", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "mov     edx, cs:human_output_opts; opts", "call    human_readable", "mov     rdi, rax", "jmp     short loc_6098"], ["mov~rsi,rsp", "mov~rdi,[f+0]", "mov~r8,<TAG>", "mov~ecx,<STR>", "mov~edx,<TAG>", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 2, 5, 0.028656126482213436, ["movsxd  rbx, cs:inode_number_width", "add     rbx, 1", "cmp     cs:print_block_size, 0", "jnz     loc_60D4"], ["movsxd~rbx,<TAG>", "add~rbx,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.03260869565217391, ["cmp     cs:print_scontext, 0", "jnz     loc_60F4"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 11, 1, 0, 2, 0, 0, 3, 5, 0.03952569169960474, ["movsxd  rcx, cs:block_size_width", "add     rcx, 1"], ["movsxd~rcx,<TAG>", "add~rcx,0"]], [0, 0, 10, 1, 0, 1, 0, 0, 4, 4, 0.10474308300395256, ["add     len, rcx"], ["add~len,rcx"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     f", "retn"], ["add~rsp,0", "pop~rbx", "pop~f", "retn"]], [2, 0, 17, 0, 1, 10, 0, 2, 2, 5, 0.02075098814229249, ["mov     rsi, rsp; buf", "mov     f, [f+20h]; i", "call    umaxtostr", "mov     rdi, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rbx, rcx", "jmp     short loc_6076"], ["mov~rsi,rsp", "mov~f,[f+0]", "call~FOO", "mov~rdi,rax", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 17, 0, 0, 1, 0, 0, 1, 5, 0.02569169960474308, ["mov     ebx, 0"], ["mov~ebx,0"]], [1, 0, 6, 1, 0, 2, 0, 0, 4, 4, 0.023715415019762844, ["movsxd  rcx, cs:scontext_width", "add     rcx, 1"], ["movsxd~rcx,<TAG>", "add~rcx,0"]]], "func_feature": [5, 3, 21, 1, 24, 33, 5, 93, 0.04422, 13, 9], "succs": [[11], [0, 23], [18, 6], [2, 10], [13], [4, 13], [14, 15], [8, 22], [16, 21], [5], [1, 5], [5], [], [20, 12], [19], [14], [17, 18], [9, 23], [19], [10], [], [3], [3], [11]], "fname": "length_of_file_name_and_frills", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 33, 1, 1, 6, 0, 2, 0, 0, 0.06395348837209303, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     cs:column_info_0, rax", "mov     r12, cs:max_idx", "jmp     loc_6217"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~<TAG>,rax", "mov~r12,<TAG>", "jmp~FOO"]], [2, 0, 35, 0, 0, 5, 2, 1, 3, 11, 0.05073995771670191, ["test    rax, rax", "mov     eax, 1", "cmovs   rsi, rax", "test    sil, 1", "jnz     short loc_6392"], ["test~rax,rax", "mov~eax,0", "cmovs~rsi,rax", "test~sil,0", "jnz~FOO"]], [1, 1, 3, 1, 0, 3, 0, 1, 7, 1, 0.0, ["sub     rax, 18h", "cmp     byte ptr [rax+18h], 0", "jz      short loc_649A"], ["sub~rax,<STR>", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 6, 1, 0.02061310782241015, ["sub     cols, 1", "cmp     cols, 1", "jz      short loc_64AE"], ["sub~cols,0", "cmp~cols,0", "jz~FOO"]], [2, 0, 21, 1, 0, 5, 0, 0, 3, 4, 0.02061310782241015, ["mov     rdx, [rsi+10h]", "mov     qword ptr [rdx+rax*8], 3", "add     rax, 1", "cmp     rax, rcx", "jbe     short loc_62F7"], ["mov~rdx,[rsi+0]", "mov~<TAG>,0", "add~rax,0", "cmp~rax,rcx", "jbe~FOO"]], [2, 0, 21, 0, 0, 6, 0, 0, 2, 5, 0.02167019027484144, ["mov     rsi, rdi", "mov     byte ptr [rdi], 1", "lea     r8, [rcx+1]", "lea     rax, [r8+r8*2]", "mov     [rdi+8], rax", "mov     eax, 0"], ["mov~rsi,rdi", "mov~<TAG>,0", "lea~r8,[rcx+0]", "lea~rax,<TAG>", "mov~[rdi+0],rax", "mov~eax,0"]], [0, 0, 16, 0, 0, 2, 1, 1, 7, 6, 0.06712473572938689, ["test    bpl, bpl", "jz      short loc_63AB"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 6, 4, 0.10147991543340382, ["mov     r8, rsi", "cmp     byte ptr [rsi], 0", "jz      short loc_63BF"], ["mov~r8,rsi", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 33, 1, 1, 5, 0, 1, 4, 10, 0.06395348837209303, ["lea     r12, [max_cols+max_cols]", "lea     rsi, [r12+max_cols]", "shl     rsi, 4; n", "call    xrealloc", "mov     cs:column_info_0, rax"], ["lea~r12,<TAG>", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~<TAG>,rax"]], [2, 0, 35, 0, 0, 5, 2, 1, 3, 11, 0.05073995771670191, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "test    cl, 1", "jnz     loc_633B"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "test~cl,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 25, 0, 1, 5, 0, 1, 9, 5, 0.18657505285412262, ["lea     rdi, ds:0[rcx*8]; n", "call    xmalloc", "mov     rdx, cs:column_info_alloc_11173", "cmp     r12, rdx", "jbe     short loc_62C8"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,<TAG>", "cmp~r12,rdx", "jbe~FOO"]], [2, 0, 27, 0, 0, 5, 2, 1, 8, 6, 0.18816067653276958, ["test    rax, rax", "mov     eax, 1", "cmovs   rsi, rax", "test    sil, 1", "jnz     loc_63A6"], ["test~rax,rax", "mov~eax,0", "cmovs~rsi,rax", "test~sil,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 9, 0, 0, 9, 4, 0.03699788583509514, ["cmp     idx, i", "setnz   al", "movzx   eax, al", "lea     rax, [name_length+rax*2]", "mov     rdx, [r8+10h]", "lea     idx, [rdx+idx*8]", "mov     rdx, [rdi]", "cmp     rdx, real_length", "jnb     short loc_63BF"], ["cmp~idx,i", "setnz~al", "movzx~eax,al", "lea~rax,<TAG>", "mov~rdx,[r8+0]", "lea~idx,<TAG>", "mov~rdx,<TAG>", "cmp~rdx,real_length", "jnb~FOO"]], [1, 0, 16, 1, 0, 6, 0, 1, 8, 5, 0.019556025369978858, ["lea     rdi, [i+1]", "mov     rax, filesno", "mov     edx, 0", "div     rdi", "mov     rdi, rdx", "jmp     short loc_63FA"], ["lea~rdi,[i+0]", "mov~rax,filesno", "mov~edx,0", "div~,rdi", "mov~rdi,rdx", "jmp~FOO"]], [2, 0, 16, 2, 0, 9, 0, 0, 8, 5, 0.019556025369978858, ["lea     rax, [r11+i]", "lea     r13, [i+1]", "mov     edx, 0", "div     r13", "mov     rdi, rax", "mov     rax, filesno", "mov     edx, 0", "div     rdi", "mov     rdi, rax"], ["lea~rax,<TAG>", "lea~r13,[i+0]", "mov~edx,0", "div~,r13", "mov~rdi,rax", "mov~rax,filesno", "mov~edx,0", "div~,rdi", "mov~rdi,rax"]], [0, 1, 21, 1, 0, 4, 0, 1, 4, 3, 0.019556025369978858, ["add     rdi, 18h", "mov     rcx, r8", "cmp     max_cols, r8", "jnz     short loc_62E0"], ["add~rdi,<STR>", "mov~rcx,r8", "cmp~max_cols,r8", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 32, 2, 0, 8, 0, 1, 5, 9, 0.15750528541226216, ["mov     rax, cs:column_info_alloc_11173", "mov     rdi, r12", "sub     rdi, rax", "lea     rsi, [r12+rax+1]", "mov     rcx, rdi", "imul    rcx, rsi", "cmp     r12, rsi", "ja      loc_6397"], ["mov~rax,<TAG>", "mov~rdi,r12", "sub~rdi,rax", "lea~rsi,[r12+0]", "mov~rcx,rdi", "imul~rcx,rsi", "cmp~r12,rsi", "ja~FOO"]], [1, 0, 31, 1, 0, 5, 0, 1, 6, 8, 0.16279069767441862, ["mov     rax, rcx", "mov     edx, 0", "div     rdi", "cmp     rsi, rax", "jnz     loc_6397"], ["mov~rax,rcx", "mov~edx,0", "div~,rdi", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 2, 0.20665961945031713, ["cmp     cs:cwd_n_used, 0", "jz      loc_6479"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 21, 0, 0, 4, 1, 1, 1, 3, 0.21088794926004228, ["mov     rdi, cs:column_info_0", "mov     ecx, 0", "test    max_cols, max_cols", "jz      short loc_6318"], ["mov~rdi,<TAG>", "mov~ecx,0", "test~max_cols,max_cols", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 8, 7, 0.0, ["mov     esi, 1", "jmp     loc_6266"], ["mov~esi,0", "jmp~FOO"]], [3, 0, 29, 1, 0, 6, 0, 0, 7, 7, 0.17230443974630022, ["shr     rcx, 1", "mov     esi, 0", "mov     edx, 8", "mov     rax, rdx", "mul     rcx", "jo      loc_639C"], ["shr~rcx,0", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.039112050739957716, ["lea     rax, [rdx+rax-30h]"], ["lea~rax,[rdx+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 3, 4, 0.12684989429175475, ["mov     r12d, 0", "jmp     loc_6442"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 24, 0, 0, 5, 0, 0, 10, 6, 0.008456659619450317, ["lea     rsi, [rdx+rdx*2]", "mov     rcx, cs:column_info_0", "lea     rcx, [rcx+rsi*8+10h]", "lea     rdx, ds:8[rdx*8]", "lea     rsi, ds:8[r12*8]"], ["lea~rsi,<TAG>", "mov~rcx,<TAG>", "lea~rcx,[rcx+0]", "lea~rdx,<TAG>", "lea~rsi,<TAG>"]], [1, 0, 36, 0, 0, 2, 0, 1, 3, 12, 0.0, ["mov     ecx, 1", "jmp     loc_61EA"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 37, 1, 0, 6, 0, 0, 2, 12, 0.015856236786469344, ["mov     by_columns, cs:column_info_0; p", "mov     ecx, 0", "mov     edx, 30h ; '0'", "mov     rax, rdx", "mul     max_cols", "jo      loc_6331"], ["mov~by_columns,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,max_cols", "jo~FOO"]], [1, 0, 44, 1, 0, 12, 0, 0, 0, 4, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebp, edi", "mov     rcx, cs:max_idx", "cmp     cs:cwd_n_used, rcx", "mov     rbx, rcx", "cmovbe  rbx, cs:cwd_n_used", "cmp     max_cols, cs:column_info_alloc_11173", "jbe     loc_62CF"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,edi", "mov~rcx,<TAG>", "cmp~<TAG>,rcx", "mov~rbx,rcx", "cmovbe~rbx,<TAG>", "cmp~max_cols,<TAG>", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 16, 2, 0, 9, 0, 1, 10, 4, 0.0, ["mov     r13, [r8+8]", "sub     r13, rdx", "mov     rdx, r13", "add     rdx, real_length", "mov     [r8+8], rdx", "mov     [rdi], real_length", "cmp     [r8+8], r10", "setb    byte ptr [r8]", "jmp     short loc_63BF"], ["mov~r13,[r8+0]", "sub~r13,rdx", "mov~rdx,r13", "add~rdx,real_length", "mov~[r8+0],rdx", "mov~<TAG>,real_length", "cmp~[r8+0],r10", "setb~<TAG>", "jmp~FOO"]], [1, 0, 16, 1, 0, 3, 0, 0, 5, 2, 0.039640591966173366, ["add     filesno, 1", "cmp     cs:cwd_n_used, filesno", "jbe     short loc_6479"], ["add~filesno,0", "cmp~<TAG>,filesno", "jbe~FOO"]], [1, 1, 16, 2, 0, 4, 0, 1, 7, 3, 0.0412262156448203, ["add     i, 1", "add     rsi, 18h", "cmp     max_cols, i", "jz      short loc_6435"], ["add~i,0", "add~rsi,<STR>", "cmp~max_cols,i", "jz~FOO"]], [0, 0, 16, 0, 1, 6, 1, 2, 4, 3, 0.13002114164904863, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+filesno*8]; f", "call    length_of_file_name_and_frills", "mov     r9, rax", "test    max_cols, max_cols", "jz      short loc_6435"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~r9,rax", "test~max_cols,max_cols", "jz~FOO"]], [1, 1, 24, 3, 0, 6, 0, 1, 11, 5, 0.012156448202959831, ["mov     [rcx], rax", "add     rax, rdx", "add     rcx, 18h", "add     rdx, 8", "cmp     rdx, rsi", "jnz     short loc_62B5"], ["mov~<TAG>,rax", "add~rax,rdx", "add~rcx,<STR>", "add~rdx,0", "cmp~rdx,rsi", "jnz~FOO"]], [1, 0, 43, 0, 0, 4, 0, 0, 1, 13, 0.011099365750528542, ["mov     rax, rcx", "shr     rax, 1", "cmp     max_cols, rax", "jnb     loc_6340"], ["mov~rax,rcx", "shr~rax,0", "cmp~max_cols,rax", "jnb~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 10, 4, 0.19767441860465118, ["mov     cs:column_info_alloc_11173, r12"], ["mov~<TAG>,r12"]], [1, 0, 16, 0, 0, 5, 0, 1, 5, 5, 0.09989429175475688, ["mov     r11, cs:cwd_n_used", "mov     r10, cs:line_length", "mov     rsi, cs:column_info_0", "mov     ecx, 0", "jmp     loc_63CC"], ["mov~r11,<TAG>", "mov~r10,<TAG>", "mov~rsi,<TAG>", "mov~ecx,0", "jmp~FOO"]], [1, 1, 37, 1, 0, 6, 0, 0, 2, 12, 0.015856236786469344, ["mov     by_columns, cs:column_info_0; p", "mov     esi, 0", "mov     edx, 18h", "mov     rax, rdx", "mul     rcx", "jo      short loc_638B"], ["mov~by_columns,<TAG>", "mov~esi,0", "mov~edx,<STR>", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 3, 12, 0.0, ["mov     esi, 1", "jmp     short loc_6359"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, 0, 0.0, ["mov     rax, cols", "add     rsp, 8", "pop     cols", "pop     by_columns", "pop     r12", "pop     r13", "retn"], ["mov~rax,cols", "add~rsp,0", "pop~cols", "pop~by_columns", "pop~r12", "pop~r13", "retn"]], [1, 0, 5, 0, 0, 2, 0, 0, 3, 1, 0.09249471458773785, ["cmp     max_cols, 1", "jbe     short loc_64AE"], ["cmp~max_cols,0", "jbe~FOO"]], [2, 0, 4, 1, 0, 5, 0, 1, 4, 1, 0.05708245243128964, ["mov     rdx, cs:column_info_0", "lea     rax, [max_cols+max_cols*2]", "shl     rax, 3", "cmp     byte ptr [rdx+rax-18h], 0", "jnz     short loc_64AE"], ["mov~rdx,<TAG>", "lea~rax,<TAG>", "shl~rax,0", "cmp~[yte ptr [rdx+0],0", "jnz~FOO"]]], "func_feature": [8, 9, 32, 0, 45, 66, 2, 200, 0.06064, 7, 26], "succs": [[18], [0, 10], [42, 3], [2, 42], [16, 4], [4], [14, 15], [34, 6], [18], [8, 31], [], [27, 38], [25, 11], [32, 34], [13], [13], [20, 5], [], [17, 19], [17, 23], [26, 43], [20, 5], [12], [12, 22], [3], [], [35], [36], [9], [9, 28], [37, 21], [], [34], [43, 35], [33, 7], [33, 39], [36, 38], [40, 29], [21], [7], [41, 1], [1], [], [42, 44], [24, 42]], "fname": "calculate_columns", "n_num": 45}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 1, 0, 3, 0, 1, 0, 0, 0.1208791208791209, ["add     rbp, 4", "cmp     rbp, rbx", "jz      short loc_66A1"], ["add~rbp,0", "cmp~rbp,rbx", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 5, 3, 0.15384615384615385, ["mov     r12d, [rbp+0]", "mov     esi, r12d; signo", "mov     rdi, r13; set", "call    _sigismember", "test    eax, eax", "jz      short loc_663A"], ["mov~r12d,[rbp+0]", "mov~esi,r12d", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 6, 0, 1, 9, 0, 2, 6, 3, 0.0, ["cmp     r12d, 14h", "mov     rax, r14", "cmovz   rax, r15", "mov     qword ptr [rsp+0E8h+act.__sigaction_handler], rax", "mov     edx, 0; oact", "mov     rsi, [rsp+0E8h+var_E0]; act", "mov     edi, r12d; sig", "call    _sigaction", "jmp     short loc_663A"], ["cmp~r12d,0", "mov~rax,r14", "cmovz~rax,r15", "mov~[word ptr [rsp+0],rax", "mov~edx,0", "mov~rsi,[rsp+0]", "mov~edi,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 3, 6, 0.0, ["mov     esi, r12d; signo", "lea     rdi, caught_signals; set", "call    _sigaddset", "jmp     short loc_6510"], ["mov~esi,r12d", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 10, 0, 1, 7, 0, 2, 2, 6, 0.08791208791208792, ["mov     r12d, [rbx]", "mov     rdx, r13; oact", "mov     esi, 0; act", "mov     edi, r12d; sig", "call    _sigaction", "cmp     qword ptr [rsp+0E8h+act.__sigaction_handler], 1", "jz      short loc_6510"], ["mov~r12d,<TAG>", "mov~rdx,r13", "mov~esi,0", "mov~edi,r12d", "call~FOO", "cmp~[word ptr [rsp+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.13186813186813187, ["mov     rax, [rsp+0E8h+var_40]", "xor     rax, fs:28h", "jnz     short loc_66C6"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 6, 1, 0, 3, 0, 1, 2, 2, 0.05494505494505495, ["add     rbx, 4", "cmp     rbx, r13", "jz      short loc_66A1"], ["add~rbx,0", "cmp~rbx,r13", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.03296703296703297, ["mov     ebp, [rbx]", "mov     esi, ebp; signo", "mov     rdi, r12; set", "call    _sigismember", "test    eax, eax", "jz      short loc_667A"], ["mov~ebp,<TAG>", "mov~esi,ebp", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 2, 3, 0.0, ["mov     esi, 0; handler", "mov     edi, ebp; sig", "call    _signal", "jmp     short loc_667A"], ["mov~esi,0", "mov~edi,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 1, 6, 0, 2, 1, 7, 0.038461538461538464, ["mov     init, r12; set", "call    _sigemptyset", "mov     rbp, rbx", "mov     r14, r13", "lea     r13, [rsp+0E8h+act]", "jmp     short loc_6519"], ["mov~init,r12", "call~FOO", "mov~rbp,rbx", "mov~r14,r13", "lea~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 14, 1, 0, 15, 2, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "lea     rbx, sig_9937", "lea     r13, [rbx+30h]", "lea     r12, caught_signals", "test    dil, dil", "jz      loc_6683"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rbx,<TAG>", "lea~r13,[rbx+0]", "lea~r12,<TAG>", "test~dil,dil", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, 5, 0.14285714285714288, ["add     rbx, 4", "cmp     rbx, r14", "jz      short loc_6545"], ["add~rbx,0", "cmp~rbx,r14", "jz~FOO"]], [1, 0, 6, 0, 0, 39, 0, 1, 4, 4, 0.14835164835164835, ["mov     rax, cs:caught_signals.__val", "mov     rdx, cs:caught_signals.__val+8", "mov     [rsp+0E8h+act.sa_mask.__val], rax", "mov     [rsp+0E8h+act.sa_mask.__val+8], rdx", "mov     rax, cs:caught_signals.__val+10h", "mov     rdx, cs:caught_signals.__val+18h", "mov     [rsp+0E8h+act.sa_mask.__val+10h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+18h], rdx", "mov     rax, cs:caught_signals.__val+20h", "mov     rdx, cs:caught_signals.__val+28h", "mov     [rsp+0E8h+act.sa_mask.__val+20h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+28h], rdx", "mov     rax, cs:caught_signals.__val+30h", "mov     rdx, cs:caught_signals.__val+38h", "mov     [rsp+0E8h+act.sa_mask.__val+30h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+38h], rdx", "mov     rax, cs:caught_signals.__val+40h", "mov     rdx, cs:caught_signals.__val+48h", "mov     [rsp+0E8h+act.sa_mask.__val+40h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+48h], rdx", "mov     rax, cs:caught_signals.__val+50h", "mov     rdx, cs:caught_signals.__val+58h", "mov     [rsp+0E8h+act.sa_mask.__val+50h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+58h], rdx", "mov     rax, cs:caught_signals.__val+60h", "mov     rdx, cs:caught_signals.__val+68h", "mov     [rsp+0E8h+act.sa_mask.__val+60h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+68h], rdx", "mov     rax, cs:caught_signals.__val+70h", "mov     rdx, cs:caught_signals.__val+78h", "mov     [rsp+0E8h+act.sa_mask.__val+70h], rax", "mov     [rsp+0E8h+act.sa_mask.__val+78h], rdx", "mov     [rsp+0E8h+act.sa_flags], 10000000h", "lea     r13, caught_signals", "lea     r15, stophandler", "lea     r14, sighandler", "lea     rax, [rsp+0E8h+act]", "mov     [rsp+0E8h+var_E0], rax", "jmp     short loc_6643"], ["mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~[rsp+0],0", "lea~r13,<TAG>", "lea~r15,<TAG>", "lea~r14,<TAG>", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]]], "func_feature": [8, 5, 21, 2, 15, 21, 2, 117, 0.06081, 20, 5], "succs": [[1, 6], [0, 2], [0], [13], [3, 13], [], [5, 7], [], [9, 6], [8, 10], [8], [4], [9, 11], [4, 14], [1]], "fname": "signal_setup", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.0, ["mov     edi, 1; init", "call    signal_setup", "jmp     short loc_6707"], ["mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 1, 5, 1, 1, 1, 0, 0.16666666666666666, ["mov     cs:used_color, 1", "mov     edi, 1; fd", "call    _tcgetpgrp", "test    eax, eax", "jns     short loc_670E"], ["mov~<TAG>,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 0, 0, 1, 7, 0, 1, 1, 0, 0.0, ["mov     rdi, [ind+8]; ptr", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 1; n", "mov     rsi, [ind]; size", "call    _fwrite_unlocked", "pop     ind", "retn"], ["mov~rdi,[ind+0]", "mov~rcx,<TAG>", "mov~edx,0", "mov~rsi,<TAG>", "call~FOO", "pop~ind", "retn"]], [0, 0, 1, 0, 1, 2, 0, 2, 2, 0, 0.16666666666666666, ["call    prep_non_filename_text", "jmp     short loc_66D8"], ["call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, ind", "cmp     cs:used_color, 0", "jz      short loc_66F2"], ["push~rbx", "mov~rbx,ind", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [4, 1, 7, 0, 5, 6, 13, 21, 0.06667, 2, 0], "succs": [[3], [0, 3], [], [2], [1, 2]], "fname": "put_indicator", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 3, 7, 0, 4, 1, 0, 0.08333333333333333, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_21F090; ind", "call    put_indicator", "lea     rdi, stru_21F070; ind", "call    put_indicator", "jmp     short loc_6734"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, -1, 0.08333333333333333, ["lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 0, 1, 0.0, ["sub     rsp, 8", "cmp     cs:ind.string, 0", "jz      short loc_6739"], ["sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [4, 0, 6, 0, 4, 4, 2, 14, 0.04167, 5, 2], "succs": [[], [0], [0], [1, 2]], "fname": "prep_non_filename_text", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.16666666666666666, ["sub     rsp, 8", "mov     edi, 4; type", "call    is_colored", "test    al, al", "jnz     short loc_677F"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:print_with_color, 0", "jz      short locret_67A5"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 3, 7, 0, 4, 2, -1, 0.0, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_21F0A0; ind", "call    put_indicator", "lea     rdi, stru_21F070; ind", "call    put_indicator", "jmp     short loc_677A"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [4, 1, 7, 0, 5, 5, 2, 17, 0.03333, 4, 2], "succs": [[2, 3], [0, 4], [3], [], []], "fname": "set_normal_color", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 2, 7, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_21F070; ind", "call    put_indicator", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 7, 0.0, 2, 2], "succs": [[]], "fname": "restore_default_color", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 11, 0, 1, 2, 0, 2, 0, 0, 0.0, ["call    restore_default_color", "jmp     loc_67F6"], ["call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 7, 0.24545454545454545, ["cmp     cs:used_color, 0", "jnz     loc_687E"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 11, 0, 2, 10, 1, 3, 3, 6, 0.2818181818181818, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "mov     rdx, rbp; oset", "lea     rsi, caught_signals; set", "mov     edi, 0; how", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      short loc_6888"], ["mov~rdi,<TAG>", "call~FOO", "mov~rdx,rbp", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 1, 0, 8, 1, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+var_s88], rax", "xor     eax, eax", "mov     rbp, rsp", "jmp     short loc_684D"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbp,rsp", "jmp~FOO"]], [2, 0, 11, 0, 2, 6, 0, 2, 5, 4, 0.33636363636363636, ["mov     edi, ebx; sig", "call    _raise", "mov     edx, 0; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask"], ["mov~edi,ebx", "call~FOO", "mov~edx,0", "mov~rsi,rbp", "mov~edi,0", "call~FOO"]], [1, 0, 11, 0, 1, 4, 0, 2, 4, 5, 0.11363636363636363, ["mov     esi, 0; handler", "mov     edi, ebx; sig", "call    _signal", "jmp     short loc_6834"], ["mov~esi,0", "mov~edi,ebx", "call~FOO", "jmp~FOO"]], [2, 0, 11, 1, 0, 3, 0, 0, 4, 5, 0.11363636363636363, ["sub     eax, 1", "mov     cs:stop_signal_count, eax", "mov     ebx, 13h"], ["sub~eax,0", "mov~<TAG>,eax", "mov~ebx,0"]], [0, 0, 11, 0, 0, 3, 1, 1, 1, 3, 0.45454545454545453, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_67E9"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 2, 0.21818181818181817, ["mov     eax, cs:stop_signal_count", "test    eax, eax", "jnz     short loc_67E9"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.16363636363636364, ["mov     rax, [rsp+var_s88]", "xor     rax, fs:28h", "jnz     short loc_6896"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [7, 5, 15, 1, 12, 15, 4, 49, 0.16061, 6, 3], "succs": [[2], [0, 2], [5, 6], [7], [7], [4], [4], [8, 1], [1, 9], [10, 11], [], []], "fname": "process_signals", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08888888888888889, ["cmp     rax, __value", "jz      loc_6955"], ["cmp~rax,__value", "jz~FOO"]], [1, 0, 10, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rax, [__o+18h]", "mov     rbp, [__o+10h]", "mov     r12, rax", "sub     r12, rbp", "mov     rdx, r12", "shr     rdx, 3", "test    n_pos, n_pos", "jz      loc_6950"], ["push~r12", "push~rbp", "push~rbx", "mov~rax,[__o+0]", "mov~rbp,[__o+0]", "mov~r12,rax", "sub~r12,rbp", "mov~rdx,r12", "shr~rdx,0", "test~n_pos,n_pos", "jz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 5, 1, 0.22222222222222224, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_695E"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [3, 0, 5, 1, 1, 8, 0, 2, 4, 2, 0.2555555555555556, ["mov     rdx, [rbx]", "mov     rsi, r12", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "add     rbx, 8", "cmp     rbx, rbp", "jnz     short loc_6916"], ["mov~rdx,<TAG>", "mov~rsi,r12", "mov~edi,0", "mov~eax,0", "call~FOO", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 6, 0, 0.03888888888888889, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_6950"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 7, 3, 0, 12, 1, 0, 2, 4, 0.22222222222222224, ["mov     n_pos, [__o1+30h]", "add     rax, rdx", "not     rdx", "and     rax, rdx", "mov     [__o1+18h], rax", "mov     rdx, [__o1+8]", "mov     rcx, [__o1+20h]", "sub     rax, rdx", "mov     rbx, rcx", "sub     rbx, rdx", "cmp     rax, rbx", "jbe     short loc_68F1"], ["mov~n_pos,[__o1+0]", "add~rax,rdx", "not~rdx", "and~rax,rdx", "mov~[__o1+0],rax", "mov~rdx,[__o1+0]", "mov~rcx,[__o1+0]", "sub~rax,rdx", "mov~rbx,rcx", "sub~rbx,rdx", "cmp~rax,rbx", "jbe~FOO"]], [1, 0, 8, 0, 0, 2, 1, 1, 2, 5, 0.0, ["or      byte ptr [__o1+50h], 2", "jmp     loc_68C6"], ["or~[yte ptr [__o1+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 3, 4, 0.0, ["mov     [__o1+18h], rcx"], ["mov~[__o1+0],rcx"]], [1, 0, 5, 1, 1, 8, 1, 1, 3, 3, 0.26666666666666666, ["mov     rax, [__o1+18h]", "mov     [__o1+10h], rax", "mov     __o1, cs:stdout@@GLIBC_2_2_5; stream", "call    _fputs_unlocked", "mov     rbx, __value", "and     r12, 0FFFFFFFFFFFFFFF8h", "add     __value, r12", "lea     r12, aLu_0; \" %lu\""], ["mov~rax,[__o1+0]", "mov~[__o1+0],rax", "mov~__o1,<TAG>", "call~FOO", "mov~rbx,__value", "and~r12,0", "add~__value,r12", "lea~r12,<TAG>"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 3, 0, 0, 6, -1, 0.03888888888888889, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]]], "func_feature": [3, 4, 8, 0, 11, 15, 2, 58, 0.10303, 2, 6], "succs": [[5, 6], [0, 9], [10, 4], [2, 3], [9], [8, 7], [5], [8], [3], [], [9]], "fname": "dired_dump_obstack", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 5, 1, 0, 3, 0, 1, 0, 0, 0.19047619047619047, ["sub     ebx, 1", "cmp     ebx, 0FFFFFFFFh", "jnz     short loc_69C0"], ["sub~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 1, 5, 0, 1, 3, 0, 2, 3, -1, 0.05952380952380952, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_69DC"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 1, 5, 0, 0, 3, 0, 0, 3, -1, 0.05952380952380952, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [2, 0, 1, 0, 1, 7, 0, 2, 1, 0, 0.023809523809523808, ["mov     rcx, id", "lea     id, aLu; \"%*lu \"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "movsxd  rbp, ebx", "jmp     short loc_69E4"], ["mov~rcx,id", "lea~id,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "movsxd~rbp,ebx", "jmp~FOO"]], [1, 0, 7, 1, 0, 6, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebx, edx", "test    name, name", "jz      loc_6A0A"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edx", "test~name,name", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 2, -1, 0.26190476190476186, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_69FE"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [4, 0, 5, 1, 2, 17, 0, 2, 1, -1, 0.09523809523809523, ["mov     rbp, name", "mov     esi, 0; flags", "call    gnu_mbswidth", "sub     ebx, eax", "mov     eax, 0", "cmovs   ebx, eax", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, name; s", "call    _fputs_unlocked", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rax, rcx", "not     rax", "movsxd  rdx, ebx", "lea     rbp, [rax+rdx-1]"], ["mov~rbp,name", "mov~esi,0", "call~FOO", "sub~ebx,eax", "mov~eax,0", "cmovs~ebx,eax", "mov~rsi,<TAG>", "mov~rdi,name", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "movsxd~rdx,ebx", "lea~rbp,[rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, cs:dired_pos", "lea     rax, [len+rax+1]", "mov     cs:dired_pos, rax", "add     rsp, 8", "pop     rbx", "pop     len", "retn"], ["mov~rax,<TAG>", "lea~rax,[len+0]", "mov~<TAG>,rax", "add~rsp,0", "pop~rbx", "pop~len", "retn"]]], "func_feature": [4, 1, 8, 0, 8, 10, 3, 50, 0.08631, 3, 4], "succs": [[5, 7], [0], [0], [7], [3, 6], [1, 2], [5], []], "fname": "format_user_or_group", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     eax, 0", "cmp     cs:numeric_ids, 0", "jz      short loc_6A5F"], ["mov~eax,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebp, esi", "mov     ebx, edi", "lea     rax, string; \"?\"", "test    dl, dl", "jz      short loc_6A4B"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,esi", "mov~ebx,edi", "lea~rax,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 2, 0, 0.0, ["call    getuser", "jmp     short loc_6A4B"], ["call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 1, 8, 0, 1, 1, -1, 0.0, ["mov     edx, ebp; width", "mov     rsi, u; id", "mov     rdi, rax; uid", "call    format_user_or_group", "add     rsp, 8", "pop     u", "pop     width", "retn"], ["mov~edx,ebp", "mov~rsi,u", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~u", "pop~width", "retn"]]], "func_feature": [2, 1, 5, 0, 4, 5, 2, 21, 0.04167, 2, 2], "succs": [[2, 3], [0, 3], [3], []], "fname": "format_user", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 37, 0, 0, 4, 0, 0, 0, 0, 0.004048582995951417, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     len, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_6B9B"], ["mov~rdi,<TAG>", "mov~len,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 1, 8, 0.002699055330634278, ["test    r14b, r14b", "jnz     loc_6B72"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 8, 3, 0.0020242914979757085, ["lea     rcx, [rax+1]", "mov     [rdi+28h], rcx", "mov     [rax], dl"], ["lea~rcx,[rax+0]", "mov~[rdi+0],rcx", "mov~<TAG>,dl"]], [0, 0, 8, 0, 0, 6, 0, 0, 7, 4, 0.04183535762483131, ["mov     rax, [rsp+2068h+buf]", "movzx   edx, byte ptr [rax+len-1]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_6D75"], ["mov~rax,[rsp+0]", "movzx~edx,[yte ptr [rax+0]", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 1, 35, 0, 0, 3, 0, 0, 3, 9, 0.012483130904183536, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [0, 0, 5, 0, 0, 4, 0, 1, 6, 2, 0.11470985155195682, ["mov     rdi, [rsp+2068h+buf]; ptr", "lea     rax, [rsp+2068h+smallbuf]", "cmp     rdi, rax", "jz      short loc_6D24"], ["mov~rdi,[rsp+0]", "lea~rax,[rsp+0]", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 5, 3, 0.19568151147098514, ["test    r13, r13", "jz      short loc_6D0B"], ["test~r13,r13", "jz~FOO"]], [2, 0, 9, 0, 1, 7, 1, 2, 6, 3, 0.06072874493927125, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 6; n", "mov     esi, 1; size", "lea     rdi, a8; \"\\x1B]8;;\\a\"", "call    _fwrite_unlocked", "test    bl, bl", "jz      short loc_6D0B"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "test~bl,bl", "jz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 8, 3, 0.0020242914979757085, ["movzx   esi, dl; int", "call    ___overflow", "jmp     short loc_6D0B"], ["movzx~esi,dl", "call~FOO", "jmp~FOO"]], [2, 0, 11, 3, 1, 11, 1, 2, 4, 4, 0.14844804318488528, ["lea     rax, [skip_quotes+skip_quotes]", "and     eax, 1FEh", "mov     rdx, len", "sub     rdx, rax; n", "movzx   edi, bl", "add     rdi, [rsp+2068h+buf]; ptr", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, len", "jmp     loc_6CBF"], ["lea~rax,<TAG>", "and~eax,0", "mov~rdx,len", "sub~rdx,rax", "movzx~edi,bl", "add~rdi,[rsp+0]", "mov~rcx,<TAG>", "mov~esi,0", "call~FOO", "add~<TAG>,len", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 3, 5, 0.2564102564102564, ["test    stack, stack", "jz      loc_6D7F"], ["test~stack,stack", "jz~FOO"]], [1, 0, 34, 1, 0, 2, 0, 1, 4, 8, 0.06882591093117409, ["add     cs:dired_pos, 1", "jmp     loc_6AE7"], ["add~<TAG>,0", "jmp~FOO"]], [0, 1, 35, 0, 1, 3, 0, 2, 3, 9, 0.012483130904183536, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_6B8E"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [3, 0, 14, 3, 1, 12, 1, 2, 5, 4, 0.07827260458839407, ["lea     rax, [skip_quotes+skip_quotes]", "and     eax, 1FEh", "mov     rdx, len", "sub     rdx, rax; n", "movzx   edi, bl", "add     rdi, [rsp+2068h+buf]; ptr", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, len", "cmp     cs:dired, 0", "jz      short loc_6CBF"], ["lea~rax,<TAG>", "and~eax,0", "mov~rdx,len", "sub~rdx,rax", "movzx~edi,bl", "add~rdi,[rsp+0]", "mov~rcx,<TAG>", "mov~esi,0", "call~FOO", "add~<TAG>,len", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 4, 5, 0.09446693657219972, ["cmp     cs:dired, 0", "jz      short loc_6C62"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 15, 1, 0, 4, 0, 0, 6, 5, 0.020242914979757085, ["mov     rax, [__o1+18h]", "mov     rdx, cs:dired_pos", "mov     [rax], rdx", "add     qword ptr [__o1+18h], 8"], ["mov~rax,[__o1+0]", "mov~rdx,<TAG>", "mov~<TAG>,rdx", "add~[word ptr [__o1+0],0"]], [0, 0, 30, 0, 3, 6, 0, 3, 3, 7, 0.04048582995951417, ["lea     rdi, color_indicator; ind", "call    put_indicator", "mov     rdi, color; ind", "call    put_indicator", "lea     rdi, stru_21F070; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdi,color", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 31, 0, 1, 2, 0, 2, 3, 8, 0.0, ["call    restore_default_color", "jmp     loc_6AFE"], ["call~FOO", "jmp~FOO"]], [1, 0, 32, 0, 1, 4, 1, 2, 2, 8, 0.009446693657219972, ["mov     edi, 4; type", "call    is_colored", "test    al, al", "jnz     loc_6BA7"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 7, 2, 0.02361673414304993, ["cmp     rdi, name", "jz      short loc_6D24"], ["cmp~rdi,name", "jz~FOO"]], [0, 0, 3, 0, 1, 1, 0, 1, 8, 2, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 7, 5, 0.0, ["mov     esi, 8; length", "mov     rdi, __o1; h", "call    _obstack_newchunk", "jmp     loc_6CAC"], ["mov~esi,0", "mov~rdi,__o1", "call~FOO", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 0, 0, 6, 5, 0.033738191632928474, ["mov     rax, [__o1+20h]", "sub     rax, [__o1+18h]", "cmp     rax, 7", "jbe     loc_6D63"], ["mov~rax,[__o1+0]", "sub~rax,[__o1+0]", "cmp~rax,0", "jbe~FOO"]], [1, 0, 29, 0, 0, 3, 1, 1, 2, 6, 0.19568151147098514, ["mov     ebx, 0", "test    r13, r13", "jz      loc_6C2B"], ["mov~ebx,0", "test~r13,r13", "jz~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 1, 7, 0.13360323886639675, ["test    color, color", "jz      short loc_6B1E"], ["test~color,color", "jz~FOO"]], [5, 0, 21, 0, 5, 22, 0, 5, 4, 6, 0.09919028340080971, ["mov     esi, 0; path", "mov     rdi, cs:hostname; str", "call    file_escape", "mov     [rsp+2068h+h], rax", "mov     esi, 1; path", "mov     rdi, r13; str", "call    file_escape", "mov     r14, rax", "cmp     byte ptr [n], 2Fh ; '/'", "lea     rcx, a8+6; \"\"", "lea     n, prefix+8; \"/\"", "cmovnz  rcx, rax", "mov     r8, n", "mov     rdx, [rsp+2068h+h]", "lea     rsi, a8FileSSS; \"\\x1B]8;;file://%s%s%s\\a\"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rdi, [rsp+2068h+h]; ptr", "call    free", "mov     rdi, n; ptr", "call    free"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~esi,0", "mov~rdi,r13", "call~FOO", "mov~r14,rax", "cmp~<TAG>,0", "lea~rcx,<TAG>", "lea~n,<TAG>", "cmovnz~rcx,rax", "mov~r8,n", "mov~rdx,[rsp+0]", "lea~rsi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,n", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 1, 0, 5, 1, 1, 7, 1, 0.04993252361673414, ["movzx   eax, [rsp+2068h+pad]", "add     rax, len", "mov     rcx, [rsp+2068h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_6DB3"], ["movzx~eax,[rsp+0]", "add~rax,len", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 3, 7, 0.05195681511470985, ["movzx   ebx, cs:align_variable_outer_quotes", "test    bl, bl", "jz      loc_6BC0"], ["movzx~ebx,<TAG>", "test~bl,bl", "jz~FOO"]], [0, 0, 22, 0, 1, 3, 0, 2, 7, 7, 0.007422402159244264, ["movzx   esi, dl; int", "call    ___overflow", "jmp     short loc_6BC0"], ["movzx~esi,dl", "call~FOO", "jmp~FOO"]], [0, 0, 24, 0, 0, 6, 0, 0, 6, 8, 0.018893387314439944, ["mov     rax, [rsp+2068h+buf]", "movzx   edx, byte ptr [rax]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_6BB1"], ["mov~rax,[rsp+0]", "movzx~edx,<TAG>", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 11, 1, 0, 4, 0, 0, 7, 4, 0.014844804318488529, ["mov     rax, [__o1+18h]", "mov     rdx, cs:dired_pos", "mov     [rax], rdx", "add     qword ptr [__o1+18h], 8"], ["mov~rax,[__o1+0]", "mov~rdx,<TAG>", "mov~<TAG>,rdx", "add~[word ptr [__o1+0],0"]], [0, 0, 27, 0, 0, 3, 1, 1, 4, 7, 0.04048582995951417, ["movzx   ebx, cs:cwd_some_quoted", "test    bl, bl", "jz      short loc_6BC0"], ["movzx~ebx,<TAG>", "test~bl,bl", "jz~FOO"]], [1, 0, 17, 1, 0, 4, 0, 0, 5, 6, 0.02834008097165992, ["mov     rax, [__o1+20h]", "sub     rax, [__o1+18h]", "cmp     rax, 7", "jbe     loc_6D51"], ["mov~rax,[__o1+0]", "sub~rax,[__o1+0]", "cmp~rax,0", "jbe~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, 8, 0.03508771929824561, ["cmp     [rsp+2068h+pad], 0", "jnz     short loc_6BBB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 2038h", "pop     skip_quotes", "pop     stack", "pop     len", "pop     r13", "pop     r14", "pop     name", "retn"], ["add~rsp,0", "pop~skip_quotes", "pop~stack", "pop~len", "pop~r13", "pop~r14", "pop~name", "retn"]], [6, 0, 39, 3, 1, 31, 1, 2, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 2038h", "mov     r15, name", "mov     rbx, color", "mov     r14d, r8d", "mov     rbp, stack", "mov     r13, [rsp+2068h+absolute_name]", "mov     rax, fs:28h", "mov     [rsp+2068h+var_40], rax", "xor     eax, eax", "lea     rax, [rsp+2068h+smallbuf]", "mov     [rsp+2068h+buf], rax", "lea     name, [rsp+2068h+buf]; inbuf", "sub     rsp, 8", "lea     rax, [rsp+2070h+pad]", "push    rax; pad", "mov     r9d, 0; width", "mov     r8d, edx; needs_general_quoting", "mov     color, options; options", "mov     needs_general_quoting, name; name", "mov     esi, 2000h; bufsize", "call    quote_name_buf", "mov     r12, rax", "add     rsp, 10h", "cmp     [rsp+2068h+pad], 0", "jz      short loc_6AE7"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,name", "mov~rbx,color", "mov~r14d,r8d", "mov~rbp,stack", "mov~r13,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~name,[rsp+0]", "sub~rsp,0", "lea~rax,[rsp+0]", "push~rax", "mov~r9d,0", "mov~r8d,edx", "mov~color,options", "mov~needs_general_quoting,name", "mov~esi,0", "call~FOO", "mov~r12,rax", "add~rsp,0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 16, 0, 1, 4, 0, 2, 6, 6, 0.0, ["mov     esi, 8; length", "mov     rdi, __o1; h", "call    _obstack_newchunk", "jmp     loc_6C4F"], ["mov~esi,0", "mov~rdi,__o1", "call~FOO", "jmp~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 6, 7, 0.014844804318488529, ["mov     ebx, 0"], ["mov~ebx,0"]], [0, 0, 22, 0, 0, 4, 0, 1, 7, 7, 0.007422402159244264, ["lea     rcx, [rax+1]", "mov     [rdi+28h], rcx", "mov     [rax], dl", "jmp     short loc_6BC0"], ["lea~rcx,[rax+0]", "mov~[rdi+0],rcx", "mov~<TAG>,dl", "jmp~FOO"]]], "func_feature": [21, 13, 46, 1, 40, 59, 4, 199, 0.04801, 13, 16], "succs": [[12, 4], [0, 24], [5], [8, 2], [11], [27, 19], [5, 7], [3, 5], [5], [6], [9, 14], [24], [11], [22, 6], [33, 13], [13], [23], [16], [16, 17], [27, 20], [27], [31], [21, 31], [10, 28], [18, 23], [10], [], [26, 35], [32, 25], [25], [29, 39], [6], [25, 34], [37, 15], [30, 38], [], [24, 1], [15], [25], [25]], "fname": "quote_name", "n_num": 40}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 34, 0, 0, 2, 1, 1, 0, 0, 0.04148905939187269, ["test    [rsp+48h+var_3C], 800h", "jz      short loc_6F95"], ["test~[rsp+0],0", "jz~FOO"]], [2, 0, 54, 0, 0, 4, 1, 1, 5, 7, 0.0741687979539642, ["mov     eax, [rsp+48h+var_3C]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      short loc_6F79"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 9, -1, 0.004688832054560955, ["mov     ebx, 11h", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 30, 0, 1, 4, 1, 2, 8, 5, 0.005754475703324808, ["mov     edi, 11h; type", "call    is_colored", "test    al, al", "jnz     loc_71FF"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 3, 9, 0.11253196930946291, ["cmp     r13d, 0FFFFFFFFh", "jz      short loc_6EFE"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 0, 1, 4, 10, 0.06372549019607843, ["movzx   r13d, byte ptr [rbp+0B9h]", "jmp     short loc_6E81"], ["movzx~r13d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 60, 0, 0, 6, 1, 0, 2, 10, 0.02514919011082694, ["mov     eax, [f+0ACh]", "mov     [rsp+48h+var_3C], eax", "movzx   r13d, byte ptr [f+0B9h]", "xor     r13d, 1", "movzx   r13d, r13b", "neg     r13d"], ["mov~eax,[f+0]", "mov~[rsp+0],eax", "movzx~r13d,[yte ptr [f+0]", "xor~r13d,0", "movzx~r13d,r13b", "neg~r13d"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, -1, 0.000319693094629156, ["mov     ebx, 5", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.015238704177323103, ["test    rbx, rbx", "jz      loc_7181"], ["test~rbx,rbx", "jz~FOO"]], [2, 2, 11, 1, 1, 7, 1, 2, 10, -1, 0.0, ["mov     edi, 12h; type", "call    is_colored", "cmp     al, 1", "sbb     ebx, ebx", "and     ebx, 0FFFFFFF4h", "add     ebx, 12h", "jmp     loc_6ED8"], ["mov~edi,<STR>", "call~FOO", "cmp~al,0", "sbb~ebx,ebx", "and~ebx,0", "add~ebx,<STR>", "jmp~FOO"]], [1, 1, 12, 0, 0, 3, 1, 1, 9, -1, 0.00639386189258312, ["mov     ebx, 6", "test    [rsp+48h+var_3C], 200h", "jz      loc_6ED8"], ["mov~ebx,0", "test~[rsp+0],<STR>", "jz~FOO"]], [1, 0, 58, 0, 1, 4, 1, 2, 4, 9, 0.024936061381074168, ["mov     edi, 0Ch; type", "call    is_colored", "test    al, al", "jz      loc_6E87"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 8, -1, 0.018861892583120203, ["mov     ebx, 0"], ["mov~ebx,0"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.11253196930946291, ["cmp     qword ptr [rbx+8], 0", "jz      loc_718B"], ["cmp~[word ptr [rbx+0],0", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 4, 8, 0.10549872122762148, ["cmp     byte ptr [f+0B8h], 0", "jnz     loc_6F17"], ["cmp~[yte ptr [f+0],0", "jnz~FOO"]], [1, 0, 33, 0, 1, 4, 1, 2, 7, 6, 0.0061096902529127585, ["mov     edi, 10h; type", "call    is_colored", "test    al, al", "jnz     loc_71F5"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 5, -1, 0.02514919011082694, ["mov     ebx, 0Ch", "jmp     short loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 11, -1, 0.004688832054560955, ["mov     ebx, 0Eh", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 24, 0, 1, 4, 1, 2, 10, 3, 0.006606990622335891, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jnz     loc_7213"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [4, 0, 1, 2, 2, 13, 1, 2, 2, -1, 0.000639386189258312, ["xor     r12d, 1", "mov     edx, [rbp+0C4h]; needs_general_quoting", "sub     rsp, 8", "push    qword ptr [rbp+10h]; absolute_name", "mov     r9, stack; stack", "movzx   r8d, r12b; allow_pad", "mov     ecx, 0; color", "mov     symlink_target, cs:filename_quoting_options; options", "mov     f, name; name", "call    quote_name", "mov     rbx, rax", "call    process_signals", "add     rsp, 10h"], ["xor~r12d,0", "mov~edx,[rbp+0]", "sub~rsp,0", "push~[word ptr [rbp+0]", "mov~r9,stack", "movzx~r8d,r12b", "mov~ecx,0", "mov~symlink_target,<TAG>", "mov~f,name", "call~FOO", "mov~rbx,rax", "call~FOO", "add~rsp,0"]], [1, 0, 66, 0, 0, 3, 0, 1, 1, 13, 0.001278772378516624, ["mov     r14, [f]", "cmp     cs:print_with_color, 0", "jz      short loc_6DE5"], ["mov~r14,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 0, 1, 1, 11, 0.01300085251491901, ["mov     r14, [f+8]", "cmp     cs:print_with_color, 0", "jnz     short loc_6E64"], ["mov~r14,[f+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 7, 5, 0.040920716112531966, ["test    [rsp+48h+var_3C], 400h", "jz      short loc_6FB1"], ["test~[rsp+0],0", "jz~FOO"]], [2, 0, 16, 0, 1, 5, 1, 2, 8, -1, 0.007495026996305768, ["mov     edi, 14h; type", "call    is_colored", "mov     ebx, 14h", "test    al, al", "jnz     loc_6ED8"], ["mov~edi,0", "call~FOO", "mov~ebx,0", "test~al,al", "jnz~FOO"]], [0, 2, 17, 0, 0, 4, 1, 1, 7, -1, 0.019856493321966467, ["mov     eax, [rsp+48h+var_3C]", "and     eax, 202h", "cmp     eax, 202h", "jz      short loc_708D"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 9, -1, 0.0011722080136402388, ["mov     ebx, 0Dh", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 8, -1, 0.008098891730605285, ["cmp     cs:color_symlink_as_referent, 0", "jnz     loc_71EB"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, 0, 0.003516624040920716, ["mov     ebx, 16h", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 21, 0, 1, 4, 1, 2, 11, 1, 0.0058610400682011935, ["mov     edi, 16h; type", "call    is_colored", "test    al, al", "jnz     loc_721D"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 19, 0, 0, 10, 1, 1, 6, -1, 0.04209292412617221, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     r13, [rsi-1]", "mov     rbx, cs:color_ext_list", "test    rbx, rbx", "jnz     loc_70B3"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~r13,[rsi-1]+0]", "mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 25, 0, 0, 5, 0, 1, 5, -1, 0.03815004262574595, ["mov     edx, [f+0A8h]", "lea     rax, filetype_indicator_11085", "mov     ebx, [rax+rdx*4]", "cmp     ebx, 5", "jz      loc_6FFE"], ["mov~edx,[f+0]", "lea~rax,<TAG>", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 0, 10, 2, 0.026214833759590793, ["cmp     qword ptr [f+28h], 1", "jbe     short loc_6FFE"], ["cmp~[word ptr [f+0],0", "jbe~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 9, -1, 0.0008525149190110827, ["jmp     short loc_7043"], ["jmp~FOO"]], [1, 0, 25, 0, 0, 2, 1, 1, 9, 3, 0.033674339300937765, ["test    byte ptr [rsp+48h+var_3C], 49h", "jz      short loc_6FE5"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [4, 0, 5, 2, 3, 18, 2, 4, 9, -1, 0.026427962489343565, ["mov     edi, 4; type", "call    is_colored", "mov     r13d, eax", "xor     r12d, 1", "mov     edx, [f+0C4h]; needs_general_quoting", "sub     rsp, 8", "push    qword ptr [f+10h]; absolute_name", "mov     r9, stack; stack", "movzx   r8d, r12b; allow_pad", "mov     rcx, rbx; color", "mov     rsi, cs:filename_quoting_options; options", "mov     rdi, name; name", "call    quote_name", "mov     rbx, rax", "call    process_signals", "add     rsp, 10h", "test    r13b, r13b", "jz      loc_6E1D"], ["mov~edi,0", "call~FOO", "mov~r13d,eax", "xor~r12d,0", "mov~edx,[f+0]", "sub~rsp,0", "push~[word ptr [f+0]", "mov~r9,stack", "movzx~r8d,r12b", "mov~rcx,rbx", "mov~rsi,<TAG>", "mov~rdi,name", "call~FOO", "mov~rbx,rax", "call~FOO", "add~rsp,0", "test~r13b,r13b", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 8, -1, 0.07001278772378516, ["test    color, color", "jz      loc_7190"], ["test~color,color", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 6, -1, 0.03864734299516908, ["cmp     eax, 4000h", "jz      loc_7033"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 8, -1, 0.007352941176470588, ["mov     rbx, [rbx+20h]", "test    rbx, rbx", "jz      loc_7177"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 0, 0, 7, -1, 0.032821824381926684, ["mov     rdx, [rbx]; n", "cmp     r13, rdx", "jb      short loc_70A6"], ["mov~rdx,<TAG>", "cmp~r13,rdx", "jb~FOO"]], [0, 0, 18, 2, 1, 7, 1, 2, 8, -1, 0.018329070758738276, ["mov     rsi, [rbx+8]; s2", "mov     rdi, r13", "sub     rdi, rdx", "add     rdi, name; s1", "call    c_strncasecmp", "test    eax, eax", "jnz     short loc_70A6"], ["mov~rsi,[rbx+0]", "mov~rdi,r13", "sub~rdi,rdx", "add~rdi,name", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["mov     rax, len", "add     rsp, 18h", "pop     len", "pop     f", "pop     r12", "pop     r13", "pop     name", "pop     stack", "retn"], ["mov~rax,len", "add~rsp,<STR>", "pop~len", "pop~f", "pop~r12", "pop~r13", "pop~name", "pop~stack", "retn"]], [0, 0, 3, 0, 1, 4, 1, 2, 10, -1, 0.028132992327365727, ["call    prep_non_filename_text", "mov     rcx, cs:line_length", "test    rcx, rcx", "jz      loc_6E1D"], ["call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [2, 0, 2, 2, 0, 10, 0, 1, 11, -1, 0.014066496163682864, ["mov     rax, [rsp+48h+start_col]", "mov     edx, 0", "div     rcx", "mov     rsi, rax", "mov     rax, [rsp+48h+start_col]", "lea     rax, [len+rax-1]", "mov     edx, 0", "div     rcx", "cmp     rsi, rax", "jz      loc_6E1D"], ["mov~rax,<TAG>", "mov~edx,0", "div~,rcx", "mov~rsi,rax", "mov~rax,<TAG>", "lea~rax,[len+0]", "mov~edx,0", "div~,rcx", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 12, -1, 0.0, ["lea     rdi, stru_21F1D0; ind", "call    put_indicator", "jmp     loc_6E1D"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.02152600170502984, ["cmp     ebx, 7", "jnz     short loc_6ED8"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, -1, 0.00319693094629156, ["mov     ebx, 7", "jmp     loc_6EAD"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, -1, 0.011508951406649617, ["test    r13d, r13d", "jnz     short loc_6ED8"], ["test~r13d,r13d", "jnz~FOO"]], [0, 1, 21, 0, 0, 2, 0, 1, 7, -1, 0.019003978402955382, ["cmp     eax, 0A000h", "jz      loc_71E1"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 1, 69, 1, 0, 13, 1, 1, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbp, f", "mov     r12d, esi", "mov     r15, stack", "mov     [rsp+48h+start_col], start_col_0", "test    sil, sil", "jz      short loc_6E2F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbp,f", "mov~r12d,esi", "mov~r15,stack", "mov~<TAG>,start_col_0", "test~sil,sil", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, -1, 0.004688832054560955, ["mov     ebx, 15h", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 9, 4, 0.00618073316283035, ["cmp     byte ptr [f+0C0h], 0", "jnz     loc_7209"], ["cmp~[yte ptr [f+0],0", "jnz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 10, -1, 0.0036231884057971015, ["mov     ebx, 0Ah", "cmp     eax, 6000h", "jz      loc_6ED8"], ["mov~ebx,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 9, -1, 0.0068201193520886615, ["mov     ebx, 9", "cmp     eax, 0C000h", "jz      short loc_6ED8"], ["mov~ebx,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 28, 0, 1, 4, 1, 2, 8, 4, 0.038576300085251494, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "jz      short loc_6FCC"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 2, 12, 0.014279624893435636, ["cmp     cs:color_symlink_as_referent, 0", "jz      loc_6EED"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 1, 14, 0, 0, 3, 0, 1, 8, -1, 0.013888888888888886, ["mov     ebx, 8", "cmp     eax, 1000h", "jz      short loc_6ED8"], ["mov~ebx,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 1, 1, 8, -1, 0.013213981244671782, ["test    byte ptr [rsp+48h+var_3C], 2", "jz      short loc_7061"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.001278772378516624, ["jmp     loc_7128"], ["jmp~FOO"]], [3, 0, 4, 2, 2, 13, 1, 2, 9, -1, 0.03900255754475703, ["xor     r12d, 1", "mov     edx, [f+0C4h]; needs_general_quoting", "sub     rsp, 8", "push    qword ptr [f+10h]; absolute_name", "mov     r9, stack; stack", "movzx   r8d, r12b; allow_pad", "mov     rcx, color; color", "mov     rsi, cs:filename_quoting_options; options", "mov     rdi, name; name", "call    quote_name", "mov     color, rax", "call    process_signals", "add     rsp, 10h"], ["xor~r12d,0", "mov~edx,[f+0]", "sub~rsp,0", "push~[word ptr [f+0]", "mov~r9,stack", "movzx~r8d,r12b", "mov~rcx,color", "mov~rsi,<TAG>", "mov~rdi,name", "call~FOO", "mov~color,rax", "call~FOO", "add~rsp,0"]], [1, 0, 63, 0, 0, 2, 0, 1, 3, 12, 0.000639386189258312, ["cmp     byte ptr [f+0B9h], 0", "jz      loc_6EED"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [2, 0, 11, 0, 1, 5, 1, 1, 9, -1, 0.0011722080136402388, ["mov     edi, 0Dh; type", "call    is_colored", "test    al, al", "mov     eax, 0Dh", "cmovnz  ebx, eax"], ["mov~edi,0", "call~FOO", "test~al,al", "mov~eax,0", "cmovnz~ebx,eax"]], [1, 0, 10, 1, 0, 1, 0, 0, 10, -1, 0.005328218243819267, ["add     rbx, 10h"], ["add~rbx,0"]], [2, 0, 13, 0, 1, 5, 1, 2, 9, -1, 0.0023444160272804776, ["mov     edi, 13h; type", "call    is_colored", "mov     ebx, 13h", "test    al, al", "jnz     loc_6ED8"], ["mov~edi,0", "call~FOO", "mov~ebx,0", "test~al,al", "jnz~FOO"]], [0, 0, 61, 0, 0, 3, 0, 1, 4, 11, 0.006500426257459505, ["mov     eax, [f+0ACh]", "mov     [rsp+48h+var_3C], eax", "jmp     loc_6EF4"], ["mov~eax,[f+0]", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 10, 2, 0, 5, 0, 1, 6, -1, 0.1155157715260017, ["mov     ebx, ebx", "shl     rbx, 4", "lea     rax, color_indicator", "add     rbx, rax", "jmp     loc_70DE"], ["mov~ebx,ebx", "shl~rbx,0", "lea~rax,<TAG>", "add~rbx,rax", "jmp~FOO"]], [1, 0, 11, 0, 0, 5, 0, 1, 11, -1, 0.0, ["cmp     eax, 2000h", "setnz   bl", "movzx   ebx, bl", "lea     ebx, [rbx+rbx+0Bh]", "jmp     loc_6ED8"], ["cmp~eax,0", "setnz~bl", "movzx~ebx,bl", "lea~ebx,[rbx+0]", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 7, -1, 0.003516624040920716, ["mov     ebx, 5", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 9, -1, 0.0037297527706734866, ["mov     ebx, 5", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, -1, 0.005470304063654447, ["mov     ebx, 10h", "jmp     loc_6ED8"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 61, 0, 0, 2, 0, 0, 3, 11, 0.03250213128729753, ["mov     eax, [rbp+30h]", "mov     [rsp+48h+var_3C], eax"], ["mov~eax,[rbp+0]", "mov~[rsp+0],eax"]]], "func_feature": [20, 30, 80, 1, 70, 112, 3, 268, 0.02151, 8, 16], "succs": [[22, 15], [0, 36], [64], [2, 53], [11, 14], [4], [4], [64], [61, 7], [64], [64, 9], [16, 14], [34], [35, 12], [1, 30], [68, 22], [64], [64], [17, 31], [40], [19, 54], [19, 6], [3, 53], [32, 64], [56, 23], [64], [25, 60], [64], [27, 29], [66, 38], [44, 29], [28, 29], [56], [18, 31], [40, 57], [34, 58], [24, 47], [67, 38], [37, 39], [8, 37], [], [40, 42], [40, 43], [40], [64, 46], [44], [64, 26], [45, 55], [20, 21], [64], [49, 33], [64, 65], [64, 51], [33, 50], [59, 69], [64, 52], [10, 62], [41], [41], [69, 63], [64], [13], [64, 10], [5], [13], [64], [64], [64], [64], [5]], "fname": "print_name_with_quoting", "n_num": 70}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 0, 0.09047619047619049, ["mov     rax, width", "mov     f, [rsp+2B8h+var_20]", "xor     f, fs:28h", "jnz     loc_73C0"], ["mov~rax,width", "mov~f,[rsp+0]", "xor~f,<TAG>", "jnz~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 3, 0, 0.09047619047619049, ["mov     edx, 0", "cmp     cs:format_0, 4", "jz      short loc_728C"], ["mov~edx,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 1, 12, 0, 1, 8, 0, 2, 3, 0, 0.0, ["mov     rsi, rsp; buf", "mov     rdi, [f+58h]; n", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "mov     edx, cs:human_output_opts; opts", "call    human_readable", "mov     rcx, rax", "jmp     loc_7278"], ["mov~rsi,rsp", "mov~rdi,[f+0]", "mov~r8,<TAG>", "mov~ecx,<STR>", "mov~edx,<TAG>", "call~FOO", "mov~rcx,rax", "jmp~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 2, 0, 0.0761904761904762, ["lea     rcx, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jnz     loc_737A"], ["lea~rcx,<TAG>", "cmp~[yte ptr [f+0],0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 0, 0.0, ["mov     edx, cs:block_size_width"], ["mov~edx,<TAG>"]], [0, 0, 3, 1, 1, 7, 0, 2, 4, 0, 0.0, ["mov     edx, [f+0A8h]; type", "mov     esi, [f+30h]; mode", "movzx   edi, byte ptr [f+0B8h]; stat_ok", "call    print_type_indicator", "movzx   eax, al", "add     width, rax", "jmp     loc_7301"], ["mov~edx,[f+0]", "mov~esi,[f+0]", "movzx~edi,[yte ptr [f+0]", "call~FOO", "movzx~eax,al", "add~width,rax", "jmp~FOO"]], [3, 0, 4, 0, 1, 8, 0, 2, 3, 0, 0.1619047619047619, ["mov     rcx, start_col; start_col", "mov     edx, 0; stack", "mov     esi, 0; symlink_target", "mov     rdi, f; f", "call    print_name_with_quoting", "mov     start_col, rax", "cmp     cs:indicator_style_0, 0", "jnz     loc_73A0"], ["mov~rcx,start_col", "mov~edx,0", "mov~esi,0", "mov~rdi,f", "call~FOO", "mov~start_col,rax", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 9, 0, 1, 4, 0, 1, 4, 0, 0.08571428571428572, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 5, 0, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 0, 0.24761904761904763, ["cmp     cs:print_scontext, 0", "jz      short loc_72DC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 0, 0.23333333333333336, ["cmp     cs:print_block_size, 0", "jz      short loc_72A2"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 1, 0, 0.011904761904761906, ["lea     rcx, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jz      short loc_733E"], ["lea~rcx,<TAG>", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [2, 0, 21, 1, 1, 11, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rbx, f", "mov     rbp, start_col", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "call    set_normal_color", "cmp     cs:print_inode, 0", "jnz     loc_7325"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,f", "mov~rbp,start_col", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 0, 0.004761904761904762, ["mov     rdi, [f+20h]; i", "test    rdi, rdi", "jnz     short loc_736D"], ["mov~rdi,[f+0]", "test~rdi,rdi", "jnz~FOO"]], [2, 0, 7, 0, 0, 4, 0, 1, 3, 0, 0.06666666666666668, ["mov     rcx, [f+0B0h]", "mov     edx, 0", "cmp     cs:format_0, 4", "jz      short loc_72C6"], ["mov~rcx,[f+0]", "mov~edx,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 4, 0, 0.0, ["mov     edx, cs:scontext_width"], ["mov~edx,<TAG>"]], [2, 0, 17, 0, 0, 3, 0, 1, 2, 0, 0.12619047619047621, ["mov     edx, 0", "cmp     cs:format_0, 4", "jz      short loc_7352"], ["mov~edx,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 18, 0, 1, 4, 0, 2, 3, 0, 0.0, ["mov     rsi, rsp; buf", "call    umaxtostr", "mov     rcx, rax", "jmp     short loc_733E"], ["mov~rsi,rsp", "call~FOO", "mov~rcx,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 3, 0, 0.0, ["mov     edx, cs:inode_number_width"], ["mov~edx,<TAG>"]], [2, 0, 5, 0, 1, 4, 0, 1, 4, 0, 0.02380952380952381, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 15, 0, 1, 5, 0, 2, 3, 0, 0.17857142857142858, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_725B"], ["lea~rsi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [9, 3, 24, 1, 22, 31, 5, 86, 0.06353, 13, 3], "succs": [[], [0, 9], [8, 5], [2], [2, 3], [8], [1], [1, 6], [10], [], [7, 15], [10, 4], [17, 14], [11, 12], [17, 18], [16, 20], [20], [19, 21], [17], [21], [7], [11]], "fname": "print_file_name_and_frills", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 21, 0, 1, 5, 1, 2, 0, 0, 0.19047619047619047, ["mov     rdi, f; f", "call    length_of_file_name_and_frills", "mov     r12, rax", "test    filesno, filesno", "jz      short loc_7476"], ["mov~rdi,f", "call~FOO", "mov~r12,rax", "test~filesno,filesno", "jz~FOO"]], [0, 0, 21, 0, 0, 5, 1, 1, 2, 4, 0.3917748917748918, ["mov     rax, cs:sorted_file", "mov     r13, [rax+filesno*8]", "mov     r12, cs:line_length", "test    r12, r12", "jnz     loc_73F3"], ["mov~rax,<TAG>", "mov~r13,<TAG>", "mov~r12,<TAG>", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.12337662337662338, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_751E"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 22, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "cmp     cs:cwd_n_used, 0", "jz      loc_74F3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 21, 2, 1, 7, 0, 1, 4, 2, 0.461038961038961, ["mov     rsi, pos; start_col", "mov     rdi, f; f", "call    print_file_name_and_frills", "add     pos, r12", "add     filesno, 1", "cmp     cs:cwd_n_used, filesno", "jbe     short loc_74F3"], ["mov~rsi,pos", "mov~rdi,f", "call~FOO", "add~pos,r12", "add~filesno,0", "cmp~<TAG>,filesno", "jbe~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.021645021645021644, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 21, 0, 0, 3, 1, 1, 4, 8, 0.15367965367965367, ["mov     len, cs:line_length", "test    rax, rax", "jz      short loc_7430"], ["mov~len,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 4, 3, 0.025974025974025976, ["mov     r12, filesno", "jmp     short loc_7476"], ["mov~r12,filesno", "jmp~FOO"]], [0, 0, 21, 0, 1, 3, 0, 2, 8, 3, 0.15151515151515152, ["movsx   esi, r14b; int", "call    ___overflow", "jmp     short loc_7476"], ["movsx~esi,r14b", "call~FOO", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 8, 3, 0.15151515151515152, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     [rax], r14b"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,r14b"]], [0, 0, 21, 0, 0, 3, 0, 0, 5, 8, 0.10822510822510822, ["lea     rdx, [pos+len+2]", "cmp     rax, rdx", "jbe     loc_74BA"], ["lea~rdx,[pos+0]", "cmp~rax,rdx", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.021645021645021644, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_750F"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [2, 0, 21, 0, 0, 4, 0, 1, 1, 5, 0.0367965367965368, ["mov     r15d, edi", "mov     ebp, 0", "mov     ebx, 0", "jmp     loc_7491"], ["mov~r15d,edi", "mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 21, 1, 0, 4, 0, 0, 6, 8, 0.03896103896103896, ["mov     rax, 0FFFFFFFFFFFFFFFDh", "sub     rax, len", "cmp     rax, pos", "jb      loc_74CA"], ["mov~rax,0", "sub~rax,len", "cmp~rax,pos", "jb~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 3, 4, 0.16666666666666666, ["test    filesno, filesno", "jnz     loc_7430"], ["test~filesno,filesno", "jnz~FOO"]], [1, 1, 21, 1, 0, 2, 0, 0, 4, 7, 0.17965367965367965, ["add     pos, 2", "mov     r14d, 20h ; ' '"], ["add~pos,0", "mov~r14d,<STR>"]], [2, 0, 21, 0, 0, 3, 0, 1, 6, 7, 0.03463203463203463, ["mov     r14d, 0Ah", "mov     ebp, 0", "jmp     loc_743A"], ["mov~r14d,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 4, 0, 0, 5, 6, 0.3246753246753247, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_74DA"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 21, 0, 0, 3, 0, 1, 7, 7, 0.01948051948051948, ["mov     r14d, 0Ah", "mov     ebp, 0", "jmp     loc_743A"], ["mov~r14d,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 6, 5, 0.14502164502164502, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     [rax], r15b"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,r15b"]], [0, 0, 21, 0, 1, 3, 0, 2, 6, 5, 0.14502164502164502, ["movzx   esi, r15b; int", "call    ___overflow", "jmp     loc_745A"], ["movzx~esi,r15b", "call~FOO", "jmp~FOO"]], [0, 0, 21, 0, 0, 4, 0, 0, 7, 4, 0.33766233766233766, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_74E8"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]]], "func_feature": [5, 4, 17, 0, 23, 33, 3, 90, 0.14041, 4, 6], "succs": [[4, 6], [0, 15], [12, 5], [2, 13], [1, 2], [11], [16, 10], [4], [4], [4], [17, 14], [], [11], [1], [16, 19], [16, 7], [18], [18], [20, 21], [18], [22], [22], [8, 9]], "fname": "print_with_separator", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_756D"], ["mov~eax,0", "jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [a+80h]", "mov     rdx, [b+80h]", "cmp     rcx, rdx", "jg      short loc_7567"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; b", "mov     a, [a]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [b+88h]", "sub     eax, [a+88h]", "jnz     short locret_756D"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 18, 0.04167, 0, 3], "succs": [[3, 5], [0, 4], [], [2, 5], [], []], "fname": "xstrcoll_ctime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_75A6"], ["mov~eax,0", "jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [a+60h]", "mov     rdx, [b+60h]", "cmp     rcx, rdx", "jg      short loc_75A0"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [b+68h]", "sub     eax, [a+68h]", "jnz     short locret_75A6"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 18, 0.04167, 0, 3], "succs": [[3, 4], [0, 2], [], [], [3, 5], []], "fname": "strcmp_atime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [b+60h]", "mov     rdx, [a+60h]", "cmp     rcx, rdx", "jg      short loc_75DC"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_75E2"], ["mov~eax,0", "jl~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [a+68h]", "sub     eax, [b+68h]", "jnz     short locret_75E2"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [2, 0, 0, 2, 1, 7, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 19, 0.04167, 0, 3], "succs": [[], [0, 3], [], [2, 4], [2, 5], []], "fname": "rev_xstrcoll_atime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [b+60h]", "mov     rdx, [a+60h]", "cmp     rcx, rdx", "jg      short loc_7618"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_761E"], ["mov~eax,0", "jl~FOO"]], [2, 0, 0, 2, 1, 7, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, 1, 0.1, ["mov     rax, [a+68h]", "sub     eax, [b+68h]", "jnz     short locret_761E"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 19, 0.04167, 0, 3], "succs": [[1, 4], [3, 5], [], [2, 5], [], []], "fname": "rev_strcmp_atime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [a+80h]", "mov     rdx, [b+80h]", "cmp     rcx, rdx", "jg      short loc_765D"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_7663"], ["mov~eax,0", "jl~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [b+88h]", "sub     eax, [a+88h]", "jnz     short locret_7663"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 18, 0.04167, 0, 3], "succs": [[], [0, 3], [], [2, 4], [2, 5], []], "fname": "strcmp_ctime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [a+88h]", "sub     eax, [b+88h]", "jnz     short locret_76AB"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [b+80h]", "mov     rdx, [a+80h]", "cmp     rcx, rdx", "jg      short loc_76A5"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_76AB"], ["mov~eax,0", "jl~FOO"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 19, 0.04167, 0, 3], "succs": [[], [0, 4], [], [2, 5], [], [1, 4]], "fname": "rev_xstrcoll_ctime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_76F3"], ["mov~eax,0", "jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [b+80h]", "mov     rdx, [a+80h]", "cmp     rcx, rdx", "jg      short loc_76ED"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [2, 0, 0, 2, 1, 7, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [a+88h]", "sub     eax, [b+88h]", "jnz     short locret_76F3"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 19, 0.04167, 0, 3], "succs": [[3, 5], [0, 4], [], [2, 5], [], []], "fname": "rev_strcmp_ctime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [a+70h]", "mov     rdx, [b+70h]", "cmp     rcx, rdx", "jg      short loc_7726"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; b", "mov     a, [a]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, 1, 0.1, ["mov     rax, [b+78h]", "sub     eax, [a+78h]", "jnz     short locret_772C"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_772C"], ["mov~eax,0", "jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 18, 0.04167, 0, 3], "succs": [[3, 4], [], [1, 5], [2, 5], [], []], "fname": "xstrcoll_mtime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_7765"], ["mov~eax,0", "jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [a+70h]", "mov     rdx, [b+70h]", "cmp     rcx, rdx", "jg      short loc_775F"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [b+78h]", "sub     eax, [a+78h]", "jnz     short locret_7765"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 18, 0.04167, 0, 3], "succs": [[3, 4], [0, 2], [], [], [3, 5], []], "fname": "strcmp_mtime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     rcx, [b+70h]", "mov     rdx, [a+70h]", "cmp     rcx, rdx", "jg      short loc_779B"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_77A1"], ["mov~eax,0", "jl~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [a+78h]", "sub     eax, [b+78h]", "jnz     short locret_77A1"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [2, 0, 0, 2, 1, 7, 0, 1, 3, -1, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 19, 0.04167, 0, 3], "succs": [[], [0, 3], [], [2, 4], [2, 5], []], "fname": "rev_xstrcoll_mtime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [b+70h]", "mov     rdx, [a+70h]", "cmp     rcx, rdx", "jg      short loc_77D7"], ["mov~rcx,[b+0]", "mov~rdx,[a+0]", "cmp~rcx,rdx", "jg~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_77DD"], ["mov~eax,0", "jl~FOO"]], [2, 0, 0, 2, 1, 7, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, 1, 0.1, ["mov     rax, [a+78h]", "sub     eax, [b+78h]", "jnz     short locret_77DD"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 19, 0.04167, 0, 3], "succs": [[1, 4], [3, 5], [], [2, 5], [], []], "fname": "rev_strcmp_mtime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rcx, [a+60h]", "mov     rdx, [b+60h]", "cmp     rcx, rdx", "jg      short loc_7810"], ["mov~rcx,[a+0]", "mov~rdx,[b+0]", "cmp~rcx,rdx", "jg~FOO"]], [2, 0, 0, 2, 1, 6, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     b, [b]; b", "mov     a, [a]; a", "call    xstrcoll", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, 1, 0.1, ["mov     rax, [b+68h]", "sub     eax, [a+68h]", "jnz     short locret_7816"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.15000000000000002, ["mov     eax, 1", "jl      short locret_7816"], ["mov~eax,0", "jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 6, 0, 18, 0.04167, 0, 3], "succs": [[3, 4], [], [1, 5], [2, 5], [], []], "fname": "xstrcoll_atime", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 0, 3, 22, 3, 4, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     r12, b", "mov     esi, 2Eh ; '.'; c", "mov     a, [a]; s", "call    _strrchr", "mov     rbx, rax", "mov     esi, 2Eh ; '.'; c", "mov     rdi, [b]; s", "call    _strrchr", "test    rax, rax", "lea     rdx, a8+6; \"\"", "cmovz   rax, rdx", "test    rbx, rbx", "cmovz   rbx, rdx", "mov     rsi, rax; b", "mov     rdi, rbx; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_7871"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~r12,b", "mov~esi,0", "mov~a,<TAG>", "call~FOO", "mov~rbx,rax", "mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "lea~rdx,<TAG>", "cmovz~rax,rdx", "test~rbx,rbx", "cmovz~rbx,rdx", "mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 0, 1, 0.0, ["mov     rsi, [b]; b", "mov     rdi, [a+0]; a", "call    xstrcoll"], ["mov~rsi,<TAG>", "mov~rdi,[a+0]", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     rbx", "pop     a", "pop     b", "retn"], ["pop~rbx", "pop~a", "pop~b", "retn"]]], "func_feature": [4, 3, 5, 0, 3, 3, 0, 29, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "xstrcoll_extension", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 1, 5, 1, 2, 0, 0, 0.1722222222222222, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_78CE"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 1, 0.08888888888888888, ["lea     rax, a8+6; \"\"", "test    rbx, rbx", "jnz     short loc_78B4"], ["lea~rax,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 1, -1, 0.04444444444444444, ["test    rbx, rbx", "lea     rdx, a8+6; \"\"", "cmovz   rbx, rdx"], ["test~rbx,rbx", "lea~rdx,<TAG>", "cmovz~rbx,rdx"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, b", "mov     rbp, [a]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     rbx, rax", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_78D3"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,b", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~rbx,rax", "mov~b,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, -1, 0.03333333333333333, ["mov     rsi, r12; s2", "mov     rdi, rbp; s1", "call    _strcmp"], ["mov~rsi,r12", "mov~rdi,rbp", "call~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 2, 0, 0.027777777777777776, ["jmp     short loc_78C3"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 4, 8, 0, 7, 9, 0, 34, 0.05238, 1, 0], "succs": [[4, 6], [0, 5], [0], [1, 2], [6], [4], []], "fname": "strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 0, 3, 22, 3, 4, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, a", "mov     rbp, b", "mov     esi, 2Eh ; '.'; c", "mov     a, [b+0]; s", "call    _strrchr", "mov     rbx, rax", "mov     esi, 2Eh ; '.'; c", "mov     rdi, [a]; s", "call    _strrchr", "test    rax, rax", "lea     rdx, a8+6; \"\"", "cmovz   rax, rdx", "test    rbx, rbx", "cmovz   rbx, rdx", "mov     rsi, rax; b", "mov     rdi, rbx; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_793B"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,a", "mov~rbp,b", "mov~esi,0", "mov~a,[b+0]", "call~FOO", "mov~rbx,rax", "mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "lea~rdx,<TAG>", "cmovz~rax,rdx", "test~rbx,rbx", "cmovz~rbx,rdx", "mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 0, 1, 0.0, ["mov     rsi, [a]; b", "mov     rdi, [b+0]; a", "call    xstrcoll"], ["mov~rsi,<TAG>", "mov~rdi,[b+0]", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     rbx", "pop     b", "pop     a", "retn"], ["pop~rbx", "pop~b", "pop~a", "retn"]]], "func_feature": [4, 3, 5, 0, 3, 3, 0, 29, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "rev_xstrcoll_extension", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.08888888888888888, ["lea     rax, a8+6; \"\"", "test    rbx, rbx", "jnz     short loc_797E"], ["lea~rax,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, a", "mov     rbp, [b]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     rbx, rax", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_799D"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,a", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~rbx,rax", "mov~a,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 2, 0, 0.027777777777777776, ["jmp     short loc_798D"], ["jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, -1, 0.1722222222222222, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_7998"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 1, -1, 0.04444444444444444, ["test    rbx, rbx", "lea     rdx, a8+6; \"\"", "cmovz   rbx, rdx"], ["test~rbx,rbx", "lea~rdx,<TAG>", "cmovz~rbx,rdx"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, -1, 0.03333333333333333, ["mov     rsi, r12; s2", "mov     rdi, rbp; s1", "call    _strcmp"], ["mov~rsi,r12", "mov~rdi,rbp", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 4, 8, 0, 7, 9, 0, 34, 0.05238, 1, 0], "succs": [[2, 3], [0, 4], [5], [5, 6], [3], [6], []], "fname": "rev_strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, edx", "pop     b", "pop     a", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~b", "pop~a", "pop~a_is_dir", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_79DD"], ["mov~edx,0", "jl~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [a+68h]", "sub     edx, [b+68h]", "jnz     short loc_79DD"], ["mov~rdx,[a+0]", "sub~edx,[b+0]", "jnz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [a+0]; s2", "mov     rdi, [b]; s1", "call    _strcmp", "mov     edx, eax", "jmp     short loc_79DD"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_79DD"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_79DD"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_79E4"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7A11"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_79CE"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 1, 0.17777777777777778, ["mov     rcx, [b+60h]", "mov     b_is_dir, [a+60h]", "cmp     rcx, rax", "jg      short loc_7A18"], ["mov~rcx,[b+0]", "mov~b_is_dir,[a+0]", "cmp~rcx,rax", "jg~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_79E4"], ["cmp~r12b,0", "jz~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[], [0, 2], [0, 3], [0], [0], [0], [0, 9], [10, 4], [10, 7], [1, 5], [9, 6]], "fname": "rev_strcmp_df_atime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7A85"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7A42"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 1, 0.17777777777777778, ["mov     rcx, [a+60h]", "mov     b_is_dir, [b+60h]", "cmp     rcx, rax", "jg      short loc_7A8C"], ["mov~rcx,[a+0]", "mov~b_is_dir,[b+0]", "cmp~rcx,rax", "jg~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7A58"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7A58"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7A51"], ["mov~edx,0", "jl~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7A51"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [b+68h]", "sub     edx, [a+68h]", "jnz     short loc_7A51"], ["mov~rdx,[b+0]", "sub~edx,[a+0]", "jnz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [b+0]; s2", "mov     rdi, [a]; s1", "call    _strcmp", "mov     edx, eax", "jmp     short loc_7A51"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, edx", "pop     a", "pop     b", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~a", "pop~b", "pop~a_is_dir", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7A51"], ["mov~edx,0", "jmp~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[10, 3], [0, 3], [5, 6], [2, 4], [9, 2], [9, 7], [9], [8, 9], [9], [], [9]], "fname": "strcmp_df_atime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7ACC"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7ACC"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7AC5"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 1, 0.17777777777777778, ["mov     rcx, [b+60h]", "mov     b_is_dir, [a+60h]", "cmp     rcx, rax", "jg      short loc_7B00"], ["mov~rcx,[b+0]", "mov~b_is_dir,[a+0]", "cmp~rcx,rax", "jg~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [a+68h]", "sub     edx, [b+68h]", "jnz     short loc_7AC5"], ["mov~rdx,[a+0]", "sub~edx,[b+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7AC5"], ["mov~edx,0", "jl~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [a+0]; b", "mov     rdi, [b]; a", "call    xstrcoll", "mov     edx, eax", "jmp     short loc_7AC5"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, edx", "pop     b", "pop     a", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~b", "pop~a", "pop~a_is_dir", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7AC5"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7AB6"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7AF9"], ["test~r12b,r12b", "jnz~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[3, 7], [0, 3], [7], [2, 5], [6, 7], [4, 7], [7], [], [7], [1, 10], [8, 1]], "fname": "rev_xstrcoll_df_atime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 10, 0, 2, 11, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7B2A"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7B39"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.17777777777777778, ["mov     rcx, [a+80h]", "mov     b_is_dir, [b+80h]", "cmp     rcx, rax", "jg      short loc_7B80"], ["mov~rcx,[a+0]", "mov~b_is_dir,[b+0]", "cmp~rcx,rax", "jg~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, -1, 0.06666666666666667, ["mov     rdx, [b+88h]", "sub     edx, [a+88h]", "jnz     short loc_7B39"], ["mov~rdx,[b+0]", "sub~edx,[a+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7B39"], ["mov~edx,0", "jl~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7B79"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 0, -1, 0.0, ["mov     rsi, [b+0]; b", "mov     rdi, [a]; a", "call    xstrcoll", "mov     edx, eax", "jmp     short loc_7B39"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7B40"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 0, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7B40"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7B39"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, -1, 0.0, ["mov     eax, edx", "pop     a", "pop     b", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~a", "pop~b", "pop~a_is_dir", "retn"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[5, 7], [10], [1, 4], [10, 6], [10, 3], [9, 7], [10], [8, 2], [2, 10], [10], []], "fname": "xstrcoll_df_ctime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 10, 0, 2, 11, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7BAA"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7BB9"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.17777777777777778, ["mov     rcx, [b+80h]", "mov     b_is_dir, [a+80h]", "cmp     rcx, rax", "jg      short loc_7C00"], ["mov~rcx,[b+0]", "mov~b_is_dir,[a+0]", "cmp~rcx,rax", "jg~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, -1, 0.06666666666666667, ["mov     rdx, [a+88h]", "sub     edx, [b+88h]", "jnz     short loc_7BB9"], ["mov~rdx,[a+0]", "sub~edx,[b+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7BB9"], ["mov~edx,0", "jl~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7BF9"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 0, -1, 0.0, ["mov     rsi, [a+0]; s2", "mov     rdi, [b]; s1", "call    _strcmp", "mov     edx, eax", "jmp     short loc_7BB9"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7BC0"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 0, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7BC0"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7BB9"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, -1, 0.0, ["mov     eax, edx", "pop     b", "pop     a", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~b", "pop~a", "pop~a_is_dir", "retn"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[5, 7], [10], [1, 4], [10, 6], [10, 3], [9, 7], [10], [8, 2], [2, 10], [10], []], "fname": "rev_strcmp_df_ctime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 10, 0, 2, 11, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7C2A"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7C39"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.17777777777777778, ["mov     rcx, [a+80h]", "mov     b_is_dir, [b+80h]", "cmp     rcx, rax", "jg      short loc_7C80"], ["mov~rcx,[a+0]", "mov~b_is_dir,[b+0]", "cmp~rcx,rax", "jg~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, -1, 0.06666666666666667, ["mov     rdx, [b+88h]", "sub     edx, [a+88h]", "jnz     short loc_7C39"], ["mov~rdx,[b+0]", "sub~edx,[a+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7C39"], ["mov~edx,0", "jl~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7C79"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 0, -1, 0.0, ["mov     rsi, [b+0]; s2", "mov     rdi, [a]; s1", "call    _strcmp", "mov     edx, eax", "jmp     short loc_7C39"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7C40"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 0, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7C40"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7C39"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, -1, 0.0, ["mov     eax, edx", "pop     a", "pop     b", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~a", "pop~b", "pop~a_is_dir", "retn"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[5, 7], [10], [1, 4], [10, 6], [10, 3], [9, 7], [10], [8, 2], [2, 10], [10], []], "fname": "strcmp_df_ctime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 10, 0, 2, 11, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7CAA"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7CED"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.17777777777777778, ["mov     rcx, [a+70h]", "mov     b_is_dir, [b+70h]", "cmp     rcx, rax", "jg      short loc_7CF4"], ["mov~rcx,[a+0]", "mov~b_is_dir,[b+0]", "cmp~rcx,rax", "jg~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 2, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7CC0"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 0, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7CC0"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7CB9"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7CB9"], ["mov~edx,0", "jl~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 0, -1, 0.0, ["mov     rsi, [b+0]; b", "mov     rdi, [a]; a", "call    xstrcoll", "mov     edx, eax", "jmp     short loc_7CB9"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 0, -1, 0.06666666666666667, ["mov     rdx, [b+78h]", "sub     edx, [a+78h]", "jnz     short loc_7CB9"], ["mov~rdx,[b+0]", "sub~edx,[a+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7CB9"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, -1, 0.0, ["mov     eax, edx", "pop     a", "pop     b", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~a", "pop~b", "pop~a_is_dir", "retn"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[1, 3], [3, 5], [9, 6], [2, 4], [2, 10], [10], [8, 10], [10], [10, 7], [10], []], "fname": "xstrcoll_df_mtime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7D34"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     rbx, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7D1E"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~rbx,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 3, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7D61"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7D2D"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7D2D"], ["mov~edx,0", "jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 1, 0.17777777777777778, ["mov     rcx, [b+70h]", "mov     b_is_dir, [a+70h]", "cmp     rcx, rax", "jg      short loc_7D68"], ["mov~rcx,[b+0]", "mov~b_is_dir,[a+0]", "cmp~rcx,rax", "jg~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 2, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7D34"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7D2D"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     rdx, [a+78h]", "sub     edx, [b+78h]", "jnz     short loc_7D2D"], ["mov~rdx,[a+0]", "sub~edx,[b+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, edx", "pop     b", "pop     a", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~b", "pop~a", "pop~a_is_dir", "retn"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rsi, [a+0]; s2", "mov     rdi, [b]; s1", "call    _strcmp", "mov     edx, eax", "jmp     short loc_7D2D"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[5, 6], [0, 2], [0, 3], [9], [8, 9], [4, 7], [9, 5], [9], [9, 10], [], [9]], "fname": "rev_strcmp_df_mtime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.005555555555555556, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7DA1"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 2, 0, 0.17777777777777778, ["mov     rcx, [a+70h]", "mov     b_is_dir, [b+70h]", "cmp     rcx, rax", "jg      short loc_7DDC"], ["mov~rcx,[a+0]", "mov~b_is_dir,[b+0]", "cmp~rcx,rax", "jg~FOO"]], [0, 0, 2, 1, 0, 3, 0, 1, 4, 0, 0.06666666666666667, ["mov     rdx, [b+78h]", "sub     edx, [a+78h]", "jnz     short loc_7DA1"], ["mov~rdx,[b+0]", "sub~edx,[a+0]", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 0, 0.11666666666666667, ["mov     edx, 1", "jl      short loc_7DA1"], ["mov~edx,0", "jl~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     eax, edx", "pop     a", "pop     b", "pop     a_is_dir", "retn"], ["mov~eax,edx", "pop~a", "pop~b", "pop~a_is_dir", "retn"]], [0, 0, 1, 0, 1, 5, 0, 2, 5, 0, 0.0, ["mov     rsi, [b+0]; s2", "mov     rdi, [a]; s1", "call    _strcmp", "mov     edx, eax", "jmp     short loc_7DA1"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "mov~edx,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.016666666666666666, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_7DA1"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 0, 0.016666666666666666, ["mov     edx, 1", "test    al, al", "jz      short loc_7DA8"], ["mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 2, 11, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "cmp     al, 1", "jz      short loc_7D92"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "cmp~al,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 0, 0.016666666666666666, ["test    r12b, r12b", "jnz     short loc_7DD5"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 0, 0.1388888888888889, ["cmp     r12b, 1", "jz      short loc_7DA8"], ["cmp~r12b,0", "jz~FOO"]]], "func_feature": [3, 2, 13, 0, 11, 17, 0, 41, 0.05051, 0, 1], "succs": [[4], [0, 3], [4, 5], [2, 4], [], [4], [4], [1, 4], [9, 10], [10, 6], [1, 7]], "fname": "strcmp_df_mtime", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 7, 0, 2, 12, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "mov     rbp, b", "call    is_linked_directory", "mov     r12d, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_7E08"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "mov~rbp,b", "call~FOO", "mov~r12d,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 0, 1, 0.031746031746031744, ["test    r12b, r12b", "jnz     short loc_7E6C"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 0, -1, 0.0, ["mov     rsi, [b+0]; b", "mov     rdi, [a]; a", "call    xstrcoll", "jmp     short loc_7E17"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 3, 17, 3, 4, 0, -1, 0.11507936507936506, ["mov     esi, 2Eh ; '.'; c", "mov     rdi, [a]; s", "call    _strrchr", "mov     a_is_dir, rax", "mov     esi, 2Eh ; '.'; c", "mov     rdi, [b+0]; s", "call    _strrchr", "test    rax, rax", "lea     rdx, a8+6; \"\"", "cmovz   rax, rdx", "test    r12, r12", "cmovz   r12, rdx", "mov     rsi, rax; b", "mov     rdi, r12; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_7E17"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "mov~a_is_dir,rax", "mov~esi,0", "mov~rdi,[b+0]", "call~FOO", "test~rax,rax", "lea~rdx,<TAG>", "cmovz~rax,rdx", "test~r12,r12", "cmovz~r12,rdx", "mov~rsi,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, -1, 0.1587301587301587, ["cmp     r12b, 1", "jz      short loc_7E1C"], ["cmp~r12b,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.031746031746031744, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_7E17"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 0, -1, 0.019841269841269837, ["mov     eax, 1", "test    dl, dl", "jz      short loc_7E1C"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     a", "pop     b", "pop     r12", "retn"], ["pop~a", "pop~b", "pop~r12", "retn"]]], "func_feature": [6, 5, 13, 0, 8, 12, 0, 46, 0.04464, 1, 0], "succs": [[1, 4], [4, 5], [7], [2, 7], [3, 6], [7], [3, 7], []], "fname": "xstrcoll_df_extension", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0.019696969696969695, ["jmp     short loc_7EF0"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, 0, 0.10303030303030301, ["lea     rax, a8+6; \"\"", "test    rbx, rbx", "jnz     short loc_7EE1"], ["lea~rax,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, 0, 0.013636363636363636, ["mov     eax, 1", "test    dl, dl", "jz      short loc_7EA9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 0, 0.1318181818181818, ["cmp     bl, 1", "jz      short loc_7EA9"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, 0, 0.07121212121212121, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_7EA4"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 5, 0, 0.00909090909090909, ["mov     rsi, rbp; s2", "mov     rdi, r12; s1", "call    _strcmp", "jmp     short loc_7EA4"], ["mov~rsi,rbp", "mov~rdi,r12", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.013636363636363636, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_7EA4"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 0, 0.013636363636363636, ["test    bl, bl", "jnz     short loc_7EFD"], ["test~bl,bl", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 3, 0, 0.04242424242424242, ["test    rbx, rbx", "lea     rdx, a8+6; \"\"", "cmovz   rbx, rdx"], ["test~rbx,rbx", "lea~rdx,<TAG>", "cmovz~rbx,rdx"]], [1, 0, 11, 0, 2, 12, 0, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "mov     r12, b", "call    is_linked_directory", "mov     ebx, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_7E96"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "mov~r12,b", "call~FOO", "mov~ebx,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [2, 0, 6, 0, 2, 11, 1, 3, 2, 0, 0.18181818181818182, ["mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, r12; s", "call    _strrchr", "mov     a_is_dir, rax", "mov     a, [a+0]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_7F04"], ["mov~b,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "mov~a_is_dir,rax", "mov~a,[a+0]", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [6, 6, 16, 0, 12, 18, 0, 52, 0.05, 1, 0], "succs": [[6], [0, 5], [11, 4], [2, 11], [], [4, 6], [4], [4], [3, 7], [5], [8, 3], [1, 9]], "fname": "rev_strcmp_df_extension", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 7, 0, 0, 3, 1, 1, 0, 0, 0.013636363636363636, ["mov     eax, 1", "test    dl, dl", "jz      short loc_7F48"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.1318181818181818, ["cmp     bl, 1", "jz      short loc_7F48"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.013636363636363636, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_7F43"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 4, 0.013636363636363636, ["test    bl, bl", "jnz     short loc_7F9C"], ["test~bl,bl", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.07121212121212121, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_7F43"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 5, -1, 0.00909090909090909, ["mov     rsi, rbp; s2", "mov     rdi, r12; s1", "call    _strcmp", "jmp     short loc_7F43"], ["mov~rsi,rbp", "mov~rdi,r12", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, 1, 0.10303030303030301, ["lea     rax, a8+6; \"\"", "test    rbx, rbx", "jnz     short loc_7F80"], ["lea~rax,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 6, 0, 2, 11, 1, 3, 2, 2, 0.18181818181818182, ["mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, r12; s", "call    _strrchr", "mov     a_is_dir, rax", "mov     b, [b+0]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_7FA3"], ["mov~a,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "mov~a_is_dir,rax", "mov~b,[b+0]", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 3, -1, 0.04242424242424242, ["test    rbx, rbx", "lea     rdx, a8+6; \"\"", "cmovz   rbx, rdx"], ["test~rbx,rbx", "lea~rdx,<TAG>", "cmovz~rbx,rdx"]], [1, 0, 11, 0, 2, 12, 0, 3, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, a", "mov     rbp, b", "call    is_linked_directory", "mov     ebx, eax", "mov     rdi, b; f", "call    is_linked_directory", "mov     edx, eax", "cmp     al, 1", "jz      short loc_7F35"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,a", "mov~rbp,b", "call~FOO", "mov~ebx,eax", "mov~rdi,b", "call~FOO", "mov~edx,eax", "cmp~al,0", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, 0, 0.019696969696969695, ["jmp     short loc_7F8F"], ["jmp~FOO"]]], "func_feature": [6, 6, 16, 0, 12, 18, 0, 52, 0.05, 1, 0], "succs": [[8, 4], [0, 8], [4], [1, 2], [], [4, 6], [4], [11, 5], [9, 7], [5], [1, 3], [6]], "fname": "strcmp_df_extension", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 18, 0, 0, 6, 1, 1, 0, 0, 0.10476190476190478, ["cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   edx, dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      short loc_802D"], ["cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~edx,dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 18, 0, 1, 5, 0, 2, 5, 5, 0.1761904761904762, ["mov     r15, [f+0]", "mov     rdi, r15; name", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "jz      short loc_7FFB"], ["mov~r15,[f+0]", "mov~rdi,r15", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 7, 4, 0.05, ["cmp     al, 2Fh ; '/'", "jz      short loc_802D"], ["cmp~al,0", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 8, 7, 0.02380952380952381, ["jmp     short loc_8070"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 4, 0, 0.0, ["mov     cs:cwd_n_used, rdx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     command_line_arg", "pop     dirname", "pop     r15", "retn"], ["mov~<TAG>,rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~command_line_arg", "pop~dirname", "pop~r15", "retn"]], [0, 0, 3, 0, 0, 3, 1, 1, 3, 1, 0.1285714285714286, ["mov     rdx, cs:cwd_n_used", "test    rdx, rdx", "jz      short loc_8101"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [2, 0, 2, 2, 0, 9, 0, 1, 5, 1, 0.002380952380952381, ["mov     rcx, [rax]", "mov     [rsi+j*8], f", "cmp     dword ptr [f+0A8h], 9", "setnz   cl", "movzx   ecx, cl", "add     j, rcx", "add     rax, 8", "cmp     rdi, rax", "jnz     short loc_80E1"], ["mov~rcx,<TAG>", "mov~<TAG>,f", "cmp~[word ptr [f+0],0", "setnz~cl", "movzx~ecx,cl", "add~j,rcx", "add~rax,0", "cmp~rdi,rax", "jnz~FOO"]], [0, 0, 18, 0, 1, 4, 0, 1, 5, 5, 0.09642857142857143, ["mov     rsi, [f+8]; realname", "mov     edx, r13d; command_line_arg", "mov     rdi, [f+0]; name", "call    queue_directory"], ["mov~rsi,[f+0]", "mov~edx,r13d", "mov~rdi,[f+0]", "call~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, 6, 0.25952380952380955, ["test    dirname, dirname", "jz      short loc_8014"], ["test~dirname,dirname", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, 6, 0.09523809523809525, ["cmp     byte ptr [r15], 2Fh ; '/'", "jz      short loc_8014"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 3, 12, 0, 4, 7, 5, 0.04166666666666667, ["mov     edx, 0; base_in_result", "mov     rsi, r15; base", "mov     rdi, dirname; dir", "call    file_name_concat", "mov     r15, rax", "mov     rsi, [f+8]; realname", "mov     edx, r13d; command_line_arg", "mov     rdi, name; name", "call    queue_directory", "mov     rdi, name; ptr", "call    free", "jmp     short loc_8024"], ["mov~edx,0", "mov~rsi,r15", "mov~rdi,dirname", "call~FOO", "mov~r15,rax", "mov~rsi,[f+0]", "mov~edx,r13d", "mov~rdi,name", "call~FOO", "mov~rdi,name", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, 4, 0.17857142857142858, ["cmp     dword ptr [f+0A8h], 9", "jz      short loc_80A2"], ["cmp~[word ptr [f+0],0", "jz~FOO"]], [1, 0, 18, 1, 0, 1, 0, 0, 5, 3, 0.3023809523809524, ["sub     r12, 8"], ["sub~r12,0"]], [1, 0, 18, 0, 0, 2, 0, 1, 4, 4, 0.026190476190476195, ["cmp     eax, 9", "jnz     short loc_802D"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 18, 0, 3, 7, 0, 4, 7, 4, 0.0, ["mov     rdi, [f+0]; ptr", "call    free", "mov     rdi, [f+8]; ptr", "call    free", "mov     rdi, [f+10h]; ptr", "call    free", "jmp     loc_802D"], ["mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "jmp~FOO"]], [2, 0, 18, 1, 0, 3, 0, 1, 2, 2, 0.47380952380952385, ["sub     i, 1", "cmp     i, 0FFFFFFFFFFFFFFFFh", "jz      loc_80C2"], ["sub~i,0", "cmp~i,0", "jz~FOO"]], [0, 0, 18, 0, 0, 4, 0, 1, 1, 3, 0.1285714285714286, ["mov     rbx, cs:cwd_n_used", "lea     r12, ds:0FFFFFFFFFFFFFFF8h[i*8]", "movzx   r13d, r13b", "jmp     short loc_8031"], ["mov~rbx,<TAG>", "lea~r12,<TAG>", "movzx~r13d,r13b", "jmp~FOO"]], [1, 0, 21, 1, 0, 11, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, dirname", "mov     r13d, esi", "test    dirname, dirname", "jz      short loc_7FE6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,dirname", "mov~r13d,esi", "test~dirname,dirname", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 4, 0.002380952380952381, ["cmp     cs:active_dir_set, 0", "jz      short loc_7FE6"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 0, 5, 0, 1, 3, 5, 0.3023809523809524, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+r12]", "mov     eax, [f+0A8h]", "cmp     eax, 3", "jz      short loc_805A"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~eax,[f+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 4, 0, 0, 4, 2, 0.045238095238095244, ["mov     rsi, cs:sorted_file", "mov     rax, rsi", "lea     rdi, [rsi+rdx*8]", "mov     edx, 0"], ["mov~rsi,<TAG>", "mov~rax,rsi", "lea~rdi,<TAG>", "mov~edx,0"]], [2, 0, 19, 0, 1, 4, 0, 1, 2, 4, 0.0, ["mov     edx, 0; command_line_arg", "mov     command_line_arg, dirname; realname", "mov     edi, 0; name", "call    queue_directory"], ["mov~edx,0", "mov~command_line_arg,dirname", "mov~edi,0", "call~FOO"]]], "func_feature": [9, 4, 26, 0, 22, 34, 2, 100, 0.11082, 4, 6], "succs": [[2, 12], [0, 9], [3, 12], [9], [], [20, 4], [4, 6], [11], [1, 7], [10, 7], [11], [12, 14], [15], [8, 12], [12], [19, 5], [15], [16, 18], [16, 21], [8, 13], [6], [16]], "fname": "extract_dirs_from_files", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 96, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     [rsp+1338h+modebuf+0Ah], 2Bh ; '+'", "jmp     loc_816B"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 4, 20, 0.004947722180731889, ["cmp     eax, 2", "jnz     loc_816B"], ["cmp~eax,0", "jnz~FOO"]], [1, 1, 9, 1, 0, 4, 0, 0, 21, 4, 0.016803584764749815, ["add     p, rax", "lea     rbp, [p+1]", "mov     byte ptr [r12], 20h ; ' '", "mov     byte ptr [r12+1], 0"], ["add~p,rax", "lea~rbp,[p+0]", "mov~<TAG>,<STR>", "mov~[yte ptr [r12+0],0"]], [1, 0, 23, 0, 1, 6, 1, 2, 24, 5, 0.03435399551904406, ["lea     rcx, [rsp+1338h+when_local]; tp", "mov     esi, 3E9h; maxsize", "mov     rdi, p; s", "call    nstrftime", "test    rax, rax", "jnz     short loc_89F8"], ["lea~rcx,[rsp+0]", "mov~esi,0", "mov~rdi,p", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 20, 5, 0.007748319641523525, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 27, 1, 0, 4, 0, 1, 23, 8, 0.003360716952949963, ["mov     eax, r9d", "sub     eax, edi", "shr     eax, 1Fh", "jmp     loc_89B0"], ["mov~eax,r9d", "sub~eax,edi", "shr~eax,0", "jmp~FOO"]], [0, 0, 33, 0, 0, 3, 0, 1, 22, 9, 0.016616878267363706, ["lea     rsi, [rcx-0F0C2ACh]", "cmp     rdx, rsi", "jg      short loc_8802"], ["lea~rsi,[rcx-0F0C2ACh]+0]", "cmp~rdx,rsi", "jg~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 22, 8, 0.0035941000746825993, ["mov     eax, 0", "jl      loc_89B0"], ["mov~eax,0", "jl~FOO"]], [0, 0, 89, 0, 0, 5, 0, 1, 6, 18, 0.008308439133681853, ["mov     rax, [f+78h]", "mov     rdx, [f+70h]", "mov     [rsp+1338h+when_timespec.tv_sec], rdx", "mov     [rsp+1338h+when_timespec.tv_nsec], rax", "jmp     loc_822A"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rdx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 93, 0, 0, 2, 0, 0, 5, 19, 0.003734129947722181, ["cmp     eax, 1", "jb      loc_83FA"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 4, 20, 0.004480955937266617, ["mov     [rsp+1338h+modebuf+0Ah], 2Eh ; '.'", "jmp     loc_816B"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 99, 0, 0, 3, 0, 1, 3, 21, 0.0011202389843166542, ["mov     eax, [f+0BCh]", "cmp     eax, 1", "jz      short loc_8205"], ["mov~eax,[f+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 6, 19, 0.0020537714712471995, ["cmp     eax, 2", "jnz     loc_8411"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 87, 0, 0, 3, 0, 1, 7, 18, 0.004480955937266617, ["lea     r9, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jz      short loc_842F"], ["lea~r9,<TAG>", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 88, 0, 0, 3, 0, 1, 6, 17, 0.12322628827483197, ["lea     rbp, [rsp+1338h+buf]", "cmp     cs:print_inode, 0", "jnz     loc_8416"], ["lea~rbp,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 89, 0, 0, 4, 0, 0, 5, 18, 0.08308439133681852, ["mov     rax, [f+88h]", "mov     rdx, [f+80h]", "mov     [rsp+1338h+when_timespec.tv_sec], rdx", "mov     [rsp+1338h+when_timespec.tv_nsec], rax"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rdx", "mov~[rsp+0],rax"]], [1, 0, 95, 0, 0, 3, 0, 1, 4, 19, 0.07981702763256161, ["mov     eax, cs:time_type_0", "cmp     eax, 1", "jz      loc_8212"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 86, 0, 0, 3, 1, 1, 8, 18, 0.0015870052277819268, ["mov     rdi, [f+20h]; i", "test    rdi, rdi", "jnz     short loc_847D"], ["mov~rdi,[f+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 24, 3, 0, 9, 0, 1, 23, 6, 0.018670649738610906, ["cdqe", "lea     rdx, [rax+rax]", "add     rax, rdx", "movsxd  rdx, [rsp+1338h+when_local.tm_mon]", "lea     rdx, [rdx+rax*4]", "shl     rdx, 7", "lea     rax, abformat", "add     rdx, rax", "jmp     loc_89D1"], ["cdqe~", "lea~rdx,<TAG>", "add~rax,rdx", "movsxd~rdx,[rsp+0]", "lea~rdx,<TAG>", "shl~rdx,0", "lea~rax,<TAG>", "add~rdx,rax", "jmp~FOO"]], [1, 0, 26, 0, 0, 3, 0, 1, 22, 7, 0.0494772218073189, ["mov     r8, cs:localtz; tz", "cmp     cs:use_abformat, 0", "jnz     loc_880F"], ["mov~r8,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 89, 0, 0, 5, 0, 1, 7, 18, 0.008308439133681853, ["mov     rax, [f+68h]", "mov     rdx, [f+60h]", "mov     [rsp+1338h+when_timespec.tv_sec], rdx", "mov     [rsp+1338h+when_timespec.tv_nsec], rax", "jmp     loc_822A"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rdx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 20, 6, 0.023618371919342795, ["lea     rbp, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jz      loc_86DB"], ["lea~rbp,<TAG>", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 19, 6, 0.04462285287528006, ["cmp     byte ptr [p], 0", "jnz     loc_8834"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 7, 16, 0.1549663928304705, ["cmp     cs:print_block_size, 0", "jz      short loc_82B9"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 84, 0, 1, 16, 0, 2, 8, 17, 0.02352501867064974, ["lea     p, [rsp+1338h+buf]", "mov     r8d, cs:inode_number_width", "lea     rcx, aS; \"%*s \"", "mov     edx, 0E3Bh", "mov     esi, 1", "mov     rdi, p", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, p", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     p, [p+rsi-1]", "jmp     loc_823F"], ["lea~p,[rsp+0]", "mov~r8d,<TAG>", "lea~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "mov~rdi,p", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,p", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~p,[p+0]", "jmp~FOO"]], [2, 0, 8, 2, 2, 15, 0, 3, 20, 3, 0.07094846900672144, ["lea     r12, [rsp+1338h+buf]", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r12; s", "call    _fputs_unlocked", "sub     p, r12", "add     cs:dired_pos, rbp", "mov     rcx, rbp; start_col", "lea     rdx, dired_obstack; stack", "mov     esi, 0; symlink_target", "mov     rdi, f; f", "call    print_name_with_quoting", "mov     r12, rax", "mov     edx, [f+0A8h]; type", "cmp     edx, 6", "jz      loc_890D"], ["lea~r12,[rsp+0]", "mov~rsi,<TAG>", "mov~rdi,r12", "call~FOO", "sub~p,r12", "add~<TAG>,rbp", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,f", "call~FOO", "mov~r12,rax", "mov~edx,[f+0]", "cmp~edx,0", "jz~FOO"]], [5, 0, 9, 0, 1, 16, 0, 2, 19, 4, 0.06133308439133682, ["mov     r9, rbp", "mov     r8d, cs:width_10774", "lea     rcx, aS; \"%*s \"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, p", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbp, [r12+rsi-1]", "jmp     loc_8A0B"], ["mov~r9,rbp", "mov~r8d,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,p", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbp,[r12+0]", "jmp~FOO"]], [1, 0, 82, 0, 0, 3, 0, 1, 8, 20, 0.017643764002987304, ["lea     r12, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jnz     loc_848F"], ["lea~r12,<TAG>", "cmp~[yte ptr [f+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 21, 2, 0.022404779686333087, ["cmp     cs:indicator_style_0, 0", "jnz     loc_897B"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 18, 0, 1, 5, 0, 2, 21, 6, 0.0, ["lea     rsi, [rsp+1338h+hbuf_0]; buf", "mov     rdi, [rsp+1338h+when_timespec.tv_sec]; i", "call    imaxtostr", "mov     rbp, rax", "jmp     loc_86DB"], ["lea~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [9, 2, 42, 3, 3, 43, 5, 4, 16, 7, 0.2038834951456311, ["mov     edx, cs:major_device_number_width", "mov     eax, cs:minor_device_number_width", "lea     eax, [rdx+rax+2]", "mov     r12d, cs:file_size_width", "sub     r12d, eax", "mov     rax, [f+40h]", "movzx   edx, al", "lea     rsi, [rsp+1338h+hbuf]; buf", "shr     rax, 0Ch", "mov     rdi, rax", "mov     dil, 0", "or      edi, edx; i", "call    umaxtostr", "mov     r14, rax", "mov     r13d, cs:minor_device_number_width", "mov     rax, [f+40h]", "mov     rdi, rax", "shr     rdi, 8", "mov     edx, edi", "and     edx, 0FFFh", "lea     rsi, [rsp+1338h+hbuf_0]; buf", "shr     rax, 20h", "mov     rdi, rax", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "mov     r9, rax", "test    r12d, r12d", "mov     r8d, 0", "cmovns  r8d, r12d", "push    r14", "push    r13", "add     r8d, cs:major_device_number_width", "lea     rcx, unk_16693", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "mov     eax, 0", "call    ___sprintf_chk", "movsxd  rax, cs:file_size_width", "lea     blanks_width, [p+rax+1]", "add     rsp, 10h", "jmp     short loc_86C6"], ["mov~edx,<TAG>", "mov~eax,<TAG>", "lea~eax,[rdx+0]", "mov~r12d,<TAG>", "sub~r12d,eax", "mov~rax,[f+0]", "movzx~edx,al", "lea~rsi,[rsp+0]", "shr~rax,0", "mov~rdi,rax", "mov~dil,0", "or~edi,edx", "call~FOO", "mov~r14,rax", "mov~r13d,<TAG>", "mov~rax,[f+0]", "mov~rdi,rax", "shr~rdi,0", "mov~edx,edi", "and~edx,<STR>", "lea~rsi,[rsp+0]", "shr~rax,<STR>", "mov~rdi,rax", "and~edi,0", "or~edi,edx", "call~FOO", "mov~r9,rax", "test~r12d,r12d", "mov~r8d,0", "cmovns~r8d,r12d", "push~r14", "push~r13", "add~r8d,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "mov~eax,0", "call~FOO", "movsxd~rax,<TAG>", "lea~blanks_width,[p+0]", "add~rsp,0", "jmp~FOO"]], [2, 0, 51, 0, 0, 4, 1, 1, 15, 8, 0.20948469006721435, ["mov     eax, [f+30h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_85A8"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 49, 0, 0, 1, 0, 0, 15, 10, 0.03332710978342047, ["lea     r13, string; \"?\""], ["lea~r13,<TAG>"]], [1, 0, 53, 0, 0, 2, 0, 1, 14, 9, 0.2473861090365945, ["cmp     byte ptr [f+0B8h], 0", "jz      loc_8668"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [2, 0, 13, 0, 1, 7, 1, 2, 21, 6, 0.010455563853622106, ["lea     rcx, [rsp+1338h+tm]; tp", "lea     rdi, [rsp+1338h+hbuf]; s", "mov     r9d, 0; ns", "mov     esi, 3E9h; maxsize", "call    nstrftime", "test    rax, rax", "jnz     short loc_88F0"], ["lea~rcx,[rsp+0]", "lea~rdi,[rsp+0]", "mov~r9d,0", "mov~esi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 14, 2, 0, 5, 0, 1, 21, 7, 0.0, ["movsxd  rdx, [rsp+1338h+tm.tm_mon]", "shl     rdx, 7", "lea     rax, abformat", "add     rdx, rax", "jmp     short loc_889D"], ["movsxd~rdx,[rsp+0]", "shl~rdx,0", "lea~rax,<TAG>", "add~rdx,rax", "jmp~FOO"]], [1, 0, 15, 0, 0, 4, 0, 1, 20, 7, 0.024085138162808068, ["mov     r8, cs:localtz; tz", "mov     rdx, cs:long_time_format; format", "cmp     cs:use_abformat, 0", "jnz     short loc_88DB"], ["mov~r8,<TAG>", "mov~rdx,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 22, 1, 0.018857356235997012, ["mov     rax, [rsp+1338h+var_30]", "xor     rax, fs:28h", "jnz     short loc_8A85"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 21, 2, 0.03136669156086632, ["cmp     qword ptr [f+8], 0", "jz      loc_8A62"], ["cmp~[word ptr [f+0],0", "jz~FOO"]], [6, 0, 4, 1, 2, 13, 0, 3, 22, 2, 0.009055265123226288, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 4; n", "mov     esi, 1; size", "lea     rdi, asc_1669D; \" -> \"", "call    _fwrite_unlocked", "add     cs:dired_pos, 4", "lea     rcx, [rbp+w+4]; start_col", "mov     edx, 0; stack", "mov     esi, 1; symlink_target", "mov     rdi, f; f", "call    print_name_with_quoting", "cmp     cs:indicator_style_0, 0", "jz      loc_8A62"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "add~<TAG>,0", "lea~rcx,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,f", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 3, 0, 1, 5, 0, 2, 23, 2, 0.0, ["mov     esi, [f+0ACh]; mode", "mov     edx, 0; type", "mov     edi, 1; stat_ok", "call    print_type_indicator", "jmp     loc_8A62"], ["mov~esi,[f+0]", "mov~edx,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 22, 2, 0.0, ["mov     esi, [f+30h]; mode", "movzx   edi, byte ptr [f+0B8h]; stat_ok", "call    print_type_indicator", "jmp     loc_8A62"], ["mov~esi,[f+0]", "movzx~edi,[yte ptr [f+0]", "call~FOO", "jmp~FOO"]], [1, 0, 80, 1, 1, 8, 1, 2, 9, 19, 0.028659447348767738, ["mov     r13d, cs:block_size_width", "mov     esi, 0; flags", "mov     rdi, blocks; string", "call    gnu_mbswidth", "mov     ecx, r13d", "sub     ecx, eax", "test    ecx, ecx", "jle     loc_84BA"], ["mov~r13d,<TAG>", "mov~esi,0", "mov~rdi,blocks", "call~FOO", "mov~ecx,r13d", "sub~ecx,eax", "test~ecx,ecx", "jle~FOO"]], [0, 1, 81, 0, 1, 8, 0, 2, 9, 20, 0.0, ["lea     rsi, [rsp+1338h+hbuf]; buf", "mov     rdi, [f+58h]; n", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "mov     edx, cs:human_output_opts; opts", "call    human_readable", "mov     r12, rax", "jmp     loc_825C"], ["lea~rsi,[rsp+0]", "mov~rdi,[f+0]", "mov~r8,<TAG>", "mov~ecx,<STR>", "mov~edx,<TAG>", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [0, 0, 85, 0, 1, 4, 0, 2, 9, 18, 0.0, ["lea     rsi, [rsp+1338h+hbuf]; buf", "call    umaxtostr", "mov     r9, rax", "jmp     short loc_842F"], ["lea~rsi,[rsp+0]", "call~FOO", "mov~r9,rax", "jmp~FOO"]], [1, 0, 16, 0, 1, 7, 1, 2, 19, 6, 0.04761015683345781, ["mov     [rsp+1338h+t], 0", "lea     rdx, [rsp+1338h+tm]; tm", "lea     rsi, [rsp+1338h+t]; t", "mov     rdi, cs:localtz; tz", "call    localtime_rz", "test    rax, rax", "jz      short loc_88BF"], ["mov~[rsp+0],0", "lea~rdx,[rsp+0]", "lea~rsi,[rsp+0]", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 18, 5, 0.11734503360716954, ["cmp     cs:width_10774, 0", "js      loc_8862"], ["cmp~<TAG>,0", "js~FOO"]], [0, 0, 78, 0, 0, 3, 0, 0, 10, 20, 0.004480955937266617, ["lea     eax, [pad-1]", "lea     rdx, [p+rax+1]", "mov     rax, p"], ["lea~eax,[pad-1]+0]", "lea~rdx,[p+0]", "mov~rax,p"]], [1, 0, 48, 1, 1, 8, 1, 2, 16, 9, 0.038088125466766244, ["mov     r12d, cs:file_size_width", "mov     esi, 0; flags", "mov     rdi, size; string", "call    gnu_mbswidth", "mov     ecx, r12d", "sub     ecx, eax", "test    ecx, ecx", "jle     short loc_86AC"], ["mov~r12d,<TAG>", "mov~esi,0", "mov~rdi,size", "call~FOO", "mov~ecx,r12d", "sub~ecx,eax", "test~ecx,ecx", "jle~FOO"]], [1, 0, 49, 0, 1, 8, 0, 2, 16, 10, 0.0006534727408513816, ["lea     rsi, [rsp+1338h+hbuf]; buf", "mov     rdi, [f+48h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, cs:file_human_output_opts; opts", "call    human_readable", "mov     r13, rax", "jmp     loc_866F"], ["lea~rsi,[rsp+0]", "mov~rdi,[f+0]", "mov~r8,<TAG>", "mov~ecx,0", "mov~edx,<TAG>", "call~FOO", "mov~r13,rax", "jmp~FOO"]], [1, 1, 78, 1, 0, 4, 0, 1, 11, 19, 0.009428678117998506, ["add     p, 1", "mov     byte ptr [p-1], 20h ; ' '", "cmp     p, rdx", "jnz     short loc_8288"], ["add~p,0", "mov~[yte ptr [p-1]+0],<STR>", "cmp~p,rdx", "jnz~FOO"]], [0, 0, 47, 0, 0, 3, 0, 0, 17, 11, 0.010268857356235998, ["lea     eax, [pad-1]", "lea     rdx, [p+rax+1]", "mov     rax, p"], ["lea~eax,[pad-1]+0]", "lea~rdx,[p+0]", "mov~rax,p"]], [0, 0, 76, 0, 0, 2, 0, 0, 12, 18, 0.014189693801344288, ["lea     eax, [rcx-1]", "lea     rdx, [rbp+rax+1]"], ["lea~eax,[rcx-1]+0]", "lea~rdx,[rbp+0]"]], [1, 1, 47, 1, 0, 4, 0, 1, 18, 10, 0.009428678117998506, ["add     p, 1", "mov     byte ptr [p-1], 20h ; ' '", "cmp     p, rdx", "jnz     short loc_8697"], ["add~p,0", "mov~[yte ptr [p-1]+0],<STR>", "cmp~p,rdx", "jnz~FOO"]], [0, 0, 45, 0, 0, 2, 0, 0, 19, 9, 0.008401792382374908, ["lea     eax, [rcx-1]", "lea     rbp, [rbp+rax+1]"], ["lea~eax,[rcx-1]+0]", "lea~rbp,[rbp+0]"]], [1, 0, 76, 1, 0, 6, 1, 1, 11, 17, 0.05983943241224795, ["add     blocks, 1", "lea     rbp, [p+1]", "movzx   eax, byte ptr [blocks-1]", "mov     [p-1], al", "test    al, al", "jnz     loc_84C2"], ["add~blocks,0", "lea~rbp,[p+0]", "movzx~eax,[yte ptr [blocks-1]+0]", "mov~[p-1]+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 10, 18, 0.027165795369678867, ["mov     rdx, p", "jmp     loc_829D"], ["mov~rdx,p", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 12, 18, 0.0, ["mov     rdx, p", "jmp     loc_829D"], ["mov~rdx,p", "jmp~FOO"]], [0, 1, 73, 0, 0, 1, 0, 0, 12, 16, 0.06133308439133682, ["mov     byte ptr [rdx], 20h ; ' '"], ["mov~<TAG>,<STR>"]], [1, 0, 45, 1, 0, 6, 1, 1, 17, 8, 0.03836818521284541, ["add     size, 1", "lea     r12, [p+1]", "movzx   eax, byte ptr [size-1]", "mov     [p-1], al", "test    al, al", "jnz     short loc_8733"], ["add~size,0", "lea~r12,[p+0]", "movzx~eax,[yte ptr [size-1]+0]", "mov~[p-1]+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 45, 0, 0, 2, 0, 1, 18, 9, 0.0, ["mov     rbp, p", "jmp     loc_86AC"], ["mov~rbp,p", "jmp~FOO"]], [0, 1, 42, 0, 0, 1, 0, 0, 18, 7, 0.03136669156086632, ["mov     byte ptr [rbp+0], 20h ; ' '"], ["mov~[yte ptr [rbp+0],<STR>"]], [1, 0, 11, 0, 0, 2, 0, 0, 20, 5, 0.013069454817027634, ["cmp     cs:width_10774, 0", "jns     loc_86E8"], ["cmp~<TAG>,0", "jns~FOO"]], [1, 0, 12, 0, 1, 6, 0, 2, 22, 6, 0.0, ["lea     rdi, [rsp+1338h+hbuf]; string", "mov     edx, 0; flags", "mov     rsi, rax; nbytes", "call    mbsnwidth", "mov     cs:width_10774, eax", "jmp     short loc_88BF"], ["lea~rdi,[rsp+0]", "mov~edx,0", "mov~rsi,rax", "call~FOO", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 72, 0, 0, 3, 0, 1, 8, 15, 0.2083644510828977, ["lea     rax, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jnz     loc_84CA"], ["lea~rax,<TAG>", "cmp~[yte ptr [f+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 21, 5, 0.0, ["mov     cs:width_10774, 0", "jmp     loc_86E8"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 41, 0, 0, 4, 0, 1, 17, 6, 0.2373039581777446, ["mov     byte ptr [p], 1", "lea     rbp, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jnz     short loc_873B"], ["mov~<TAG>,0", "lea~rbp,<TAG>", "cmp~[yte ptr [f+0],0", "jnz~FOO"]], [0, 0, 71, 0, 1, 4, 0, 2, 9, 15, 0.0, ["lea     rsi, [rsp+1338h+hbuf]; buf", "mov     rdi, [f+28h]; i", "call    umaxtostr", "jmp     loc_82CD"], ["lea~rsi,[rsp+0]", "mov~rdi,[f+0]", "call~FOO", "jmp~FOO"]], [3, 0, 69, 1, 1, 7, 0, 2, 10, 14, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_16690; \"  \"", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_832E"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [8, 0, 70, 2, 1, 20, 0, 2, 9, 14, 0.21564600448095594, ["sub     rsp, 8", "push    rax", "mov     r9d, cs:nlink_width", "lea     r8, [rsp+1348h+modebuf]", "lea     rcx, aSS; \"%s %*s \"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, p", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbp, [rbp+rsi-1]", "add     rsp, 10h", "cmp     cs:dired, 0", "jnz     loc_84E0"], ["sub~rsp,0", "push~rax", "mov~r9d,<TAG>", "lea~r8,[rsp+0]", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,p", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbp,[rbp+0]", "add~rsp,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 23, -1, 0.0, ["add     rsp, 1310h", "pop     f", "pop     rbp", "pop     w", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~f", "pop~rbp", "pop~w", "pop~r13", "pop~r14", "retn"]], [0, 0, 63, 0, 1, 5, 0, 2, 12, 13, 0.0, ["movzx   edx, byte ptr [f+0B8h]; stat_ok", "mov     edi, [f+34h]; u", "mov     esi, cs:owner_width; width", "call    format_user", "jmp     loc_8380"], ["movzx~edx,[yte ptr [f+0]", "mov~edi,[f+0]", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 64, 2, 1, 8, 0, 2, 11, 13, 0.03640776699029127, ["lea     r12, [rsp+1338h+buf]", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r12; s", "call    _fputs_unlocked", "sub     p, r12", "add     cs:dired_pos, rbp", "cmp     cs:print_owner, 0", "jnz     loc_850A"], ["lea~r12,[rsp+0]", "mov~rsi,<TAG>", "mov~rdi,r12", "call~FOO", "sub~p,r12", "add~<TAG>,rbp", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 10, 13, 0.22218073188946977, ["cmp     cs:print_owner, 0", "jnz     short loc_8352"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 11, 12, 0.1882001493651979, ["cmp     cs:print_group, 0", "jnz     short loc_8352"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 1, 104, 1, 0, 12, 1, 1, 0, 23, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 1310h", "mov     rbx, f", "mov     rax, fs:28h", "mov     [rsp+1338h+var_30], rax", "xor     eax, eax", "cmp     byte ptr [f+0B8h], 0", "jz      short loc_81A3"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,f", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 12, 11, 0.18997386109036596, ["cmp     cs:print_author, 0", "jnz     short loc_8352"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 60, 0, 0, 3, 0, 1, 14, 13, 0.004014189693801345, ["mov     edi, 0; name", "cmp     cs:numeric_ids, 0", "jz      short loc_855E"], ["mov~edi,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 61, 0, 0, 6, 0, 1, 13, 13, 0.01176250933532487, ["mov     r12d, cs:group_width", "mov     eax, [f+38h]", "mov     ebp, eax", "lea     rdi, string; \"?\"", "cmp     byte ptr [f+0B8h], 0", "jz      short loc_854E"], ["mov~r12d,<TAG>", "mov~eax,[f+0]", "mov~ebp,eax", "lea~rdi,<TAG>", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 13, 10, 0.1915608663181479, ["cmp     cs:print_scontext, 0", "jz      short loc_83AF"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 102, 0, 1, 3, 0, 1, 1, 22, 0.0047610156833457805, ["lea     rsi, [rsp+1338h+modebuf]; str", "lea     f, [f+18h]; statp", "call    filemodestring"], ["lea~rsi,[rsp+0]", "lea~f,[f+0]", "call~FOO"]], [0, 0, 40, 0, 1, 6, 1, 2, 18, 7, 0.12938760268857358, ["lea     rdx, [rsp+1338h+when_local]; tm", "lea     rsi, [rsp+1338h+when_timespec]; t", "mov     rdi, cs:localtz; tz", "call    localtime_rz", "test    rax, rax", "jz      loc_89E8"], ["lea~rdx,[rsp+0]", "lea~rsi,[rsp+0]", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 58, 0, 1, 4, 0, 2, 14, 12, 0.016243465272591486, ["mov     edx, r12d; width", "mov     rsi, rbp; id", "call    format_user_or_group", "jmp     loc_838D"], ["mov~edx,r12d", "mov~rsi,rbp", "call~FOO", "jmp~FOO"]], [0, 0, 59, 0, 1, 4, 0, 2, 15, 13, 0.0, ["mov     edi, eax; gid", "call    getgroup", "mov     rdi, rax", "jmp     short loc_854E"], ["mov~edi,eax", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 2, 21, 0.028286034353995522, ["cmp     cs:any_has_acl, 0", "jnz     loc_81E4"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 102, 0, 0, 9, 0, 1, 1, 22, 0.0047610156833457805, ["mov     eax, [rdi+0A8h]", "lea     rdx, filetype_letter; \"?pcdb-lswd\"", "movzx   eax, byte ptr [rdx+rax]", "mov     [rsp+1338h+modebuf], al", "mov     rax, 3F3F3F3F3F3F3F3Fh", "mov     qword ptr [rsp+1338h+modebuf+1], rax", "mov     word ptr [rsp+1338h+modebuf+9], 3F3Fh", "mov     [rsp+1338h+modebuf+0Bh], 0", "jmp     loc_8156"], ["mov~eax,[rdi+0]", "lea~rdx,<TAG>", "movzx~eax,<TAG>", "mov~[rsp+0],al", "mov~rax,0", "mov~[word ptr [rsp+0],rax", "mov~[ord ptr [rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 96, 0, 0, 1, 0, 0, 3, 20, 0.035847647498132934, ["mov     [rsp+1338h+modebuf+0Ah], 0"], ["mov~[rsp+0],0"]], [0, 0, 39, 0, 0, 4, 0, 1, 19, 10, 0.09559372666168783, ["mov     rcx, cs:current_time.tv_sec", "mov     rdx, [rsp+1338h+when_timespec.tv_sec]", "cmp     rdx, rcx", "jg      short loc_879D"], ["mov~rcx,<TAG>", "mov~rdx,[rsp+0]", "cmp~rdx,rcx", "jg~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 20, 9, 0.042180109534478434, ["jl      loc_898F"], ["jl~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 12, 12, 0.040702016430171774, ["cmp     cs:print_group, 0", "jnz     loc_8524"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 56, 0, 1, 5, 0, 2, 14, 11, 0.0, ["movzx   edx, byte ptr [f+0B8h]; stat_ok", "mov     edi, [f+34h]; u", "mov     esi, cs:author_width; width", "call    format_user", "jmp     loc_839A"], ["movzx~edx,[yte ptr [f+0]", "mov~edi,[f+0]", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 13, 11, 0.048170276325616136, ["cmp     cs:print_author, 0", "jnz     loc_856A"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 36, 0, 0, 4, 0, 1, 21, 10, 0.021891336818521286, ["mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+1338h+when_timespec.tv_nsec]", "cmp     edi, r9d", "js      short loc_879D"], ["mov~rdi,<TAG>", "mov~r9,[rsp+0]", "cmp~edi,r9d", "js~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 23, 9, 0.0066747572815533986, ["mov     eax, 0", "cmp     rdx, rsi", "jge     short loc_87DB"], ["mov~eax,0", "cmp~rdx,rsi", "jge~FOO"]], [0, 0, 27, 0, 0, 1, 0, 1, 24, 8, 0.001260268857356236, ["jmp     loc_89B0"], ["jmp~FOO"]], [1, 0, 54, 0, 1, 6, 0, 2, 15, 10, 0.0, ["mov     rdi, [f+0B0h]; name", "mov     edx, cs:scontext_width; width", "mov     esi, 0; id", "call    format_user_or_group", "lea     rbp, [rsp+1338h+buf]", "jmp     loc_83AF"], ["mov~rdi,[f+0]", "mov~edx,<TAG>", "mov~esi,0", "call~FOO", "lea~rbp,[rsp+0]", "jmp~FOO"]], [1, 0, 55, 0, 0, 3, 0, 1, 14, 10, 0.049850634802091114, ["lea     rbp, [rsp+1338h+buf]", "cmp     cs:print_scontext, 0", "jnz     loc_8584"], ["lea~rbp,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 32, 0, 0, 6, 0, 1, 21, 8, 0.011513567338810055, ["lea     rsi, [rcx-0F0C2ACh]", "mov     r9, [rsp+1338h+when_timespec.tv_nsec]; ns", "mov     eax, 1", "mov     rdi, cs:current_time.tv_nsec", "cmp     rdx, rsi", "jle     loc_87CD"], ["lea~rsi,[rcx-0F0C2ACh]+0]", "mov~r9,[rsp+0]", "mov~eax,0", "mov~rdi,<TAG>", "cmp~rdx,rsi", "jle~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 21, 8, 0.0175815285038586, ["mov     eax, 0", "cmp     six_months_ago, rdx", "jg      loc_89B0"], ["mov~eax,0", "cmp~six_months_ago,rdx", "jg~FOO"]], [1, 0, 30, 0, 0, 3, 0, 0, 22, 8, 0.002287154592979836, ["mov     eax, 0", "cmp     edi, r9d", "jns     loc_89B0"], ["mov~eax,0", "cmp~edi,r9d", "jns~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 21, 8, 0.021222305202887738, ["mov     eax, 1", "cmp     rcx, rdx", "jg      loc_89B0"], ["mov~eax,0", "cmp~rcx,rdx", "jg~FOO"]], [0, 0, 32, 0, 1, 9, 0, 2, 20, 9, 0.047112272840428224, ["lea     rdi, current_time; ts", "call    gettime", "mov     rcx, cs:current_time.tv_sec", "lea     rsi, [rcx-0F0C2ACh]", "mov     rdi, cs:current_time.tv_nsec", "mov     rdx, [rsp+1338h+when_timespec.tv_sec]", "mov     r9, [rsp+1338h+when_timespec.tv_nsec]", "cmp     rsi, rdx", "jl      short loc_87E9"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,<TAG>", "lea~rsi,[rcx-0F0C2ACh]+0]", "mov~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rsi,rdx", "jl~FOO"]], [0, 0, 24, 0, 0, 3, 0, 0, 23, 6, 0.018670649738610906, ["cdqe", "lea     rdx, long_time_format", "mov     rdx, [rdx+rax*8]; format"], ["cdqe~", "lea~rdx,<TAG>", "mov~rdx,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 23, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [35, 17, 121, 1, 105, 161, 1, 497, 0.04145, 43, 26], "succs": [[17], [0, 17], [26], [2, 23], [2], [20], [5, 94], [20, 5], [15], [8, 13], [17], [1, 10], [], [12, 21], [25, 18], [24, 14], [15], [16, 9], [25, 45], [3], [19, 103], [15], [30, 47], [4, 22], [65, 28], [24], [29, 39], [26], [43, 44], [42, 38], [47], [67], [50, 31], [49], [32, 33], [64, 63], [35], [35, 36], [104, 71], [40, 38], [41, 38], [38], [38], [48, 57], [43], [25], [37, 63], [27, 46], [51], [60, 52], [49], [51, 53], [54], [56], [54, 55], [60], [58, 59], [56], [56], [65], [61, 62], [60], [67], [66, 27], [63], [68, 70], [27], [82, 47], [70], [74], [74, 69], [], [90], [72, 90], [73, 75], [73, 77], [81, 86], [80, 73], [83, 84], [83, 78], [73, 34], [85], [88, 23], [92], [83], [11, 87], [85], [17], [89, 102], [98, 93], [92, 79], [97], [97, 91], [102, 6], [100, 95], [20], [34], [96, 34], [99, 20], [100, 20], [20, 101], [20, 7], [99, 101], [3], []], "fname": "print_long_format", "n_num": 105}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 8, 0, 0, 4, 0, 0, 0, 0, 0.021794871794871794, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8CA7"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 8, 3, 2, 16, 0, 2, 6, -1, 0.03141025641025641, ["mov     rax, cs:sorted_file", "mov     r14, [rax+r13]", "mov     rdi, r14; f", "call    length_of_file_name_and_frills", "mov     [rsp+68h+var_60], rax", "mov     rax, [r15+10h]", "mov     rcx, [rax+rbp]", "mov     [rsp+68h+var_58], rcx", "mov     rsi, rbx; start_col", "mov     rdi, r14; f", "call    print_file_name_and_frills", "add     r12, [rsp+68h+var_50]", "add     r13, [rsp+68h+var_48]", "add     rbp, 8", "cmp     r12, cs:cwd_n_used", "jnb     loc_8BF2"], ["mov~rax,<TAG>", "mov~r14,<TAG>", "mov~rdi,r14", "call~FOO", "mov~[rsp+0],rax", "mov~rax,[r15+0]", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~rsi,rbx", "mov~rdi,r14", "call~FOO", "add~r12,[rsp+0]", "add~r13,[rsp+0]", "add~rbp,0", "cmp~r12,<TAG>", "jnb~FOO"]], [0, 0, 8, 2, 1, 8, 0, 2, 7, -1, 0.0, ["mov     r14, [rsp+68h+var_58]", "add     r14, rbx", "mov     rdi, [rsp+68h+var_60]", "add     rdi, rbx; from", "mov     rsi, r14; to", "call    indent", "mov     rbx, r14", "jmp     short loc_8C3F"], ["mov~r14,[rsp+0]", "add~r14,rbx", "mov~rdi,[rsp+0]", "add~rdi,rbx", "mov~rsi,r14", "call~FOO", "mov~rbx,r14", "jmp~FOO"]], [2, 0, 8, 0, 0, 4, 0, 0, 5, -1, 0.029487179487179487, ["mov     r12, [rsp+68h+var_40]", "lea     r13, ds:0[r12*8]", "mov     ebp, 0", "mov     ebx, 0"], ["mov~r12,[rsp+0]", "lea~r13,<TAG>", "mov~ebp,0", "mov~ebx,0"]], [0, 0, 3, 0, 0, 4, 0, 0, 4, -1, 0.019230769230769232, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_8DE5"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [3, 0, 11, 0, 3, 18, 0, 3, 3, -1, 0.019230769230769232, ["mov     edi, 0; by_columns", "call    calculate_columns", "mov     r13, rax", "lea     rdx, [rax+rax*2]", "mov     rax, cs:column_info_0", "lea     r15, [rax+rdx*8-18h]", "mov     rax, cs:sorted_file", "mov     rbx, [rax]", "mov     rdi, rbx; f", "call    length_of_file_name_and_frills", "mov     [rsp+68h+var_60], rax", "mov     rax, [r15+10h]", "mov     r14, [rax]", "mov     esi, 0; start_col", "mov     rdi, rbx; f", "call    print_file_name_and_frills", "cmp     cs:cwd_n_used, 1", "jbe     loc_8DC7"], ["mov~edi,0", "call~FOO", "mov~r13,rax", "lea~rdx,<TAG>", "mov~rax,<TAG>", "lea~r15,[rax+0]", "mov~rax,<TAG>", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rax", "mov~rax,[r15+0]", "mov~r14,<TAG>", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "cmp~<TAG>,0", "jbe~FOO"]], [1, 0, 10, 1, 2, 13, 0, 2, 7, -1, 0.02435897435897436, ["mov     rax, cs:sorted_file", "mov     r14, [rax+rbx*8]", "mov     rsi, r12; start_col", "mov     rdi, r14; f", "call    print_file_name_and_frills", "mov     rdi, r14; f", "call    length_of_file_name_and_frills", "mov     [rsp+68h+var_60], rax", "mov     rax, [r15+10h]", "mov     r14, [rax+rbp*8]", "add     rbx, 1", "cmp     rbx, cs:cwd_n_used", "jnb     short loc_8DC7"], ["mov~rax,<TAG>", "mov~r14,<TAG>", "mov~rsi,r12", "mov~rdi,r14", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~[rsp+0],rax", "mov~rax,[r15+0]", "mov~r14,<TAG>", "add~rbx,0", "cmp~rbx,<TAG>", "jnb~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, -1, 0.01282051282051282, ["cmp     cs:line_length, 0; jumptable 0000000000008AB9 case 2", "jnz     short loc_8B98"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 38, 2, 0, 12, 0, 1, 1, -1, 0.02435897435897436, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     eax, cs:format_0", "lea     rdx, off_14EF4", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~eax,<TAG>", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 6, 0, 0, 3, 0, 1, 2, -1, 0.006837606837606838, ["mov     ebx, 0; jumptable 0000000000008AB9 case 1", "cmp     cs:cwd_n_used, 0", "jz      loc_8DFB"], ["mov~ebx,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.002564102564102564, ["jmp     loc_8DFB"], ["jmp~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 2, -1, 0.006837606837606838, ["mov     ebx, 0; jumptable 0000000000008AB9 case 0", "cmp     cs:cwd_n_used, 0", "jz      loc_8DFB"], ["mov~ebx,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.002564102564102564, ["jmp     loc_8DFB"], ["jmp~FOO"]], [0, 1, 1, 0, 1, 3, 0, 2, 3, -1, 0.0003205128205128205, ["mov     edi, 20h ; ' '; sep", "call    print_with_separator", "jmp     loc_8DFB"], ["mov~edi,<STR>", "call~FOO", "jmp~FOO"]], [2, 0, 9, 2, 1, 16, 1, 2, 3, -1, 0.015705128205128205, ["mov     edi, 1; by_columns", "call    calculate_columns", "mov     rcx, rax", "lea     rdx, [rax+rax*2]", "mov     rax, cs:column_info_0", "lea     r15, [rax+rdx*8-18h]", "mov     rax, cs:cwd_n_used", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "setnz   dl", "movzx   edx, dl", "add     rdx, rax", "mov     rax, rdx", "mov     [rsp+68h+var_50], rdx", "jz      loc_8DFB"], ["mov~edi,0", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~rax,<TAG>", "lea~r15,[rax+0]", "mov~rax,<TAG>", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "setnz~dl", "movzx~edx,dl", "add~rdx,rax", "mov~rax,rdx", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 0, 1, 9, -1, 0.014102564102564103, ["add     [rsp+68h+var_40], 1", "mov     rax, [rsp+68h+var_40]", "cmp     [rsp+68h+var_50], rax", "jz      loc_8DFB"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [0, 1, 1, 0, 1, 3, 0, 2, 3, -1, 0.000641025641025641, ["mov     edi, 20h ; ' '; sep", "call    print_with_separator", "jmp     loc_8DFB"], ["mov~edi,<STR>", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 4, 0, 1, 5, -1, 0.0028846153846153848, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     short loc_8DFB"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 5, -1, 0.0028846153846153848, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_8DFB"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.00042735042735042735, ["mov     edi, 2Ch ; ','; jumptable 0000000000008AB9 case 4", "call    print_with_separator"], ["mov~edi,0", "call~FOO"]], [1, 0, 6, 1, 0, 3, 0, 1, 5, -1, 0.008333333333333333, ["add     i, 1", "cmp     cs:cwd_n_used, i", "ja      short loc_8ACE"], ["add~i,0", "cmp~<TAG>,i", "ja~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 4, -1, 0.0028846153846153848, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_8AFF"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 4, -1, 0.0028846153846153848, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 10, 0, 1, 4, 0, 2, 7, -1, 0.0022435897435897434, ["mov     esi, 0Ah; int", "call    ___overflow", "mov     r12, rbp", "jmp     short loc_8D57"], ["mov~esi,0", "call~FOO", "mov~r12,rbp", "jmp~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 7, -1, 0.0022435897435897434, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "mov     r12, rbp", "jmp     short loc_8D57"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "mov~r12,rbp", "jmp~FOO"]], [0, 0, 10, 2, 1, 6, 0, 1, 6, -1, 0.008974358974358974, ["add     r14, r12", "mov     rdi, [rsp+68h+var_60]", "add     rdi, r12; from", "mov     rsi, r14; to", "call    indent", "mov     r12, r14"], ["add~r14,r12", "mov~rdi,[rsp+0]", "add~rdi,r12", "mov~rsi,r14", "call~FOO", "mov~r12,r14"]], [1, 0, 8, 0, 0, 3, 0, 0, 8, -1, 0.00608974358974359, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 40, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:format_0, 4; switch 5 cases", "ja      locret_8E19; jumptable 0000000000008AB9 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 4, -1, 0.0028846153846153848, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_8B59"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 2, 8, 0, 2, 3, -1, 0.010256410256410256, ["call    set_normal_color", "mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "call    print_long_format", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8E0A"], ["call~FOO", "mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn; jumptable 0000000000008AB9 default case"], ["retn"]], [0, 0, 10, 0, 0, 4, 0, 0, 6, -1, 0.011538461538461539, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8D32"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 5, -1, 0.027564102564102563, ["mov     rax, rbx", "mov     edx, 0", "div     r13", "mov     rbp, rdx", "test    rdx, rdx", "jnz     short loc_8D41"], ["mov~rax,rbx", "mov~edx,0", "div~,r13", "mov~rbp,rdx", "test~rdx,rdx", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, -1, 0.015384615384615385, ["cmp     cs:line_length, 0; jumptable 0000000000008AB9 case 3", "jnz     short loc_8CCF"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 10, 0, 0, 3, 0, 1, 4, -1, 0.015384615384615385, ["mov     r12d, 0", "mov     ebx, 1", "jmp     short loc_8D8F"], ["mov~r12d,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 8, 0, 1, 3, 0, 2, 8, -1, 0.00608974358974359, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_8C12"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [2, 0, 6, 2, 0, 4, 0, 1, 5, -1, 0.008333333333333333, ["add     cs:dired_pos, 1", "add     i, 1", "cmp     cs:cwd_n_used, i", "ja      short loc_8B24"], ["add~<TAG>,0", "add~i,0", "cmp~<TAG>,i", "ja~FOO"]], [2, 0, 8, 1, 0, 4, 0, 1, 4, -1, 0.017948717948717947, ["shl     rax, 3", "mov     [rsp+68h+var_48], rax", "mov     [rsp+68h+var_40], 0", "jmp     short loc_8C28"], ["shl~rax,0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 4, -1, 0.0028846153846153848, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 0, 1, 3, -1, 0.010256410256410256, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "mov     esi, 0; start_col", "call    print_file_name_and_frills", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_8B73"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]]], "func_feature": [21, 2, 46, 5, 41, 61, 3, 210, 0.00977, 8, 19], "succs": [[27, 36], [0, 2], [1], [1], [18, 19], [35, 4], [33, 4], [14, 15], [20, 34, 12, 10, 7], [], [40, 9], [9], [9, 30], [9], [9], [9, 38], [9, 3], [9], [9], [9], [9], [40, 11], [21], [21], [6], [6], [6], [16], [8, 31], [37], [29, 39], [], [24, 25], [32, 26], [17, 5], [33], [16], [13, 30], [3], [37], [22, 23]], "fname": "print_current_files", "n_num": 41}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[5, 0, 11, 2, 2, 20, 0, 2, 0, 0, 0.06081468732071141, ["mov     edx, 5; category", "lea     rsi, aTotal; \"total\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, p; s", "call    _fputs_unlocked", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, p", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "add     cs:dired_pos, rax", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_9417"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rsi,<TAG>", "mov~rdi,p", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,p", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "add~<TAG>,rax", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [3, 0, 12, 1, 1, 7, 0, 2, 11, 8, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_16690; \"  \"", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_92A7"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 10, 8, 0.07687894434882386, ["cmp     cs:dired, 0", "jnz     loc_93ED"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 56, 1, 1, 8, 0, 2, 12, 10, 0.10915088927137119, ["mov     r8, name; dirname", "mov     ecx, 0; command_line_arg", "mov     edx, 0; inode", "mov     rdi, rbp; name", "call    gobble_file", "add     [rsp+378h+n], rax", "cmp     cs:format_0, 1", "jnz     loc_91C2"], ["mov~r8,name", "mov~ecx,0", "mov~edx,0", "mov~rdi,rbp", "call~FOO", "add~<TAG>,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 2; jumptable 00000000000090DA case 2", "jmp     short loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 3; jumptable 00000000000090DA case 4", "jmp     short loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 1; jumptable 00000000000090DA case 1", "jmp     short loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 6; jumptable 00000000000090DA case 10", "jmp     short loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 5; jumptable 00000000000090DA case 8", "jmp     loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 7; jumptable 00000000000090DA case 12", "jmp     loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 12, 11, 0.0007330910945368775, ["mov     esi, 8; jumptable 00000000000090DA case 14", "jmp     loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 11, 0.040893733664817994, ["mov     esi, 0; jumptable 00000000000090DA default case", "jmp     loc_90E1"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 1, 0, 0, 12, 11, 0.0007330910945368775, ["mov     esi, 4; jumptable 00000000000090DA case 6"], ["mov~esi,0"]], [0, 0, 56, 0, 0, 2, 1, 1, 8, 10, 0.023809523809523808, ["test    eax, eax", "jz      loc_91C2"], ["test~eax,eax", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 7, 11, 0.061244979919678706, ["cmp     byte ptr [next+13h], 2Eh ; '.'", "jz      loc_9081"], ["cmp~[yte ptr [next+0],0", "jz~FOO"]], [2, 0, 18, 0, 2, 9, 0, 3, 8, 6, 0.0, ["mov     edx, 5; category", "lea     rsi, aClosingDirecto; \"closing directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, byte ptr [rsp+378h+var_36C]; serious", "mov     rdx, name; file", "mov     rsi, rax; message", "call    file_failure", "jmp     loc_9272"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,[yte ptr [rsp+0]", "mov~rdx,name", "mov~rsi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 19, 0, 1, 4, 1, 2, 7, 6, 0.16279403327596098, ["mov     rdi, dirp; dirp", "call    _closedir", "test    eax, eax", "jnz     loc_93B0"], ["mov~rdi,dirp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 56, 1, 0, 5, 0, 1, 11, 12, 0.06769936890418818, ["movzx   eax, byte ptr [next+12h]", "lea     rcx, off_14F08", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["movzx~eax,[yte ptr [next+0]", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 81, 0, 1, 4, 1, 2, 2, 5, 0.0035857716580608144, ["mov     rdi, dirp; dirp", "call    _dirfd", "test    eax, eax", "js      loc_8F28"], ["mov~rdi,dirp", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 82, 0, 0, 3, 0, 1, 1, 6, 0.011331038439472174, ["mov     r14, dirp", "cmp     cs:active_dir_set, 0", "jz      loc_9470"], ["mov~r14,dirp", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 56, 0, 0, 3, 1, 1, 9, 11, 0.020797475616752725, ["mov     rbx, cs:hide_patterns", "test    rbx, rbx", "jz      short loc_9227"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [0, 0, 56, 0, 0, 2, 1, 1, 8, 12, 0.028112449799196783, ["test    eax, eax", "jnz     short loc_9227"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 6, 7, 0.17799770510613883, ["cmp     dword ptr [r13+0], 0", "jz      loc_9262"], ["cmp~[word ptr [r13+0],0", "jz~FOO"]], [3, 0, 56, 0, 2, 10, 0, 3, 7, 7, 0.008605851979345954, ["mov     edx, 5; category", "lea     rsi, aReadingDirecto; \"reading directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, [rsp+378h+command_line_arg]; serious", "mov     rdx, name; file", "mov     rsi, rax; message", "call    file_failure", "cmp     dword ptr [r13+0], 4Bh ; 'K'", "jnz     loc_9262"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,[rsp+0]", "mov~rdx,name", "mov~rsi,rax", "call~FOO", "cmp~[word ptr [r13+0],0", "jnz~FOO"]], [1, 0, 56, 0, 1, 6, 1, 2, 5, 8, 0.393574297188755, ["mov     dword ptr [r13+0], 0", "mov     rdi, dirp; dirp", "call    _readdir", "mov     r12, rax", "test    next, next", "jz      short loc_9186"], ["mov~[word ptr [r13+0],0", "mov~rdi,dirp", "call~FOO", "mov~r12,rax", "test~next,next", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 14, 4, 0.007386689615605278, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [4, 1, 8, 3, 2, 23, 0, 2, 13, 5, 0.03456683878370625, ["add     cs:dired_pos, 1", "lea     rsi, [rsp+378h+buf]; buf", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "mov     edx, cs:human_output_opts; opts", "mov     rdi, [rsp+378h+n]; n", "call    human_readable", "mov     rbx, rax", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, p; s", "call    _fputs_unlocked", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, p", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "add     cs:dired_pos, rax", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_9426"], ["add~<TAG>,0", "lea~rsi,[rsp+0]", "mov~r8,<TAG>", "mov~ecx,<STR>", "mov~edx,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "mov~rsi,<TAG>", "mov~rdi,p", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,p", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "add~<TAG>,rax", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 64, 0, 1, 3, 0, 2, 5, 14, 0.005593803786574871, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_94B4"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 66, 0, 0, 4, 0, 0, 4, 15, 0.006024096385542168, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_9004"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 70, 0, 0, 5, 0, 0, 8, 12, 0.07773952954675846, ["mov     rax, cs:dev_ino_obstack.next_free", "lea     rdx, [rax+10h]", "mov     cs:dev_ino_obstack.next_free, rdx", "mov     [rax+8], rbp", "mov     [rax], r12"], ["mov~rax,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "mov~[rax+0],rbp", "mov~<TAG>,r12"]], [1, 0, 71, 0, 1, 4, 0, 2, 8, 13, 0.0, ["mov     esi, 10h; length", "lea     rdi, dev_ino_obstack; h", "call    _obstack_newchunk", "jmp     loc_9457"], ["mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 72, 1, 0, 6, 0, 0, 7, 13, 0.05995410212277682, ["mov     r12, [rsp+378h+dir_stat.st_ino]", "mov     rbp, [rsp+378h+dir_stat.st_dev]", "mov     rax, cs:dev_ino_obstack.chunk_limit", "sub     rax, cs:dev_ino_obstack.next_free", "cmp     rax, 0Fh", "jbe     loc_8FEE"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~rax,<TAG>", "sub~rax,<TAG>", "cmp~rax,0", "jbe~FOO"]], [1, 0, 5, 1, 0, 1, 0, 0, 15, 3, 0.005737234652897303, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [1, 0, 6, 0, 1, 3, 0, 2, 14, 4, 0.007386689615605278, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_9390"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 10, 3, 0.04388984509466437, ["cmp     cs:print_block_size, 0", "jz      loc_9398"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 9, 4, 0.13640275387263337, ["cmp     cs:format_0, 0", "jz      short loc_929A"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 56, 0, 0, 5, 0, 1, 9, 11, 0.01176133103843947, ["cmp     byte ptr [next+14h], 2Eh ; '.'", "setz    al", "movzx   eax, al", "cmp     byte ptr [next+rax+14h], 0", "jnz     loc_9227"], ["cmp~[yte ptr [next+0],0", "setz~al", "movzx~eax,al", "cmp~[yte ptr [next+0],0", "jnz~FOO"]], [1, 0, 56, 0, 1, 6, 1, 2, 10, 10, 0.021371199082042453, ["mov     edx, 4; flags", "mov     rsi, rbp; name", "mov     rdi, [rbx]; pattern", "call    _fnmatch", "test    eax, eax", "jz      short loc_91C2"], ["mov~edx,0", "mov~rsi,rbp", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 56, 0, 0, 3, 1, 1, 11, 11, 0.003298909925415949, ["mov     rbx, [rbx+8]", "test    rbx, rbx", "jnz     short loc_920A"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 79, 0, 1, 5, 0, 1, 3, 4, 0.007171543316121629, ["lea     rdx, [rsp+378h+dir_stat]; stat_buf", "mov     esi, eax; fildes", "mov     edi, 1; ver", "call    ___fxstat", "shr     eax, 1Fh"], ["lea~rdx,[rsp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "shr~eax,0"]], [0, 1, 9, 0, 1, 3, 0, 2, 12, 6, 0.021156052782558804, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     loc_9311"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 1, 9, 0, 0, 3, 0, 0, 12, 6, 0.021156052782558804, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [1, 0, 4, 0, 0, 2, 0, 1, 11, 2, 0.040160642570281124, ["cmp     cs:cwd_n_used, 0", "jz      loc_8ED7"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 56, 0, 0, 1, 0, 1, 10, 10, 0.00444635685599541, ["jmp     loc_91C2"], ["jmp~FOO"]], [0, 0, 78, 0, 0, 2, 1, 1, 4, 3, 0.03628800917957544, ["test    al, al", "jz      loc_8F42"], ["test~al,al", "jz~FOO"]], [2, 0, 79, 0, 1, 6, 0, 2, 3, 4, 0.007171543316121629, ["lea     rdx, [rsp+378h+dir_stat]; stat_buf", "mov     rsi, name; filename", "mov     edi, 1; ver", "call    ___xstat", "shr     eax, 1Fh", "jmp     loc_8EA1"], ["lea~rdx,[rsp+0]", "mov~rsi,name", "mov~edi,0", "call~FOO", "shr~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 2, 9, 0, 3, 1, 2, 0.0004302925989672977, ["mov     edx, 5; category", "lea     rsi, aCannotOpenDire; \"cannot open directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, byte ptr [rsp+378h+var_36C]; serious", "mov     rdx, name; file", "mov     rsi, rax; message", "call    file_failure", "jmp     short loc_8ED7"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,[yte ptr [rsp+0]", "mov~rdx,name", "mov~rsi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 84, 1, 2, 21, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 348h", "mov     r15, name", "mov     rbx, realname", "mov     [rsp+378h+var_36C], edx", "mov     [rsp+378h+command_line_arg], dl", "mov     rax, fs:28h", "mov     [rsp+378h+var_40], rax", "xor     eax, eax", "call    ___errno_location", "mov     r13, rax", "mov     dword ptr [rax], 0", "mov     rdi, name; name", "call    _opendir", "test    dirp, dirp", "jz      loc_8F00"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,name", "mov~rbx,realname", "mov~[rsp+0],edx", "mov~[rsp+0],dl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r13,rax", "mov~<TAG>,0", "mov~rdi,name", "call~FOO", "test~dirp,dirp", "jz~FOO"]], [1, 0, 64, 0, 0, 3, 0, 0, 5, 14, 0.005593803786574871, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 56, 0, 0, 2, 0, 1, 15, 10, 0.008462421113023522, ["cmp     cs:recursive, 0", "jnz     loc_91C2"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 14, 10, 0.01678141135972461, ["cmp     cs:print_block_size, 0", "jnz     loc_91C2"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 8, 11, 0.12449799196787148, ["mov     eax, 0", "jmp     short loc_90B2"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 56, 0, 0, 3, 1, 1, 7, 12, 0.15877796901893285, ["mov     rbx, cs:ignore_patterns", "test    rbx, rbx", "jz      loc_90A6"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [1, 0, 56, 0, 0, 1, 0, 0, 9, 11, 0.007458405048766494, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 56, 0, 1, 6, 1, 2, 8, 12, 0.025243832472748133, ["mov     edx, 4; flags", "mov     rsi, rbp; name", "mov     rdi, [rbx]; pattern", "call    _fnmatch", "test    eax, eax", "jz      loc_90AD"], ["mov~edx,0", "mov~rsi,rbp", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 69, 0, 1, 3, 0, 2, 2, 11, 0.10542168674698794, ["call    clear_files", "cmp     cs:recursive, 0", "jnz     short loc_948B"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 10, 11, 0.007458405048766494, ["mov     eax, 0", "jmp     loc_90B2"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 56, 0, 0, 3, 1, 1, 9, 12, 0.008462421113023522, ["mov     rbx, [rbx+8]", "test    rbx, rbx", "jnz     short loc_9237"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 10, 12, 0.11703958691910499, ["cmp     byte ptr [next+12h], 0Eh; switch 15 cases", "ja      loc_917C; jumptable 00000000000090DA default case"], ["cmp~[yte ptr [next+0],0", "ja~FOO"]], [1, 0, 56, 0, 0, 4, 0, 1, 6, 12, 0.20625358577165803, ["lea     rbp, [next+13h]", "mov     eax, cs:ignore_mode", "cmp     eax, 2", "jz      short loc_9227"], ["lea~rbp,[next+0]", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 13, 10, 0.02495697074010327, ["cmp     cs:sort_type_0, 0FFFFFFFFh", "jnz     loc_91C2"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 56, 0, 0, 2, 1, 1, 9, 10, 0.15447504302925988, ["test    al, al", "jnz     loc_91C2"], ["test~al,al", "jnz~FOO"]], [3, 0, 61, 1, 1, 7, 0, 2, 5, 12, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_16690; \"  \"", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_94D0"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [2, 0, 62, 0, 0, 3, 0, 1, 4, 12, 0.053786574870912214, ["mov     cs:first_10256, 0", "cmp     cs:dired, 0", "jnz     loc_9013"], ["mov~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 63, 1, 0, 1, 0, 0, 6, 13, 0.027108433734939756, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [0, 0, 3, 0, 1, 2, 0, 2, 12, 2, 0.0, ["call    print_current_files", "jmp     loc_8ED7"], ["call~FOO", "jmp~FOO"]], [8, 0, 57, 3, 3, 20, 1, 3, 6, 10, 0.08175559380378657, ["test    realname, realname", "cmovz   realname, name", "sub     rsp, 8", "push    absolute_name; absolute_name", "lea     r9, subdired_obstack; stack", "mov     r8d, 1; allow_pad", "mov     ecx, 0; color", "mov     edx, 0FFFFFFFFh; needs_general_quoting", "mov     rsi, cs:dirname_quoting_options; options", "mov     rdi, rbx; name", "call    quote_name", "mov     rdi, absolute_name; ptr", "call    free", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, aValidArguments+13h; ptr", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "add     rsp, 10h"], ["test~realname,realname", "cmovz~realname,name", "sub~rsp,0", "push~absolute_name", "lea~r9,<TAG>", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rdi,absolute_name", "call~FOO", "mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "add~<TAG>,0", "add~rsp,0"]], [1, 0, 59, 0, 1, 6, 1, 2, 6, 11, 0.003012048192771084, ["mov     esi, 2; can_mode", "mov     rdi, name; name", "call    canonicalize_filename_mode", "mov     rbp, rax", "test    absolute_name, absolute_name", "jnz     loc_94E2"], ["mov~esi,0", "mov~rdi,name", "call~FOO", "mov~rbp,rax", "test~absolute_name,absolute_name", "jnz~FOO"]], [2, 0, 58, 0, 2, 9, 0, 3, 7, 11, 0.0, ["mov     edx, 5; category", "lea     rsi, aErrorCanonical; \"error canonicalizing %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, byte ptr [rsp+378h+var_36C]; serious", "mov     rdx, name; file", "mov     rsi, rax; message", "call    file_failure", "jmp     loc_94E2"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,[yte ptr [rsp+0]", "mov~rdx,name", "mov~rsi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 60, 0, 0, 3, 0, 1, 5, 11, 0.06583476764199656, ["mov     ebp, 0", "cmp     cs:print_hyperlink, 0", "jnz     loc_903D"], ["mov~ebp,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 56, 0, 1, 1, 0, 1, 8, 9, 0.19693057946069992, ["call    process_signals"], ["call~FOO"]], [0, 0, 56, 0, 3, 4, 0, 4, 16, 10, 0.0, ["call    sort_files", "call    print_current_files", "call    clear_files", "jmp     loc_91C2"], ["call~FOO", "call~FOO", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 4, 0, 2, 9, 5, 0.0, ["mov     esi, 0; command_line_arg", "mov     rdi, name; dirname", "call    extract_dirs_from_files", "jmp     loc_9284"], ["mov~esi,0", "mov~rdi,name", "call~FOO", "jmp~FOO"]], [1, 0, 17, 0, 1, 3, 0, 2, 8, 5, 0.1501721170395869, ["call    sort_files", "cmp     cs:recursive, 0", "jnz     loc_93DB"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 3, 13, 0.018646012621916234, ["cmp     cs:first_10256, 0", "jnz     short loc_94BC"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 3, 10, 0.0946643717728055, ["cmp     cs:print_dir_name, 0", "jz      loc_9545"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.023235800344234076, ["mov     rax, [rsp+378h+var_40]", "xor     rax, fs:28h", "jnz     loc_9552"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 4, 9, 0.189328743545611, ["mov     [rsp+378h+n], 0", "jmp     loc_91C7"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 6, 3, 0.05249569707401032, ["cmp     rbp, rax", "jz      loc_9435"], ["cmp~rbp,rax", "jz~FOO"]], [2, 0, 3, 0, 3, 10, 0, 3, 5, 2, 0.0021514629948364886, ["mov     edx, 5; category", "lea     rsi, aCannotDetermin; \"cannot determine device and inode of %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "movzx   edi, byte ptr [rsp+378h+var_36C]; serious", "mov     rdx, name; file", "mov     rsi, rax; message", "call    file_failure", "mov     rdi, dirp; dirp", "call    _closedir"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "movzx~edi,[yte ptr [rsp+0]", "mov~rdx,name", "mov~rsi,rax", "call~FOO", "mov~rdi,dirp", "call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 348h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     name", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~name", "retn"]], [8, 0, 3, 0, 5, 21, 0, 6, 7, 2, 0.0008605851979345954, ["mov     rdi, rbp; ptr", "call    free", "mov     rdx, name; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     realname, rax", "mov     edx, 5; category", "lea     rsi, aSNotListingAlr; \"%s: not listing already-listed director\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdi, dirp; dirp", "call    _closedir", "mov     cs:exit_status, 2", "jmp     loc_8ED7"], ["mov~rdi,rbp", "call~FOO", "mov~rdx,name", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~realname,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,dirp", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 76, 0, 2, 14, 1, 3, 5, 4, 0.0436029833620195, ["mov     r12, [rsp+378h+dir_stat.st_ino]", "mov     rax, [rsp+378h+dir_stat.st_dev]", "mov     [rsp+378h+n], rax", "mov     edi, 10h; n", "call    xmalloc", "mov     rbp, rax", "mov     [rax], r12", "mov     rax, [rsp+378h+n]", "mov     [rbp+8], rax", "mov     rsi, rbp; entry", "mov     rdi, cs:active_dir_set; table", "call    hash_insert", "test    rax, rax", "jz      short loc_8FE9"], ["mov~r12,[rsp+0]", "mov~rax,[rsp+0]", "mov~<TAG>,rax", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~<TAG>,r12", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rsi,rbp", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [52, 19, 118, 2, 85, 133, 1, 394, 0.04455, 34, 17], "succs": [[40, 41], [0], [0, 1], [60, 70], [3], [3], [3], [3], [3], [3], [3], [3], [3], [36, 70], [13, 21], [73], [73, 15], [4, 5, 6, 7, 8, 9, 10, 11, 12], [45, 39], [18, 55], [52, 37], [52, 20], [16, 23], [16, 70], [59, 22], [32], [25, 33], [64], [48, 27], [55], [29], [29, 30], [42], [32], [42, 2], [34, 2], [43, 52], [70, 38], [52, 37], [44], [26], [26], [65, 77], [70], [80, 84], [44], [77], [19, 46], [64], [70, 71], [49, 70], [61], [51, 54], [61], [57, 53], [74, 75], [61], [56, 54], [17, 11], [52, 14], [50, 70], [58, 70], [69], [69, 62], [63], [77], [78], [66, 68], [66], [66, 67], [24], [70], [35], [72, 35], [28, 63], [74, 78], [], [81, 76], [24], [82, 31], [77], [], [77], [], [83, 79]], "fname": "print_dir", "n_num": 85}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 3, 0, 2, 9, 0, 3, 0, 0, 0.016339869281045753, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_9BDB"], ["mov~r13,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 6, -1, 0.026143790849673203, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_9C58"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 7, -1, 0.013071895424836602, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [1, 0, 15, 0, 0, 4, 0, 0, 2, 6, 0.0, ["cmp     eax, 2", "lea     rbp, command_name+1; \"dir\"", "lea     rax, command_name; \"vdir\"", "cmovnz  rbp, rax"], ["cmp~eax,0", "lea~rbp,<TAG>", "lea~rax,<TAG>", "cmovnz~rbp,rax"]], [65, 0, 16, 0, 62, 254, 0, 63, 1, 6, 0.049019607843137254, ["mov     rbx, cs:program_name", "mov     edx, 5; category", "lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aListInformatio; \"List information about the FILEs (the c\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aMandatoryArgum; \"\\nMandatory arguments to long options a\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aAAllDoNotIgnor; \"  -a, --all                  do not ign\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aBlockSizeSizeW; \"      --block-size=SIZE      with -l, s\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aBIgnoreBackups; \"  -B, --ignore-backups       do not lis\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aCListEntriesBy; \"  -C                         list entri\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aFDoNotSortEnab; \"  -f                         do not sor\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGLikeLButDoNot; \"  -g                         like -l, b\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGroupDirectori; \"      --group-directories-first\\n      \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGNoGroupInALon; \"  -G, --no-group             in a long \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHHumanReadable; \"  -h, --human-readable       with -l an\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHDereferenceCo; \"  -H, --dereference-command-line\\n     \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHyperlinkWhenH; \"      --hyperlink[=WHEN]     hyperlink \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aIndicatorStyle; \"      --indicator-style=WORD  append in\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aKKibibytesDefa; \"  -k, --kibibytes            default to\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aLUseALongListi; \"  -l                         use a long\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNNumericUidGid; \"  -n, --numeric-uid-gid      like -l, b\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aQHideControlCh; \"  -q, --hide-control-chars   print ? in\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aRReverseRevers; \"  -r, --reverse              reverse or\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aSSortByFileSiz; \"  -S                         sort by fi\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aTimeStyleTimeS; \"      --time-style=TIME_STYLE  time/dat\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aTSortByModific; \"  -t                         sort by mo\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aUWithLtSortByA; \"  -u                         with -lt: \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aWWidthColsSetO; \"  -w, --width=COLS           set output\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aTheSizeArgumen; \"\\nThe SIZE argument is an integer and o\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aTheTimeStyleAr; \"\\nThe TIME_STYLE argument can be full-i\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aUsingColorToDi; \"\\nUsing color to distinguish file types\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aExitStatus0IfO; \"\\nExit status:\\n 0  if OK,\\n 1  if mino\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     eax, cs:ls_mode", "lea     rbp, domainname+7; \"ls\"", "cmp     eax, 1", "jz      short loc_9AC5"], ["mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~eax,<TAG>", "lea~rbp,<TAG>", "cmp~eax,0", "jz~FOO"]], [6, 0, 8, 0, 3, 15, 1, 4, 5, 2, 0.11274509803921569, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      loc_9C85"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 4, 3, 0.21241830065359477, ["mov     rbx, [rbx+8]", "test    rbx, rbx", "jz      loc_9CC6"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jz~FOO"]], [6, 0, 5, 0, 3, 15, 1, 4, 5, -1, 0.08986928104575163, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_9BDB"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 14, 1, 0, 4, 1, 1, 4, 4, 0.0, ["add     rbx, 10h", "mov     rsi, [rbx]", "test    rsi, rsi", "jnz     short loc_9B54"], ["add~rbx,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 14, 0, 1, 4, 1, 2, 3, 4, 0.16666666666666669, ["mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_9B6C"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 7, 0, 0.006535947712418301, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, rbp", "lea     rbp, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_9C22"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,rbp", "lea~rbp,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 6, 1, 0.058823529411764705, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_9C55"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 18, 1, 0, 11, 2, 1, 0, 7, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 88h", "mov     r12d, edi", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_95BC"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r12d,edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 1, -1, 0.0032679738562091504, ["mov     rbx, cs:program_name", "mov     edx, 5; category", "lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [4, 0, 1, 0, 2, 11, 0, 3, 7, -1, 0.049019607843137254, ["mov     edx, 5; category", "lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_95B4"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 6, -1, 0.02777777777777778, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, rbp", "lea     rbp, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_9C22"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,rbp", "lea~rbp,<TAG>", "jmp~FOO"]], [4, 0, 2, 0, 2, 14, 0, 2, 6, -1, 0.04738562091503268, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "cmp     rbp, rbx", "lea     rbp, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rax, a8+6; \"\"", "cmovnz  rbp, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~rbp,rbx", "lea~rbp,<TAG>", "lea~rax,<TAG>", "cmovnz~rbp,rax"]], [2, 0, 14, 0, 0, 24, 0, 0, 2, 5, 0.13398692810457516, ["lea     rsi, asc_16953+1; s2", "mov     [rsp+0A8h+var_A8], rsi", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+0A8h+var_A0], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rsp+0A8h+var_98], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+0A8h+var_90], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+0A8h+var_88], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+0A8h+var_80], rax", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+0A8h+var_78], rcx", "mov     [rsp+0A8h+var_70], rax", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+0A8h+var_68], rcx", "mov     [rsp+0A8h+var_60], rax", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+0A8h+var_58], rcx", "mov     [rsp+0A8h+var_50], rax", "mov     [rsp+0A8h+var_48], 0", "mov     [rsp+0A8h+var_40], 0", "mov     rbx, rsp"], ["lea~rsi,<TAG>", "mov~<TAG>,rsi", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rbx,rsp"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, r12d; status", "call    _exit"], ["mov~edi,r12d", "call~FOO"]]], "func_feature": [84, 9, 97, 15, 19, 27, 4, 420, 0.05332, 58, 2], "succs": [[16], [0, 16], [0], [17], [17, 3], [11, 15], [5, 7], [16, 1], [9, 6], [8, 6], [14], [10, 2], [4, 13], [18], [18], [14], [14], [9], []], "fname": "usage", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 282, 0, 1, 3, 0, 2, 0, 0, 8.106758529785767e-05, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000A034 case 204", "call    add_ignore_pattern", "jmp     loc_9FEE"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 282, 1, 0, 4, 0, 1, 9, 29, 0.08552448301725062, ["mov     eax, eax", "movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["mov~eax,eax", "movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [4, 0, 191, 2, 1, 15, 1, 2, 9, 25, 0.22102217936354868, ["mov     rax, cs:line_length", "mov     ecx, 3", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "setnz   dl", "movzx   edx, dl", "add     rax, rdx", "mov     cs:max_idx, rax", "mov     edi, 0; o", "call    get_quoting_style", "mov     ebx, eax", "mov     edx, cs:format_0", "cmp     edx, 4", "jz      loc_A9C3"], ["mov~rax,<TAG>", "mov~ecx,0", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "setnz~dl", "movzx~edx,dl", "add~rax,rdx", "mov~<TAG>,rax", "mov~edi,0", "call~FOO", "mov~ebx,eax", "mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [1, 0, 193, 0, 0, 2, 0, 1, 11, 26, 0.009364620165005893, ["cmp     byte ptr [rsp+78h+var_70], 0", "jz      loc_A8CA"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [2, 0, 192, 0, 0, 3, 0, 1, 12, 26, 0.0, ["mov     cs:human_output_opts, 0", "mov     cs:output_block_size, 400h", "jmp     loc_A8CA"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 8, 26, 0.21427193828351013, ["cmp     cs:output_block_size, 0", "jz      short loc_A947"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:indicator_style_0, 2; jumptable 000000000000A034 case 263", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 80, 1, 0, 4, 1, 0, 22, 16, 0.0004285867352405443, ["cmp     cs:format_0, 1", "sbb     eax, eax", "and     eax, 0FFFFFFFEh", "add     eax, 4"], ["cmp~<TAG>,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [1, 0, 82, 0, 0, 2, 0, 1, 21, 17, 0.004564448730311797, ["cmp     cs:indicator_style_0, 3", "jz      short loc_B213"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 35, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9964; \"main\"", "mov     edx, 640h; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aFound; \"found\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 30, 0, 1, 10, 1, 2, 34, 7, 0.006064502303653701, ["lea     rdx, [rax-10h]", "mov     [rbp+18h], rdx", "mov     rdx, [rax-10h]", "mov     rax, [rax-8]", "mov     [rsp+78h+di_0.st_ino], rdx", "mov     [rsp+78h+di_0.st_dev], rax", "mov     rsi, r12; entry", "call    hash_delete", "test    found, found", "jz      loc_B3F0"], ["lea~rdx,[rax-10h]+0]", "mov~[rbp+0],rdx", "mov~rdx,[rax-10h]+0]", "mov~rax,[rax-8]+0]", "mov~[rsp+0],rdx", "mov~[rsp+0],rax", "mov~rsi,r12", "call~FOO", "test~found,found", "jz~FOO"]], [0, 0, 79, 0, 0, 2, 0, 1, 21, 15, 0.0033858352084003, ["mov     cs:dereference, eax", "jmp     loc_AAD0"], ["mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 83, 0, 0, 3, 0, 1, 20, 16, 0.00908603878709954, ["mov     eax, 2", "cmp     cs:immediate_dirs, 0", "jnz     short loc_B208"], ["mov~eax,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 80, 0, 0, 2, 0, 1, 22, 16, 0.0004285867352405443, ["mov     eax, 2", "jmp     short loc_B208"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:dereference, 5; jumptable 000000000000A034 case 207", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 166, 0, 0, 1, 0, 0, 17, 21, 0.01841851494696239, ["lea     rbx, posix_prefix_10077; \"posix-\""], ["lea~rbx,<TAG>"]], [0, 0, 168, 0, 1, 5, 1, 2, 17, 22, 0.022297224900889315, ["lea     rdi, aTimeStyle; \"TIME_STYLE\"", "call    _getenv", "mov     r15, rax", "test    rax, rax", "jnz     loc_B7B8"], ["lea~rdi,<TAG>", "call~FOO", "mov~r15,rax", "test~rax,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 2, 1, 1, 16, 22, 0.0400835744133719, ["test    r15, r15", "jz      loc_ABFF"], ["test~r15,r15", "jz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:format_0, 0; jumptable 000000000000A034 case 265", "lea     r15, aFullIso; \"full-iso\"", "jmp     loc_9FEE"], ["mov~<TAG>,0", "lea~r15,<TAG>", "jmp~FOO"]], [1, 0, 30, 1, 0, 5, 0, 0, 33, 8, 0.011571841851494695, ["mov     rax, [rbp+18h]", "mov     rdx, rax", "sub     rdx, [rbp+10h]", "cmp     rdx, 0Fh", "jbe     loc_B3D1"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "sub~rdx,[rbp+0]", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 32, 7, 0.014421943640844315, ["cmp     qword ptr [thispend], 0", "jnz     short loc_B40F"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 282, 0, 1, 9, 0, 2, 7, 27, 0.2980713596914175, ["mov     dword ptr [rsp+78h+di_0.st_ino], 0FFFFFFFFh", "mov     r8, r13; longind", "lea     rcx, long_options; longopts", "lea     rdx, shortopts; \"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:\"...", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_A8C0"], ["mov~[word ptr [rsp+0],0", "mov~r8,r13", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,argv", "mov~edi,r12d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:ignore_mode, 2; jumptable 000000000000A034 case 228", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 282, 0, 1, 4, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     esi, 7; jumptable 000000000000A034 case 229", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_9FEE"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:time_type_0, 1; jumptable 000000000000A034 case 230", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:immediate_dirs, r14b; jumptable 000000000000A034 case 231", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [3, 0, 282, 0, 0, 5, 0, 1, 11, 28, 0.005989499624986606, ["mov     cs:print_block_size, 0", "mov     cs:print_with_color, 0", "mov     cs:print_hyperlink, 0", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,r14b", "jmp~FOO"]], [2, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:format_0, 0; jumptable 000000000000A034 case 234", "mov     cs:print_owner, 0", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [4, 0, 282, 0, 0, 5, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:human_output_opts, 0B0h; jumptable 000000000000A034 case 235", "mov     cs:file_human_output_opts, 0B0h", "mov     cs:output_block_size, 1", "mov     cs:file_output_block_size, 1", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:print_inode, r14b; jumptable 000000000000A034 case 236", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:format_0, 0; jumptable 000000000000A034 case 239", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:format_0, 4; jumptable 000000000000A034 case 240", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:numeric_ids, r14b; jumptable 000000000000A034 case 241", "mov     cs:format_0, 0", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:format_0, 0; jumptable 000000000000A034 case 242", "mov     cs:print_group, 0", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:indicator_style_0, 1; jumptable 000000000000A034 case 243", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:qmark_funny_chars, r14b; jumptable 000000000000A034 case 244", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:sort_reverse, r14b; jumptable 000000000000A034 case 245", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:print_block_size, r14b; jumptable 000000000000A034 case 246", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:sort_type_0, 4; jumptable 000000000000A034 case 247", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:time_type_0, 2; jumptable 000000000000A034 case 248", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:sort_type_0, 3; jumptable 000000000000A034 case 249", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 282, 0, 1, 4, 1, 2, 10, 28, 0.0011418197550182047, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000A034 case 250", "call    set_line_length", "test    al, al", "jnz     loc_9FEE"], ["mov~rdi,<TAG>", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 0.003081174731981668, ["mov     cs:format_0, 3; jumptable 000000000000A034 case 251", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:ignore_mode, 1; jumptable 000000000000A034 case 196", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 2, 5, 0, 3, 10, 28, 8.106758529785767e-05, ["lea     rdi, pattern+1; jumptable 000000000000A034 case 197", "call    add_ignore_pattern", "lea     rdi, pattern; \".*~\"", "call    add_ignore_pattern", "jmp     loc_9FEE"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:format_0, 2; jumptable 000000000000A034 case 198", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:dired, r14b; jumptable 000000000000A034 case 199", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:indicator_style_0, 3; jumptable 000000000000A034 case 201", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:print_group, 0; jumptable 000000000000A034 case 202", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:dereference, 3; jumptable 000000000000A034 case 203", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:dereference, 4; jumptable 000000000000A034 case 262", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 282, 0, 1, 4, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     esi, 0; jumptable 000000000000A034 case 209", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_9FEE"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 282, 0, 1, 4, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     esi, 5; jumptable 000000000000A034 case 212", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_9FEE"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:recursive, r14b; jumptable 000000000000A034 case 213", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:sort_type_0, 2; jumptable 000000000000A034 case 214", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,r14b", "jmp~FOO"]], [8, 0, 282, 2, 2, 16, 0, 3, 10, 28, 8.106758529785767e-05, ["mov     edx, 5; jumptable 000000000000A034 case 215", "lea     rsi, aInvalidTabSize; \"invalid tab size\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, rax; err", "sub     rsp, 8", "push    2; err_exit", "lea     r8, a8+6; suffixes", "mov     rcx, 0FFFFFFFFFFFFFFFFh; max", "mov     edx, 0; min", "mov     esi, 0; base", "mov     rdi, cs:optarg@@GLIBC_2_2_5; n_str", "call    xnumtoumax", "mov     cs:tabsize, rax", "add     rsp, 10h", "jmp     loc_9FEE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,rax", "sub~rsp,0", "push~0", "lea~r8,<TAG>", "mov~rcx,0", "mov~edx,0", "mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "mov~<TAG>,rax", "add~rsp,0", "jmp~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:sort_type_0, 0FFFFFFFFh; jumptable 000000000000A034 case 216", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:sort_type_0, 1; jumptable 000000000000A034 case 219", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~<TAG>,0", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 0.0011418197550182047, ["cmp     cs:format_0, 0; jumptable 000000000000A034 case 180", "jz      loc_9FEE"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 11, 28, 0.0, ["mov     cs:format_0, 1", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:print_author, r14b; jumptable 000000000000A034 case 259", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 1, 8, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     edi, 10h; jumptable 000000000000A034 case 267", "call    xmalloc", "mov     rdx, cs:optarg@@GLIBC_2_2_5", "mov     [rax], rdx", "mov     rdx, cs:hide_patterns", "mov     [rax+8], rdx", "mov     cs:hide_patterns, rax", "jmp     loc_9FEE"], ["mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~[rax+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 282, 0, 1, 12, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     r9, cs:argmatch_die; jumptable 000000000000A034 case 273", "mov     r8d, 4; valsize", "lea     rcx, sort_types; vallist", "lea     rdx, sort_args; arglist", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdi, context; \"--sort\"", "call    __xargmatch_internal", "lea     rdx, sort_types", "mov     eax, [rdx+rax*4]", "mov     cs:sort_type_0, eax", "mov     byte ptr [rsp+78h+name], r14b", "jmp     loc_9FEE"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:directories_first, r14b; jumptable 000000000000A034 case 266", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 282, 0, 1, 11, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     r9, cs:argmatch_die; jumptable 000000000000A034 case 274", "mov     r8d, 4; valsize", "lea     rcx, time_types; vallist", "lea     rdx, time_args; arglist", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdi, aTime; \"--time\"", "call    __xargmatch_internal", "lea     rdx, time_types", "mov     eax, [rdx+rax*4]", "mov     cs:time_type_0, eax", "jmp     loc_9FEE"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 282, 0, 1, 11, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     r9, cs:argmatch_die; jumptable 000000000000A034 case 264", "mov     r8d, 4; valsize", "lea     rcx, format_types; vallist", "lea     rdx, format_args; arglist", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdi, aFormat; \"--format\"", "call    __xargmatch_internal", "lea     rdx, format_types", "mov     eax, [rdx+rax*4]", "mov     cs:format_0, eax", "jmp     loc_9FEE"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 13, 28, 0.002466159505696632, ["mov     cs:print_with_color, 0", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 1, 5, 1, 2, 13, 28, 0.003537626343797993, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "setnz   cs:print_with_color", "jz      loc_9FEE"], ["mov~edi,0", "call~FOO", "test~eax,eax", "setnz~<TAG>", "jz~FOO"]], [1, 0, 282, 0, 0, 3, 1, 1, 11, 28, 0.014904103717989928, ["mov     cs:print_hyperlink, al", "and     cs:print_hyperlink, 1", "jmp     loc_9FEE"], ["mov~<TAG>,al", "and~<TAG>,0", "jmp~FOO"]], [1, 0, 282, 0, 1, 11, 0, 2, 10, 28, 8.106758529785767e-05, ["mov     r9, cs:argmatch_die; jumptable 000000000000A034 case 269", "mov     r8d, 4; valsize", "lea     rcx, indicator_style_types; vallist", "lea     rdx, indicator_style_args; arglist", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdi, aIndicatorStyle_0; \"--indicator-style\"", "call    __xargmatch_internal", "lea     rdx, indicator_style_types", "mov     eax, [rdx+rax*4]", "mov     cs:indicator_style_0, eax", "jmp     loc_9FEE"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 282, 0, 2, 12, 0, 3, 10, 28, 8.106758529785767e-05, ["mov     r9, cs:argmatch_die; jumptable 000000000000A034 case 270", "mov     r8d, 4; valsize", "lea     rcx, quoting_style_vals; vallist", "lea     rdx, quoting_style_args; arglist", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdi, aQuotingStyle_0; \"--quoting-style\"", "call    __xargmatch_internal", "lea     rdx, quoting_style_vals", "mov     esi, [rdx+rax*4]; s", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_9FEE"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     r15, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000A034 case 275", "jmp     loc_9FEE"], ["mov~r15,<TAG>", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:qmark_funny_chars, 0; jumptable 000000000000A034 case 271", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 5, 0, 1, 11, 28, 0.0029893924783027962, ["mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax", "jmp     loc_9FEE"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [2, 2, 282, 0, 0, 5, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:human_output_opts, 90h; jumptable 000000000000A034 case 272", "mov     cs:file_human_output_opts, 90h", "mov     cs:output_block_size, 1", "mov     cs:file_output_block_size, 1", "jmp     loc_9FEE"], ["mov~<TAG>,<STR>", "mov~<TAG>,<STR>", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     cs:print_scontext, r14b; jumptable 000000000000A034 case 221", "jmp     loc_9FEE"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 10, 28, 8.106758529785767e-05, ["mov     byte ptr [rsp+78h+var_70], r14b; jumptable 000000000000A034 case 238", "jmp     loc_9FEE"], ["mov~[yte ptr [rsp+0],r14b", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 12, 28, 0.009918211364691596, ["mov     cs:tabsize, 0", "jmp     loc_9FEE"], ["mov~<TAG>,0", "jmp~FOO"]], [4, 0, 282, 0, 0, 6, 0, 0, 6, 28, 0.06949533911925426, ["mov     byte ptr [rsp+78h+var_70], 0", "mov     byte ptr [rsp+78h+name], 0", "mov     r15d, 0", "lea     r13, [rsp+78h+di_0]", "lea     rbx, off_14F44", "mov     r14d, 1"], ["mov~[yte ptr [rsp+0],0", "mov~<TAG>,0", "mov~r15d,0", "lea~r13,[rsp+0]", "lea~rbx,<TAG>", "mov~r14d,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 77, 0, 1, 9, 1, 2, 21, 15, 0.004671595414121933, ["lea     r8, dev_ino_free; data_freer", "lea     rcx, dev_ino_compare; comparator", "lea     rdx, dev_ino_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 1Eh; candidate", "call    hash_initialize", "mov     cs:active_dir_set, rax", "test    rax, rax", "jz      loc_B21A"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 0, 0, 28, 14, 0.007725275902710811, ["lea     ecx, [rax-2Dh]", "cmp     ecx, 1", "jbe     short loc_B2C1"], ["lea~ecx,[rax-2Dh]+0]", "cmp~ecx,0", "jbe~FOO"]], [0, 1, 62, 0, 0, 3, 0, 1, 27, 14, 0.017009536054859102, ["lea     ecx, [rax-61h]", "cmp     ecx, 19h", "ja      short loc_B2A9"], ["lea~ecx,[rax-61h]+0]", "cmp~ecx,<STR>", "ja~FOO"]], [1, 0, 62, 0, 0, 3, 0, 0, 28, 14, 4.285867352405443e-05, ["lea     ecx, [rax-30h]", "cmp     ecx, 9", "jbe     short loc_B285"], ["lea~ecx,[rax-30h]+0]", "cmp~ecx,0", "jbe~FOO"]], [0, 0, 155, 0, 0, 2, 0, 1, 18, 23, 0.021075752705453765, ["lea     r15, dirname+11h; \"locale\"", "jmp     short loc_AC35"], ["lea~r15,<TAG>", "jmp~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 10, 30, 0.007275259830708239, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000A034 case 261", "test    rsi, rsi", "jz      loc_B642"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [2, 0, 172, 1, 0, 4, 0, 1, 16, 20, 0.004109075324118718, ["mov     eax, cs:time_type_0", "sub     eax, 1", "cmp     eax, 1", "ja      loc_AA93"], ["mov~eax,<TAG>", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 178, 0, 0, 2, 0, 1, 15, 21, 0.003562627236687024, ["cmp     cs:print_hyperlink, 0", "jz      loc_B793"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 282, 1, 0, 3, 0, 1, 8, 30, 0.08465659487838852, ["add     eax, 83h", "cmp     eax, 113h; switch 276 cases", "ja      loc_A8AC; jumptable 000000000000A034 default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 139, 0, 0, 2, 0, 1, 20, 18, 0.008936033429765348, ["mov     ebx, cs:optind@@GLIBC_2_2_5", "jmp     loc_AAA6"], ["mov~ebx,<TAG>", "jmp~FOO"]], [1, 0, 166, 0, 1, 4, 1, 2, 19, 19, 0.01030751098253509, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jz      loc_AC20"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 123, 1, 0, 3, 0, 1, 25, 22, 0.0001500053573341905, ["add     rax, 1", "mov     [rsp+78h+src], rax", "jmp     short loc_B035"], ["add~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 1, 123, 0, 0, 2, 0, 1, 24, 22, 0.008211007535983429, ["cmp     cl, 3Ah ; ':'", "jz      loc_B053"], ["cmp~cl,<STR>", "jz~FOO"]], [9, 1, 306, 1, 5, 35, 1, 6, 0, 34, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     r12d, edi", "mov     rbp, argv", "mov     rax, fs:28h", "mov     [rsp+78h+var_40], rax", "xor     eax, eax", "mov     argc, [argv]; argv0", "call    set_program_name", "lea     rsi, a8+6; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "mov     cs:exit_failure, 2", "lea     rdi, close_stdout", "call    atexit", "mov     cs:exit_status, 0", "mov     cs:print_dir_name, 1", "mov     cs:pending_dirs, 0", "mov     rax, 8000000000000000h", "mov     cs:current_time.tv_sec, rax", "mov     cs:current_time.tv_nsec, 0FFFFFFFFFFFFFFFFh", "mov     cs:qmark_funny_chars, 0", "mov     eax, cs:ls_mode", "cmp     eax, 2", "jz      short loc_9E44"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r12d,edi", "mov~rbp,argv", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~argc,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~rax,0", "mov~<TAG>,rax", "mov~<TAG>,0", "mov~<TAG>,0", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 161, 0, 0, 2, 0, 1, 19, 23, 0.009364620165005893, ["cmp     byte ptr [r15], 2Bh ; '+'", "jz      loc_ACCB"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 166, 0, 1, 6, 1, 2, 18, 20, 0.020786456659166397, ["mov     edx, 6; n", "mov     rsi, rbx; s2", "mov     rdi, r15; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_AC2B"], ["mov~edx,0", "mov~rsi,rbx", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 304, 0, 0, 2, 0, 1, 1, 34, 6.428801028608164e-05, ["cmp     eax, 3", "jz      loc_A036"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 141, 0, 0, 4, 0, 1, 21, 20, 0.00675559841422908, ["lea     rax, aYMDHM; \"%Y-%m-%d %H:%M\"", "mov     cs:long_time_format+8, rax", "mov     cs:long_time_format, rax", "jmp     loc_AD0B"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 150, 0, 0, 2, 0, 1, 20, 21, 0.01855244830172506, ["cmp     rax, 1", "jz      loc_AE1E"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 95, 0, 1, 6, 1, 2, 25, 18, 0.002014357655630558, ["mov     edx, 6; n", "lea     rsi, aTarget; \"target\"", "mov     rdi, cs:s1; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_B660"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 24, 18, 0.030193935497696344, ["cmp     cs:qword_21F0D0, 6", "jnz     loc_B660"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 302, 0, 0, 2, 0, 1, 2, 35, 8.571734704810886e-05, ["cmp     eax, 1", "jz      loc_A054"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 66, 0, 0, 2, 0, 0, 22, 12, 0.15734490517518482, ["mov     cs:format_needs_stat, 1", "mov     eax, 0"], ["mov~<TAG>,0", "mov~eax,0"]], [2, 0, 74, 1, 2, 9, 1, 3, 21, 13, 0.17443480124290153, ["lea     rdi, aTz; \"TZ\"", "call    _getenv", "mov     rdi, rax; name", "call    tzalloc", "mov     cs:localtz, rax", "mov     eax, cs:sort_type_0", "sub     eax, 2", "test    eax, 0FFFFFFFDh", "jz      loc_B6CA"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~eax,<TAG>", "sub~eax,0", "test~eax,0", "jz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 22, 13, 0.014207650273224043, ["cmp     cs:format_0, 0", "jz      loc_B6CA"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 72, 0, 0, 2, 0, 1, 23, 13, 0.011893281902925105, ["cmp     cs:print_scontext, 0", "jnz     loc_B6CA"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 123, 0, 0, 3, 0, 1, 21, 21, 0.06275224115146968, ["lea     eax, [rdx-1]", "cmp     eax, 5; switch 6 cases", "ja      loc_B13A; jumptable 000000000000B051 default case"], ["lea~eax,[rdx-1]+0]", "cmp~eax,0", "ja~FOO"]], [4, 0, 123, 0, 1, 10, 0, 2, 20, 22, 0.05002678667095253, ["mov     word ptr [rsp+78h+s1], 3F3Fh", "mov     [rsp+78h+var_41], 0", "mov     rdi, rax; string", "call    xstrdup", "mov     cs:color_buf, rax", "mov     [rsp+78h+di_0.st_ino], rax", "mov     edx, 1", "mov     [rsp+78h+var_70], 0", "lea     r15, indicator_name", "jmp     loc_B035"], ["mov~[ord ptr [rsp+0],0", "mov~[rsp+0],0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~[rsp+0],rax", "mov~edx,0", "mov~[rsp+0],0", "lea~r15,<TAG>", "jmp~FOO"]], [6, 0, 123, 2, 2, 19, 1, 3, 24, 22, 0.0006982392228293866, ["mov     edi, 28h ; '('; n", "call    xmalloc", "mov     rcx, rax; output_count", "mov     [rsp+78h+var_70], rax", "mov     rax, cs:color_ext_list", "mov     [rcx+20h], rax", "mov     cs:color_ext_list, rcx", "add     [rsp+78h+src], 1", "mov     rax, [rsp+78h+di_0.st_ino]", "mov     [rcx+8], rax", "lea     rsi, [rsp+78h+src]; src", "lea     rdi, [rsp+78h+di_0]; dest", "mov     edx, 1; equals_end", "call    get_funky_string", "cmp     al, 1", "sbb     edx, edx", "and     edx, 2", "add     edx, 4", "jmp     short loc_B035"], ["mov~edi,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rcx+0],rax", "mov~<TAG>,rcx", "add~[rsp+0],0", "mov~rax,[rsp+0]", "mov~[rcx+0],rax", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "cmp~al,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "jmp~FOO"]], [3, 0, 123, 2, 1, 13, 1, 2, 26, 22, 0.00511089681774349, ["movsxd  rax, dword ptr [rsp+78h+name]", "shl     rax, 4", "lea     rcx, color_indicator", "add     rcx, rax; output_count", "mov     rax, [rsp+78h+di_0.st_ino]", "mov     [rcx+8], rax", "lea     rsi, [rsp+78h+src]; src", "lea     rdi, [rsp+78h+di_0]; dest", "mov     edx, 0; equals_end", "call    get_funky_string", "mov     edx, 1", "test    al, al", "jnz     loc_B035"], ["movsxd~rax,<TAG>", "shl~rax,0", "lea~rcx,<TAG>", "add~rcx,rax", "mov~rax,[rsp+0]", "mov~[rcx+0],rax", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "mov~edx,0", "test~al,al", "jnz~FOO"]], [4, 0, 123, 1, 1, 13, 1, 2, 24, 22, 0.00021965070181077895, ["mov     rax, [rsp+78h+di_0.st_ino]", "mov     rsi, [rsp+78h+var_70]", "mov     [rsi+18h], rax", "lea     rcx, [rsi+10h]; output_count", "lea     rsi, [rsp+78h+src]; src", "lea     rdi, [rsp+78h+di_0]; dest", "mov     edx, 0; equals_end", "call    get_funky_string", "cmp     al, 1", "sbb     edx, edx", "and     edx, 5", "add     edx, 1", "jmp     loc_B035"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~[rsi+0],rax", "lea~rcx,[rsi+0]", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "cmp~al,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "jmp~FOO"]], [6, 0, 123, 0, 3, 14, 0, 3, 27, 22, 0.002560805743062252, ["lea     rdi, [rsp+78h+s1]; arg", "call    quote", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aUnrecognizedPr; \"unrecognized prefix: %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edx, 6"], ["lea~rdi,[rsp+0]", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0"]], [2, 0, 62, 0, 0, 4, 0, 1, 25, 16, 0.03231543983713704, ["lea     rdx, RFC3986", "mov     eax, 0", "mov     esi, 1", "jmp     short loc_B297"], ["lea~rdx,<TAG>", "mov~eax,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 24, 10, 0.155930568948891, ["cmp     cs:print_hyperlink, 0", "jnz     loc_B26A"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 34, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9964; \"main\"", "mov     edx, 674h; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aHashGetNEntrie; \"hash_get_n_entries (active_dir_set) == \"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 33, 3, 0.00615021965070181, ["mov     rdi, rbx; table", "call    hash_get_n_entries", "test    rax, rax", "jnz     loc_B623"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 282, 0, 0, 1, 0, 0, 11, 29, 0.004946605235901283, ["mov     cs:print_with_color, r14b"], ["mov~<TAG>,r14b"]], [2, 0, 282, 0, 1, 10, 0, 2, 11, 30, 0.004200150005357334, ["mov     r9, cs:argmatch_die; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, when_types; vallist", "lea     rdx, when_args; arglist", "lea     rdi, aColor; \"--color\"", "call    __xargmatch_internal", "lea     rdx, when_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      loc_B642"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 30, 7, 0.0028608164577306333, ["cmp     qword ptr [rax+18h], 0", "jnz     loc_B782"], ["cmp~[word ptr [rax+0],0", "jnz~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 29, 5, 0.062412943319404265, ["mov     rax, cs:pending_dirs", "test    rax, rax", "jz      loc_B4D2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 30, 0, 4, 11, 0, 4, 32, 6, 0.0004821600771456123, ["movzx   edx, byte ptr [thispend+10h]; command_line_arg", "mov     rsi, [thispend+8]; realname", "mov     rdi, [thispend]; name", "call    print_dir", "mov     rdi, [thispend]; ptr", "call    free", "mov     rdi, [thispend+8]; ptr", "call    free", "mov     rdi, thispend; ptr", "call    free", "mov     cs:print_dir_name, 1"], ["movzx~edx,[yte ptr [thispend+0]", "mov~rsi,[thispend+0]", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[thispend+0]", "call~FOO", "mov~rdi,thispend", "call~FOO", "mov~<TAG>,0"]], [0, 0, 30, 0, 0, 5, 1, 1, 31, 7, 0.02014357655630558, ["mov     rax, [thispend+18h]", "mov     cs:pending_dirs, rax", "mov     rdi, cs:active_dir_set; table", "test    rdi, rdi", "jz      short loc_B40F"], ["mov~rax,[thispend+0]", "mov~<TAG>,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 30, 5, 0.025886638808528876, ["mov     rbx, cs:pending_dirs", "test    rbx, rbx", "jz      loc_B4D2"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [0, 0, 30, 0, 4, 9, 0, 5, 35, 6, 0.0005571627558127076, ["mov     rdi, found; ptr", "call    free", "mov     rdi, [thispend]; ptr", "call    free", "mov     rdi, [thispend+8]; ptr", "call    free", "mov     rdi, thispend; ptr", "call    free", "jmp     loc_B43F"], ["mov~rdi,found", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[thispend+0]", "call~FOO", "mov~rdi,thispend", "call~FOO", "jmp~FOO"]], [0, 0, 30, 0, 0, 3, 0, 1, 29, 6, 0.026808100289296047, ["lea     argv, dev_ino_obstack", "lea     argc, [rsp+78h+di_0]", "jmp     loc_B43F"], ["lea~argv,<TAG>", "lea~argc,[rsp+0]", "jmp~FOO"]], [3, 0, 298, 0, 1, 5, 0, 2, 2, 33, 0.003192971177542055, ["mov     cs:format_0, 0", "mov     esi, 7; s", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_9E5D"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 123, 1, 0, 5, 0, 1, 22, 20, 0.06020215007678845, ["mov     eax, eax", "lea     rsi, off_15394", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [3, 0, 298, 0, 1, 4, 0, 1, 1, 33, 0.003192971177542055, ["mov     cs:format_0, 2", "mov     esi, 7; s", "mov     edi, 0; o", "call    set_quoting_style"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO"]], [1, 0, 94, 0, 0, 1, 0, 0, 21, 18, 0.005035894139076395, ["mov     cs:print_with_color, 0"], ["mov~<TAG>,0"]], [0, 0, 102, 0, 1, 5, 1, 2, 20, 19, 0.013971927568841743, ["lea     rdi, aColorterm+5; name", "call    _getenv", "mov     [rsp+78h+name], rax", "test    rax, rax", "jz      loc_B659"], ["lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 21, 19, 0.01054323368691739, ["cmp     byte ptr [rax], 0", "jz      loc_B659"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 100, 1, 0, 4, 0, 1, 23, 19, 0.009214614807671702, ["mov     rax, r13", "sub     rax, r14", "cmp     rax, 10C3h", "ja      loc_B659"], ["mov~rax,r13", "sub~rax,r14", "cmp~rax,<STR>", "ja~FOO"]], [0, 0, 182, 0, 0, 6, 1, 1, 13, 22, 0.001253616200578592, ["lea     eax, [rax-2]", "lea     rdx, asc_16881; \"*=>@|\"", "lea     rbx, [rax+rdx]", "movzx   esi, byte ptr [rdx+rax]", "test    sil, sil", "jz      short loc_AA32"], ["lea~eax,[rax-2]+0]", "lea~rdx,<TAG>", "lea~rbx,<TAG>", "movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 183, 0, 0, 3, 0, 0, 12, 22, 0.22745098039215686, ["mov     eax, cs:indicator_style_0", "cmp     eax, 1", "jbe     short loc_AA32"], ["mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [3, 1, 180, 0, 2, 9, 0, 3, 13, 21, 0.22950819672131148, ["mov     edi, 0; o", "call    clone_quoting_options", "mov     cs:dirname_quoting_options, rax", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "call    set_char_quoting", "cmp     cs:dired, 0", "jz      short loc_AA7B"], ["mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 182, 1, 1, 8, 1, 2, 14, 22, 0.0, ["movsx   esi, sil; c", "mov     edx, 1; i", "mov     rdi, cs:filename_quoting_options; o", "call    set_char_quoting", "add     rbx, 1", "movzx   esi, byte ptr [rbx]", "test    sil, sil", "jnz     short loc_AA11"], ["movsx~esi,sil", "mov~edx,0", "mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 154, 0, 1, 7, 1, 2, 19, 22, 0.022816886317368477, ["mov     ecx, 4; valsize", "lea     rdx, time_style_types; vallist", "lea     rsi, time_style_args; arglist", "mov     rdi, r15; arg", "call    argmatch", "test    rax, rax", "js      loc_AD55"], ["mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 2, 0, 0, 5, 0, 1, 10, -1, 0.0021643630129647485, ["mov     rcx, cs:Version; jumptable 000000000000A034 case 0", "mov     eax, cs:ls_mode", "lea     rsi, domainname+7; \"ls\"", "cmp     eax, 1", "jz      short loc_A876"], ["mov~rcx,<TAG>", "mov~eax,<TAG>", "lea~rsi,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 300, 0, 1, 4, 1, 2, 3, 34, 0.0032572591878281365, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jnz     short loc_A071"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 12, 29, 0.005135897710632523, ["cmp     eax, 2", "jz      short loc_A671"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 14, 22, 0.005143040822886531, ["cmp     cs:format_0, 0", "jnz     short loc_AA74"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 85, 0, 0, 1, 0, 0, 19, 16, 0.019581056466302368, ["mov     cs:check_symlink_mode, 1"], ["mov~<TAG>,0"]], [1, 0, 93, 0, 0, 2, 0, 1, 21, 17, 0.0537769206043073, ["cmp     cs:directories_first, 0", "jnz     loc_AABC"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 18, 16, 0.14651237544198006, ["cmp     cs:directories_first, 0", "jz      short loc_AAC3"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 29, 6, 0.014357655630558235, ["cmp     cs:cwd_n_used, 0", "jz      loc_B778"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 41, 0, 1, 4, 0, 2, 29, 7, 0.0, ["mov     esi, 1; command_line_arg", "mov     edi, 0; dirname", "call    extract_dirs_from_files", "jmp     short loc_B343"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 42, 0, 1, 3, 0, 2, 28, 7, 0.018900675024108003, ["call    sort_files", "cmp     cs:immediate_dirs, 0", "jz      short loc_B38D"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 136, 0, 1, 5, 1, 2, 18, 20, 0.08518161362905818, ["lea     rdi, aLsColors; \"LS_COLORS\"", "call    _getenv", "mov     [rsp+78h+src], rax", "test    rax, rax", "jz      short loc_AE78"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "test~rax,rax", "jz~FOO"]], [1, 0, 138, 0, 0, 2, 0, 1, 17, 17, 0.2336226293796207, ["cmp     cs:print_with_color, 0", "jnz     loc_AE59"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 22, 21, 0.00600021429336762, ["cmp     rax, 2", "jz      loc_AE38"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 148, 0, 0, 2, 0, 1, 21, 21, 0.01042537233472624, ["cmp     rax, 1", "jle     loc_ADFB"], ["cmp~rax,0", "jle~FOO"]], [1, 0, 175, 0, 0, 1, 0, 0, 15, 21, 0.0009482481517197042, ["mov     cs:dired, 0"], ["mov~<TAG>,0"]], [0, 0, 6, 0, 0, 3, 1, 1, 32, 2, 0.01838637094181935, ["mov     rbx, cs:active_dir_set", "test    rbx, rbx", "jz      short loc_B584"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [2, 0, 7, 0, 4, 16, 0, 5, 32, 3, 0.0, ["lea     rsi, dired_obstack; os", "lea     rdi, prefix; \"//DIRED//\"", "call    dired_dump_obstack", "lea     rsi, subdired_obstack; os", "lea     rdi, aSubdired; \"//SUBDIRED//\"", "call    dired_dump_obstack", "mov     rdi, cs:filename_quoting_options; o", "call    get_quoting_style", "mov     eax, eax", "lea     rdx, quoting_style_args", "mov     rdx, [rdx+rax*8]", "lea     rsi, aDiredOptionsQu; \"//DIRED-OPTIONS// --quoting-style=%s\\n\"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_B55F"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~eax,eax", "lea~rdx,<TAG>", "mov~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 31, 3, 0.024343726561662917, ["cmp     cs:dired, 0", "jnz     short loc_B5C9"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 196, 0, 1, 4, 1, 2, 10, 28, 0.0011036108432444015, ["lea     rdi, aLsBlockSize+3; name", "call    _getenv", "test    rax, rax", "jnz     short loc_A971"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 197, 0, 2, 9, 1, 3, 9, 28, 0.00546448087431694, ["lea     rdi, aLsBlockSize; \"LS_BLOCK_SIZE\"", "call    _getenv", "mov     rbx, rax", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "mov     rdi, rax; spec", "call    human_options", "test    rbx, rbx", "jz      short loc_A9B0"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 13, 0, 1, 1, 0, 1, 33, 6, 0.012230793956927033, ["call    restore_default_color"], ["call~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 32, 7, 0.026422372227579555, ["cmp     cs:color_indicator, 2", "jnz     short loc_B518"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 17, 0, 1, 6, 1, 2, 33, 7, 0.008839601414336226, ["mov     edx, 2; n", "lea     rsi, asc_16953; \"\\x1B[\"", "mov     rdi, cs:off_21F068; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_B518"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 15, 0, 0, 3, 0, 1, 35, 7, 0.0029679631415407692, ["mov     rax, cs:stru_21F070.string", "cmp     byte ptr [rax], 6Dh ; 'm'", "jnz     loc_B518"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 34, 7, 0.0059144969463195115, ["cmp     cs:stru_21F070.len, 1", "jz      loc_B5AD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 26, 15, 0.0309439622843673, ["cmp     eax, 5Ah ; 'Z'", "jg      short loc_B27D"], ["cmp~eax,0", "jg~FOO"]], [0, 0, 62, 0, 0, 1, 0, 0, 28, 13, 0.012868316725597342, ["mov     ecx, esi"], ["mov~ecx,esi"]], [1, 0, 62, 0, 0, 2, 0, 1, 27, 14, 0.009402121504339441, ["cmp     eax, 41h ; 'A'", "jge     short loc_B285"], ["cmp~eax,0", "jge~FOO"]], [1, 0, 90, 0, 1, 4, 1, 2, 23, 17, 0.010875388406728812, ["mov     edi, 0Dh; type", "call    is_colored", "test    al, al", "jnz     short loc_B6BE"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 22, 16, 0.032567234544090856, ["cmp     cs:print_with_color, 0", "jz      loc_AAC3"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 174, 1, 0, 4, 0, 1, 14, 20, 0.22651344690881817, ["mov     eax, cs:time_type_0", "sub     eax, 1", "cmp     eax, 1", "ja      short loc_AA93"], ["mov~eax,<TAG>", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 298, 0, 0, 2, 0, 1, 4, 33, 0.003192971177542055, ["mov     cs:format_0, 1", "jmp     loc_9E5D"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 1, 0, 1, 14, 29, 2.1429336762027214e-05, ["jmp     loc_B649"], ["jmp~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 20, 18, 0.016650594664095145, ["cmp     byte ptr [rax], 0", "jnz     loc_B660"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 104, 0, 1, 4, 1, 2, 19, 19, 0.03289403192971178, ["lea     rdi, aColorterm; \"COLORTERM\"", "call    _getenv", "test    rax, rax", "jz      short loc_AE92"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 173, 0, 0, 2, 0, 1, 15, 20, 0.0026572377584913745, ["cmp     byte ptr [rsp+78h+name], 0", "jz      loc_ABE3"], ["cmp~<TAG>,0", "jz~FOO"]], [4, 0, 298, 0, 1, 6, 0, 2, 4, 33, 0.003192971177542055, ["mov     cs:format_0, 2", "mov     esi, 3; s", "mov     edi, 0; o", "call    set_quoting_style", "mov     cs:qmark_funny_chars, 1", "jmp     loc_9E5D"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [5, 0, 100, 0, 3, 13, 0, 4, 24, 21, 0.01107896710596807, ["mov     edx, 5; category", "lea     rsi, aUnparsableValu; \"unparsable value for LS_COLORS environm\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdi, cs:color_buf; ptr", "call    free", "mov     rdi, cs:color_ext_list", "jmp     short loc_B1D1"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "jmp~FOO"]], [1, 0, 123, 0, 0, 3, 0, 1, 23, 22, 0.005285903067966714, ["mov     rax, [rsp+78h+src]; jumptable 000000000000B051 case 1", "cmp     byte ptr [rax], 0", "jz      loc_B183"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 123, 0, 0, 5, 0, 1, 23, 22, 0.014793385478052786, ["mov     rax, [rsp+78h+src]; jumptable 000000000000B051 case 2", "lea     rdx, [rax+1]", "mov     [rsp+78h+src], rdx", "cmp     byte ptr [rax], 3Dh ; '='", "jnz     loc_B183"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 123, 0, 0, 5, 0, 1, 23, 22, 0.0037840637165613054, ["mov     rax, [rsp+78h+src]; jumptable 000000000000B051 case 3", "lea     rdx, [rax+1]", "mov     [rsp+78h+src], rdx", "cmp     byte ptr [rax], 3Dh ; '='", "jnz     short loc_B183"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 23, 19, 0.02375799135683417, ["cmp     edx, 6; jumptable 000000000000B051 case 5", "jz      short loc_B183"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 89, 0, 1, 4, 1, 2, 24, 17, 0.006557377049180328, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jz      short loc_B69F"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [2, 1, 62, 2, 0, 5, 1, 1, 29, 12, 0.013489767491696131, ["or      [rdx], cl", "add     eax, 1", "add     rdx, 1", "cmp     eax, 100h", "jz      short loc_B2C5"], ["or~<TAG>,cl", "add~eax,0", "add~rdx,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 62, 0, 0, 4, 0, 1, 30, 13, 0.0003160827172399014, ["cmp     eax, 5Fh ; '_'", "setz    cl", "movzx   ecx, cl", "jmp     short loc_B287"], ["cmp~eax,0", "setz~cl", "movzx~ecx,cl", "jmp~FOO"]], [0, 0, 62, 0, 0, 2, 0, 1, 29, 13, 0.0009375334833386906, ["mov     ecx, esi", "jmp     short loc_B287"], ["mov~ecx,esi", "jmp~FOO"]], [0, 0, 141, 0, 0, 4, 0, 1, 23, 20, 0.0, ["lea     rax, aYMDHMSNZ; \"%Y-%m-%d %H:%M:%S.%N %z\"", "mov     cs:long_time_format+8, rax", "mov     cs:long_time_format, rax", "jmp     loc_AD0B"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 142, 0, 0, 2, 1, 1, 22, 20, 0.0030108218150648237, ["test    rax, rax", "jnz     loc_AD0B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 170, 0, 0, 2, 0, 1, 15, 19, 0.23041894353369763, ["cmp     cs:format_0, 0", "jz      loc_B7AF"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 171, 0, 0, 2, 0, 1, 17, 20, 0.0004285867352405443, ["cmp     byte ptr [rsp+78h+name], 0", "jnz     loc_AA93"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 25, 17, 1.0714668381013607e-05, ["cmp     cs:color_symlink_as_referent, 0", "jnz     short loc_B6BE"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 100, 0, 0, 4, 0, 1, 22, 20, 0.008839601414336226, ["lea     r13, G_line", "mov     r14, r13", "lea     r15, aTerm; \"TERM \"", "jmp     short loc_AEDE"], ["lea~r13,<TAG>", "mov~r14,r13", "lea~r15,<TAG>", "jmp~FOO"]], [0, 0, 139, 0, 0, 1, 0, 0, 16, 18, 0.22340083574413372, ["mov     ebx, cs:optind@@GLIBC_2_2_5"], ["mov~ebx,<TAG>"]], [1, 0, 140, 0, 0, 2, 0, 1, 17, 19, 0.001500053573341905, ["mov     cs:sort_type_0, 4", "jmp     loc_AAA0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 140, 0, 1, 2, 0, 2, 22, 19, 0.028565305903782277, ["call    abformat_init", "jmp     loc_AAA0"], ["call~FOO", "jmp~FOO"]], [1, 0, 87, 0, 1, 4, 1, 2, 25, 16, 0.003573341905068038, ["mov     edi, 0Ch; type", "call    is_colored", "test    al, al", "jz      loc_AAC3"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 11, -1, 0.0, ["cmp     eax, 2", "lea     rsi, command_name+1; \"dir\"", "lea     rax, command_name; \"vdir\"", "cmovnz  rsi, rax; command_name"], ["cmp~eax,0", "lea~rsi,<TAG>", "lea~rax,<TAG>", "cmovnz~rsi,rax"]], [4, 0, 0, 1, 2, 10, 0, 2, 11, -1, 0.0, ["sub     rsp, 8", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aRichardMStallm; \"Richard M. Stallman\"", "lea     rdx, package; \"GNU \"", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     eax, 0", "call    version_etc", "mov     edi, 0; status", "call    _exit"], ["sub~rsp,0", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "lea~rdx,<TAG>", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [3, 0, 2, 1, 1, 9, 1, 2, 21, -1, 0.0014893389049608914, ["add     rbx, 8", "mov     rdx, rbp", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     rcx, [rbx]", "test    rcx, rcx", "jnz     short loc_ADA4"], ["add~rbx,0", "mov~rdx,rbp", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]], [2, 0, 2, 0, 3, 15, 0, 3, 20, -1, 0.0029572484731597557, ["mov     rdx, rax; problem", "mov     rsi, r15; value", "lea     rdi, aTimeStyle_0; \"time style\"", "call    argmatch_invalid", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aValidArguments; \"Valid arguments are:\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rcx, aFullIso; \"full-iso\"", "lea     rbx, time_style_args", "lea     argv, aPosixS; \"  - [posix-]%s\\n\""], ["mov~rdx,rax", "mov~rsi,r15", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "lea~argv,<TAG>"]], [1, 0, 123, 0, 0, 4, 0, 1, 23, 23, 0.011459337833494053, ["mov     rax, [rsp+78h+src]; jumptable 000000000000B051 case 0", "movzx   ecx, byte ptr [rax]", "cmp     cl, 2Ah ; '*'", "jz      loc_B05E"], ["mov~rax,[rsp+0]", "movzx~ecx,<TAG>", "cmp~cl,0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 9, -1, 0.0, ["mov     edi, 2; jumptable 000000000000A034 default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 34, 0, 0, 4, 0, 0, 31, 9, 0.008336012000428586, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     [rdi+30h], rax", "jbe     short loc_B39E"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jbe~FOO"]], [1, 0, 35, 0, 1, 3, 0, 2, 30, 5, 0.011603985856637737, ["call    print_current_files", "cmp     cs:pending_dirs, 0", "jz      loc_B4D2"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 29, 14, 0.002582235079824279, ["cmp     eax, 7Eh ; '~'", "jz      short loc_B2C1"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 123, 0, 0, 4, 0, 0, 24, 23, 0.0005893067609557484, ["lea     rdx, [rax+1]", "mov     [rsp+78h+src], rdx", "movzx   eax, byte ptr [rax]", "mov     [rsp+78h+s1+1], al"], ["lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "movzx~eax,<TAG>", "mov~[rsp+0],al"]], [1, 0, 86, 0, 0, 2, 0, 1, 26, 16, 1.0714668381013607e-05, ["cmp     cs:format_0, 0", "jnz     loc_AAC3"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 84, 0, 0, 2, 0, 1, 19, 15, 0.18990678238508518, ["cmp     cs:dereference, 1", "jz      loc_B1E2"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 24, 16, 0.001366120218579235, ["mov     cs:check_symlink_mode, 1", "jmp     loc_AAC3"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 123, 0, 0, 2, 1, 1, 25, 21, 0.005510911103967998, ["test    cl, cl", "jz      loc_B13F"], ["test~cl,cl", "jz~FOO"]], [4, 0, 141, 0, 2, 11, 0, 3, 25, 20, 0.0, ["mov     edx, 2; category", "mov     rsi, cs:long_time_format; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "mov     cs:long_time_format, rax", "mov     edx, 2; category", "mov     rsi, cs:long_time_format+8; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "mov     cs:long_time_format+8, rax", "jmp     short loc_AD0B"], ["mov~edx,0", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~edx,0", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 142, 0, 1, 4, 1, 2, 24, 20, 0.0015214829101039323, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jz      short loc_AD0B"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 194, 0, 0, 4, 0, 0, 10, 27, 0.005303760848601736, ["mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 51, 0, 1, 3, 1, 2, 30, 11, 0.010982535090538948, ["call    xgethostname", "test    rax, rax", "jz      short loc_B2DB"], ["call~FOO", "test~rax,rax", "jz~FOO"]], [5, 0, 294, 0, 3, 14, 0, 4, 4, 32, 0.0015750562520090003, ["mov     rdi, rbx; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aIgnoringInvali; \"ignoring invalid value of environment v\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_9F23"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 296, 0, 1, 7, 1, 2, 3, 33, 0.00019286403085824494, ["mov     ecx, 4; valsize", "lea     rdx, quoting_style_vals; vallist", "lea     rsi, quoting_style_args; arglist", "mov     rdi, rax; arg", "call    argmatch", "test    eax, eax", "js      loc_A096"], ["mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 282, 0, 1, 10, 0, 2, 11, 29, 0.003160827172399014, ["mov     r9, cs:argmatch_die; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, when_types; vallist", "lea     rdx, when_args; arglist", "lea     rdi, aHyperlink; \"--hyperlink\"", "call    __xargmatch_internal", "lea     rdx, when_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      short loc_A6E0"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 282, 0, 0, 4, 1, 1, 10, 29, 0.005207328833172613, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000A034 case 268", "mov     eax, 1", "test    rsi, rsi", "jz      short loc_A6E0"], ["mov~rsi,<TAG>", "mov~eax,0", "test~rsi,rsi", "jz~FOO"]], [1, 0, 135, 0, 0, 2, 0, 1, 19, 20, 0.05143040822886531, ["cmp     byte ptr [rax], 0", "jnz     loc_AF1F"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 31, 10, 0.0031501125040180006, ["mov     cs:hostname, rax", "jmp     loc_B6FD"], ["mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 78, 0, 0, 2, 0, 1, 20, 14, 0.1813564770170363, ["cmp     cs:recursive, 0", "jz      short loc_AB31"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 12, 30, 0.002121504339440694, ["cmp     eax, 2", "jz      short loc_A6F2"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 291, 0, 1, 4, 1, 2, 5, 31, 0.0001500053573341905, ["mov     rdi, rax; spec", "call    set_line_length", "test    al, al", "jnz     loc_9F4B"], ["mov~rdi,rax", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 4, 31, 0.0002785813779063538, ["cmp     byte ptr [rax], 0", "jnz     loc_A0D6"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 146, 1, 1, 7, 1, 2, 20, 22, 0.008084217293474767, ["add     r15, 1", "mov     esi, 0Ah; c", "mov     rdi, r15; s", "call    _strchr", "mov     rbx, rax", "test    rax, rax", "jz      short loc_AD50"], ["add~r15,0", "mov~esi,0", "mov~rdi,r15", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 143, 0, 0, 2, 0, 1, 23, 20, 0.0037769206043072965, ["cmp     rax, 3", "jnz     loc_AD0B"], ["cmp~rax,0", "jnz~FOO"]], [14, 0, 297, 0, 1, 19, 1, 2, 2, 32, 0.025458052073288332, ["mov     cs:time_type_0, 0", "mov     cs:sort_type_0, 0", "mov     cs:sort_reverse, 0", "mov     cs:numeric_ids, 0", "mov     cs:print_block_size, 0", "mov     cs:indicator_style_0, 0", "mov     cs:print_inode, 0", "mov     cs:dereference, 1", "mov     cs:recursive, 0", "mov     cs:immediate_dirs, 0", "mov     cs:ignore_mode, 0", "mov     cs:ignore_patterns, 0", "mov     cs:hide_patterns, 0", "mov     cs:print_scontext, 0", "lea     rdi, name; \"QUOTING_STYLE\"", "call    _getenv", "mov     rbx, rax", "test    rax, rax", "jz      short loc_9F23"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 49, 0, 0, 3, 0, 1, 31, 10, 0.0031501125040180006, ["lea     rax, a8+6; \"\"", "mov     cs:hostname, rax", "jmp     loc_B6FD"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 100, 1, 0, 6, 0, 0, 25, 20, 5.3573341905068036e-05, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, r13", "mov     eax, 0", "repne scasb", "not     rcx", "add     r13, rcx"], ["mov~rcx,0", "mov~rdi,r13", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "add~r13,rcx"]], [1, 0, 19, 0, 0, 2, 0, 1, 31, 4, 0.02925104468016715, ["cmp     cs:used_color, 0", "jz      short loc_B556"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 282, 0, 1, 6, 1, 2, 13, 29, 0.0014946962391513981, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "setnz   al", "movzx   eax, al", "jmp     short loc_A6E0"], ["mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 282, 0, 0, 1, 0, 0, 13, 29, 0.0014946962391513981, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 94, 0, 0, 2, 0, 1, 26, 18, 0.0, ["mov     cs:color_symlink_as_referent, 1", "jmp     loc_B660"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 145, 0, 1, 6, 1, 2, 21, 22, 0.0029358191363977283, ["lea     r13, [rax+1]", "mov     esi, 0Ah; c", "mov     rdi, r13; s", "call    _strchr", "test    rax, rax", "jnz     short loc_AD15"], ["lea~r13,[rax+0]", "mov~esi,0", "mov~rdi,r13", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 142, 0, 0, 1, 0, 0, 22, 21, 0.0015214829101039323, ["mov     byte ptr [rbx], 0"], ["mov~<TAG>,0"]], [1, 0, 100, 0, 1, 6, 1, 2, 24, 20, 0.005389478195649844, ["mov     edx, 5; n", "mov     rsi, r15; s2", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_AEC7"], ["mov~edx,0", "mov~rsi,r15", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 123, 0, 1, 5, 1, 2, 25, 23, 0.009557484195864137, ["mov     dword ptr [rsp+78h+name], r13d", "mov     rdi, r14; s1", "call    _strcmp", "test    eax, eax", "jz      loc_B0B1"], ["mov~<TAG>,r13d", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 123, 1, 0, 4, 1, 1, 26, 23, 0.0018964963034394085, ["add     r13, 1", "mov     rsi, [r15+r13*8]", "test    rsi, rsi", "jnz     short loc_AFD2"], ["add~r13,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 123, 0, 0, 3, 0, 0, 24, 24, 0.010146790956819886, ["mov     r13d, 0", "lea     rsi, aLc; \"lc\"", "lea     r14, [rsp+78h+s1]"], ["mov~r13d,0", "lea~rsi,<TAG>", "lea~r14,[rsp+0]"]], [1, 0, 190, 0, 0, 2, 0, 1, 10, 25, 0.0035036965605914497, ["cmp     edx, 1", "jz      loc_A9C3"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 141, 0, 0, 5, 0, 1, 23, 20, 0.0007553841208614593, ["lea     rax, aYMD; \"%Y-%m-%d \"", "mov     cs:long_time_format, rax", "lea     rax, aYMDHM+3; \"%m-%d %H:%M\"", "mov     cs:long_time_format+8, rax", "jmp     loc_AD0B"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 141, 0, 0, 2, 0, 0, 22, 20, 0.008352084003000106, ["mov     cs:long_time_format, r15", "mov     cs:long_time_format+8, r13"], ["mov~<TAG>,r15", "mov~<TAG>,r13"]], [0, 0, 0, 0, 1, 1, 0, 1, 34, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 33, 1, 0.006193078324225865, ["mov     eax, cs:exit_status", "mov     rsi, [rsp+78h+var_40]", "xor     rsi, fs:28h", "jnz     loc_B7EF"], ["mov~eax,<TAG>", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [3, 0, 44, 0, 1, 7, 0, 2, 27, 8, 0.00023572270438229935, ["mov     r8, r14; dirname", "mov     ecx, 1; command_line_arg", "mov     edx, 0; inode", "mov     esi, 3; type", "lea     rdi, asc_18D5B+1; name", "call    gobble_file", "jmp     loc_B76A"], ["mov~r8,r14", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 26, 9, 0.005293046180220722, ["cmp     cs:immediate_dirs, 0", "jz      short loc_B31A"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 30, 4, 0.058287795992714025, ["cmp     cs:print_with_color, 0", "jz      short loc_B556"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 100, 0, 1, 6, 1, 2, 25, 19, 0.002817957784206579, ["lea     rdi, [r13+5]; pattern", "mov     edx, 0; flags", "mov     rsi, [rsp+78h+name]; name", "call    _fnmatch", "test    eax, eax", "jnz     short loc_AEC7"], ["lea~rdi,[r13+0]", "mov~edx,0", "mov~rsi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 94, 0, 0, 1, 0, 1, 26, 18, 0.002014357655630558, ["jmp     loc_B660"], ["jmp~FOO"]], [1, 0, 188, 0, 0, 2, 0, 1, 11, 25, 0.0023572270438229938, ["cmp     cs:line_length, 0", "jnz     short loc_A92C"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 294, 0, 1, 5, 0, 1, 4, 32, 0.0015750562520090003, ["cdqe", "lea     rdx, quoting_style_vals", "mov     esi, [rdx+rax*4]; s", "mov     edi, 0; o", "call    set_quoting_style"], ["cdqe~", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "call~FOO"]], [5, 0, 290, 0, 3, 14, 0, 4, 6, 31, 0.0, ["mov     rdi, rbx; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aIgnoringInvali_0; \"ignoring invalid width in environment v\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_9F4B"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 187, 0, 0, 3, 1, 1, 12, 24, 0.0009964641594342656, ["mov     eax, 0", "test    edx, edx", "jnz     loc_A9C8"], ["mov~eax,0", "test~edx,edx", "jnz~FOO"]], [0, 0, 123, 0, 0, 1, 0, 1, 27, 23, 1.0714668381013607e-05, ["jmp     loc_AFF3"], ["jmp~FOO"]], [2, 0, 65, 0, 0, 4, 1, 1, 23, 11, 0.15948783885138754, ["mov     cs:format_needs_type, al", "and     cs:format_needs_type, 1", "cmp     cs:dired, 0", "jnz     loc_B21F"], ["mov~<TAG>,al", "and~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 70, 0, 0, 5, 1, 1, 24, 12, 0.009911068252437587, ["movzx   edx, cs:print_block_size", "mov     cs:format_needs_stat, dl", "mov     eax, 0", "test    dl, dl", "jnz     loc_B6D6"], ["movzx~edx,<TAG>", "mov~<TAG>,dl", "mov~eax,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 69, 0, 0, 3, 0, 1, 25, 12, 0.007200257152041144, ["mov     eax, 1", "cmp     cs:recursive, 0", "jnz     loc_B6D6"], ["mov~eax,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 26, 12, 0.0048216007714561235, ["cmp     cs:print_with_color, 0", "jnz     loc_B6D6"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 27, 12, 0.0024215150541090752, ["cmp     cs:indicator_style_0, 0", "jnz     loc_B6D6"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 28, 12, 0.0, ["movzx   eax, cs:directories_first", "jmp     loc_B6D6"], ["movzx~eax,<TAG>", "jmp~FOO"]], [2, 0, 75, 0, 1, 6, 0, 1, 22, 14, 0.0008036001285760205, ["mov     r8, cs:freefun; freefun", "mov     rcx, cs:chunkfun; chunkfun", "mov     edx, 0; alignment", "mov     esi, 0; size", "lea     rdi, dev_ino_obstack; h", "call    _obstack_begin"], ["mov~r8,<TAG>", "mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO"]], [2, 0, 44, 0, 1, 5, 0, 2, 27, 8, 0.00023572270438229935, ["mov     edx, 1; command_line_arg", "mov     esi, 0; realname", "lea     rdi, asc_18D5B+1; name", "call    queue_directory", "jmp     loc_B76A"], ["mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [3, 0, 48, 1, 2, 11, 1, 3, 25, 9, 0.12651880424300868, ["mov     cs:cwd_n_alloc, 64h", "mov     edi, 4E20h; n", "call    xmalloc", "mov     cs:cwd_file, rax", "mov     cs:cwd_n_used, 0", "call    clear_files", "mov     r15d, r12d", "sub     r15d, ebx", "lea     r14, a8+6; \"\"", "test    r15d, r15d", "jle     loc_B2EE"], ["mov~<TAG>,0", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~<TAG>,0", "call~FOO", "mov~r15d,r12d", "sub~r15d,ebx", "lea~r14,<TAG>", "test~r15d,r15d", "jle~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    _abort; jumptable 000000000000B051 default case"], ["call~FOO"]], [1, 0, 12, 0, 2, 7, 1, 3, 34, 5, 0.009578913532626165, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "mov     edi, 0; init", "call    signal_setup", "mov     ebx, cs:stop_signal_count", "test    ebx, ebx", "jz      short loc_B54C"], ["mov~rdi,<TAG>", "call~FOO", "mov~edi,0", "call~FOO", "mov~ebx,<TAG>", "test~ebx,ebx", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 36, 6, 6.964534447658845e-05, ["jmp     loc_B51D"], ["jmp~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 27, 7, 0.11564341583627986, ["cmp     cs:cwd_n_used, 0", "jnz     loc_B335"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 102, 0, 0, 1, 0, 0, 26, 20, 0.0026750955391263973, ["mov     edx, 5"], ["mov~edx,0"]], [0, 1, 293, 0, 1, 6, 1, 2, 3, 31, 0.037672774027643845, ["mov     cs:line_length, 50h", "lea     rdi, aColumns; \"COLUMNS\"", "call    _getenv", "mov     rbx, rax", "test    rax, rax", "jz      short loc_9F4B"], ["mov~<TAG>,<STR>", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 282, 0, 1, 6, 1, 2, 10, 29, 0.002132219007821708, ["lea     rdx, output_block_size; jumptable 000000000000A034 case 260", "lea     rsi, human_output_opts; opts", "mov     rdi, cs:optarg@@GLIBC_2_2_5; spec", "call    human_options", "test    eax, eax", "jnz     short loc_A7E5"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 186, 0, 0, 9, 2, 1, 12, 24, 0.0009964641594342656, ["mov     eax, ebx", "and     eax, 0FFFFFFFDh", "cmp     eax, 1", "setz    al", "cmp     ebx, 6", "setz    dl", "or      eax, edx", "movzx   eax, al", "jmp     loc_A9C8"], ["mov~eax,ebx", "and~eax,0", "cmp~eax,0", "setz~al", "cmp~ebx,0", "setz~dl", "or~eax,edx", "movzx~eax,al", "jmp~FOO"]], [1, 0, 171, 0, 0, 2, 0, 1, 16, 20, 0.001500053573341905, ["cmp     cs:format_0, 0", "jz      loc_B7AF"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 12, 1, 1, 4, 0, 2, 35, 5, 0.0, ["mov     edi, 13h; sig", "call    _raise", "sub     ebx, 1", "jnz     short loc_B53D"], ["mov~edi,0", "call~FOO", "sub~ebx,0", "jnz~FOO"]], [5, 0, 143, 0, 3, 13, 0, 3, 22, 22, 1.0714668381013607e-05, ["mov     rdi, r15; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aInvalidTimeSty; \"invalid time style format %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 2; status", "mov     eax, 0", "call    _error"], ["mov~rdi,r15", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 9, 0, 1, 2, 0, 2, 36, 4, 0.0, ["call    _raise", "jmp     short loc_B556"], ["call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 35, 4, 0.003792992606878817, ["mov     edi, cs:interrupt_signal; sig", "test    edi, edi", "jnz     short loc_B5C2"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 26, 19, 0.008314582663666558, ["mov     cs:print_with_color, 0", "jmp     loc_B149"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 142, 0, 0, 2, 0, 1, 21, 21, 0.005298403514411229, ["mov     r13, r15", "jmp     short loc_ACFD"], ["mov~r13,r15", "jmp~FOO"]], [1, 0, 31, 1, 0, 2, 0, 1, 33, 7, 0.0011036108432444015, ["add     cs:dired_pos, 1", "jmp     loc_B782"], ["add~<TAG>,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 31, 7, 0.0, ["mov     cs:print_dir_name, 0", "jmp     loc_B782"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 28, 6, 0.09222115075538412, ["cmp     r15d, 1", "jle     loc_B3AA"], ["cmp~r15d,0", "jle~FOO"]], [4, 0, 64, 0, 2, 15, 0, 3, 24, 11, 0.0, ["mov     r14, cs:freefun", "mov     r8, r14; freefun", "mov     r13, cs:chunkfun", "mov     rcx, r13; chunkfun", "mov     edx, 0; alignment", "mov     esi, 0; size", "lea     rdi, dired_obstack; h", "call    _obstack_begin", "mov     r8, r14; freefun", "mov     rcx, r13; chunkfun", "mov     edx, 0; alignment", "mov     esi, 0; size", "lea     rdi, subdired_obstack; h", "call    _obstack_begin", "jmp     loc_B6F0"], ["mov~r14,<TAG>", "mov~r8,r14", "mov~r13,<TAG>", "mov~rcx,r13", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~r8,r14", "mov~rcx,r13", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [5, 0, 282, 0, 3, 14, 0, 3, 11, 29, 1.0714668381013607e-05, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aInvalidLineWid; \"invalid line width\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, aSS_0; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 2; status", "mov     eax, 0", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [5, 0, 283, 0, 3, 14, 0, 4, 7, 29, 0.0015161255759134254, ["mov     rdi, rbx; arg", "call    quote", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aIgnoringInvali_1; \"ignoring invalid tab size in environmen\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_9FCD"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [3, 0, 285, 0, 1, 8, 1, 2, 6, 30, 0.0004285867352405443, ["lea     rcx, [rsp+78h+di_0]; val", "mov     r8d, 0; valid_suffixes", "mov     edx, 0; strtol_base", "mov     esi, 0; ptr", "mov     rdi, rax; s", "call    xstrtoul", "test    eax, eax", "jnz     loc_A126"], ["lea~rcx,[rsp+0]", "mov~r8d,0", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 1, 289, 0, 1, 7, 0, 2, 4, 30, 0.04954462659380692, ["lea     rdx, [rsp+78h+di_0]", "mov     esi, 5413h; request", "mov     edi, 1; fd", "mov     eax, 0", "call    _ioctl", "cmp     eax, 0FFFFFFFFh", "jz      short loc_9F7D"], ["lea~rdx,[rsp+0]", "mov~esi,<STR>", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [3, 0, 45, 0, 1, 11, 0, 2, 26, 8, 0.11644701596485588, ["lea     r13d, [i+1]", "movsxd  rbx, ebx", "mov     rdi, [argv+rbx*8+0]; name", "mov     r8, r14; dirname", "mov     ecx, 1; command_line_arg", "mov     edx, 0; inode", "mov     esi, 0; type", "call    gobble_file", "mov     ebx, r13d", "cmp     r12d, r13d", "jg      short loc_B73F"], ["lea~r13d,[i+0]", "movsxd~rbx,ebx", "mov~rdi,[argv+0]", "mov~r8,r14", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "call~FOO", "mov~ebx,r13d", "cmp~r12d,r13d", "jg~FOO"]], [0, 0, 288, 0, 0, 3, 1, 1, 5, 30, 0.00018214936247723133, ["movzx   eax, word ptr [rsp+78h+di_0.st_ino+2]", "test    ax, ax", "jz      short loc_9F7D"], ["movzx~eax,[ord ptr [rsp+0]", "test~ax,ax", "jz~FOO"]], [0, 0, 123, 0, 0, 4, 0, 0, 26, 23, 0.0002750098217793492, ["lea     rdx, [rax+1]", "mov     [rsp+78h+src], rdx", "movzx   eax, byte ptr [rax]", "mov     [rsp+78h+s1], al"], ["lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "movzx~eax,<TAG>", "mov~[rsp+0],al"]], [0, 0, 287, 0, 0, 2, 0, 0, 6, 30, 0.0, ["movzx   eax, ax", "mov     cs:line_length, rax"], ["movzx~eax,ax", "mov~<TAG>,rax"]], [1, 0, 166, 1, 0, 2, 0, 1, 20, 21, 0.0002571520411443266, ["add     r15, 6", "jmp     short loc_B7BF"], ["add~r15,0", "jmp~FOO"]], [1, 0, 32, 0, 0, 3, 0, 0, 32, 8, 0.0015964855887710275, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 3, 0, 1, 2, 0, 1, 34, 2, 3.214400514304082e-05, ["mov     rdi, rbx; table", "call    hash_free"], ["mov~rdi,rbx", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 34, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9809; \"dev_ino_pop\"", "mov     edx, 403h; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aDevInoSizeObst; \"dev_ino_size <= obstack_object_size (&d\"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 32, 0, 1, 3, 0, 2, 32, 8, 0.0015964855887710275, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_B380"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 194, 0, 0, 1, 0, 1, 11, 27, 0.0010393228329583198, ["jmp     short loc_A98B"], ["jmp~FOO"]], [1, 0, 286, 0, 1, 6, 1, 2, 5, 29, 0.05822350798242794, ["lea     rdi, aTabsize; \"TABSIZE\"", "call    _getenv", "mov     rbx, rax", "mov     cs:tabsize, 8", "test    rax, rax", "jz      short loc_9FCD"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "test~rax,rax", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 34, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     n_files", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~n_files", "retn"]], [3, 0, 282, 0, 0, 4, 0, 1, 10, 29, 0.0021107896710596805, ["mov     cs:ignore_mode, 2; jumptable 000000000000A034 case 233", "mov     cs:sort_type_0, 0FFFFFFFFh", "cmp     cs:format_0, 0", "jz      short loc_A1DF"], ["mov~<TAG>,0", "mov~<TAG>,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 186, 0, 0, 1, 0, 0, 10, 24, 0.2192221150755384, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 283, 0, 0, 2, 0, 0, 7, 29, 0.0015161255759134254, ["mov     rax, [rsp+78h+di_0.st_ino]", "mov     cs:tabsize, rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]], [0, 0, 100, 0, 1, 3, 0, 1, 26, 21, 0.0, ["mov     r13, [rdi+20h]", "call    free", "mov     rdi, r13; ptr"], ["mov~r13,[rdi+0]", "call~FOO", "mov~rdi,r13"]], [0, 0, 100, 0, 0, 2, 1, 1, 25, 20, 0.01122897246330226, ["test    rdi, rdi", "jnz     short loc_B1C5"], ["test~rdi,rdi", "jnz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 10, -1, 0.0, ["mov     edi, 0; jumptable 000000000000A034 case 1", "call    usage"], ["mov~edi,0", "call~FOO"]], [3, 0, 282, 1, 1, 7, 0, 2, 11, 29, 0.0, ["mov     edi, 1; fd", "call    _isatty", "cmp     eax, 1", "sbb     eax, eax", "add     eax, 2", "mov     cs:format_0, eax", "jmp     short loc_A1C1"], ["mov~edi,0", "call~FOO", "cmp~eax,0", "sbb~eax,eax", "add~eax,0", "mov~<TAG>,eax", "jmp~FOO"]], [1, 1, 184, 0, 1, 5, 0, 2, 12, 23, 0.0, ["mov     edx, 1; i", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; o", "call    set_char_quoting", "jmp     loc_A9EF"], ["mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [3, 0, 185, 0, 1, 7, 1, 2, 11, 23, 0.22597235615557698, ["mov     cs:align_variable_outer_quotes, al", "and     cs:align_variable_outer_quotes, 1", "mov     edi, 0; o", "call    clone_quoting_options", "mov     cs:filename_quoting_options, rax", "cmp     ebx, 7", "jz      loc_ABCC"], ["mov~<TAG>,al", "and~<TAG>,0", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "cmp~ebx,0", "jz~FOO"]], [3, 0, 0, 0, 3, 10, 0, 3, 22, -1, 0.0, ["mov     rbx, cs:stderr@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aFormatEGHMForA; \"  - +FORMAT (e.g., +%H:%M) for a 'date'\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     edi, 2; status", "call    usage"], ["mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 0, 0, 1, 6, 0, 1, 11, -1, 0.0, ["mov     r8, cs:optarg@@GLIBC_2_2_5; arg", "lea     rcx, long_options; long_options", "mov     edx, 0; c", "mov     esi, dword ptr [rsp+78h+di_0.st_ino]; opt_idx", "mov     edi, eax; err", "call    xstrtol_fatal"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "mov~edx,0", "mov~esi,[word ptr [rsp+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [152, 69, 406, 2, 307, 504, 0, 1339, 0.02087, 164, 34], "succs": [[21], [0, 6, 138, 267, 14, 301, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 69, 70, 199, 72, 74, 75, 76, 85, 215, 71, 296], [297, 237], [2, 4], [2], [2, 157], [21], [11], [13, 7], [], [9, 124], [218], [8, 11], [11], [21], [95], [84, 15], [16, 15], [21], [10, 291], [121, 19], [88, 5], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [280, 21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [59, 21], [21], [21], [21], [21], [21], [21], [21], [21], [170, 21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [], [258, 79], [202, 183], [81, 164], [81, 164], [137], [117, 118], [186, 187], [152, 86], [1, 199], [149], [288, 89], [106], [91, 207], [96, 128], [137, 222], [90, 94], [101, 126], [192], [97, 151], [230, 143], [99, 143], [139, 116], [252], [104, 102], [105, 102], [253, 102], [261, 127], [106], [106], [106, 251], [106], [106], [163], [112, 260], [], [114, 290], [], [77], [140, 117], [125, 277], [244, 119], [123], [121, 20], [122, 244], [123], [123], [224], [261, 198, 176, 177, 178, 179], [224], [143], [129, 131], [129, 189], [129, 233], [136, 135], [133, 135], [168, 141], [136, 135], [98, 197], [194, 195], [169, 174], [66, 67], [152, 87], [205], [142, 167], [205, 142], [201, 278], [145], [145, 146], [216, 172], [144, 148], [238, 223], [185, 150], [168], [241, 115], [153], [153, 154], [210, 293], [210, 156], [262], [160, 158], [162, 158], [158, 263], [161, 158], [82, 165], [181], [83, 164], [180, 206], [205, 166], [186, 173], [224], [77], [130, 143], [130, 171], [186, 269], [224], [300], [203, 175], [236, 175], [110, 175], [100, 175], [193, 188], [211, 163], [181], [181], [192], [184, 192], [17, 190], [17, 186], [193, 206], [132], [149], [190], [190], [204, 205], [195], [], [305, 196], [196], [92, 108], [], [289, 292], [200, 244], [182, 183], [177], [205, 206], [218, 12], [205], [265, 286], [192], [208, 192], [3], [217, 225], [266], [248, 212], [219, 68], [68, 214], [107, 172], [260], [80, 103], [228, 229], [249, 283], [283, 220], [275, 231], [192, 209], [266, 213], [260], [132], [155, 159], [68], [68], [143], [232, 271], [239], [226, 245], [235, 109], [234, 111], [234], [297, 247], [192], [192], [], [240, 295], [264], [242, 259], [227, 155], [226, 246], [143], [250, 268], [266], [283], [304, 268], [111], [113, 279], [252, 254], [252, 255], [256, 252], [257, 252], [252], [103], [264], [243, 284], [], [273, 270], [262], [147, 278], [179], [283, 221], [73, 306], [304], [17, 191], [273, 270], [275], [155], [272, 155], [100], [239], [125], [125], [120, 125], [113], [42], [78], [281, 298], [285, 294], [264, 284], [294, 287], [176], [294], [95], [276], [241], [], [276], [3], [282, 78], [], [26, 302], [304], [78], [300], [274, 299], [], [26], [134], [134, 303], [], []], "fname": "main", "n_num": 307}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 12, 0, 1, 4, 0, 2, 0, 0, 0.25757575757575757, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_B860"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.3143939393939394, ["cmp     buf_size, link_length", "ja      short loc_B848"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.11742424242424243, ["cmp     buf_size, r15", "ja      short loc_B8AC"], ["cmp~buf_size,r15", "ja~FOO"]], [1, 0, 12, 0, 0, 1, 0, 0, 6, 6, 0.06060606060606061, ["mov     buf_size, 7FFFFFFFFFFFFFFFh"], ["mov~buf_size,0"]], [1, 0, 1, 0, 1, 4, 0, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "call    free", "mov     ebp, 0", "jmp     short loc_B84E"], ["mov~rdi,buffer", "call~FOO", "mov~ebp,0", "jmp~FOO"]], [1, 0, 12, 0, 1, 3, 0, 2, 3, 4, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_B895"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0"], ["mov~[yte ptr [buffer+0],0"]], [0, 0, 12, 1, 0, 2, 0, 1, 5, 6, 0.10227272727272728, ["add     buf_size, buf_size", "jmp     short loc_B86F"], ["add~buf_size,buf_size", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13, file", "lea     rbx, [size+1]", "cmp     size, 401h", "mov     eax, 401h", "cmovnb  rbx, rax", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "jmp     short loc_B86F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,file", "lea~rbx,[size+0]", "cmp~size,0", "mov~eax,0", "cmovnb~rbx,rax", "mov~r14,0", "mov~r15,0", "jmp~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3484848484848485, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "mov     r12, rax", "test    link_length, link_length", "js      short loc_B82F"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "mov~r12,rax", "test~link_length,link_length", "js~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.35984848484848486, ["mov     rdi, buf_size; size", "call    malloc", "mov     rbp, rax", "test    buffer, buffer", "jz      short loc_B84E"], ["mov~rdi,buf_size", "call~FOO", "mov~rbp,rax", "test~buffer,buffer", "jz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 6, 0, 0.011363636363636364, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     ebp, 0", "jmp     short loc_B84E"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [6, 2, 16, 0, 13, 18, 2, 59, 0.12762, 0, 3], "succs": [[2, 7], [0, 6], [11, 3], [10], [12], [1, 4], [12], [10], [10], [1, 5], [9, 12], [12], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 1; status", "call    usage"], ["sub~rsp,0", "mov~edi,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 3, 0.0, 0, 1], "succs": [[]], "fname": "__argmatch_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[4, 0, 12, 1, 0, 16, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r8, arg", "mov     r14, valsize", "mov     valsize, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rbx, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    rbx, rbx", "jz      loc_B9D1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r8,arg", "mov~r14,valsize", "mov~valsize,0", "mov~eax,0", "scasb~<TAG>,", "mov~rbx,<TAG>", "mov~<TAG>,0", "test~rbx,rbx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     valsize", "pop     r15", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~valsize", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.015151515151515152, ["mov     [rsp+58h+var_58], i", "jmp     loc_B9D1"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 0, 1, 0.05303030303030303, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 11, 2, 0, 5, 1, 1, 0, 2, 0.34090909090909094, ["add     i, 1", "mov     rbx, [arglist+i*8]", "add     r13, valsize", "test    rbx, rbx", "jz      short loc_B9BC"], ["add~i,0", "mov~rbx,<TAG>", "add~r13,valsize", "test~rbx,rbx", "jz~FOO"]], [0, 0, 11, 0, 1, 6, 1, 2, 0, 3, 0.3787878787878788, ["mov     rdx, arglen; n", "mov     rsi, [rsp+58h+s2]; s2", "mov     rdi, rbx; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_B937"], ["mov~rdx,arglen", "mov~rsi,[rsp+0]", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 2, 1, 12, 1, 2, 0, 3, 0.030303030303030304, ["mov     rdi, [rsp+58h+var_58]", "imul    rdi, valsize", "add     rdi, rax; s1", "mov     rdx, valsize; n", "mov     rsi, r13; s2", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     edx, 1", "cmovnz  eax, edx", "mov     [rsp+58h+ambiguous], al", "jmp     short loc_B937"], ["mov~rdi,<TAG>", "imul~rdi,valsize", "add~rdi,rax", "mov~rdx,valsize", "mov~rsi,r13", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~edx,0", "cmovnz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 3, 0.030303030303030304, ["mov     [rsp+58h+ambiguous], 1", "jmp     loc_B937"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 0, 3, 0.06818181818181818, ["mov     [rsp+58h+var_58], i"], ["mov~<TAG>,i"]], [2, 0, 11, 0, 0, 9, 0, 1, 0, 4, 0.07575757575757576, ["not     rcx", "lea     r12, [rcx-1]", "mov     [rsp+58h+vallist], vallist_0", "mov     r15, arglist", "mov     [rsp+58h+s2], r8", "mov     r13, vallist_0", "mov     [rsp+58h+ambiguous], 0", "mov     ebp, 0", "jmp     short loc_B947"], ["not~rcx", "lea~r12,[rcx-1]+0]", "mov~[rsp+0],vallist_0", "mov~r15,arglist", "mov~[rsp+0],r8", "mov~r13,vallist_0", "mov~[rsp+0],0", "mov~ebp,0", "jmp~FOO"]], [2, 0, 11, 1, 0, 8, 0, 1, 0, 2, 0.33333333333333337, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rbx, rcx", "not     rbx", "sub     rbx, 1", "cmp     rbx, arglen", "jz      short loc_B92A"], ["mov~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rbx,rcx", "not~rbx", "sub~rbx,0", "cmp~rbx,arglen", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 0, 4, 0.12121212121212122, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      short loc_B9B2"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 4, 0.25, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jz      short loc_B933"], ["cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [2, 5, 12, 1, 13, 18, 4, 79, 0.13054, 0, 7], "succs": [[1, 9], [], [1], [1], [3, 5], [10, 4], [4], [4], [4], [5], [2, 12], [6, 7], [8, 11]], "fname": "argmatch", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[6, 0, 0, 0, 3, 19, 0, 3, 0, 0, 0.0, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     context, rax", "mov     rdx, value; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, format; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "pop     format", "pop     rbp", "pop     value", "retn"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~context,rax", "mov~rdx,value", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,format", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "pop~format", "pop~rbp", "pop~value", "retn"]], [2, 0, 1, 0, 1, 6, 0, 2, 1, 0, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_BA0D"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 1, 0, 1, 5, 0, 1, 1, -1, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax"]], [1, 0, 3, 0, 0, 7, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, context", "mov     r12, value", "cmp     problem, 0FFFFFFFFFFFFFFFFh", "jz      short loc_BA51"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,context", "mov~r12,value", "cmp~problem,0", "jz~FOO"]]], "func_feature": [5, 0, 7, 0, 4, 4, 2, 37, 0.04167, 2, 0], "succs": [[], [0], [0], [1, 2]], "fname": "argmatch_invalid", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 9, 0, 0, 3, 0, 1, 0, 0, 0.05555555555555556, ["mov     r14d, 0", "mov     ebx, 0", "jmp     short loc_BAFF"], ["mov~r14d,0", "mov~ebx,0", "jmp~FOO"]], [3, 0, 10, 1, 2, 21, 1, 3, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, arglist", "mov     rbp, vallist", "mov     r13, valsize", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     vallist, aValidArguments_0; \"Valid arguments are:\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r12, [arglist]", "test    r12, r12", "jz      loc_BB40"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,arglist", "mov~rbp,vallist", "mov~r13,valsize", "mov~rbx,<TAG>", "mov~edx,0", "lea~vallist,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.044444444444444446, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_BB5C"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.044444444444444446, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [2, 0, 9, 0, 2, 9, 0, 2, 3, 3, 0.15555555555555556, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS_1; \"\\n  - %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     last_val, rbp"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~last_val,rbp"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 4, 0.2111111111111111, ["test    i, i", "jz      short loc_BAC4"], ["test~i,i", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 4, 0.05555555555555556, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_BAC4"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 4, 2, 0.3, ["add     i, 1", "mov     r12, [arglist+i*8]", "add     rbp, valsize", "test    r12, r12", "jz      short loc_BB40"], ["add~i,0", "mov~r12,<TAG>", "add~rbp,valsize", "test~r12,r12", "jz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_BB6B"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 0, 2, 9, 0, 3, 4, 3, 0.03333333333333333, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS_0; \", %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_BAEF"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 4, 15, 0, 11, 15, 1, 73, 0.10303, 4, 4], "succs": [[6], [0, 9], [], [2], [2], [8], [5, 7], [10, 5], [9, 6], [3, 4], [8]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 3, 11, 0, 4, 0, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_BBAD"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, context", "mov     r13, arg", "mov     rbx, arglist", "mov     rbp, vallist", "mov     r12, valsize", "mov     r14, exit_fn", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "mov     arg, arglist; arglist", "mov     context, arg; arg", "call    argmatch", "test    res, res", "js      short loc_BBBC"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,context", "mov~r13,arg", "mov~rbx,arglist", "mov~rbp,vallist", "mov~r12,valsize", "mov~r14,exit_fn", "mov~vallist,valsize", "mov~arglist,vallist", "mov~arg,arglist", "mov~context,arg", "call~FOO", "test~res,res", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     valsize", "pop     arg", "pop     exit_fn", "pop     context", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~valsize", "pop~arg", "pop~exit_fn", "pop~context", "retn"]]], "func_feature": [4, 1, 6, 0, 3, 3, 7, 39, 0.0, 0, 2], "succs": [[2], [0, 2], []], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 2, 0, 5, 1, 1, 0, 0, 0.0, ["mov     r12, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r12, r12", "jnz     short loc_BC01"], ["mov~r12,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.15000000000000002, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_BC22"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     r12d, 0", "jmp     short loc_BC22"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, -1, 0.1, ["mov     r13, valsize", "mov     r14, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]"], ["mov~r13,valsize", "mov~r14,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]"]], [0, 0, 5, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, [arglist]", "test    r12, r12", "jz      short loc_BC2E"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 6, 8, 0, 32, 0.05, 0, 2], "succs": [[1, 2], [0, 2], [], [2], [1], [3, 4]], "fname": "argmatch_to_argument", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 4, 2, 0, 4, 0, 1, 0, 0, 0.03333333333333333, ["add     p1, 1", "add     p2, 1", "cmp     al, cl", "jz      short loc_BC40"], ["add~p1,0", "add~p2,0", "cmp~al,cl", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.1, ["test    n, n", "jz      short loc_BC85"], ["test~n,n", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["movzx   eax, al", "movzx   ecx, cl", "sub     eax, ecx", "retn"], ["movzx~eax,al", "movzx~ecx,cl", "sub~eax,ecx", "retn"]], [5, 0, 4, 3, 0, 15, 1, 1, 2, -1, 0.23333333333333334, ["movzx   ecx, byte ptr [p1]", "movzx   eax, cl", "sub     ecx, 41h ; 'A'", "lea     r8d, [rax+20h]", "cmp     cl, 1Ah", "cmovb   eax, r8d", "movzx   r8d, byte ptr [p2]", "movzx   ecx, r8b", "sub     r8d, 41h ; 'A'", "lea     r10d, [rcx+20h]", "cmp     r8b, 1Ah", "cmovb   ecx, r10d", "sub     n, 1", "test    al, al", "jz      short loc_BC85"], ["movzx~ecx,<TAG>", "movzx~eax,cl", "sub~ecx,0", "lea~r8d,[rax+0]", "cmp~cl,0", "cmovb~eax,r8d", "movzx~r8d,<TAG>", "movzx~ecx,r8b", "sub~r8d,0", "lea~r10d,[rcx+0]", "cmp~r8b,0", "cmovb~ecx,r10d", "sub~n,0", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 1, 0.13333333333333333, ["test    n, n", "jz      short loc_BC8E"], ["test~n,n", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [0, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     p1, p2", "jz      short loc_BC8E"], ["cmp~p1,p2", "jz~FOO"]]], "func_feature": [0, 3, 5, 0, 7, 10, 1, 31, 0.07143, 0, 6], "succs": [[2, 3], [0, 2], [], [1, 2], [3, 5], [], [4, 5]], "fname": "c_strncasecmp", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 89, 0, 0, 2, 0, 1, 0, 0, 0.008712871287128714, ["mov     start_0, end", "jmp     loc_BEF4"], ["mov~start_0,end", "jmp~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 12, 7, 0.014455445544554456, ["test    al, al", "jnz     loc_C200"], ["test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 20, 4, 0.0032673267326732676, ["mov     r12d, 14h", "jmp     error"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 19, 5, 0.010594059405940595, ["cmp     [rsp+118h+can_mode], 2", "jz      loc_BEF1"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 89, 0, 0, 4, 0, 0, 15, 6, 0.07514851485148516, ["lea     rax, [rname+1]", "mov     start_0, end", "cmp     dest, rax", "jbe     loc_BEF4"], ["lea~rax,[rname+0]", "mov~start_0,end", "cmp~dest,rax", "jbe~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 14, 7, 0.0796039603960396, ["cmp     byte ptr [start_0+1], 2Eh ; '.'", "jnz     loc_BF68"], ["cmp~[yte ptr [start_0+0],0", "jnz~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 17, 6, 0.007920792079207921, ["mov     rbp, dest", "jmp     loc_BEF4"], ["mov~rbp,dest", "jmp~FOO"]], [0, 0, 89, 0, 0, 3, 0, 0, 16, 7, 0.060990099009900996, ["lea     rax, [dest-1]", "cmp     rname, dest", "jnb     loc_C208"], ["lea~rax,[dest-1]+0]", "cmp~rname,dest", "jnb~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 20, 7, 0.18232673267326735, ["cmp     [rsp+118h+ht], 0", "jz      short loc_C03C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 1, 89, 0, 0, 4, 1, 1, 19, 8, 0.2132673267326733, ["mov     eax, [rsp+118h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_C009"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 89, 0, 0, 3, 0, 1, 20, 6, 0.016732673267326734, ["mov     r12, end", "mov     rname, dest", "jmp     loc_BEF4"], ["mov~r12,end", "mov~rname,dest", "jmp~FOO"]], [1, 0, 89, 1, 0, 3, 0, 1, 19, 7, 0.031683168316831684, ["sub     dest, 1", "cmp     rname, dest", "jz      loc_C210"], ["sub~dest,0", "cmp~rname,dest", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 17, 7, 0.04594059405940595, ["cmp     byte ptr [rbp-2], 2Fh ; '/'", "jnz     short loc_BE2B"], ["cmp~[yte ptr [rbp-2]+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 7, 4, 0.06292079207920792, ["lea     rax, [rname+1]", "cmp     dest, rax", "jbe     short loc_C22A"], ["lea~rax,[rname+0]", "cmp~dest,rax", "jbe~FOO"]], [0, 0, 89, 0, 0, 3, 1, 1, 6, 5, 0.4902475247524753, ["movzx   edx, byte ptr [start_0]", "test    dl, dl", "jz      loc_C21B"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 10, 5, 0.4353465346534654, ["cmp     end, start_0", "jz      loc_C21B"], ["cmp~end,start_0", "jz~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 18, 6, 0.008118811881188119, ["mov     rbp, dest", "jmp     loc_BEF4"], ["mov~rbp,dest", "jmp~FOO"]], [0, 0, 89, 0, 1, 6, 1, 2, 21, 6, 0.1758910891089109, ["mov     rdx, [rsp+118h+stat_buf]; stats", "mov     rsi, [rsp+118h+len]; file", "mov     rdi, [rsp+118h+ht]; ht", "call    seen_file", "test    al, al", "jz      short loc_C06F"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 89, 0, 1, 9, 1, 2, 21, 7, 0.007920792079207921, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare_ino_str; comparator", "lea     rdx, triple_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 7; candidate", "call    hash_initialize", "mov     [rsp+118h+ht], rax", "test    ht_0, ht_0", "jnz     short loc_C011"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "test~ht_0,ht_0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 8, 4, 0.008118811881188119, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jz      short loc_C267"], ["cmp~[yte ptr [dest-1]+0],0", "jz~FOO"]], [0, 0, 89, 0, 0, 1, 0, 0, 18, 8, 0.030693069306930696, ["mov     rbp, dest"], ["mov~rbp,dest"]], [1, 0, 89, 0, 0, 2, 0, 1, 22, 5, 0.03044554455445545, ["cmp     [rsp+118h+can_mode], 2", "jnz     loc_C26D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 20, 7, 0.007821782178217822, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jnz     short loc_BE2E"], ["cmp~[yte ptr [dest-1]+0],0", "jnz~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 23, 6, 0.06935643564356436, ["mov     r12, end", "jmp     loc_BEF4"], ["mov~r12,end", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 22, 5, 0.026584158415841587, ["cmp     r12d, 2", "jz      loc_C034"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 89, 0, 1, 3, 0, 2, 24, 5, 0.01405940594059406, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     loc_C034"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 21, 6, 0.008415841584158416, ["mov     r12, end", "jmp     loc_BEF4"], ["mov~r12,end", "jmp~FOO"]], [0, 0, 5, 1, 1, 5, 0, 1, 9, 3, 0.0, ["sub     dest, rname", "lea     rsi, [rbp+1]; n", "mov     rdi, rname; p", "call    xrealloc", "mov     rname, rax"], ["sub~dest,rname", "lea~rsi,[rbp+0]", "mov~rdi,rname", "call~FOO", "mov~rname,rax"]], [1, 0, 6, 0, 0, 4, 0, 1, 8, 3, 0.040643564356435645, ["mov     byte ptr [dest+0], 0", "lea     rax, [dest+1]", "cmp     rname_limit, rax", "jz      short loc_C249"], ["mov~[yte ptr [dest+0],0", "lea~rax,[dest+0]", "cmp~rname_limit,rax", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 16, 7, 0.2816831683168317, ["cmp     [rsp+118h+var_F4], 0", "jz      short loc_BE91"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 89, 0, 1, 8, 0, 2, 15, 8, 0.3346534653465347, ["mov     rdx, r13; n", "mov     rsi, start_0; src", "mov     rdi, dest; dest", "call    _memcpy", "lea     rbp, [rbp+r13+0]", "mov     byte ptr [dest+0], 0", "cmp     [rsp+118h+can_mode], 2", "jnz     loc_BE49"], ["mov~rdx,r13", "mov~rsi,start_0", "mov~rdi,dest", "call~FOO", "lea~rbp,[rbp+0]", "mov~[yte ptr [dest+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 16, 8, 0.0500990099009901, ["cmp     [rsp+118h+logical], 0", "jz      loc_BE49"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 9, 2, 0.024801980198019803, ["mov     rdi, [rsp+118h+extra_buf]; ptr", "call    free", "mov     rax, [rsp+118h+ht]", "test    rax, rax", "jz      short loc_C2A5"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 10, 2, 0.0, ["mov     rdi, rax; table", "call    hash_free", "jmp     short loc_C2A5"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 89, 0, 1, 6, 1, 1, 17, 6, 0.1372772277227723, ["mov     rdx, [rsp+118h+stat_buf]; stat_buf", "mov     rsi, rname; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al"], ["mov~rdx,[rsp+0]", "mov~rsi,rname", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [3, 0, 89, 0, 0, 7, 0, 1, 5, 6, 0.07782178217821782, ["mov     r12, [rsp+118h+len]", "mov     [rsp+118h+ht], 0", "mov     [rsp+118h+extra_len], 0", "mov     [rsp+118h+extra_buf], 0", "lea     rax, [rsp+118h+st]", "mov     [rsp+118h+stat_buf], rax", "jmp     loc_BEF4"], ["mov~r12,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 1, 90, 1, 1, 7, 0, 2, 6, 7, 0.008762376237623763, ["mov     esi, 1000h; n", "mov     rdi, rname; p", "call    xrealloc", "mov     rname, rax", "add     rbp, p", "lea     r14, [p+1000h]", "jmp     loc_BD3C"], ["mov~esi,<STR>", "mov~rdi,rname", "call~FOO", "mov~rname,rax", "add~rbp,p", "lea~r14,[p+0]", "jmp~FOO"]], [1, 1, 90, 0, 1, 7, 0, 2, 4, 7, 0.03445544554455446, ["mov     edi, 1000h; n", "call    xmalloc", "mov     r15, rax", "lea     r14, [rname+1000h]", "lea     rbp, [dest+1]", "mov     byte ptr [rname], 2Fh ; '/'", "jmp     loc_BD3C"], ["mov~edi,<STR>", "call~FOO", "mov~r15,rax", "lea~r14,[rname+0]", "lea~rbp,[dest+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 90, 1, 0, 2, 0, 0, 6, 7, 0.008762376237623763, ["add     rbp, rname", "mov     r14, dest"], ["add~rbp,rname", "mov~r14,dest"]], [0, 0, 89, 0, 0, 2, 1, 1, 18, 5, 0.2840594059405941, ["test    al, al", "jz      short loc_BED2"], ["test~al,al", "jz~FOO"]], [1, 0, 89, 0, 1, 7, 1, 2, 17, 6, 0.1372772277227723, ["mov     rdx, [rsp+118h+stat_buf]; stat_buf", "mov     rsi, rname; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "setnz   al", "jmp     short loc_BE67"], ["mov~rdx,[rsp+0]", "mov~rsi,rname", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 7, 1, 0, 2, 0, 1, 9, 4, 0.0, ["sub     dest, 1", "jmp     short loc_C22A"], ["sub~dest,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 23, 4, 0.002623762376237624, ["mov     r12d, 28h ; '('"], ["mov~r12d,0"]], [0, 0, 89, 0, 1, 5, 1, 2, 19, 4, 0.06366336633663366, ["call    ___errno_location", "mov     r12d, [rax]", "mov     eax, [rsp+118h+can_mode]", "test    eax, eax", "jz      error"], ["call~FOO", "mov~r12d,<TAG>", "mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 20, 5, 0.04207920792079208, ["cmp     eax, 1", "jz      short loc_BEAA"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 5, 0, 2, 6, 0, 3, 20, 3, 0.025792079207920794, ["mov     rdi, [rsp+118h+extra_buf]; ptr", "call    free", "mov     rdi, rname; ptr", "call    free", "cmp     [rsp+118h+ht], 0", "jz      short loc_C297"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,rname", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 89, 0, 1, 5, 0, 2, 21, 4, 0.026980198019801983, ["lea     rsi, prefix+8; accept", "mov     rdi, end; s", "call    _strspn", "cmp     byte ptr [end+rax], 0", "jnz     error"], ["lea~rsi,<TAG>", "mov~rdi,end", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 23, 4, 0.0005940594059405942, ["jmp     error"], ["jmp~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 24, 4, 0.0017821782178217822, ["call    ___errno_location", "mov     r12d, [rax]", "jmp     error"], ["call~FOO", "mov~r12d,<TAG>", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 21, 7, 0.00797029702970297, ["mov     [rsp+118h+st.st_mode], 0", "jmp     loc_BFEA"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 21, 3, 0.0, ["mov     rdi, [rsp+118h+ht]; table", "call    hash_free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 89, 0, 2, 10, 1, 3, 22, 6, 0.13831683168316833, ["mov     rdx, [rsp+118h+stat_buf]; stats", "mov     rsi, [rsp+118h+len]; file", "mov     rdi, [rsp+118h+ht]; ht", "call    record_file", "mov     rsi, [rsp+118h+st.st_size]; size", "mov     rdi, rname; file", "call    areadlink_with_size", "mov     r13, rax", "test    buf, buf", "jz      loc_C149"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rname", "call~FOO", "mov~r13,rax", "test~buf,buf", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 0, 1, 21, 2, 0.009554455445544554, ["call    ___errno_location", "mov     [rax], r12d", "mov     r15d, 0"], ["call~FOO", "mov~<TAG>,r12d", "mov~r15d,0"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.019405940594059406, ["mov     rax, r15", "mov     rcx, [rsp+118h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_C2CD"], ["mov~rax,r15", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 93, 0, 1, 4, 1, 2, 4, 2, 0.0014851485148514852, ["call    xgetcwd", "mov     r15, rax", "test    rname, rname", "jz      loc_C2A5"], ["call~FOO", "mov~r15,rax", "test~rname,rname", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.0002970297029702971, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     r15d, 0", "jmp     loc_C2A5"], ["call~FOO", "mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 2, 2, 0.0002970297029702971, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     r15d, 0", "jmp     loc_C2A5"], ["call~FOO", "mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 3, 2, 0.0002970297029702971, ["call    ___errno_location", "mov     dword ptr [rax], 2", "mov     r15d, 0", "jmp     loc_C2A5"], ["call~FOO", "mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 0, 89, 0, 0, 14, 0, 1, 23, 11, 0.10881188118811883, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, buf", "mov     eax, 0", "repne scasb", "not     rcx", "lea     start_0, [rcx-1]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, end", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "mov     [rsp+118h+len], rax", "cmp     [rsp+118h+extra_len], 0", "jz      loc_C16B"], ["mov~rcx,0", "mov~rdi,buf", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "lea~start_0,[rcx-1]+0]", "mov~rcx,0", "mov~rdi,end", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "mov~[rsp+0],rax", "cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 101, 1, 0, 20, 4, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0E8h", "mov     [rsp+118h+len], name_0", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "mov     eax, esi", "and     eax, 4", "mov     [rsp+118h+var_F4], eax", "setnz   [rsp+118h+logical]", "and     esi, 3", "mov     [rsp+118h+can_mode], esi", "lea     eax, [can_mode_0-1]", "test    esi, eax", "jnz     loc_BD6B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],name_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,esi", "and~eax,0", "mov~[rsp+0],eax", "setnz~[rsp+0]", "and~esi,0", "mov~[rsp+0],esi", "lea~eax,[can_mode_0-1]+0]", "test~esi,eax", "jnz~FOO"]], [1, 0, 99, 0, 0, 2, 0, 1, 1, 3, 0.009504950495049506, ["cmp     [rsp+118h+len], 0", "jz      loc_BD81"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 20, 7, 0.023811881188118812, ["cmp     eax, 4000h", "jnz     loc_BFEA"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 89, 0, 0, 5, 0, 1, 24, 10, 0.05475247524752476, ["mov     len_0, [rsp+118h+len]", "lea     len_0, [n+len_0+1]", "mov     [rsp+118h+var_E0], rax", "cmp     rax, [rsp+118h+extra_len]", "ja      loc_C197"], ["mov~len_0,[rsp+0]", "lea~len_0,[n+0]", "mov~[rsp+0],rax", "cmp~rax,[rsp+0]", "ja~FOO"]], [0, 0, 89, 0, 0, 1, 0, 0, 19, 6, 0.21633663366336636, ["mov     r12, end"], ["mov~r12,end"]], [1, 0, 89, 0, 0, 2, 0, 1, 18, 6, 0.06658415841584159, ["cmp     byte ptr [end], 0", "jz      loc_BEF1"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 89, 0, 1, 3, 0, 2, 27, 7, 0.1206930693069307, ["mov     rdi, r13; ptr", "call    free", "jmp     loc_BEF1"], ["mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 97, 0, 0, 4, 1, 1, 2, 3, 0.018613861386138617, ["mov     rax, [rsp+118h+len]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_BD97"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 7, 8, 0.42900990099009906, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_BF25"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 95, 0, 0, 2, 0, 1, 3, 3, 0.02732673267326733, ["cmp     al, 2Fh ; '/'", "jz      loc_BDCC"], ["cmp~al,0", "jz~FOO"]], [2, 0, 89, 1, 0, 4, 0, 1, 8, 8, 0.02316831683168317, ["add     start_0, 1", "movzx   edx, byte ptr [start_0]", "cmp     dl, 2Fh ; '/'", "jz      short loc_BF06"], ["add~start_0,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 9, 7, 0.02396039603960396, ["test    dl, dl", "jz      loc_BDEC"], ["test~dl,dl", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 7, 0.0005940594059405942, ["cmp     dl, 2Fh ; '/'", "jz      loc_BDEC"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 89, 0, 0, 1, 0, 0, 8, 7, 0.3996039603960396, ["mov     rbx, start_0"], ["mov~rbx,start_0"]], [2, 0, 89, 1, 2, 14, 0, 3, 25, 9, 0.11198019801980198, ["mov     rdx, [rsp+118h+len]", "add     rdx, 1; n", "mov     rax, [rsp+118h+extra_buf]", "lea     rdi, [rax+n]; dest", "mov     rsi, rbx; src", "call    _memmove", "mov     rdx, n; n", "mov     rsi, r13; src", "mov     rdi, [rsp+118h+extra_buf]; dest", "call    _memcpy", "mov     rbx, rax", "mov     [rsp+118h+len], rax", "cmp     byte ptr [r13+0], 2Fh ; '/'", "jz      loc_C1B8"], ["mov~rdx,[rsp+0]", "add~rdx,0", "mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rsi,rbx", "call~FOO", "mov~rdx,n", "mov~rsi,r13", "mov~rdi,[rsp+0]", "call~FOO", "mov~rbx,rax", "mov~[rsp+0],rax", "cmp~[yte ptr [r13+0],0", "jz~FOO"]], [0, 2, 89, 0, 1, 9, 0, 2, 24, 10, 0.04693069306930693, ["lea     rcx, [n+len_0+1]", "cmp     rcx, 1000h", "mov     eax, 1000h", "cmovnb  rax, rcx", "mov     [rsp+118h+extra_len], rax", "mov     rdi, extra_len_0; n", "call    xmalloc", "mov     [rsp+118h+extra_buf], rax", "jmp     loc_C0F2"], ["lea~rcx,[n+0]", "cmp~rcx,<STR>", "mov~eax,<STR>", "cmovnb~rax,rcx", "mov~[rsp+0],rax", "mov~rdi,extra_len_0", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 89, 0, 1, 7, 0, 2, 25, 10, 0.0, ["mov     rsi, rax; n", "mov     rdi, [rsp+118h+extra_buf]; p", "call    xrealloc", "mov     [rsp+118h+extra_buf], rax", "mov     extra_buf_0, [rsp+118h+var_E0]", "mov     [rsp+118h+extra_len], rax", "jmp     loc_C0F2"], ["mov~rsi,rax", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "mov~extra_buf_0,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 89, 1, 0, 4, 1, 1, 9, 6, 0.4004950495049505, ["add     end, 1", "movzx   eax, byte ptr [end]", "test    al, al", "jz      short loc_BF37"], ["add~end,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 6, 0.0, ["cmp     al, 2Fh ; '/'", "jnz     short loc_BF28"], ["cmp~al,0", "jnz~FOO"]], [2, 1, 92, 0, 0, 9, 0, 1, 5, 8, 0.009603960396039604, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, rname", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rbp, [rax-1]", "cmp     rbp, 0FFFh", "jle     short loc_BDAD"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,rname", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rbp,[rax-1]+0]", "cmp~rbp,<STR>", "jle~FOO"]], [0, 0, 89, 0, 0, 3, 0, 1, 26, 8, 0.08252475247524753, ["lea     name_0, [rname+1]", "cmp     dest, rax", "ja      loc_C1C5"], ["lea~name_0,[rname+0]", "cmp~dest,rax", "ja~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 10, 6, 0.024653465346534655, ["mov     rbx, end", "jmp     loc_BF37"], ["mov~rbx,end", "jmp~FOO"]], [1, 0, 89, 0, 0, 3, 0, 1, 26, 8, 0.02232673267326733, ["lea     rbp, [dest+1]", "mov     byte ptr [rname], 2Fh ; '/'", "jmp     loc_C13C"], ["lea~rbp,[dest+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 29, 8, 0.004108910891089109, ["mov     rbp, dest", "jmp     loc_C13C"], ["mov~rbp,dest", "jmp~FOO"]], [0, 0, 89, 0, 0, 3, 0, 1, 29, 8, 0.04410891089108911, ["lea     rbp, [dest-1]", "cmp     rname, dest", "jz      loc_C13C"], ["lea~rbp,[dest-1]+0]", "cmp~rname,dest", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 30, 8, 0.015544554455445546, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jz      loc_C13C"], ["cmp~[yte ptr [dest-1]+0],0", "jz~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 28, 8, 0.00801980198019802, ["mov     rbp, dest", "jmp     loc_C13C"], ["mov~rbp,dest", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 23, 5, 0.02237623762376238, ["cmp     [rsp+118h+can_mode], 2", "jnz     short loc_C15E"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 89, 1, 0, 6, 0, 1, 11, 8, 0.4272277227722773, ["mov     r13, end", "sub     r13, start_0", "cmp     dl, 2Eh ; '.'", "setz    al", "cmp     r13, 1", "jnz     short loc_BF5A"], ["mov~r13,end", "sub~r13,start_0", "cmp~dl,0", "setz~al", "cmp~r13,0", "jnz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 12, 9, 0.4121782178217822, ["cmp     r13, 2", "jnz     short loc_BF68"], ["cmp~r13,0", "jnz~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 13, 8, 0.08405940594059406, ["test    al, al", "jnz     loc_BDF4"], ["test~al,al", "jnz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 13, 10, 0.3314851485148515, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jz      short loc_BF76"], ["cmp~[yte ptr [dest-1]+0],0", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 0, 14, 10, 0.0, ["mov     byte ptr [rbp+0], 2Fh ; '/'", "lea     rbp, [rbp+1]"], ["mov~[yte ptr [rbp+0],0", "lea~rbp,[rbp+0]"]], [0, 0, 89, 0, 0, 1, 0, 0, 32, 9, 0.008712871287128714, ["mov     rax, dest"], ["mov~rax,dest"]], [0, 0, 89, 0, 0, 1, 0, 1, 31, 10, 0.007920792079207921, ["jmp     short loc_C1DC"], ["jmp~FOO"]], [0, 0, 89, 0, 0, 3, 0, 1, 14, 9, 0.3330693069306931, ["lea     rax, [dest+r13+0]", "cmp     rname_limit, rax", "ja      short loc_BFB5"], ["lea~rax,[dest+0]", "cmp~rname_limit,rax", "ja~FOO"]], [0, 2, 89, 5, 1, 13, 0, 1, 15, 9, 0.0, ["sub     dest, rname", "sub     rname_limit, rname", "lea     rdx, [r13+1]", "lea     rax, [r13+new_size+1]", "add     new_size, 1000h", "cmp     rdx, 1001h", "cmovge  r14, rax", "mov     rsi, new_size; n", "mov     rdi, rname; p", "call    xrealloc", "mov     rname, rax", "add     new_size, rname", "add     dest_offset, rname"], ["sub~dest,rname", "sub~rname_limit,rname", "lea~rdx,[r13+0]", "lea~rax,[r13+0]", "add~new_size,<STR>", "cmp~rdx,<STR>", "cmovge~r14,rax", "mov~rsi,new_size", "mov~rdi,rname", "call~FOO", "mov~rname,rax", "add~new_size,rname", "add~dest_offset,rname"]], [0, 0, 89, 0, 0, 3, 0, 0, 27, 9, 0.053069306930693075, ["lea     rax, [dest-1]", "cmp     rname, dest", "jnb     short loc_C1F8"], ["lea~rax,[dest-1]+0]", "cmp~rname,dest", "jnb~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 28, 9, 0.03792079207920793, ["cmp     byte ptr [rbp-2], 2Fh ; '/'", "jnz     short loc_C1DF"], ["cmp~[yte ptr [rbp-2]+0],0", "jnz~FOO"]], [1, 0, 89, 0, 0, 1, 0, 0, 17, 7, 0.04663366336633663, ["mov     [rsp+118h+st.st_mode], 0"], ["mov~[rsp+0],0"]]], "func_feature": [32, 21, 114, 3, 102, 158, 2, 381, 0.0779, 5, 16], "succs": [[14], [0, 91], [46], [2, 66], [14, 7], [4, 93], [14], [12, 6], [17, 18], [8, 64], [14], [10, 22], [16, 20], [19, 28], [13, 70], [90, 13], [14], [52, 21], [17, 41], [42, 28], [11], [43, 23], [26, 11], [14], [48, 23], [49, 23], [14], [32], [32, 27], [40, 34], [29, 31], [29, 101], [33, 54], [54], [39], [14], [35], [35], [35], [9, 44], [39], [], [28], [46], [45, 46], [50, 47], [51, 53], [24, 46], [46], [46], [67], [53], [89, 61], [54], [59, 60], [81, 54], [54], [54], [54], [], [], [65, 77], [56, 63], [57, 69], [66, 67], [76, 78], [14], [66, 3], [66], [58, 71], [72, 75], [37, 55], [72, 73], [74, 83], [83, 75], [79], [82, 84], [76], [76], [80, 15], [15, 79], [36, 38], [99, 68], [15], [68], [68], [68, 87], [96, 68], [68], [25, 49], [1, 91], [92, 93], [93, 5], [97, 94], [97], [86], [95], [98, 30], [30], [88, 100], [85, 86], [67]], "fname": "canonicalize_filename_mode", "n_num": 102}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 1, 0, 2, 8, 0, 3, 0, 0, 0.027777777777777776, ["call    ___errno_location", "mov     rcx, write_error", "lea     rdx, aS_0+2; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_C376"], ["call~FOO", "mov~rcx,write_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, -1, 0.125, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name; arg", "test    rdi, rdi", "jz      short loc_C381"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 1, 0.08333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_C3A3"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 1, 7, 0, 1, 3, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_C326"], ["call~FOO", "cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.06944444444444445, ["cmp     cs:ignore_EPIPE, 0", "jz      short loc_C326"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 1, 0, 3, 10, 0, 3, 3, -1, 0.027777777777777776, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, write_error", "mov     rcx, rbp", "lea     rdx, aSS_0; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,write_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 9, 1, 1, 7, 1, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_C30B"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [11, 3, 17, 0, 10, 12, 0, 50, 0.0375, 8, 2], "succs": [[9], [0, 7], [], [2, 4], [], [1, 3], [1, 5], [9], [3, 6], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     rdx, length", "jmp     short loc_C3F4"], ["mov~rdx,length", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 1, 0, 0.09523809523809523, ["lea     rdx, [length-1]", "cmp     byte ptr [rax-1], 2Fh ; '/'", "jnz     short loc_C3FE"], ["lea~rdx,[length-1]+0]", "cmp~[yte ptr [rax-1]+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 3, 0, 0.07142857142857142, ["lea     rax, [length-1]", "cmp     byte ptr [file+length-1], 2Fh ; '/'", "jnz     short loc_C3F4"], ["lea~rax,[length-1]+0]", "cmp~[yte ptr [file+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, 0, 0.15476190476190477, ["cmp     prefix_length, length", "jz      short loc_C3F4"], ["cmp~prefix_length,length", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 4, 0, 0.023809523809523808, ["mov     length, rax", "jmp     short loc_C3DC"], ["mov~length,rax", "jmp~FOO"]], [2, 0, 7, 2, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, file", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "movzx   ebp, bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_C3F1"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,file", "cmp~<TAG>,0", "setz~bpl", "movzx~ebp,bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.023809523809523808, ["mov     rdx, length"], ["mov~rdx,length"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["mov     rax, length", "add     rsp, 8", "pop     file", "pop     prefix_length", "retn"], ["mov~rax,length", "add~rsp,0", "pop~file", "pop~prefix_length", "retn"]]], "func_feature": [1, 0, 6, 0, 8, 11, 2, 30, 0.04762, 0, 3], "succs": [[7], [0, 3], [4, 7], [2, 7], [3], [1, 6], [7], []], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, length; n", "mov     rsi, file; src", "mov     rdi, dir; dest", "call    _memcpy", "test    length, length", "jnz     short loc_C452"], ["mov~rdx,length", "mov~rsi,file", "mov~rdi,dir", "call~FOO", "test~length,length", "jnz~FOO"]], [1, 0, 4, 2, 2, 17, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, file", "call    dir_len", "mov     rbx, rax", "lea     r13, [length+1]", "test    length, length", "setz    dil", "movzx   edi, dil", "add     rdi, r13; size", "call    malloc", "mov     rbp, rax", "test    dir, dir", "jz      short loc_C457"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,file", "call~FOO", "mov~rbx,rax", "lea~r13,[length+0]", "test~length,length", "setz~dil", "movzx~edi,dil", "add~rdi,r13", "call~FOO", "mov~rbp,rax", "test~dir,dir", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.16666666666666666, ["mov     byte ptr [dir+length+0], 0"], ["mov~[yte ptr [dir+0],0"]], [1, 0, 2, 0, 0, 2, 0, 0, 2, 2, 0.0, ["mov     byte ptr [dir+rbx+0], 2Eh ; '.'", "mov     rbx, length"], ["mov~[yte ptr [dir+0],0", "mov~rbx,length"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["mov     rax, dir", "add     rsp, 8", "pop     length", "pop     dir", "pop     file", "pop     r13", "retn"], ["mov~rax,dir", "add~rsp,0", "pop~length", "pop~dir", "pop~file", "pop~r13", "retn"]]], "func_feature": [3, 3, 5, 0, 5, 6, 1, 33, 0.06667, 0, 3], "succs": [[2, 3], [0, 4], [4], [2], []], "fname": "mdir_name", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.3472222222222222, ["cmp     cl, 2Fh ; '/'", "jz      short loc_C492"], ["cmp~cl,0", "jz~FOO"]], [3, 0, 6, 0, 0, 5, 0, 1, 2, 4, 0.20833333333333331, ["mov     rdx, p", "mov     esi, 0", "mov     edi, 1", "mov     r8d, 0", "jmp     short loc_C49F"], ["mov~rdx,p", "mov~esi,0", "mov~edi,0", "mov~r8d,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.18055555555555555, ["add     p, 1", "movzx   ecx, byte ptr [p]", "test    cl, cl", "jz      short locret_C4B1"], ["add~p,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.14583333333333331, ["test    sil, sil", "jz      short loc_C494"], ["test~sil,sil", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 0, 2, 0.0, ["mov     rax, name", "cmp     byte ptr [base], 2Fh ; '/'", "jnz     short loc_C476"], ["mov~rax,name", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 5, 2, 0.0, ["mov     base, p", "mov     esi, r8d", "jmp     short loc_C494"], ["mov~base,p", "mov~esi,r8d", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 1, 1, 0.19444444444444442, ["movzx   ecx, byte ptr [p]", "test    cl, cl", "jz      short locret_C4B1"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 1, 0, 0, 4, 2, 0.048611111111111105, ["mov     esi, edi"], ["mov~esi,edi"]], [2, 0, 9, 1, 0, 3, 0, 1, 1, 2, 0.0, ["add     base, 1", "cmp     byte ptr [base], 2Fh ; '/'", "jz      short loc_C46D"], ["add~base,0", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [0, 3, 8, 0, 10, 15, 5, 27, 0.1125, 0, 2], "succs": [[8, 3], [0], [0, 7], [2, 5], [9, 6], [2], [1, 7], [], [2], [9, 6]], "fname": "last_component", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 6, 0, 0, 1, 0, 0, 0, 0, 0.047619047619047616, ["mov     len, rax"], ["mov~len,rax"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 3, 0.21428571428571427, ["lea     rax, [len-1]", "cmp     byte ptr [rdx+len-1], 2Fh ; '/'", "jz      short loc_C4E1"], ["lea~rax,[len-1]+0]", "cmp~[yte ptr [rdx+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 1, 0.30952380952380953, ["cmp     len, 1", "jz      short loc_C4FA"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["lea     rcx, [len-1]", "cmp     byte ptr [rdx+len-1], 2Fh ; '/'", "jz      short loc_C4E4"], ["lea~rcx,[len-1]+0]", "cmp~[yte ptr [rdx+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["mov     rax, len", "retn"], ["mov~rax,len", "retn"]], [4, 0, 7, 1, 0, 9, 0, 0, 0, 3, 0.0, ["mov     rdx, name", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     len, 1", "jbe     short locret_C4DF"], ["mov~rdx,name", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~len,0", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.07142857142857142, ["mov     rax, len", "jmp     short locret_C4DF"], ["mov~rax,len", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 10, 3, 23, 0.09524, 0, 1], "succs": [[2], [0, 6], [1, 4], [2, 7], [], [3, 7], [7], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "file_has_acl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.0, ["test    ht, ht", "jz      short locret_C571"], ["test~ht,ht", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     file", "pop     ht", "pop     stats", "retn"], ["add~rsp,0", "pop~ent", "pop~file", "pop~ht", "pop~stats", "retn"]], [0, 0, 2, 0, 0, 2, 0, 1, 0, -1, 0.13333333333333333, ["cmp     ent, ent_from_table", "jz      short loc_C561"], ["cmp~ent,ent_from_table", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     rdi, ent; x", "call    triple_free"], ["mov~rdi,ent", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 1, 4, 1, 3, 23, 1, 4, 0, -1, 0.13333333333333333, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13, stats", "mov     rbp, file", "mov     r12, ht", "mov     edi, 18h; n", "call    xmalloc", "mov     rbx, rax", "mov     rdi, file; string", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "mov     rsi, ent; entry", "mov     rdi, ht; table", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_C56C"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,stats", "mov~rbp,file", "mov~r12,ht", "mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~rdi,file", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "mov~rsi,ent", "mov~rdi,ht", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [5, 2, 8, 0, 7, 7, 1, 37, 0.0381, 0, 2], "succs": [[5, 6], [], [1, 3], [1], [], [2, 4], []], "fname": "record_file", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_C5C4"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 0, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_C5AF"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 0, 0.0, ["mov     [rsp+28h+new_ent.name], file", "mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "mov     file, rsp; entry", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~<TAG>,file", "mov~rax,[stats+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~file,rsp", "call~FOO", "test~rax,rax", "setnz~al"]]], "func_feature": [2, 4, 4, 1, 5, 5, 1, 21, 0.06667, 1, 2], "succs": [[], [0, 3], [1, 4], [], [1]], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 13, 0, 0, 3, 0, 1, 0, 0, 0.0375, ["mov     eax, 63h ; 'c'", "cmp     edx, 2000h", "jz      short loc_C632"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 2, 6, 0.03333333333333333, ["mov     eax, 62h ; 'b'", "cmp     edx, 6000h", "jz      short loc_C632"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [7, 2, 9, 2, 0, 17, 5, 1, 1, 5, 0.2625, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "test    edi, 800h", "jz      loc_C706"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "test~edi,0", "jz~FOO"]], [3, 0, 16, 0, 0, 5, 1, 1, 0, 6, 0.0, ["mov     edx, edi", "and     edx, 0F000h", "mov     eax, 2Dh ; '-'", "cmp     edx, 8000h", "jz      short loc_C632"], ["mov~edx,edi", "and~edx,0", "mov~eax,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 15, 0, 0, 3, 0, 1, 1, 6, 0.020833333333333332, ["mov     eax, 64h ; 'd'", "cmp     edx, 4000h", "jz      short loc_C632"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [1, 1, 12, 0, 0, 3, 0, 1, 4, 6, 0.03333333333333333, ["mov     eax, 6Ch ; 'l'", "cmp     edx, 0A000h", "jz      short loc_C632"], ["mov~eax,0", "cmp~edx,<STR>", "jz~FOO"]], [1, 1, 11, 0, 0, 3, 0, 1, 5, 6, 0.020833333333333332, ["mov     eax, 70h ; 'p'", "cmp     edx, 1000h", "jz      short loc_C632"], ["mov~eax,0", "cmp~edx,<STR>", "jz~FOO"]], [3, 0, 10, 0, 0, 4, 0, 0, 6, 6, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx"], ["cmp~edx,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx"]], [1, 1, 0, 0, 0, 4, 0, 0, 7, -1, 0.0, ["mov     [str+9], al", "mov     byte ptr [str+0Ah], 20h ; ' '", "mov     byte ptr [str+0Bh], 0", "retn"], ["mov~[str+0],al", "mov~[yte ptr [str+0],<STR>", "mov~[yte ptr [str+0],0", "retn"]], [4, 0, 1, 1, 0, 6, 2, 1, 6, 0, 0.029166666666666667, ["and     edi, 1", "cmp     edi, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     short loc_C6FA"], ["and~edi,0", "cmp~edi,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [4, 0, 1, 1, 0, 5, 2, 0, 6, -1, 0.029166666666666667, ["and     edi, 1", "cmp     edi, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'"], ["and~edi,0", "cmp~edi,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [8, 1, 3, 2, 0, 17, 5, 1, 5, 1, 0.1625, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "test    edi, 200h", "jz      short loc_C72D"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "test~edi,<STR>", "jz~FOO"]], [4, 0, 4, 1, 0, 7, 2, 1, 4, 2, 0.09166666666666666, ["mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     short loc_C6BB"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [4, 0, 4, 1, 0, 6, 2, 0, 4, 2, 0.09166666666666666, ["mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [4, 0, 7, 1, 0, 7, 2, 1, 2, 4, 0.11666666666666667, ["mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_C67A"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [4, 0, 7, 1, 0, 6, 2, 0, 2, 4, 0.11666666666666667, ["mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [8, 1, 6, 2, 0, 17, 5, 1, 3, 3, 0.25, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "test    edi, 400h", "jz      short loc_C71B"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "test~edi,0", "jz~FOO"]]], "func_feature": [0, 28, 12, 0, 17, 25, 1, 116, 0.07623, 0, 12], "succs": [[2, 5], [0, 2], [14, 15], [2, 4], [1, 2], [2, 6], [2, 7], [2], [], [8], [8], [9, 10], [11], [11], [16], [16], [12, 13]], "fname": "strmode", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "call    strmode", "rep retn"], ["mov~edi,[statp+0]", "call~FOO", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "filemodestring", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_C75A"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.0625, ["mov     r12d, 0", "cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      short loc_C7EB"], ["mov~r12d,0", "cmp~[yte ptr [dir+0],0", "jz~FOO"]], [2, 1, 8, 3, 2, 28, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r13, dir", "mov     rbx, base", "mov     [rsp+48h+base_in_result], base_in_result_0", "call    last_component", "mov     rbp, rax", "mov     rdi, dirbase; name", "call    base_len", "mov     rdx, rax", "sub     dirbase, dir", "add     rbp, dirbaselen", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     r8, base", "mov     [rsp+48h+src], base", "mov     rdi, base", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbx, [rsi-1]", "test    dirbaselen, dirbaselen", "jz      short loc_C7D5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r13,dir", "mov~rbx,base", "mov~[rsp+0],base_in_result_0", "call~FOO", "mov~rbp,rax", "mov~rdi,dirbase", "call~FOO", "mov~rdx,rax", "sub~dirbase,dir", "add~rbp,dirbaselen", "mov~rcx,0", "mov~eax,0", "mov~r8,base", "mov~<TAG>,base", "mov~rdi,base", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbx,[rsi-1]+0]", "test~dirbaselen,dirbaselen", "jz~FOO"]], [3, 0, 5, 0, 0, 5, 0, 0, 1, 2, 0.04464285714285714, ["mov     rax, [rsp+48h+src]", "cmp     byte ptr [rax], 2Fh ; '/'", "mov     r12d, 0", "mov     eax, 2Eh ; '.'", "cmovz   r12d, eax"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "mov~r12d,0", "mov~eax,0", "cmovz~r12d,eax"]], [0, 0, 3, 0, 1, 9, 1, 2, 3, 2, 0.17857142857142855, ["mov     rdx, dirlen; n", "mov     rsi, dir; src", "mov     rdi, p_concat; dest", "call    _mempcpy", "mov     [rax], r12b", "lea     rdi, [rax+r15]; dest", "mov     rax, [rsp+48h+base_in_result]", "test    rax, rax", "jz      short loc_C82D"], ["mov~rdx,dirlen", "mov~rsi,dir", "mov~rdi,p_concat", "call~FOO", "mov~<TAG>,r12b", "lea~rdi,<TAG>", "mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 1, 1, 9, 2, 2, 2, 1, 0.2857142857142857, ["test    r12b, r12b", "setnz   r15b", "movzx   r15d, r15b", "lea     rdi, [dirlen+baselen+1]", "add     rdi, r15; size", "call    malloc", "mov     r14, rax", "test    p_concat, p_concat", "jz      short loc_C83C"], ["test~r12b,r12b", "setnz~r15b", "movzx~r15d,r15b", "lea~rdi,[dirlen+0]", "add~rdi,r15", "call~FOO", "mov~r14,rax", "test~p_concat,p_concat", "jz~FOO"]], [2, 0, 5, 0, 0, 4, 0, 1, 2, 2, 0.0, ["cmp     byte ptr [r8], 2Fh ; '/'", "mov     eax, 2Fh ; '/'", "cmovnz  r12d, eax", "jmp     short loc_C7EB"], ["cmp~<TAG>,0", "mov~eax,0", "cmovnz~r12d,eax", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, 2, 0.0, ["mov     [rax], p"], ["mov~<TAG>,p"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, p_concat", "add     rsp, 18h", "pop     baselen", "pop     dirlen", "pop     sep", "pop     dir", "pop     p_concat", "pop     r15", "retn"], ["mov~rax,p_concat", "add~rsp,<STR>", "pop~baselen", "pop~dirlen", "pop~sep", "pop~dir", "pop~p_concat", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, 1, 0.03571428571428571, ["mov     rdx, baselen; n", "mov     rsi, [rsp+48h+src]; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,<TAG>", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [5, 4, 10, 0, 9, 12, 1, 72, 0.06746, 0, 5], "succs": [[4, 5], [0, 2], [4], [8, 6], [3, 7], [4], [8], [], [7]], "fname": "mfile_name_concat", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 17, 0, 0, 3, 0, 0, 0, 0, 0.06432748538011696, ["cmp     dl, 7Eh ; '~'", "mov     esi, r8d", "cmovnz  match, r9"], ["cmp~dl,0", "mov~esi,r8d", "cmovnz~match,r9"]], [1, 0, 17, 0, 0, 2, 0, 1, 3, -1, 0.18128654970760233, ["cmp     dl, 41h ; 'A'", "jl      short loc_C87A"], ["cmp~dl,0", "jl~FOO"]], [0, 1, 17, 0, 0, 3, 0, 1, 5, -1, 0.0029239766081871343, ["lea     esi, [rdx-61h]", "cmp     sil, 19h", "ja      short loc_C87A"], ["lea~esi,[rdx-61h]+0]", "cmp~sil,<STR>", "ja~FOO"]], [0, 1, 17, 0, 0, 3, 0, 1, 5, -1, 0.08771929824561403, ["lea     r11d, [rdx-61h]", "cmp     r11b, 19h", "ja      short loc_C8C8"], ["lea~r11d,[rdx-61h]+0]", "cmp~r11b,<STR>", "ja~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 4, -1, 0.21929824561403508, ["cmp     dl, 5Ah ; 'Z'", "jg      short loc_C8DE"], ["cmp~dl,0", "jg~FOO"]], [1, 0, 17, 0, 0, 3, 0, 0, 6, -1, 0.0029239766081871343, ["lea     r11d, [rdx-30h]", "cmp     r11b, 9", "jbe     short loc_C884"], ["lea~r11d,[rdx-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 5, -1, 0.07894736842105263, ["cmp     dl, 41h ; 'A'", "jge     short loc_C884"], ["cmp~dl,0", "jge~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [0, 0, 19, 0, 0, 4, 1, 1, 0, 1, 0.0, ["mov     rcx, [str]", "movzx   edx, byte ptr [rcx]", "test    dl, dl", "jz      loc_C8EC"], ["mov~rcx,<TAG>", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 4, -1, 0.09064327485380116, ["cmp     dl, 5Ah ; 'Z'", "jle     short loc_C8AA"], ["cmp~dl,0", "jle~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     match, rcx", "jmp     short loc_C884"], ["mov~match,rcx", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 4, -1, 0.07894736842105263, ["mov     esi, r10d", "test    match, match", "jnz     short loc_C884"], ["mov~esi,r10d", "test~match,match", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 6, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 17, 1, 0, 5, 1, 1, 5, -1, 0.5409356725146198, ["add     rcx, 1", "mov     [str], rcx", "movzx   edx, byte ptr [rcx]", "test    dl, dl", "jz      short locret_C8EA"], ["add~rcx,0", "mov~<TAG>,rcx", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 3, -1, 0.3508771929824561, ["cmp     dl, 2Eh ; '.'", "jz      short loc_C8D1"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, -1, 0.05847953216374269, ["mov     esi, r8d", "jmp     short loc_C884"], ["mov~esi,r8d", "jmp~FOO"]], [1, 0, 17, 0, 0, 3, 0, 1, 6, -1, 0.02046783625730994, ["cmp     dl, 7Eh ; '~'", "cmovnz  match, r9", "jmp     short loc_C884"], ["cmp~dl,0", "cmovnz~match,r9", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 6, -1, 0.02046783625730994, ["jmp     short loc_C884"], ["jmp~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 2, -1, 0.5847953216374269, ["test    sil, sil", "jz      short loc_C8AF"], ["test~sil,sil", "jz~FOO"]], [5, 0, 17, 0, 0, 6, 0, 1, 1, -1, 0.049707602339181284, ["mov     esi, 0", "mov     eax, 0", "mov     r9d, 0", "mov     r10d, 1", "mov     r8d, 0", "jmp     short loc_C892"], ["mov~esi,0", "mov~eax,0", "mov~r9d,0", "mov~r10d,0", "mov~r8d,0", "jmp~FOO"]]], "func_feature": [0, 4, 16, 0, 20, 30, 2, 53, 0.12164, 0, 1], "succs": [[13], [0, 9], [0, 15], [16, 17], [3, 6], [16, 13], [5, 13], [], [19, 7], [2, 15], [13], [10, 13], [], [18, 12], [11, 4], [13], [13], [13], [1, 14], [18]], "fname": "match_suffix", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 0, 0, 3, 0, 0, 0, 0, 0.10714285714285714, ["movzx   eax, dil", "cmp     dil, 41h ; 'A'", "jb      short loc_C911"], ["movzx~eax,dil", "cmp~dil,0", "jb~FOO"]], [1, 0, 8, 0, 0, 3, 0, 0, 0, 3, 0.0, ["lea     eax, [c-30h]", "cmp     al, 9", "jbe     short loc_C91D"], ["lea~eax,[c-30h]+0]", "cmp~al,0", "jbe~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.017857142857142856, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     dil, 7Eh ; '~'", "jz      short loc_C923"], ["cmp~dil,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 2, 1, 0.07142857142857142, ["cmp     dil, 5Ah ; 'Z'", "jbe     short locret_C928"], ["cmp~dil,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]], [0, 1, 4, 0, 0, 3, 0, 0, 3, 1, 0.05357142857142857, ["lea     edx, [c-61h]", "cmp     dl, 19h", "jbe     short locret_C928"], ["lea~edx,[c-61h]+0]", "cmp~dl,<STR>", "jbe~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     eax, 100h", "retn"], ["add~eax,<STR>", "retn"]]], "func_feature": [0, 0, 1, 0, 9, 11, 2, 19, 0.04365, 0, 1], "succs": [[4, 5], [0, 2], [], [6], [8, 3], [6, 7], [], [4, 6], []], "fname": "order", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 36, 0, 0, 2, 0, 1, 0, 0, 0.09922299922299921, ["cmp     [rsp+78h+n], rbx", "jz      loc_CC74"], ["cmp~<TAG>,rbx", "jz~FOO"]], [2, 0, 36, 1, 0, 4, 0, 1, 17, 8, 0.10069930069930069, ["movzx   eax, byte ptr [s1+rbx+0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_CAFD"], ["movzx~eax,[yte ptr [s1+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [2, 0, 36, 1, 0, 4, 0, 1, 18, 8, 0.0031857031857031857, ["movzx   eax, byte ptr [r15+rbx]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_CAFD"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [2, 0, 36, 1, 0, 3, 0, 1, 20, 7, 0.0, ["add     r12, 1", "cmp     byte ptr [s2+r12+0], 30h ; '0'", "jz      short loc_CB78"], ["add~r12,0", "cmp~[yte ptr [s2+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 19, 7, 0.14902874902874902, ["cmp     byte ptr [s2+r12+0], 30h ; '0'", "jnz     short loc_CB84"], ["cmp~[yte ptr [s2+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 25, 2, 0.001048951048951049, ["mov     r14d, r8d", "jmp     short loc_CC22"], ["mov~r14d,r8d", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 24, 3, 0.07913752913752914, ["test    r8d, r8d", "jz      loc_CA91"], ["test~r8d,r8d", "jz~FOO"]], [0, 0, 36, 0, 0, 3, 0, 1, 20, 6, 0.0016317016317016317, ["mov     eax, [rsp+78h+var_5C]", "mov     [rsp+78h+var_60], eax", "jmp     loc_CB1C"], ["mov~eax,[rsp+0]", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 1, 19, 7, 0.02843822843822844, ["cmp     [rsp+78h+s2_len], r12", "jz      loc_CB2C"], ["cmp~[rsp+0],r12", "jz~FOO"]], [3, 0, 36, 0, 0, 3, 0, 0, 13, 4, 0.17692307692307693, ["mov     esi, 0", "mov     eax, 0", "mov     [rsp+78h+var_5C], 0"], ["mov~esi,0", "mov~eax,0", "mov~[rsp+0],0"]], [0, 0, 40, 1, 0, 9, 3, 1, 12, 5, 0.16013986013986015, ["sub     rdx, s2", "mov     rsi, rdx", "mov     [rsp+78h+s2_len], rdx", "test    s1_suffix, s1_suffix", "setnz   dl", "test    s2_suffix, s2_suffix", "setnz   al", "or      dl, al", "jz      short loc_CA7F"], ["sub~rdx,s2", "mov~rsi,rdx", "mov~[rsp+0],rdx", "test~s1_suffix,s1_suffix", "setnz~dl", "test~s2_suffix,s2_suffix", "setnz~al", "or~dl,al", "jz~FOO"]], [0, 0, 38, 0, 1, 6, 1, 2, 14, 5, 0.004662004662004662, ["mov     rdx, [rsp+78h+n]; n", "mov     s2_len_0, s2; s2", "mov     rdi, s1; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_CA7F"], ["mov~rdx,<TAG>", "mov~s2_len_0,s2", "mov~rdi,s1", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 37, 2, 0, 7, 0, 1, 15, 5, 0.0, ["mov     rax, [rsp+78h+s1_pos]", "sub     rax, r12", "mov     [rsp+78h+n], rax", "mov     s1_len, [rsp+78h+s2_pos]", "sub     rax, s2", "mov     [rsp+78h+s2_len], rax", "jmp     short loc_CA7F"], ["mov~rax,[rsp+0]", "sub~rax,r12", "mov~<TAG>,rax", "mov~s1_len,[rsp+0]", "sub~rax,s2", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 39, 0, 0, 2, 0, 1, 13, 5, 0.008857808857808857, ["cmp     [rsp+78h+n], s2_len_0", "jz      short loc_CACF"], ["cmp~<TAG>,s2_len_0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 23, 3, 0.010567210567210567, ["mov     eax, 1", "jmp     short loc_CBA5"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 36, 0, 0, 3, 0, 0, 22, 4, 0.12105672105672106, ["lea     ecx, [rdx-30h]", "cmp     cl, 9", "jbe     short loc_CC06"], ["lea~ecx,[rdx-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.029836829836829837, ["mov     eax, r14d", "mov     rsi, [rsp+78h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_CC8C"], ["mov~eax,r14d", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [2, 0, 50, 0, 0, 4, 0, 1, 8, 4, 0.0986013986013986, ["cmp     dl, 2Eh ; '.'", "setz    dl", "cmp     al, 2Eh ; '.'", "jz      short loc_CA17"], ["cmp~dl,0", "setz~dl", "cmp~al,0", "jz~FOO"]], [2, 0, 53, 0, 0, 4, 0, 1, 7, 4, 0.08158508158508158, ["cmp     al, 2Eh ; '.'", "setz    cl", "cmp     dl, 2Eh ; '.'", "jz      short loc_CA05"], ["cmp~al,0", "setz~cl", "cmp~dl,0", "jz~FOO"]], [0, 0, 52, 0, 0, 2, 1, 1, 8, 3, 0.002564102564102564, ["test    cl, cl", "jnz     loc_CC64"], ["test~cl,cl", "jnz~FOO"]], [2, 0, 61, 0, 0, 8, 1, 1, 3, 3, 0.04055944055944056, ["mov     ecx, 2", "lea     rsi, asc_18D5B+1; \".\"", "mov     rdi, s1", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_CC44"], ["mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,s1", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 2, 3, 0.027972027972027972, ["movzx   edx, byte ptr [s2+0]", "test    dl, dl", "jz      loc_CC1C"], ["movzx~edx,[yte ptr [s2+0]", "test~dl,dl", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 9, 3, 0.0030303030303030303, ["test    dl, dl", "jnz     loc_CC6C"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 24, 3, 0.0005827505827505828, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_CBA5"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 36, 1, 0, 4, 0, 0, 23, 4, 0.0951048951048951, ["movzx   edx, byte ptr [s2+rsi+0]", "sub     edx, 30h ; '0'", "cmp     dl, 9", "jbe     short loc_CC0D"], ["movzx~edx,[yte ptr [s2+0]", "sub~edx,0", "cmp~dl,0", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.0006993006993006993, ["mov     r14d, 0FFFFFFFFh", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 1, 14, 3, 0.248018648018648, ["cmp     [rsp+78h+n], rax", "ja      short loc_CAA2"], ["cmp~<TAG>,rax", "ja~FOO"]], [0, 0, 47, 0, 0, 2, 1, 1, 9, 8, 0.11282051282051282, ["test    cl, cl", "jz      short loc_CA23"], ["test~cl,cl", "jz~FOO"]], [0, 0, 36, 0, 1, 5, 0, 2, 19, 6, 0.05563325563325563, ["movzx   edi, byte ptr [s1+rbx+0]; c", "call    order", "mov     [rsp+78h+var_60], eax", "cmp     [rsp+78h+s2_len], r12", "jz      short loc_CB97"], ["movzx~edi,[yte ptr [s1+0]", "call~FOO", "mov~[rsp+0],eax", "cmp~[rsp+0],r12", "jz~FOO"]], [0, 0, 36, 0, 0, 2, 0, 1, 20, 5, 0.020473970473970475, ["mov     eax, [rsp+78h+var_5C]", "jmp     short loc_CB26"], ["mov~eax,[rsp+0]", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 15, 2, 0.00909090909090909, ["cmp     [rsp+78h+s2_len], rsi", "jbe     loc_CC22"], ["cmp~[rsp+0],rsi", "jbe~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 10, 8, 0.002797202797202797, ["test    dl, dl", "jnz     loc_CAB4"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 36, 0, 1, 2, 0, 1, 20, 5, 0.029797979797979796, ["movzx   edi, byte ptr [r15+rbx]; c", "call    order"], ["movzx~edi,<TAG>", "call~FOO"]], [0, 0, 4, 1, 0, 3, 0, 0, 22, 3, 0.01787101787101787, ["mov     edx, [rsp+78h+var_60]", "sub     edx, eax", "mov     eax, edx"], ["mov~edx,[rsp+0]", "sub~edx,eax", "mov~eax,edx"]], [0, 0, 36, 0, 0, 2, 0, 1, 21, 4, 0.054933954933954934, ["cmp     eax, [rsp+78h+var_60]", "jnz     short loc_CB9D"], ["cmp~eax,[rsp+0]", "jnz~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 17, 9, 0.16993006993006993, ["cmp     [rsp+78h+s2_len], r12", "jbe     short loc_CB5E"], ["cmp~[rsp+0],r12", "jbe~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 23, 2, 0.019230769230769232, ["test    eax, eax", "cmovnz  r14d, eax", "jmp     short loc_CC22"], ["test~eax,eax", "cmovnz~r14d,eax", "jmp~FOO"]], [1, 0, 36, 1, 0, 1, 0, 0, 20, 10, 0.04498834498834499, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 36, 1, 0, 1, 0, 0, 24, 6, 0.015850815850815853, ["add     rax, 1"], ["add~rax,0"]], [0, 0, 36, 0, 0, 2, 1, 1, 23, 7, 0.022843822843822845, ["test    r8d, r8d", "jnz     short loc_CBAD"], ["test~r8d,r8d", "jnz~FOO"]], [0, 0, 36, 1, 0, 5, 0, 1, 24, 7, 0.0, ["movsx   edx, dl", "movsx   ecx, cl", "sub     edx, ecx", "mov     r8d, edx", "jmp     short loc_CBAD"], ["movsx~edx,dl", "movsx~ecx,cl", "sub~edx,ecx", "mov~r8d,edx", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.0006993006993006993, ["mov     r14d, 1"], ["mov~r14d,0"]], [2, 0, 59, 0, 0, 8, 1, 1, 4, 3, 0.052214452214452214, ["mov     ecx, 2", "lea     rsi, asc_18D5B+1; \".\"", "mov     rdi, s2", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_CC4C"], ["mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,s2", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [0, 0, 36, 1, 0, 5, 0, 1, 15, 10, 0.23123543123543122, ["mov     rbx, rax", "sub     rsi, rax", "mov     [rsp+78h+var_68], rsi", "lea     r15, [s2+rsi+0]", "jmp     short loc_CB30"], ["mov~rbx,rax", "sub~rsi,rax", "mov~[rsp+0],rsi", "lea~r15,[s2+0]", "jmp~FOO"]], [0, 1, 66, 1, 1, 16, 2, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     rbp, s1", "mov     r13, s2", "mov     rax, fs:28h", "mov     [rsp+78h+var_40], rax", "xor     eax, eax", "call    _strcmp", "mov     r14d, eax", "test    eax, eax", "jz      loc_CC22"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbp,s1", "mov~r13,s2", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14d,eax", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.0006993006993006993, ["mov     r14d, 0FFFFFFFFh", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.0006993006993006993, ["mov     r14d, 1", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0006993006993006993, ["mov     r14d, 0FFFFFFFFh", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.0006993006993006993, ["mov     r14d, 1", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0013986013986013986, ["mov     r14d, 0FFFFFFFFh", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.0013986013986013986, ["mov     r14d, 1", "jmp     short loc_CC22"], ["mov~r14d,0", "jmp~FOO"]], [2, 0, 45, 2, 0, 3, 0, 1, 11, 8, 0.0, ["add     rbp, 1", "add     r13, 1", "jmp     loc_CA23"], ["add~rbp,0", "add~r13,0", "jmp~FOO"]], [0, 0, 36, 0, 0, 4, 0, 0, 16, 9, 0.28088578088578087, ["mov     rax, [rsp+78h+var_68]", "lea     r12, [rbx+rax]", "cmp     [rsp+78h+n], rbx", "jbe     short loc_CB4B"], ["mov~rax,[rsp+0]", "lea~r12,<TAG>", "cmp~<TAG>,rbx", "jbe~FOO"]], [1, 0, 36, 0, 0, 5, 0, 1, 21, 5, 0.16254856254856254, ["lea     rsi, [rax+r12]", "movzx   edx, byte ptr [s1+rax+0]", "lea     ecx, [rdx-30h]", "cmp     cl, 9", "ja      short loc_CBE2"], ["lea~rsi,<TAG>", "movzx~edx,[yte ptr [s1+0]", "lea~ecx,[rdx-30h]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 36, 1, 0, 5, 0, 1, 20, 6, 0.142035742035742, ["mov     rax, rbx", "mov     r8d, 0", "sub     r12, rbx", "lea     rdi, [s2+r12+0]", "jmp     short loc_CBB1"], ["mov~rax,rbx", "mov~r8d,0", "sub~r12,rbx", "lea~rdi,[s2+0]", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 43, 0, 0, 2, 0, 1, 11, 7, 0.0, ["mov     s1_suffix, [rsp+78h+s1_pos]", "jmp     short loc_CA4C"], ["mov~s1_suffix,[rsp+0]", "jmp~FOO"]], [0, 0, 44, 0, 2, 10, 1, 3, 10, 7, 0.1358974358974359, ["mov     [rsp+78h+s1_pos], s1", "mov     [rsp+78h+s2_pos], s2", "lea     rdi, [rsp+78h+s1_pos]; str", "call    match_suffix", "mov     rbx, rax", "lea     rdi, [rsp+78h+s2_pos]; str", "call    match_suffix", "mov     rdx, s1_suffix", "test    s1_suffix, s1_suffix", "jz      short loc_CAC1"], ["mov~[rsp+0],s1", "mov~[rsp+0],s2", "lea~rdi,[rsp+0]", "call~FOO", "mov~rbx,rax", "lea~rdi,[rsp+0]", "call~FOO", "mov~rdx,s1_suffix", "test~s1_suffix,s1_suffix", "jz~FOO"]], [0, 0, 41, 0, 0, 2, 0, 1, 12, 6, 0.0, ["mov     rdx, [rsp+78h+s2_pos]", "jmp     short loc_CA5E"], ["mov~rdx,[rsp+0]", "jmp~FOO"]], [0, 0, 42, 1, 0, 6, 1, 1, 11, 6, 0.14895104895104896, ["mov     r12, s1", "sub     rdx, s1", "mov     [rsp+78h+n], rdx", "mov     s1_len, s2_suffix", "test    s2_suffix, s2_suffix", "jz      short loc_CAC8"], ["mov~r12,s1", "sub~rdx,s1", "mov~<TAG>,rdx", "mov~s1_len,s2_suffix", "test~s2_suffix,s2_suffix", "jz~FOO"]], [2, 0, 57, 0, 0, 8, 1, 1, 5, 3, 0.06293706293706294, ["mov     ecx, 3", "lea     rsi, asc_18D5B; \"..\"", "mov     rdi, rbp", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_CC54"], ["mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,rbp", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 18, 8, 0.156021756021756, ["cmp     byte ptr [s1+rbx+0], 30h ; '0'", "jnz     short loc_CB70"], ["cmp~[yte ptr [s1+0],0", "jnz~FOO"]], [1, 0, 36, 0, 0, 4, 0, 1, 22, 5, 0.033566433566433566, ["movzx   ecx, byte ptr [rdi+rax]", "lea     r9d, [rcx-30h]", "cmp     r9b, 9", "ja      short loc_CBE2"], ["movzx~ecx,<TAG>", "lea~r9d,[rcx-30h]+0]", "cmp~r9b,0", "ja~FOO"]], [2, 0, 55, 0, 0, 8, 1, 1, 6, 3, 0.07272727272727272, ["mov     ecx, 3", "lea     rsi, asc_18D5B; \"..\"", "mov     rdi, r13", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_CC5C"], ["mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,r13", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [0, 0, 65, 0, 0, 3, 1, 1, 1, 3, 0.014452214452214451, ["movzx   eax, byte ptr [s1+0]", "test    al, al", "jz      loc_CC14"], ["movzx~eax,[yte ptr [s1+0]", "test~al,al", "jz~FOO"]], [2, 0, 36, 1, 0, 3, 0, 1, 19, 8, 0.0, ["add     rbx, 1", "cmp     byte ptr [s1+rbx+0], 30h ; '0'", "jz      short loc_CB65"], ["add~rbx,0", "cmp~[yte ptr [s1+0],0", "jz~FOO"]]], "func_feature": [7, 22, 61, 4, 67, 104, 4, 243, 0.05447, 3, 19], "succs": [[8, 29], [0, 36], [0, 62], [3, 55], [3, 55], [17], [27, 5], [33], [38, 7], [27], [9, 13], [9, 12], [9], [9, 11], [37], [25, 14], [], [16, 56], [28, 23], [18, 20], [18, 50], [26, 43], [42, 21], [51, 28], [37], [24, 6], [17], [44, 31], [32, 58], [33, 30], [35], [17, 44], [58, 52], [35], [37], [34, 38], [2, 62], [17], [53], [54], [41, 39], [39], [17], [61, 47], [53], [17, 65], [17], [17], [17], [17], [17], [17], [58], [1, 36], [15, 63], [54], [], [60], [57, 60], [10], [10, 59], [48, 64], [66, 4], [40, 15], [49, 19], [46, 22], [66, 4]], "fname": "filevercmp", "n_num": 67}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, ts; tp", "mov     edi, 0; clock_id", "call    _clock_gettime", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,ts", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 0, 2], "succs": [[]], "fname": "gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 11, 2, 2, 0, 1, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     rdi, rsp; ts", "call    gettime", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_CCE1"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdi,rsp", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 1, 3, 2, 0, 14, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [3, 0, 3, 1, 1, 7, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 0; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_CD3C"], ["sub~rsp,0", "mov~esi,0", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [3, 0, 2, 0, 0, 9, 1, 1, 1, 0, 0.16666666666666666, ["mov     ecx, 2", "lea     rdi, aC; \"C\"", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "mov     eax, 0", "test    cl, cl", "jz      short loc_CD3C"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "mov~eax,0", "test~cl,cl", "jz~FOO"]], [2, 0, 1, 0, 0, 8, 1, 0, 2, 0, 0.0, ["mov     ecx, 6", "lea     rdi, aPosix; \"POSIX\"", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]]], "func_feature": [1, 3, 3, 0, 4, 5, 3, 26, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], [0]], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, data", "ror     rax, 3", "mov     edx, 0", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "ror~rax,0", "mov~edx,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.005555555555555556, ["jmp     short locret_CDD5"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 7, 0, 0.07777777777777778, ["ucomiss xmm0, xmm1", "jbe     short loc_CDC5"], ["ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 6, 0, 0.13333333333333333, ["movss   xmm3, cs:dword_18E04", "ucomiss xmm3, xmm2", "jnb     short loc_CDD7"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jnb~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 5, 0, 0.16666666666666669, ["addss   xmm1, cs:dword_18DF4", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_CDC5"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 4, 0, 0.17777777777777778, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_18E00", "jb      short loc_CDC5"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 3, 0, 0.16666666666666669, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_18DFC", "jbe     short loc_CDC5"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 2, 0, 0.13333333333333333, ["movss   xmm1, cs:dword_18DF8", "ucomiss xmm1, xmm0", "jbe     short loc_CDC5"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 1, 0, 0.08888888888888889, ["movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_18DF4", "jbe     short loc_CDC5"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     tuning, [table+28h]", "mov     eax, 1", "lea     rcx, default_tuning", "cmp     tuning, rcx", "jz      short locret_CDD5"], ["mov~tuning,[table+0]", "mov~eax,0", "lea~rcx,<TAG>", "cmp~tuning,rcx", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, 0, 0.07222222222222223, ["lea     rax, default_tuning", "mov     [table+28h], rax", "mov     eax, 0"], ["lea~rax,<TAG>", "mov~[table+0],rax", "mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 2, 0, 11, 18, 3, 31, 0.09293, 6, 0], "succs": [[10], [0, 9], [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [10, 7], [10], []], "fname": "check_tuning", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 13, 2, 0, 4, 0, 0, 0, 0, 0.10476190476190478, ["add     rsi, r8", "add     rcx, 2", "cmp     rsi, rdi", "jnb     short loc_CEB0"], ["add~rsi,r8", "add~rcx,0", "cmp~rsi,rdi", "jnb~FOO"]], [2, 0, 13, 2, 0, 6, 1, 1, 6, 4, 0.0380952380952381, ["add     r8, 8", "mov     rax, rdi", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "jnz     short loc_CEFA"], ["add~r8,0", "mov~rax,rdi", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "jnz~FOO"]], [3, 0, 13, 0, 0, 3, 0, 0, 4, 4, 0.10714285714285715, ["mov     r8d, 10h", "mov     esi, 9", "mov     ecx, 3"], ["mov~r8d,0", "mov~esi,0", "mov~ecx,0"]], [1, 0, 17, 0, 0, 4, 0, 0, 3, 5, 0.13015873015873017, ["divss   xmm0, dword ptr [tuning+8]", "mov     edi, 0", "ucomiss xmm0, cs:dword_18E08", "jnb     short loc_CE6A"], ["divss~xmm0,[word ptr [tuning+0]", "mov~edi,0", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 18, 0, 0, 8, 2, 1, 2, 6, 0.026984126984126985, ["mov     rax, candidate", "shr     rax, 1", "and     edi, 1", "or      rax, rdi", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_CDF6"], ["mov~rax,candidate", "shr~rax,0", "and~edi,0", "or~rax,rdi", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 2, 6, 0.026984126984126985, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [0, 0, 16, 0, 0, 2, 0, 0, 4, 4, 0.14761904761904762, ["ucomiss xmm0, cs:dword_18E0C", "jnb     short loc_CE8C"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 5, 3, 0.07857142857142858, ["cvttss2si rdi, xmm0"], ["cvttss2si~rdi,xmm0"]], [0, 0, 13, 0, 0, 1, 0, 1, 7, 3, 0.01666666666666667, ["jmp     short loc_CEC4"], ["jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, 0, 0.0, ["mov     ecx, 1", "jmp     loc_CE52"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 5, 0, 0, 2, 1, 0.11746031746031747, ["mov     ecx, 0", "mov     edx, 8", "mov     rax, rdx", "mul     rdi", "jo      loc_CF1C"], ["mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,rdi", "jo~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 5, 3, 0.07857142857142858, ["subss   xmm0, cs:dword_18E0C", "cvttss2si rdi, xmm0", "mov     rax, 8000000000000000h", "xor     rdi, rax", "jmp     loc_CE17"], ["subss~xmm0,<TAG>", "cvttss2si~rdi,xmm0", "mov~rax,0", "xor~rdi,rax", "jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 3, 3, 0.03333333333333334, ["mov     ecx, 3"], ["mov~ecx,0"]], [1, 0, 13, 0, 0, 2, 0, 0, 2, 4, 0.25, ["cmp     rdi, 9", "jbe     short loc_CEAB"], ["cmp~rdi,0", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 7, 0.015873015873015872, ["test    candidate, candidate", "js      loc_CE6E"], ["test~candidate,candidate", "js~FOO"]], [5, 0, 13, 0, 0, 7, 1, 1, 1, 2, 0.23650793650793653, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "cmovb   candidate, rax", "or      rdi, 1", "mov     r9, 0AAAAAAAAAAAAAAABh", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jnz     loc_CED2"], ["cmp~candidate,0", "mov~eax,0", "cmovb~candidate,rax", "or~rdi,0", "mov~r9,0", "cmp~rdi,0", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 0, 3, 0.0, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_CE17"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [1, 0, 13, 1, 0, 5, 1, 1, 4, 2, 0.0761904761904762, ["mov     rax, rdi", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "jnz     loc_CE3C"], ["mov~rax,rdi", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "jnz~FOO"]], [2, 0, 13, 1, 0, 3, 0, 1, 4, 2, 0.10714285714285715, ["add     rdi, 2", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_CE3C"], ["add~rdi,0", "cmp~rdi,0", "jz~FOO"]], [1, 0, 13, 1, 0, 6, 0, 1, 3, 3, 0.1642857142857143, ["mov     rax, rdi", "mul     r9", "shr     rdx, 1", "lea     rax, [rdx+rdx*2]", "cmp     rdi, rax", "jz      short loc_CEC4"], ["mov~rax,rdi", "mul~,r9", "shr~rdx,0", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [3, 0, 1, 0, 0, 6, 2, 0, 3, -1, 0.03650793650793651, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "and     ecx, 1", "mov     eax, 0", "cmovnz  rdi, rax"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "and~ecx,0", "mov~eax,0", "cmovnz~rdi,rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, rdi", "retn"], ["mov~rax,rdi", "retn"]]], "func_feature": [0, 9, 11, 0, 22, 33, 2, 79, 0.08149, 2, 8], "succs": [[1, 17], [0, 8], [0], [21, 6], [3], [3], [11, 7], [15], [18], [20], [9, 20], [15], [17], [19, 12], [4, 5], [10, 13], [14, 15], [10, 18], [10, 13], [18, 2], [21], []], "fname": "compute_bucket_size", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 1, 7, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, table", "mov     table, key", "mov     key, [table+10h]", "call    qword ptr [table+30h]", "cmp     [table+10h], n", "jbe     short loc_CF43"], ["push~rbx", "mov~rbx,table", "mov~table,key", "mov~key,[table+0]", "call~[word ptr [table+0]", "cmp~[table+0],n", "jbe~FOO"]], [1, 0, 0, 2, 0, 4, 0, 0, 0, -1, 0.0, ["shl     n, 4", "add     rax, [table]", "pop     table", "retn"], ["shl~n,0", "add~rax,<TAG>", "pop~table", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 12, 0.0, 0, 2], "succs": [[1, 2], [], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 19, 1, 0, 3, 0, 0, 0, 0, 0.3684210526315789, ["add     bucket, 10h", "cmp     [src+8], bucket", "jbe     short loc_D05B"], ["add~bucket,0", "cmp~[src+0],bucket", "jbe~FOO"]], [1, 0, 19, 0, 0, 4, 1, 1, 4, 3, 0.3657894736842105, ["mov     cursor, [bucket+0]", "mov     qword ptr [bucket+8], 0", "test    r15b, r15b", "jnz     short loc_D01A"], ["mov~cursor,[bucket+0]", "mov~[word ptr [bucket+0],0", "test~r15b,r15b", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 1, 3, 0.34210526315789475, ["cmp     qword ptr [bucket+0], 0", "jz      short loc_D01A"], ["cmp~[word ptr [bucket+0],0", "jz~FOO"]], [2, 0, 19, 1, 0, 2, 0, 0, 7, 3, 0.2263157894736842, ["mov     qword ptr [bucket+0], 0", "sub     qword ptr [src+18h], 1"], ["mov~[word ptr [bucket+0],0", "sub~[word ptr [src+0],0"]], [1, 0, 19, 1, 0, 3, 0, 1, 6, 4, 0.05526315789473684, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "jmp     short loc_D00D"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "jmp~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 5, 4, 0.24736842105263157, ["mov     rsi, data; key", "mov     rdi, dst; table", "call    safe_hasher", "mov     rbp, rax", "cmp     qword ptr [new_bucket], 0", "jz      short loc_D050"], ["mov~rsi,data", "mov~rdi,dst", "call~FOO", "mov~rbp,rax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 1, 4, 5, 0.038157894736842106, ["mov     rcx, [new_bucket+8]", "mov     [cursor+8], rcx", "mov     [new_bucket+8], cursor", "jmp     short loc_CF98"], ["mov~rcx,[new_bucket+0]", "mov~[cursor+0],rcx", "mov~[new_bucket+0],cursor", "jmp~FOO"]], [1, 0, 19, 0, 1, 7, 0, 2, 3, 6, 0.1131578947368421, ["mov     rbp, [cursor]", "mov     rsi, data; key", "mov     rdi, dst; table", "call    safe_hasher", "mov     rdx, [cursor+8]", "cmp     qword ptr [new_bucket], 0", "jz      short loc_CF7A"], ["mov~rbp,<TAG>", "mov~rsi,data", "mov~rdi,dst", "call~FOO", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 19, 0, 1, 4, 1, 2, 7, 2, 0.08289473684210526, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     short loc_CFFE"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 6, 3, 0.15526315789473683, ["mov     new_bucket, [dst+48h]", "test    rax, rax", "jz      short loc_D03A"], ["mov~new_bucket,[dst+0]", "test~rax,rax", "jz~FOO"]], [0, 1, 20, 1, 0, 14, 0, 0, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r12, dst", "mov     r14, src", "mov     [rsp+48h+var_3C], edx", "mov     r15d, edx", "mov     r13, [src]", "cmp     bucket, [src+8]", "jb      loc_D024"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r12,dst", "mov~r14,src", "mov~[rsp+0],edx", "mov~r15d,edx", "mov~r13,<TAG>", "cmp~bucket,[src+0]", "jb~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     dst", "pop     bucket", "pop     src", "pop     safe", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~dst", "pop~bucket", "pop~src", "pop~safe", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.002631578947368421, ["mov     eax, 1", "jmp     loc_D060"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.007894736842105263, ["movzx   eax, byte ptr [rsp+48h+var_3C]", "jmp     short loc_D060"], ["movzx~eax,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.034210526315789476, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 19, 0, 0, 1, 0, 1, 3, 4, 0.2026315789473684, ["jmp     short loc_CFC6"], ["jmp~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 5, 0.33421052631578946, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jnz     loc_CFA0"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jnz~FOO"]], [2, 0, 19, 1, 0, 6, 0, 0, 4, 5, 0.038157894736842106, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "mov     qword ptr [cursor], 0", "mov     new_bucket, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "mov~<TAG>,0", "mov~new_bucket,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor"]], [0, 0, 19, 0, 0, 3, 1, 1, 5, 4, 0.12894736842105262, ["mov     rbx, next", "test    next, next", "jz      short loc_CFC6"], ["mov~rbx,next", "test~next,next", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 8, 4, 0.11842105263157894, ["mov     [rax], data", "mov     rdx, [new_bucket+8]", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax"], ["mov~<TAG>,data", "mov~rdx,[new_bucket+0]", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax"]], [0, 0, 19, 0, 0, 2, 0, 0, 7, 5, 0.035526315789473684, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]]], "func_feature": [3, 5, 16, 1, 21, 30, 3, 84, 0.13797, 0, 6], "succs": [[2, 14], [0, 5], [0, 16], [0], [3], [9, 4], [18], [17, 6], [19, 13], [8, 20], [2, 12], [], [11], [11], [11], [1], [7, 15], [18], [1, 7], [3], [19]], "fname": "transfer_entries", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 0, 3, 1, 1, 0, 0, 0.0380952380952381, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      short loc_D12B"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, -1, 0.05238095238095239, ["mov     rax, [bucket]", "test    r13b, r13b", "jz      short loc_D0EC"], ["mov~rax,<TAG>", "test~r13b,r13b", "jz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "pop     r13", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~table", "pop~r13", "pop~bucket_head", "retn"]], [0, 0, 15, 0, 1, 15, 1, 2, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, table", "mov     rbp, entry", "mov     r14, bucket_head", "mov     r13d, ecx", "call    safe_hasher", "mov     rbx, rax", "mov     [bucket_head], bucket", "mov     bucket, [bucket]", "test    rax, rax", "jz      short loc_D0EC"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,table", "mov~rbp,entry", "mov~r14,bucket_head", "mov~r13d,ecx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,bucket", "mov~bucket,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 6, -1, 0.030952380952380953, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      short loc_D0EC"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 9, 0, 1, 4, -1, 0.002380952380952381, ["mov     rsi, [next]", "mov     rdi, [next+8]", "mov     [bucket], rsi", "mov     [bucket+8], rdi", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "jmp     short loc_D0EC"], ["mov~rsi,<TAG>", "mov~rdi,[next+0]", "mov~<TAG>,rsi", "mov~[bucket+0],rdi", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.002380952380952381, ["mov     qword ptr [bucket], 0", "jmp     short loc_D0EC"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 7, 0, 1, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "jmp     short loc_D0EC"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.004761904761904762, ["mov     eax, 0", "jmp     short loc_D0EC"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.05, ["mov     rdx, [cursor+8]", "mov     rax, [rdx]", "test    r13b, r13b", "jnz     short loc_D134"], ["mov~rdx,[cursor+0]", "mov~rax,<TAG>", "test~r13b,r13b", "jnz~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 2, 2, 0.0761904761904762, ["mov     rsi, rax", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D0F5"], ["mov~rsi,rax", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 3, 0.06190476190476191, ["cmp     rax, entry", "jz      short loc_D0F5"], ["cmp~rax,entry", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 5, -1, 0.05238095238095239, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D0E0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.014285714285714287, ["mov     rsi, [rax]", "cmp     rsi, entry", "jnz     short loc_D0BF"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 4, -1, 0.09523809523809525, ["mov     rsi, [rax]", "cmp     entry, rsi", "jz      short loc_D0E0"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 3, 1, 0.1, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_D153"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]]], "func_feature": [3, 8, 18, 0, 16, 26, 3, 75, 0.03631, 0, 0], "succs": [[5, 6], [0, 2], [], [2, 11], [2, 13], [2], [2], [2], [2], [2, 7], [1, 15], [1, 10], [9, 4], [9, 12], [9, 12], [8, 14]], "fname": "hash_find_entry", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 9, 0, 0, 1, 0, 0, 0, 0, 0.13636363636363635, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, -1, 0.3, ["mov     rdx, [cursor+8]", "test    cursor, cursor", "jz      short loc_D17C"], ["mov~rdx,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 5, -1, 0.2545454545454545, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 9, 0, 0, 1, 0, 1, 6, -1, 0.11818181818181818, ["jmp     short loc_D181"], ["jmp~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 4, -1, 0.07272727272727272, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 9, 1, 0, 3, 0, 0, 3, -1, 0.3, ["add     bucket, 10h", "cmp     bucket, rdi", "jnb     short locret_D1B4"], ["add~bucket,0", "cmp~bucket,rdi", "jnb~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, -1, 0.36363636363636365, ["cmp     qword ptr [bucket], 0", "jz      short loc_D188"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 5, -1, 0.12727272727272726, ["add     bucket_length, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D1A5"], ["add~bucket_length,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 11, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "cmp     bucket, rdi", "jnb     short loc_D1B6"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "cmp~bucket,rdi", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.08181818181818182, ["mov     eax, 0", "jmp     short loc_D191"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 2, 5, 0, 12, 15, 1, 26, 0.14621, 0, 2], "succs": [[7], [0, 4], [5], [2], [2], [9, 6], [1, 5], [3, 7], [10, 11], [], [6], []], "fname": "hash_get_max_bucket_length", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.18888888888888888, ["cmp     qword ptr [bucket], 0", "jz      short loc_D1D4"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 0, 0, 3, 0, 1, 1, 4, 0.05555555555555556, ["mov     edx, 0", "mov     esi, 0", "jmp     short loc_D1DD"], ["mov~edx,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, 2, 0.23333333333333334, ["add     bucket, 10h", "cmp     bucket, r8", "jnb     short loc_D20D"], ["add~bucket,0", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 0, 3, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "cmp     bucket, r8", "jnb     short loc_D203"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 5, 3, 0.06666666666666667, ["jmp     short loc_D1D4"], ["jmp~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 4, 0.05555555555555556, ["add     n_entries, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D1F4"], ["add~n_entries,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 1, 2, 0.03333333333333333, ["mov     edx, 0", "mov     esi, 0"], ["mov~edx,0", "mov~esi,0"]], [2, 0, 8, 2, 0, 5, 1, 1, 3, 3, 0.1, ["add     n_buckets_used, 1", "add     n_entries, 1", "mov     rax, [cursor+8]", "test    cursor, cursor", "jz      short loc_D1D4"], ["add~n_buckets_used,0", "add~n_entries,0", "mov~rax,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "jmp     short locret_D218"], ["cmp~[table+0],rdx", "setz~al", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.17777777777777778, ["mov     eax, 0", "cmp     [table+18h], rsi", "jz      short loc_D21A"], ["mov~eax,0", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 7, 0, 11, 16, 0, 31, 0.08283, 0, 4], "succs": [[2, 7], [0], [0, 9], [1, 6], [2], [4, 5], [9], [2, 5], [10], [8, 10], []], "fname": "hash_table_ok", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[4, 0, 0, 0, 2, 19, 0, 2, 0, 0, 0.0, ["divsd   xmm0, xmm1", "mov     rcx, r12", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 1", "call    ___fprintf_chk", "mov     rcx, max_bucket_length", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "pop     rbx", "pop     stream", "pop     r12", "pop     max_bucket_length", "pop     table", "retn"], ["divsd~xmm0,xmm1", "mov~rcx,r12", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~rcx,max_bucket_length", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "pop~rbx", "pop~stream", "pop~r12", "pop~max_bucket_length", "pop~table", "retn"]], [2, 0, 1, 0, 0, 8, 2, 1, 3, 0, 0.06666666666666667, ["mov     rax, rbx", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "pxor    xmm1, xmm1", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     short loc_D29E"], ["mov~rax,rbx", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 3, -1, 0.06666666666666667, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbx"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbx"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 2, 0.06666666666666667, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, r12"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,r12"]], [4, 0, 6, 0, 3, 25, 1, 4, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, table", "mov     rbp, stream", "mov     rbx, [table+10h]", "mov     r12, [table+18h]", "call    hash_get_max_bucket_length", "mov     r13, rax", "mov     rcx, [table+20h]", "lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     rcx, rbx", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "test    r12, r12", "js      short loc_D2E3"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,table", "mov~rbp,stream", "mov~rbx,[table+0]", "mov~r12,[table+0]", "call~FOO", "mov~r13,rax", "mov~rcx,[table+0]", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "test~r12,r12", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 1, 0.3, ["mulsd   xmm0, cs:qword_18E10", "test    rbx, rbx", "js      short loc_D301"], ["mulsd~xmm0,<TAG>", "test~rbx,rbx", "js~FOO"]], [2, 0, 4, 0, 0, 9, 2, 1, 1, 2, 0.06666666666666667, ["mov     rax, r12", "shr     rax, 1", "mov     rdx, r12", "and     edx, 1", "or      rax, rdx", "pxor    xmm0, xmm0", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     short loc_D288"], ["mov~rax,r12", "shr~rax,0", "mov~rdx,r12", "and~edx,0", "or~rax,rdx", "pxor~xmm0,xmm0", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [5, 6, 9, 0, 7, 8, 0, 68, 0.08095, 5, 0], "succs": [[], [0], [0], [5], [3, 6], [1, 2], [5]], "fname": "hash_print_statistics", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_D360"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_D360"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_D360"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.03333333333333333, ["mov     rax, [cursor]"], ["mov~rax,<TAG>"]], [0, 0, 10, 0, 1, 9, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, table", "mov     rbp, entry", "call    safe_hasher", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_D36C"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,table", "mov~rbp,entry", "call~FOO", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 3, -1, 0.12222222222222223, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D35D"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 5, -1, 0.022222222222222223, ["mov     rsi, [cursor]", "cmp     rsi, entry", "jnz     short loc_D340"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.11111111111111112, ["cmp     rsi, entry", "jz      short loc_D35D"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 4, -1, 0.1, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jz      short loc_D365"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 1, 1, 0.07777777777777778, ["mov     rbx, bucket", "test    cursor, cursor", "jz      short loc_D373"], ["mov~rbx,bucket", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [2, 4, 11, 0, 11, 16, 1, 35, 0.04545, 0, 0], "succs": [[], [0], [0], [0], [0], [2, 10], [9, 4], [4, 6], [4, 6], [1, 7], [8, 3]], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.05357142857142857, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_D395"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 3, -1, 0.125, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_D3AA"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.017857142857142856, ["mov     eax, 0", "jmp     short locret_D3A6"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 5, 0, 0, 3, 1, 1, 2, -1, 0.125, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_D3A8"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 1, -1, 0.08928571428571427, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_D3AA"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_D3B3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, -1, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 9, 11, 0, 21, 0.04563, 0, 2], "succs": [[1, 2], [0, 8], [], [2], [], [1, 4], [8, 5], [3, 6], []], "fname": "hash_get_first", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03636363636363636, ["mov     rax, [rax]", "jmp     short loc_D40B"], ["mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.14545454545454545, ["mov     bucket, [cursor+8]", "test    rax, rax", "jnz     short loc_D401"], ["mov~bucket,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.02727272727272727, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 1, 0, 3, 0, 0, 4, 2, 0.1909090909090909, ["add     bucket, 10h", "cmp     rdx, bucket", "jbe     short loc_D406"], ["add~bucket,0", "cmp~rdx,bucket", "jbe~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.11818181818181818, ["cmp     [cursor], entry", "jz      short loc_D3E1"], ["cmp~<TAG>,entry", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.1909090909090909, ["mov     rdx, [table+8]"], ["mov~rdx,[table+0]"]], [0, 0, 6, 0, 0, 1, 0, 1, 3, 4, 0.045454545454545456, ["jmp     short loc_D3EA"], ["jmp~FOO"]], [1, 0, 11, 1, 1, 8, 0, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, table", "mov     rbx, entry", "call    safe_hasher", "mov     rcx, rax", "mov     rdx, cursor"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "mov~rcx,rax", "mov~rdx,cursor"]], [0, 0, 5, 0, 0, 3, 1, 1, 5, 2, 0.06363636363636363, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_D3EE"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, 0, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, 1, 0.00909090909090909, ["jmp     short loc_D40B"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 4, 0.01818181818181818, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D3D1"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [1, 3, 8, 0, 12, 16, 0, 32, 0.07045, 0, 3], "succs": [[9], [0, 5], [9], [8, 2], [1, 11], [3], [5], [4], [10, 3], [], [9], [4, 6]], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.07272727272727272, ["mov     eax, 0", "jmp     short loc_D42C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     bucket, [table+8]", "jnb     short loc_D45D"], ["mov~bucket,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.00909090909090909, ["mov     eax, 0", "jmp     short locret_D459"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 1, 0, 3, 0, 0, 3, -1, 0.19999999999999998, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short locret_D45B"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, -1, 0.2727272727272727, ["cmp     qword ptr [bucket], 0", "jz      short loc_D422"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, -1, 0.21818181818181817, ["test    cursor, cursor", "jz      short loc_D422"], ["test~cursor,cursor", "jz~FOO"]], [1, 0, 9, 1, 0, 6, 1, 1, 6, -1, 0.20909090909090908, ["add     counter, 1", "mov     r8, [cursor]", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jz      short loc_D422"], ["add~counter,0", "mov~r8,<TAG>", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.01818181818181818, ["cmp     buffer_size, counter", "jnz     short loc_D43F"], ["cmp~buffer_size,counter", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 5, -1, 0.14545454545454545, ["mov     rcx, cursor"], ["mov~rcx,cursor"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 2, 0, 0, 4, -1, 0.1909090909090909, ["cmp     buffer_size, counter", "jbe     short locret_D459"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 6, 0, 12, 17, 0, 27, 0.11136, 0, 2], "succs": [[4], [0, 2], [9], [11, 4], [3, 5], [10, 3], [3, 7], [9, 6], [6], [], [8, 9], []], "fname": "hash_get_entries", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.011111111111111112, ["mov     ebp, 0"], ["mov~ebp,0"]], [1, 0, 10, 1, 0, 10, 0, 0, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_D4C0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, 2, 0.18888888888888888, ["mov     rbx, cursor"], ["mov~rbx,cursor"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, 2, 0.23333333333333334, ["test    cursor, cursor", "jz      short loc_D48B"], ["test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 0, 0, 5, 0, 1, 1, 3, 0.07777777777777778, ["mov     r14, processor_data", "mov     r13, processor", "mov     r15, table", "mov     ebp, 0", "jmp     short loc_D495"], ["mov~r14,processor_data", "mov~r13,processor", "mov~r15,table", "mov~ebp,0", "jmp~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 5, 1, 0.2, ["mov     rsi, processor_data", "mov     rdi, [cursor]", "call    processor", "test    al, al", "jz      short loc_D4C5"], ["mov~rsi,processor_data", "mov~rdi,<TAG>", "call~processor", "test~al,al", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 6, 2, 0.15555555555555556, ["add     counter, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D4A4"], ["add~counter,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, 1, 0.2, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_D4C5"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 2, 0.3, ["cmp     qword ptr [bucket], 0", "jz      short loc_D48B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, 2, 0.12222222222222223, ["jmp     short loc_D48B"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, 0, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     bucket", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~bucket", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [1, 3, 7, 0, 11, 16, 0, 43, 0.13535, 0, 4], "succs": [[10], [0, 4], [5], [2, 7], [8], [10, 6], [9, 5], [8, 10], [3, 7], [7], []], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 2, 5, 0, 11, 1, 1, 0, 0, 0.08333333333333333, ["mov     rax, value", "shl     rax, 5", "sub     rax, value", "movzx   ecx, cl", "add     rax, ch_0", "mov     edx, 0", "div     n_buckets", "add     string, 1", "movzx   ecx, byte ptr [string]", "test    cl, cl", "jnz     short loc_D4E3"], ["mov~rax,value", "shl~rax,0", "sub~rax,value", "movzx~ecx,cl", "add~rax,ch_0", "mov~edx,0", "div~,n_buckets", "add~string,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.08333333333333333, ["mov     edx, 0"], ["mov~edx,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, 0", "jmp     short loc_D506"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movzx   ecx, byte ptr [string]", "test    cl, cl", "jz      short loc_D50A"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]]], "func_feature": [0, 2, 3, 0, 5, 6, 0, 19, 0.05, 0, 5], "succs": [[0, 4], [0], [4], [1, 2], []], "fname": "hash_string", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[5, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     dword ptr [tuning], 0", "mov     dword ptr [tuning+4], 3F800000h", "mov     dword ptr [tuning+8], 3F4CCCCDh", "mov     dword ptr [tuning+0Ch], 3FB4FDF4h", "mov     byte ptr [tuning+10h], 0", "retn"], ["mov~<TAG>,0", "mov~[word ptr [tuning+0],0", "mov~[word ptr [tuning+0],0", "mov~[word ptr [tuning+0],0", "mov~[yte ptr [tuning+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.1, ["mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [table], rax", "test    rax, rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 2, 1, 0.13333333333333333, ["mov     rsi, tuning; tuning", "mov     rdi, candidate; candidate", "call    compute_bucket_size", "mov     tuning, rax", "mov     [table+10h], rax", "test    rax, rax", "jz      short fail"], ["mov~rsi,tuning", "mov~rdi,candidate", "call~FOO", "mov~tuning,rax", "mov~[table+0],rax", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, rbx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     comparator", "pop     hasher", "pop     data_freer", "pop     candidate", "retn"], ["mov~rax,rbx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~comparator", "pop~hasher", "pop~data_freer", "pop~candidate", "retn"]], [1, 1, 6, 1, 1, 23, 3, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, candidate", "mov     rbp, tuning", "mov     r13, hasher", "mov     r12, comparator", "mov     r14, data_freer", "test    hasher, hasher", "lea     rax, raw_hasher", "cmovz   r13, rax", "test    comparator, comparator", "lea     rax, raw_comparator", "cmovz   r12, rax", "mov     edi, 50h ; 'P'; size", "call    malloc", "mov     rbx, rax", "test    table, table", "jz      short loc_D5F5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,candidate", "mov~rbp,tuning", "mov~r13,hasher", "mov~r12,comparator", "mov~r14,data_freer", "test~hasher,hasher", "lea~rax,<TAG>", "cmovz~r13,rax", "test~comparator,comparator", "lea~rax,<TAG>", "cmovz~r12,rax", "mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "test~table,table", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 2, 0, 0.08333333333333333, ["mov     rdi, table; ptr", "call    free", "mov     ebx, 0", "jmp     short loc_D5F5"], ["mov~rdi,table", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 4, -1, 0.016666666666666666, ["shl     rbp, 4", "add     rbp, rax", "mov     [table+8], rbp", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbp,0", "add~rbp,rax", "mov~[table+0],rbp", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [0, 0, 5, 0, 1, 8, 2, 2, 1, 1, 0.13333333333333333, ["test    tuning, tuning", "lea     table, default_tuning", "cmovz   tuning, rax", "mov     [table+28h], tuning", "mov     rdi, table; table", "call    check_tuning", "test    al, al", "jz      short fail"], ["test~tuning,tuning", "lea~table,<TAG>", "cmovz~tuning,rax", "mov~[table+0],tuning", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]]], "func_feature": [5, 7, 10, 0, 7, 10, 2, 66, 0.06667, 3, 4], "succs": [[4, 5], [0, 4], [], [2, 6], [2], [2], [1, 4]], "fname": "hash_initialize", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 11, 0, 0, 8, 1, 1, 0, 0, 0.21818181818181817, ["mov     qword ptr [cursor], 0", "mov     rax, [cursor+8]", "mov     rdx, [table+48h]", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, cursor", "test    cursor, cursor", "jnz     short loc_D676"], ["mov~<TAG>,0", "mov~rax,[cursor+0]", "mov~rdx,[table+0]", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,cursor", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 2, 0.21818181818181817, ["mov     rax, [table+40h]", "test    rax, rax", "jz      short loc_D684"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 2, 0.0, ["mov     rdi, [cursor]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 7, 0.35454545454545455, ["mov     rax, [table+40h]", "test    rax, rax", "jz      short loc_D64A"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 3, 0.35454545454545455, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jz      short loc_D63B"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 5, 0, 0.1909090909090909, ["jmp     short loc_D63B"], ["jmp~FOO"]], [1, 0, 11, 1, 0, 3, 0, 0, 2, 5, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_D626"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 4, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_D65B"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 6, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, table", "mov     r12, [table]", "cmp     bucket, [table+8]", "jb      short loc_D665"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,table", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jb~FOO"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 7, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, -1, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[1, 5], [0, 2], [0], [8, 10], [1, 3], [3], [11, 7], [4, 6], [6], [11, 7], [8], []], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 6, 1, 0, 3, 0, 1, 0, 0, 0.029166666666666667, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_D6FD"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.0875, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_D717"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 6, 0, 1, 5, 1, 2, 3, 3, 0.0, ["mov     rbx, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_D706"], ["mov~rbx,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 2, 3, 0.058333333333333334, ["mov     rbp, [table]", "cmp     bucket, [table+8]", "jb      short loc_D6D0"], ["mov~rbp,<TAG>", "cmp~bucket,[table+0]", "jb~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 3, 0.03333333333333333, ["cmp     qword ptr [table+20h], 0", "jz      short loc_D6F2"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, 2, 0.0125, ["jmp     short loc_D722"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 2, 0.2125, ["mov     rbp, [table]", "cmp     bucket, [table+8]", "jnb     short loc_D722"], ["mov~rbp,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [1, 0, 16, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, table", "cmp     qword ptr [table+40h], 0", "jz      short loc_D6F2"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,table", "cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 4, 3, 0.20416666666666666, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_D6F2"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 3, 1, 0.0, ["mov     rbx, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_D72C"], ["mov~rbx,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.11666666666666667, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_D73D"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 4, 0.12083333333333333, ["cmp     qword ptr [bucket+0], 0", "jz      short loc_D6C5"], ["cmp~[word ptr [bucket+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 4, 4, 0.075, ["test    cursor, cursor", "jz      short loc_D6C5"], ["test~cursor,cursor", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 7, 4, 0.0875, ["jmp     short loc_D6C5"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 6, 5, 0.07083333333333333, ["mov     rdi, [cursor]", "call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D6DF"], ["mov~rdi,<TAG>", "call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 2, 8, 0, 2, 3, 0, 0.0, ["mov     cursor, [table]; ptr", "call    free", "mov     rdi, table; ptr", "call    free", "pop     rbx", "pop     bucket", "pop     table", "retn"], ["mov~cursor,<TAG>", "call~FOO", "mov~rdi,table", "call~FOO", "pop~rbx", "pop~bucket", "pop~table", "retn"]], [0, 0, 13, 0, 0, 1, 0, 0, 5, 6, 0.05416666666666667, ["mov     rbx, cursor"], ["mov~rbx,cursor"]]], "func_feature": [5, 6, 17, 0, 17, 29, 3, 56, 0.06838, 0, 2], "succs": [[1, 10], [0, 2], [0, 2], [11, 5], [3, 6], [10], [1, 10], [4, 6], [11, 6], [9, 15], [9, 15], [8, 12], [8, 16], [8], [13, 14], [], [14]], "fname": "hash_free", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 14, 1, 1, 14, 2, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 60h", "mov     rbx, table", "mov     table, candidate; candidate", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "mov     r12, [table+28h]", "mov     candidate, r12; tuning", "call    compute_bucket_size", "test    new_size_0, new_size_0", "jz      loc_D885"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,table", "mov~table,candidate", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r12,[table+0]", "mov~candidate,r12", "call~FOO", "test~new_size_0,new_size_0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 0, 4, 0.06593406593406594, ["mov     rax, [new_table+78h+var_30]", "mov     [table+48h], rax", "mov     rsi, new_table; src", "mov     edx, 1; safe", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_D880"], ["mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rsi,new_table", "mov~edx,0", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 1, 6, 1, 2, 0, 3, 0.04395604395604396, ["mov     rsi, new_table; src", "mov     edx, 0; safe", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_D880"], ["mov~rsi,new_table", "mov~edx,0", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 60h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.1208791208791209, ["mov     eax, ebp", "mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_D8B3"], ["mov~eax,ebp", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.016483516483516484, ["mov     ebp, 0"], ["mov~ebp,0"]], [1, 0, 10, 0, 1, 6, 1, 2, 0, 3, 0.07692307692307693, ["mov     esi, 10h; size", "mov     rdi, new_size_0; nmemb", "call    _calloc", "mov     [new_table+78h+new_size], rax", "test    rax, rax", "jz      loc_D8AC"], ["mov~esi,0", "mov~rdi,new_size_0", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 0, 3, 0.049450549450549455, ["mov     rbp, new_size_0", "cmp     [table+10h], new_size_0", "jz      loc_D8A5"], ["mov~rbp,new_size_0", "cmp~[table+0],new_size_0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 0, 2, 0.03296703296703297, ["mov     rdi, [new_table+78h+new_size]; ptr", "call    free", "jmp     short loc_D88A"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [4, 0, 8, 2, 1, 22, 1, 2, 0, 3, 0.08241758241758243, ["mov     [new_table+78h+var_68], new_size_0", "shl     new_size_0, 4", "add     rbp, rax", "mov     [new_table+78h+var_70], rbp", "mov     [new_table+78h+var_60], 0", "mov     [new_table+78h+var_58], 0", "mov     [new_table+78h+var_50], r12", "mov     rax, [table+30h]", "mov     [new_table+78h+var_48], rax", "mov     rax, [table+38h]", "mov     [new_table+78h+var_40], rax", "mov     rax, [table+40h]", "mov     [new_table+78h+var_38], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+var_30], rax", "mov     rdi, new_table; dst", "mov     edx, 0; safe", "mov     rsi, table; src", "call    transfer_entries", "mov     ebp, eax", "test    al, al", "jnz     short loc_D84B"], ["mov~[new_table+0],new_size_0", "shl~new_size_0,0", "add~rbp,rax", "mov~[new_table+0],rbp", "mov~[new_table+0],0", "mov~[new_table+0],0", "mov~[new_table+0],r12", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rdi,new_table", "mov~edx,0", "mov~rsi,table", "call~FOO", "mov~ebp,eax", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.016483516483516484, ["mov     ebp, 0", "jmp     short loc_D88A"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 1, 13, 0, 2, 0, 2, 0.016483516483516484, ["mov     rdi, [table]; ptr", "call    free", "mov     rax, [new_table+78h+new_size]", "mov     [table], rax", "mov     rax, [new_table+78h+var_70]", "mov     [table+8], rax", "mov     rax, [new_table+78h+var_68]", "mov     [table+10h], rax", "mov     rax, [new_table+78h+var_60]", "mov     [table+18h], rax", "mov     rax, [new_table+78h+var_30]", "mov     [table+48h], rax", "jmp     short loc_D88A"], ["mov~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.016483516483516484, ["mov     ebp, 1", "jmp     short loc_D88A"], ["mov~ebp,0", "jmp~FOO"]]], "func_feature": [9, 7, 20, 10, 15, 19, 2, 91, 0.0359, 1, 4], "succs": [[8, 6], [], [1, 3], [1, 9], [], [12, 4], [5], [10, 11], [14, 7], [5], [2, 13], [5], [], [5], [5]], "fname": "hash_rehash", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 25, 0, 0, 3, 1, 1, 0, 0, 0.1346153846153846, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_DA9C"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 26, 0, 0, 8, 2, 1, 8, 7, 0.05448717948717949, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_D9F9"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 8, 7, 0.05448717948717949, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 23, 0, 0, 2, 0, 0, 10, 5, 0.06698717948717949, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 5, 0, 1, 5, 1, 2, 9, 3, 0.027243589743589744, ["mov     edi, 10h; size", "call    malloc", "mov     edx, 0FFFFFFFFh", "test    rax, rax", "jnz     loc_D977"], ["mov~edi,0", "call~FOO", "mov~edx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 8, 4, 0.06666666666666667, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_DAE7"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.046153846153846156, ["mov     eax, edx", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_DB2F"], ["mov~eax,edx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 2, 2, 0.005128205128205128, ["mov     edx, 0", "test    matched_ent, matched_ent", "jz      short loc_D8FE"], ["mov~edx,0", "test~matched_ent,matched_ent", "jz~FOO"]], [2, 0, 3, 1, 0, 8, 0, 1, 10, 2, 0.004166666666666667, ["mov     [rax], entry", "mov     rdx, [rsp+28h+bucket]", "mov     rcx, [rdx+8]", "mov     [rax+8], rcx", "mov     [rdx+8], rax", "add     qword ptr [table+20h], 1", "mov     edx, 1", "jmp     loc_D8FE"], ["mov~<TAG>,entry", "mov~rdx,<TAG>", "mov~rcx,[rdx+0]", "mov~[rax+0],rcx", "mov~[rdx+0],rax", "add~[word ptr [table+0],0", "mov~edx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, 2, 0.0016025641025641025, ["jmp     loc_D8FE"], ["jmp~FOO"]], [3, 0, 3, 2, 0, 5, 0, 1, 8, 2, 0.03076923076923077, ["mov     [rax], entry", "add     qword ptr [table+20h], 1", "add     qword ptr [table+18h], 1", "mov     edx, 1", "jmp     loc_D8FE"], ["mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~[word ptr [table+0],0", "mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 15, 2, 0.007692307692307693, ["mov     edx, 0FFFFFFFFh", "jmp     loc_D8FE"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 18, 2, 0.007692307692307693, ["mov     edx, 0FFFFFFFFh", "jmp     loc_D8FE"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.0, ["mov     [matched_ent], data"], ["mov~<TAG>,data"]], [2, 0, 23, 0, 0, 8, 2, 1, 10, 5, 0.06698717948717949, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_DA0F"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, 3, 0.009294871794871795, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [1, 0, 9, 0, 0, 3, 0, 1, 7, 3, 0.125, ["mov     rax, [rsp+28h+bucket]", "cmp     qword ptr [rax], 0", "jz      loc_DB04"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 28, 0, 1, 7, 1, 2, 7, 8, 0.10384615384615385, ["mov     rdi, table; table", "call    check_tuning", "mov     rdx, [table+28h]", "movss   xmm2, dword ptr [rdx+8]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_DA7E"], ["mov~rdi,table", "call~FOO", "mov~rdx,[table+0]", "movss~xmm2,[word ptr [rdx+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 11, 4, 0.15384615384615385, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     loc_D954"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     entry", "pop     matched_ent", "retn"], ["add~rsp,0", "pop~table", "pop~entry", "pop~matched_ent", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 40, 1, 0, 9, 2, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      short loc_D91D"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 14, 3, 0.11666666666666667, ["ucomiss xmm0, cs:dword_18E08", "jnb     loc_DB1B"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 12, 5, 0.11282051282051282, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_DABA"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 1, 1, 2, 8, 0.041025641025641026, ["mov     data, [table+18h]", "test    rax, rax", "js      short loc_D999"], ["mov~data,[table+0]", "test~rax,rax", "js~FOO"]], [1, 0, 38, 0, 1, 8, 1, 2, 1, 3, 0.02435897435897436, ["mov     rbx, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     matched_ent, rsp; bucket_head", "mov     ecx, 0; delete", "call    hash_find_entry", "test    data, data", "jz      short loc_D922"], ["mov~rbx,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~matched_ent,rsp", "mov~ecx,0", "call~FOO", "test~data,data", "jz~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 17, 3, 0.08141025641025641, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_DB25"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 33, 0, 0, 2, 0, 0, 3, 7, 0.02980769230769231, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 33, 0, 0, 8, 2, 1, 3, 7, 0.02980769230769231, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     short loc_D934"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [1, 0, 11, 0, 1, 7, 1, 2, 18, 4, 0.05128205128205128, ["mov     rdx, rsp; bucket_head", "mov     ecx, 0; delete", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_D954"], ["mov~rdx,rsp", "mov~ecx,0", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 13, 4, 0.052243589743589745, ["mulss   xmm0, dword ptr [tuning+0Ch]", "mulss   xmm0, xmm2", "jmp     loc_DA2E"], ["mulss~xmm0,[word ptr [tuning+0]", "mulss~xmm0,xmm2", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 13, 4, 0.052243589743589745, ["mulss   xmm0, dword ptr [tuning+0Ch]"], ["mulss~xmm0,[word ptr [tuning+0]"]], [0, 0, 32, 0, 0, 4, 1, 1, 4, 6, 0.09871794871794871, ["mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      short loc_D9B4"], ["mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 15, 5, 0.09487179487179487, ["ucomiss xmm0, cs:dword_18E0C", "jnb     loc_DAC8"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 5, 5, 0.05576923076923077, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 14, 0, 0, 1, 0, 0, 16, 4, 0.0391025641025641, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 30, 0, 0, 8, 2, 1, 5, 5, 0.05576923076923077, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_D94A"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 6, 4, 0.14487179487179488, ["mulss   xmm0, dword ptr [rdx+8]", "ucomiss xmm1, xmm0", "ja      short loc_D9D2"], ["mulss~xmm0,[word ptr [rdx+0]", "ucomiss~xmm1,xmm0", "ja~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 16, 4, 0.0391025641025641, ["subss   xmm0, cs:dword_18E0C", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_DA4D"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [8, 22, 34, 1, 41, 55, 1, 155, 0.05089, 3, 5], "succs": [[3, 14], [0], [0], [18], [8, 9], [4, 15], [19, 20], [13, 6], [6], [6], [6], [6], [6], [6], [18], [8], [10, 5], [1, 2], [24, 16], [], [], [], [26, 21], [34, 11], [32, 31], [28, 29], [25, 7], [12, 30], [33], [33], [16, 40], [23], [23], [35, 37], [36, 39], [38], [27], [38], [16, 17], [27], []], "fname": "hash_insert_if_absent", "n_num": 41}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 0, 0.26666666666666666, ["mov     err, rbx", "mov     rcx, [rsp+18h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_DB81"], ["mov~err,rbx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    eax, eax", "jnz     short loc_DB61"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     ebx, 0", "jmp     short loc_DB61"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 0, 0.0, ["mov     entry, [rsp+18h+matched_ent]"], ["mov~entry,<TAG>"]], [2, 0, 6, 1, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 10h", "mov     rbx, entry", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "mov     rdx, rsp; matched_ent", "call    hash_insert_if_absent", "cmp     eax, 0FFFFFFFFh", "jz      short loc_DB7A"], ["push~rbx", "sub~rsp,0", "mov~rbx,entry", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, 0, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]]], "func_feature": [2, 3, 6, 1, 7, 8, 2, 23, 0.05714, 1, 2], "succs": [[], [0, 6], [1, 4], [1], [1], [2, 3], []], "fname": "hash_insert", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 3, 0, 0, 0, 0, 0.08559113300492611, ["mulss   xmm0, dword ptr [tuning+4]", "ucomiss xmm0, cs:dword_18E0C", "jnb     loc_DD3E"], ["mulss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, 5, 0.19704433497536947, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_DD5D"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 14, 3, 0.026169950738916255, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 24, 0, 0, 4, 1, 1, 4, 4, 0.14039408866995073, ["mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_DCE4"], ["mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 3, 5, 0.04248768472906404, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_DC03"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 3, 5, 0.04248768472906404, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 18, 0, 0, 2, 0, 0, 8, 5, 0.09421182266009852, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 20, 0, 1, 6, 1, 2, 7, 6, 0.18842364532019704, ["mov     rdi, table; table", "call    check_tuning", "mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_DD02"], ["mov~rdi,table", "call~FOO", "mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 14, 3, 0.026169950738916255, ["subss   xmm0, cs:dword_18E0C", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_DC8F"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 13, 4, 0.08559113300492611, ["mulss   xmm0, dword ptr [tuning+4]", "mulss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_18E0C", "jnb     short loc_DD7A"], ["mulss~xmm0,[word ptr [tuning+0]", "mulss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.0665024630541872, ["mov     rax, data", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_DD99"], ["mov~rax,data", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 5, 3, 0.07758620689655173, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 6, 0, 1, 4, 1, 2, 15, 2, 0.11083743842364532, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_DBC5"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 14, 3, 0.026169950738916255, ["subss   xmm0, cs:dword_18E0C", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_DC8F"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 3, 0.026169950738916255, ["cvttss2si rsi, xmm0", "jmp     loc_DC8F"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [2, 0, 18, 0, 0, 8, 2, 1, 8, 5, 0.09421182266009852, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_DC48"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 6, 2, 0.19950738916256158, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_DBC5"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 5, 3, 0.07758620689655173, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_DC1D"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 16, 3, 0.059113300492610835, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_DCB9"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 29, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rbx, table", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "mov     rdx, rsp; bucket_head", "mov     ecx, 1; delete", "call    hash_find_entry", "mov     rbp, rax", "test    data, data", "jz      short loc_DBC5"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,table", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "mov~ecx,0", "call~FOO", "mov~rbp,rax", "test~data,data", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 17, 3, 0.0, ["mov     r12, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_DCA8"], ["mov~r12,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.007389162561576354, ["mov     qword ptr [table+48h], 0", "jmp     loc_DBC5"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [2, 0, 28, 1, 0, 4, 0, 1, 1, 2, 0.03078817733990148, ["sub     qword ptr [table+20h], 1", "mov     data, [rsp+28h+bucket]", "cmp     qword ptr [rax], 0", "jz      short loc_DBE5"], ["sub~[word ptr [table+0],0", "mov~data,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 9, 4, 0.21798029556650247, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_DD20"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 11, 2, 0.22536945812807882, ["movaps  xmm2, xmm0", "mulss   xmm2, dword ptr [rdx]", "ucomiss xmm2, xmm1", "jbe     loc_DBC5"], ["movaps~xmm2,xmm0", "mulss~xmm2,<TAG>", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [2, 0, 15, 0, 0, 8, 2, 1, 10, 3, 0.10344827586206896, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_DC5E"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 10, 3, 0.10344827586206896, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [1, 0, 27, 1, 0, 5, 1, 1, 2, 6, 0.059113300492610835, ["mov     rax, [table+18h]", "sub     rax, 1", "mov     [table+18h], rax", "test    rax, rax", "js      loc_DCC6"], ["mov~rax,[table+0]", "sub~rax,0", "mov~[table+0],rax", "test~rax,rax", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 20, 24, 1, 30, 43, 1, 129, 0.08046, 2, 4], "succs": [[2, 14], [0, 9], [13], [18, 12], [3], [3], [24], [16, 6], [13], [8, 15], [], [10, 29], [17], [11, 19], [13], [13], [24], [11, 7], [17], [21, 22], [11, 23], [21, 22], [11], [11, 28], [26, 27], [1, 11], [25], [25], [4, 5], []], "fname": "hash_delete", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 3, 1, 15, 1, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, x", "mov     rbx, table_size", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "add     rsp, 8", "pop     table_size", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,x", "mov~rbx,table_size", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "add~rsp,0", "pop~table_size", "pop~p", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 1, 1, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short loc_DDE7"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     eax, 0", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_DDEB"], ["mov~eax,0", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "movzx   eax, al", "and     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "movzx~eax,al", "and~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 17, 0.04167, 0, 2], "succs": [[], [0, 3], [0, 1], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 1, 1, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short loc_DE1E"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     eax, 0", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_DE22"], ["mov~eax,0", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [3, 0, 0, 2, 1, 10, 2, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "movzx   eax, al", "and     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al", "and~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 19, 0.04167, 0, 2], "succs": [[], [0, 3], [0, 1], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 2, 8, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "call    free", "pop     a", "retn"], ["push~rbx", "mov~rbx,x", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "call~FOO", "pop~a", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "triple_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0.13636363636363635, ["fld     cs:dword_18E0C", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jnb     short loc_DEE8"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 1, 6, 0.07575757575757576, ["fld     cs:tbyte_18E70", "fucomip st, st(1)", "jbe     short locret_DEE6"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 8, 0, 0, 9, 1, 0, 3, 4, 0.08333333333333334, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rdx, [rsp+var_18]"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rdx,[rsp+0]"]], [0, 0, 2, 1, 0, 6, 1, 1, 6, 1, 0.13636363636363635, ["cdqe", "add     rax, u", "mov     [rsp+var_20], rax", "fild    [rsp+var_20]", "test    rax, rax", "js      short loc_DF29"], ["cdqe~", "add~rax,u", "mov~[rsp+0],rax", "fild~<TAG>,[rsp+0]", "test~rax,rax", "js~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 6, 2, 0.045454545454545456, ["fucomip st, st(1)", "fstp    st", "setp    al", "movzx   eax, al", "mov     ecx, 1", "cmovnz  eax, ecx", "jmp     short loc_DED3"], ["fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "movzx~eax,al", "mov~ecx,0", "cmovnz~eax,ecx", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.12121212121212122, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 12, 0, 0, 3, 0, 1, 0, 7, 0.0, ["fld     [rsp+value.value]", "cmp     edi, 1", "jz      short locret_DEE6"], ["fld~<TAG>,[rsp+0]", "cmp~edi,0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 7, 0, 0.0, ["fadd    cs:dword_18E08", "jmp     short locret_DEE6"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.0, ["fadd    cs:dword_18E08", "jmp     short loc_DEBD"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, 3, 0.09090909090909091, ["mov     [rsp+var_20], u", "fild    [rsp+var_20]", "test    u, u", "js      short loc_DF21"], ["mov~[rsp+0],u", "fild~<TAG>,[rsp+0]", "test~u,u", "js~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 4, 3, 0.25, ["mov     eax, 0", "test    edi, edi", "jnz     short loc_DED1"], ["mov~eax,0", "test~edi,edi", "jnz~FOO"]], [2, 0, 8, 0, 0, 13, 2, 1, 3, 4, 0.08333333333333334, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fsub    cs:dword_18E0C", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rdx, [rsp+var_18]", "mov     rax, 8000000000000000h", "xor     rdx, rax", "jmp     short loc_DEA6"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fsub~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rdx,[rsp+0]", "mov~rax,0", "xor~rdx,rax", "jmp~FOO"]]], "func_feature": [0, 6, 8, 4, 13, 18, 3, 59, 0.07867, 3, 1], "succs": [[2, 12], [0, 6], [11], [8, 6], [3], [3], [], [1, 6], [6], [4], [9, 4], [10, 5], [11]], "fname": "adjust_value", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 67, 0, 0, 5, 1, 1, 0, 0, 0.05067490276824525, ["mov     from_block_size, [rsp+0C8h+psuffix]", "mov     r15d, 0FFFFFFFFh", "mov     ebp, [rsp+0C8h+opts]", "and     ebp, 10h", "jz      loc_E525"], ["mov~from_block_size,[rsp+0]", "mov~r15d,0", "mov~ebp,[rsp+0]", "and~ebp,0", "jz~FOO"]], [0, 0, 68, 0, 0, 4, 1, 1, 4, 11, 0.008007320979180966, ["test    r2, r2", "setnz   sil", "movzx   esi, sil", "jmp     use_integer_arithmetic"], ["test~r2,r2", "setnz~sil", "movzx~esi,sil", "jmp~FOO"]], [1, 0, 68, 1, 0, 5, 0, 1, 4, 11, 0.008007320979180966, ["cmp     divisor, r2", "setb    sil", "movzx   esi, sil", "add     esi, 2", "jmp     use_integer_arithmetic"], ["cmp~divisor,r2", "setb~sil", "movzx~esi,sil", "add~esi,0", "jmp~FOO"]], [2, 0, 68, 0, 0, 2, 0, 0, 3, 11, 0.012354152367879205, ["mov     esi, 0", "mov     ecx, 0"], ["mov~esi,0", "mov~ecx,0"]], [1, 0, 89, 1, 0, 5, 1, 1, 2, 10, 0.004804392587508579, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "mov     edx, 0", "div     from_block_size", "test    rdx, rdx", "jnz     loc_E062"], ["mov~psuffix_0,[rsp+0]", "mov~edx,0", "div~,from_block_size", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 1, 10, 0.0033173186913749717, ["test    from_block_size, from_block_size", "jz      loc_E062"], ["test~from_block_size,from_block_size", "jz~FOO"]], [0, 0, 66, 0, 0, 4, 0, 1, 5, 11, 0.021734156943491192, ["mov     r8d, [rsp+0C8h+base]", "mov     edi, r8d", "cmp     rdi, amt", "ja      loc_E51A"], ["mov~r8d,[rsp+0]", "mov~edi,r8d", "cmp~rdi,amt", "ja~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 6, 14, 0.02139098604438344, ["mov     r15d, 0", "jmp     short loc_E43E"], ["mov~r15d,0", "jmp~FOO"]], [14, 1, 94, 4, 1, 63, 4, 2, 0, 11, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rbp, n", "mov     r12, buf_0", "mov     [rsp+0C8h+buf], buf_0", "mov     eax, edx", "mov     [rsp+0C8h+opts], edx", "mov     rbx, from_block_size", "mov     r15, to_block_size_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "mov     buf_0, fs:28h", "mov     [rsp+0C8h+var_40], buf_0", "xor     esi, esi", "mov     edi, edx", "and     edi, 3", "mov     [rsp+0C8h+exponent], edi", "and     eax, 20h", "mov     [rsp+0C8h+var_88], eax", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     rdx, rax", "mov     r13, [l]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, r13", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "lea     r14, [rsi-1]", "sub     rcx, 2", "cmp     rcx, 10h", "mov     eax, 1", "cmovnb  pointlen, rax", "lea     rax, asc_18D5B+1; \".\"", "cmovnb  r13, rax", "mov     rax, [l+10h]", "mov     [rsp+0C8h+grouping], rax", "mov     rdi, [l+8]", "mov     l, rdi", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     rax, 11h", "lea     rax, a8+6; \"\"", "cmovb   rax, rdx", "mov     [rsp+0C8h+thousands_sep], rax", "lea     thousands_sep_0, [buf_0+287h]", "mov     [rsp+0C8h+psuffix], rax", "cmp     to_block_size_0, from_block_size", "ja      loc_E1ED"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,n", "mov~r12,buf_0", "mov~[rsp+0],buf_0", "mov~eax,edx", "mov~[rsp+0],edx", "mov~rbx,from_block_size", "mov~r15,to_block_size_0", "mov~[rsp+0],to_block_size_0", "mov~buf_0,<TAG>", "mov~[rsp+0],buf_0", "xor~esi,esi", "mov~edi,edx", "and~edi,0", "mov~[rsp+0],edi", "and~eax,<STR>", "mov~[rsp+0],eax", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~rdx,rax", "mov~r13,<TAG>", "mov~rcx,0", "mov~eax,0", "mov~rdi,r13", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "lea~r14,[rsi-1]+0]", "sub~rcx,0", "cmp~rcx,0", "mov~eax,0", "cmovnb~pointlen,rax", "lea~rax,<TAG>", "cmovnb~r13,rax", "mov~rax,[l+0]", "mov~[rsp+0],rax", "mov~rdi,[l+0]", "mov~l,rdi", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~rax,0", "lea~rax,<TAG>", "cmovb~rax,rdx", "mov~[rsp+0],rax", "lea~thousands_sep_0,[buf_0+0]", "mov~[rsp+0],rax", "cmp~to_block_size_0,from_block_size", "ja~FOO"]], [1, 0, 64, 2, 0, 5, 0, 0, 8, 12, 0.015843056508808052, ["add     esi, edx", "cmp     esi, r8d", "setnbe  sil", "movzx   esi, sil", "add     esi, 2"], ["add~esi,edx", "cmp~esi,r8d", "setnbe~sil", "movzx~esi,sil", "add~esi,0"]], [3, 0, 64, 2, 0, 15, 0, 0, 7, 13, 0.028140013726835965, ["mov     rax, amt", "mov     edx, 0", "div     rdi", "mov     r9, rax", "lea     eax, [rdx+rdx*4]", "lea     eax, [tenths+rax*2]", "mov     edx, 0", "div     r8d", "mov     ecx, esi", "sar     ecx, 1", "lea     edx, [rcx+rdx*2]", "mov     amt, r9", "mov     ecx, eax", "cmp     r8d, edx", "jbe     short loc_E41F"], ["mov~rax,amt", "mov~edx,0", "div~,rdi", "mov~r9,rax", "lea~eax,<TAG>", "lea~eax,<TAG>", "mov~edx,0", "div~,r8d", "mov~ecx,esi", "sar~ecx,0", "lea~edx,<TAG>", "mov~amt,r9", "mov~ecx,eax", "cmp~r8d,edx", "jbe~FOO"]], [8, 0, 36, 2, 2, 32, 0, 2, 9, 6, 0.02470830473575841, ["fdivp   st(1), st", "fld     st", "fstp    [rsp+0C8h+damt.value]", "lea     rsp, [rsp-10h]", "fstp    [rsp+0D8h+value.value]; value", "mov     edi, [rsp+0D8h+exponent]; inexact_style", "call    adjust_value", "fstp    [rsp+0D8h+value.value]", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     from_block_size, [rsp+0D8h+buf]", "mov     rdi, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdx, rbx", "mov     [rsp+0D8h+buf], rbx", "mov     rdi, rbx", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbx, [rsi-1]", "add     decimal_pointlen, 1", "add     rsp, 10h", "cmp     [rsp+0C8h+var_88], 0", "setz    al", "movzx   eax, al", "lea     rax, [nonintegerlen+rax+1]", "cmp     rax, buflen", "jb      short loc_E176"], ["fdivp~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,[rsp+0]", "call~FOO", "fstp~<TAG>,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~from_block_size,[rsp+0]", "mov~rdi,rbx", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdx,rbx", "mov~[rsp+0],rbx", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbx,[rsi-1]+0]", "add~decimal_pointlen,0", "add~rsp,0", "cmp~[rsp+0],0", "setz~al", "movzx~eax,al", "lea~rax,[nonintegerlen+0]", "cmp~rax,buflen", "jb~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 9, 7, 0.004232441088995654, ["fstp    st", "jmp     short loc_E0DF"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 8, 7, 0.013955616563715398, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 88, 1, 0, 5, 1, 1, 1, 10, 0.007206588881262869, ["mov     psuffix_0, from_block_size", "mov     edx, 0", "div     to_block_size_0", "test    rdx, rdx", "jnz     short loc_E062"], ["mov~psuffix_0,from_block_size", "mov~edx,0", "div~,to_block_size_0", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 10, 11, 0.0008007320979180966, ["cmp     rdi, amt", "ja      short loc_E477"], ["cmp~rdi,amt", "ja~FOO"]], [2, 0, 64, 1, 0, 3, 0, 1, 9, 11, 0.04426904598490048, ["add     r15d, 1", "cmp     r15d, 7", "jg      short loc_E477"], ["add~r15d,0", "cmp~r15d,0", "jg~FOO"]], [3, 0, 70, 5, 0, 17, 0, 0, 3, 12, 0.008922443376801648, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     edx, 0", "div     from_block_size", "mov     rsi, rax", "mov     divisor, n", "mov     edx, 0", "div     divisor", "mov     n, rax", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "mov     edx, 0", "div     divisor", "add     rdx, rdx", "mov     buf_0, rbp", "mov     ecx, eax", "cmp     divisor, r2", "jbe     short loc_E256"], ["mov~rax,[rsp+0]", "mov~edx,0", "div~,from_block_size", "mov~rsi,rax", "mov~divisor,n", "mov~edx,0", "div~,divisor", "mov~n,rax", "lea~rax,<TAG>", "add~rax,rax", "mov~edx,0", "div~,divisor", "add~rdx,rdx", "mov~buf_0,rbp", "mov~ecx,eax", "cmp~divisor,r2", "jbe~FOO"]], [3, 0, 30, 1, 1, 21, 0, 2, 9, 6, 0.036604895904827274, ["mov     r12, integerlim", "sub     r12, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rcx, rbp", "mov     rdi, [rsp+0C8h+thousands_sep]", "repne scasb", "mov     rax, rcx", "not     rax", "lea     r14, [rax+rbp]", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r12", "mov     rsi, p_0", "call    ___memcpy_chk", "lea     rax, [rsp+0C8h+var_78]", "mov     [rsp+0C8h+exponent], r15d", "mov     p_0, integerlim", "mov     exponent_0, [rsp+0C8h+grouping]", "mov     integerlim, rax", "jmp     short loc_E680"], ["mov~r12,integerlim", "sub~r12,p_0", "mov~rbp,0", "mov~eax,0", "mov~rcx,rbp", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~r14,<TAG>", "lea~rdi,[rsp+0]", "mov~ecx,0", "mov~rdx,r12", "mov~rsi,p_0", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],r15d", "mov~p_0,integerlim", "mov~exponent_0,[rsp+0]", "mov~integerlim,rax", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 8, 3, 0.22340425531914895, ["test    byte ptr [rsp+0C8h+opts], 4", "jnz     loc_E5FA"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [2, 0, 87, 3, 0, 11, 0, 1, 2, 10, 0.008464882177991307, ["mov     rax, from_block_size", "mov     edx, 0", "div     to_block_size_0", "mov     rcx, rax", "mov     buf_0, n", "imul    r12, multiplier", "mov     multiplier, amt", "mov     edx, 0", "div     multiplier", "cmp     rax, n", "jz      loc_E3E4"], ["mov~rax,from_block_size", "mov~edx,0", "div~,to_block_size_0", "mov~rcx,rax", "mov~buf_0,n", "imul~r12,multiplier", "mov~multiplier,amt", "mov~edx,0", "div~,multiplier", "cmp~rax,n", "jz~FOO"]], [3, 0, 22, 0, 0, 6, 0, 0, 11, 4, 0.032944406314344546, ["mov     r15d, 1", "mov     eax, 1", "mov     edx, [rsp+0C8h+base]", "mov     rcx, [rsp+0C8h+to_block_size]", "cmp     [rsp+0C8h+to_block_size], 1", "jbe     short loc_E6D9"], ["mov~r15d,0", "mov~eax,0", "mov~edx,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~[rsp+0],0", "jbe~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 10, 3, 0.162434225577671, ["test    r15d, r15d", "js      loc_E6A1"], ["test~r15d,r15d", "js~FOO"]], [0, 0, 30, 2, 1, 10, 1, 2, 11, 4, 0.026996110729810112, ["cmp     rbp, r12", "cmova   rbp, r12", "sub     r13, rbp", "sub     r12, rbp", "lea     rsi, [rbx+r12]; src", "mov     rdx, rbp; n", "mov     rdi, r13; dest", "call    _memcpy", "test    r12, r12", "jz      short loc_E697"], ["cmp~rbp,r12", "cmova~rbp,r12", "sub~r13,rbp", "sub~r12,rbp", "lea~rsi,<TAG>", "mov~rdx,rbp", "mov~rdi,r13", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 10, 5, 0.03591855410661176, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_E64C"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 30, 1, 0, 5, 0, 1, 11, 5, 0.0, ["movzx   ebp, al", "cmp     al, 7Fh", "cmovnb  rbp, r12", "add     r15, 1", "jmp     short loc_E64C"], ["movzx~ebp,al", "cmp~al,0", "cmovnb~rbp,r12", "add~r15,0", "jmp~FOO"]], [0, 0, 49, 0, 0, 4, 1, 1, 2, 9, 0.02802562342713338, ["mov     qword ptr [rsp+0C8h+damt.value], from_block_size", "fild    qword ptr [rsp+0C8h+damt.value]", "test    from_block_size, from_block_size", "js      loc_E269"], ["mov~[word ptr [rsp+0],from_block_size", "fild~<TAG>,[word ptr [rsp+0]", "test~from_block_size,from_block_size", "js~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 3, 9, 0.0, ["fadd    cs:dword_18E08", "jmp     loc_E074"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 64, 1, 0, 4, 0, 1, 8, 12, 0.015843056508808052, ["add     esi, edx", "setnz   sil", "movzx   esi, sil", "jmp     short loc_E42F"], ["add~esi,edx", "setnz~sil", "movzx~esi,sil", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 4, 8, 0.0, ["fadd    cs:dword_18E08", "jmp     loc_E08B"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 47, 0, 0, 5, 1, 1, 3, 8, 0.03763440860215054, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     qword ptr [rsp+0C8h+damt.value], rax", "fild    qword ptr [rsp+0C8h+damt.value]", "test    rax, rax", "js      loc_E274"], ["mov~rax,[rsp+0]", "mov~[word ptr [rsp+0],rax", "fild~<TAG>,[word ptr [rsp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 30, 1, 1, 5, 0, 1, 12, 6, 0.00034317089910775565, ["sub     r13, r14", "mov     rdx, r14; n", "mov     rsi, [rsp+0C8h+thousands_sep]; src", "mov     rdi, r13; dest", "call    _memcpy"], ["sub~r13,r14", "mov~rdx,r14", "mov~rsi,[rsp+0]", "mov~rdi,r13", "call~FOO"]], [1, 0, 58, 0, 0, 3, 0, 1, 10, 10, 0.05364905056051247, ["mov     rbx, [rsp+0C8h+psuffix]", "cmp     r12, 9", "ja      loc_E525"], ["mov~rbx,[rsp+0]", "cmp~r12,0", "ja~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 11, 14, 0.02059025394646534, ["cmp     [rsp+0C8h+exponent], 1", "jz      short loc_E4F0"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 45, 0, 0, 5, 1, 1, 4, 7, 0.04632807137954702, ["fdivp   st(1), st", "mov     qword ptr [rsp+0C8h+damt.value], n", "fild    qword ptr [rsp+0C8h+damt.value]", "test    n, n", "js      loc_E27F"], ["fdivp~<TAG>,<TAG>", "mov~[word ptr [rsp+0],n", "fild~<TAG>,[word ptr [rsp+0]", "test~n,n", "js~FOO"]], [1, 0, 55, 0, 0, 5, 2, 0, 12, 13, 0.01138183482040723, ["cmp     [rsp+0C8h+exponent], 0", "setz    al", "test    esi, esi", "setnle  dl", "and     eax, edx"], ["cmp~[rsp+0],0", "setz~al", "test~esi,esi", "setnle~dl", "and~eax,edx"]], [0, 0, 25, 0, 0, 2, 0, 1, 12, 3, 0.014298787462823153, ["mov     r15d, [rsp+0C8h+exponent]", "jmp     loc_E314"], ["mov~r15d,[rsp+0]", "jmp~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 13, 12, 0.032944406314344546, ["test    al, al", "jz      short loc_E4AD"], ["test~al,al", "jz~FOO"]], [2, 0, 55, 1, 0, 6, 1, 1, 12, 13, 0.01138183482040723, ["mov     eax, ecx", "and     eax, 1", "add     eax, esi", "cmp     eax, 2", "setnle  al", "jmp     short loc_E49C"], ["mov~eax,ecx", "and~eax,0", "add~eax,esi", "cmp~eax,0", "setnle~al", "jmp~FOO"]], [1, 0, 43, 0, 0, 3, 1, 1, 5, 6, 0.05410661175932281, ["fmulp   st(1), st", "test    byte ptr [rsp+0C8h+opts], 10h", "jz      loc_E28A"], ["fmulp~<TAG>,<TAG>", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 44, 0, 0, 2, 0, 1, 5, 7, 0.0, ["fadd    cs:dword_18E08", "jmp     loc_E09F"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [3, 0, 53, 1, 0, 4, 0, 1, 14, 12, 0.00503317318691375, ["add     ecx, 1", "mov     esi, 0", "cmp     ecx, 0Ah", "jz      short loc_E4FF"], ["add~ecx,0", "mov~esi,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 50, 0, 0, 2, 1, 1, 14, 11, 0.03197208876687257, ["test    ecx, ecx", "jnz     short loc_E4BE"], ["test~ecx,ecx", "jnz~FOO"]], [1, 0, 49, 0, 0, 3, 1, 1, 15, 11, 0.0029741477922672157, ["mov     ecx, [rsp+0C8h+opts]", "and     ecx, 8", "jnz     loc_E59A"], ["mov~ecx,[rsp+0]", "and~ecx,0", "jnz~FOO"]], [2, 0, 51, 1, 0, 3, 0, 0, 15, 11, 0.005433539235872798, ["add     r12, 1", "cmp     amt, 9", "jbe     short loc_E4B1"], ["add~r12,0", "cmp~amt,0", "jbe~FOO"]], [1, 0, 47, 0, 0, 2, 0, 0, 6, 10, 0.005376344086021506, ["mov     rbx, [rsp+0C8h+psuffix]", "mov     r15d, 0"], ["mov~rbx,[rsp+0]", "mov~r15d,0"]], [1, 0, 41, 0, 0, 5, 0, 0, 6, 9, 0.01098146877144818, ["fld1", "mov     r15d, 0", "mov     eax, [rsp+0C8h+base]", "mov     qword ptr [rsp+0C8h+damt.value], rax", "fild    qword ptr [rsp+0C8h+damt.value]"], ["fld1~<TAG>", "mov~r15d,0", "mov~eax,[rsp+0]", "mov~[word ptr [rsp+0],rax", "fild~<TAG>,[word ptr [rsp+0]"]], [0, 0, 21, 1, 0, 3, 0, 0, 12, 3, 0.018760009151223975, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_E328"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [2, 0, 21, 1, 0, 3, 0, 1, 13, 4, 0.008464882177991307, ["add     r15d, 1", "cmp     r15d, 8", "jnz     short loc_E6BD"], ["add~r15d,0", "cmp~r15d,0", "jnz~FOO"]], [1, 0, 41, 1, 0, 8, 0, 0, 7, 8, 0.014298787462823153, ["fmul    st(1), st", "add     r15d, 1", "fld     st", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "fstp    st(3)", "jb      short loc_E0DD"], ["fmul~<TAG>,<TAG>", "add~r15d,0", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 8, 8, 0.001601464195836193, ["cmp     r15d, 7", "jle     short loc_E0C1"], ["cmp~r15d,0", "jle~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 14, 3, 0.001029512697323267, ["jmp     loc_E328"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 12, 3, 0.001029512697323267, ["mov     r15d, 0", "jmp     loc_E328"], ["mov~r15d,0", "jmp~FOO"]], [7, 0, 33, 1, 2, 22, 0, 2, 6, 5, 0.04529855868222375, ["lea     rsp, [rsp-10h]", "fstp    [rsp+0D8h+value.value]; value", "mov     edi, [rsp+0D8h+exponent]; inexact_style", "call    adjust_value", "fstp    [rsp+0D8h+value.value]", "lea     rcx, a0lf; \"%.0Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     from_block_size, [rsp+0D8h+buf]", "mov     rdi, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     to_block_size_0, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rcx, r15", "mov     rdi, rbx", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rbx, [rax+r15]", "add     rsp, 10h", "mov     r14d, 0"], ["lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,[rsp+0]", "call~FOO", "fstp~<TAG>,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~from_block_size,[rsp+0]", "mov~rdi,rbx", "mov~eax,0", "call~FOO", "mov~to_block_size_0,0", "mov~eax,0", "mov~rcx,r15", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rbx,<TAG>", "add~rsp,0", "mov~r14d,0"]], [1, 0, 4, 0, 0, 3, 0, 1, 19, 3, 0.0, ["lea     psuffix_0, [rsi+2]", "mov     byte ptr [rsi+1], 69h ; 'i'", "jmp     loc_E3A4"], ["lea~psuffix_0,[rsi+0]", "mov~[yte ptr [rsi+0],0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 18, 3, 0.00983756577442233, ["cmp     [rsp+0C8h+var_88], 0", "jnz     loc_E6E4"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 47, 2, 1, 12, 0, 2, 15, 10, 0.03225806451612903, ["mov     rax, [rsp+0C8h+buf]", "lea     rbx, [rax+286h]", "add     ecx, 30h ; '0'", "mov     [rax+286h], cl", "sub     p_0, decimal_pointlen", "mov     rdx, decimal_pointlen; n", "mov     rounding, decimal_point; src", "mov     rdi, p_0; dest", "call    _memcpy", "mov     esi, 0", "mov     ecx, 0", "jmp     short loc_E525"], ["mov~rax,[rsp+0]", "lea~rbx,[rax+0]", "add~ecx,0", "mov~[rax+0],cl", "sub~p_0,decimal_pointlen", "mov~rdx,decimal_pointlen", "mov~rounding,decimal_point", "mov~rdi,p_0", "call~FOO", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.0013726835964310226, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_E3B0"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 8, 0, 0, 5, 1, 1, 16, 3, 0.03980782429649966, ["mov     rsi, [rsp+0C8h+psuffix]", "lea     rdx, [rsi+1]", "mov     [rsi], cl", "test    eax, eax", "jz      loc_E6F1"], ["mov~rsi,[rsp+0]", "lea~rdx,[rsi+0]", "mov~<TAG>,cl", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 14, 3, 0.019560741249142075, ["mov     rdx, [rsp+0C8h+psuffix]", "test    eax, eax", "jnz     loc_E3A4"], ["mov~rdx,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 13, 4, 0.1013498055364905, ["test    r15d, r15d", "jz      loc_E6FB"], ["test~r15d,r15d", "jz~FOO"]], [0, 0, 32, 3, 1, 8, 0, 1, 7, 4, 0.08053077099062, ["mov     decimal_point, [rsp+0C8h+psuffix]", "sub     r13, buflen", "mov     rdx, buflen; n", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdi, p_0; dest", "call    _memmove", "sub     buflen, nonintegerlen", "add     rbx, p_0"], ["mov~decimal_point,[rsp+0]", "sub~r13,buflen", "mov~rdx,buflen", "mov~rsi,[rsp+0]", "mov~rdi,p_0", "call~FOO", "sub~buflen,nonintegerlen", "add~rbx,p_0"]], [1, 0, 35, 0, 0, 2, 1, 1, 10, 5, 0.013383665065202471, ["test    byte ptr [rsp+0C8h+opts], 8", "jz      loc_E2EB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 5, 0.00011439029970258523, ["cmp     byte ptr [rdx+buflen-1], 30h ; '0'", "jnz     loc_E2EB"], ["cmp~[yte ptr [rdx+0],0", "jnz~FOO"]], [7, 0, 33, 1, 2, 27, 0, 3, 10, 5, 0.011324639670555938, ["fld     [rsp+0C8h+damt.value]", "fld     cs:tbyte_18E80", "fmulp   st(1), st", "lea     rsp, [rsp-10h]", "fstp    [rsp+0D8h+value.value]; value", "mov     edi, [rsp+0D8h+exponent]; inexact_style", "call    adjust_value", "fld     cs:tbyte_18E80", "fdivp   st(1), st", "fstp    [rsp+0D8h+value.value]", "lea     rcx, a0lf; \"%.0Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     buflen, [rsp+0D8h+buf]", "mov     rdi, rbx", "mov     eax, 0", "call    ___sprintf_chk", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, rbx", "repne scasb", "mov     rbx, rcx", "not     rbx", "lea     rbx, [rbx-1]", "add     rsp, 10h", "mov     r14d, 0", "jmp     loc_E2EB"], ["fld~<TAG>,[rsp+0]", "fld~<TAG>,<TAG>", "fmulp~<TAG>,<TAG>", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,[rsp+0]", "call~FOO", "fld~<TAG>,<TAG>", "fdivp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "mov~buflen,[rsp+0]", "mov~rdi,rbx", "mov~eax,0", "call~FOO", "mov~rcx,0", "mov~eax,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rbx,rcx", "not~rbx", "lea~rbx,[rbx-1]+0]", "add~rsp,0", "mov~r14d,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 15, 2, 0.0006863417982155113, ["jmp     loc_E3B0"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 10, 1, 0.02104781514527568, ["mov     rax, [rsp+0C8h+psuffix]", "mov     byte ptr [rax], 0", "mov     rax, p_0", "mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "jnz     loc_E70D"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~rax,p_0", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 32, 0, 0, 1, 0, 1, 10, 4, 0.1262868908716541, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 12, 4, 0.012811713566689545, ["lea     decimal_point, [integerlim-1]", "mov     byte ptr [integerlim-1], 31h ; '1'", "jmp     do_grouping"], ["lea~decimal_point,[integerlim-1]+0]", "mov~[yte ptr [integerlim-1]+0],0", "jmp~FOO"]], [2, 0, 47, 0, 0, 4, 0, 1, 16, 10, 0.008064516129032258, ["mov     rbx, [rsp+0C8h+psuffix]", "mov     esi, 0", "mov     ecx, 0", "jmp     short loc_E525"], ["mov~rbx,[rsp+0]", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 9, 2, 0.1921757035003432, ["test    byte ptr [rsp+0C8h+opts], 80h", "jz      loc_E3B0"], ["test~[yte ptr [rsp+0],<STR>", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 5, 9, 0.13955616563715398, ["cmp     [rsp+0C8h+exponent], 1", "jz      short loc_E5A9"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 47, 0, 0, 3, 0, 1, 16, 10, 0.002688172043010753, ["mov     rbx, [rsp+0C8h+psuffix]", "mov     ecx, 0", "jmp     loc_E525"], ["mov~rbx,[rsp+0]", "mov~ecx,0", "jmp~FOO"]], [2, 0, 44, 0, 0, 3, 0, 1, 6, 9, 0.007092198581560284, ["mov     eax, 0", "cmp     [rsp+0C8h+exponent], 0", "jnz     short loc_E542"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 1, 17, 0, 0, 6, 2, 1, 11, 2, 0.12537176847403342, ["mov     esi, [rsp+0C8h+opts]", "mov     eax, esi", "and     eax, 100h", "mov     ebx, eax", "or      ebx, r15d", "jz      short loc_E3B0"], ["mov~esi,[rsp+0]", "mov~eax,esi", "and~eax,<STR>", "mov~ebx,eax", "or~ebx,r15d", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 1, 1, 12, 5, 0.11599176389842142, ["test    sil, 40h", "jz      short loc_E358"], ["test~sil,0", "jz~FOO"]], [0, 0, 43, 1, 0, 4, 1, 0, 7, 9, 0.0, ["add     ecx, esi", "test    ecx, ecx", "setnle  al", "movzx   eax, al"], ["add~ecx,esi", "test~ecx,ecx", "setnle~al", "movzx~eax,al"]], [1, 0, 42, 0, 0, 1, 1, 0, 7, 8, 0.009608785175017159, ["and     eax, 1"], ["and~eax,0"]], [0, 0, 41, 0, 0, 2, 1, 1, 7, 7, 0.14584763212079616, ["test    al, al", "jz      short loc_E560"], ["test~al,al", "jz~FOO"]], [2, 0, 42, 2, 0, 10, 1, 1, 6, 8, 0.13063372226035233, ["mov     rax, amt", "and     eax, 1", "movsxd  rounding, esi", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     ecx, eax", "cmp     ecx, 5", "setnle  al", "jmp     short loc_E545"], ["mov~rax,amt", "and~eax,0", "movsxd~rounding,esi", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~ecx,eax", "cmp~ecx,0", "setnle~al", "jmp~FOO"]], [1, 0, 40, 1, 0, 3, 1, 1, 8, 7, 0.02059025394646534, ["add     amt, 1", "test    ebp, ebp", "jz      short loc_E560"], ["add~amt,0", "test~ebp,ebp", "jz~FOO"]], [0, 1, 15, 0, 0, 4, 0, 0, 13, 5, 0.0, ["mov     rbx, [rsp+0C8h+buf]", "lea     rsi, [rbx+288h]", "mov     [rsp+0C8h+psuffix], rsi", "mov     byte ptr [rbx+287h], 20h ; ' '"], ["mov~rbx,[rsp+0]", "lea~rsi,[rbx+0]", "mov~[rsp+0],rsi", "mov~[yte ptr [rbx+0],<STR>"]], [0, 0, 39, 0, 0, 3, 0, 1, 9, 7, 0.016929764355982615, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jnz     short loc_E560"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 10, 6, 0.01487073896133608, ["cmp     r15d, 7", "jle     short loc_E5C5"], ["cmp~r15d,0", "jle~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 8, 6, 0.12788835506749027, ["mov     decimal_point, integerlim", "mov     rcx, 0CCCCCCCCCCCCCCCDh"], ["mov~decimal_point,integerlim", "mov~rcx,0"]], [1, 0, 11, 0, 0, 2, 0, 1, 14, 5, 0.06485929993136583, ["cmp     [rsp+0C8h+var_88], 0", "jnz     short loc_E373"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 10, 0, 0, 3, 0, 1, 15, 4, 0.02367879203843514, ["mov     ecx, 6Bh ; 'k'", "cmp     r15d, 1", "jz      short loc_E381"], ["mov~ecx,0", "cmp~r15d,0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 15, 4, 0.02367879203843514, ["movsxd  rdx, r15d", "lea     rcx, power_letter", "movzx   ecx, byte ptr [rcx+rdx]"], ["movsxd~rdx,r15d", "lea~rcx,<TAG>", "movzx~ecx,<TAG>"]], [3, 0, 34, 5, 0, 12, 1, 1, 9, 5, 0.12720201326927477, ["sub     p_0, 1", "mov     rax, amt", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     r12d, 30h ; '0'", "mov     [p_0+0], r12b", "mov     r12, rdx", "test    amt, amt", "jnz     short loc_E56D"], ["sub~p_0,0", "mov~rax,amt", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~r12d,0", "mov~[p_0+0],r12b", "mov~r12,rdx", "test~amt,amt", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 17, 3, 0.01990391214824983, ["test    r15d, r15d", "jz      short loc_E3A4"], ["test~r15d,r15d", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 15, 2, 0.0017158544955387784, ["lea     rax, [psuffix_0+1]", "mov     [rsp+0C8h+psuffix], rax", "mov     byte ptr [rdx], 42h ; 'B'"], ["lea~rax,[psuffix_0+0]", "mov~[rsp+0],rax", "mov~<TAG>,0"]], [2, 0, 34, 1, 0, 3, 1, 1, 11, 5, 0.014413177762525738, ["add     r15d, 1", "test    byte ptr [rsp+0C8h+opts], 8", "jz      short loc_E5DD"], ["add~r15d,0", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 33, 1, 1, 9, 0, 2, 12, 5, 0.0, ["mov     byte ptr [rbx-1], 30h ; '0'", "mov     rax, decimal_pointlen", "not     rax", "add     rbx, rax", "mov     rdx, decimal_pointlen; n", "mov     rsi, decimal_point; src", "mov     rdi, p_0; dest", "call    _memcpy", "jmp     short loc_E5D0"], ["mov~[yte ptr [rbx-1]+0],0", "mov~rax,decimal_pointlen", "not~rax", "add~rbx,rax", "mov~rdx,decimal_pointlen", "mov~rsi,decimal_point", "mov~rdi,p_0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [14, 40, 85, 3, 95, 146, 7, 524, 0.0325, 8, 53], "succs": [[72, 6], [0], [0], [0], [17, 26], [26, 4], [45, 7], [10], [5, 14], [16], [9, 28], [64, 62], [11], [11], [26, 20], [32, 10], [32, 15], [1, 2], [24], [18, 71], [26, 3], [52, 47], [75, 21], [36, 31], [25, 23], [23], [27, 30], [30], [16], [34], [34, 29], [24], [72, 33], [35, 38], [40, 39], [37], [71], [41, 42], [37], [53, 46], [39], [42, 44], [56, 43], [56, 73], [43, 70], [72], [49], [48, 75], [51, 47], [50, 13], [49, 12], [75], [75], [61], [91], [91, 54], [72], [67], [57, 90], [65, 91], [59, 86], [19], [61, 63], [64, 61], [61], [67], [], [66, 94], [19], [19], [72], [67, 22], [80, 74], [72], [77, 78], [67, 76], [82, 60], [78], [79], [81, 85], [79], [83, 85], [60], [84, 85], [92, 85], [89], [88, 87], [88, 58], [58], [89, 68], [91, 55], [67], [69, 93], [69], []], "fname": "human_readable", "n_num": 95}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.025664251207729468, ["mov     dword ptr [opts+0], 0", "jmp     loc_E788"], ["mov~[word ptr [opts+0],0", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 3, 4, 0.12530193236714976, ["mov     rsi, rsp; ptr", "lea     r8, valid_suffixes; \"eEgGkKmMpPtTyYzZ0\"", "mov     rcx, block_size; val", "mov     edx, 0; strtol_base", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_E87A"], ["mov~rsi,rsp", "lea~r8,<TAG>", "mov~rcx,block_size", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.13737922705314012, ["mov     [opts+0], ebp", "mov     eax, 0"], ["mov~[opts+0],ebp", "mov~eax,0"]], [2, 2, 6, 1, 1, 9, 1, 2, 3, 4, 0.02566425120772947, ["lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     ebp, 0", "jmp     loc_E77F"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~ebp,0", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 0, 4, 4, 0.10326086956521739, ["movzx   eax, byte ptr [rbx]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_E77F"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [3, 0, 13, 2, 0, 5, 0, 0, 6, 4, 0.03804347826086957, ["add     rbx, 1", "movzx   eax, byte ptr [rbx]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_E77F"], ["add~rbx,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 8, 4, 0.021739130434782608, ["or      ebp, 20h", "jmp     loc_E77F"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 1, 8, 0, 0, 3, 1, 1, 7, 4, 0.03260869565217391, ["or      ebp, 180h", "cmp     byte ptr [rdx-2], 69h ; 'i'", "jnz     loc_E77F"], ["or~ebp,<STR>", "cmp~[yte ptr [rdx-2]+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 4, 1, 0, 3, 4, 0.022946859903381644, ["cdqe", "lea     rdx, block_size_opts", "or      ebp, [rdx+rax*4]", "mov     qword ptr [block_size], 1"], ["cdqe~", "lea~rdx,<TAG>", "or~ebp,<TAG>", "mov~<TAG>,0"]], [0, 0, 22, 0, 1, 5, 1, 2, 2, 5, 0.018417874396135268, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "mov     rbx, rax", "test    rax, rax", "jnz     loc_E73A"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 8, 5, 0.0018115942028985507, ["jmp     short loc_E872"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 2, 0.14492753623188406, ["cmp     qword ptr [block_size], 0", "jz      loc_E899"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, 5, 0.07971014492753624, ["cmp     byte ptr [rdx-1], 42h ; 'B'", "jz      short loc_E887"], ["cmp~[yte ptr [rdx-1]+0],0", "jz~FOO"]], [2, 0, 19, 1, 0, 3, 0, 1, 2, 6, 0.0, ["add     rbx, 1", "mov     ebp, 4", "jmp     loc_E748"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [2, 0, 20, 0, 0, 3, 0, 1, 1, 6, 0.08303140096618358, ["mov     ebp, 0", "cmp     byte ptr [rbx], 27h ; '''", "jz      loc_E80E"], ["mov~ebp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, 1, 0.07971014492753624, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_E8C5"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 2, 0.0, ["lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_E793"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 7, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]], [1, 0, 18, 0, 1, 7, 1, 2, 2, 5, 0.13737922705314012, ["mov     ecx, 4; valsize", "lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      loc_E81C"], ["mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 1, 6, 0.007548309178743962, ["lea     rdi, aLsBlockSize+3; name", "call    _getenv", "mov     spec, rax", "test    rax, rax", "jnz     loc_E73A"], ["lea~rdi,<TAG>", "call~FOO", "mov~spec,rax", "test~rax,rax", "jnz~FOO"]], [0, 1, 24, 1, 0, 13, 2, 1, 0, 7, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, spec", "mov     r13, opts", "mov     r12, block_size", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      short loc_E7B2"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,spec", "mov~r13,opts", "mov~r12,block_size", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 5, 5, 0.10144927536231885, ["mov     rdx, [rsp+38h+var_38]", "cmp     rbx, rdx", "jz      short loc_E868"], ["mov~rdx,<TAG>", "cmp~rbx,rdx", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.009057971014492754, ["cmp     rbx, rdx", "jnz     short loc_E851"], ["cmp~rbx,rdx", "jnz~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 7, 5, 0.021739130434782608, ["or      bpl, 80h"], ["or~bpl,<STR>"]]], "func_feature": [7, 13, 25, 2, 25, 37, 2, 105, 0.0487, 7, 8], "succs": [[11], [0, 4], [11], [2], [2, 22], [2, 23], [2], [2, 10], [2], [3, 14], [6], [16, 15], [24, 7], [18], [18, 13], [17, 21], [15], [], [8, 1], [9, 14], [19, 14], [], [12, 5], [12, 5], [6]], "fname": "human_options", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 3, 1, 1, 0, 0, 0.08888888888888889, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_E901"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.044444444444444446, ["cmp     [tail], edi", "jnz     short loc_E8DE"], ["cmp~<TAG>,edi", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 3, 0.06666666666666667, ["cmp     edi, [tail]", "jz      short loc_E8EB"], ["cmp~edi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.23333333333333334, ["cmp     byte ptr [match+10h], 0", "jz      short loc_E8FA"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [3, 0, 4, 0, 2, 18, 1, 3, 2, 0, 0.08888888888888889, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rdx, rcx", "not     rdx", "lea     rdi, [rdx+17h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n", "call    xmalloc", "mov     tail, rax", "mov     [match], ebp", "lea     rdi, [match+10h]; dest", "mov     rsi, name; src", "call    _strcpy", "mov     rax, cs:user_alist", "mov     [match+8], rax", "mov     cs:user_alist, match", "jmp     short loc_E8EB"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rdi,[rdx+0]", "and~rdi,0", "call~FOO", "mov~tail,rax", "mov~<TAG>,ebp", "lea~rdi,[match+0]", "mov~rsi,name", "call~FOO", "mov~rax,<TAG>", "mov~[match+0],rax", "mov~<TAG>,match", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.044444444444444446, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]], [0, 0, 6, 0, 1, 5, 1, 2, 1, 1, 0.08888888888888889, ["mov     ebp, edi", "call    _getpwuid", "lea     name, a8+6; \"\"", "test    pwent, pwent", "jz      short loc_E917"], ["mov~ebp,edi", "call~FOO", "lea~name,<TAG>", "test~pwent,pwent", "jz~FOO"]], [0, 0, 10, 0, 0, 6, 1, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_E901"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 2, 1, 0.0, ["mov     name, [pwent]"], ["mov~name,<TAG>"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.044444444444444446, ["mov     eax, 0", "jmp     short loc_E8F5"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 11, 0, 11, 16, 2, 46, 0.06364, 2, 0], "succs": [[1, 6], [0, 3], [0, 3], [10, 5], [3], [9], [8, 4], [2, 6], [4], [], [9]], "fname": "getuser", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.08730158730158731, ["cmp     [tail+10h], bpl", "jnz     short loc_E978"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 5, 0.01904761904761905, ["movzx   ebp, byte ptr [user]", "jmp     short loc_E981"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 3, 3, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_E99F"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 3, 0, 0.011111111111111112, ["mov     rax, cs:nouser_alist", "mov     [tail+8], rax", "mov     cs:nouser_alist, tail", "mov     eax, 0", "jmp     short loc_EA35"], ["mov~rax,<TAG>", "mov~[tail+0],rax", "mov~<TAG>,tail", "mov~eax,0", "jmp~FOO"]], [3, 0, 3, 0, 3, 18, 2, 4, 2, 1, 0.1126984126984127, ["mov     rdi, user; name", "call    _getpwnam", "mov     rbp, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, user", "repne scasb", "mov     rdx, rcx", "not     rdx", "lea     rdi, [rdx+17h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n", "call    xmalloc", "mov     tail, rax", "lea     rdi, [tail+10h]; dest", "mov     rsi, r12; src", "call    _strcpy", "test    pwent, pwent", "jz      short loc_EA3A"], ["mov~rdi,user", "call~FOO", "mov~rbp,rax", "mov~rcx,0", "mov~eax,0", "mov~rdi,user", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rdi,[rdx+0]", "and~rdi,0", "call~FOO", "mov~tail,rax", "lea~rdi,[tail+0]", "mov~rsi,r12", "call~FOO", "test~pwent,pwent", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.014285714285714287, ["mov     eax, 0", "jmp     short loc_EA35"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 4, 3, 0.05238095238095239, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_E9B2"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, 2, 0.19841269841269843, ["mov     tail, cs:nouser_alist", "test    tail, tail", "jz      short loc_E9D8"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 15, 0, 0, 7, 1, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, user", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_E99F"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,user", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 3, 3, 0.1285714285714286, ["cmp     [tail+10h], bpl", "jnz     short loc_E9B2"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 2, 4, 0.1142857142857143, ["movzx   ebp, byte ptr [user]", "jmp     short loc_E9BB"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 6, 0, 0, 3, -1, 0.011111111111111112, ["mov     eax, [pwent+10h]", "mov     [tail], eax", "mov     rax, cs:user_alist", "mov     [tail+8], rax", "mov     cs:user_alist, tail", "mov     rax, tail"], ["mov~eax,[pwent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~[tail+0],rax", "mov~<TAG>,tail", "mov~rax,tail"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     tail", "pop     rbp", "pop     r12", "retn"], ["pop~tail", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.015873015873015876, ["mov     rax, tail", "jmp     loc_EA35"], ["mov~rax,tail", "jmp~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 3, 4, 0.03015873015873016, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_E978"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, 2, 0.04761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_E9D8"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]]], "func_feature": [5, 8, 19, 0, 16, 24, 0, 71, 0.06101, 2, 0], "succs": [[2, 14], [0], [0, 7], [12], [11, 3], [12], [5, 15], [10, 4], [1, 7], [6, 15], [9], [12], [], [12], [2, 13], [9, 4]], "fname": "getuidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 10, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_EA8A"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.044444444444444446, ["mov     eax, 0", "jmp     short loc_EA7E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0.044444444444444446, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, 3, 0.06666666666666667, ["cmp     edi, [tail]", "jz      short loc_EA74"], ["cmp~edi,<TAG>", "jz~FOO"]], [3, 0, 4, 0, 2, 18, 1, 3, 0, 0, 0.08888888888888889, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, name", "repne scasb", "mov     rdx, rcx", "not     rdx", "lea     rdi, [rdx+17h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n", "call    xmalloc", "mov     tail, rax", "mov     [match], ebp", "lea     rdi, [match+10h]; dest", "mov     rsi, name; src", "call    _strcpy", "mov     rax, cs:group_alist", "mov     [match+8], rax", "mov     cs:group_alist, match", "jmp     short loc_EA74"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,name", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rdi,[rdx+0]", "and~rdi,0", "call~FOO", "mov~tail,rax", "mov~<TAG>,ebp", "lea~rdi,[match+0]", "mov~rsi,name", "call~FOO", "mov~rax,<TAG>", "mov~[match+0],rax", "mov~<TAG>,match", "jmp~FOO"]], [0, 0, 6, 0, 1, 5, 1, 2, 0, 1, 0.08888888888888889, ["mov     ebp, edi", "call    _getgrgid", "lea     name, a8+6; \"\"", "test    grent, grent", "jz      short loc_EAA0"], ["mov~ebp,edi", "call~FOO", "lea~name,<TAG>", "test~grent,grent", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     name, [grent]"], ["mov~name,<TAG>"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, -1, 0.23333333333333334, ["cmp     byte ptr [match+10h], 0", "jz      short loc_EA83"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 0, 2, 0.08888888888888889, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_EA8A"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, 3, 0.044444444444444446, ["cmp     [tail], edi", "jnz     short loc_EA67"], ["cmp~<TAG>,edi", "jnz~FOO"]]], "func_feature": [3, 4, 11, 0, 11, 16, 2, 46, 0.06364, 2, 0], "succs": [[4, 6], [], [1], [1], [8, 9], [8], [5, 7], [5], [2, 3], [10, 6], [8, 9]], "fname": "getgroup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     tail", "pop     rbp", "pop     r12", "retn"], ["pop~tail", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.015873015873015872, ["mov     rax, tail", "jmp     loc_EBBE"], ["mov~rax,tail", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.014285714285714287, ["mov     eax, 0", "jmp     short loc_EBBE"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 3, 0, 0.011111111111111112, ["mov     rax, cs:nogroup_alist", "mov     [tail+8], rax", "mov     cs:nogroup_alist, tail", "mov     eax, 0", "jmp     short loc_EBBE"], ["mov~rax,<TAG>", "mov~[tail+0],rax", "mov~<TAG>,tail", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 6, 0, 0, 3, -1, 0.011111111111111112, ["mov     eax, [grent+10h]", "mov     [tail], eax", "mov     rax, cs:group_alist", "mov     [tail+8], rax", "mov     cs:group_alist, tail", "mov     rax, tail"], ["mov~eax,[grent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~[tail+0],rax", "mov~<TAG>,tail", "mov~rax,tail"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, 2, 0.04761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_EB61"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 3, 3, 0.1285714285714286, ["cmp     [tail+10h], bpl", "jnz     short loc_EB3B"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 4, 3, 0.05238095238095239, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_EB3B"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 3, 4, 0.03015873015873016, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_EB01"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 3, 3, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_EB28"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 4, 0.08730158730158731, ["cmp     [tail+10h], bpl", "jnz     short loc_EB01"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [3, 0, 3, 0, 3, 18, 2, 4, 2, 1, 0.1126984126984127, ["mov     rdi, group; name", "call    _getgrnam", "mov     rbp, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, group", "repne scasb", "mov     rdx, rcx", "not     rdx", "lea     rdi, [rdx+17h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n", "call    xmalloc", "mov     tail, rax", "lea     rdi, [tail+10h]; dest", "mov     rsi, r12; src", "call    _strcpy", "test    grent, grent", "jz      short loc_EBC3"], ["mov~rdi,group", "call~FOO", "mov~rbp,rax", "mov~rcx,0", "mov~eax,0", "mov~rdi,group", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rdi,[rdx+0]", "and~rdi,0", "call~FOO", "mov~tail,rax", "lea~rdi,[tail+0]", "mov~rsi,r12", "call~FOO", "test~grent,grent", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, 2, 0.19841269841269843, ["mov     tail, cs:nogroup_alist", "test    tail, tail", "jz      short loc_EB61"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 5, 0.01904761904761905, ["movzx   ebp, byte ptr [group]", "jmp     short loc_EB0A"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 2, 4, 0.1142857142857143, ["movzx   ebp, byte ptr [group]", "jmp     short loc_EB44"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 15, 0, 0, 7, 1, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, group", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_EB28"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,group", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]]], "func_feature": [5, 8, 19, 0, 16, 24, 0, 71, 0.06101, 2, 0], "succs": [[], [0], [0], [0], [0], [11, 6], [5, 7], [2, 5], [1, 9], [10, 12], [8, 9], [3, 4], [11, 14], [10], [6], [12, 13]], "fname": "getgidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 1, 1, 0, 3, 0, 1, 0, 0, 0.1, ["sub     rcx, 2", "mov     byte ptr [rsi-1], 2Dh ; '-'", "jmp     short loc_EC2C"], ["sub~rcx,0", "mov~[yte ptr [rsi-1]+0],0", "jmp~FOO"]], [2, 0, 4, 3, 0, 14, 1, 1, 1, 0, 0.2, ["lea     rsi, [p-1]", "mov     rax, i", "imul    r9", "sar     rdx, 2", "mov     rax, i", "sar     rax, 3Fh", "sub     rdx, rax", "lea     rax, [rdx+rdx*4]", "lea     eax, [r8+rax*2]", "sub     eax, edi", "mov     [rcx-1], al", "mov     i, rdx", "test    i, i", "jnz     short loc_EC30"], ["lea~rsi,[p-1]+0]", "mov~rax,i", "imul~,r9", "sar~rdx,0", "mov~rax,i", "sar~rax,0", "sub~rdx,rax", "lea~rax,<TAG>", "lea~eax,<TAG>", "sub~eax,edi", "mov~[rcx-1]+0],al", "mov~i,rdx", "test~i,i", "jnz~FOO"]], [4, 0, 2, 6, 0, 15, 1, 1, 1, 0, 0.05, ["sub     p, 1", "mov     rax, i", "imul    rsi", "sar     rdx, 2", "mov     rax, i", "sar     rax, 3Fh", "sub     rdx, rax", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "mov     [p], dil", "mov     rdi, rdx", "test    i, i", "jnz     short loc_EBFC"], ["sub~p,0", "mov~rax,i", "imul~,rsi", "sar~rdx,0", "mov~rax,i", "sar~rax,0", "sub~rdx,rax", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "mov~<TAG>,dil", "mov~rdi,rdx", "test~i,i", "jnz~FOO"]], [3, 0, 5, 0, 0, 7, 1, 1, 0, 0, 0.0, ["lea     rcx, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 6666666666666667h", "mov     r9, rsi", "mov     r8d, 30h ; '0'", "test    i, i", "js      short loc_EC33"], ["lea~rcx,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0", "mov~r9,rsi", "mov~r8d,0", "test~i,i", "js~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [0, 0, 4, 0, 0, 1, 0, 0, 2, 0, 0.0, ["mov     rcx, p"], ["mov~rcx,p"]]], "func_feature": [0, 3, 4, 0, 6, 8, 1, 42, 0.05833, 0, 10], "succs": [[4], [0, 5], [2, 4], [1, 2], [], [1]], "fname": "imaxtostr", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 2, 5, 0, 12, 1, 1, 0, 0, 0.5, ["sub     p, 1", "mov     rax, i", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "mov     [p], dil", "mov     rdi, rdx", "test    i, i", "jnz     short loc_EC7C"], ["sub~p,0", "mov~rax,i", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "mov~<TAG>,dil", "mov~rdi,rdx", "test~i,i", "jnz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 0, 0, 2, 0.0, ["lea     p, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 0CCCCCCCCCCCCCCCDh"], ["lea~p,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 3, 10, 17, 0.16667, 0, 5], "succs": [[0, 2], [0], []], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 33, 0, 1, 4, 0, 1, 0, 0, 0.040392156862745096, ["mov     rsi, src_chars; n", "mov     rdi, [rsp+68h+str_wc]; s", "call    _wcswidth", "movsxd  r13, eax"], ["mov~rsi,src_chars", "mov~rdi,<TAG>", "call~FOO", "movsxd~r13,eax"]], [1, 0, 40, 0, 0, 6, 1, 1, 5, 6, 0.041176470588235294, ["mov     rax, [rsp+68h+str_wc]", "mov     dword ptr [rax+r13-4], 0", "mov     r13, rax", "mov     edi, [rax]", "test    edi, edi", "jz      loc_EFF5"], ["mov~rax,<TAG>", "mov~[word ptr [rax+0],0", "mov~r13,rax", "mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [1, 0, 38, 1, 0, 4, 1, 1, 8, 5, 0.04627450980392157, ["add     r13, 4", "mov     edi, [r13+0]; wc", "test    edi, edi", "jz      short loc_EE1C"], ["add~r13,0", "mov~edi,[r13+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 38, 0, 1, 3, 1, 2, 7, 6, 0.024313725490196076, ["call    _iswprint", "test    eax, eax", "jnz     short loc_EDF8"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 1, 38, 0, 0, 3, 0, 1, 8, 6, 0.0, ["mov     dword ptr [r13+0], 0FFFDh", "mov     byte ptr [rsp+68h+conversion], 1", "jmp     short loc_EDF8"], ["mov~[word ptr [r13+0],<STR>", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 18, 0, 0, 3, 0, 0, 2, -1, 0.14745098039215684, ["mov     rax, [width]", "cmp     rax, n_cols", "jnb     loc_EED7"], ["mov~rax,<TAG>", "cmp~rax,n_cols", "jnb~FOO"]], [2, 0, 19, 0, 0, 4, 0, 1, 4, -1, 0.010588235294117647, ["mov     r13, n_used_bytes", "mov     [rsp+68h+str_wc], 0", "mov     [rsp+68h+conversion], 0", "jmp     short mbsalign_unibyte"], ["mov~r13,n_used_bytes", "mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 20, 0, 0, 5, 1, 1, 4, -1, 0.012549019607843137, ["mov     r13, n_used_bytes", "mov     [rsp+68h+conversion], 0", "mov     src_chars, 0FFFFFFFFFFFFFFFFh", "test    r12b, 1", "jnz     mbsalign_unibyte"], ["mov~r13,n_used_bytes", "mov~[rsp+0],0", "mov~src_chars,0", "test~r12b,0", "jnz~FOO"]], [2, 0, 20, 0, 0, 3, 1, 1, 10, -1, 0.03803921568627451, ["mov     src_chars, 0FFFFFFFFFFFFFFFFh", "test    r12b, 1", "jnz     mbsalign_unibyte"], ["mov~src_chars,0", "test~r12b,0", "jnz~FOO"]], [1, 0, 19, 0, 1, 9, 0, 2, 12, -1, 0.05215686274509804, ["mov     dword ptr [rbx], 0", "mov     rdx, [rsp+68h+src_size]; n", "mov     rsi, [rsp+68h+str_wc]; pwcs", "mov     r14, [rsp+68h+conversion]", "mov     rdi, r14; s", "call    _wcstombs", "mov     rbx, rax", "mov     [rsp+68h+str_to_print], r14", "jmp     mbsalign_unibyte"], ["mov~<TAG>,0", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~r14,[rsp+0]", "mov~rdi,r14", "call~FOO", "mov~rbx,rax", "mov~[rsp+0],r14", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 0, 0, 1, -1, 0.021568627450980392, ["mov     r13, n_used_bytes", "mov     [rsp+68h+conversion], 0"], ["mov~r13,n_used_bytes", "mov~[rsp+0],0"]], [0, 0, 24, 1, 0, 4, 0, 0, 13, -1, 0.03176470588235294, ["cdqe", "add     rax, r13", "cmp     r14, rax", "jb      short loc_EEA5"], ["cdqe~", "add~rax,r13", "cmp~r14,rax", "jb~FOO"]], [1, 0, 24, 1, 0, 5, 1, 1, 14, -1, 0.001176470588235294, ["add     rbx, 4", "mov     edi, [rbx]; c", "mov     r13, rax", "test    edi, edi", "jz      short loc_EEA5"], ["add~rbx,0", "mov~edi,<TAG>", "mov~r13,rax", "test~edi,edi", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 0, 11, -1, 0.014117647058823528, ["mov     rbx, [rsp+68h+str_wc]", "mov     r13d, 0"], ["mov~rbx,<TAG>", "mov~r13d,0"]], [1, 0, 38, 0, 0, 2, 0, 1, 6, 7, 0.011764705882352941, ["mov     byte ptr [rsp+68h+conversion], 0", "jmp     short loc_EE04"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 24, 0, 1, 3, 0, 2, 12, -1, 0.030196078431372547, ["call    _wcwidth", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_EE6D"], ["call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 11, 0, 0.026666666666666665, ["mov     r13d, 0", "jmp     loc_EE84"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 3, -1, 0.1168627450980392, ["mov     n_used_bytes, rax", "mov     r14d, 0", "jmp     loc_EEE5"], ["mov~n_used_bytes,rax", "mov~r14d,0", "jmp~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 8, 3, 0.03803921568627451, ["lea     rax, [n_used_bytes+1]", "mov     [rsp+68h+src_size], rax"], ["lea~rax,[n_used_bytes+0]", "mov~[rsp+0],rax"]], [0, 0, 32, 0, 0, 3, 0, 0, 7, 4, 0.08588235294117647, ["mov     rax, [width]", "cmp     rax, n_cols", "jnb     loc_EECE"], ["mov~rax,<TAG>", "cmp~rax,n_cols", "jnb~FOO"]], [1, 1, 24, 0, 0, 3, 0, 1, 13, -1, 0.0, ["mov     dword ptr [rbx], 0FFFDh", "mov     eax, 1", "jmp     short loc_EE6D"], ["mov~<TAG>,<STR>", "mov~eax,0", "jmp~FOO"]], [0, 0, 45, 0, 1, 7, 1, 2, 3, 8, 0.03333333333333333, ["lea     r14, [rax+1]", "lea     r13, ds:0[src_chars*4]", "mov     rdi, r13; size", "call    malloc", "mov     [rsp+68h+str_wc], rax", "test    str_wc_0, str_wc_0", "jz      short loc_EDD6"], ["lea~r14,[rax+0]", "lea~r13,<TAG>", "mov~rdi,r13", "call~FOO", "mov~<TAG>,rax", "test~str_wc_0,str_wc_0", "jz~FOO"]], [3, 0, 49, 0, 1, 6, 0, 2, 2, 9, 0.023529411764705882, ["mov     edx, 0; n", "mov     rsi, [rsp+68h+str_to_print]; s", "mov     edi, 0; pwcs", "call    _mbstowcs", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_ED7E"], ["mov~edx,0", "mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [2, 1, 7, 2, 0, 9, 2, 1, 8, -1, 0.0, ["add     rbp, 1", "mov     byte ptr [rbp-1], 20h ; ' '", "cmp     dest_end, rbp", "setnbe  cl", "test    rax, rax", "setnz   dl", "sub     rax, 1", "test    cl, dl", "jnz     short loc_EF84"], ["add~rbp,0", "mov~[yte ptr [rbp-1]+0],<STR>", "cmp~dest_end,rbp", "setnbe~cl", "test~rax,rax", "setnz~dl", "sub~rax,0", "test~cl,dl", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 7, -1, 0.01607843137254902, ["test    start_spaces, start_spaces", "jz      short loc_EFA0"], ["test~start_spaces,start_spaces", "jz~FOO"]], [0, 0, 26, 0, 0, 5, 1, 1, 10, 1, 0.04392156862745098, ["mov     src_chars, [width]", "mov     n_used_bytes, [rsp+68h+str_wc]", "mov     edi, [rbx]", "test    edi, edi", "jz      loc_EE9B"], ["mov~src_chars,<TAG>", "mov~n_used_bytes,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [4, 0, 9, 0, 0, 8, 2, 1, 5, -1, 0.13058823529411764, ["mov     eax, r12d", "and     eax, 4", "mov     eax, 0", "cmovnz  start_spaces, rax", "and     r12d, 8", "cmovnz  end_spaces, rax", "cmp     [rsp+68h+dest_size], 0", "jnz     short loc_EF6C"], ["mov~eax,r12d", "and~eax,0", "mov~eax,0", "cmovnz~start_spaces,rax", "and~r12d,0", "cmovnz~end_spaces,rax", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 13, 0, 0, 5, 1, 1, 4, -1, 0.17137254901960783, ["mov     [width], rax", "mov     r13d, 0", "mov     eax, [rsp+68h+align]", "test    eax, eax", "jz      short loc_EF04"], ["mov~<TAG>,rax", "mov~r13d,0", "mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 10, 0, 0, 6, 1, 1, 6, -1, 0.00196078431372549, ["mov     rax, n_spaces", "shr     rax, 1", "and     r14d, 1", "lea     r13, [r14+rax]", "mov     r14, end_spaces", "jmp     short loc_EF04"], ["mov~rax,n_spaces", "shr~rax,0", "and~r14d,0", "lea~r13,<TAG>", "mov~r14,end_spaces", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 0, 6, -1, 0.00196078431372549, ["mov     r13, n_spaces", "mov     r14d, 0"], ["mov~r13,n_spaces", "mov~r14d,0"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.004705882352941176, ["mov     byte ptr [rdx], 0", "jmp     loc_EF23"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 1, 1, 12, 1, 2, 7, -1, 0.052941176470588235, ["mov     byte ptr [rbp+0], 0", "mov     rdx, dest_end", "sub     rdx, rbp", "cmp     space_left, rbx", "cmova   space_left, rbx; n", "mov     rsi, [rsp+68h+str_to_print]; src", "mov     rdi, rbp; dest", "call    _mempcpy", "mov     rdx, rax", "lea     rcx, [end_spaces-1]", "test    end_spaces, end_spaces", "jz      short loc_EFED"], ["mov~[yte ptr [rbp+0],0", "mov~rdx,dest_end", "sub~rdx,rbp", "cmp~space_left,rbx", "cmova~space_left,rbx", "mov~rsi,[rsp+0]", "mov~rdi,rbp", "call~FOO", "mov~rdx,rax", "lea~rcx,[end_spaces-1]+0]", "test~end_spaces,end_spaces", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.017254901960784313, ["cmp     dest_end, rax", "jbe     short loc_EFED"], ["cmp~dest_end,rax", "jbe~FOO"]], [2, 1, 4, 2, 0, 9, 2, 1, 9, -1, 0.0, ["add     rdx, 1", "mov     byte ptr [rdx-1], 20h ; ' '", "cmp     dest_end, rdx", "setnbe  sil", "test    rcx, rcx", "setnz   al", "sub     rcx, 1", "test    sil, al", "jnz     short loc_EFCF"], ["add~rdx,0", "mov~[yte ptr [rdx-1]+0],<STR>", "cmp~dest_end,rdx", "setnbe~sil", "test~rcx,rcx", "setnz~al", "sub~rcx,0", "test~sil,al", "jnz~FOO"]], [0, 0, 1, 2, 0, 2, 0, 0, 6, -1, 0.011372549019607842, ["add     rbx, start_spaces", "add     end_spaces, rbx"], ["add~rbx,start_spaces", "add~end_spaces,rbx"]], [2, 0, 50, 0, 1, 4, 0, 1, 1, 10, 0.012156862745098038, ["call    ___ctype_get_mb_cur_max", "mov     [rsp+68h+str_wc], 0", "cmp     rax, 1", "jbe     short loc_ECF2"], ["call~FOO", "mov~<TAG>,0", "cmp~rax,0", "jbe~FOO"]], [5, 0, 51, 1, 0, 22, 1, 1, 0, 11, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     [rsp+68h+str_to_print], src", "mov     rbp, dest", "mov     [rsp+68h+dest_size], dest_size_0", "mov     r15, width", "mov     [rsp+68h+align], r8d", "mov     r12d, r9d", "mov     width, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     dest, rcx", "not     rsi", "lea     rbx, [rsi-1]", "mov     [rsp+68h+str_wc], 0", "test    r9b, 2", "jz      short loc_ED18"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],src", "mov~rbp,dest", "mov~[rsp+0],dest_size_0", "mov~r15,width", "mov~[rsp+0],r8d", "mov~r12d,r9d", "mov~width,0", "mov~eax,0", "scasb~<TAG>,", "mov~dest,rcx", "not~rsi", "lea~rbx,[rsi-1]+0]", "mov~<TAG>,0", "test~r9b,0", "jz~FOO"]], [0, 0, 29, 0, 1, 5, 1, 2, 9, 2, 0.08313725490196078, ["mov     rdi, [rsp+68h+src_size]; size", "call    malloc", "mov     [rsp+68h+conversion], rax", "test    newstr_0, newstr_0", "jz      loc_EE57"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "test~newstr_0,newstr_0", "jz~FOO"]], [3, 0, 30, 1, 1, 7, 0, 2, 10, 3, 0.027450980392156862, ["mov     edx, 0; n", "mov     rsi, [rsp+68h+str_wc]; pwcs", "mov     edi, 0; s", "call    _wcstombs", "add     rax, 1", "mov     [rsp+68h+src_size], rax", "jmp     loc_F019"], ["mov~edx,0", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "add~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 42, 0, 1, 6, 1, 2, 4, 7, 0.03529411764705882, ["mov     rdx, src_chars; n", "mov     rsi, [rsp+68h+str_to_print]; s", "mov     rdi, [rsp+68h+str_wc]; pwcs", "call    _mbstowcs", "test    rax, rax", "jz      loc_ECF2"], ["mov~rdx,src_chars", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 34, 0, 1, 6, 0, 2, 9, 4, 0.05568627450980392, ["mov     rsi, src_chars; n", "mov     rdi, [rsp+68h+str_wc]; s", "call    _wcswidth", "movsxd  r13, eax", "cmp     byte ptr [rsp+68h+conversion], 0", "jz      loc_F004"], ["mov~rsi,src_chars", "mov~rdi,<TAG>", "call~FOO", "movsxd~r13,eax", "cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 4, -1, 0.02588235294117647, ["mov     rax, n_cols", "mov     r14d, 0", "jmp     short loc_EEE5"], ["mov~rax,n_cols", "mov~r14d,0", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 3, -1, 0.07058823529411765, ["cmp     n_cols, rax", "jnb     short loc_EF4E"], ["cmp~n_cols,rax", "jnb~FOO"]], [1, 0, 21, 0, 0, 2, 1, 1, 3, -1, 0.007058823529411764, ["test    r12b, 1", "jz      short loc_ED61"], ["test~r12b,0", "jz~FOO"]], [0, 0, 8, 0, 0, 5, 0, 0, 6, -1, 0.09411764705882353, ["mov     rax, [rsp+68h+dest_size]", "lea     r12, [dest+rax-1]", "lea     rax, [start_spaces-1]", "cmp     dest, dest_end", "jnb     short loc_EFA0"], ["mov~rax,[rsp+0]", "lea~r12,[dest+0]", "lea~rax,[start_spaces-1]+0]", "cmp~dest,dest_end", "jnb~FOO"]], [0, 0, 14, 1, 0, 3, 0, 0, 4, -1, 0.02588235294117647, ["sub     rax, n_cols", "mov     r14, rax", "mov     n_spaces, n_cols"], ["sub~rax,n_cols", "mov~r14,rax", "mov~n_spaces,n_cols"]], [1, 0, 17, 0, 0, 1, 0, 0, 8, -1, 0.05019607843137255, ["mov     [rsp+68h+conversion], 0"], ["mov~[rsp+0],0"]], [1, 0, 0, 1, 2, 13, 0, 2, 5, -1, 0.0, ["mov     rdi, [rsp+68h+str_wc]; ptr", "call    free", "mov     rdi, [rsp+68h+conversion]; ptr", "call    free", "mov     rax, ret", "add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     ret", "pop     width", "retn"], ["mov~rdi,<TAG>", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "mov~rax,ret", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~ret", "pop~width", "retn"]], [3, 0, 1, 0, 0, 4, 0, 1, 4, -1, 0.001568627450980392, ["mov     [rsp+68h+str_wc], 0", "mov     [rsp+68h+conversion], 0", "mov     r14, 0FFFFFFFFFFFFFFFFh", "jmp     mbsalign_cleanup"], ["mov~<TAG>,0", "mov~[rsp+0],0", "mov~r14,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.000784313725490196, ["jmp     mbsalign_cleanup"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 11, -1, 0.004705882352941176, ["jmp     mbsalign_cleanup"], ["jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 5, -1, 0.028235294117647056, ["cmp     eax, 1", "jnz     short loc_EF59"], ["cmp~eax,0", "jnz~FOO"]]], "func_feature": [14, 22, 50, 0, 52, 80, 2, 239, 0.03505, 0, 14], "succs": [[19], [0, 14], [40, 3], [2, 4], [2], [17, 42], [5], [49, 5], [50, 5], [5], [5], [9, 12], [9, 15], [9], [3], [11, 20], [15], [27], [37], [18, 46], [11], [7, 39], [43, 21], [31, 23], [31, 23], [16, 13], [34, 44], [26, 51], [26], [26], [34], [32, 30], [33, 30], [33, 30], [47], [10, 22], [10, 35], [8, 25], [37], [1, 10], [19, 38], [27], [41, 45], [48, 6], [24, 31], [27], [42], [], [47], [47], [47], [28, 29]], "fname": "mbsalign", "n_num": 52}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.023809523809523808, ["mov     rdi, nbuf; ptr", "call    free", "mov     ebx, 0", "jmp     short loc_F0C3"], ["mov~rdi,nbuf", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [1, 0, 7, 0, 1, 10, 0, 2, 2, 0, 0.16666666666666666, ["mov     [width], orig_width", "mov     r9d, [rsp+48h+flags]; flags", "mov     r8d, [rsp+48h+align]; align", "mov     rcx, width; width", "mov     rdx, size; dest_size", "mov     rsi, nbuf; dest", "mov     rdi, src; src", "call    mbsalign", "cmp     req, 0FFFFFFFFFFFFFFFFh", "jz      short loc_F0D5"], ["mov~<TAG>,orig_width", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rcx,width", "mov~rdx,size", "mov~rsi,nbuf", "mov~rdi,src", "call~FOO", "cmp~req,0", "jz~FOO"]], [0, 0, 7, 0, 1, 7, 1, 2, 1, 0, 0.23809523809523808, ["lea     rbp, [req+1]", "mov     rsi, size; size", "mov     rdi, buf; ptr", "call    _realloc", "mov     rbx, rax", "test    nbuf, nbuf", "jz      short loc_F0BB"], ["lea~rbp,[req+0]", "mov~rsi,size", "mov~rdi,buf", "call~FOO", "mov~rbx,rax", "test~nbuf,nbuf", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 3, 0, 0.11904761904761904, ["mov     r13, nbuf", "cmp     size, req", "jbe     short loc_F075"], ["mov~r13,nbuf", "cmp~size,req", "jbe~FOO"]], [1, 1, 7, 1, 0, 14, 0, 0, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r15, src", "mov     r12, width", "mov     [rsp+48h+align], edx", "mov     [rsp+48h+flags], ecx", "mov     r14, [width]", "mov     rax, req", "mov     r13d, 0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r15,src", "mov~r12,width", "mov~[rsp+0],edx", "mov~[rsp+0],ecx", "mov~r14,<TAG>", "mov~rax,req", "mov~r13d,0"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, rbx", "add     rsp, 18h", "pop     rbx", "pop     size", "pop     width", "pop     r13", "pop     orig_width", "pop     src", "retn"], ["mov~rax,rbx", "add~rsp,<STR>", "pop~rbx", "pop~size", "pop~width", "pop~r13", "pop~orig_width", "pop~src", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, 0, 0.023809523809523808, ["jmp     short loc_F0C3"], ["jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, 0, 0.047619047619047616, ["mov     rdi, buf; ptr", "call    free"], ["mov~rdi,buf", "call~FOO"]]], "func_feature": [4, 1, 8, 0, 8, 10, 0, 50, 0.07738, 0, 2], "succs": [[5], [0, 3], [1, 7], [2, 6], [2], [], [5], [5]], "fname": "ambsalign", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 12, 0, 0, 2, 1, 1, 0, 0, 0.020905923344947737, ["test    edx, edx", "jnz     short loc_F2C0"], ["test~edx,edx", "jnz~FOO"]], [2, 0, 12, 1, 0, 5, 1, 1, 3, 3, 0.036004645760743324, ["add     p, 1", "movzx   eax, byte ptr [p-1]", "movzx   eax, word ptr [rcx+rax*2]", "test    ah, 40h", "jz      short loc_F27E"], ["add~p,0", "movzx~eax,[yte ptr [p-1]+0]", "movzx~eax,<TAG>", "test~ah,0", "jz~FOO"]], [2, 0, 28, 0, 0, 6, 1, 1, 2, 6, 0.029036004645760744, ["mov     r12d, 0", "lea     r15, [rsp+68h+wc]", "mov     eax, [rsp+68h+flags]", "and     eax, 2", "mov     [rsp+68h+var_60], eax", "jmp     short loc_F182"], ["mov~r12d,0", "lea~r15,[rsp+0]", "mov~eax,[rsp+0]", "and~eax,0", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 1, 3, 0.0156794425087108, ["cmp     p, plimit", "jnb     loc_F2B8"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 12, 0, 0, 2, 1, 1, 5, 3, 0.013356562137049941, ["test    al, 2", "jnz     short loc_F293"], ["test~al,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 6, 2, 0.024099883855981417, ["cmp     plimit, p", "jz      short loc_F25C"], ["cmp~plimit,p", "jz~FOO"]], [1, 0, 12, 1, 0, 2, 0, 1, 5, 3, 0.005226480836236934, ["add     r12d, 1", "jmp     short loc_F293"], ["add~r12d,0", "jmp~FOO"]], [1, 0, 12, 1, 0, 1, 0, 0, 7, 3, 0.004065040650406504, ["add     r12d, 1"], ["add~r12d,0"]], [1, 0, 28, 0, 0, 3, 0, 1, 3, 5, 0.1718931475029036, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jg      short loc_F162"], ["movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 6, 2, 0.15069686411149827, ["cmp     p, plimit", "jnb     loc_F25C"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 4, 4, 0.0313588850174216, ["cmp     al, 25h ; '%'", "jge     short loc_F171"], ["cmp~al,0", "jge~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 2, 0.006097560975609756, ["cmp     r12d, 7FFFFFFFh", "jz      short loc_F25C"], ["cmp~r12d,0", "jz~FOO"]], [1, 1, 28, 1, 0, 3, 0, 0, 5, 4, 0.009872241579558653, ["sub     eax, 20h ; ' '", "cmp     al, 3", "jbe     short loc_F171"], ["sub~eax,<STR>", "cmp~al,0", "jbe~FOO"]], [2, 0, 42, 1, 1, 16, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     rbx, string", "mov     [rsp+68h+flags], edx", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "lea     r14, [p+nbytes]", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     short loc_F139"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,string", "mov~[rsp+0],edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r14,<TAG>", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.0017421602787456446, ["mov     r12d, 0", "jmp     short loc_F25C"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 28, 1, 1, 9, 0, 2, 6, 4, 0.1916376306620209, ["mov     rdx, plimit", "sub     rdx, p; n", "mov     rcx, r13; ps", "mov     rsi, p; s", "mov     rdi, r15; pwc", "call    rpl_mbrtowc", "mov     rbp, rax", "cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_F1A4"], ["mov~rdx,plimit", "sub~rdx,p", "mov~rcx,r13", "mov~rsi,p", "mov~rdi,r15", "call~FOO", "mov~rbp,rax", "cmp~bytes,0", "jz~FOO"]], [1, 0, 28, 0, 0, 3, 0, 1, 5, 5, 0.13472706155632985, ["mov     qword ptr [rsp+68h+mbstate.__count], 0", "lea     r13, [rsp+68h+mbstate]", "jmp     short loc_F201"], ["mov~[word ptr [rsp+0],0", "lea~r13,[rsp+0]", "jmp~FOO"]], [0, 0, 28, 1, 1, 5, 1, 2, 11, 3, 0.08797909407665505, ["add     p, bytes", "mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jnz     loc_F179"], ["add~p,bytes", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 4, 5, 0.12717770034843207, ["cmp     al, 41h ; 'A'", "jl      short loc_F194"], ["cmp~al,0", "jl~FOO"]], [2, 0, 28, 1, 0, 3, 0, 1, 6, 4, 0.009872241579558653, ["sub     eax, 61h ; 'a'", "cmp     al, 1Dh", "ja      short loc_F194"], ["sub~eax,0", "cmp~al,0", "ja~FOO"]], [2, 0, 12, 0, 1, 6, 1, 2, 2, 4, 0.010452961672473868, ["call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     r12d, 0", "mov     edx, [rsp+68h+flags]", "and     edx, 2", "jmp     loc_F298"], ["call~FOO", "mov~rcx,<TAG>", "mov~r12d,0", "mov~edx,[rsp+0]", "and~edx,0", "jmp~FOO"]], [1, 0, 28, 0, 0, 2, 1, 1, 7, 3, 0.03948896631823461, ["test    byte ptr [rsp+68h+flags], 1", "jnz     loc_F24E"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 2, 0.009872241579558653, ["cmp     r12d, 7FFFFFFFh", "jz      short loc_F25C"], ["cmp~r12d,0", "jz~FOO"]], [2, 0, 28, 2, 0, 3, 0, 1, 8, 3, 0.02264808362369338, ["add     p, 1", "add     r12d, 1", "jmp     short loc_F179"], ["add~p,0", "add~r12d,0", "jmp~FOO"]], [1, 0, 28, 0, 1, 7, 2, 2, 8, 4, 0.10394889663182347, ["test    bytes, bytes", "mov     eax, 1", "cmovz   bytes, rax", "mov     edi, [rsp+68h+wc]; c", "call    _wcwidth", "test    eax, eax", "js      short loc_F1CD"], ["test~bytes,bytes", "mov~eax,0", "cmovz~bytes,rax", "mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 7, 4, 0.13879210220673635, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      short loc_F1B9"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 1, 1, 8, 3, 0.02148664343786295, ["test    byte ptr [rsp+68h+flags], 1", "jnz     loc_F24E"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 13, 0, 0, 3, 0, 0, 1, 2, 0.007549361207897794, ["mov     r12d, 0", "cmp     p, plimit", "jnb     loc_F25C"], ["mov~r12d,0", "cmp~p,plimit", "jnb~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.0017421602787456446, ["mov     r12d, 0FFFFFFFFh", "jmp     short loc_F25C"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 28, 1, 0, 4, 0, 1, 9, 3, 0.03832752613240418, ["mov     edx, 7FFFFFFFh", "sub     edx, r12d", "cmp     edx, eax", "jl      short loc_F256"], ["mov~edx,0", "sub~edx,r12d", "cmp~edx,eax", "jl~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.04645760743321719, ["mov     eax, r12d", "mov     rsi, [rsp+68h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_F2C8"], ["mov~eax,r12d", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 28, 1, 0, 3, 0, 1, 9, 3, 0.018002322880371662, ["add     r12d, 1", "mov     rbx, plimit", "jmp     short loc_F179"], ["add~r12d,0", "mov~rbx,plimit", "jmp~FOO"]], [0, 0, 28, 1, 0, 2, 0, 1, 10, 4, 0.023519163763066203, ["add     r12d, eax", "jmp     short loc_F1EE"], ["add~r12d,eax", "jmp~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 9, 3, 0.05226480836236934, ["cmp     [rsp+68h+var_60], 0", "jnz     short loc_F24E"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 2, 0.01132404181184669, ["mov     r12d, 0FFFFFFFFh", "jmp     short loc_F25C"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 10, 2, 0.005226480836236934, ["mov     r12d, 7FFFFFFFh"], ["mov~r12d,0"]], [1, 0, 28, 0, 0, 2, 0, 1, 11, 3, 0.01596980255516841, ["cmp     r12d, 7FFFFFFFh", "jz      short loc_F256"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 28, 0, 1, 4, 1, 2, 10, 4, 0.04965156794425087, ["mov     edi, [rsp+68h+wc]; wc", "call    _iswcntrl", "test    eax, eax", "jnz     short loc_F1EE"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 5, 4, 0.018583042973286876, ["cmp     al, 5Fh ; '_'", "jle     short loc_F171"], ["cmp~al,0", "jle~FOO"]], [1, 0, 28, 1, 0, 1, 0, 0, 12, 4, 0.012775842044134726, ["add     r12d, 1"], ["add~r12d,0"]], [2, 0, 28, 2, 0, 2, 0, 0, 5, 3, 0.029616724738675958, ["add     p, 1", "add     r12d, 1"], ["add~p,0", "add~r12d,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     p", "pop     rbp", "pop     r12", "pop     r13", "pop     plimit", "pop     r15", "retn"], ["add~rsp,0", "pop~p", "pop~rbp", "pop~r12", "pop~r13", "pop~plimit", "pop~r15", "retn"]]], "func_feature": [7, 13, 39, 2, 43, 68, 3, 141, 0.04068, 1, 17], "succs": [[28, 4], [0, 22], [8], [2, 14], [11, 5], [1, 31], [5], [5], [10, 18], [8, 31], [41, 12], [31, 7], [16, 41], [27, 3], [31], [25, 21], [15], [9, 15], [16, 39], [16, 41], [1], [35, 23], [6, 31], [9], [34, 29], [24, 26], [32, 35], [20, 31], [31], [33, 36], [], [42, 30], [9], [17], [35, 38], [31], [31], [40, 36], [17, 37], [41, 19], [17], [9], []], "fname": "mbsnwidth", "n_num": 43}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[4, 0, 0, 2, 1, 13, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, string", "mov     edx, esi; flags", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     flags, rcx", "not     rsi", "lea     rsi, [rsi-1]; nbytes", "mov     rdi, r8; string", "call    mbsnwidth", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,string", "mov~edx,esi", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~flags,rcx", "not~rsi", "lea~rsi,[rsi-1]+0]", "mov~rdi,r8", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 6, 13, 0.0, 0, 2], "succs": [[]], "fname": "gnu_mbswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 19, 1, 1, 15, 0, 2, 0, 0, 0.035573122529644265, ["mov     rax, [rsp+68h+n]", "mov     cmp, rax", "shr     rcx, 1", "mov     r15, rcx", "mov     [rsp+68h+b], rcx", "lea     rdi, [rdi+b_0*8]; base", "mov     [rsp+68h+var_40], rdi", "mov     n_0, blim", "sub     rsi, b_0; n", "mov     b_0, cmp; cmp", "mov     r14, [rsp+68h+tmp]", "mov     tmp_0, r14; tmp", "call    mpsort_with_tmp", "cmp     b_0, 1", "ja      short loc_F3B2"], ["mov~rax,<TAG>", "mov~cmp,rax", "shr~rcx,0", "mov~r15,rcx", "mov~[rsp+0],rcx", "lea~rdi,<TAG>", "mov~[rsp+0],rdi", "mov~n_0,blim", "sub~rsi,b_0", "mov~b_0,cmp", "mov~r14,[rsp+0]", "mov~tmp_0,r14", "call~FOO", "cmp~b_0,0", "ja~FOO"]], [2, 0, 23, 1, 0, 13, 0, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     rbx, base", "mov     [rsp+68h+n], n_0", "mov     [rsp+68h+tmp], tmp_0", "mov     r13, cmp", "cmp     n_0, 2", "ja      short loc_F34D"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,base", "mov~<TAG>,n_0", "mov~[rsp+0],tmp_0", "mov~r13,cmp", "cmp~n_0,0", "ja~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 2, 4, 0.03359683794466403, ["mov     rax, [base]", "mov     [r14], rax"], ["mov~rax,<TAG>", "mov~<TAG>,rax"]], [2, 0, 17, 1, 2, 23, 0, 3, 2, 7, 0.03162055335968379, ["mov     r12, [rsp+68h+n]", "shr     r12, 2", "mov     [rsp+68h+var_48], r12", "lea     rbp, [base+r12*8]", "mov     rsi, [rsp+68h+b]", "sub     rsi, r12; n", "mov     rcx, cmp; cmp", "mov     b_0, [rsp+68h+tmp]", "mov     rdx, r15; tmp", "mov     rdi, rbp; base", "call    mpsort_with_tmp", "mov     rcx, cmp; cmp", "mov     [rsp+68h+tmp], r15", "mov     rdx, r15; tmp", "mov     rsi, r12; n", "mov     rdi, base; base", "call    mpsort_with_tmp", "mov     r15, [base]", "mov     r14, [rbp+0]", "mov     rax, [rsp+68h+tmp]", "lea     rbp, [rax+8]", "mov     [rsp+68h+t], 0", "jmp     short loc_F430"], ["mov~r12,<TAG>", "shr~r12,0", "mov~[rsp+0],r12", "lea~rbp,<TAG>", "mov~rsi,[rsp+0]", "sub~rsi,r12", "mov~rcx,cmp", "mov~b_0,[rsp+0]", "mov~rdx,r15", "mov~rdi,rbp", "call~FOO", "mov~rcx,cmp", "mov~[rsp+0],r15", "mov~rdx,r15", "mov~rsi,r12", "mov~rdi,base", "call~FOO", "mov~r15,<TAG>", "mov~r14,[rbp+0]", "mov~rax,[rsp+0]", "lea~rbp,[rax+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 8, 1, 0, 5, 0, 1, 5, 5, 0.07905138339920947, ["mov     [base+i*8-8], tt", "add     [rsp+68h+t], 1", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+b], t_0", "jz      loc_F33E"], ["mov~[base+0],tt", "add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],t_0", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 4, 2, 0.2193675889328063, ["mov     rsi, bb", "mov     rdi, tt", "call    cmp", "test    eax, eax", "jle     short loc_F483"], ["mov~rsi,bb", "mov~rdi,tt", "call~cmp", "test~eax,eax", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.005928853754940711, ["cmp     n_0, 2", "jnz     short loc_F33E"], ["cmp~n_0,0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 4, 0.023715415019762844, ["mov     rdx, [rsp+68h+tmp]", "mov     tt, [rdx+t_0*8]"], ["mov~rdx,[rsp+0]", "mov~tt,<TAG>"]], [1, 0, 17, 1, 0, 6, 0, 1, 4, 6, 0.03359683794466403, ["mov     rdi, rbp; dest", "mov     [rbp-8], r15", "add     [rsp+68h+t], 1", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+var_48], rax", "jz      short loc_F455"], ["mov~rdi,rbp", "mov~[rbp-8]+0],r15", "add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [0, 0, 17, 0, 1, 5, 1, 2, 3, 6, 0.1541501976284585, ["mov     rsi, r14", "mov     rdi, r15", "call    cmp", "test    eax, eax", "jle     short loc_F40F"], ["mov~rsi,r14", "mov~rdi,r15", "call~cmp", "test~eax,eax", "jle~FOO"]], [1, 0, 8, 1, 0, 1, 0, 0, 7, 3, 0.037549407114624504, ["add     i, 1"], ["add~i,0"]], [0, 0, 8, 0, 0, 2, 0, 1, 6, 4, 0.021739130434782608, ["mov     bb, [base+b_0*8]", "jmp     short loc_F4A7"], ["mov~bb,<TAG>", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 5, 8, 0.011857707509881422, ["mov     r15, [base+rax*8]"], ["mov~r15,<TAG>"]], [1, 0, 17, 1, 0, 1, 0, 0, 6, 7, 0.07312252964426877, ["add     rbp, 8"], ["add~rbp,0"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, 8, 0.01383399209486166, ["mov     r14, [base+r12*8]", "jmp     short loc_F42C"], ["mov~r14,<TAG>", "jmp~FOO"]], [2, 0, 8, 0, 0, 8, 0, 1, 3, 3, 0.18774703557312253, ["mov     rax, [rsp+68h+tmp]", "mov     r15, [rax]", "mov     rax, [rsp+68h+var_40]", "mov     r14, [rax]", "mov     r12, [rsp+68h+b]", "mov     ebp, 1", "mov     [rsp+68h+t], 0", "jmp     loc_F4AB"], ["mov~rax,[rsp+0]", "mov~r15,<TAG>", "mov~rax,[rsp+0]", "mov~r14,<TAG>", "mov~r12,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 9, 2, 1, 7, 0, 2, 5, 4, 0.14229249011857706, ["mov     rdx, [rsp+68h+var_48]", "mov     rax, [rsp+68h+t]", "sub     rdx, rax", "shl     rdx, 3; n", "lea     rsi, [base+rax*8]; src", "call    _memcpy", "jmp     loc_F38A"], ["mov~rdx,[rsp+0]", "mov~rax,[rsp+0]", "sub~rdx,rax", "shl~rdx,0", "lea~rsi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 1, 7, 1, 2, 2, -1, 0.003952569169960474, ["mov     rbp, [base]", "mov     r12, [base+8]", "mov     n_0, p1", "mov     base, p0", "call    cmp", "test    eax, eax", "jle     short loc_F33E"], ["mov~rbp,<TAG>", "mov~r12,[base+0]", "mov~n_0,p1", "mov~base,p0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     [base], p1", "mov     [base+8], p0"], ["mov~<TAG>,p1", "mov~[base+0],p0"]], [1, 0, 8, 1, 0, 4, 0, 1, 5, 1, 0.08300395256916995, ["mov     [base+i*8-8], bb", "add     b_0, 1", "cmp     [rsp+68h+n], b_0", "jz      short loc_F4CD"], ["mov~[base+0],bb", "add~b_0,0", "cmp~<TAG>,b_0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "pop     base", "pop     rbp", "pop     r12", "pop     cmp", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~base", "pop~rbp", "pop~r12", "pop~cmp", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 2, 1, 9, 0, 2, 6, 0, 0.001976284584980237, ["lea     rdi, [base+i*8]; dest", "mov     rdx, [rsp+68h+b]", "mov     rax, [rsp+68h+t]", "sub     rdx, rax", "shl     rdx, 3; n", "mov     rcx, [rsp+68h+tmp]", "lea     rsi, [rcx+rax*8]; src", "call    _memcpy", "jmp     loc_F33E"], ["lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rax,[rsp+0]", "sub~rdx,rax", "shl~rdx,0", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 17, 1, 0, 5, 0, 1, 4, 5, 0.12055335968379446, ["mov     rdi, rbp", "mov     [rbp-8], r14", "add     r12, 1", "cmp     [rsp+68h+b], r12", "jz      short loc_F464"], ["mov~rdi,rbp", "mov~[rbp-8]+0],r14", "add~r12,0", "cmp~[rsp+0],r12", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 5, 5, 0.01976284584980237, ["mov     rax, [rsp+68h+b]", "mov     [rsp+68h+var_48], rax", "mov     [rsp+68h+t], r12"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],r12"]]], "func_feature": [8, 3, 24, 2, 24, 33, 4, 138, 0.05558, 0, 14], "succs": [[2, 3], [0, 6], [15], [9], [20, 7], [19, 4], [17, 20], [10], [12, 23], [8, 22], [5], [10], [13], [9], [13], [5], [15], [18, 20], [20], [11, 21], [], [20], [16, 14], [16]], "fname": "mpsort_with_tmp", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rax, [base+n*8]", "mov     rcx, cmp; cmp", "mov     cmp, rax; tmp", "call    mpsort_with_tmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rax,<TAG>", "mov~rcx,cmp", "mov~cmp,rax", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 7, 0.0, 0, 2], "succs": [[]], "fname": "mpsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 1, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     r12, src", "lea     rbx, [rdx-1]", "call    ___ctype_tolower_loc"], ["mov~r12,src", "lea~rbx,[rdx-1]+0]", "call~FOO"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, dest", "test    rdx, rdx", "jz      short loc_F53E"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,dest", "test~rdx,rdx", "jz~FOO"]], [2, 0, 2, 1, 0, 7, 0, 1, 2, 1, 0.16666666666666666, ["movzx   ecx, byte ptr [src+len]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [dest+len+0], dl", "sub     len, 1", "cmp     len, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_F525"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[dest+0],dl", "sub~len,0", "cmp~len,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, dest", "pop     rbx", "pop     dest", "pop     r12", "retn"], ["mov~rax,dest", "pop~rbx", "pop~dest", "pop~r12", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 5, 2, 21, 0.08333, 0, 1], "succs": [[2], [0, 3], [2, 3], []], "fname": "memcpy_lowcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, dest", "test    rdx, rdx", "jz      short loc_F577"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,dest", "test~rdx,rdx", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 0, 2, 0.16666666666666666, ["mov     r12, src", "lea     rbx, [rdx-1]", "call    ___ctype_toupper_loc"], ["mov~r12,src", "lea~rbx,[rdx-1]+0]", "call~FOO"]], [2, 0, 2, 1, 0, 7, 0, 1, 0, 1, 0.16666666666666666, ["movzx   ecx, byte ptr [src+len]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [dest+len+0], dl", "sub     len, 1", "cmp     len, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_F55E"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[dest+0],dl", "sub~len,0", "cmp~len,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, dest", "pop     rbx", "pop     dest", "pop     r12", "retn"], ["mov~rax,dest", "pop~rbx", "pop~dest", "pop~r12", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 5, 4, 21, 0.08333, 0, 1], "succs": [[1, 3], [2], [2, 3], []], "fname": "memcpy_uppcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 333, 1, 0, 3, 0, 1, 0, 0, 0.023733604902287844, ["add     i, _incr", "mov     _incr, f", "jmp     loc_F6C6"], ["add~i,_incr", "mov~_incr,f", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 13, 6, 0.023549242357733566, ["test    p, p", "jz      short loc_103FC"], ["test~p,p", "jz~FOO"]], [2, 0, 333, 1, 0, 2, 0, 0, 15, 6, 0.014450511825540356, ["mov     byte ptr [p], 0Ah", "add     p, 1"], ["mov~<TAG>,0", "add~p,0"]], [0, 0, 333, 0, 0, 2, 0, 0, 14, 9, 0.02844450687408916, ["cmp     _n, _w", "jnb     short loc_10B26"], ["cmp~_n,_w", "jnb~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 13, 6, 0.03754323740628237, ["test    p, p", "jz      short loc_10B57"], ["test~p,p", "jz~FOO"]], [0, 0, 335, 0, 0, 3, 1, 1, 2, 4, 0.008823064632240618, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      loc_10D6D"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 336, 0, 0, 4, 1, 1, 1, 5, 0.0014749003564342525, ["test    r12d, r12d", "mov     eax, 0Ch", "cmovz   r12d, eax", "jmp     loc_F5FF"], ["test~r12d,r12d", "mov~eax,0", "cmovz~r12d,eax", "jmp~FOO"]], [1, 0, 336, 1, 0, 1, 0, 0, 1, 5, 0.0014749003564342525, ["sub     r12d, 0Ch"], ["sub~r12d,0"]], [1, 0, 333, 0, 0, 1, 0, 0, 12, 7, 0.0014353940968869067, ["mov     byte ptr [rsp+4F8h+subwidth], 1; jumptable 000000000000F7EE case 80"], ["mov~[yte ptr [rsp+0],0"]], [0, 0, 333, 1, 0, 5, 0, 1, 11, 4, 0.7183467069337874, ["movzx   eax, sil", "lea     rbx, off_18FA0", "movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["movzx~eax,sil", "lea~rbx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [1, 0, 333, 0, 0, 2, 0, 0, 14, 7, 0.01431882429371587, ["cmp     _w, 1", "jbe     short loc_10647"], ["cmp~_w,0", "jbe~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 13, 6, 0.023549242357733566, ["test    p, p", "jz      short loc_10650"], ["test~p,p", "jz~FOO"]], [2, 1, 333, 2, 0, 6, 0, 1, 14, 7, 0.008682597931627832, ["add     colons, 1", "mov     rdx, rsi", "add     rsi, 1", "movzx   eax, byte ptr [rsi-1]", "cmp     al, 3Ah ; ':'", "jnz     loc_F8A3"], ["add~colons,0", "mov~rdx,rsi", "add~rsi,0", "movzx~eax,[yte ptr [rsi-1]+0]", "cmp~al,<STR>", "jnz~FOO"]], [0, 0, 333, 0, 0, 1, 0, 1, 15, 8, 0.0, ["jmp     short loc_10B80"], ["jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 0, 13, 8, 0.005741576387547627, ["lea     rsi, [f+2]", "mov     r11d, 1"], ["lea~rsi,[f+0]", "mov~r11d,0"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 4, 0.07351383304362077, ["cmp     [rsp+4F8h+pad], 5Fh ; '_'", "jz      loc_FF64"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 333, 2, 0, 8, 1, 1, 16, 5, 0.06197654206099766, ["mov     digits_0, [rsp+4F8h+bufp]", "sub     rax, bufp_0", "mov     r15d, dword ptr [rsp+4F8h+subfmt]", "sub     r15d, eax", "mov     byte ptr [rsp+4F8h+sign_char], 0", "mov     byte ptr [rsp+4F8h+subwidth], 0", "test    r15d, r15d", "jg      loc_10E05"], ["mov~digits_0,[rsp+0]", "sub~rax,bufp_0", "mov~r15d,[word ptr [rsp+0]", "sub~r15d,eax", "mov~[yte ptr [rsp+0],0", "mov~[yte ptr [rsp+0],0", "test~r15d,r15d", "jg~FOO"]], [1, 0, 333, 3, 0, 12, 1, 1, 17, 5, 0.05540094463856162, ["cmp     byte ptr [rsp+4F8h+sign_char], 0", "setnz   byte ptr [rsp+4F8h+subwidth]", "movzx   edi, byte ptr [rsp+4F8h+subwidth]", "mov     digits_0, [rsp+4F8h+bufp]", "sub     rax, bufp_0", "mov     edx, dword ptr [rsp+4F8h+subfmt]", "sub     edx, eax", "movzx   eax, dil", "sub     edx, eax", "mov     r15d, edx", "test    edx, edx", "jle     loc_100FD"], ["cmp~[yte ptr [rsp+0],0", "setnz~[yte ptr [rsp+0]", "movzx~edi,[yte ptr [rsp+0]", "mov~digits_0,[rsp+0]", "sub~rax,bufp_0", "mov~edx,[word ptr [rsp+0]", "sub~edx,eax", "movzx~eax,dil", "sub~edx,eax", "mov~r15d,edx", "test~edx,edx", "jle~FOO"]], [0, 0, 333, 0, 1, 5, 0, 2, 18, 7, 0.010038979509420046, ["mov     rdx, _n; n", "mov     rsi, rbp; src", "mov     rdi, p; dest", "call    _memcpy", "jmp     short loc_10D45"], ["mov~rdx,_n", "mov~rsi,rbp", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 8, 0.022939968043825608, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      short loc_10D55"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.0051833010632371355, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 106", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.0031026380604102437, ["cmp     ecx, 4Fh ; 'O'; jumptable 000000000000F7EE case 99", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 333, 3, 0, 7, 0, 1, 14, 4, 0.03833424051410812, ["add     ebx, 1", "mov     ebp, eax", "sub     ebp, ebx", "movsxd  rbp, ebp", "add     rbp, r15", "cmp     byte ptr [rbp+0], 25h ; '%'", "jnz     short loc_FC01"], ["add~ebx,0", "mov~ebp,eax", "sub~ebp,ebx", "movsxd~rbp,ebp", "add~rbp,r15", "cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 333, 0, 0, 2, 0, 0, 13, 5, 0.03830790300774323, ["mov     ebx, 1", "mov     eax, 1"], ["mov~ebx,0", "mov~eax,0"]], [1, 1, 333, 2, 1, 7, 0, 1, 25, 6, 0.0, ["movsxd  padding_0, r14d", "sub     r15, 1", "mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     _incr_0, p; s", "call    _memset", "add     p, _delta"], ["movsxd~padding_0,r14d", "sub~r15,0", "mov~rdx,_delta", "mov~esi,<STR>", "mov~_incr_0,p", "call~FOO", "add~p,_delta"]], [1, 0, 333, 0, 0, 2, 0, 0, 24, 6, 0.0028795673625621123, ["cmp     _w, 1", "jbe     short loc_10017"], ["cmp~_w,0", "jbe~FOO"]], [0, 0, 333, 0, 1, 6, 0, 2, 19, 7, 0.022773163836847927, ["mov     rax, [rsp+4F8h+var_4E0]", "lea     rsi, [rax+1]; src", "mov     rdx, _n; len", "mov     rdi, p; dest", "call    memcpy_lowcase", "jmp     short loc_FB16"], ["mov~rax,[rsp+0]", "lea~rsi,[rax+0]", "mov~rdx,_n", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 18, 8, 0.031394307586957666, ["cmp     byte ptr [rsp+4F8h+subwidth], 0", "jnz     short loc_FB21"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [2, 0, 333, 1, 0, 5, 0, 1, 15, 8, 0.00862114375010974, ["movsxd  change_case, r14d", "sub     rbp, 1", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      short loc_10634"], ["movsxd~change_case,r14d", "sub~rbp,0", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 333, 0, 0, 5, 0, 1, 15, 4, 0.001448562850069355, ["mov     dword ptr [rsp+4F8h+subwidth], 4", "lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     [rsp+4F8h+subfmt], rax", "mov     [rsp+4F8h+pad], 2Bh ; '+'", "jmp     subformat_width"], ["mov~[word ptr [rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 0, 14, 5, 0.0028795673625621123, ["test    r14d, r14d", "jns     short loc_10220"], ["test~r14d,r14d", "jns~FOO"]], [2, 0, 333, 1, 0, 6, 0, 1, 23, 7, 0.00862114375010974, ["movsxd  _w, r14d", "sub     rax, 1", "mov     [rsp+4F8h+subwidth], rax", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      short loc_1017A"], ["movsxd~_w,r14d", "sub~rax,0", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 0, 22, 6, 0.011474373606306954, ["cmp     _w, 1", "jbe     short loc_10191"], ["cmp~_w,0", "jbe~FOO"]], [3, 0, 333, 0, 0, 9, 1, 1, 13, 6, 0.0027478798307376258, ["test    bpl, bpl", "movzx   eax, byte ptr [rsp+4F8h+to_uppcase_0]", "cmovnz  eax, ebp", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "mov     rbx, f", "mov     edi, 42h ; 'B'", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["test~bpl,bpl", "movzx~eax,[yte ptr [rsp+0]", "cmovnz~eax,ebp", "mov~[yte ptr [rsp+0],al", "mov~rbx,f", "mov~edi,0", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 66", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 1, 0, 3, 0, 0, 24, 5, 0.00869137710041613, ["movzx   eax, byte ptr [rsp+4F8h+sign_char]", "mov     [p], al", "add     p, 1"], ["movzx~eax,[yte ptr [rsp+0]", "mov~<TAG>,al", "add~p,0"]], [1, 0, 333, 0, 0, 2, 0, 1, 23, 6, 0.00861236458132144, ["cmp     dword ptr [rsp+4F8h+subfmt], 0", "jnz     short loc_10017"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 333, 1, 0, 6, 0, 0, 18, 3, 0.039561860949671956, ["mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "mov     esi, dword ptr [rsp+4F8h+subfmt]", "movsxd  rax, esi", "cmp     rax, rdx", "jnb     loc_F666"], ["mov~rdx,<TAG>", "sub~rdx,i", "mov~esi,[word ptr [rsp+0]", "movsxd~rax,esi", "cmp~rax,rdx", "jnb~FOO"]], [1, 0, 333, 0, 0, 5, 1, 0, 13, 6, 0.004174494758836233, ["test    bpl, bpl", "movzx   eax, byte ptr [rsp+4F8h+to_uppcase_0]", "cmovnz  eax, ebp", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "mov     edi, 61h ; 'a'"], ["test~bpl,bpl", "movzx~eax,[yte ptr [rsp+0]", "cmovnz~eax,ebp", "mov~[yte ptr [rsp+0],al", "mov~edi,0"]], [0, 0, 333, 0, 0, 2, 1, 1, 12, 6, 0.0045292529885088365, ["test    ecx, ecx; jumptable 000000000000F7EE case 97", "jnz     loc_FBF7"], ["test~ecx,ecx", "jnz~FOO"]], [0, 0, 333, 0, 1, 4, 0, 1, 16, 7, 0.019955050655803903, ["mov     rdx, _n; len", "mov     rsi, [rsp+4F8h+src]; src", "mov     rdi, p; dest", "call    memcpy_lowcase"], ["mov~rdx,_n", "mov~rsi,[rsp+0]", "mov~rdi,p", "call~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 15, 8, 0.028576194405913646, ["test    bpl, bpl", "jnz     short loc_10B44"], ["test~bpl,bpl", "jnz~FOO"]], [3, 0, 333, 0, 0, 5, 0, 1, 13, 6, 0.0027478798307376258, ["mov     rbx, f", "mov     edi, 63h ; 'c'", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["mov~rbx,f", "mov~edi,0", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 1, 0, 2, 0, 1, 23, 4, 0.017268625006584375, ["add     i, [rsp+4F8h+subwidth]", "jmp     short loc_10077"], ["add~i,[rsp+0]", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 22, 5, 0.01713693747475989, ["test    p, p", "jz      short loc_10024"], ["test~p,p", "jz~FOO"]], [2, 0, 333, 0, 0, 4, 0, 1, 14, 9, 0.0036696925535090338, ["mov     ebp, [rsp+4F8h+number_value]", "mov     dword ptr [rsp+4F8h+subfmt], 9", "mov     r14d, 9", "jmp     do_number"], ["mov~ebp,[rsp+0]", "mov~[word ptr [rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 13, 10, 0.0180236335223781, ["cmp     r14d, 0FFFFFFFFh", "jz      loc_FE17"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 21, 10, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      loc_101A6"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 333, 1, 0, 5, 0, 1, 20, 10, 0.00862114375010974, ["movsxd  width_0, r14d", "sub     width_0, _n", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      loc_101A6"], ["movsxd~width_0,r14d", "sub~width_0,_n", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 21, 7, 0.025600056186680244, ["test    p, p", "jz      loc_1004B"], ["test~p,p", "jz~FOO"]], [2, 0, 333, 0, 0, 10, 2, 0, 20, 3, 0.02564395203062174, ["test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     ecx, 1", "cmovnz  rcx, _w", "mov     [rsp+4F8h+subwidth], rcx", "cmp     rdx, _incr_1", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~ecx,0", "cmovnz~rcx,_w", "mov~[rsp+0],rcx", "cmp~rdx,_incr_1", "jbe~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 8, 0.01243715578342373, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 121", "jz      loc_10DC0"], ["cmp~ecx,0", "jz~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 17, 7, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     format_char, p; s", "call    _memset", "add     p, _delta", "jmp     short loc_10647"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~format_char,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 16, 8, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      short loc_10634"], ["cmp~eax,0", "jz~FOO"]], [11, 0, 333, 10, 0, 30, 1, 1, 15, 9, 0.04477376082032553, ["and     r8d, 1", "mov     edx, 91A2B3C5h", "mov     eax, r10d", "imul    edx", "lea     ebp, [rdx+diff]", "sar     ebp, 0Bh", "mov     ebx, r10d", "sar     ebx, 1Fh", "sub     ebp, ebx", "mov     esi, 88888889h", "mov     eax, r10d", "imul    esi", "lea     r9d, [rdx+diff]", "sar     r9d, 5", "sub     r9d, ebx", "mov     eax, r9d", "imul    esi", "lea     esi, [rdx+r9]", "sar     esi, 5", "mov     eax, r9d", "sar     eax, 1Fh", "sub     esi, eax", "imul    esi, 3Ch", "mov     eax, r9d", "sub     eax, esi", "mov     esi, eax", "imul    r9d, 3Ch", "sub     r10d, r9d", "cmp     colons, 1", "jz      short tz_hh_mm"], ["and~r8d,0", "mov~edx,0", "mov~eax,r10d", "imul~,edx", "lea~ebp,<TAG>", "sar~ebp,0", "mov~ebx,r10d", "sar~ebx,0", "sub~ebp,ebx", "mov~esi,0", "mov~eax,r10d", "imul~,esi", "lea~r9d,<TAG>", "sar~r9d,0", "sub~r9d,ebx", "mov~eax,r9d", "imul~,esi", "lea~esi,<TAG>", "sar~esi,0", "mov~eax,r9d", "sar~eax,0", "sub~esi,eax", "imul~esi,,0", "mov~eax,r9d", "sub~eax,esi", "mov~esi,eax", "imul~r9d,,0", "sub~r10d,r9d", "cmp~colons,0", "jz~FOO"]], [1, 0, 333, 0, 0, 4, 1, 1, 14, 10, 0.04469474830123084, ["mov     r10, [rax+28h]", "mov     r8d, 1", "test    r10d, r10d", "js      short loc_10BD8"], ["mov~r10,[rax+0]", "mov~r8d,0", "test~r10d,r10d", "js~FOO"]], [1, 0, 333, 0, 0, 3, 1, 1, 15, 10, 0.0028795673625621123, ["mov     r8d, 0", "test    r10d, r10d", "jnz     short loc_10BD8"], ["mov~r8d,0", "test~r10d,r10d", "jnz~FOO"]], [1, 0, 333, 0, 0, 4, 0, 0, 16, 10, 0.0, ["mov     rax, [rsp+4F8h+src]", "cmp     byte ptr [rax], 2Dh ; '-'", "setz    r8b", "movzx   r8d, r8b"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setz~r8b", "movzx~r8d,r8b"]], [1, 0, 333, 0, 0, 8, 0, 0, 3, 5, 0.011483152775095252, ["mov     r13d, 0", "lea     maxsize_0, [rsp+4F8h+ubuf]", "mov     [rsp+4F8h+var_4E0], rsi", "lea     rbx, [rsp+4F8h+ubuf+17h]", "mov     [rsp+4F8h+bufp], rbx", "mov     [rsp+4F8h+hour12], r12d", "mov     [rsp+4F8h+src], zone", "mov     hour12_0, p"], ["mov~r13d,0", "lea~maxsize_0,[rsp+0]", "mov~[rsp+0],rsi", "lea~rbx,[rsp+0]", "mov~[rsp+0],rbx", "mov~[rsp+0],r12d", "mov~[rsp+0],zone", "mov~hour12_0,p"]], [1, 0, 333, 0, 0, 2, 0, 1, 13, 6, 0.0037135883974505294, ["cmp     ecx, 4Fh ; 'O'", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 7, 0.009575146758438272, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 89", "jz      loc_10DB9"], ["cmp~ecx,0", "jz~FOO"]], [7, 0, 333, 9, 0, 22, 0, 1, 18, 11, 0.011527048619036749, ["mov     esi, 51EB851Fh", "mov     eax, r11d", "imul    esi", "mov     eax, edx", "sar     eax, 5", "mov     edx, r11d", "sar     edx, 1Fh", "sub     eax, edx", "imul    eax, 64h", "mov     r8d, r11d", "sub     r8d, eax", "add     r8d, r10d", "mov     eax, r8d", "imul    esi", "sar     edx, 5", "mov     r9d, edx", "mov     eax, r8d", "sar     eax, 1Fh", "sub     r9d, eax", "imul    r9d, 64h", "sub     r8d, r9d", "js      loc_108E7"], ["mov~esi,0", "mov~eax,r11d", "imul~,esi", "mov~eax,edx", "sar~eax,0", "mov~edx,r11d", "sar~edx,0", "sub~eax,edx", "imul~eax,,0", "mov~r8d,r11d", "sub~r8d,eax", "add~r8d,r10d", "mov~eax,r8d", "imul~,esi", "sar~edx,0", "mov~r9d,edx", "mov~eax,r8d", "sar~eax,0", "sub~r9d,eax", "imul~r9d,,0", "sub~r8d,r9d", "js~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 10, 0.03164012431303004, ["cmp     sil, 67h ; 'g'", "jnz     loc_10948"], ["cmp~sil,0", "jnz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 4, 4, 0.7611100381015925, ["cmp     al, 25h ; '%'", "jz      loc_F72D"], ["cmp~al,0", "jz~FOO"]], [1, 0, 333, 0, 0, 5, 1, 1, 8, 4, 0.7605832879742945, ["lea     r15, [f+1]", "movzx   eax, byte ptr [rbx+1]", "mov     r14d, 0FFFFFFFFh", "test    al, al", "jnz     loc_F638"], ["lea~r15,[f+0]", "movzx~eax,[yte ptr [rbx+0]", "mov~r14d,0", "test~al,al", "jnz~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 25, 8, 0.004336909381419767, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,_delta"]], [2, 0, 333, 1, 0, 5, 0, 1, 24, 9, 0.00862114375010974, ["movsxd  width_0, r14d", "sub     width_0, 1", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      loc_1002B"], ["movsxd~width_0,r14d", "sub~width_0,0", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 25, 9, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      loc_1002B"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 333, 0, 0, 3, 0, 1, 15, 9, 0.0028795673625621123, ["mov     ebp, [rsp+4F8h+number_value]", "mov     dword ptr [rsp+4F8h+subfmt], r14d", "jmp     do_number"], ["mov~ebp,[rsp+0]", "mov~[word ptr [rsp+0],r14d", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 14, 10, 0.011491931943883553, ["cmp     r14d, 8", "jg      loc_FE31"], ["cmp~r14d,0", "jg~FOO"]], [1, 0, 333, 1, 0, 13, 1, 0, 14, 3, 0.09401172896950116, ["movsxd  rbx, ebx", "test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "cmp     _n, _w", "mov     format_char, _w", "cmovnb  rdi, _n", "mov     [rsp+4F8h+subfmt], rdi", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr_4", "jbe     loc_F666"], ["movsxd~rbx,ebx", "test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "cmp~_n,_w", "mov~format_char,_w", "cmovnb~rdi,_n", "mov~[rsp+0],rdi", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr_4", "jbe~FOO"]], [1, 0, 333, 0, 0, 3, 0, 1, 13, 4, 0.03545906273594016, ["mov     r15, f", "mov     ebx, 1", "jmp     loc_FC14"], ["mov~r15,f", "mov~ebx,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 3, 0, 1, 13, 4, 0.014362720137657365, ["mov     change_case, f", "mov     ebx, 1", "jmp     loc_FC14"], ["mov~change_case,f", "mov~ebx,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.0031026380604102437, ["cmp     ecx, 4Fh ; 'O'; jumptable 000000000000F7EE case 88", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 0, 0, 4, 0, 1, 12, 4, 0.012488367601355504, ["mov     dword ptr [rsp+4F8h+subwidth], 0FFFFFFFFh; jumptable 000000000000F7EE case 82", "lea     rax, aYMDHM+9; \"%H:%M\"", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat_width"], ["mov~[word ptr [rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 16, 7, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     format_char, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~format_char,p", "call~FOO", "add~p,_delta"]], [1, 0, 333, 0, 0, 2, 0, 1, 18, 7, 0.013063403156989095, ["cmp     colons, 3", "jz      short loc_10CC0"], ["cmp~colons,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 8, 0.018576721156040945, ["cmp     colons, 2", "jz      short tz_hh_mm_ss"], ["cmp~colons,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 72", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 15, 6, 0.09247537443154881, ["test    p, p", "jz      loc_10D48"], ["test~p,p", "jz~FOO"]], [1, 0, 333, 0, 0, 1, 0, 0, 13, 7, 0.003166353542979843, ["mov     edi, 43h ; 'C'"], ["mov~edi,0"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 8, 0.014631947980498482, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 67", "jz      loc_10D8F"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 0, 15, 7, 0.01431882429371587, ["cmp     _n, _w", "jnb     short loc_FA87"], ["cmp~_n,_w", "jnb~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 14, 6, 0.046340842449036926, ["test    p, p", "jnz     loc_FA46"], ["test~p,p", "jnz~FOO"]], [0, 0, 333, 0, 0, 4, 1, 0, 15, 10, 0.05715238881182729, ["mov     eax, r9d", "neg     eax", "test    r8b, r8b", "cmovnz  r9d, eax"], ["mov~eax,r9d", "neg~eax", "test~r8b,r8b", "cmovnz~r9d,eax"]], [1, 0, 333, 0, 0, 2, 0, 1, 14, 7, 0.20596807894228572, ["cmp     ecx, 4Fh ; 'O'", "jnz     loc_FE42"], ["cmp~ecx,0", "jnz~FOO"]], [1, 0, 333, 0, 0, 3, 1, 1, 15, 6, 0.14657700208944216, ["mov     byte ptr [rsp+4F8h+subwidth], 0", "test    r8b, r8b", "jnz     loc_FE42"], ["mov~[yte ptr [rsp+0],0", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 333, 1, 0, 1, 0, 0, 22, 6, 0.025810756237599423, ["add     i, [rsp+4F8h+subwidth]"], ["add~i,[rsp+0]"]], [1, 0, 333, 1, 0, 3, 0, 0, 23, 7, 0.01731252085052587, ["movzx   eax, byte ptr [rsp+4F8h+sign_char]", "mov     [p], al", "add     p, 1"], ["movzx~eax,[yte ptr [rsp+0]", "mov~<TAG>,al", "add~p,0"]], [2, 0, 333, 1, 0, 2, 0, 0, 15, 6, 0.014450511825540356, ["mov     byte ptr [p], 9", "add     p, 1"], ["mov~<TAG>,0", "add~p,0"]], [0, 0, 333, 0, 0, 2, 0, 0, 16, 9, 0.022808280512001122, ["cmp     _n, _w", "jnb     loc_10D30"], ["cmp~_n,_w", "jnb~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 20, 5, 0.03973451793584183, ["test    p, p", "jz      short loc_1006B"], ["test~p,p", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 19, 4, 0.039515038716134356, ["cmp     byte ptr [rsp+4F8h+subwidth], 0", "jz      loc_10050"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 333, 0, 0, 4, 0, 1, 12, 7, 0.02081979878145137, ["mov     rax, [rsp+4F8h+tp]; jumptable 000000000000F7EE case 113", "mov     eax, [rax+10h]", "cmp     ecx, 4Fh ; 'O'", "jnz     short loc_10480"], ["mov~rax,[rsp+0]", "mov~eax,[rax+0]", "cmp~ecx,0", "jnz~FOO"]], [4, 1, 333, 4, 0, 9, 0, 1, 18, 8, 0.0072867100942882726, ["imul    r9d, ebp, 2710h", "imul    esi, 64h", "add     r9d, esi", "add     r9d, r10d", "mov     rbx, f", "mov     esi, 14h", "mov     r10d, 1", "mov     dword ptr [rsp+4F8h+subfmt], 9", "jmp     do_number_body"], ["imul~r9d,ebp,<STR>", "imul~esi,,0", "add~r9d,esi", "add~r9d,r10d", "mov~rbx,f", "mov~esi,0", "mov~r10d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 19, 9, 0.007523747651572349, ["test    r10d, r10d", "jnz     short tz_hh_mm_ss"], ["test~r10d,r10d", "jnz~FOO"]], [0, 0, 333, 1, 0, 3, 0, 1, 14, 5, 0.023733604902287844, ["add     i, _incr", "mov     _incr, f", "jmp     loc_F6C6"], ["add~i,_incr", "mov~_incr,f", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 16, 4, 0.07569545648751311, ["cmp     [rsp+4F8h+pad], 2Dh ; '-'", "jz      loc_FEEF"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 333, 1, 0, 5, 0, 1, 16, 8, 0.00862114375010974, ["movsxd  width_0, r14d", "sub     width_0, _n", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      short loc_FA74"], ["movsxd~width_0,r14d", "sub~width_0,_n", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 73", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 19, 9, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     _incr_4, p; s", "call    _memset", "add     p, _delta", "jmp     loc_10D30"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~_incr_4,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 18, 9, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     _incr_4, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~_incr_4,p", "call~FOO", "add~p,_delta"]], [1, 0, 333, 0, 0, 4, 0, 1, 14, 9, 0.07482485558267343, ["mov     rax, [rsp+4F8h+var_4E0]", "lea     rbp, [rax+17h]", "mov     edi, 0CCCCCCCDh", "jmp     short loc_FE83"], ["mov~rax,[rsp+0]", "lea~rbp,[rax+0]", "mov~edi,0", "jmp~FOO"]], [6, 0, 333, 1, 0, 10, 0, 1, 13, 10, 0.014731445226765928, ["lea     edx, [rax+rax*4]", "lea     r9d, [rax+rdx*2]", "sar     r9d, 5", "add     r9d, 1", "mov     rbx, f", "mov     esi, 0", "mov     r10d, 0", "mov     r8d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 1", "jmp     loc_FE4E"], ["lea~edx,<TAG>", "lea~r9d,<TAG>", "sar~r9d,0", "add~r9d,0", "mov~rbx,f", "mov~esi,0", "mov~r10d,0", "mov~r8d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 8, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      short loc_FA74"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 333, 1, 0, 4, 1, 1, 14, 13, 0.023005811809737854, ["sub     r10d, 1", "mov     edx, 0", "test    r10b, 3", "jnz     short loc_1089D"], ["sub~r10d,0", "mov~edx,0", "test~r10b,0", "jnz~FOO"]], [5, 1, 333, 6, 0, 28, 2, 1, 13, 14, 0.04887363264446122, ["mov     rbx, [rsp+4F8h+tp]", "mov     r11d, [rbx+14h]", "mov     eax, r11d", "sar     eax, 1Fh", "and     eax, 190h", "lea     r10d, [r11+rax-64h]", "mov     rax, rbx", "mov     ebx, [rbx+18h]", "mov     r8d, [rax+1Ch]", "mov     r9d, r8d", "sub     r9d, ebx", "add     r9d, 17Eh", "mov     edx, 92492493h", "mov     eax, r9d", "imul    edx", "lea     eax, [rdx+r9]", "sar     eax, 2", "mov     edx, r9d", "sar     edx, 1Fh", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, r8d", "sub     edx, r9d", "lea     r9d, [rdx+rax+3]", "test    r9d, r9d", "js      loc_10855"], ["mov~rbx,[rsp+0]", "mov~r11d,[rbx+0]", "mov~eax,r11d", "sar~eax,0", "and~eax,<STR>", "lea~r10d,[r11+0]", "mov~rax,rbx", "mov~ebx,[rbx+0]", "mov~r8d,[rax+0]", "mov~r9d,r8d", "sub~r9d,ebx", "add~r9d,0", "mov~edx,0", "mov~eax,r9d", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,r9d", "sar~edx,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,r8d", "sub~edx,r9d", "lea~r9d,[rdx+0]", "test~r9d,r9d", "js~FOO"]], [1, 0, 333, 1, 0, 5, 0, 1, 17, 10, 0.00862114375010974, ["movsxd  width_0, r14d", "sub     width_0, _n", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      loc_10D1D"], ["movsxd~width_0,r14d", "sub~width_0,_n", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 333, 1, 0, 11, 2, 1, 5, 3, 0.015381103717100063, ["test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     ebx, 1", "cmovnz  rbx, _w", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "ja      short loc_F6A9"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~ebx,0", "cmovnz~rbx,_w", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "ja~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 22, 8, 0.01715449581233649, ["test    esi, esi", "jnz     loc_1003E"], ["test~esi,esi", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 6, 2, 0.0061629764893859846, ["mov     r13d, 0"], ["mov~r13d,0"]], [3, 1, 333, 2, 1, 28, 1, 1, 13, 3, 0.04664811335662739, ["movzx   r8d, byte ptr [rsp+4F8h+to_uppcase_0]; upcase", "mov     [rsp+4F8h+to_uppcase_0], r8d", "mov     eax, [rsp+4F8h+number_value]", "push    rax; ns", "push    [rsp+500h+var_4C8]; tz", "push    [rsp+508h+var_4C0]; tzset_called", "mov     eax, dword ptr [rsp+510h+subwidth]", "push    rax; width", "mov     r9d, [rsp+518h+pad]; yr_spec", "mov     modifier, [rsp+518h+tp]; tp", "mov     rdx, [rsp+518h+subfmt]; format", "mov     rsi, 0FFFFFFFFFFFFFFFFh; maxsize", "mov     edi, 0; s", "call    __strftime_internal", "mov     rbx, rax", "add     rsp, 20h", "test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "cmp     _n, _w", "mov     change_case, _w", "cmovnb  rbp, _n", "mov     rsi, [rsp+4F8h+maxsize]", "sub     rsi, i", "mov     [rsp+4F8h+sign_char], rsi", "cmp     rsi, _incr", "jbe     loc_F666"], ["movzx~r8d,[yte ptr [rsp+0]", "mov~[rsp+0],r8d", "mov~eax,[rsp+0]", "push~rax", "push~[rsp+0]", "push~[rsp+0]", "mov~eax,[word ptr [rsp+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~modifier,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "add~rsp,<STR>", "test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "cmp~_n,_w", "mov~change_case,_w", "cmovnb~rbp,_n", "mov~rsi,<TAG>", "sub~rsi,i", "mov~[rsp+0],rsi", "cmp~rsi,_incr", "jbe~FOO"]], [2, 0, 333, 1, 0, 11, 2, 0, 13, 3, 0.025521043667585553, ["test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     ebx, 1", "cmovnz  rbx, _w", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~ebx,0", "cmovnz~rbx,_w", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [1, 0, 333, 1, 0, 12, 1, 0, 15, 3, 0.04257896862325075, ["lea     rbp, [len-1]", "test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "cmp     _n, _w", "mov     r15, _w", "cmovnb  r15, _n", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_F666"], ["lea~rbp,[len-1]+0]", "test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "cmp~_n,_w", "mov~r15,_w", "cmovnb~r15,_n", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [2, 0, 333, 1, 0, 12, 2, 0, 17, 3, 0.017432502823965957, ["test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     edx, 1", "cmovnz  rdx, _w", "mov     r15, rdx", "mov     _incr, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~edx,0", "cmovnz~rdx,_w", "mov~r15,rdx", "mov~_incr,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [0, 0, 333, 1, 0, 6, 0, 0, 18, 3, 0.03108996306896329, ["movsxd  rdi, r15d", "mov     [rsp+4F8h+padding], rdi", "mov     rax, [rsp+4F8h+maxsize]", "sub     rax, i", "cmp     rdi, rax", "jnb     loc_F666"], ["movsxd~rdi,r15d", "mov~[rsp+0],rdi", "mov~rax,<TAG>", "sub~rax,i", "cmp~rdi,rax", "jnb~FOO"]], [2, 0, 333, 1, 0, 13, 2, 0, 21, 3, 0.017198391656277984, ["test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     edx, 1", "mov     rdi, rdx", "cmovnz  rdi, _w", "mov     [rsp+4F8h+subwidth], rdi", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr_0", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~edx,0", "mov~rdi,rdx", "cmovnz~rdi,_w", "mov~[rsp+0],rdi", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr_0", "jbe~FOO"]], [1, 0, 333, 2, 0, 14, 1, 0, 16, 3, 0.2001884594899888, ["mov     r15, [rsp+4F8h+bufp]", "sub     r15, bufp_0", "test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "cmp     _n, _w", "mov     rsi, _w", "cmovnb  rsi, _n", "mov     [rsp+4F8h+subwidth], rsi", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr_2", "jbe     loc_F666"], ["mov~r15,[rsp+0]", "sub~r15,bufp_0", "test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "cmp~_n,_w", "mov~rsi,_w", "cmovnb~rsi,_n", "mov~[rsp+0],rsi", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr_2", "jbe~FOO"]], [2, 0, 333, 1, 0, 12, 2, 0, 19, 3, 0.02563517286183344, ["test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     edx, 1", "cmovnz  rdx, _w", "mov     padding_0, rdx", "mov     _incr, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~edx,0", "cmovnz~rdx,_w", "mov~padding_0,rdx", "mov~_incr,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [2, 0, 333, 1, 0, 11, 2, 0, 12, 3, 0.023803838252594255, ["test    r14d, r14d; jumptable 000000000000F7EE case 110", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     ebx, 1", "cmovnz  rbx, _w", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~ebx,0", "cmovnz~rbx,_w", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [2, 0, 333, 1, 0, 11, 2, 0, 12, 3, 0.023803838252594255, ["test    r14d, r14d; jumptable 000000000000F7EE case 116", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "test    _w, _w", "mov     ebx, 1", "cmovnz  rbx, _w", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_F666"], ["test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "test~_w,_w", "mov~ebx,0", "cmovnz~rbx,_w", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [3, 0, 333, 1, 0, 23, 2, 0, 12, 3, 0.03779783330114305, ["test    bpl, bpl; jumptable 000000000000F7EE case 90", "mov     eax, 0", "movzx   edi, byte ptr [rsp+4F8h+to_uppcase_0]", "cmovnz  edi, eax", "mov     byte ptr [rsp+4F8h+to_uppcase_0], dil", "mov     modifier, 0FFFFFFFFFFFFFFFFh", "mov     rdi, [rsp+4F8h+src]", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rbx, [rax-1]", "test    r14d, r14d", "mov     eax, 0", "cmovns  eax, r14d", "cdqe", "cmp     _n, _w", "mov     rsi, _w", "cmovnb  rsi, _n", "mov     [rsp+4F8h+subfmt], rsi", "mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, _incr_3", "jbe     loc_F666"], ["test~bpl,bpl", "mov~eax,0", "movzx~edi,[yte ptr [rsp+0]", "cmovnz~edi,eax", "mov~[yte ptr [rsp+0],dil", "mov~modifier,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rbx,[rax-1]+0]", "test~r14d,r14d", "mov~eax,0", "cmovns~eax,r14d", "cdqe~", "cmp~_n,_w", "mov~rsi,_w", "cmovnb~rsi,_n", "mov~[rsp+0],rsi", "mov~rdx,<TAG>", "sub~rdx,i", "cmp~rdx,_incr_3", "jbe~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 17, 9, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta", "jmp     short loc_10B26"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 16, 10, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      short loc_10B13"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 333, 1, 1, 6, 0, 1, 21, 5, 0.0, ["movsxd  r14, r15d", "mov     rdx, r14; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, r14"], ["movsxd~r14,r15d", "mov~rdx,r14", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,r14"]], [1, 0, 333, 0, 0, 4, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax+0Ch]", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     short do_number"], ["mov~rax,[rsp+0]", "mov~ebp,[rax+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 100", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 18, 10, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      loc_10D1D"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 333, 0, 0, 12, 1, 1, 15, 9, 0.0, ["mov     esi, dword ptr [rsp+4F8h+subfmt]", "cmp     esi, 2", "mov     eax, 63h ; 'c'", "mov     edx, 270Fh", "cmovnz  eax, edx", "cmp     r9d, eax", "setnbe  r10b", "cmp     r14d, esi", "setnle  al", "or      r10d, eax", "movzx   r10d, r10b", "jmp     loc_FBBF"], ["mov~esi,[word ptr [rsp+0]", "cmp~esi,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "cmp~r9d,eax", "setnbe~r10b", "cmp~r14d,esi", "setnle~al", "or~r10d,eax", "movzx~r10d,r10b", "jmp~FOO"]], [2, 0, 333, 0, 0, 7, 1, 1, 14, 9, 0.054509859006549255, ["mov     eax, [rsp+4F8h+pad]", "test    eax, eax", "cmovz   eax, [rsp+4F8h+yr_spec]", "mov     [rsp+4F8h+pad], eax", "mov     r10d, 0", "cmp     eax, 2Bh ; '+'", "jz      loc_FDEA"], ["mov~eax,[rsp+0]", "test~eax,eax", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax", "mov~r10d,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 333, 0, 0, 4, 0, 1, 14, 10, 0.006479026565764753, ["mov     r9d, ebp", "mov     r8d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_yearish"], ["mov~r9d,ebp", "mov~r8d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 333, 1, 0, 6, 0, 1, 14, 11, 0.0, ["mov     eax, ebp", "neg     eax", "add     ebp, 64h ; 'd'", "cmp     esi, 0FFFFF893h", "cmovle  ebp, eax", "jmp     short loc_10A5E"], ["mov~eax,ebp", "neg~eax", "add~ebp,0", "cmp~esi,0", "cmovle~ebp,eax", "jmp~FOO"]], [4, 0, 333, 4, 0, 14, 0, 1, 13, 11, 0.006426351553034958, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+14h]", "mov     edx, 51EB851Fh", "mov     eax, esi", "imul    edx", "sar     edx, 5", "mov     ebp, edx", "mov     eax, esi", "sar     eax, 1Fh", "sub     ebp, eax", "imul    r9d, ebp, 64h", "mov     ebp, esi", "sub     ebp, r9d", "js      short loc_10A74"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]", "mov~edx,0", "mov~eax,esi", "imul~,edx", "sar~edx,0", "mov~ebp,edx", "mov~eax,esi", "sar~eax,0", "sub~ebp,eax", "imul~r9d,ebp,0", "mov~ebp,esi", "sub~ebp,r9d", "js~FOO"]], [1, 0, 333, 1, 0, 3, 0, 0, 21, 4, 0.03978719294857163, ["movsxd  rax, r15d", "add     i, rax", "mov     r14d, 0"], ["movsxd~rax,r15d", "add~i,rax", "mov~r14d,0"]], [0, 1, 333, 1, 1, 6, 0, 2, 18, 7, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta", "jmp     short loc_FA87"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 13, 7, 0.002999549336002158, ["mov     edi, 59h ; 'Y'", "jmp     short loc_10D94"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 3, 0, 1, 13, 9, 0.0008076835285235193, ["mov     ebp, [rsp+4F8h+hour12]", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~ebp,[rsp+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 7, 0.0014353940968869067, ["mov     byte ptr [rsp+4F8h+subwidth], 0; jumptable 000000000000F7EE case 112", "jmp     short loc_1040C"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.004990159349894559, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 107", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.005899601425737011, ["mov     rax, r13", "mov     rsi, [rsp+4F8h+var_40]", "xor     rsi, fs:28h", "jnz     loc_10EAA"], ["mov~rax,r13", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 4, 2, 0.00841044369919056, ["test    p, p", "jz      loc_F66C"], ["test~p,p", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 2, 0.002923463206503608, ["cmp     [rsp+4F8h+maxsize], 0", "jz      loc_F66C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0, ["mov     byte ptr [p], 0", "jmp     loc_F66C"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 333, 4, 0, 13, 1, 1, 16, 7, 0.07493020560813302, ["sar     esi, 1", "lea     rbp, [bufp_0-1]", "mov     eax, r9d", "mul     edi", "shr     edx, 3", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r9d, eax", "add     r9d, 30h ; '0'", "mov     [rcx-1], r9b", "mov     r9d, edx", "or      edx, esi", "jz      short do_number_sign_and_padding"], ["sar~esi,0", "lea~rbp,[bufp_0-1]+0]", "mov~eax,r9d", "mul~,edi", "shr~edx,0", "lea~eax,<TAG>", "add~eax,eax", "sub~r9d,eax", "add~r9d,0", "mov~[rcx-1]+0],r9b", "mov~r9d,edx", "or~edx,esi", "jz~FOO"]], [1, 0, 333, 0, 0, 3, 1, 1, 15, 8, 0.07487753059540322, ["mov     rcx, bufp_0", "test    sil, 1", "jz      short loc_FE5E"], ["mov~rcx,bufp_0", "test~sil,0", "jz~FOO"]], [0, 1, 333, 0, 0, 3, 0, 1, 16, 8, 0.0, ["lea     rcx, [bufp_0-1]", "mov     byte ptr [rbp-1], 3Ah ; ':'", "jmp     short loc_FE5E"], ["lea~rcx,[bufp_0-1]+0]", "mov~[yte ptr [rbp-1]+0],<STR>", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 18, 4, 0.03838252594244377, ["cmp     byte ptr [rsp+4F8h+sign_char], 0", "jz      loc_10077"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 0, 23, 8, 0.011474373606306954, ["cmp     _w, 1", "jbe     loc_1003E"], ["cmp~_w,0", "jbe~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 17, 7, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,_delta"]], [5, 0, 333, 3, 0, 12, 0, 1, 15, 13, 0.0028795673625621123, ["mov     edx, 51EB851Fh", "mov     eax, r10d", "imul    edx", "mov     eax, edx", "sar     eax, 5", "mov     edx, r10d", "sar     edx, 1Fh", "sub     eax, edx", "imul    eax, 64h", "mov     edx, 1", "cmp     r10d, eax", "jnz     short loc_1089D"], ["mov~edx,0", "mov~eax,r10d", "imul~,edx", "mov~eax,edx", "sar~eax,0", "mov~edx,r10d", "sar~edx,0", "sub~eax,edx", "imul~eax,,0", "mov~edx,0", "cmp~r10d,eax", "jnz~FOO"]], [0, 0, 333, 1, 0, 3, 0, 1, 15, 5, 0.0465252049935912, ["add     i, _incr", "mov     _n, f", "jmp     loc_F6C6"], ["add~i,_incr", "mov~_n,f", "jmp~FOO"]], [0, 1, 333, 2, 1, 16, 0, 2, 16, 6, 0.014450511825540356, ["mov     eax, [rsp+4F8h+number_value]", "push    rax; ns", "push    [rsp+500h+var_4C8]; tz", "push    [rsp+508h+var_4C0]; tzset_called", "mov     eax, dword ptr [rsp+510h+subwidth]", "push    rax; width", "mov     r9d, [rsp+518h+pad]; yr_spec", "mov     r8d, [rsp+518h+to_uppcase_0]; upcase", "mov     rcx, [rsp+518h+tp]; tp", "mov     rdx, [rsp+518h+subfmt]; format", "mov     rsi, [rsp+518h+sign_char]; maxsize", "mov     rdi, p; s", "call    __strftime_internal", "add     p, _n", "add     rsp, 20h", "jmp     loc_F881"], ["mov~eax,[rsp+0]", "push~rax", "push~[rsp+0]", "push~[rsp+0]", "mov~eax,[word ptr [rsp+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,p", "call~FOO", "add~p,_n", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 333, 0, 0, 3, 0, 1, 13, 10, 0.0027127631555844346, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax+8]", "jmp     do_number_spacepad"], ["mov~rax,[rsp+0]", "mov~ebp,[rax+0]", "jmp~FOO"]], [4, 0, 333, 1, 0, 7, 0, 1, 17, 8, 0.0026688673116429334, ["imul    ebp, 64h", "lea     r9d, [rbp+min_diff+0]", "mov     rbx, f", "mov     esi, 0", "mov     r10d, 1", "mov     dword ptr [rsp+4F8h+subfmt], 5", "jmp     do_number_body"], ["imul~ebp,,0", "lea~r9d,[rbp+0]", "mov~rbx,f", "mov~esi,0", "mov~r10d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 0, 16, 9, 0.024107597492669393, ["cmp     colons, 1", "jb      short loc_10C4F"], ["cmp~colons,0", "jb~FOO"]], [4, 0, 333, 1, 0, 7, 0, 1, 16, 8, 0.019296612996681475, ["imul    ebp, 64h", "lea     r9d, [rbp+rsi+0]", "mov     rbx, f", "mov     esi, 4", "mov     r10d, 1", "mov     dword ptr [rsp+4F8h+subfmt], 6", "jmp     do_number_body"], ["imul~ebp,,0", "lea~r9d,[rbp+0]", "mov~rbx,f", "mov~esi,0", "mov~r10d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 20, 9, 0.002914684037715309, ["test    eax, eax", "jnz     short tz_hh_mm"], ["test~eax,eax", "jnz~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 18, 7, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     format_char, p; s", "call    _memset", "add     p, _delta", "jmp     short loc_F92D"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~format_char,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 8, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      short loc_F91A"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 0, 19, 9, 0.011474373606306954, ["cmp     _n, _w", "jnb     loc_101B9"], ["cmp~_n,_w", "jnb~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 18, 9, 0.025617614524256843, ["cmp     dword ptr [rsp+4F8h+subfmt], 0", "jnz     loc_101B9"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [0, 1, 333, 0, 0, 4, 0, 1, 12, 8, 0.017163274981124785, ["lea     rdx, [f+1]; jumptable 000000000000F7EE case 58", "movzx   eax, byte ptr [f+1]", "cmp     al, 3Ah ; ':'", "jz      loc_10B76"], ["lea~rdx,[f+0]", "movzx~eax,[yte ptr [f+0]", "cmp~al,<STR>", "jz~FOO"]], [4, 0, 333, 4, 0, 17, 0, 1, 12, 9, 0.004565167769915544, ["mov     rax, [rsp+4F8h+tp]; jumptable 000000000000F7EE case 117", "mov     eax, [rax+18h]", "lea     r9d, [rax+6]", "mov     edx, 92492493h", "mov     eax, r9d", "imul    edx", "lea     eax, [rdx+r9]", "sar     eax, 2", "mov     edx, r9d", "sar     edx, 1Fh", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "sub     r9d, edx", "lea     ebp, [r9+1]", "mov     dword ptr [rsp+4F8h+subfmt], 1", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~eax,[rax+0]", "lea~r9d,[rax+0]", "mov~edx,0", "mov~eax,r9d", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,r9d", "sar~edx,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "sub~r9d,edx", "lea~ebp,[r9+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 15, 4, 0.12097548270796386, ["cmp     [rsp+4F8h+pad], 2Dh ; '-'", "jz      loc_10077"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 333, 0, 0, 7, 2, 0, 14, 5, 0.12160904605551946, ["test    r14d, r14d", "mov     eax, 1", "cmovg   eax, r14d", "mov     dword ptr [rsp+4F8h+subfmt], eax", "mov     rbx, f", "test    rsi, rsi", "jns     loc_FEBC"], ["test~r14d,r14d", "mov~eax,0", "cmovg~eax,r14d", "mov~[word ptr [rsp+0],eax", "mov~rbx,f", "test~rsi,rsi", "jns~FOO"]], [1, 0, 333, 0, 0, 3, 1, 1, 18, 5, 0.05513903276971069, ["mov     byte ptr [rsp+4F8h+sign_char], 2Bh ; '+'", "test    r10b, r10b", "jnz     loc_10DCC"], ["mov~[yte ptr [rsp+0],0", "test~r10b,r10b", "jnz~FOO"]], [1, 0, 333, 0, 0, 1, 0, 0, 13, 7, 0.008559689568591645, ["mov     r11d, 1"], ["mov~r11d,0"]], [1, 0, 333, 0, 0, 4, 0, 1, 13, 4, 0.002782996505890822, ["mov     dword ptr [rsp+4F8h+subwidth], 0FFFFFFFFh", "lea     rax, aMDY; \"%m/%d/%y\"", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat_width"], ["mov~[word ptr [rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 12, 5, 0.003102638060410244, ["test    ecx, ecx; jumptable 000000000000F7EE case 68", "jz      loc_FC8A"], ["test~ecx,ecx", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 85", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 1, 14, 5, 0.016824399065896438, ["mov     rbx, f", "jmp     loc_F6C6"], ["mov~rbx,f", "jmp~FOO"]], [1, 0, 333, 0, 0, 3, 0, 1, 13, 6, 0.06438115639211281, ["mov     rax, [rsp+4F8h+tp]", "cmp     dword ptr [rax+20h], 0", "js      loc_10D65"], ["mov~rax,[rsp+0]", "cmp~[word ptr [rax+0],0", "js~FOO"]], [2, 0, 338, 1, 0, 27, 2, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 4C8h", "mov     [rsp+4F8h+maxsize], maxsize_0", "mov     r15, format", "mov     [rsp+4F8h+tp], tp_0", "mov     [rsp+4F8h+yr_spec], r9d", "mov     r14d, [rsp+4F8h+width]", "mov     rax, [rsp+4F8h+tzset_called]", "mov     [rsp+4F8h+var_4C0], rax", "mov     rax, [rsp+4F8h+tz]", "mov     [rsp+4F8h+var_4C8], rax", "mov     [rsp+4F8h+to_uppcase], r8b", "mov     rax, fs:28h", "mov     [rsp+4F8h+var_40], rax", "xor     eax, eax", "mov     r12d, [tp_0+8]", "mov     rbp, [tp_0+30h]", "test    zone, zone", "lea     rax, a8+6; \"\"", "cmovz   zone, rax", "cmp     r12d, 0Ch", "jle     loc_F698"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~<TAG>,maxsize_0", "mov~r15,format", "mov~[rsp+0],tp_0", "mov~[rsp+0],r9d", "mov~r14d,[rsp+0]", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],r8b", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r12d,[tp_0+0]", "mov~rbp,[tp_0+0]", "test~zone,zone", "lea~rax,<TAG>", "cmovz~zone,rax", "cmp~r12d,0", "jle~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 14, 6, 0.017294962512949274, ["cmp     al, 7Ah ; 'z'", "jnz     loc_FBF7"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 333, 1, 0, 3, 0, 1, 16, 5, 0.0927387494951978, ["add     i, [rsp+4F8h+subfmt]", "mov     _n, r15", "jmp     loc_F6C6"], ["add~i,[rsp+0]", "mov~_n,r15", "jmp~FOO"]], [0, 0, 333, 1, 0, 1, 0, 0, 19, 6, 0.0230189805629203, ["add     p, _n"], ["add~p,_n"]], [0, 0, 333, 0, 0, 6, 1, 1, 17, 6, 0.07493020560813302, ["mov     eax, dword ptr [rsp+4F8h+subfmt]", "cmp     r14d, eax", "cmovge  eax, r14d", "mov     dword ptr [rsp+4F8h+subfmt], eax", "test    r8b, r8b", "jnz     loc_10DC7"], ["mov~eax,[word ptr [rsp+0]", "cmp~r14d,eax", "cmovge~eax,r14d", "mov~[word ptr [rsp+0],eax", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 6, 6, 0.014459290994328656, ["test    p, p", "jz      short loc_F6C0"], ["test~p,p", "jz~FOO"]], [2, 0, 333, 1, 0, 8, 0, 1, 14, 4, 0.005754745140730075, ["mov     edi, r14d", "sub     edi, 6", "mov     eax, 0", "cmovns  eax, edi", "mov     dword ptr [rsp+4F8h+subwidth], eax", "lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat_width"], ["mov~edi,r14d", "sub~edi,0", "mov~eax,0", "cmovns~eax,edi", "mov~[word ptr [rsp+0],eax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 333, 0, 0, 3, 0, 0, 12, 4, 0.012488367601355504, ["mov     dword ptr [rsp+4F8h+subwidth], 0FFFFFFFFh; jumptable 000000000000F7EE case 84", "lea     rax, aHMS; \"%H:%M:%S\"", "mov     [rsp+4F8h+subfmt], rax"], ["mov~[word ptr [rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax"]], [0, 0, 333, 0, 0, 2, 0, 1, 15, 7, 0.016373149790177864, ["mov     r15, f", "jmp     do_z_conversion"], ["mov~r15,f", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 17, 6, 0.19865503134163257, ["test    p, p", "jz      loc_101D1"], ["test~p,p", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 7, 7, 0.005750355556335926, ["cmp     _w, 1", "ja      short loc_F6E4"], ["cmp~_w,0", "ja~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 83", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 12, 4, 0.04274577283022843, ["test    ecx, ecx; jumptable 000000000000F7EE case 37", "jnz     loc_10D10"], ["test~ecx,ecx", "jnz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 16, 8, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      short loc_103E0"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 333, 1, 0, 5, 0, 1, 15, 8, 0.00862114375010974, ["movsxd  change_case, r14d", "sub     rbp, 1", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      short loc_103E0"], ["movsxd~change_case,r14d", "sub~rbp,0", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 333, 0, 1, 5, 0, 2, 17, 7, 0.001448562850069355, ["mov     rdx, _n; n", "mov     rsi, [rsp+4F8h+src]; src", "mov     rdi, p; dest", "call    _memcpy", "jmp     short loc_10B54"], ["mov~rdx,_n", "mov~rsi,[rsp+0]", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 16, 8, 0.0057591347251242245, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      short loc_10B64"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [2, 0, 333, 0, 0, 4, 0, 1, 20, 10, 0.0014485628500693554, ["lea     r9d, [yy+64h]", "mov     r8d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_yearish"], ["lea~r9d,[yy+0]", "mov~r8d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 1, 0, 4, 0, 1, 19, 11, 0.0057591347251242245, ["mov     eax, 0FFFFF894h", "sub     eax, r10d", "cmp     r11d, eax", "jge     short loc_1090D"], ["mov~eax,0", "sub~eax,r10d", "cmp~r11d,eax", "jge~FOO"]], [1, 0, 333, 1, 0, 3, 0, 0, 8, 6, 0.00580303056906572, ["movzx   eax, byte ptr [f]", "mov     [p], al", "add     p, 1"], ["movzx~eax,<TAG>", "mov~<TAG>,al", "add~p,0"]], [1, 1, 333, 2, 1, 8, 0, 2, 8, 7, 0.0, ["movsxd  width_0, r14d", "sub     width_0, 1", "mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta", "jmp     short loc_F6B4"], ["movsxd~width_0,r14d", "sub~width_0,0", "mov~rdx,_delta", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [4, 0, 333, 3, 0, 9, 0, 1, 16, 10, 0.005776693062700823, ["mov     eax, ebp", "imul    r8d", "sar     edx, 2", "sar     ebp, 1Fh", "sub     edx, ebp", "mov     ebp, edx", "add     esi, 1", "cmp     esi, 9", "jnz     short loc_10360"], ["mov~eax,ebp", "imul~,r8d", "sar~edx,0", "sar~ebp,0", "sub~edx,ebp", "mov~ebp,edx", "add~esi,0", "cmp~esi,0", "jnz~FOO"]], [1, 0, 333, 0, 0, 3, 0, 0, 15, 11, 0.005750355556335926, ["mov     esi, r14d", "mov     ebp, [rsp+4F8h+number_value]", "mov     r8d, 66666667h"], ["mov~esi,r14d", "mov~ebp,[rsp+0]", "mov~r8d,0"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.004990159349894559, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 101", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 333, 1, 0, 2, 0, 0, 7, 5, 0.014564641019788244, ["add     i, _incr", "mov     _incr, f"], ["add~i,_incr", "mov~_incr,f"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 3, 0.0110090776605271, ["mov     rdi, p", "jmp     loc_10D73"], ["mov~rdi,p", "jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 3, 3, 0.00021070005091917895, ["mov     r13d, 0"], ["mov~r13d,0"]], [1, 0, 333, 0, 0, 4, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax]", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~ebp,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 0, 0, 13, 10, 0.0027127631555844407, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax+0Ch]"], ["mov~rax,[rsp+0]", "mov~ebp,[rax+0]"]], [1, 0, 333, 1, 0, 5, 0, 1, 15, 10, 0.00862114375010974, ["movsxd  width_0, r14d", "sub     width_0, _n", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      short loc_10B13"], ["movsxd~width_0,r14d", "sub~width_0,_n", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [5, 0, 333, 4, 0, 13, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+1Ch]", "sub     esi, [rax+18h]", "add     esi, 7", "mov     edx, 92492493h", "mov     eax, esi", "imul    edx", "lea     ebp, [rdx+rsi]", "sar     ebp, 2", "sar     esi, 1Fh", "sub     ebp, esi", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]", "sub~esi,[rax+0]", "add~esi,0", "mov~edx,0", "mov~eax,esi", "imul~,edx", "lea~ebp,<TAG>", "sar~ebp,0", "sar~esi,0", "sub~ebp,esi", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 1, 0, 0, 12, 6, 1.3168753182448684e-05, ["lea     change_case, [f-1]; jumptable 000000000000F7EE case 0"], ["lea~change_case,[f-1]+0]"]], [0, 0, 333, 1, 0, 3, 0, 1, 15, 5, 0.025661510368198335, ["add     i, _incr", "mov     _incr, f", "jmp     loc_F6C6"], ["add~i,_incr", "mov~_incr,f", "jmp~FOO"]], [0, 0, 333, 1, 0, 2, 0, 1, 17, 5, 0.039892542974031206, ["add     i, _incr", "jmp     loc_F6C6"], ["add~i,_incr", "jmp~FOO"]], [2, 0, 333, 0, 1, 9, 1, 2, 14, 4, 0.25639913612979115, ["mov     [rax], dil", "mov     byte ptr [rax+1], 0", "lea     rdx, [rsp+4F8h+ufmt]; format", "mov     modifier, [rsp+4F8h+tp]; tp", "mov     esi, 400h; maxsize", "mov     format_char, [rsp+4F8h+var_4E0]; s", "call    _strftime", "test    len, len", "jz      loc_F6C6"], ["mov~<TAG>,dil", "mov~[yte ptr [rax+0],0", "lea~rdx,[rsp+0]", "mov~modifier,[rsp+0]", "mov~esi,0", "mov~format_char,[rsp+0]", "call~FOO", "test~len,len", "jz~FOO"]], [0, 0, 333, 1, 0, 2, 0, 1, 18, 5, 0.19894474391164643, ["add     i, [rsp+4F8h+subwidth]", "jmp     loc_F6C6"], ["add~i,[rsp+0]", "jmp~FOO"]], [0, 0, 333, 1, 0, 3, 0, 1, 14, 5, 0.03785928748266114, ["add     i, [rsp+4F8h+subfmt]", "mov     _n, f", "jmp     loc_F6C6"], ["add~i,[rsp+0]", "mov~_n,f", "jmp~FOO"]], [5, 0, 333, 1, 0, 10, 0, 1, 13, 8, 0.003854055098063315, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, [rax+1Ch]", "cmp     r9d, 0FFFFFFFFh", "setl    r8b", "add     r9d, 1", "mov     rbx, f", "mov     esi, 0", "mov     r10d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 3", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~r9d,[rax+0]", "cmp~r9d,0", "setl~r8b", "add~r9d,0", "mov~rbx,f", "mov~esi,0", "mov~r10d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 7, 0.05364950046529594, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE cases 71,86,103", "jz      loc_10D03"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 333, 2, 0, 8, 0, 1, 20, 4, 0.031095815848155496, ["add     i, [rsp+4F8h+padding]", "mov     eax, r14d", "sub     eax, r15d", "cmp     r14d, r15d", "mov     r14d, 0", "cmovg   r14d, eax", "cmp     byte ptr [rsp+4F8h+subwidth], 0", "jz      loc_10077"], ["add~i,[rsp+0]", "mov~eax,r14d", "sub~eax,r15d", "cmp~r14d,r15d", "mov~r14d,0", "cmovg~r14d,eax", "cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [2, 0, 333, 0, 0, 4, 0, 1, 12, 6, 0.03199919231647147, ["mov     rbx, f; jumptable 000000000000F7EE case 114", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["mov~rbx,f", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 333, 0, 0, 5, 0, 1, 21, 8, 0.0014485628500693554, ["mov     r9d, ebp", "mov     rbx, f", "mov     r10d, 1", "mov     dword ptr [rsp+4F8h+subfmt], 3", "jmp     do_number_body"], ["mov~r9d,ebp", "mov~rbx,f", "mov~r10d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 1, 0, 0, 15, 9, 0.0, ["mov     [rsp+4F8h+pad], 5Fh ; '_'"], ["mov~[rsp+0],0"]], [2, 0, 333, 0, 0, 3, 0, 1, 14, 9, 0.013993995048548803, ["mov     dword ptr [rsp+4F8h+subfmt], 2", "cmp     [rsp+4F8h+pad], 0", "jnz     short do_number"], ["mov~[word ptr [rsp+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 333, 0, 0, 4, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax+8]", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~ebp,[rax+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [6, 0, 333, 6, 0, 25, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rbx, [rsp+4F8h+tp]", "mov     eax, [rbx+18h]", "lea     r8d, [rax+6]", "mov     esi, 92492493h", "mov     eax, r8d", "imul    esi", "lea     eax, [rdx+r8]", "sar     eax, 2", "mov     edx, r8d", "sar     edx, 1Fh", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, [rbx+1Ch]", "sub     eax, r8d", "lea     r8d, [rax+rdx+7]", "mov     eax, r8d", "imul    esi", "lea     ebp, [rdx+r8]", "sar     ebp, 2", "sar     r8d, 1Fh", "sub     ebp, r8d", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~rbx,[rsp+0]", "mov~eax,[rbx+0]", "lea~r8d,[rax+0]", "mov~esi,0", "mov~eax,r8d", "imul~,esi", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,r8d", "sar~edx,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,[rbx+0]", "sub~eax,r8d", "lea~r8d,[rax+0]", "mov~eax,r8d", "imul~,esi", "lea~ebp,<TAG>", "sar~ebp,0", "sar~r8d,0", "sub~ebp,r8d", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 87", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [5, 0, 333, 6, 0, 18, 0, 1, 15, 12, 0.023084824328832545, ["lea     r8d, [r8+rdx+16Dh]", "mov     r9d, r8d", "sub     r9d, ebx", "add     r9d, 17Eh", "mov     edx, 92492493h", "mov     eax, r9d", "imul    edx", "lea     eax, [rdx+r9]", "sar     eax, 2", "mov     edx, r9d", "sar     edx, 1Fh", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "sub     r8d, r9d", "lea     r9d, [r8+rdx+3]", "mov     r10d, 0FFFFFFFFh", "jmp     loc_107E7"], ["lea~r8d,[r8+0]", "mov~r9d,r8d", "sub~r9d,ebx", "add~r9d,0", "mov~edx,0", "mov~eax,r9d", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,r9d", "sar~edx,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "sub~r8d,r9d", "lea~r9d,[r8+0]", "mov~r10d,0", "jmp~FOO"]], [0, 1, 333, 1, 0, 7, 1, 0, 16, 13, 0.0, ["mov     r9d, 190h", "mov     eax, r10d", "cdq", "idiv    r9d", "test    edx, edx", "setz    dl", "movzx   edx, dl"], ["mov~r9d,<STR>", "mov~eax,r10d", "cdq~,", "idiv~,r9d", "test~edx,edx", "setz~dl", "movzx~edx,dl"]], [4, 1, 333, 0, 0, 7, 0, 1, 13, 6, 0.003226344529699928, ["mov     [rsp+4F8h+ufmt], 20h ; ' '", "mov     [rsp+4F8h+ufmt+1], 25h ; '%'", "mov     rbx, f", "mov     edi, 71h ; 'q'", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 1", "jmp     loc_FD32"], ["mov~[rsp+0],<STR>", "mov~[rsp+0],0", "mov~rbx,f", "mov~edi,0", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 15, 5, 0.038584446824574646, ["mov     byte ptr [rsp+4F8h+sign_char], 2Dh ; '-'", "jmp     loc_10DCC"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 1, 0, 0, 18, 5, 0.016929163813436808, ["mov     byte ptr [rsp+4F8h+sign_char], 2Dh ; '-'"], ["mov~[yte ptr [rsp+0],0"]], [0, 0, 333, 0, 0, 2, 1, 1, 14, 6, 0.025477147823644054, ["test    p, p", "jz      short loc_F939"], ["test~p,p", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 1, 17, 9, 0.005803030569065721, ["mov     dword ptr [rsp+4F8h+subfmt], r14d", "jmp     do_number"], ["mov~[word ptr [rsp+0],r14d", "jmp~FOO"]], [0, 0, 333, 0, 0, 1, 0, 1, 17, 4, 0.0026454561948741355, ["jmp     loc_10077"], ["jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 0, 15, 7, 0.01431882429371587, ["cmp     _w, 1", "jbe     short loc_F92D"], ["cmp~_w,0", "jbe~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 20, 9, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,_delta"]], [1, 0, 333, 1, 0, 5, 0, 1, 19, 10, 0.00862114375010974, ["movsxd  width_0, r14d", "sub     width_0, _n", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      loc_FAE1"], ["movsxd~width_0,r14d", "sub~width_0,_n", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 20, 10, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      loc_FAE1"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.0031026380604102437, ["cmp     ecx, 4Fh ; 'O'; jumptable 000000000000F7EE case 120", "jz      short loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 5, 0.038637121837304444, ["cmp     byte ptr [f+0], 25h ; '%'", "jnz     short loc_10D08"], ["cmp~[yte ptr [f+0],0", "jnz~FOO"]], [1, 0, 333, 0, 0, 4, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax+4]", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~ebp,[rax+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.003102638060410244, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 77", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 22, 9, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta", "jmp     loc_101B9"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 17, 9, 0.03123628254876828, ["cmp     dword ptr [rsp+4F8h+subfmt], 0", "jnz     loc_FAF4"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 0, 18, 9, 0.011474373606306954, ["cmp     _n, _w", "jnb     loc_FAF4"], ["cmp~_n,_w", "jnb~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 21, 9, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta", "jmp     loc_FAF4"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 16, 11, 0.049110670201745296, ["cmp     sil, 47h ; 'G'", "jz      loc_10924"], ["cmp~sil,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.0051833010632371355, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 109", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 333, 1, 0, 5, 0, 1, 16, 8, 0.00862114375010974, ["movsxd  change_case, r14d", "sub     rbp, 1", "mov     eax, [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      short loc_F91A"], ["movsxd~change_case,r14d", "sub~rbp,0", "mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 19, 8, 0.0057591347251242245, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      short loc_FB37"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 1, 13, 6, 0.00016680420697768334, ["mov     change_case, f", "jmp     short bad_format"], ["mov~change_case,f", "jmp~FOO"]], [1, 0, 333, 0, 0, 6, 1, 1, 12, 7, 0.0057591347251242245, ["test    bpl, bpl; jumptable 000000000000F7EE cases 98,104", "movzx   eax, byte ptr [rsp+4F8h+to_uppcase_0]", "cmovnz  eax, ebp", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "cmp     ecx, 45h ; 'E'", "jz      loc_10CFE"], ["test~bpl,bpl", "movzx~eax,[yte ptr [rsp+0]", "cmovnz~eax,ebp", "mov~[yte ptr [rsp+0],al", "cmp~ecx,0", "jz~FOO"]], [2, 0, 333, 0, 0, 4, 1, 1, 15, 8, 0.05456253401927905, ["and     r10d, 1", "mov     rbx, f", "mov     esi, 0", "jmp     do_number_body"], ["and~r10d,0", "mov~rbx,f", "mov~esi,0", "jmp~FOO"]], [5, 0, 333, 1, 0, 10, 0, 1, 13, 8, 0.003854055098063315, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, [rax+10h]", "cmp     r9d, 0FFFFFFFFh", "setl    r8b", "add     r9d, 1", "mov     rbx, f", "mov     esi, 0", "mov     r10d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~r9d,[rax+0]", "cmp~r9d,0", "setl~r8b", "add~r9d,0", "mov~rbx,f", "mov~esi,0", "mov~r10d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [3, 0, 333, 0, 0, 7, 0, 0, 13, 8, 0.09256755570382595, ["mov     eax, ebp", "shr     eax, 1Fh", "mov     r8d, eax", "mov     r9d, ebp", "mov     rbx, f", "mov     esi, 0", "mov     r10d, 0"], ["mov~eax,ebp", "shr~eax,0", "mov~r8d,eax", "mov~r9d,ebp", "mov~rbx,f", "mov~esi,0", "mov~r10d,0"]], [0, 0, 333, 0, 0, 2, 0, 1, 13, 6, 0.0019138587958492089, ["mov     change_case, f", "jmp     short bad_format"], ["mov~change_case,f", "jmp~FOO"]], [0, 0, 333, 0, 0, 3, 0, 1, 8, 10, 2.9263895960997076e-06, ["movsx   eax, dl; jumptable 000000000000F72B cases 8,10,13,60", "mov     [rsp+4F8h+pad], eax", "jmp     short loc_F70B"], ["movsx~eax,dl", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 333, 1, 0, 5, 0, 1, 7, 9, 0.008638702087686337, ["movzx   eax, al", "lea     rdi, off_18EAC", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [2, 0, 333, 0, 0, 5, 0, 1, 20, 10, 0.0014485628500693554, ["mov     r9d, r8d", "neg     r9d", "mov     r8d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_yearish"], ["mov~r9d,r8d", "neg~r9d", "mov~r8d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 1, 0, 0, 8, 10, 2.9263895960997076e-06, ["mov     ebp, ecx; jumptable 000000000000F72B case 0"], ["mov~ebp,ecx"]], [0, 0, 333, 0, 0, 2, 0, 1, 13, 6, 0.00031605007637876845, ["mov     r15, f", "jmp     loc_FBF7"], ["mov~r15,f", "jmp~FOO"]], [0, 0, 333, 0, 1, 5, 0, 1, 20, 7, 0.001448562850069355, ["mov     rax, [rsp+4F8h+var_4E0]", "lea     rsi, [rax+1]; src", "mov     rdx, _n; len", "mov     rdi, p; dest", "call    memcpy_uppcase"], ["mov~rax,[rsp+0]", "lea~rsi,[rax+0]", "mov~rdx,_n", "mov~rdi,p", "call~FOO"]], [0, 0, 333, 0, 0, 2, 0, 1, 19, 6, 0.0026776464804312327, ["mov     hour_diff, f", "jmp     bad_format"], ["mov~hour_diff,f", "jmp~FOO"]], [0, 0, 333, 1, 0, 1, 0, 0, 20, 6, 0.031525995118782145, ["add     p, _n"], ["add~p,_n"]], [0, 0, 333, 0, 1, 6, 0, 2, 20, 7, 0.001448562850069355, ["mov     rax, [rsp+4F8h+var_4E0]", "lea     rsi, [rax+1]; src", "mov     rdx, _n; n", "mov     rdi, p; dest", "call    _memcpy", "jmp     short loc_FB16"], ["mov~rax,[rsp+0]", "lea~rsi,[rax+0]", "mov~rdx,_n", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [2, 0, 333, 1, 0, 5, 0, 1, 6, 9, 0.751646094147806, ["add     r15, 1", "movzx   edx, byte ptr [f]", "lea     eax, [rdx-23h]", "cmp     al, 3Ch ; '<'; switch 61 cases", "ja      short loc_F751; jumptable 000000000000F72B default case"], ["add~r15,0", "movzx~edx,<TAG>", "lea~eax,[rdx-23h]+0]", "cmp~al,0", "ja~FOO"]], [3, 0, 333, 0, 0, 6, 0, 1, 5, 10, 0.7428669253595069, ["movzx   eax, [rsp+4F8h+to_uppcase]", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "mov     ebp, 0", "mov     [rsp+4F8h+pad], 0", "mov     ecx, 1", "jmp     short loc_F70B"], ["movzx~eax,[rsp+0]", "mov~[yte ptr [rsp+0],al", "mov~ebp,0", "mov~[rsp+0],0", "mov~ecx,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 8, 10, 2.9263895960997076e-06, ["mov     byte ptr [rsp+4F8h+to_uppcase_0], 1; jumptable 000000000000F72B case 59", "jmp     short loc_F70B"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 16, 6, 0.03955015539128755, ["test    p, p", "jz      loc_FB19"], ["test~p,p", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 18, 5, 0.01713693747475989, ["test    p, p", "jz      short loc_FF5C"], ["test~p,p", "jz~FOO"]], [1, 0, 333, 0, 0, 1, 0, 0, 12, 7, 0.04506698505785472, ["mov     r11d, 0; jumptable 000000000000F7EE case 122"], ["mov~r11d,0"]], [1, 0, 333, 1, 1, 5, 0, 1, 16, 9, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,_delta"]], [1, 0, 333, 0, 0, 2, 0, 1, 19, 6, 0.00861236458132144, ["cmp     dword ptr [rsp+4F8h+subfmt], 0", "jnz     short loc_FF4F"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 333, 1, 0, 1, 0, 0, 21, 6, 0.025854652081540915, ["add     p, _n"], ["add~p,_n"]], [0, 0, 333, 0, 0, 2, 0, 1, 13, 10, 0.002712763155584428, ["mov     ebp, [rsp+4F8h+hour12]", "jmp     do_number_spacepad"], ["mov~ebp,[rsp+0]", "jmp~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 17, 7, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     format_char, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~format_char,p", "call~FOO", "add~p,_delta"]], [1, 0, 333, 0, 0, 2, 0, 0, 20, 6, 0.0028795673625621123, ["cmp     _w, 1", "jbe     short loc_FF4F"], ["cmp~_w,0", "jbe~FOO"]], [1, 1, 333, 0, 0, 5, 1, 1, 13, 5, 0.21791564974628197, ["mov     [rsp+4F8h+ufmt], 20h ; ' '", "mov     [rsp+4F8h+ufmt+1], 25h ; '%'", "lea     rax, [rsp+4F8h+ufmt+2]", "test    ecx, ecx", "jz      short loc_FD41"], ["mov~[rsp+0],<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "test~ecx,ecx", "jz~FOO"]], [2, 0, 333, 0, 0, 4, 0, 1, 13, 6, 0.002730321493161027, ["mov     rbx, f", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["mov~rbx,f", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [3, 0, 333, 0, 0, 5, 0, 1, 13, 6, 0.0027478798307376258, ["mov     rbx, f", "mov     edi, 78h ; 'x'", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["mov~rbx,f", "mov~edi,0", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [3, 0, 333, 0, 0, 12, 1, 1, 13, 6, 0.005811809737854019, ["test    bpl, bpl", "movzx   eax, byte ptr [rsp+4F8h+subwidth]", "cmovnz  eax, ebp", "mov     byte ptr [rsp+4F8h+subwidth], al", "mov     rbx, f", "mov     edi, 70h ; 'p'", "mov     eax, 0", "movzx   esi, byte ptr [rsp+4F8h+to_uppcase_0]", "cmovnz  esi, eax", "mov     byte ptr [rsp+4F8h+to_uppcase_0], sil", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["test~bpl,bpl", "movzx~eax,[yte ptr [rsp+0]", "cmovnz~eax,ebp", "mov~[yte ptr [rsp+0],al", "mov~rbx,f", "mov~edi,0", "mov~eax,0", "movzx~esi,[yte ptr [rsp+0]", "cmovnz~esi,eax", "mov~[yte ptr [rsp+0],sil", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 1, 333, 0, 0, 5, 0, 1, 13, 6, 0.0027478798307376258, ["mov     rbx, f", "mov     edi, 58h ; 'X'", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     underlying_strftime"], ["mov~rbx,f", "mov~edi,<STR>", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [3, 1, 333, 0, 0, 7, 0, 1, 14, 5, 0.011290011061752673, ["mov     [rsp+4F8h+ufmt], 20h ; ' '", "mov     [rsp+4F8h+ufmt+1], 25h ; '%'", "mov     rbx, f", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "lea     rax, [rsp+4F8h+ufmt+2]", "jmp     loc_FD41"], ["mov~[rsp+0],<STR>", "mov~[rsp+0],0", "mov~rbx,f", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "lea~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 333, 0, 0, 6, 1, 1, 13, 6, 0.004174494758836233, ["test    bpl, bpl", "movzx   eax, byte ptr [rsp+4F8h+to_uppcase_0]", "cmovnz  eax, ebp", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "mov     edi, 41h ; 'A'", "jmp     short loc_F960"], ["test~bpl,bpl", "movzx~eax,[yte ptr [rsp+0]", "cmovnz~eax,ebp", "mov~[yte ptr [rsp+0],al", "mov~edi,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 24, 7, 0.0028795673625621123, ["cmp     eax, 2Bh ; '+'", "jz      short loc_1017A"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 333, 1, 0, 3, 0, 0, 16, 6, 0.014450511825540356, ["movzx   eax, byte ptr [f]", "mov     [p], al", "add     p, 1"], ["movzx~eax,<TAG>", "mov~<TAG>,al", "add~p,0"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.020265913041534942, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 78", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 20, 5, 0.025600056186680244, ["test    p, p", "jz      short loc_1019E"], ["test~p,p", "jz~FOO"]], [0, 0, 333, 0, 0, 2, 0, 0, 14, 5, 0.023203343107474583, ["mov     [rsp+4F8h+ufmt+2], cl", "lea     rax, [rsp+4F8h+ufmt+3]"], ["mov~[rsp+0],cl", "lea~rax,[rsp+0]"]], [3, 1, 333, 0, 0, 6, 0, 1, 14, 6, 0.015170403666180885, ["mov     [rsp+4F8h+ufmt], 20h ; ' '", "mov     [rsp+4F8h+ufmt+1], 25h ; '%'", "mov     rbx, f", "mov     byte ptr [rsp+4F8h+subwidth], 0", "mov     dword ptr [rsp+4F8h+subfmt], 0", "jmp     loc_FD32"], ["mov~[rsp+0],<STR>", "mov~[rsp+0],0", "mov~rbx,f", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 333, 0, 1, 5, 0, 2, 17, 7, 0.001448562850069355, ["mov     rdx, _n; len", "mov     rsi, [rsp+4F8h+src]; src", "mov     rdi, p; dest", "call    memcpy_uppcase", "jmp     short loc_10B54"], ["mov~rdx,_n", "mov~rsi,[rsp+0]", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [2, 0, 333, 1, 0, 7, 0, 1, 17, 10, 0.01460853686372974, ["mov     eax, 0FFFFF894h", "sub     eax, r10d", "cmp     r11d, eax", "setl    r8b", "lea     r9d, [r11+year_adjust+76Ch]", "mov     dword ptr [rsp+4F8h+subfmt], 4", "jmp     do_yearish"], ["mov~eax,0", "sub~eax,r10d", "cmp~r11d,eax", "setl~r8b", "lea~r9d,[r11+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 21, 6, 0.01715449581233649, ["cmp     dword ptr [rsp+4F8h+subfmt], 0", "jnz     short loc_10191"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [2, 0, 333, 0, 1, 24, 0, 1, 12, 7, 0.12155637104278966, ["mov     format_char, [rsp+4F8h+tp]; jumptable 000000000000F7EE case 115", "mov     rax, [rdi]", "mov     rdx, [rdi+8]", "mov     qword ptr [rsp+4F8h+ltm.tm_sec], rax", "mov     qword ptr [rsp+4F8h+ltm.tm_hour], rdx", "mov     rax, [rdi+10h]", "mov     rdx, [rdi+18h]", "mov     qword ptr [rsp+4F8h+ltm.tm_mon], rax", "mov     qword ptr [rsp+4F8h+ltm.tm_wday], rdx", "mov     rax, [rdi+20h]", "mov     rdx, [rdi+28h]", "mov     qword ptr [rsp+4F8h+ltm.tm_isdst], rax", "mov     [rsp+4F8h+ltm.tm_gmtoff], rdx", "mov     rax, [rdi+30h]", "mov     [rsp+4F8h+ltm.tm_zone], rax", "lea     rsi, [rsp+4F8h+ltm]; tm", "mov     rdi, [rsp+4F8h+var_4C8]; tz", "call    mktime_z", "mov     rsi, rax", "mov     rcx, t", "mov     t, [rsp+4F8h+var_4E0]", "lea     change_case, [rax+17h]", "mov     r8, 6666666666666667h", "mov     edi, 30h ; '0'"], ["mov~format_char,[rsp+0]", "mov~rax,<TAG>", "mov~rdx,[rdi+0]", "mov~[word ptr [rsp+0],rax", "mov~[word ptr [rsp+0],rdx", "mov~rax,[rdi+0]", "mov~rdx,[rdi+0]", "mov~[word ptr [rsp+0],rax", "mov~[word ptr [rsp+0],rdx", "mov~rax,[rdi+0]", "mov~rdx,[rdi+0]", "mov~[word ptr [rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,[rdi+0]", "mov~[rsp+0],rax", "lea~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~rsi,rax", "mov~rcx,t", "mov~t,[rsp+0]", "lea~change_case,[rax+0]", "mov~r8,0", "mov~edi,0"]], [1, 1, 333, 2, 1, 8, 0, 1, 21, 6, 0.0, ["movsxd  _w, r14d", "sub     rax, 1", "mov     [rsp+4F8h+subwidth], _delta_0", "mov     rdx, _delta_0; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, [rsp+4F8h+subwidth]"], ["movsxd~_w,r14d", "sub~rax,0", "mov~[rsp+0],_delta_0", "mov~rdx,_delta_0", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,[rsp+0]"]], [7, 0, 333, 9, 0, 21, 1, 0, 15, 12, 0.023084824328832545, ["add     eax, 16Dh", "sub     r8d, eax", "mov     r10d, r8d", "sub     r10d, ebx", "add     r10d, 17Eh", "mov     edx, 92492493h", "mov     eax, r10d", "imul    edx", "lea     eax, [rdx+r10]", "sar     eax, 2", "mov     edx, r10d", "sar     edx, 1Fh", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "sub     r8d, r10d", "lea     r10d, [r8+rdx+3]", "test    r10d, r10d", "cmovns  r9d, r10d", "sar     r10d, 1Fh", "add     r10d, 1"], ["add~eax,0", "sub~r8d,eax", "mov~r10d,r8d", "sub~r10d,ebx", "add~r10d,0", "mov~edx,0", "mov~eax,r10d", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,r10d", "sar~edx,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "sub~r8d,r10d", "lea~r10d,[r8+0]", "test~r10d,r10d", "cmovns~r9d,r10d", "sar~r10d,0", "add~r10d,0"]], [2, 0, 333, 0, 0, 3, 1, 1, 14, 13, 0.023005811809737854, ["mov     eax, 0", "test    r10b, 3", "jnz     short loc_10799"], ["mov~eax,0", "test~r10b,0", "jnz~FOO"]], [5, 0, 333, 3, 0, 11, 0, 1, 15, 13, 0.0028795673625621123, ["mov     edx, 51EB851Fh", "mov     eax, r10d", "imul    edx", "sar     edx, 5", "mov     eax, r10d", "sar     eax, 1Fh", "sub     edx, eax", "imul    edx, 64h", "mov     eax, 1", "cmp     r10d, edx", "jnz     short loc_10799"], ["mov~edx,0", "mov~eax,r10d", "imul~,edx", "sar~edx,0", "mov~eax,r10d", "sar~eax,0", "sub~edx,eax", "imul~edx,,0", "mov~eax,0", "cmp~r10d,edx", "jnz~FOO"]], [3, 1, 333, 3, 0, 12, 0, 0, 16, 13, 0.0, ["mov     edx, 51EB851Fh", "mov     eax, r10d", "imul    edx", "mov     eax, edx", "sar     eax, 7", "mov     edx, r10d", "sar     edx, 1Fh", "sub     eax, edx", "imul    eax, 190h", "cmp     r10d, eax", "setz    al", "movzx   eax, al"], ["mov~edx,0", "mov~eax,r10d", "imul~,edx", "mov~eax,edx", "sar~eax,0", "mov~edx,r10d", "sar~edx,0", "sub~eax,edx", "imul~eax,,<STR>", "cmp~r10d,eax", "setz~al", "movzx~eax,al"]], [0, 0, 333, 1, 0, 1, 0, 0, 17, 6, 0.028707881937738128, ["add     p, _n"], ["add~p,_n"]], [0, 0, 333, 0, 0, 2, 0, 1, 11, 6, 0.022180569943637735, ["mov     change_case, f; jumptable 000000000000F7EE default case", "jmp     short bad_format"], ["mov~change_case,f", "jmp~FOO"]], [1, 0, 333, 0, 0, 4, 0, 1, 10, 5, 0.74336733798044, ["movzx   esi, byte ptr [f]", "movsx   edi, sil", "cmp     sil, 7Ah ; 'z'; switch 123 cases", "ja      loc_10CF9; jumptable 000000000000F7EE default case"], ["movzx~esi,<TAG>", "movsx~edi,sil", "cmp~sil,0", "ja~FOO"]], [1, 0, 333, 1, 0, 3, 0, 0, 20, 5, 0.00869137710041613, ["movzx   eax, byte ptr [rsp+4F8h+sign_char]", "mov     [p], al", "add     p, 1"], ["movzx~eax,[yte ptr [rsp+0]", "mov~<TAG>,al", "add~p,0"]], [2, 0, 333, 1, 0, 4, 0, 0, 7, 8, 0.7430249503976963, ["movsx   edx, dl; jumptable 000000000000F72B default case", "sub     edx, 30h ; '0'", "cmp     edx, 9", "jbe     short loc_F771"], ["movsx~edx,dl", "sub~edx,0", "cmp~edx,0", "jbe~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 12, 6, 0.0045292529885088365, ["test    ecx, ecx; jumptable 000000000000F7EE case 65", "jnz     loc_FBF7"], ["test~ecx,ecx", "jnz~FOO"]], [0, 0, 333, 1, 0, 2, 0, 1, 19, 4, 0.017268625006584375, ["add     i, _incr", "jmp     loc_10077"], ["add~i,_incr", "jmp~FOO"]], [1, 0, 333, 0, 0, 4, 0, 1, 13, 9, 0.0008076835285235193, ["mov     rax, [rsp+4F8h+tp]", "mov     ebp, [rax+18h]", "mov     dword ptr [rsp+4F8h+subfmt], 1", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~ebp,[rax+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.0031026380604102437, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 119", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 333, 0, 0, 3, 0, 1, 8, 7, 0.7432619879549803, ["movzx   ecx, byte ptr [f]", "cmp     cl, 45h ; 'E'", "jz      short loc_F7C3"], ["movzx~ecx,<TAG>", "cmp~cl,0", "jz~FOO"]], [3, 0, 333, 2, 0, 5, 0, 1, 11, 8, 0.020200867381876278, ["add     r15, 1", "movsx   eax, byte ptr [f]", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_F75C"], ["add~r15,0", "movsx~eax,<TAG>", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [3, 0, 333, 1, 0, 7, 0, 1, 14, 10, 0.0015012378627991502, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, [rax+14h]", "cmp     r9d, 0FFFFF894h", "setl    r8b", "add     r9d, 76Ch", "mov     dword ptr [rsp+4F8h+subfmt], 4", "jmp     do_yearish"], ["mov~rax,[rsp+0]", "mov~r9d,[rax+0]", "cmp~r9d,0", "setl~r8b", "add~r9d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 9, 7, 0.0028795673625621123, ["cmp     cl, 4Fh ; 'O'", "jz      short loc_F7C3"], ["cmp~cl,0", "jz~FOO"]], [4, 0, 333, 3, 0, 11, 0, 1, 18, 9, 0.01725106666900778, ["mov     edx, 92492493h", "mov     eax, r9d", "imul    edx", "add     edx, r9d", "sar     edx, 2", "mov     ebp, edx", "sar     r9d, 1Fh", "sub     ebp, r9d", "lea     ebp, [rbp+1]", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_number"], ["mov~edx,0", "mov~eax,r9d", "imul~,edx", "add~edx,r9d", "sar~edx,0", "mov~ebp,edx", "sar~r9d,0", "sub~ebp,r9d", "lea~ebp,[rbp+0]", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 10, 6, 0.001448562850069355, ["mov     ecx, 0", "jmp     short loc_F7CA"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 13, 5, 0.010038979509420048, ["cmp     [rsp+4F8h+pad], 0", "jnz     short loc_10220"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 25, 6, 0.001448562850069355, ["mov     rdx, [rsp+4F8h+subwidth]; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, [rsp+4F8h+subwidth]", "jmp     short loc_10191"], ["mov~rdx,[rsp+0]", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,[rsp+0]", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 12, 6, 0.004990159349894559, ["cmp     ecx, 45h ; 'E'; jumptable 000000000000F7EE case 108", "jz      loc_FBF7"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 333, 0, 0, 3, 0, 1, 8, 11, 0.019788246448826225, ["mov     r14d, 0", "mov     ecx, 7FFFFFFFh", "jmp     short loc_F7A2"], ["mov~r14d,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 333, 0, 0, 2, 1, 1, 19, 5, 0.0310431408354257, ["test    p, p", "jz      short loc_FF96"], ["test~p,p", "jz~FOO"]], [2, 0, 333, 1, 0, 4, 0, 1, 11, 10, 0.0028795673625621123, ["movsx   eax, byte ptr [f]", "sub     eax, 30h ; '0'", "cmp     eax, 7", "jle     short loc_F7B4"], ["movsx~eax,<TAG>", "sub~eax,0", "cmp~eax,0", "jle~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 10, 10, 0.00862114375010974, ["cmp     r14d, 0CCCCCCCh", "jz      short loc_F77E"], ["cmp~r14d,0", "jz~FOO"]], [4, 0, 333, 7, 0, 21, 2, 1, 13, 6, 0.12158270854915455, ["mov     rax, t", "imul    r8", "sar     rdx, 2", "mov     rax, t", "sar     rax, 3Fh", "sub     rdx, rax", "mov     r9, rdx", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     t, rax", "mov     rdx, rcx", "mov     rcx, r9", "mov     eax, edi", "sub     eax, edx", "add     edx, 30h ; '0'", "test    rsi, rsi", "cmovs   edx, eax", "sub     bufp_0, 1", "mov     [bufp_0+0], dl", "test    r9, r9", "jnz     short loc_1054C"], ["mov~rax,t", "imul~,r8", "sar~rdx,0", "mov~rax,t", "sar~rax,0", "sub~rdx,rax", "mov~r9,rdx", "lea~rax,<TAG>", "add~rax,rax", "sub~t,rax", "mov~rdx,rcx", "mov~rcx,r9", "mov~eax,edi", "sub~eax,edx", "add~edx,0", "test~rsi,rsi", "cmovs~edx,eax", "sub~bufp_0,0", "mov~[bufp_0+0],dl", "test~r9,r9", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 4C8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 333, 1, 1, 5, 0, 1, 24, 6, 0.004336909381419766, ["mov     rdx, [rsp+4F8h+subwidth]; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, [rsp+4F8h+subwidth]"], ["mov~rdx,[rsp+0]", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,[rsp+0]"]], [0, 0, 333, 0, 0, 2, 0, 1, 12, 9, 0.001448562850069355, ["mov     r14d, ecx", "jmp     short loc_F792"], ["mov~r14d,ecx", "jmp~FOO"]], [0, 0, 333, 0, 0, 1, 0, 0, 10, 9, 0.008559689568591645, ["mov     r14d, ecx"], ["mov~r14d,ecx"]], [1, 0, 333, 0, 0, 2, 0, 1, 9, 10, 0.0200428423436869, ["cmp     r14d, 0CCCCCCCh", "jg      short loc_F78F"], ["cmp~r14d,0", "jg~FOO"]], [0, 1, 333, 1, 1, 5, 0, 1, 20, 5, 0.0, ["mov     rdx, rdi; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, [rsp+4F8h+padding]"], ["mov~rdx,rdi", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,[rsp+0]"]], [7, 0, 333, 5, 0, 24, 2, 0, 13, 10, 0.008603585412533142, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+14h]", "mov     edx, 51EB851Fh", "mov     eax, esi", "imul    edx", "mov     eax, edx", "sar     eax, 5", "mov     edx, esi", "sar     edx, 1Fh", "sub     eax, edx", "lea     ebp, [rax+13h]", "imul    eax, 64h", "mov     ebx, esi", "sub     ebx, eax", "mov     eax, ebx", "shr     eax, 1Fh", "test    ebp, ebp", "setnle  dl", "and     eax, edx", "cmp     esi, 0FFFFF894h", "setl    r8b", "mov     r9d, ebp", "sub     r9d, eax", "mov     dword ptr [rsp+4F8h+subfmt], 2"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]", "mov~edx,0", "mov~eax,esi", "imul~,edx", "mov~eax,edx", "sar~eax,0", "mov~edx,esi", "sar~edx,0", "sub~eax,edx", "lea~ebp,[rax+0]", "imul~eax,,0", "mov~ebx,esi", "sub~ebx,eax", "mov~eax,ebx", "shr~eax,0", "test~ebp,ebp", "setnle~dl", "and~eax,edx", "cmp~esi,0", "setl~r8b", "mov~r9d,ebp", "sub~r9d,eax", "mov~[word ptr [rsp+0],0"]], [1, 0, 333, 1, 0, 3, 0, 0, 22, 5, 0.01731252085052587, ["movzx   eax, byte ptr [rsp+4F8h+sign_char]", "mov     [p], al", "add     p, 1"], ["movzx~eax,[yte ptr [rsp+0]", "mov~<TAG>,al", "add~p,0"]], [0, 0, 333, 0, 1, 4, 0, 1, 18, 7, 0.010038979509420046, ["mov     rdx, _n; len", "mov     rsi, rbp; src", "mov     rdi, p; dest", "call    memcpy_uppcase"], ["mov~rdx,_n", "mov~rsi,rbp", "mov~rdi,p", "call~FOO"]], [0, 0, 333, 0, 0, 4, 0, 1, 11, 9, 0.004336909381419766, ["lea     edx, [width_0+width_0*4]", "movsx   eax, byte ptr [f]", "lea     r14d, [rax+rdx*2-30h]", "jmp     short loc_F792"], ["lea~edx,<TAG>", "movsx~eax,<TAG>", "lea~r14d,[rax+0]", "jmp~FOO"]], [0, 0, 333, 1, 0, 2, 0, 1, 21, 4, 0.025810756237599423, ["add     i, _incr", "jmp     loc_10077"], ["add~i,_incr", "jmp~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 26, 8, 0.0014485628500693554, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta", "jmp     loc_1003E"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~rdi,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 0, 14, 7, 0.01431882429371587, ["cmp     _w, 1", "jbe     short loc_103F3"], ["cmp~_w,0", "jbe~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 21, 9, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     rdi, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~rdi,p", "call~FOO", "add~p,_delta"]], [2, 0, 333, 0, 0, 4, 0, 1, 19, 10, 0.0029059048689270097, ["mov     r9d, r8d", "mov     r8d, 0", "mov     dword ptr [rsp+4F8h+subfmt], 2", "jmp     do_yearish"], ["mov~r9d,r8d", "mov~r8d,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 19, 8, 0.025775639562446225, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      short loc_101DB"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 333, 0, 0, 2, 0, 1, 13, 7, 0.0031487952054032407, ["mov     edi, 79h ; 'y'", "jmp     short loc_10D94"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 333, 1, 0, 2, 0, 0, 9, 6, 0.7389777535862904, ["movsx   ecx, cl", "add     r15, 1"], ["movsx~ecx,cl", "add~r15,0"]], [0, 0, 333, 0, 1, 4, 0, 1, 20, 7, 0.011456815268730354, ["mov     rdx, _n; len", "mov     rsi, bufp_0; src", "mov     rdi, p; dest", "call    memcpy_uppcase"], ["mov~rdx,_n", "mov~rsi,bufp_0", "mov~rdi,p", "call~FOO"]], [0, 0, 333, 0, 1, 5, 0, 2, 20, 7, 0.011456815268730354, ["mov     rdx, _n; n", "mov     rsi, bufp_0; src", "mov     rdi, p; dest", "call    _memcpy", "jmp     short loc_101CE"], ["mov~rdx,_n", "mov~rsi,bufp_0", "mov~rdi,p", "call~FOO", "jmp~FOO"]], [0, 1, 333, 1, 1, 6, 0, 2, 17, 7, 0.001448562850069355, ["mov     rdx, _delta; n", "mov     esi, 20h ; ' '; c", "mov     format_char, p; s", "call    _memset", "add     p, _delta", "jmp     short loc_103F3"], ["mov~rdx,_delta", "mov~esi,<STR>", "mov~format_char,p", "call~FOO", "add~p,_delta", "jmp~FOO"]], [1, 0, 333, 1, 1, 5, 0, 1, 16, 7, 0.004336909381419766, ["mov     rdx, _delta; n", "mov     esi, 30h ; '0'; c", "mov     format_char, p; s", "call    _memset", "add     p, _delta"], ["mov~rdx,_delta", "mov~esi,0", "mov~format_char,p", "call~FOO", "add~p,_delta"]], [0, 0, 333, 0, 0, 2, 1, 1, 12, 6, 0.011697444304155065, ["test    ecx, ecx; jumptable 000000000000F7EE case 70", "jnz     loc_FBF7"], ["test~ecx,ecx", "jnz~FOO"]]], "func_feature": [40, 87, 285, 4, 339, 552, 3, 1618, 0.03981, 8, 210], "succs": [[64], [0, 328], [0], [41, 202], [209, 3], [58, 199], [5], [5], [274], [8, 137, 138, 20, 21, 280, 287, 161, 162, 294, 39, 168, 169, 298, 301, 264, 51, 180, 310, 184, 185, 60, 196, 73, 74, 204, 34, 78, 81, 338, 211, 213, 219, 93, 99, 232, 235, 241, 245, 119, 120, 121, 126], [89, 28], [96, 10], [173, 13], [12], [12], [115, 37], [227, 15], [146, 15], [175], [18, 324], [210, 23], [42, 23], [70, 22], [22], [35], [24, 35], [257], [26, 243], [75, 53], [111], [179, 29], [317, 278], [323, 31], [271], [33, 23], [43], [25, 35], [92, 110], [276], [38, 23], [293], [40, 189], [271], [117], [43, 36], [248], [45, 69], [329, 236], [329, 47], [109, 87], [49, 110], [332, 132], [89], [75, 52], [154, 155], [56, 54], [57, 54], [54], [63], [304, 23], [59, 135], [330, 191], [306, 61], [260, 108], [198, 63], [88], [65, 67], [65, 327], [248], [195, 68], [110, 79], [70], [70], [275, 23], [111], [89], [256, 95], [76, 94], [217, 23], [90, 174], [283], [80, 322], [98, 151], [82, 150], [102], [84, 86], [84, 271], [91], [87], [96], [107, 19], [124, 133], [50, 91], [222, 103], [85], [156, 94], [64], [17, 114], [104, 148], [136, 23], [19], [19], [144], [102], [148, 134], [220, 149], [105, 290], [101, 127], [178, 110], [88, 147], [139], [83, 110], [225, 110], [262, 110], [110, 263], [312, 110], [44, 110], [182, 110], [281, 110], [1, 110], [11, 110], [4, 110], [41], [265, 122], [133], [248], [125, 23], [100, 101], [246], [128, 246], [129], [130], [130, 131], [117], [151], [283], [248], [274], [152, 23], [177, 316], [139, 141], [139, 142], [139], [144, 176], [145, 143], [143], [117, 118], [88, 66], [151], [220, 221], [64], [150], [216], [85], [153, 77], [85], [155, 214], [279], [157, 269], [48, 331], [331, 159], [14, 166], [248], [16, 117], [163, 223], [97, 163], [173], [111], [23, 167], [203, 23], [64], [170, 55], [6, 7], [181, 23], [64], [174], [224, 165], [], [197, 183], [111], [111], [171], [160, 208], [192, 193], [200, 23], [112, 72], [336, 337], [337, 186], [293], [284, 188], [129], [252, 190], [197], [192], [194, 226], [194], [201, 23], [64], [140], [140], [248], [216], [265, 123], [248], [233], [64], [64], [64, 113], [64], [64], [85], [249, 106], [116, 117], [271], [85], [248], [248, 215], [248], [248], [218, 23], [240], [220], [282], [97], [97], [228, 205], [248], [117], [242, 279], [27], [229, 231], [229, 239], [273, 23], [254, 71], [248], [234, 23], [331], [27, 238], [27, 230], [27], [285, 62], [23, 247], [269, 158], [258, 255], [233], [272, 244], [85], [85], [85], [233], [259], [297, 250, 253, 261], [129], [259], [23], [257], [233], [206], [257], [297, 251], [259], [259], [237, 206], [266, 299], [171], [41], [296, 270], [208], [216], [279], [288, 296], [282, 207], [271], [271], [271], [271], [207], [276], [309, 317], [205], [46, 23], [326, 286], [207], [282], [293], [129], [32, 323], [315], [296], [240], [289, 291], [289, 292], [289], [209], [233], [9, 294], [299], [302, 311], [277, 23], [117], [248], [300, 23], [305, 333], [320, 302], [129], [307, 333], [248], [295], [179, 30], [323], [268, 23], [320], [321, 212], [325, 318], [313, 325], [315, 164], [], [323], [303], [303], [314, 319], [212], [129], [326], [175], [303], [117], [88], [2, 187], [331], [129], [334, 335], [283], [295], [267], [267], [2], [2], [308, 23]], "fname": "__strftime_internal", "n_num": 339}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,<STR>", "retn"]], [4, 2, 2, 2, 1, 17, 2, 2, 0, 1, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "mov     [rsp+18h+tzset_called], 0", "push    ns_0; ns", "push    tz_0; tz", "lea     rax, [rsp+28h+tzset_called]", "push    rax; tzset_called", "push    0FFFFFFFFFFFFFFFFh; width", "mov     r9d, 0; yr_spec", "mov     r8d, 0; upcase", "call    __strftime_internal", "add     rsp, 20h", "mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_10EFE"], ["sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "push~ns_0", "push~tz_0", "lea~rax,[rsp+0]", "push~rax", "push~0", "mov~r9d,0", "mov~r8d,0", "call~FOO", "add~rsp,<STR>", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 1, 3, 2, 2, 20, 0.0, 1, 3], "succs": [[], [0, 2], []], "fname": "nstrftime", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 0, 2, 6, 0, 2, 0, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~argv0,<TAG>", "call~FOO", "call~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0, ["push    rbx", "test    argv0, argv0", "jz      short loc_10F85"], ["push~rbx", "test~argv0,argv0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 4, 1, 1, 11, 1, 2, 1, 0, 0.13333333333333333, ["mov     rbx, argv0", "mov     esi, 2Fh ; '/'; c", "call    _strrchr", "lea     rdx, [slash+1]", "test    slash, slash", "mov     slash, rdx", "cmovz   rax, argv0", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_10F75"], ["mov~rbx,argv0", "mov~esi,0", "call~FOO", "lea~rdx,[slash+0]", "test~slash,slash", "mov~slash,rdx", "cmovz~rax,argv0", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 2, 0, 0.13333333333333333, ["lea     rsi, [base-7]", "mov     ecx, 7", "lea     rdi, aLibs; \"/.libs/\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_10F75"], ["lea~rsi,[base-7]+0]", "mov~ecx,0", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 2, 0, 0, 9, 1, 1, 3, 0, 0.1, ["mov     ecx, 3", "lea     rdi, aLt; \"lt-\"", "mov     rsi, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "mov     rbx, base", "test    dl, dl", "jnz     short loc_10F75"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "mov~rbx,base", "test~dl,dl", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 4, 0, 0.0, ["lea     rbx, [base+3]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[base+0]", "mov~<TAG>,argv0"]]], "func_feature": [3, 4, 7, 0, 7, 9, 1, 43, 0.05238, 7, 1], "succs": [[], [0, 3], [], [2, 4], [2, 5], [2, 6], [2]], "fname": "set_program_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 18, 0, 0, 3, 1, 1, 0, 0, 0.21384615384615385, ["mov     eax, 0", "test    dl, dl", "jz      loc_110A9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 5, 12, 0.08384615384615385, ["cmp     [s1+5], cl", "setz    dl", "jmp     loc_10FFA"], ["cmp~[s1+0],cl", "setz~dl", "jmp~FOO"]], [1, 0, 19, 0, 0, 4, 1, 0, 5, 12, 0.08384615384615385, ["movzx   eax, byte ptr [s1+5]", "and     eax, 0FFFFFFDFh", "cmp     al, cl", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,cl", "setz~dl"]], [1, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.07538461538461538, ["mov     eax, 0", "test    dl, dl", "jz      short loc_110A9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 17, 0, 0.04923076923076923, ["cmp     [s1+8], r11b", "setz    dl", "jmp     short loc_11081"], ["cmp~[s1+0],r11b", "setz~dl", "jmp~FOO"]], [1, 0, 4, 0, 0, 4, 1, 0, 17, -1, 0.04923076923076923, ["movzx   eax, byte ptr [s1+8]", "and     eax, 0FFFFFFDFh", "cmp     al, r11b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r11b", "setz~dl"]], [1, 0, 17, 0, 0, 3, 1, 1, 7, 10, 0.22153846153846155, ["mov     eax, 1", "test    cl, cl", "jz      loc_110A9"], ["mov~eax,0", "test~cl,cl", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 19, -1, 0.03692307692307692, ["mov     eax, 1", "test    r11b, r11b", "jz      short loc_110A9"], ["mov~eax,0", "test~r11b,r11b", "jz~FOO"]], [0, 1, 16, 0, 0, 3, 0, 1, 8, 9, 0.23076923076923078, ["lea     eax, [s26-41h]", "cmp     al, 19h", "ja      loc_110C5"], ["lea~eax,[s26-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [2, 0, 1, 2, 1, 6, 1, 1, 20, -1, 0.0, ["add     s2, 9; s2", "add     s1, 9; s1", "call    c_strcasecmp", "test    eax, eax", "setz    al", "movzx   eax, al"], ["add~s2,0", "add~s1,0", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al"]], [1, 0, 14, 0, 0, 4, 1, 0, 9, 8, 0.11076923076923077, ["movzx   eax, byte ptr [s1+6]", "and     eax, 0FFFFFFDFh", "cmp     al, r8b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r8b", "setz~dl"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 23, 0, 0, 3, 1, 1, 2, 15, 0.10615384615384615, ["mov     eax, 0", "test    r10b, r10b", "jz      loc_110A9"], ["mov~eax,0", "test~r10b,r10b", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 3, 14, 0.12923076923076923, ["mov     eax, 1", "test    dl, dl", "jz      loc_110A9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 10, 7, 0.24461538461538462, ["mov     eax, 0", "test    dl, dl", "jz      short loc_110A9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 1, 1, 11, 6, 0.23692307692307693, ["mov     eax, 1", "test    r8b, r8b", "jz      short loc_110A9"], ["mov~eax,0", "test~r8b,r8b", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 14, 3, 0.19846153846153847, ["mov     eax, 0", "test    dl, dl", "jz      short loc_110A9"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, 2, 0.1753846153846154, ["mov     eax, 1", "test    r9b, r9b", "jz      short loc_110A9"], ["mov~eax,0", "test~r9b,r9b", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 9, 8, 0.11076923076923077, ["cmp     [s1+6], r8b", "setz    dl", "jmp     loc_1102D"], ["cmp~[s1+0],r8b", "setz~dl", "jmp~FOO"]], [1, 1, 26, 1, 0, 5, 0, 1, 0, 17, 0.0, ["sub     rsp, 8", "mov     r11d, [rsp+8+s28]", "lea     eax, [s24-41h]", "cmp     al, 19h", "ja      loc_110AE"], ["sub~rsp,0", "mov~r11d,[rsp+0]", "lea~eax,[s24-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 16, 0.01846153846153846, ["cmp     [s1+4], dl", "setz    r10b", "jmp     loc_10FC8"], ["cmp~[s1+0],dl", "setz~r10b", "jmp~FOO"]], [0, 1, 21, 0, 0, 3, 0, 1, 4, 13, 0.15384615384615385, ["lea     eax, [s25-41h]", "cmp     al, 19h", "ja      loc_110BA"], ["lea~eax,[s25-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [1, 0, 24, 0, 0, 4, 1, 0, 1, 16, 0.01846153846153846, ["movzx   eax, byte ptr [s1+4]", "and     eax, 0FFFFFFDFh", "cmp     al, dl", "setz    r10b"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,dl", "setz~r10b"]], [0, 1, 11, 0, 0, 3, 0, 1, 12, 5, 0.23076923076923078, ["lea     eax, [s27-41h]", "cmp     al, 19h", "ja      loc_110D1"], ["lea~eax,[s27-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [1, 0, 9, 0, 0, 4, 1, 0, 13, 4, 0.09923076923076923, ["movzx   eax, byte ptr [s1+7]", "and     eax, 0FFFFFFDFh", "cmp     al, r9b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r9b", "setz~dl"]], [0, 0, 9, 0, 0, 3, 0, 1, 13, 4, 0.09923076923076923, ["cmp     [s1+7], r9b", "setz    dl", "jmp     loc_11059"], ["cmp~[s1+0],r9b", "setz~dl", "jmp~FOO"]], [0, 1, 6, 0, 0, 3, 0, 1, 16, 1, 0.15384615384615385, ["lea     eax, [r11-41h]", "cmp     al, 19h", "ja      short loc_110DD"], ["lea~eax,[r11-41h]+0]", "cmp~al,<STR>", "ja~FOO"]]], "func_feature": [1, 16, 21, 0, 27, 41, 2, 90, 0.11595, 0, 4], "succs": [[11, 6], [0], [0], [11, 7], [3], [3], [8, 11], [9, 11], [10, 18], [11], [14], [], [11, 13], [11, 21], [11, 15], [11, 23], [17, 11], [26, 11], [14], [20, 22], [12], [1, 2], [12], [24, 25], [16], [16], [4, 5]], "fname": "strcaseeq4", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.0631868131868132, ["cmp     dl, 47h ; 'G'", "jnz     loc_11208"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 13, 0, 1, 5, 1, 2, 1, 2, 0.06593406593406594, ["call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_1119D"], ["call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_191E1", "lea     rdx, unk_191D4", "cmovnz  rax, rdx", "jmp     loc_11108"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 5, 1, 0.027472527472527476, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 0; s26", "mov     ecx, 0; s25", "mov     edx, 38h ; '8'; s24", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      short loc_11208"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 1, 0.05494505494505495, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     loc_11208"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 1, 0.06593406593406594, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     loc_11208"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 14, 1, 1, 11, 0, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, msgid", "mov     ebp, esi", "mov     edx, 5; category", "mov     s, msgid; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "cmp     msgid, translation", "jz      short loc_1110F"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,msgid", "mov~ebp,esi", "mov~edx,0", "mov~s,msgid", "mov~edi,0", "call~FOO", "cmp~msgid,translation", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 1, 0.0521978021978022, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_11208"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 1, 0.04395604395604396, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     short loc_11208"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "pop     msgid", "pop     s", "retn"], ["add~rsp,0", "pop~msgid", "pop~s", "retn"]], [1, 0, 1, 0, 0, 5, 0, 1, 7, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_191DD", "lea     rdx, unk_191D8", "cmovnz  rax, rdx", "jmp     loc_11108"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 3, 0, 0.049450549450549455, ["cmp     ebp, 9", "lea     rax, unk_191DB", "lea     rdx, aInvalidSSArgum+19h; \"'\"", "cmovnz  rax, rdx", "jmp     loc_11108"], ["cmp~ebp,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 6, 1, 0.03296703296703297, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 30h ; '0'; s26", "mov     ecx, 33h ; '3'; s25", "mov     edx, 30h ; '0'; s24", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      loc_11208"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 1, 0.06593406593406594, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     loc_11208"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 3, 1, 0.049450549450549455, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     short loc_11208"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]]], "func_feature": [4, 6, 18, 0, 15, 25, 2, 79, 0.03846, 8, 6], "succs": [[11, 13], [0, 7], [9], [2, 11], [11, 12], [11, 4], [9, 1], [11, 14], [11, 3], [], [9], [9], [10, 11], [11, 5], [8, 11]], "fname": "gettext_quote", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 266, 0, 0, 2, 0, 0, 0, 0, 0.019790041140587317, ["cmp     buffersize_0, len_0", "jbe     short loc_11931"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 14, 13, 0.051657445500543804, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   edx, [rsp+0E8h+pending_shell_escape_end]", "xor     edx, 1", "and     al, dl", "jz      short loc_11961"], ["cmp~[rsp+0],0", "setz~al", "movzx~edx,[rsp+0]", "xor~edx,0", "and~al,dl", "jz~FOO"]], [1, 0, 266, 1, 0, 4, 1, 1, 8, 10, 0.011193077032203149, ["add     len_0, 1", "movzx   eax, byte ptr [rdx+len_0]", "test    al, al", "jz      short loc_1138B"], ["add~len_0,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 7, 11, 0.01037026528585615, ["cmp     buffersize_0, len_0", "jbe     short loc_113FC"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 8, 11, 0.0, ["mov     [rcx+len_0], al", "jmp     short loc_113FC"], ["mov~<TAG>,al", "jmp~FOO"]], [3, 0, 266, 1, 0, 9, 0, 1, 11, 12, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+argsize], rax", "jmp     short loc_11BB1"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 10, 12, 0.0880124840402894, ["mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jz      short loc_11BE8"], ["mov~[word ptr [rsp+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.03614697120158888, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_1206C"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 6, 12, 0.009916300184423322, ["mov     rcx, [rsp+0E8h+buffer]", "jmp     short loc_11409"], ["mov~rcx,[rsp+0]", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, 3, 0.02025819265143992, ["test    dl, dl", "jz      short loc_1203F"], ["test~dl,dl", "jz~FOO"]], [0, 0, 12, 0, 0, 6, 1, 1, 9, 3, 0.03311107958575684, ["mov     rax, buffersize_0", "mov     buffersize_0, len_0", "mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+quote_string]", "test    rax, rax", "jz      short loc_1203F"], ["mov~rax,buffersize_0", "mov~buffersize_0,len_0", "mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 266, 0, 0, 7, 2, 1, 12, 12, 0.06449141722230103, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   ecx, [rsp+0E8h+pending_shell_escape_end]", "xor     ecx, 1", "mov     rdx, len_0", "and     al, cl", "jz      short loc_11652"], ["cmp~[rsp+0],0", "setz~al", "movzx~ecx,[rsp+0]", "xor~ecx,0", "mov~rdx,len_0", "and~al,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.06761242729465172, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_12054"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.019889346006525747, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_11C8C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 15, 10, 0.029621222868491982, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short loc_11C8C"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 15, 0.019790041140587317, ["cmp     buffersize_0, r14", "jbe     short loc_11622"], ["cmp~buffersize_0,r14", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_11868"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.01652716697403887, ["cmp     [rsp+0E8h+pending_shell_escape_end], 0", "jz      loc_11974"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 6, 10, 0.003688466449141722, ["mov     r14d, 0", "jmp     loc_1138B"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 1, 1, 5, 11, 0.016541353383458645, ["mov     rdx, [rsp+0E8h+quote_string_1]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_11414"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 12, 12, 0.03302596112923819, ["test    buffersize_0, buffersize_0", "jz      short loc_11AF9"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, 4, 0.00042559228259327563, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 5, 0.003688466449141722, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_11A19"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 15, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 16, 0.020612852886934315, ["lea     pending_shell_escape_end_0, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_11E27"], ["lea~pending_shell_escape_end_0,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 17, 0.019790041140587317, ["cmp     r15, len_0", "jbe     short loc_11E18"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 17, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.005589445311391686, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      loc_119E5"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 1, 7, 1, 2, 10, 6, 0.010341892467016597, ["mov     rax, [rsp+0E8h+arg]", "lea     rdi, [rax+i]; s1", "mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+quote_string]; s2", "call    _memcmp", "test    eax, eax", "jnz     short loc_115C8"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.003674280039721946, ["mov     ebp, 0", "jmp     short loc_11D7A"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 10, 0.019860973187686197, ["cmp     byte ptr [rsi], 0", "jz      loc_11D56"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.006667612427294652, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000112F0 case 4", "jnz     loc_114FC"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 2, 10, 0.1235494396368279, ["mov     edx, eax", "lea     rcx, off_19240", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["mov~edx,eax", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 61h ; 'a'; jumptable 0000000000011A17 case 7", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 9, 6, 0.3594978011065399, ["movzx   eax, r12b", "lea     rsi, off_192E4", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["movzx~eax,r12b", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 14, 0.020612852886934315, ["lea     len_0, [r14+1]", "cmp     buffersize_0, len_0", "jbe     short loc_11636"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 4, 11, 4.255922825932756e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 76h ; 'v'; jumptable 0000000000011A17 case 11", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 8, 0, 0, 15, 10, 0.02983401900978862, ["mov     rsi, r14", "mov     bytes, m", "mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     rcx, [rsp+0E8h+argsize]", "cmp     rbx, rcx", "jnb     loc_11D4F"], ["mov~rsi,r14", "mov~bytes,m", "mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~rbx,rcx", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.062391828628174203, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_11C0C"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 15, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     r15, len_0", "jbe     short loc_11E36"], ["lea~len_0,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 16, 0.0, ["mov     byte ptr [r10+r14+1], 24h ; '$'"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 8, 0.001063980706483189, ["mov     eax, 5Ch ; '\\'", "jmp     short c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 9, 0.010270960419917718, ["movzx   esi, [rsp+0E8h+elide_outer_quotes]", "test    [rsp+0E8h+backslash_escapes], sil", "jz      short loc_1182A"], ["movzx~esi,[rsp+0]", "test~[rsp+0],sil", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 9, 0.006667612427294652, ["cmp     byte ptr [rsp+0E8h+ps], 0", "jnz     loc_11F43"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 14, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+1], 24h ; '$'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.010384451695275925, ["test    buffersize_0, buffersize_0", "jz      loc_11524"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013221733579231097, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000112F0 case 2", "jz      short loc_1142F"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 12, 12, 0.1223152220173074, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     process_input"], ["mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 6, 2, 1, 11, 4, 0.12223010356078876, ["test    buffersize_0, buffersize_0", "setz    cl", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   al", "test    cl, al", "jz      short loc_11FFB"], ["test~buffersize_0,buffersize_0", "setz~cl", "cmp~[rsp+0],0", "setnz~al", "test~cl,al", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.019633990636969783, ["movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "test    bl, bl", "jnz     loc_12067"], ["movzx~ebx,[rsp+0]", "test~bl,bl", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.032841537806781104, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000011A17 case 92", "jz      short loc_11831"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 14, 0.022258476379628314, ["add     r14, 3", "mov     r9d, r8d"], ["add~r14,0", "mov~r9d,r8d"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 15, 0.0, ["mov     byte ptr [r10+r14+2], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [2, 0, 266, 0, 0, 5, 0, 1, 10, 8, 0.009958859412682649, ["mov     rcx, [rsp+0E8h+argsize]; jumptable 0000000000011A17 cases 123,125", "cmp     rcx, 1", "setnz   al", "cmp     rcx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_11A59"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "setnz~al", "cmp~rcx,0", "jz~FOO"]], [0, 0, 266, 0, 0, 1, 0, 0, 17, 11, 0.013250106398070647, ["mov     rsi, [rsp+0E8h+var_B0]"], ["mov~rsi,[rsp+0]"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 13, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_1164A"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 11, 7, 0.010781671159029648, ["test    al, al", "jnz     loc_11F26"], ["test~al,al", "jnz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 11, 8, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al", "jmp     short loc_11A3D"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 12, 12, 0.016512980564619095, ["mov     ebp, ebx", "mov     [rsp+0E8h+c], 5Ch ; '\\'"], ["mov~ebp,ebx", "mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.058362888352957866, ["cmp     r15, len_0", "jbe     short loc_11E47"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.00292594694282877, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 8, 5, 0.00621010072350688, ["test    [rsp+0E8h+elide_outer_quotes], al", "jnz     loc_12108"], ["test~[rsp+0],al", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 11, 0.49803754669693107, ["cmp     bl, 1", "jz      loc_11974"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 6, 0.3438312763039677, ["cmp     [rsp+0E8h+is_right_quote], 0", "jz      store_c"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 16, 12, 0.08118882110937722, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 20, 12, 0.05084409136047666, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "mov     ebx, ecx", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "mov~ebx,ecx", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 12, 0.006681798836714427, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 5Ch ; '\\'", "jmp     store_c"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 15, 14, 0.05507164136756987, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    bl", "mov     r8d, r9d", "xor     r8d, 1", "and     r8b, bl", "jz      short loc_11E3D"], ["cmp~[rsp+0],0", "setz~bl", "mov~r8d,r9d", "xor~r8d,0", "and~r8b,bl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 5, 0.06291672577670591, ["test    r12b, r12b", "jnz     loc_120F8"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 6, 6, 0.7185239040998723, ["test    bpl, bpl", "jz      loc_11F6A"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 6, 7, 0.0, ["mov     argsize_0, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl", "jmp     loc_119B4"], ["mov~argsize_0,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl", "jmp~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 5, 7, 0.7177010923535253, ["mov     rax, [rsp+0E8h+argsize]", "cmp     rax, i", "setnz   bpl", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_11F57"], ["mov~rax,[rsp+0]", "cmp~rax,i", "setnz~bpl", "cmp~rax,0", "jz~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 18, 10, 0.0136898850900837, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     rcx, rdx", "jbe     loc_11D5D"], ["add~m,0", "lea~rdx,[i+0]", "cmp~rcx,rdx", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 19, 10, 0.003333806213647326, ["cmp     byte ptr [rsi+m], 0", "jnz     short loc_11C41"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.022258476379628314, ["lea     len_0, [r14+3]", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["lea~len_0,[r14+0]", "mov~[rsp+0],al"]], [3, 0, 266, 0, 0, 4, 0, 1, 14, 9, 0.0034614838984253085, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 8, 0.05553979287842247, ["lea     rax, [i+2]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_11EFE"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 0", "jmp     short loc_120D0"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 2, 0.006667612427294652, ["cmp     buffersize_0, len_0", "jbe     loc_120D0"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 11, 9, 0.0018158604057313093, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 10, 6, 0.003674280039721946, ["test    i, i; jumptable 0000000000011A17 cases 35,126", "jz      short loc_11A6C; jumptable 0000000000011A17 case 32"], ["test~i,i", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 11, 0.06778266420768903, ["cmp     buffersize_0, len_0", "jbe     short loc_11660"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 1, 0, 4, 0, 0, 18, 12, 0.0, ["mov     r8d, eax", "shr     r8b, 6", "add     r8d, 30h ; '0'", "mov     [r10+r14+1], r8b"], ["mov~r8d,eax", "shr~r8b,0", "add~r8d,0", "mov~[r10+0],r8b"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 12, 0.059185700099304864, ["lea     r8, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_11E60"], ["lea~r8,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 6, 0, 0, 4, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.003716839267981274, ["mov     rdi, m", "mov     ebp, 0", "jmp     loc_11D7A"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 1, 1, 14, 10, 0.06860547595403603, ["lea     r14, [len_0+1]", "test    bl, bl", "jz      loc_11ECA"], ["lea~r14,[len_0+0]", "test~bl,bl", "jz~FOO"]], [5, 0, 266, 0, 0, 9, 0, 1, 5, 9, 0.0037239324726911615, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 27h ; '''", "mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_1131F"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 13, 11, 0.016896013618953043, ["mov     eax, 0", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     short loc_11AF9"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 6, 0.0, ["mov     ebp, 0; jumptable 0000000000011A17 cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["mov~ebp,0"]], [1, 0, 266, 1, 0, 3, 0, 1, 20, 7, 0.010895162434387855, ["add     rdx, 1; jumptable 0000000000011C8A default case", "cmp     rdx, rbx", "jz      short loc_11C8C"], ["add~rdx,0", "cmp~rdx,rbx", "jz~FOO"]], [2, 0, 266, 1, 0, 4, 0, 1, 19, 6, 0.014072918144417646, ["movzx   eax, byte ptr [rdx]", "sub     eax, 5Bh ; '['", "cmp     al, 21h ; '!'; switch 34 cases", "ja      short loc_11C66; jumptable 0000000000011C8A default case"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 20, 5, 0.00390126259043836, ["movzx   eax, al", "lea     rdi, off_194E0", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [1, 0, 266, 0, 0, 4, 2, 1, 8, 4, 0.160568875017733, ["movzx   edx, [rsp+0E8h+elide_outer_quotes]", "xor     edx, 1", "test    al, dl", "jz      short loc_11FFB"], ["movzx~edx,[rsp+0]", "xor~edx,0", "test~al,dl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 9, 4, 0.12499645339764505, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      short loc_11FFB"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 12, 0.014072918144417646, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_1187C"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 21, 4, 0.0006383884238899134, ["mov     r14, [rsp+0E8h+buffersize]; jumptable 0000000000011C8A cases 0,1,3,5,33"], ["mov~r14,[rsp+0]"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.02312384735423464, ["lea     rax, [i+1]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_11EDB"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 12, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 27h ; '''"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [0, 0, 266, 2, 0, 5, 0, 1, 18, 7, 0.013519648177046388, ["mov     bytes, [rsp+0E8h+arg]", "lea     rdx, [rax+rbx+1]", "add     rax, bytes", "add     rbx, rax", "jmp     loc_11C6F"], ["mov~bytes,[rsp+0]", "lea~rdx,[rax+0]", "add~rax,bytes", "add~rbx,rax", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 1, 1, 10, 5, 0.013845935593701234, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000011A17 case 32", "setz    bl", "and     bl, [rsp+0E8h+elide_outer_quotes]", "jz      loc_118BA"], ["cmp~[rsp+0],0", "setz~bl", "and~bl,[rsp+0]", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.016952759256632144, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_1203F"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 15, 3, 0.0002837281883955171, ["mov     r15, len_0"], ["mov~r15,len_0"]], [1, 0, 5, 0, 0, 3, 0, 1, 10, 3, 0.014321180309263725, ["mov     edi, [rsp+0E8h+quoting_style]", "cmp     edi, 2", "jnz     short loc_12093"], ["mov~edi,[rsp+0]", "cmp~edi,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.0005107107391119308, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 11, 4, 0.0009363030217052064, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.00489431124982267, ["mov     len_0, r15", "jmp     force_outer_quoting_style"], ["mov~len_0,r15", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 14, 4, 0.0058909065115619235, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [2, 0, 266, 1, 0, 3, 0, 1, 17, 11, 0.014895729890764646, ["add     r14, 2", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "jmp     loc_11974"], ["add~r14,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 7, 0, 1, 8, 7, 0.5493828911902398, ["mov     rax, [rsp+0E8h+arg]", "add     rax, i", "mov     [rsp+0E8h+var_B0], rax", "movzx   r12d, byte ptr [rax]", "mov     [rsp+0E8h+c], r12b", "cmp     r12b, 7Eh ; '~'; switch 127 cases", "ja      loc_11B30; jumptable 0000000000011A17 default case"], ["mov~rax,[rsp+0]", "add~rax,i", "mov~[rsp+0],rax", "movzx~r12d,<TAG>", "mov~[rsp+0],r12b", "cmp~r12b,0", "ja~FOO"]], [3, 0, 266, 2, 0, 6, 1, 0, 19, 10, 0.06083132359199886, ["add     r14, 3", "and     eax, 7", "add     eax, 30h ; '0'", "lea     r8, [i+1]", "cmp     ilim, r8", "jbe     short loc_11EA8"], ["add~r14,0", "and~eax,0", "add~eax,0", "lea~r8,[i+0]", "cmp~ilim,r8", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 11, 0.06000851184565186, ["lea     r8, [r14+2]", "cmp     r15, len_0", "jbe     short loc_11E7D"], ["lea~r8,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [3, 0, 266, 1, 0, 5, 1, 0, 19, 11, 0.0, ["mov     r8d, eax", "shr     r8b, 3", "and     r8d, 7", "add     r8d, 30h ; '0'", "mov     [r10+r14+2], r8b"], ["mov~r8d,eax", "shr~r8b,0", "and~r8d,0", "add~r8d,0", "mov~[r10+0],r8b"]], [2, 0, 266, 0, 0, 5, 0, 1, 4, 9, 0.003702652858561498, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_1131F"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 7, 0.003295975788527923, ["mov     eax, 74h ; 't'; jumptable 0000000000011A17 case 9"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 00000000000112F0 default case"], ["call~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 1, 11, 0.1265002127961413, ["mov     eax, [rsp+0E8h+quoting_style]", "cmp     eax, 0Ah; switch 11 cases", "ja      loc_11494; jumptable 00000000000112F0 default case"], ["mov~eax,[rsp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.007050645481628599, ["mov     ebx, esi", "mov     i, r8", "jmp     loc_11DDB"], ["mov~ebx,esi", "mov~i,r8", "jmp~FOO"]], [3, 0, 266, 1, 0, 8, 0, 1, 16, 9, 0.018357213789189954, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "cmp     al, 9", "ja      loc_118BA"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "cmp~al,0", "ja~FOO"]], [2, 0, 266, 0, 1, 7, 1, 1, 10, 9, 0.09697829479358774, ["call    ___ctype_b_loc", "movzx   r12d, r12b", "mov     rax, [rax]", "movzx   ebp, word ptr [rax+r12*2]", "shr     bp, 0Eh", "and     ebp, 1", "mov     rdi, rbx"], ["call~FOO", "movzx~r12d,r12b", "mov~rax,<TAG>", "movzx~ebp,<TAG>", "shr~bp,0", "and~ebp,0", "mov~rdi,rbx"]], [1, 0, 266, 0, 0, 3, 0, 1, 9, 10, 0.18792736558377074, ["mov     rbx, [rsp+0E8h+var_80]; jumptable 0000000000011A17 default case", "cmp     rbx, 1", "jnz     short loc_11B9D"], ["mov~rbx,[rsp+0]", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 6, 0.017818130231238474, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.003295975788527923, ["mov     eax, 72h ; 'r'; jumptable 0000000000011A17 case 13", "jmp     c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.003295975788527923, ["mov     eax, 6Eh ; 'n'; jumptable 0000000000011A17 case 10", "jmp     short c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 4, 0, 1, 11, 9, 0.0034898567172648603, ["mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     ebx, 0", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_118BA"], ["mov~[rsp+0],bpl", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.04257341466874734, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000011A17 case 39", "jz      short loc_11AA1"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 14, 4, 0.003674280039721946, ["add     len_0, 1", "movzx   ecx, byte ptr [rax+len_0]", "test    cl, cl", "jz      short loc_1203C"], ["add~len_0,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 13, 5, 0.010341892467016597, ["cmp     buffersize_0, len_0", "jbe     short loc_12021"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 14, 5, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     [rsi+len_0], cl", "jmp     short loc_12021"], ["mov~rsi,[rsp+0]", "mov~<TAG>,cl", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 9, 0.004184990778833877, ["mov     ebx, 0; jumptable 0000000000011A17 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_118BA"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     r15, len_0", "jbe     short loc_11DC0"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 16, 10, 0.030827067669172932, ["mov     edx, ebx", "xor     edx, 1", "and     dl, r9b", "jz      loc_11EB8"], ["mov~edx,ebx", "xor~edx,0", "and~dl,r9b", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_116AE"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 11, 0.11495247552844375, ["lea     r8, [i+1]", "cmp     r8, ilim", "jnb     loc_11E9A"], ["lea~r8,[i+0]", "cmp~r8,ilim", "jnb~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.008426727195346857, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "test    al, al", "jnz     loc_12062"], ["movzx~eax,[rsp+0]", "test~al,al", "jnz~FOO"]], [0, 0, 9, 1, 0, 3, 0, 1, 12, 6, 0.01361895304298482, ["mov     rdx, len_0", "sub     rax, len_0", "jmp     short loc_1202D"], ["mov~rdx,len_0", "sub~rax,len_0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000112F0 case 7", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     r14d, 0", "jmp     loc_1131F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rdx, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_11DCF"], ["lea~rdx,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 11, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 9, 0.019591431408710454, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]"]], [0, 0, 266, 1, 1, 12, 1, 2, 12, 10, 0.09128954461625761, ["lea     rbx, [i+m+0]", "mov     rax, [rsp+0E8h+arg]", "lea     r14, [rax+rbx]", "mov     rdx, [rsp+0E8h+argsize]", "sub     rdx, rbx; n", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rsi, r14; s", "mov     rdi, [rsp+0E8h+pwc]; pwc", "call    rpl_mbrtowc", "mov     r12, rax", "test    bytes, bytes", "jz      loc_11D67"], ["lea~rbx,[i+0]", "mov~rax,[rsp+0]", "lea~r14,<TAG>", "mov~rdx,[rsp+0]", "sub~rdx,rbx", "mov~rcx,[rsp+0]", "mov~rsi,r14", "mov~rdi,[rsp+0]", "call~FOO", "mov~r12,rax", "test~bytes,bytes", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 7, 0.06426443467158462, ["movzx   edi, [rsp+0E8h+backslash_escapes]", "test    dil, dil", "jnz     loc_11F35"], ["movzx~edi,[rsp+0]", "test~dil,dil", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 62h ; 'b'; jumptable 0000000000011A17 case 8", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 66h ; 'f'; jumptable 0000000000011A17 case 12", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 1, 2, 10, 2, 3, 16, 10, 0.02850049652432969, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "mov     rdi, [rsp+0E8h+ps]; ps", "call    _mbsinit", "test    eax, eax", "jnz     short loc_11D20"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 8, 0.016711590296495955, ["cmp     bytes, 1", "jbe     short loc_11C8C"], ["cmp~bytes,0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len_0", "jbe     short loc_116C1"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 30h ; '0'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 10, 0.0, ["mov     byte ptr [r10+r14+1], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [0, 0, 266, 0, 0, 2, 0, 0, 12, 9, 0.02601314607272899, ["mov     ebp, edi", "mov     ebx, edi"], ["mov~ebp,edi", "mov~ebx,edi"]], [0, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.014640374521208682, ["mov     i, r8", "jmp     loc_11DDB"], ["mov~i,r8", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 10, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [1, 0, 266, 0, 0, 4, 1, 1, 7, 5, 0.16603418924670166, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    len_0, len_0", "jnz     short loc_11F81"], ["cmp~[rsp+0],0", "setz~al", "test~len_0,len_0", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 10, 0.035905802241452685, ["lea     rdx, [r14+2]", "cmp     len_0, rax", "jnb     short loc_11AD2"], ["lea~rdx,[r14+0]", "cmp~len_0,rax", "jnb~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 5Ch ; '\\'", "mov     rax, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_11ABE"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_11ABE"], ["mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 11, 2, 0.00776705915732728, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "and     r9d, 0FFFFFFFDh; flags", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, buffersize_0; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     r15, rax", "add     rsp, 20h"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~0", "mov~r9d,[rsp+0]", "and~r9d,0", "mov~r8d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,buffersize_0", "mov~rdi,[rsp+0]", "call~FOO", "mov~r15,rax", "add~rsp,<STR>"]], [0, 0, 4, 0, 0, 2, 0, 1, 18, 3, 0.00035466023549439636, ["mov     len_0, buffersize_0", "jmp     loc_12093"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 11, 3, 0.0, ["cmp     [rsp+0E8h+backslash_escapes], 0", "mov     eax, 4", "cmovz   eax, edi", "mov     [rsp+0E8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,edi", "mov~[rsp+0],eax"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+2], 27h ; '''"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [3, 0, 266, 0, 0, 7, 2, 1, 11, 8, 0.3504882489241972, ["movzx   eax, [rsp+0E8h+backslash_escapes]", "xor     eax, 1", "cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "or      eax, edx", "cmp     al, 1", "jnz     short loc_118D7"], ["movzx~eax,[rsp+0]", "xor~eax,0", "cmp~[rsp+0],0", "setz~dl", "or~eax,edx", "cmp~al,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 19, 9, 0.014895729890764646, ["lea     r14, [rdx+3]", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_118BA"], ["lea~r14,[rdx+0]", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.0008263583487019434, ["movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     ebp, ebx", "mov     [rsp+0E8h+c], 0", "jmp     loc_118BA"], ["movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005107107391119308, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005305717122996169, ["mov     ebp, eax", "mov     ebx, eax", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_118BA"], ["mov~ebp,eax", "mov~ebx,eax", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.0034898567172648603, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 5, 0, 1, 22, 9, 0.033125265995176616, ["add     r14, 4", "movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "mov     ebp, ebx", "mov     r13, i", "jmp     loc_118BA"], ["add~r14,0", "movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~r13,i", "jmp~FOO"]], [2, 0, 266, 1, 0, 9, 0, 1, 15, 9, 0.03672861398779969, ["add     r14, 3", "movzx   esi, [rsp+0E8h+elide_outer_quotes]", "mov     ebx, esi", "mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     [rsp+0E8h+pending_shell_escape_end], sil", "mov     [rsp+0E8h+orig_buffersize], r15", "mov     r15, rax", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_118BA"], ["add~r14,0", "movzx~esi,[rsp+0]", "mov~ebx,esi", "mov~[rsp+0],bpl", "mov~[rsp+0],sil", "mov~[rsp+0],r15", "mov~r15,rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 11, 8, 0.15643353667186838, ["mov     ebx, ebp", "xor     ebx, 1", "and     bl, [rsp+0E8h+backslash_escapes]", "jz      loc_118BA"], ["mov~ebx,ebp", "xor~ebx,0", "and~bl,[rsp+0]", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.04254504184990779, ["mov     ebp, ebx", "movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_118BA"], ["mov~ebp,ebx", "movzx~ebx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 16, 9, 0.0018300468151510852, ["movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_118BA"], ["movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 9, 0.003433111079585757, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 16, 9, 0.007050645481628599, ["mov     ebp, 0; jumptable 0000000000011789 default case", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 12, 9, 0.010767484749609873, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_118BA"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [10, 0, 266, 1, 1, 37, 2, 1, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     [rsp+0E8h+buffer], buffer_0", "mov     r14, buffersize_0", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+argsize], argsize_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     ebx, r9d", "mov     [rsp+0E8h+flags], r9d", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+var_A8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_1], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "mov     [rsp+0E8h+var_80], rax", "mov     eax, ebx", "shr     eax, 1", "and     eax, 1", "mov     [rsp+0E8h+elide_outer_quotes], al", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+quote_string], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     r15, buffersize_0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],buffer_0", "mov~r14,buffersize_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~[rsp+0],r8d", "mov~ebx,r9d", "mov~[rsp+0],r9d", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],rax", "mov~eax,ebx", "shr~eax,0", "and~eax,0", "mov~[rsp+0],al", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15,buffersize_0"]], [2, 0, 266, 0, 0, 7, 0, 1, 4, 9, 0.003702652858561498, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, unk_191DB", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_1131F"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013306852035749751, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000112F0 case 5", "jnz     loc_114AE"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 7, 0.168173972667518, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_118F8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 11, 9, 0.016782522343594834, ["test    byte ptr [rsp+0E8h+flags], 1", "jnz     loc_1199A"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.08733153638814016, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 0000000000011A17 case 0", "jz      loc_116D4"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 6, 0.0427152787629451, ["movzx   ecx, byte ptr [rsi+rax]", "lea     edx, [rcx-21h]", "cmp     dl, 1Dh; switch 30 cases", "ja      loc_11F12; jumptable 0000000000011789 default case"], ["movzx~ecx,<TAG>", "lea~edx,[rcx-21h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 16, 5, 0.03627464888636686, ["movzx   edx, dl", "lea     rsi, off_1926C", "movsxd  rdx, dword ptr [rsi+rdx*4]", "add     rdx, rsi", "jmp     rdx; switch jump"], ["movzx~edx,dl", "lea~rsi,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,rsi", "jmp~rdx"]], [0, 0, 266, 0, 0, 3, 1, 1, 12, 7, 0.17940606232562517, ["mov     rcx, [rsp+0E8h+var_A8]", "test    rcx, rcx", "jz      short loc_118F8"], ["mov~rcx,[rsp+0]", "test~rcx,rcx", "jz~FOO"]], [1, 0, 266, 0, 0, 9, 0, 1, 11, 11, 0.0888352957866364, ["mov     esi, 0", "lea     rax, [rsp+0E8h+mbstate]", "mov     [rsp+0E8h+ps], rax", "lea     rax, [rsp+0E8h+w]", "mov     [rsp+0E8h+pwc], rax", "mov     [rsp+0E8h+len], len_0", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     buffersize_0, rsi", "jmp     loc_11CB3"], ["mov~esi,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],len_0", "mov~[rsp+0],buffersize_0", "mov~buffersize_0,rsi", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 11, 1, 0.007462051354802099, ["mov     rax, r15", "mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_1214A"], ["mov~rax,r15", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 11, 2, 6.383884238899135e-05, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    [rsp+100h+var_A8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     r8d, 5; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     buffersize_0, rax", "add     rsp, 20h", "jmp     loc_120D0"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,0", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~buffersize_0,rax", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 10, 0.06876152645765357, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_11D35"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 3, 10, 0.0, ["mov     [rsp+0E8h+backslash_escapes], 1; jumptable 00000000000112F0 case 3"], ["mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 8, 0, 0, 13, 6, 0.008033054333948074, ["movzx   edi, [rsp+0E8h+c]", "mov     eax, edi", "shr     al, 5", "movzx   eax, al", "mov     eax, [rcx+rax*4]", "mov     ecx, edi", "bt      eax, ecx", "jb      short store_escape"], ["movzx~edi,[rsp+0]", "mov~eax,edi", "shr~al,0", "movzx~eax,al", "mov~eax,<TAG>", "mov~ecx,edi", "bt~eax,ecx", "jb~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 10, 6, 0.0813164987941552, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 0000000000011A17 case 63", "cmp     eax, 2", "jz      short loc_11712"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 12, 9, 0.061909490707901825, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      loc_11EEA"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 10, 0.06995318484891473, ["cmp     eax, 5", "jz      short loc_1172D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 13, 0.013264292807490424, ["cmp     buffersize_0, len_0", "jbe     short loc_11B08"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 5, 0.06049912517141912, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_12100"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 12, 6, 0.03531470184896202, ["mov     [rsp+0E8h+c], al", "mov     ebp, 0", "jmp     store_escape"], ["mov~[rsp+0],al", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 12, 0.014087104553837423, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_11B26"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 19, 9, 0.014895729890764646, ["add     r14, 2", "mov     edx, esi", "mov     i, r8", "mov     r9d, esi"], ["add~r14,0", "mov~edx,esi", "mov~i,r8", "mov~r9d,esi"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "movzx   ecx, [rsp+0E8h+c]", "mov     [rax+len_0], cl"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~<TAG>,cl"]], [0, 0, 266, 0, 0, 2, 0, 0, 14, 10, 0.5604482905376649, ["cmp     len_0, buffersize_0", "jnb     short loc_11987"], ["cmp~len_0,buffersize_0", "jnb~FOO"]], [4, 0, 266, 0, 0, 6, 0, 0, 3, 9, 0.012367002411689601, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 00000000000112F0 case 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0"]], [3, 0, 266, 0, 0, 6, 0, 1, 4, 9, 0.003688466449141722, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_1131F"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 4, 8, 0.1354802099588594, ["mov     r13d, 0", "jmp     loc_1199E"], ["mov~r13d,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000112F0 case 0", "mov     r14d, 0", "jmp     short loc_1131F"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 8, 0, 1, 5, 9, 0.0018655128387005248, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, unk_191DB", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     short loc_1131F"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 1, 0, 12, 0, 1, 5, 9, 0.033210384451695274, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+quote_string_0]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+quote_string_len], rax", "mov     rdi, [rsp+0E8h+quote_string_0]", "mov     [rsp+0E8h+quote_string], rdi", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_1131F"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "mov~rdi,[rsp+0]", "mov~[rsp+0],rdi", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 6, 0, 1, 5, 9, 0.0018655128387005248, ["mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, unk_191DB", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     loc_1131F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 7, 0, 1, 5, 9, 0.0037239324726911615, ["mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_1131F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 266, 0, 0, 8, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 00000000000112F0 case 6", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, unk_191DB", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_1131F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 16, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+len_0], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 4, 0, 1, 17, 9, 0.02686905944105547, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "jmp     short loc_11D7A"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 15, 0.020612852886934315, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_11945"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 9, 2, 1, 7, 8, 0.549553128103277, ["cmp     [rsp+0E8h+quoting_style], 2", "setnz   bl", "and     bl, [rsp+0E8h+backslash_escapes]", "cmp     [rsp+0E8h+quote_string_len], 0", "setnz   byte ptr [rsp+0E8h+ps]", "movzx   eax, byte ptr [rsp+0E8h+ps]", "and     al, bl", "mov     [rsp+0E8h+is_right_quote], al", "jnz     loc_11551"], ["cmp~[rsp+0],0", "setnz~bl", "and~bl,[rsp+0]", "cmp~[rsp+0],0", "setnz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "and~al,bl", "mov~[rsp+0],al", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 15, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 24h ; '$'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.006667612427294652, ["test    buffersize_0, buffersize_0", "jz      loc_114D7"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 4, 0.0331394524045964, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000011789 cases 0,6-8,12,14,27-29", "jnz     loc_12110"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 14, 9, 0.0034331110795857572, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     ebp, 0", "jmp     short loc_11D7A"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 14, 7, 0.04914172223010356, ["mov     rsi, [rsp+0E8h+arg]", "cmp     byte ptr [rsi+i+1], 3Fh ; '?'", "jz      short loc_11768"], ["mov~rsi,[rsp+0]", "cmp~[yte ptr [rsi+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 14, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 14, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_11959"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.007036459072208823, ["mov     ebp, 0", "jmp     short loc_11D7A"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     i", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~i", "pop~r14", "pop~r15", "retn"]], [1, 0, 266, 1, 0, 2, 0, 0, 18, 13, 0.022258476379628314, ["add     r14, 3", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["add~r14,0", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 1, 0, 1, 15, 9, 0.05528443750886649, ["jmp     loc_11B56"], ["jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 8, 8, 0.026372535111363313, ["mov     rax, [rsp+0E8h+quote_string_len]", "lea     rdx, [i+rax+0]", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_11588"], ["mov~rax,[rsp+0]", "lea~rdx,[i+0]", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 12, 0.0549486924859318, ["cmp     buffersize_0, len_0", "jbe     short loc_11970"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 19, 9, 0.007419492126542772, ["mov     rdi, m", "mov     ebp, 0", "jmp     short loc_11D7A"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 9, 8, 0.003333806213647326, ["cmp     rax, 1", "jbe     short loc_11588"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 11, 0.0557715042322788, ["add     len_0, 1"], ["add~len_0,0"]], [1, 0, 266, 0, 0, 3, 0, 1, 3, 11, 0.029507731593133777, ["mov     ebx, [rsp+0E8h+quoting_style]; jumptable 00000000000112F0 cases 8-10", "cmp     ebx, 0Ah", "jnz     short loc_113C1"], ["mov~ebx,[rsp+0]", "cmp~ebx,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 8, 0.0947084692864236, ["cmp     m, 1", "ja      loc_11B65"], ["cmp~m,0", "ja~FOO"]], [2, 0, 266, 0, 0, 7, 0, 0, 10, 8, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "mov     [rsp+0E8h+argsize], rax"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "mov~[rsp+0],rax"]], [2, 0, 266, 0, 0, 3, 0, 1, 4, 10, 0.030330543339480775, ["mov     r14d, 0", "cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_113E9"], ["mov~r14d,0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 2, 9, 0, 3, 4, 11, 0.0, ["mov     esi, ebx; s", "lea     rdi, asc_191F3; \"`\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_1], rax", "mov     esi, ebx; s", "lea     rdi, aInvalidSSArgum+19h; msgid", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     short loc_1137E"], ["mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 12, 0.11330685203574975, ["test    dl, dl", "jz      short loc_11D9B"], ["test~dl,dl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 13, 6, 0.17916016456234926, ["test    cl, cl", "jz      short loc_11D89"], ["test~cl,cl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 9, 7, 0.027606752730883814, ["cmp     rdx, [rsp+0E8h+argsize]", "ja      short loc_115BE"], ["cmp~rdx,[rsp+0]", "ja~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 16, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.006653426017874876, ["cmp     r15, len_0", "jbe     short loc_11D97"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 5, 1, 0, 15, 9, 0.5612711022840119, ["add     len_0, 1", "test    bpl, bpl", "movzx   eax, [rsp+0E8h+all_c_and_shell_quote_compat]", "cmovz   eax, ebp", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], al"], ["add~len_0,0", "test~bpl,bpl", "movzx~eax,[rsp+0]", "cmovz~eax,ebp", "mov~[rsp+0],al"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 12, 0.007476237764221875, ["add     len_0, 1"], ["add~len_0,0"]], [2, 0, 266, 1, 0, 13, 2, 1, 12, 7, 0.12964959568733153, ["add     m, i", "mov     ebx, 0", "mov     ecx, ebp", "xor     ecx, 1", "and     cl, [rsp+0E8h+backslash_escapes]", "mov     esi, ecx", "movzx   r12d, [rsp+0E8h+elide_outer_quotes]", "movzx   r9d, [rsp+0E8h+pending_shell_escape_end]", "movzx   eax, [rsp+0E8h+c]", "movzx   edx, [rsp+0E8h+is_right_quote]", "mov     r10, [rsp+0E8h+buffer]", "mov     r11, [rsp+0E8h+arg]", "jmp     loc_11DED"], ["add~m,i", "mov~ebx,0", "mov~ecx,ebp", "xor~ecx,0", "and~cl,[rsp+0]", "mov~esi,ecx", "movzx~r12d,[rsp+0]", "movzx~r9d,[rsp+0]", "movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 3, 0.12524471556249112, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     short loc_11FB8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 12, 8, 0.5780500780252518, ["add     i, 1"], ["add~i,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 13, 0.02983401900978862, ["mov     [rsp+0E8h+c], cl", "cmp     buffersize_0, len_0", "jbe     short loc_117A9"], ["mov~[rsp+0],cl", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 13, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+len_0], 3Fh ; '?'"], ["mov~rsi,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 19, 12, 0.03065683075613562, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_117BD"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 20, 12, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 22h ; '\"'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.014328273513973613, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_119E5"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 20, 11, 0.03147964250248262, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_117D1"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 21, 11, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+2], 22h ; '\"'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 8, 0.0018158604057313093, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_119E5"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 21, 10, 0.03230245424882962, ["lea     len_0, [r14+3]", "cmp     buffersize_0, len_0", "jbe     short loc_117E5"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 18, 8, 0.04451695275925663, ["cmp     r15, len_0", "jbe     short loc_11DE4"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 22, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+3], 3Fh ; '?'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 1, 0, 0, 19, 8, 0.0, ["mov     [r10+len_0], al"], ["mov~<TAG>,al"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 7, 0.045339764505603626, ["add     len_0, 1", "movzx   eax, byte ptr [r11+i]"], ["add~len_0,0", "movzx~eax,<TAG>"]]], "func_feature": [12, 58, 180, 4, 267, 417, 7, 919, 0.04717, 8, 40], "succs": [[217, 219], [0, 234], [3, 213], [2, 4], [2], [191], [5, 191], [110], [21, 7], [3], [82, 108], [10, 82], [16, 85], [89, 12], [152, 153], [152, 14], [24, 36], [91, 102], [17, 207], [213], [9, 19], [201, 94], [110], [149, 22], [36], [41, 42], [25, 27], [25], [117, 111], [28, 261], [240], [56, 30], [209, 37], [32, 144, 195, 48, 239, 208, 184, 211, 216], [149], [96, 128, 34, 131, 197, 38, 137, 107, 130, 52, 150, 55, 84, 122, 187, 151, 133], [57, 46], [47], [149], [229, 31], [15, 39], [53, 54], [41], [149], [43, 45], [43, 70], [57], [93, 215], [121, 47], [124], [49, 11], [60, 95], [51, 44], [62], [53], [58, 59], [76], [65, 78], [84, 181], [58], [66], [87], [61, 87], [110], [100, 63], [78], [18, 207], [66, 202], [66], [66], [66], [26, 62], [114, 71], [160, 220], [73], [73, 74], [235, 77], [90, 76], [85], [168], [226, 79], [192], [192, 81], [168], [107, 83], [88, 92], [119], [86, 119], [92], [110], [240], [102], [104, 177], [210], [161, 201], [110], [107], [152, 98], [97, 99], [97, 103], [11, 101], [11, 252], [105, 116], [110], [178, 126], [116], [98], [112, 168], [82, 143], [82], [164, 166], [110], [110], [110], [110], [110], [207], [128, 35], [125, 69], [120, 118], [118], [210], [129], [], [33, 123], [263], [168, 140], [176], [6, 127], [149, 23], [129], [129], [168], [8, 132], [109, 135], [136, 134], [134], [168], [145, 146], [138, 158], [154, 155], [139, 68], [113, 172], [135], [210], [156, 205], [145], [240], [194, 147], [203, 157], [149], [149], [218, 148], [152, 106], [169, 159], [154], [205], [168], [263], [169], [64, 100], [175, 167], [161], [161], [192], [164], [164], [175], [185, 190], [168], [168], [168], [168], [168], [168], [168], [168, 251], [168], [168], [168], [168], [168], [124], [210], [222, 183], [67, 190], [170, 253], [186, 13], [180, 189], [180, 223], [67, 196], [148], [224, 230], [192], [40, 225], [208], [202, 67], [142, 199], [80, 179], [171, 198], [204], [200, 204], [1, 115], [202], [162, 163], [263], [249], [249, 206], [210], [210], [75], [210], [210], [210], [210], [210], [210], [219], [240], [228, 221], [233, 117], [228], [212, 214], [165, 254], [], [240], [188, 173], [231], [227, 231], [240], [], [234], [176], [236, 246], [237, 238], [240], [241, 246], [238], [207], [242, 243], [232, 251], [246], [20, 213], [242], [248, 141], [72, 244], [258, 29], [250], [250, 247], [253], [141], [245], [193, 50], [75], [256, 255], [256], [257, 259], [259], [117], [260, 262], [262], [117], [264, 174], [265, 266], [174], [266], [245]], "fname": "quotearg_buffer_restyled", "n_num": 267}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 2, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_122BD"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 13, 1, 1, 18, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     ebx, edi", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+argsize], argsize_0", "mov     rbp, options", "call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "mov     [rsp+58h+e], eax", "mov     r12, cs:slotvec_0", "test    ebx, ebx", "js      loc_122B8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~rbp,options", "call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~r12,<TAG>", "test~ebx,ebx", "js~FOO"]], [3, 1, 4, 4, 1, 23, 1, 2, 2, -1, 0.1794871794871795, ["movsxd  n, ebx", "shl     n, 4", "add     rbx, sv", "mov     r13, [rbx]", "mov     sv, [rbx+8]", "mov     eax, [options+4]", "or      eax, 1", "mov     [rsp+58h+flags], eax", "lea     r15, [options+8]", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, val; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "cmp     size, qsize", "ja      short loc_1229F"], ["movsxd~n,ebx", "shl~n,0", "add~rbx,sv", "mov~r13,<TAG>", "mov~sv,[rbx+0]", "mov~eax,[options+0]", "or~eax,0", "mov~[rsp+0],eax", "lea~r15,[options+0]", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,eax", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,val", "call~FOO", "add~rsp,<STR>", "cmp~size,qsize", "ja~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.07051282051282051, ["cmp     cs:nslots, ebx", "jg      short loc_121F7"], ["cmp~<TAG>,ebx", "jg~FOO"]], [3, 0, 5, 4, 1, 11, 0, 1, 5, -1, 0.1282051282051282, ["mov     edi, cs:nslots", "mov     edx, r13d", "sub     edx, edi", "movsxd  rdx, edx", "shl     rdx, 4; n", "movsxd  rdi, edi", "shl     rdi, 4", "add     rdi, sv; s", "mov     esi, 0; c", "call    _memset", "mov     cs:nslots, r13d"], ["mov~edi,<TAG>", "mov~edx,r13d", "sub~edx,edi", "movsxd~rdx,edx", "shl~rdx,0", "movsxd~rdi,edi", "shl~rdi,0", "add~rdi,sv", "mov~esi,0", "call~FOO", "mov~<TAG>,r13d"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r14], eax", "mov     rax, val", "add     rsp, 28h", "pop     rbx", "pop     options", "pop     val", "pop     size", "pop     r14", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~rax,val", "add~rsp,0", "pop~rbx", "pop~options", "pop~val", "pop~size", "pop~r14", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 16, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, size; n", "call    xmalloc", "mov     val, rax", "mov     [rbx+8], rax", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,size", "call~FOO", "mov~val,rax", "mov~[rbx+0],rax", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 9, 0, 2, 4, 0, 0.04487179487179487, ["mov     edi, 0; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     sv, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [sv], rax", "mov     [sv+8], rdx", "jmp     loc_121CA"], ["mov~edi,0", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv", "mov~sv,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[sv+0],rdx", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, 1, 0.08974358974358974, ["lea     r13d, [n+1]", "movsxd  rsi, r13d", "shl     rsi, 4; n", "lea     e_0, slotvec0", "cmp     sv, rax", "jz      loc_122C2"], ["lea~r13d,[n+0]", "movsxd~rsi,r13d", "shl~rsi,0", "lea~e_0,<TAG>", "cmp~sv,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     size, [qsize+1]", "mov     [rbx], size", "lea     qsize, slot0", "cmp     val, rax", "jz      short loc_12262"], ["lea~size,[qsize+0]", "mov~<TAG>,size", "lea~qsize,<TAG>", "cmp~val,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "call    free"], ["mov~rdi,val", "call~FOO"]]], "func_feature": [10, 2, 17, 0, 14, 17, 8, 111, 0.05266, 5, 13], "succs": [[], [0, 9], [11, 4], [12, 6], [1, 3], [3], [], [6], [5], [8, 10], [5], [], [13, 7], [7]], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     rbp, p", "mov     r12d, [p]", "test    o, o", "lea     p, default_quoting_options", "cmovz   o, p", "mov     esi, 38h ; '8'; s", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~rbp,p", "mov~r12d,<TAG>", "test~o,o", "lea~p,<TAG>", "cmovz~o,p", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 2, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 3, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 8, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["test    p, p", "lea     rax, default_quoting_options", "cmovz   p, rax", "mov     eax, esi", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     ecx, esi", "and     ecx, 1Fh", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "and     eax, 1", "retn"], ["test~p,p", "lea~rax,<TAG>", "cmovz~p,rax", "mov~eax,esi", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~ecx,esi", "and~ecx,0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "and~eax,0", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 5, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     r, default_quoting_options", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["test~o,o", "lea~r,<TAG>", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_123BB"], ["test~right_quote,right_quote", "jz~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 1, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     dword ptr [o], 0Ah", "test    left_quote, left_quote", "jz      short loc_123BB"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,0", "test~left_quote,left_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, -1, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 3, 0, 4, 4, 1, 13, 0.04167, 1, 1], "succs": [[2, 3], [0, 3], [], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 1, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     [rsp+48h+buffer], buffer_0", "mov     r13, buffersize", "mov     r14, arg", "mov     r15, argsize", "mov     rbx, o", "test    o, o", "lea     r, default_quoting_options", "cmovz   rbx, r", "call    ___errno_location", "mov     rbp, r", "mov     r12d, [r]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "lea     r, [p+8]", "push    r; quote_these_too", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, [rsp+68h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffersize", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],buffer_0", "mov~r13,buffersize", "mov~r14,arg", "mov~r15,argsize", "mov~rbx,o", "test~o,o", "lea~r,<TAG>", "cmovz~rbx,r", "call~FOO", "mov~rbp,r", "mov~r12d,<TAG>", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "lea~r,[p+0]", "push~r", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffersize", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 3, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[5, 2, 2, 5, 4, 57, 4, 5, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     r14, arg_0", "mov     [rsp+68h+argsize], argsize_0", "mov     r12, size", "mov     rbx, o", "test    o, o", "lea     rax, default_quoting_options", "cmovz   rbx, rax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     [rsp+68h+e], eax", "test    size, size", "setz    bpl", "movzx   ebp, bpl", "or      ebp, [p+4]", "lea     r15, [p+8]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     [rsp+88h+arg], arg_0", "mov     rdx, arg_0; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "mov     [rsp+88h+var_40], rax", "lea     arg_0, [rax+1]", "add     rsp, 20h", "mov     rdi, bufsize; n", "call    xmalloc", "mov     [rsp+68h+var_50], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     rdx, [rsp+88h+arg]; arg", "mov     rsi, bufsize; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "mov     edx, [rsp+88h+e]", "mov     [r13+0], edx", "add     rsp, 20h", "test    size, size", "jz      short loc_1250B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,arg_0", "mov~[rsp+0],argsize_0", "mov~r12,size", "mov~rbx,o", "test~o,o", "lea~rax,<TAG>", "cmovz~rbx,rax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "test~size,size", "setz~bpl", "movzx~ebp,bpl", "or~ebp,[p+0]", "lea~r15,[p+0]", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~[rsp+0],arg_0", "mov~rdx,arg_0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "lea~arg_0,[rax+0]", "add~rsp,<STR>", "mov~rdi,bufsize", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,bufsize", "mov~rdi,rax", "call~FOO", "mov~edx,[rsp+0]", "mov~[r13+0],edx", "add~rsp,<STR>", "test~size,size", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_50]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     bufsize", "pop     r15", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~bufsize", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     rax, [rsp+68h+var_40]", "mov     [size], rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]]], "func_feature": [4, 4, 5, 2, 3, 3, 1, 68, 0.0, 1, 6], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, o; o", "mov     edx, 0; size", "call    quotearg_alloc_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,o", "mov~edx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, sv; ptr", "call    free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rdi,sv", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     sv, rax", "jz      short loc_125BE"], ["lea~rax,<TAG>", "cmp~sv,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rax, slot0", "cmp     rdi, rax", "jz      short loc_1259C"], ["mov~rdi,[sv+0]", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [0, 1, 3, 0, 1, 4, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["call~FOO", "mov~<TAG>,<STR>", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, cs:slotvec_0", "mov     eax, cs:nslots", "cmp     eax, 1", "jle     short loc_1256D"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "call    free", "add     rbx, 10h", "cmp     rbx, rbp", "jnz     short loc_1255C"], ["mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 1, 4, 0.023809523809523808, ["lea     rbx, [sv+18h]", "lea     eax, [rax-2]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]"], ["lea~rbx,[sv+0]", "lea~eax,[rax-2]+0]", "shl~rax,0", "lea~rbp,[sv+0]"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     cs:nslots, 1", "pop     rbx", "pop     rbp", "pop     sv", "retn"], ["mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~sv", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 36, 0.08333, 5, 2], "succs": [[7], [0, 7], [1, 3], [1], [2, 6], [2, 5], [5], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [12, 0, 2, 0, 1, 19, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_126D6"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      loc_126D1"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 2, 30, 0.03333, 1, 2], "succs": [[], [0, 4], [], [1, 2], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 1, 4, 1, 0, 8, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_12777"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [11, 0, 2, 0, 1, 18, 1, 2, 0, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_1277C"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~s,arg", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 1, 30, 0.03333, 1, 2], "succs": [[1, 4], [2, 3], [], [], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 2, 1, 2, 36, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rbp, arg", "mov     r12, argsize", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "mov     rcx, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+58h+options.style], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+58h+options.quote_these_too+8], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+58h+options.quote_these_too+18h], rcx", "mov     [rsp+58h+options.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+58h+options.right_quote], rax", "movsx   esi, dl; c", "mov     rbx, rsp", "mov     edx, 1; i", "mov     arg, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rdi, [rsp+58h+var_20]", "xor     rdi, fs:28h", "jnz     short loc_12864"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,arg", "mov~r12,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "movsx~esi,dl", "mov~rbx,rsp", "mov~edx,0", "mov~arg,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,0", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     arg", "pop     argsize", "retn"], ["add~rsp,0", "pop~rbx", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 2], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "movsx   edx, sil; ch_0", "mov     ch_0, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "movsx~edx,sil", "mov~ch_0,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 3Ah ; ':'; ch_0", "call    quotearg_char", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3Ah ; ':'; ch_0", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[13, 1, 2, 0, 2, 27, 1, 3, 0, 0, 0.16666666666666666, ["mov     ebp, edi", "mov     r12, arg", "mov     [rsp+58h+options.style], esi", "mov     [rsp+58h+options.flags], 0", "mov     [rsp+58h+options.quote_these_too], 0", "mov     [rsp+58h+options.quote_these_too+4], 0", "mov     [rsp+58h+options.quote_these_too+8], 0", "mov     [rsp+58h+options.quote_these_too+0Ch], 0", "mov     [rsp+58h+options.quote_these_too+10h], 0", "mov     [rsp+58h+options.quote_these_too+14h], 0", "mov     [rsp+58h+options.quote_these_too+18h], 0", "mov     [rsp+58h+options.quote_these_too+1Ch], 0", "mov     [rsp+58h+options.left_quote], 0", "mov     [rsp+58h+options.right_quote], 0", "mov     rbx, rsp", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     n, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rcx, [rsp+58h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_12972"], ["mov~ebp,edi", "mov~r12,arg", "mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rbx,rsp", "mov~edx,0", "mov~esi,<STR>", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,0", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 0, 9, 1, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_1296D"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     n", "pop     arg", "retn"], ["add~rsp,0", "pop~rbx", "pop~n", "pop~arg", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 2, 6, 1, 5, 4, 2, 43, 0.03333, 1, 2], "succs": [[2, 4], [0, 3], [], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     n", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~n", "pop~arg", "pop~argsize", "retn"]], [0, 1, 2, 1, 2, 36, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     ebp, edi", "mov     r12, arg", "mov     r13, argsize", "mov     rax, fs:28h", "mov     [rsp+68h+var_30], rax", "xor     eax, eax", "mov     arg, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+68h+o.style], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+68h+o.quote_these_too+8], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     [rsp+68h+o.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+68h+o.right_quote], rax", "mov     rbx, rsp", "mov     n, rbx; o", "call    set_custom_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rdi, [rsp+68h+var_30]", "xor     rdi, fs:28h", "jnz     short loc_12A22"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~r12,arg", "mov~r13,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~arg,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rbx,rsp", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 9, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, quote_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 1, 2], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 0, 2], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quote_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 9, 6, 0.0, 0, 2], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 0, 0.15151515151515152, ["mov     eax, ebx", "mov     rdx, [rsp+178h+var_40]", "xor     rdx, fs:28h", "jnz     loc_12C60"], ["mov~eax,ebx", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 5, 0, 0.13636363636363635, ["and     ebx, 1", "mov     rdi, dest_dirname; ptr", "call    free", "jmp     loc_12B35"], ["and~ebx,0", "mov~rdi,dest_dirname", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 5, 0, 1, 5, 0, 0.0, ["mov     rax, [rsp+178h+dest_dir_stats.st_dev]", "cmp     [rsp+178h+source_dir_stats.st_dev], rax", "setz    bl", "movzx   ebx, bl", "jmp     short loc_12C50"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "setz~bl", "movzx~ebx,bl", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 0, 0.18181818181818182, ["mov     rax, [rsp+178h+dest_dir_stats.st_ino]", "cmp     [rsp+178h+source_dir_stats.st_ino], rax", "jz      loc_12BBF"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 0, 0.022727272727272728, ["mov     ebx, 0", "jmp     short loc_12B35"], ["mov~ebx,0", "jmp~FOO"]], [2, 0, 12, 1, 4, 28, 1, 5, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 148h", "mov     [rsp+178h+source_dfd], edi", "mov     r12, source", "mov     [rsp+178h+dest_dfd], edx", "mov     rbp, dest", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "mov     source_dfd_0, source; name", "call    last_component", "mov     r13, rax", "mov     rdi, dest; name", "call    last_component", "mov     r14, rax", "mov     rdi, source_basename; name", "call    base_len", "mov     r15, rax", "mov     rdi, dest_basename; name", "call    base_len", "mov     ebx, 0", "cmp     source_baselen, dest_baselen", "jz      short loc_12B60"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],edi", "mov~r12,source", "mov~[rsp+0],edx", "mov~rbp,dest", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~source_dfd_0,source", "call~FOO", "mov~r13,rax", "mov~rdi,dest", "call~FOO", "mov~r14,rax", "mov~rdi,source_basename", "call~FOO", "mov~r15,rax", "mov~rdi,dest_basename", "call~FOO", "mov~ebx,0", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [2, 0, 6, 0, 2, 8, 0, 3, 4, 0, 0.0, ["call    ___errno_location", "mov     rcx, dest_dirname", "lea     rdx, aS_0+2; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error", "jmp     short loc_12C3D"], ["call~FOO", "mov~rcx,dest_dirname", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 1, 7, 0, 3, 13, 1, 4, 3, 0, 0.16666666666666669, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest; file", "call    dir_name", "mov     dest, rax", "lea     rcx, [rsp+178h+dest_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dest_dirname; filename", "mov     esi, [rsp+178h+dest_dfd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_12B9D"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest", "call~FOO", "mov~dest,rax", "lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,dest_dirname", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 1, 9, 0, 2, 11, 1, 3, 2, 0, 0.09090909090909091, ["mov     rdi, source; file", "call    dir_name", "mov     source, rax", "lea     rcx, [rsp+178h+source_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, source_dirname; filename", "mov     esi, [rsp+178h+source_dfd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_12B7B"], ["mov~rdi,source", "call~FOO", "mov~source,rax", "lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,source_dirname", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 11, 0, 1, 7, 1, 2, 1, 0, 0.06060606060606061, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "mov     ebx, eax", "test    eax, eax", "jz      short loc_12BD4"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "mov~ebx,eax", "test~eax,eax", "jz~FOO"]], [2, 0, 8, 0, 2, 8, 0, 3, 3, 0, 0.0, ["call    ___errno_location", "mov     rcx, source_dirname", "lea     rdx, aS_0+2; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error", "jmp     short loc_12C03"], ["call~FOO", "mov~rcx,source_dirname", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, 0, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     rbp", "pop     r12", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "retn"]]], "func_feature": [16, 6, 27, 1, 13, 17, 1, 102, 0.06235, 2, 2], "succs": [[], [0, 12], [1], [2], [2, 3], [1], [1, 10], [4], [4, 7], [8, 11], [9, 5], [8], []], "fname": "same_nameat", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, dest; dest", "mov     edx, 0FFFFFF9Ch; dest_dfd", "mov     dest, source; source", "mov     edi, edx; source_dfd", "call    same_nameat", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,dest", "mov~edx,0", "mov~dest,source", "mov~edi,edx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 8, 0.0, 0, 2], "succs": [[]], "fname": "same_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[6, 0, 1, 2, 2, 31, 0, 3, 0, 0, 0.0, ["mov     r15, [authors+38h]; jumptable 0000000000012D30 case 8", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     n_authors, [authors+20h]", "mov     rax, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+10h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+8]", "mov     [rsp+58h+var_48], rdi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+80h+var_58]", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 4, 0, 1, 3, -1, 0.18095238095238098, ["lea     rdx, off_198A4", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 1, 1, 1, 2, 27, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+30h]; jumptable 0000000000012D30 case 7", "mov     r14, [authors+28h]", "mov     r13, [authors+20h]", "mov     n_authors, [authors+18h]", "mov     rax, [authors+10h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+8]", "mov     [rsp+58h+var_50], rcx", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r9, [rsp+78h+var_58]", "mov     r8, [rsp+78h+var_50]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+40h]; jumptable 0000000000012D30 case 9", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 14, 0, 3, 4, -1, 0.0, ["mov     n_authors, [authors+8]; jumptable 0000000000012D30 case 2", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 16, 0, 3, 4, -1, 0.0, ["mov     r13, [authors+10h]; jumptable 0000000000012D30 case 3", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 1, 1, 2, 21, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+20h]; jumptable 0000000000012D30 case 5", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 1, 2, 0.030952380952380953, ["mov     r8, version", "mov     version, package", "lea     package, aSS_1; \"%s %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_12CBF"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 15, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rbp, stream", "mov     rbx, authors", "mov     r12, n_authors", "test    command_name, command_name", "jz      loc_12D32"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,stream", "mov~rbx,authors", "mov~r12,n_authors", "test~command_name,command_name", "jz~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 3, 0, 0.009523809523809525, ["mov     r15, [authors+40h]; jumptable 0000000000012D30 default case", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [8, 0, 12, 0, 4, 20, 0, 5, 2, 1, 0.17142857142857143, ["mov     edx, 5; category", "lea     rsi, aC_0; \"(C)\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8d, 7E3h", "mov     rcx, rax", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     edx, 5; category", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_1308D; jumptable 0000000000012D30 default case"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8d,0", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000012D30 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [6, 0, 1, 2, 2, 20, 0, 3, 4, -1, 0.0, ["mov     r14, [authors+18h]; jumptable 0000000000012D30 case 4", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 1, 1, 2, 2, 25, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+28h]; jumptable 0000000000012D30 case 6", "mov     r14, [authors+20h]", "mov     r13, [authors+18h]", "mov     n_authors, [authors+10h]", "mov     rax, [authors+8]", "mov     [rsp+58h+var_58], rax", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, r12", "mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_12D84; jumptable 0000000000012D30 case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,r12", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 4, -1, 0.0, ["mov     authors, [authors]; jumptable 0000000000012D30 case 1", "mov     edx, 5; category", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO"]], [2, 0, 13, 0, 1, 7, 0, 1, 1, 2, 0.030952380952380953, ["mov     n_authors, version", "mov     authors, package", "mov     version, command_name", "lea     package, aSSS_0; \"%s (%s) %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~n_authors,version", "mov~authors,package", "mov~version,command_name", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO"]]], "func_feature": [26, 1, 39, 4, 16, 26, 2, 289, 0.02649, 16, 13], "succs": [[11], [0, 2, 3, 4, 5, 6, 11, 12, 13, 14], [11], [11], [11], [11], [11], [10], [15, 7], [11], [9, 1], [], [11], [11], [11], [10]], "fname": "version_etc_arn", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0.0, ["call    version_etc_arn", "add     rsp, 8", "retn"], ["call~FOO", "add~rsp,0", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     r9d, 0", "jmp     short loc_1312F"], ["mov~r9d,0", "jmp~FOO"]], [2, 0, 2, 1, 0, 3, 0, 1, 2, -1, 0.08333333333333333, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_13124"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 4, 1, 0, 3, 0, 1, 0, 1, 0.0, ["sub     rsp, 8", "cmp     qword ptr [authors], 0", "jz      short loc_13139"], ["sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.08333333333333333, ["mov     r9d, 0"], ["mov~r9d,0"]]], "func_feature": [1, 0, 4, 0, 5, 6, 0, 12, 0.05, 0, 3], "succs": [[], [0], [0, 2], [1, 4], [2]], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0.09821428571428571, ["mov     rax, [authors+8]", "lea     r10, [rax+8]", "mov     [authors+8], r10"], ["mov~rax,[authors+0]", "lea~r10,[rax+0]", "mov~[authors+0],r10"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 4, 0.25, ["mov     r10d, [authors]", "cmp     r10d, 2Fh ; '/'", "ja      short loc_1315D"], ["mov~r10d,<TAG>", "cmp~r10d,0", "ja~FOO"]], [2, 0, 8, 1, 0, 6, 1, 1, 0, 5, 0.0, ["sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     r9d, 0", "jmp     short loc_1317F"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,0", "jmp~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jz      short loc_13198"], ["add~n_authors,0", "cmp~n_authors,0", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, 1, 0.21428571428571427, ["mov     authors, rsp; authors", "call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_131B5"], ["mov~authors,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 2, 0.3571428571428571, ["mov     rax, [rax]", "mov     [rsp+n_authors*8+68h+authtab], rax", "test    rax, rax", "jz      short loc_13198"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 2, 0, 5, 0, 1, 2, 3, 0.09821428571428571, ["mov     eax, r10d", "add     rax, [authors+10h]", "add     r10d, 8", "mov     [authors], r10d", "jmp     short loc_13169"], ["mov~eax,r10d", "add~rax,[authors+0]", "add~r10d,0", "mov~<TAG>,r10d", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 8, 1, 9, 11, 1, 32, 0.12698, 1, 5], "succs": [[5], [0, 6], [1], [1, 4], [8, 7], [3, 4], [5], [], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "lea     rax, [rsp+0D8h+arg_0]", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_1325C"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "test    al, al", "jz      short loc_13206"], ["sub~rsp,0", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[10, 0, 0, 0, 6, 30, 0, 6, 0, 0, 0.0, ["push    rbx", "mov     edx, 5; category", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     edx, 5; category", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "pop     rbx", "retn"], ["push~rbx", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "pop~rbx", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 30, 0.0, 7, 0], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_13306"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    malloc", "test    p, p", "jnz     short loc_13304"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 25, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["imul    n, s; n", "call    xmalloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]], [2, 0, 2, 2, 0, 10, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_13339"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 15, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnmalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 2], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.18333333333333332, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_1336C"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, n", "test    n, n", "jnz     short loc_1335A"], ["push~rbx", "mov~rbx,n", "test~n,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_1336E"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_1337A"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, -1, 0.016666666666666666, ["call    free", "mov     eax, 0", "jmp     short loc_1336C"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 4, 8, 0, 7, 9, 12, 18, 0.04762, 0, 0], "succs": [[3, 4], [0, 2], [0, 5], [4, 6], [], [4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 2, 0, 11, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, s", "mov     rax, n", "mul     rcx", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_133B0"], ["sub~rsp,0", "mov~rcx,s", "mov~rax,n", "mul~,rcx", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 2, 1, 4, 0, 1, 0, -1, 0.0, ["imul    n, s; n", "call    xrealloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 16, 0.0, 0, 4], "succs": [[1, 2], [], []], "fname": "xnrealloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.026785714285714284, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 1, 0.04464285714285714, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     s", "cmp     rax, n", "jbe     short loc_1343C"], ["mov~rax,0", "mov~edx,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     r9, s", "mov     rcx, [pn]", "test    p, p", "jz      short loc_133FA"], ["sub~rsp,0", "mov~r9,s", "mov~rcx,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 1, 0, 9, 2, 1, 2, -1, 0.09821428571428571, ["mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jz      short loc_133E6"], ["mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jz~FOO"]], [1, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.0625, ["test    n, n", "jnz     short loc_1341B"], ["test~n,n", "jnz~FOO"]], [1, 1, 3, 1, 0, 7, 1, 0, 2, -1, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     s", "test    n, n", "setz    r8b", "movzx   r8d, r8b", "lea     rcx, [r8+n]"], ["mov~eax,<STR>", "mov~edx,0", "div~,s", "test~n,n", "setz~r8b", "movzx~r8d,r8b", "lea~rcx,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 6, 0, 9, 10, 0, 39, 0.02579, 0, 6], "succs": [[5], [0, 8], [1, 6], [], [3, 5], [], [4, 7], [4], []], "fname": "x2nrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.03333333333333333, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.06666666666666667, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_1348D"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 1, 2, 0, 0, 5, 2, 0, 1, -1, 0.06666666666666667, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_13467"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     rax, [pn]", "test    p, p", "jz      short loc_13477"], ["sub~rsp,0", "mov~rax,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["mov     [pn], rax", "mov     pn, rax; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 3, 5, 0, 7, 7, 1, 22, 0.02381, 0, 2], "succs": [[6], [0, 5], [4, 6], [1, 2], [], [], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "pop     s", "retn"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "mov~esi,0", "mov~rdi,rax", "call~FOO", "pop~s", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 3, 2, 0, 10, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_134DC"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_134DC"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 3, 4, 0, 4, 4, 0, 16, 0.04167, 0, 3], "succs": [[1, 2], [], [1, 3], []], "fname": "xcalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, p", "mov     rbx, s", "mov     p, s; n", "call    xmalloc", "mov     rdx, s; n", "mov     rsi, p; src", "mov     rdi, rax; dest", "call    _memcpy", "add     rsp, 8", "pop     s", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,p", "mov~rbx,s", "mov~p,s", "call~FOO", "mov~rdx,s", "mov~rsi,p", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~s", "pop~p", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 15, 0.0, 0, 2], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[4, 0, 0, 2, 1, 11, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, string", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rsi, rcx; s", "mov     rdi, rdx; p", "call    xmemdup", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,string", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rsi,rcx", "mov~rdi,rdx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 8, 11, 0.0, 0, 2], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[5, 0, 0, 1, 3, 12, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste; \"memory exhausted\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "mov     rcx, rax", "lea     rdx, aS_0+2; format", "mov     esi, 0; errnum", "mov     eax, 0", "call    _error", "call    _abort"], ["sub~rsp,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edi,<TAG>", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 24, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.14102564102564102, ["mov     rax, [rsp+38h+tnum]", "mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_13664"], ["mov~rax,<TAG>", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.038461538461538464, ["cmp     rax, min", "jnb     short loc_13629"], ["cmp~rax,min", "jnb~FOO"]], [4, 0, 3, 0, 3, 17, 1, 3, 3, 2, 0.1346153846153846, ["mov     rdi, n_str; arg", "call    quote", "mov     n_str, rax", "call    ___errno_location", "mov     esi, [rax]", "cmp     esi, 16h", "mov     eax, 0", "cmovz   esi, eax; errnum", "test    ebx, ebx", "mov     eax, 1", "cmovz   ebx, eax", "mov     r8, rbp", "mov     rcx, err", "lea     rdx, aSS_0; \"%s: %s\"", "mov     edi, ebx; status", "mov     eax, 0", "call    _error"], ["mov~rdi,n_str", "call~FOO", "mov~n_str,rax", "call~FOO", "mov~esi,<TAG>", "cmp~esi,0", "mov~eax,0", "cmovz~esi,eax", "test~ebx,ebx", "mov~eax,0", "cmovz~ebx,eax", "mov~r8,rbp", "mov~rcx,err", "lea~rdx,<TAG>", "mov~edi,ebx", "mov~eax,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 4, 0.02564102564102564, ["cmp     eax, 1", "jz      short loc_1364A"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 13, 1, 1, 20, 2, 2, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rbp, n_str", "mov     r14, min", "mov     r13, max", "mov     r12, err", "mov     ebx, [rsp+38h+err_exit]", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "mov     max, rsp; val", "mov     edx, esi; strtol_base", "mov     esi, 0; ptr", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_135DF"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,n_str", "mov~r14,min", "mov~r13,max", "mov~r12,err", "mov~ebx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~max,rsp", "mov~edx,esi", "mov~esi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 0, 2, 4, 0.05128205128205128, ["cmp     rax, 3FFFFFFFh", "jbe     short loc_135D2"], ["cmp~rax,0", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 3, 0.04487179487179487, ["mov     s_err, [rsp+38h+tnum]", "cmp     rax, max", "ja      short loc_135BD"], ["mov~s_err,<TAG>", "cmp~rax,max", "ja~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 3, 3, 0.019230769230769232, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     short loc_135E9"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 3, 3, 0.019230769230769232, ["call    ___errno_location", "mov     dword ptr [rax], 22h ; '\"'", "jmp     short loc_135E9"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 2, 3, 0.016025641025641024, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     short loc_135E9"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 3, 3, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "jmp     short loc_135E9"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 3, 0.028846153846153844, ["cmp     eax, 3", "jz      short loc_13657"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     rbp", "pop     err", "pop     max", "pop     min", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~err", "pop~max", "pop~min", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 4, 18, 1, 14, 19, 2, 72, 0.03709, 2, 2], "succs": [[12, 13], [0, 5], [0], [9, 11], [3, 6], [8, 7], [1, 5], [2], [2], [2], [2], [2, 10], [], []], "fname": "xnumtoumax", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 1, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 10h", "push    err_exit; err_exit", "mov     err_exit, err; err", "mov     err, suffixes; suffixes", "mov     suffixes, max; max", "mov     max, min; min", "mov     esi, 0Ah; base", "call    xnumtoumax", "add     rsp, 18h", "retn"], ["sub~rsp,0", "push~err_exit", "mov~err_exit,err", "mov~err,suffixes", "mov~suffixes,max", "mov~max,min", "mov~esi,0", "call~FOO", "add~rsp,<STR>", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 2], "succs": [[]], "fname": "xdectoumax", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 3, 0, 1, 7, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 0; size", "mov     edi, 0; buf", "call    _getcwd", "mov     rbx, rax", "test    rax, rax", "jz      short loc_136A7"], ["push~rbx", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 0, 1, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_136A2"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "retn"], ["mov~rax,rbx", "pop~rbx", "retn"]]], "func_feature": [3, 1, 5, 0, 4, 4, 1, 14, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xgetcwd", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.21428571428571427, ["mov     rax, rbp", "mov     rdx, [rsp+48h+var_40]", "xor     rdx, fs:28h", "jnz     short loc_13775"], ["mov~rax,rbp", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 2, 3, 0.10714285714285714, ["mov     ebx, [r12]", "cmp     ebx, 24h ; '$'", "ja      short loc_13762"], ["mov~ebx,<TAG>", "cmp~ebx,0", "ja~FOO"]], [2, 0, 8, 0, 3, 15, 1, 4, 1, 3, 0.23214285714285712, ["mov     rsi, r14; pn", "mov     rdi, hostname; p", "call    x2realloc", "mov     hostname, rax", "mov     rbx, [rsp+48h+size]", "lea     r13, [hostname+rbx-2]", "mov     byte ptr [r13+0], 0", "call    ___errno_location", "mov     r12, rax", "mov     dword ptr [rax], 0", "lea     rsi, [rbx-1]; len", "mov     rdi, hostname; name", "call    _gethostname", "test    eax, eax", "jnz     short loc_136F0"], ["mov~rsi,r14", "mov~rdi,hostname", "call~FOO", "mov~hostname,rax", "mov~rbx,<TAG>", "lea~r13,[hostname+0]", "mov~[yte ptr [r13+0],0", "call~FOO", "mov~r12,rax", "mov~<TAG>,0", "lea~rsi,[rbx-1]+0]", "mov~rdi,hostname", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 1, 8, 1, 0, 15, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+48h+var_40], rax", "xor     eax, eax", "mov     [rsp+48h+size], 22h", "mov     ebp, 0", "mov     r14, rsp", "mov     r15, 1000401001h", "jmp     short loc_136FF"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,0", "mov~ebp,0", "mov~r14,rsp", "mov~r15,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 3, 2, 0.10714285714285714, ["mov     rdi, hostname; ptr", "call    free", "mov     [r12], ebx", "mov     ebp, 0", "jmp     short loc_13740"], ["mov~rdi,hostname", "call~FOO", "mov~<TAG>,ebx", "mov~ebp,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 2, 0.10714285714285714, ["cmp     byte ptr [r13+0], 0", "jnz     short loc_136FF"], ["cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 3, 3, 0.03571428571428571, ["bt      r15, rbx", "jnb     short loc_13762"], ["bt~r15,rbx", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 3, 11, 1, 9, 12, 1, 55, 0.08929, 1, 2], "succs": [[], [0, 8], [5, 7], [2, 6], [3], [1], [1, 3], [3, 5], []], "fname": "xgethostname", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 2, 0, 0, 0, 0, 0.07142857142857142, ["mov     [x], rbx", "mov     eax, r11d"], ["mov~<TAG>,rbx", "mov~eax,r11d"]], [0, 0, 5, 1, 0, 4, 0, 0, 2, 3, 0.2857142857142857, ["mov     rcx, [x]", "mov     rax, rcx", "mul     base", "jo      short loc_137A1"], ["mov~rcx,<TAG>", "mov~rax,rcx", "mul~,base", "jo~FOO"]], [0, 0, 5, 1, 0, 4, 0, 1, 3, 2, 0.07142857142857142, ["imul    rcx, base", "mov     [x], rcx", "mov     eax, r10d", "jmp     short loc_137A7"], ["imul~rcx,base", "mov~<TAG>,rcx", "mov~eax,r10d", "jmp~FOO"]], [2, 0, 5, 1, 0, 4, 1, 1, 4, 1, 0.21428571428571427, ["or      r9d, eax", "sub     r8d, 1", "cmp     r8d, 0FFFFFFFFh", "jz      short loc_137D5"], ["or~r9d,eax", "sub~r8d,0", "cmp~r8d,0", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     r9d, 0", "mov     eax, r9d", "retn"], ["mov~r9d,0", "mov~eax,r9d", "retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    edx, edx", "jz      short loc_137CB"], ["test~edx,edx", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 0.0, ["mov     eax, r9d", "pop     rbx", "retn"], ["mov~eax,r9d", "pop~rbx", "retn"]], [4, 0, 5, 0, 0, 8, 0, 1, 1, 4, 0.11904761904761904, ["push    rbx", "lea     r8d, [rdx-1]", "mov     r9d, 0", "movsxd  base, esi", "mov     r10d, 0", "mov     rbx, 0FFFFFFFFFFFFFFFFh", "mov     r11d, 1", "jmp     short loc_137B4"], ["push~rbx", "lea~r8d,[rdx-1]+0]", "mov~r9d,0", "movsxd~base,esi", "mov~r10d,0", "mov~rbx,0", "mov~r11d,0", "jmp~FOO"]]], "func_feature": [0, 2, 4, 0, 8, 9, 8, 30, 0.09524, 0, 3], "succs": [[3], [0, 2], [3], [1, 6], [], [4, 7], [], [1]], "fname": "bkm_scale_by_power", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 9, 1, 0, 6, 0, 0, 0, 0, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 00000000000139D7 case 53", "mov     esi, 0", "mov     edx, 2", "mov     rax, rdx", "mul     rcx", "jo      short loc_13B17"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 30, 1, 0, 5, 0, 1, 13, 3, 0.18228366615463387, ["movzx   r12d, r12b", "lea     rdx, off_19A18", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~r12d,r12b", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 63, 1, 0, 14, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     [rsp+68h+val], val_0", "mov     [rsp+68h+valid_suffixes], valid_suffixes_0", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      short loc_1383B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],val_0", "mov~<TAG>,valid_suffixes_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 case 3", "mov     edx, 6; power", "call    bkm_scale_by_power", "jmp     loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [3, 0, 33, 0, 0, 4, 0, 1, 15, 4, 0.004352278545826933, ["mov     ebx, 1", "mov     esi, 400h", "cmp     al, 42h ; 'B'", "jnz     short loc_139B7"], ["mov~ebx,0", "mov~esi,0", "cmp~al,0", "jnz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 14, 5, 0.010752688172043012, ["cmp     al, 69h ; 'i'", "jz      short loc_13998"], ["cmp~al,0", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 9, 2, 0.020737327188940093, ["mov     rax, [rsp+68h+tmp]", "mov     rsi, [rsp+68h+val]", "mov     [rsi], rax"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~<TAG>,rax"]], [0, 0, 44, 0, 0, 3, 1, 1, 8, 3, 0.15821812596006143, ["movzx   r12d, byte ptr [rbx]", "test    r12b, r12b", "jz      loc_13B83"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jz~FOO"]], [2, 0, 4, 1, 0, 8, 2, 0, 15, 3, 0.027905785970302098, ["or      r13d, eax", "movsxd  suffixes, ebx", "add     suffixes, [p+0]", "mov     [p+0], rbx", "mov     eax, r13d", "or      eax, 2", "cmp     byte ptr [rbx], 0", "cmovnz  r13d, eax"], ["or~r13d,eax", "movsxd~suffixes,ebx", "add~suffixes,[p+0]", "mov~[p+0],rbx", "mov~eax,r13d", "or~eax,0", "cmp~<TAG>,0", "cmovnz~r13d,eax"]], [2, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["shl     rcx, 9", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     loc_13B68"], ["shl~rcx,0", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_13A1B"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 57, 0, 1, 8, 0, 2, 4, 4, 0.06912442396313365, ["mov     edx, r14d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    _strtoul", "mov     [rsp+68h+tmp], rax", "mov     ch_0, [p+0]", "cmp     rbx, s", "jz      short loc_138B4"], ["mov~edx,r14d", "mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~[rsp+0],rax", "mov~ch_0,[p+0]", "cmp~rbx,s", "jz~FOO"]], [2, 0, 58, 0, 0, 3, 0, 1, 3, 2, 0.059395801331285206, ["mov     r13d, 4", "cmp     bl, 2Dh ; '-'", "jz      loc_13B90"], ["mov~r13d,0", "cmp~bl,0", "jz~FOO"]], [1, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["add     rcx, rcx", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     short loc_13B68"], ["add~rcx,rcx", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_13B1E"], ["test~rsi,rsi", "jnz~FOO"]], [2, 0, 32, 0, 0, 3, 0, 1, 14, 4, 0.008192524321556578, ["mov     ebx, 2", "mov     esi, 3E8h", "jmp     short loc_139B7"], ["mov~ebx,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 36, 0, 0, 3, 0, 1, 13, 5, 0.02048131080389145, ["movzx   eax, byte ptr [rbx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_1398C"], ["movzx~eax,[yte ptr [rbx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_139FC"], ["mov~esi,0", "jmp~FOO"]], [1, 1, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 00000000000139D7 case 32", "mov     esi, 0", "mov     edx, 200h", "mov     rax, rdx", "mul     rcx", "jo      short loc_13A14"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,<STR>", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [2, 0, 45, 0, 0, 3, 0, 1, 8, 4, 0.03225806451612903, ["mov     [rsp+68h+tmp], 1", "mov     r13d, 0", "jmp     short loc_138FD"], ["mov~[rsp+0],0", "mov~r13d,0", "jmp~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 7, 3, 0.11162314388120839, ["cmp     [rsp+68h+valid_suffixes], 0", "jz      short loc_1393C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 43, 0, 1, 5, 1, 2, 9, 3, 0.1597542242703533, ["movsx   esi, r12b; c", "mov     rdi, [rsp+68h+valid_suffixes]; s", "call    _strchr", "test    rax, rax", "jz      short loc_13949"], ["movsx~esi,r12b", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 3, 0.072452636968766, ["mov     edx, [r15]", "test    edx, edx", "jz      short loc_138F0"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_13B03"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 cases 5,37", "mov     edx, 3; power", "call    bkm_scale_by_power", "jmp     loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     loc_13B68"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [2, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["shl     rcx, 0Ah", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     loc_13B68"], ["shl~rcx,0", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     loc_13B68"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 cases 9,41", "mov     edx, 1; power", "call    bkm_scale_by_power", "jmp     loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 cases 11,43", "mov     edx, 2; power", "call    bkm_scale_by_power", "jmp     loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 case 14", "mov     edx, 5; power", "call    bkm_scale_by_power", "jmp     loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 cases 18,50", "mov     edx, 4; power", "call    bkm_scale_by_power", "jmp     short loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_13B68"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 case 23", "mov     edx, 8; power", "call    bkm_scale_by_power", "jmp     short loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270011, ["lea     rdi, [rsp+68h+tmp]; jumptable 00000000000139D7 case 24", "mov     edx, 7; power", "call    bkm_scale_by_power", "jmp     short loc_13B68"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 14, 4, 0.0011947431302270011, ["mov     eax, 0; jumptable 00000000000139D7 case 33"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.030721966205837174, ["mov     eax, r13d", "mov     rdi, [rsp+68h+var_40]", "xor     rdi, fs:28h", "jnz     short loc_13BC2"], ["mov~eax,r13d", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 38, 0, 1, 5, 1, 2, 12, 5, 0.029185867895545316, ["mov     esi, 30h ; '0'; jumptable 000000000001393A cases 0,2,6,8,11,15,20,21,34,38,40,47", "mov     rdi, [rsp+68h+valid_suffixes]; s", "call    _strchr", "test    rax, rax", "jz      short loc_139D9"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 40, 1, 0, 5, 0, 1, 11, 5, 0.03225806451612903, ["movzx   eax, al", "lea     rdx, off_19958", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 41, 0, 0, 3, 0, 1, 10, 5, 0.16129032258064516, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'; switch 48 cases", "ja      loc_139AD; jumptable 000000000001393A default case"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [2, 0, 48, 0, 0, 3, 0, 1, 6, 2, 0.0028161802355350742, ["mov     r13d, 4", "cmp     edx, 22h ; '\"'", "jnz     loc_13B90"], ["mov~r13d,0", "cmp~edx,0", "jnz~FOO"]], [2, 0, 32, 0, 0, 6, 0, 1, 15, 4, 0.004096262160778289, ["cmp     byte ptr [rbx+2], 42h ; 'B'", "setz    bl", "movzx   ebx, bl", "lea     ebx, [rbx+rbx+1]", "mov     esi, 400h", "jmp     short loc_139B7"], ["cmp~[yte ptr [rbx+0],0", "setz~bl", "movzx~ebx,bl", "lea~ebx,[rbx+0]", "mov~esi,0", "jmp~FOO"]], [2, 0, 32, 0, 0, 2, 0, 0, 11, 4, 0.1385048643113159, ["mov     ebx, 1; jumptable 000000000001393A default case", "mov     esi, 400h; base"], ["mov~ebx,0", "mov~esi,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     p", "pop     r12", "pop     r13", "pop     strtol_base", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~r13", "pop~strtol_base", "pop~r15", "retn"]], [1, 0, 47, 0, 0, 2, 0, 1, 7, 4, 0.011264720942140297, ["mov     r13d, 1", "jmp     short loc_138F6"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0006400409626216078, ["mov     r13d, 4", "jmp     short loc_13B90"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 3, 0.00819252432155658, ["mov     rdi, [rsp+68h+valid_suffixes]; s", "test    rdi, rdi", "jz      loc_13BB2"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 61, 0, 2, 14, 1, 3, 1, 4, 0.01561699948796723, ["mov     r12, s", "mov     rbp, ptr", "mov     r14d, edx", "lea     rax, [rsp+68h+t_ptr]", "test    ptr, ptr", "cmovz   rbp, rax", "call    ___errno_location", "mov     r15, rax", "mov     dword ptr [rax], 0", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_13861"], ["mov~r12,s", "mov~rbp,ptr", "mov~r14d,edx", "lea~rax,[rsp+0]", "test~ptr,ptr", "cmovz~rbp,rax", "call~FOO", "mov~r15,rax", "mov~<TAG>,0", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 31, 1, 0, 3, 0, 1, 12, 3, 0.19713261648745517, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      loc_13B50; jumptable 00000000000139D7 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [2, 0, 32, 0, 0, 3, 0, 1, 13, 4, 0.008192524321556578, ["mov     ebx, 1", "mov     esi, 400h", "jmp     short loc_139B7"], ["mov~ebx,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 2, 0.0007680491551459293, ["mov     r13d, 4", "jmp     short loc_13B90"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 47, 0, 1, 4, 1, 2, 7, 3, 0.025601638504864313, ["movsx   esi, sil; c", "call    _strchr", "test    rax, rax", "jz      loc_13BBA"], ["movsx~esi,sil", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 6, 2, 0.016769073220686125, ["movzx   esi, byte ptr [rbx]", "test    sil, sil", "jz      loc_13B90"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 8, 2, 0.002304147465437788, ["mov     rsi, [rsp+68h+val]", "mov     [rsi], rax", "jmp     loc_13B90"], ["mov~rsi,[rsp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 10, 2, 0.0007680491551459293, ["mov     rax, [rsp+68h+tmp]", "mov     rsi, [rsp+68h+val]", "mov     [rsi], rax", "or      r13d, 2", "jmp     loc_13B90"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~<TAG>,rax", "or~r13d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 13, 2, 0.009216589861751152, ["mov     rax, [rsp+68h+tmp]; jumptable 00000000000139D7 default case", "mov     base, [rsp+68h+val]", "mov     [rsi], rax", "or      r13d, 2", "jmp     short loc_13B90"], ["mov~rax,[rsp+0]", "mov~base,[rsp+0]", "mov~<TAG>,rax", "or~r13d,0", "jmp~FOO"]], [2, 0, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 00000000000139D7 case 0", "mov     esi, 0", "mov     edx, 400h", "mov     rax, rdx", "mul     rcx", "jo      short loc_13A5D"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_13A64"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_13A45"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val_0, __PRETTY_FUNCTION___4162; \"xstrtoul\"", "mov     edx, 54h ; 'T'; line", "lea     ptr, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "call    ___assert_fail"], ["lea~val_0,<TAG>", "mov~edx,0", "lea~ptr,<TAG>", "lea~s,<TAG>", "call~FOO"]], [1, 0, 61, 1, 0, 2, 0, 0, 3, 4, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 61, 0, 0, 3, 1, 1, 2, 3, 0.04582693292370712, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_1385A"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [1, 0, 47, 0, 0, 1, 0, 0, 6, 4, 0.07885304659498207, ["mov     r13d, 0"], ["mov~r13d,0"]]], "func_feature": [16, 18, 68, 1, 64, 99, 1, 250, 0.03007, 6, 13], "succs": [[14, 23], [0, 33, 34, 3, 56, 18, 35, 24, 57, 28, 29, 30, 31], [48, 60], [8], [49, 15], [42, 4], [37], [21, 6], [6], [8], [9, 25], [22, 47], [11, 37], [8], [32, 13], [49], [5, 15], [10], [17, 10], [7], [54, 7], [40, 55], [41, 63], [14], [8], [8], [8], [8], [8], [8], [8], [8], [8], [8], [8], [8], [], [44, 36], [16, 50], [43, 38], [43, 39], [45, 37], [49], [49], [], [20], [37], [53, 46], [62], [56, 1], [49], [37], [19, 51], [52, 37], [37], [37], [37], [58, 59], [26, 27], [58], [], [62], [12, 61], [20]], "fname": "xstrtoul", "n_num": 64}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.041666666666666664, ["lea     opt_idx, aSSArgumentSToo; \"%s%s argument '%s' too large\"", "cmp     edi, 1", "jnz     short loc_13C54"], ["lea~opt_idx,<TAG>", "cmp~edi,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 1, 3, 0.027777777777777776, ["cmp     edi, 2", "jnb     short loc_13C59"], ["cmp~edi,0", "jnb~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.027777777777777776, ["lea     rsi, aInvalidSuffixI; \"invalid suffix in %s%s argument '%s'\"", "jmp     short loc_13C02"], ["lea~rsi,<TAG>", "jmp~FOO"]], [4, 0, 0, 0, 3, 12, 0, 3, 4, -1, 0.0, ["mov     edx, 5; category", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, arg", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, ebx; status", "mov     eax, 0", "call    _error", "call    _abort"], ["mov~edx,0", "mov~edi,0", "call~FOO", "mov~r9,arg", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "call~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, 0, 0.041666666666666664, ["cdqe", "lea     r12, off_19B31", "sub     r12, opt_idx", "mov     [rsp+38h+var_32], dl", "mov     [rsp+38h+var_31], 0", "lea     r13, [rsp+38h+var_32]", "jmp     short loc_13C17"], ["cdqe~", "lea~r12,<TAG>", "sub~r12,opt_idx", "mov~[rsp+0],dl", "mov~[rsp+0],0", "lea~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 1, 1, 0, 4, 0, 0, 3, -1, 0.041666666666666664, ["cdqe", "shl     opt_idx, 5", "mov     r13, [long_options+rax]", "lea     r12, off_19B31"], ["cdqe~", "shl~opt_idx,0", "mov~r13,<TAG>", "lea~r12,<TAG>"]], [0, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.20833333333333331, ["test    eax, eax", "js      short loc_13C62"], ["test~eax,eax", "js~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 1, 2, 0.06944444444444445, ["lea     rsi, aInvalidSSArgum; \"invalid %s%s argument '%s'\"", "cmp     edi, 4", "jz      short loc_13C02"], ["lea~rsi,<TAG>", "cmp~edi,0", "jz~FOO"]], [1, 1, 9, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     eax, esi", "mov     rbp, arg", "mov     rbx, fs:28h", "mov     [rsp+38h+var_30], rbx", "xor     ebx, ebx", "mov     ebx, cs:exit_failure", "cmp     edi, 3", "ja      short loc_13C48"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~eax,esi", "mov~rbp,arg", "mov~rbx,<TAG>", "mov~[rsp+0],rbx", "xor~ebx,ebx", "mov~ebx,<TAG>", "cmp~edi,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [4, 2, 10, 3, 10, 13, 1, 49, 0.04583, 6, 3], "succs": [[9, 6], [0, 2], [6], [], [3], [3], [4, 5], [9, 6], [1, 7], []], "fname": "xstrtol_fatal", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 7, 0, 0, 2, 1, 1, 0, 0, 0.0, ["test    edx, edx", "jz      short loc_13CCF"], ["test~edx,edx", "jz~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 0, 3, 0.2857142857142857, ["mov     rcx, [x]", "mov     rax, rcx", "mul     base", "jo      short loc_13CA5"], ["mov~rcx,<TAG>", "mov~rax,rcx", "mul~,base", "jo~FOO"]], [4, 0, 5, 0, 0, 8, 0, 1, 0, 4, 0.11904761904761904, ["push    rbx", "lea     r8d, [rdx-1]", "mov     r9d, 0", "movsxd  base, esi", "mov     r10d, 0", "mov     rbx, 0FFFFFFFFFFFFFFFFh", "mov     r11d, 1", "jmp     short loc_13CB8"], ["push~rbx", "lea~r8d,[rdx-1]+0]", "mov~r9d,0", "movsxd~base,esi", "mov~r10d,0", "mov~rbx,0", "mov~r11d,0", "jmp~FOO"]], [2, 0, 5, 1, 0, 4, 1, 1, 0, 1, 0.21428571428571427, ["or      r9d, eax", "sub     r8d, 1", "cmp     r8d, 0FFFFFFFFh", "jz      short loc_13CD9"], ["or~r9d,eax", "sub~r8d,0", "cmp~r8d,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 0, 2, 0.07142857142857142, ["mov     [x], rbx", "mov     eax, r11d"], ["mov~<TAG>,rbx", "mov~eax,r11d"]], [0, 0, 5, 1, 0, 4, 0, 1, 0, 2, 0.07142857142857142, ["imul    rcx, base", "mov     [x], rcx", "mov     eax, r10d", "jmp     short loc_13CAB"], ["imul~rcx,base", "mov~<TAG>,rcx", "mov~eax,r10d", "jmp~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["mov     r9d, 0", "mov     eax, r9d", "retn"], ["mov~r9d,0", "mov~eax,r9d", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     eax, r9d", "pop     rbx", "retn"], ["mov~eax,r9d", "pop~rbx", "retn"]]], "func_feature": [0, 2, 4, 0, 8, 9, 8, 30, 0.09524, 0, 3], "succs": [[2, 6], [4, 5], [1], [1, 7], [3], [3], [], []], "fname": "bkm_scale_by_power_0", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 36, 0, 0, 3, 0, 1, 0, 0, 0.02048131080389145, ["movzx   eax, byte ptr [rbx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_13E95"], ["movzx~eax,[yte ptr [rbx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 38, 0, 1, 5, 1, 2, 12, 5, 0.029185867895545316, ["mov     esi, 30h ; '0'; jumptable 0000000000013E43 cases 0,2,6,8,11,15,20,21,34,38,40,47", "mov     rdi, [rsp+68h+valid_suffixes]; s", "call    _strchr", "test    rax, rax", "jz      short loc_13EE2"], ["mov~esi,0", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 1, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 32", "mov     esi, 0", "mov     edx, 200h", "mov     rax, rdx", "mul     rcx", "jo      short loc_13F1D"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,<STR>", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 30, 1, 0, 5, 0, 1, 13, 3, 0.18228366615463387, ["movzx   r12d, r12b", "lea     rdx, off_19C20", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~r12d,r12b", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 46, 0, 0, 2, 0, 1, 7, 3, 0.11162314388120839, ["cmp     [rsp+68h+valid_suffixes], 0", "jz      short loc_13E45"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 7, 4, 0.011264720942140297, ["mov     r13d, 1", "jmp     short loc_13DFF"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 47, 0, 0, 1, 0, 0, 6, 4, 0.07885304659498207, ["mov     r13d, 0"], ["mov~r13d,0"]], [1, 0, 35, 0, 0, 2, 0, 1, 14, 5, 0.010752688172043012, ["cmp     al, 69h ; 'i'", "jz      short loc_13EA1"], ["cmp~al,0", "jz~FOO"]], [2, 0, 63, 1, 0, 14, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     [rsp+68h+val], val_0", "mov     [rsp+68h+valid_suffixes], valid_suffixes_0", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      short loc_13D3F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],val_0", "mov~<TAG>,valid_suffixes_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 14, 4, 0.0011947431302270013, ["mov     eax, 0; jumptable 0000000000013EE0 case 33"], ["mov~eax,0"]], [2, 0, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 53", "mov     esi, 0", "mov     edx, 2", "mov     rax, rdx", "mul     rcx", "jo      short loc_14020"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 24", "mov     edx, 7; power", "call    bkm_scale_by_power_0", "jmp     short loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 8, 3, 0.15821812596006143, ["movzx   r12d, byte ptr [rbx]", "test    r12b, r12b", "jz      loc_1408C"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jz~FOO"]], [2, 0, 45, 0, 0, 3, 0, 1, 8, 4, 0.03225806451612903, ["mov     [rsp+68h+tmp], 1", "mov     r13d, 0", "jmp     short loc_13E06"], ["mov~[rsp+0],0", "mov~r13d,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 3", "mov     edx, 6; power", "call    bkm_scale_by_power_0", "jmp     loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [3, 0, 33, 0, 0, 4, 0, 1, 15, 4, 0.004352278545826933, ["mov     ebx, 1", "mov     esi, 400h", "cmp     al, 42h ; 'B'", "jnz     short loc_13EC0"], ["mov~ebx,0", "mov~esi,0", "cmp~al,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 9, 2, 0.020737327188940093, ["mov     rax, [rsp+68h+tmp]", "mov     rsi, [rsp+68h+val]", "mov     [rsi], rax"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~<TAG>,rax"]], [2, 0, 4, 1, 0, 8, 2, 0, 15, 3, 0.027905785970302098, ["or      r13d, eax", "movsxd  suffixes, ebx", "add     suffixes, [p+0]", "mov     [p+0], rbx", "mov     eax, r13d", "or      eax, 2", "cmp     byte ptr [rbx], 0", "cmovnz  r13d, eax"], ["or~r13d,eax", "movsxd~suffixes,ebx", "add~suffixes,[p+0]", "mov~[p+0],rbx", "mov~eax,r13d", "or~eax,0", "cmp~<TAG>,0", "cmovnz~r13d,eax"]], [2, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["shl     rcx, 9", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     loc_14071"], ["shl~rcx,0", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_13F24"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 57, 0, 1, 9, 0, 2, 4, 4, 0.06912442396313365, ["mov     ecx, 0; group", "mov     edx, r14d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    ___strtoul_internal", "mov     [rsp+68h+tmp], rax", "mov     ch_0, [p+0]", "cmp     rbx, s", "jz      short loc_13DBD"], ["mov~ecx,0", "mov~edx,r14d", "mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~[rsp+0],rax", "mov~ch_0,[p+0]", "cmp~rbx,s", "jz~FOO"]], [2, 0, 58, 0, 0, 3, 0, 1, 3, 2, 0.059395801331285206, ["mov     r13d, 4", "cmp     bl, 2Dh ; '-'", "jz      loc_14099"], ["mov~r13d,0", "cmp~bl,0", "jz~FOO"]], [1, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["add     rcx, rcx", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     short loc_14071"], ["add~rcx,rcx", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_14027"], ["test~rsi,rsi", "jnz~FOO"]], [2, 0, 32, 0, 0, 3, 0, 1, 14, 4, 0.008192524321556578, ["mov     ebx, 2", "mov     esi, 3E8h", "jmp     short loc_13EC0"], ["mov~ebx,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_13F05"], ["mov~esi,0", "jmp~FOO"]], [0, 0, 43, 0, 1, 5, 1, 2, 9, 3, 0.1597542242703533, ["movsx   esi, r12b; c", "mov     rdi, [rsp+68h+valid_suffixes]; s", "call    _strchr", "test    rax, rax", "jz      short loc_13E52"], ["movsx~esi,r12b", "mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 3, 0.072452636968766, ["mov     edx, [r15]", "test    edx, edx", "jz      short loc_13DF9"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_1400C"], ["mov~esi,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.030721966205837174, ["mov     eax, r13d", "mov     rdi, [rsp+68h+var_40]", "xor     rdi, fs:28h", "jnz     short loc_140CB"], ["mov~eax,r13d", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [2, 0, 48, 0, 0, 3, 0, 1, 6, 2, 0.0028161802355350742, ["mov     r13d, 4", "cmp     edx, 22h ; '\"'", "jnz     loc_14099"], ["mov~r13d,0", "cmp~edx,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 6, 2, 0.016769073220686125, ["movzx   esi, byte ptr [rbx]", "test    sil, sil", "jz      loc_14099"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 8, 2, 0.002304147465437788, ["mov     rsi, [rsp+68h+val]", "mov     [rsi], rax", "jmp     loc_14099"], ["mov~rsi,[rsp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 10, 2, 0.0007680491551459293, ["mov     rax, [rsp+68h+tmp]", "mov     rsi, [rsp+68h+val]", "mov     [rsi], rax", "or      r13d, 2", "jmp     loc_14099"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~<TAG>,rax", "or~r13d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 13, 2, 0.009216589861751152, ["mov     rax, [rsp+68h+tmp]; jumptable 0000000000013EE0 default case", "mov     base, [rsp+68h+val]", "mov     [rsi], rax", "or      r13d, 2", "jmp     short loc_14099"], ["mov~rax,[rsp+0]", "mov~base,[rsp+0]", "mov~<TAG>,rax", "or~r13d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0006400409626216078, ["mov     r13d, 4", "jmp     short loc_14099"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 2, 0.0007680491551459293, ["mov     r13d, 4", "jmp     short loc_14099"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 10, 5, 0.16129032258064516, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'; switch 48 cases", "ja      loc_13EB6; jumptable 0000000000013E43 default case"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     loc_14071"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [2, 0, 32, 0, 0, 6, 0, 1, 15, 4, 0.004096262160778289, ["cmp     byte ptr [rbx+2], 42h ; 'B'", "setz    bl", "movzx   ebx, bl", "lea     ebx, [rbx+rbx+1]", "mov     esi, 400h", "jmp     short loc_13EC0"], ["cmp~[yte ptr [rbx+0],0", "setz~bl", "movzx~ebx,bl", "lea~ebx,[rbx+0]", "mov~esi,0", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_14071"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 cases 9,41", "mov     edx, 1; power", "call    bkm_scale_by_power_0", "jmp     loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     p", "pop     r12", "pop     r13", "pop     strtol_base", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~r13", "pop~strtol_base", "pop~r15", "retn"]], [1, 0, 61, 0, 2, 14, 1, 3, 1, 4, 0.01561699948796723, ["mov     r12, s", "mov     rbp, ptr", "mov     r14d, edx", "lea     rax, [rsp+68h+t_ptr]", "test    ptr, ptr", "cmovz   rbp, rax", "call    ___errno_location", "mov     r15, rax", "mov     dword ptr [rax], 0", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_13D65"], ["mov~r12,s", "mov~rbp,ptr", "mov~r14d,edx", "lea~rax,[rsp+0]", "test~ptr,ptr", "cmovz~rbp,rax", "call~FOO", "mov~r15,rax", "mov~<TAG>,0", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 3, 0.00819252432155658, ["mov     rdi, [rsp+68h+valid_suffixes]; s", "test    rdi, rdi", "jz      loc_140BB"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 40, 1, 0, 5, 0, 1, 11, 5, 0.03225806451612903, ["movzx   eax, al", "lea     rdx, off_19B60", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 23", "mov     edx, 8; power", "call    bkm_scale_by_power_0", "jmp     short loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 31, 1, 0, 3, 0, 1, 12, 3, 0.19713261648745517, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      loc_14059; jumptable 0000000000013EE0 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [2, 0, 32, 0, 0, 3, 0, 1, 13, 4, 0.008192524321556578, ["mov     ebx, 1", "mov     esi, 400h", "jmp     short loc_13EC0"], ["mov~ebx,0", "mov~esi,0", "jmp~FOO"]], [2, 0, 32, 0, 0, 2, 0, 0, 11, 4, 0.1385048643113159, ["mov     ebx, 1; jumptable 0000000000013E43 default case", "mov     esi, 400h; base"], ["mov~ebx,0", "mov~esi,0"]], [0, 0, 47, 0, 1, 4, 1, 2, 7, 3, 0.025601638504864313, ["movsx   esi, sil; c", "call    _strchr", "test    rax, rax", "jz      loc_140C3"], ["movsx~esi,sil", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 cases 11,43", "mov     edx, 2; power", "call    bkm_scale_by_power_0", "jmp     loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 9, 1, 0, 6, 0, 0, 14, 6, 0.029697900665642603, ["mov     rcx, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 0", "mov     esi, 0", "mov     edx, 400h", "mov     rax, rdx", "mul     rcx", "jo      short loc_13F66"], ["mov~rcx,[rsp+0]", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, 5, 0.018433179723502304, ["test    rsi, rsi", "jnz     short loc_13F6D"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 15, 6, 0.0, ["mov     esi, 1", "jmp     short loc_13F4E"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 cases 5,37", "mov     edx, 3; power", "call    bkm_scale_by_power_0", "jmp     loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val_0, __PRETTY_FUNCTION___4162_0; \"xstrtoumax\"", "mov     edx, 54h ; 'T'; line", "lea     ptr, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "call    ___assert_fail"], ["lea~val_0,<TAG>", "mov~edx,0", "lea~ptr,<TAG>", "lea~s,<TAG>", "call~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 case 14", "mov     edx, 5; power", "call    bkm_scale_by_power_0", "jmp     loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 5, 1, 0, 4, 0, 1, 16, 4, 0.0019201228878648233, ["shl     rcx, 0Ah", "mov     [rsp+68h+tmp], rcx", "mov     eax, 0", "jmp     loc_14071"], ["shl~rcx,0", "mov~[rsp+0],rcx", "mov~eax,0", "jmp~FOO"]], [1, 0, 61, 1, 0, 2, 0, 0, 3, 4, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 61, 0, 0, 3, 1, 1, 2, 3, 0.04582693292370712, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_13D5E"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 14, 4, 0.0011947431302270013, ["lea     rdi, [rsp+68h+tmp]; jumptable 0000000000013EE0 cases 18,50", "mov     edx, 4; power", "call    bkm_scale_by_power_0", "jmp     short loc_14071"], ["lea~rdi,[rsp+0]", "mov~edx,0", "call~FOO", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 16, 4, 0.0019201228878648233, ["mov     [rsp+68h+tmp], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     loc_14071"], ["mov~[rsp+0],0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [16, 18, 68, 1, 64, 99, 3, 251, 0.03007, 6, 13], "succs": [[24, 7], [0, 48], [25, 19], [2, 9, 10, 11, 34, 14, 51, 52, 46, 41, 55, 58, 62], [32, 12], [4], [4], [39, 15], [57, 43], [17], [28, 23], [17], [16, 26], [12], [17], [24, 47], [29], [16], [17], [18, 38], [27, 44], [20, 29], [17], [40, 22], [47], [19], [33, 37], [6, 30], [23], [56, 42], [29, 5], [50, 29], [29], [29], [29], [29], [29], [49, 45], [17], [47], [17], [17], [], [61], [35, 31], [1, 49], [17], [34, 3], [47], [47], [36, 13], [17], [53, 54], [59, 63], [53], [17], [], [], [17], [17], [61], [60, 21], [17], [17]], "fname": "xstrtoumax", "n_num": 64}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rax, rbp", "mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_1414D"], ["mov~rax,rbp", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, pwc", "mov     r13, s", "mov     r12, n", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "mov     rbp, rax", "cmp     ret, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_1412F"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,pwc", "mov~r13,s", "mov~r12,n", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "mov~rbp,rax", "cmp~ret,0", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_1412F"], ["test~n,n", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.06666666666666667, ["mov     edi, 0; category", "call    hard_locale", "test    al, al", "jnz     short loc_1412F"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     [pwc], eax", "mov     ebp, 1"], ["movzx~eax,[yte ptr [s+0]", "mov~<TAG>,eax", "mov~ebp,0"]], [0, 1, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,<STR>", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 6, 1, 7, 9, 3, 39, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 0, 0.08333333333333333, ["mov     rdi, [rdi+48h]", "call    qword ptr [h+38h]", "jmp     short loc_14165"], ["mov~rdi,[rdi+0]", "call~[word ptr [h+0]", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, -1, 0.08333333333333333, ["mov     h, size", "call    qword ptr [h+38h]"], ["mov~h,size", "call~[word ptr [h+0]"]], [2, 0, 3, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, h", "test    byte ptr [h+50h], 1", "jnz     short loc_1416A"], ["sub~rsp,0", "mov~rax,h", "test~[yte ptr [h+0],0", "jnz~FOO"]]], "func_feature": [2, 1, 4, 0, 4, 4, 2, 11, 0.04167, 0, 2], "succs": [[], [0], [0], [1, 2]], "fname": "call_chunkfun", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 0, 0.08333333333333333, ["mov     rdi, [rdi+48h]", "call    qword ptr [h+40h]", "jmp     short loc_14186"], ["mov~rdi,[rdi+0]", "call~[word ptr [h+0]", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, -1, 0.08333333333333333, ["mov     h, old_chunk", "call    qword ptr [h+40h]"], ["mov~h,old_chunk", "call~[word ptr [h+0]"]], [2, 0, 3, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, h", "test    byte ptr [h+50h], 1", "jnz     short loc_1418B"], ["sub~rsp,0", "mov~rax,h", "test~[yte ptr [h+0],0", "jnz~FOO"]]], "func_feature": [2, 1, 4, 0, 4, 4, 2, 11, 0.04167, 0, 2], "succs": [[], [0], [0], [1, 2]], "fname": "call_freefun", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 1, 0, 16, 2, 0, 0, 0, 0.0, ["lea     rdx, [chunk+r12+10h]", "neg     alignment", "and     rbp, rdx", "mov     [h+10h], rbp", "mov     [h+18h], rbp", "mov     rdx, chunk", "add     rdx, [h]", "mov     [chunk], rdx", "mov     [h+20h], rdx", "mov     qword ptr [chunk+8], 0", "and     byte ptr [h+50h], 0F9h", "mov     eax, 1", "pop     h", "pop     rbp", "pop     r12", "retn"], ["lea~rdx,[chunk+0]", "neg~alignment", "and~rbp,rdx", "mov~[h+0],rbp", "mov~[h+0],rbp", "mov~rdx,chunk", "add~rdx,<TAG>", "mov~<TAG>,rdx", "mov~[h+0],rdx", "mov~[word ptr [chunk+0],0", "and~[yte ptr [h+0],0", "mov~eax,0", "pop~h", "pop~rbp", "pop~r12", "retn"]], [1, 1, 2, 0, 1, 18, 3, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, h", "mov     rbp, alignment", "test    alignment, alignment", "mov     eax, 10h", "cmovz   rbp, rax", "test    size, size", "mov     eax, 0FE0h", "cmovz   size, rax; size", "mov     [h], size", "lea     r12, [alignment-1]", "mov     [h+30h], r12", "call    call_chunkfun", "mov     [h+8], rax", "test    chunk, chunk", "jz      short loc_14205"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,h", "mov~rbp,alignment", "test~alignment,alignment", "mov~eax,0", "cmovz~rbp,rax", "test~size,size", "mov~eax,<STR>", "cmovz~size,rax", "mov~<TAG>,size", "lea~r12,[alignment-1]+0]", "mov~[h+0],r12", "call~FOO", "mov~[h+0],rax", "test~chunk,chunk", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    cs:obstack_alloc_failed_handler"], ["call~<TAG>"]]], "func_feature": [2, 5, 3, 0, 3, 2, 2, 35, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "_obstack_begin_worker", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[5, 0, 0, 1, 3, 13, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste; \"memory exhausted\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rax", "lea     rdx, aSSS_0+8; \"%s\\n\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     edi, cs:exit_failure; status", "call    _exit"], ["sub~rsp,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~edi,<TAG>", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 2, 13, 0.0, 4, 1], "succs": [[]], "fname": "print_and_abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     [h+38h], chunkfun", "mov     [h+40h], freefun", "and     byte ptr [h+50h], 0FEh", "call    _obstack_begin_worker", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~[h+0],chunkfun", "mov~[h+0],freefun", "and~[yte ptr [h+0],0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 3, 7, 0.0, 0, 2], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 0, 2, 1, 8, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     [h+38h], chunkfun", "mov     [h+40h], freefun", "mov     [h+48h], arg", "or      byte ptr [h+50h], 1", "call    _obstack_begin_worker", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~[h+0],chunkfun", "mov~[h+0],freefun", "mov~[h+0],arg", "or~[yte ptr [h+0],0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "_obstack_begin_1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 10, 1, 0, 0, 0, 0.0, ["mov     [h+10h], object_base", "add     obj_size, object_base", "mov     [h+18h], r12", "and     byte ptr [h+50h], 0FDh", "pop     h", "pop     object_base", "pop     r12", "pop     new_chunk", "pop     old_chunk", "retn"], ["mov~[h+0],object_base", "add~obj_size,object_base", "mov~[h+0],r12", "and~[yte ptr [h+0],0", "pop~h", "pop~object_base", "pop~r12", "pop~new_chunk", "pop~old_chunk", "retn"]], [1, 0, 3, 1, 1, 15, 2, 2, 3, 2, 0.21428571428571427, ["mov     [h+8], new_chunk", "mov     [new_chunk+8], old_chunk", "add     new_size, new_chunk", "mov     [h+20h], rbp", "mov     [new_chunk], rbp", "mov     new_chunk, [h+30h]", "lea     rbp, [new_chunk+rax+10h]", "not     rax", "and     rbp, rax", "mov     rsi, [h+10h]; src", "mov     rdx, obj_size; n", "mov     rdi, object_base; dest", "call    _memcpy", "test    byte ptr [h+50h], 2", "jnz     short loc_1432B"], ["mov~[h+0],new_chunk", "mov~[new_chunk+0],old_chunk", "add~new_size,new_chunk", "mov~[h+0],rbp", "mov~<TAG>,rbp", "mov~new_chunk,[h+0]", "lea~rbp,[new_chunk+0]", "not~rax", "and~rbp,rax", "mov~rsi,[h+0]", "mov~rdx,obj_size", "mov~rdi,object_base", "call~FOO", "test~[yte ptr [h+0],0", "jnz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 2, 5, 0, 0.0, ["mov     rax, [old_chunk+8]", "mov     [new_chunk+8], rax", "mov     rsi, old_chunk; old_chunk", "mov     rdi, h; h", "call    call_freefun", "jmp     short loc_1432B"], ["mov~rax,[old_chunk+0]", "mov~[new_chunk+0],rax", "mov~rsi,old_chunk", "mov~rdi,h", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, 1, 0.09523809523809523, ["mov     rax, [h+30h]", "lea     rdx, [old_chunk+rax+10h]", "not     rax", "and     rax, rdx", "cmp     [h+10h], rax", "jz      short loc_14349"], ["mov~rax,[h+0]", "lea~rdx,[old_chunk+0]", "not~rax", "and~rax,rdx", "cmp~[h+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    cs:obstack_alloc_failed_handler"], ["call~<TAG>"]], [1, 0, 7, 3, 0, 21, 0, 1, 0, 5, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [h+8]", "mov     r12, [h+18h]", "sub     r12, [h+10h]", "add     length, obj_size", "mov     rax, sum1", "add     rax, [h+30h]", "mov     rdx, obj_size", "shr     rdx, 3", "lea     rdx, [sum2+rdx+64h]", "cmp     [h], sum2", "mov     rbp, sum2", "cmovnb  rbp, [h]", "cmp     rbp, rdx", "cmovb   rbp, rdx", "cmp     obj_size, sum1", "ja      short loc_14343"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,[h+0]", "mov~r12,[h+0]", "sub~r12,[h+0]", "add~length,obj_size", "mov~rax,sum1", "add~rax,[h+0]", "mov~rdx,obj_size", "shr~rdx,0", "lea~rdx,[sum2+0]", "cmp~<TAG>,sum2", "mov~rbp,sum2", "cmovnb~rbp,<TAG>", "cmp~rbp,rdx", "cmovb~rbp,rdx", "cmp~obj_size,sum1", "ja~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 4, 0.11904761904761904, ["mov     rbx, h", "cmp     sum1, sum2", "ja      short loc_14343"], ["mov~rbx,h", "cmp~sum1,sum2", "ja~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 3, 0.19047619047619047, ["mov     sum1, new_size; size", "call    call_chunkfun", "mov     r13, rax", "test    new_chunk, new_chunk", "jz      short loc_14343"], ["mov~sum1,new_size", "call~FOO", "mov~r13,rax", "test~new_chunk,new_chunk", "jz~FOO"]]], "func_feature": [4, 5, 10, 0, 8, 11, 3, 67, 0.07738, 1, 5], "succs": [[], [0, 3], [0], [0, 2], [], [4, 6], [4, 7], [1, 4]], "fname": "_obstack_newchunk", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0.0, ["test    lp, lp", "setnz   al", "movzx   eax, al", "retn"], ["test~lp,lp", "setnz~al", "movzx~eax,al", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.05, ["jmp     short loc_1437C"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 0, 0.07500000000000001, ["mov     lp, [lp+8]", "test    plp, plp", "jz      short loc_1437C"], ["mov~lp,[lp+0]", "test~plp,plp", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 2, 0, 0.025, ["cmp     [lp], obj", "jb      short loc_14369"], ["cmp~<TAG>,obj", "jb~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rax, [h+8]", "test    lp, lp", "jnz     short loc_14372"], ["mov~rax,[h+0]", "test~lp,lp", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 0, 0.15000000000000002, ["cmp     obj, lp", "jbe     short loc_14369"], ["cmp~obj,lp", "jbe~FOO"]]], "func_feature": [0, 3, 3, 0, 6, 9, 0, 15, 0.05, 0, 0], "succs": [[], [0], [0, 5], [0, 2], [1, 5], [2, 3]], "fname": "_obstack_allocated_p", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     h", "pop     rbp", "pop     obj", "retn"], ["pop~h", "pop~rbp", "pop~obj", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16369047619047616, ["test    obj, obj", "jz      short loc_143DD"], ["test~obj,obj", "jz~FOO"]], [0, 0, 1, 0, 0, 5, 0, 0, 4, 0, 0.014880952380952378, ["mov     [h+18h], obj", "mov     [h+10h], obj", "mov     rax, [lp]", "mov     [h+20h], rax", "mov     [h+8], lp"], ["mov~[h+0],obj", "mov~[h+0],obj", "mov~rax,<TAG>", "mov~[h+0],rax", "mov~[h+0],lp"]], [0, 0, 8, 0, 0, 2, 0, 0, 2, 0, 0.10714285714285714, ["cmp     [lp], obj", "jb      short loc_143A3"], ["cmp~<TAG>,obj", "jb~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 1, 0, 0.125, ["cmp     obj, lp", "jbe     short loc_143A3"], ["cmp~obj,lp", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, 0, 0.10119047619047618, ["test    lp, lp", "jz      short loc_14399"], ["test~lp,lp", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 8, 0, 0, 8, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, h", "mov     r12, obj", "mov     obj, [h+8]", "test    lp, lp", "jnz     short loc_143BB"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,h", "mov~r12,obj", "mov~obj,[h+0]", "test~lp,lp", "jnz~FOO"]], [1, 0, 8, 0, 1, 7, 2, 2, 2, 0, 0.09523809523809523, ["mov     rbp, [lp+8]", "mov     rdi, h; h", "call    call_freefun", "or      byte ptr [h+50h], 2", "mov     rsi, plp; old_chunk", "test    plp, plp", "jz      short loc_14399"], ["mov~rbp,[lp+0]", "mov~rdi,h", "call~FOO", "or~[yte ptr [h+0],0", "mov~rsi,plp", "test~plp,plp", "jz~FOO"]]], "func_feature": [2, 5, 6, 0, 9, 13, 0, 33, 0.06746, 0, 0], "succs": [[], [0, 6], [0], [8, 5], [8, 3], [1, 2], [], [1, 4], [1, 4]], "fname": "_obstack_free", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [lp]", "sub     rcx, lp", "add     nbytes, rcx", "mov     lp, [lp+8]", "test    lp, lp", "jnz     short loc_143F0"], ["mov~rcx,<TAG>", "sub~rcx,lp", "add~nbytes,rcx", "mov~lp,[lp+0]", "test~lp,lp", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.16666666666666666, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["mov     lp, [h+8]", "test    lp, lp", "jz      short loc_14404"], ["mov~lp,[h+0]", "test~lp,lp", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 2, 2, 0, 5, 5, 0, 13, 0.06667, 0, 2], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "_obstack_memory_used", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 3, 0, 2, 0, 0, 0.08333333333333333, ["lea     tz, aTz; \"TZ\"", "call    _unsetenv", "jmp     short loc_14427"], ["lea~tz,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 3, 1, 0, 3, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    tz, tz", "jz      short loc_1442C"], ["sub~rsp,0", "test~tz,tz", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, 1; replace", "mov     rsi, tz; value", "lea     tz, aTz; \"TZ\"", "call    _setenv"], ["mov~edx,0", "mov~rsi,tz", "lea~tz,<TAG>", "call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 1, 4, 0, 4, 4, 2, 12, 0.04167, 1, 2], "succs": [[3], [0, 2], [3], []], "fname": "setenv_TZ", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 0, 5, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "test    name, name", "jz      short loc_144A7"], ["push~r12", "push~rbp", "push~rbx", "test~name,name", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, -1, 0.0, ["mov     rax, tz", "pop     tz", "pop     rbp", "pop     r12", "retn"], ["mov~rax,tz", "pop~tz", "pop~rbp", "pop~r12", "retn"]], [6, 0, 2, 1, 1, 15, 2, 2, 0, -1, 0.07500000000000001, ["mov     r12, name", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rbp, rcx", "cmp     name_size, 76h", "mov     edi, 76h ; 'v'", "cmovnb  rdi, name_size", "add     rdi, 11h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    malloc", "mov     rbx, rax", "test    tz, tz", "jz      short loc_1449F"], ["mov~r12,name", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rbp,rcx", "cmp~name_size,0", "mov~edi,0", "cmovnb~rdi,name_size", "add~rdi,0", "and~rdi,0", "call~FOO", "mov~rbx,rax", "test~tz,tz", "jz~FOO"]], [0, 1, 2, 0, 1, 5, 1, 2, 0, 1, 0.07500000000000001, ["mov     edi, 80h; size", "call    malloc", "mov     rbx, rax", "test    tz, tz", "jz      short loc_1449F"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "test~tz,tz", "jz~FOO"]], [3, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     qword ptr [tz], 0", "mov     byte ptr [tz+8], 0", "mov     byte ptr [tz+9], 0", "jmp     short loc_1449F"], ["mov~<TAG>,0", "mov~[yte ptr [tz+0],0", "mov~[yte ptr [tz+0],0", "jmp~FOO"]], [4, 0, 1, 0, 1, 8, 0, 1, 0, -1, 0.0, ["mov     qword ptr [tz], 0", "mov     byte ptr [tz+8], 1", "mov     byte ptr [tz+9], 0", "lea     rdi, [tz+9]; dest", "mov     rdx, name_size; n", "mov     rsi, r12; src", "call    _memcpy", "mov     byte ptr [tz+name_size+9], 0"], ["mov~<TAG>,0", "mov~[yte ptr [tz+0],0", "mov~[yte ptr [tz+0],0", "lea~rdi,[tz+0]", "mov~rdx,name_size", "mov~rsi,r12", "call~FOO", "mov~[yte ptr [tz+0],0"]]], "func_feature": [3, 4, 7, 0, 6, 8, 3, 42, 0.025, 0, 1], "succs": [[2, 3], [], [1, 5], [1, 4], [1], [1]], "fname": "tzalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.009210526315789473, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0", "jmp     short loc_145F5"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 7, 1, 0, 10, 0, 1, 7, 2, 0.16578947368421051, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, zone", "repne scasb", "mov     rax, zone_copy", "sub     rax, rdx", "mov     r14, rcx", "not     r14", "cmp     zone_used, rcx", "ja      short loc_145B0"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,zone", "scasb~<TAG>,", "mov~rax,zone_copy", "sub~rax,rdx", "mov~r14,rcx", "not~r14", "cmp~zone_used,rcx", "ja~FOO"]], [1, 0, 1, 0, 0, 2, 0, 0, 4, 1, 0.024999999999999998, ["mov     [tm+30h], zone_copy", "mov     eax, 1"], ["mov~[tm+0],zone_copy", "mov~eax,0"]], [0, 0, 15, 0, 1, 5, 1, 2, 4, 2, 0.2736842105263158, ["mov     rsi, zone; s2", "mov     rdi, zone_copy; s1", "call    _strcmp", "test    eax, eax", "jz      loc_145EC"], ["mov~rsi,zone", "mov~rdi,zone_copy", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 1, 6, 0, 2, 9, 2, 0.006578947368421052, ["mov     rdx, zone_size; n", "mov     rsi, rbp; src", "mov     rdi, zone_copy; dest", "call    _memcpy", "mov     byte ptr [zone_copy+zone_size], 0", "jmp     short loc_145EC"], ["mov~rdx,zone_size", "mov~rsi,rbp", "mov~rdi,zone_copy", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 2, 1, 0, 3, 0, 1, 10, 2, 0.002631578947368421, ["mov     byte ptr [tz+8], 0", "add     tz, 9", "jmp     short loc_145EC"], ["mov~[yte ptr [tz+0],0", "add~tz,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, 2, 0.013157894736842105, ["lea     rbx, a8+6; \"\""], ["lea~rbx,<TAG>"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 20, 1, 0, 11, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [tm+30h]", "mov     eax, 1", "test    zone, zone", "jz      loc_145F5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,[tm+0]", "mov~eax,0", "test~zone,zone", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 0, 0, 2, 1, 0.002631578947368421, ["lea     rdx, [tm+38h]", "cmp     zone, rdx", "jb      loc_145F5"], ["lea~rdx,[tm+0]", "cmp~zone,rdx", "jb~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 9, 1, 0.039473684210526314, ["mov     rdi, rbp; name", "call    tzalloc", "mov     zone_copy, rax", "mov     [tz], rax", "mov     eax, 0", "test    tz, tz", "jz      short loc_145F5"], ["mov~rdi,rbp", "call~FOO", "mov~zone_copy,rax", "mov~<TAG>,rax", "mov~eax,0", "test~tz,tz", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 7, 3, 0.014473684210526316, ["cmp     byte ptr [tz+8], 0", "jz      short loc_14570"], ["cmp~[yte ptr [tz+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 1, 6, 3, 0.18552631578947368, ["lea     rdx, [tz+9]", "cmp     rdx, zone_copy", "jnz     short loc_14570"], ["lea~rdx,[tz+0]", "cmp~rdx,zone_copy", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 3, 0.12631578947368421, ["cmp     byte ptr [zone+0], 0", "jz      loc_145E5"], ["cmp~[yte ptr [zone+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 1, 1, 2, 0.04736842105263158, ["mov     r12, tz", "mov     r13, tm", "cmp     tm, zone", "ja      short loc_14502"], ["mov~r12,tz", "mov~r13,tm", "cmp~tm,zone", "ja~FOO"]], [1, 0, 15, 1, 0, 8, 0, 1, 6, 3, 0.07368421052631578, ["mov     rcx, r15", "mov     rdi, zone_copy", "mov     eax, r14d", "repne scasb", "not     rcx", "add     rbx, rcx", "cmp     byte ptr [zone_copy], 0", "jnz     short loc_1451E"], ["mov~rcx,r15", "mov~rdi,zone_copy", "mov~eax,r14d", "scasb~<TAG>,", "not~rcx", "add~rbx,rcx", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.24736842105263157, ["cmp     byte ptr [zone_copy], 0", "jnz     short loc_14548"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 7, 3, 0.02631578947368421, ["mov     rax, [tz]", "test    rax, rax", "jz      short loc_1451E"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 1, 8, 3, 0.0, ["lea     zone_copy, [tz+9]", "mov     r12, tz", "jmp     short loc_1451E"], ["lea~zone_copy,[tz+0]", "mov~r12,tz", "jmp~FOO"]], [2, 0, 15, 0, 0, 3, 0, 0, 3, 3, 0.1368421052631579, ["lea     rbx, [r12+9]", "mov     r15, 0FFFFFFFFFFFFFFFFh", "mov     r14d, 0"], ["lea~rbx,[r12+0]", "mov~r15,0", "mov~r14d,0"]], [1, 0, 5, 1, 0, 3, 0, 1, 8, 2, 0.10657894736842105, ["add     zone_used, zone_size", "cmp     rax, 76h", "ja      short loc_145C2"], ["add~zone_used,zone_size", "cmp~rax,0", "ja~FOO"]]], "func_feature": [4, 4, 20, 0, 21, 33, 2, 93, 0.07155, 1, 6], "succs": [[7], [0, 20], [7], [16, 2], [2], [2], [2], [], [14, 7], [13, 7], [5, 7], [1, 15], [1, 11], [19, 6], [9, 13], [17, 3], [12, 15], [18, 3], [3], [3], [10, 4]], "fname": "save_abbr", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     next", "retn"], ["pop~next", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 3, -1, 0.15000000000000002, ["mov     rbx, [tz]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_14610"], ["mov~rbx,<TAG>", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     tz, 1", "jz      short locret_14622"], ["cmp~tz,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.15000000000000002, ["test    tz, tz", "jz      short locret_14622"], ["test~tz,tz", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 2, -1, 0.2, ["push    rbx"], ["push~rbx"]]], "func_feature": [1, 2, 4, 0, 6, 7, 2, 13, 0.08333, 0, 0], "succs": [[], [0, 1], [], [2, 4], [2, 5], [1]], "fname": "tzfree", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 2, 0, 2, 0, 0, 0.011363636363636364, ["call    _tzset", "jmp     short loc_1466D"], ["call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 1, 2, 5, 0, 0.15151515151515152, ["call    setenv_TZ", "test    eax, eax", "jz      short loc_146C9"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 8, 0, 0, 1, 1, 0, 2, 0, 0.12121212121212122, ["and     eax, 1"], ["and~eax,0"]], [2, 0, 10, 0, 0, 3, 0, 1, 1, 0, 0.015151515151515152, ["mov     eax, 0", "cmp     byte ptr [tz+8], 0", "jz      short loc_14661"], ["mov~eax,0", "cmp~[yte ptr [tz+0],0", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 1, 2, 0, 0.0, ["lea     rdi, [tz+9]; s1", "mov     rsi, rbp; s2", "call    _strcmp", "test    eax, eax", "setz    al", "movzx   eax, al"], ["lea~rdi,[tz+0]", "mov~rsi,rbp", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al"]], [1, 0, 1, 0, 2, 8, 0, 3, 6, 0, 0.011363636363636364, ["call    ___errno_location", "mov     rbp, rax", "mov     r12d, [rax]", "mov     rdi, old_tz; tz", "call    tzfree", "mov     [rbp+0], r12d", "mov     ebx, 0", "jmp     short loc_1466D"], ["call~FOO", "mov~rbp,rax", "mov~r12d,<TAG>", "mov~rdi,old_tz", "call~FOO", "mov~[rbp+0],r12d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 4, 0, 0.21212121212121213, ["mov     edi, 0", "cmp     byte ptr [tz+8], 0", "jz      short loc_146A2"], ["mov~edi,0", "cmp~[yte ptr [tz+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 0, 0.0, ["lea     rdi, [tz+9]; tz"], ["lea~rdi,[tz+0]"]], [0, 0, 12, 0, 1, 9, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, tz", "lea     tz, aTz; \"TZ\"", "call    _getenv", "mov     rbp, rax", "test    rax, rax", "jz      short loc_14675"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,tz", "lea~tz,<TAG>", "call~FOO", "mov~rbp,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, 0, 0.26515151515151514, ["mov     ebx, 1", "test    al, al", "jz      short loc_14680"], ["mov~ebx,0", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 0, 0.06060606060606061, ["cmp     byte ptr [tz+8], 0", "setz    al", "jmp     short loc_14664"], ["cmp~[yte ptr [tz+0],0", "setz~al", "jmp~FOO"]], [0, 0, 6, 0, 1, 5, 1, 2, 3, 0, 0.2272727272727273, ["mov     rdi, rbp; name", "call    tzalloc", "mov     rbx, rax", "test    old_tz, old_tz", "jz      short loc_1466D"], ["mov~rdi,rbp", "call~FOO", "mov~rbx,rax", "test~old_tz,old_tz", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [7, 6, 16, 0, 13, 18, 2, 52, 0.08275, 1, 0], "succs": [[12], [0, 5], [9], [2, 4], [2], [12], [1, 7], [1], [10, 3], [11, 12], [9], [12, 6], []], "fname": "set_tz", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[3, 0, 7, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebp, 1", "cmp     tz, 1", "jz      short loc_14720"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,0", "cmp~tz,0", "jz~FOO"]], [2, 0, 6, 0, 1, 7, 0, 2, 0, 2, 0.11904761904761904, ["mov     rbx, tz", "call    ___errno_location", "mov     r12, rax", "mov     r13d, [rax]", "mov     edi, 0", "cmp     byte ptr [tz+8], 0", "jz      short loc_14702"], ["mov~rbx,tz", "call~FOO", "mov~r12,rax", "mov~r13d,<TAG>", "mov~edi,0", "cmp~[yte ptr [tz+0],0", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 0, 1, 0.26190476190476186, ["call    setenv_TZ", "test    eax, eax", "jz      short loc_1472D"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 0, 2, 0.0, ["lea     rdi, [tz+9]; tz"], ["lea~rdi,[tz+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, -1, 0.0, ["mov     eax, ebp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~eax,ebp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 1, 3, 0, 1, 0, -1, 0.11904761904761904, ["mov     rdi, tz; tz", "call    tzfree", "mov     [r12], r13d"], ["mov~rdi,tz", "call~FOO", "mov~<TAG>,r13d"]], [1, 0, 2, 0, 0, 2, 0, 0, 0, -1, 0.08333333333333333, ["mov     r13d, [r12]", "mov     ebp, 0"], ["mov~r13d,<TAG>", "mov~ebp,0"]], [1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.08333333333333333, ["call    _tzset", "mov     ebp, 1", "jmp     short loc_14714"], ["call~FOO", "mov~ebp,0", "jmp~FOO"]]], "func_feature": [4, 1, 8, 0, 8, 10, 3, 34, 0.08333, 0, 2], "succs": [[1, 4], [2, 3], [6, 7], [2], [], [4], [5], [5]], "fname": "revert_tz", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 3, 0, 2, 0, 0, 0.011111111111111112, ["mov     rdi, old_tz; tz", "call    revert_tz", "jmp     short loc_14791"], ["mov~rdi,old_tz", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 2, 0, 0.11111111111111112, ["mov     rsi, tm; tp", "mov     rdi, t; timer", "call    _localtime_r", "mov     t, rax", "test    rax, rax", "jz      short loc_147BD"], ["mov~rsi,tm", "mov~rdi,t", "call~FOO", "mov~t,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 2, 8, 1, 3, 3, 0, 0.1, ["mov     rsi, tm; tm", "mov     rdi, tz; tz", "call    save_abbr", "mov     ebx, eax", "mov     rdi, old_tz; tz", "call    revert_tz", "test    bl, bl", "jz      short loc_147AF"], ["mov~rsi,tm", "mov~rdi,tz", "call~FOO", "mov~ebx,eax", "mov~rdi,old_tz", "call~FOO", "test~bl,bl", "jz~FOO"]], [1, 0, 10, 1, 0, 9, 1, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, t", "mov     r12, tm", "test    tz, tz", "jz      short loc_1479F"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,t", "mov~r12,tm", "test~tz,tz", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, 0, 0.044444444444444446, ["test    al, al", "jz      short loc_147AF"], ["test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 1, 0, 0.011111111111111112, ["mov     t, tm; tp", "mov     tz, t; timer", "call    _gmtime_r", "mov     t, rax", "jmp     short loc_14791"], ["mov~t,tm", "mov~tz,t", "call~FOO", "mov~t,rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0.005555555555555556, ["mov     rbp, tm"], ["mov~rbp,tm"]], [0, 0, 8, 0, 1, 5, 1, 2, 1, 0, 0.07777777777777778, ["mov     rbx, tz", "call    set_tz", "mov     r13, rax", "test    old_tz, old_tz", "jz      short loc_147B6"], ["mov~rbx,tz", "call~FOO", "mov~r13,rax", "test~old_tz,old_tz", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.016666666666666666, ["mov     ebp, 0", "jmp     short loc_14791"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.011111111111111112, ["mov     ebp, 0", "jmp     short loc_14791"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     tm", "pop     r13", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~tm", "pop~r13", "retn"]]], "func_feature": [6, 5, 15, 0, 11, 15, 2, 50, 0.03535, 0, 2], "succs": [[10], [0, 2], [8, 4], [5, 7], [8, 6], [10], [10], [1, 9], [10], [10], []], "fname": "localtime_rz", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.011029411764705881, ["mov     tz, rsi; tp", "call    _timegm", "jmp     short loc_1483B"], ["mov~tz,rsi", "call~FOO", "jmp~FOO"]], [0, 1, 17, 1, 0, 10, 2, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 50h", "mov     rbx, tm", "mov     rax, fs:28h", "mov     [rsp+68h+var_20], rax", "xor     eax, eax", "test    tz, tz", "jz      short loc_14858"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,tm", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~tz,tz", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.04963235294117647, ["mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1483B"], ["mov~rax,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 4, 3, 0.16176470588235295, ["mov     rdi, old_tz; tz", "call    revert_tz", "test    al, al", "jz      loc_148DC"], ["mov~rdi,old_tz", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 11, 0, 0, 26, 13, 1, 4, 5, 0.051470588235294115, ["mov     eax, [tm]", "xor     eax, [rsp+68h+tm_1.tm_sec]", "mov     edx, [tm+4]", "xor     edx, [rsp+68h+tm_1.tm_min]", "or      eax, edx", "mov     edx, [tm+8]", "xor     edx, [rsp+68h+tm_1.tm_hour]", "or      eax, edx", "mov     edx, [tm+0Ch]", "xor     edx, [rsp+68h+tm_1.tm_mday]", "or      eax, edx", "mov     edx, [tm+10h]", "xor     edx, [rsp+68h+tm_1.tm_mon]", "or      eax, edx", "mov     edx, [tm+14h]", "xor     edx, [rsp+68h+tm_1.tm_year]", "or      eax, edx", "mov     edx, [rsp+68h+tm_1.tm_isdst]", "mov     esi, [tm+20h]", "test    esi, esi", "setz    r8b", "test    edx, edx", "setz    dil", "mov     ecx, 0", "cmp     r8b, dil", "jz      short loc_148CF"], ["mov~eax,<TAG>", "xor~eax,[rsp+0]", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[rsp+0]", "mov~esi,[tm+0]", "test~esi,esi", "setz~r8b", "test~edx,edx", "setz~dil", "mov~ecx,0", "cmp~r8b,dil", "jz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 3, 4, 0.0661764705882353, ["lea     rsi, [rsp+68h+tm_1]; tp", "lea     rdi, [rsp+68h+t]; timer", "call    _localtime_r", "test    rax, rax", "jz      short loc_14826"], ["lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.11029411764705882, ["mov     rcx, [rsp+68h+var_20]", "xor     rcx, fs:28h", "jnz     loc_148F4"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.011029411764705881, ["mov     old_tz, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1483B"], ["mov~old_tz,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.04963235294117647, ["mov     rax, [rsp+68h+t]"], ["mov~rax,[rsp+0]"]], [0, 0, 8, 0, 0, 1, 0, 1, 6, 5, 0.029411764705882353, ["jmp     loc_1480E"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 5, 4, 0.08823529411764705, ["or      eax, ecx", "jnz     loc_14826"], ["or~eax,ecx", "jnz~FOO"]], [1, 0, 13, 0, 1, 5, 0, 2, 2, 5, 0.07352941176470588, ["mov     rdi, tm; tp", "call    _mktime", "mov     [rsp+68h+t], rax", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_14862"], ["mov~rdi,tm", "call~FOO", "mov~[rsp+0],rax", "cmp~rax,0", "jz~FOO"]], [0, 0, 15, 0, 1, 5, 1, 2, 1, 3, 0.044117647058823525, ["mov     rbp, tz", "call    set_tz", "mov     r12, rax", "test    old_tz, old_tz", "jz      loc_148E8"], ["mov~rbp,tz", "call~FOO", "mov~r12,rax", "test~old_tz,old_tz", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 1, 0, 5, 5, 0.0, ["or      edx, esi", "not     edx", "mov     ecx, edx", "shr     ecx, 1Fh"], ["or~edx,esi", "not~edx", "mov~ecx,edx", "shr~ecx,0"]], [0, 0, 7, 0, 1, 5, 1, 2, 3, 4, 0.07352941176470588, ["mov     rsi, tm; tm", "mov     rdi, tz; tz", "call    save_abbr", "test    al, al", "jnz     short loc_14826"], ["mov~rsi,tm", "mov~rdi,tz", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 4, 4, 0.0, ["mov     [rsp+68h+t], 0FFFFFFFFFFFFFFFFh"], ["mov~[rsp+0],0"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     tm", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~tm", "pop~rbp", "pop~r12", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 22, 20, 1, 18, 25, 1, 85, 0.04555, 1, 2], "succs": [[6], [0, 12], [6], [8, 2], [10, 13], [3, 4], [16, 17], [6], [6], [14], [9, 3], [5, 14], [11, 7], [10], [3, 15], [3], [], []], "fname": "mktime_z", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 1, 0, 3, 0, 0, 0, 0, 0.16666666666666666, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [4, 0, 4, 2, 0, 14, 1, 1, 1, 2, 0.16666666666666666, ["movzx   edx, byte ptr [p1]", "movzx   eax, dl", "sub     edx, 41h ; 'A'", "lea     ecx, [rax+20h]", "cmp     dl, 1Ah", "cmovb   eax, ecx", "movzx   ecx, byte ptr [p2]", "movzx   edx, cl", "sub     ecx, 41h ; 'A'", "lea     r9d, [rdx+20h]", "cmp     cl, 1Ah", "cmovb   edx, r9d", "test    al, al", "jz      short loc_14939"], ["movzx~edx,<TAG>", "movzx~eax,dl", "sub~edx,0", "lea~ecx,[rax+0]", "cmp~dl,0", "cmovb~eax,ecx", "movzx~ecx,<TAG>", "movzx~edx,cl", "sub~ecx,0", "lea~r9d,[rdx+0]", "cmp~cl,0", "cmovb~edx,r9d", "test~al,al", "jz~FOO"]], [2, 0, 4, 2, 0, 4, 0, 1, 2, 2, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jz      short loc_14903"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     eax, 0", "cmp     p1, p2", "jz      short locret_14941"], ["mov~eax,0", "cmp~p1,p2", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 3, 0, 5, 7, 1, 25, 0.06667, 0, 5], "succs": [[4], [0, 2], [0, 1], [1, 4], []], "fname": "c_strcasecmp", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 1, 7, 0, 2, 12, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, stream", "call    ___fpending", "mov     r12, rax", "mov     ebx, [stream+0]", "and     ebx, 20h", "mov     rdi, stream; fp", "call    rpl_fclose", "test    ebx, ebx", "jnz     short loc_14984"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,stream", "call~FOO", "mov~r12,rax", "mov~ebx,[stream+0]", "and~ebx,<STR>", "mov~rdi,stream", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, -1, 0.07142857142857142, ["test    eax, eax", "jz      short loc_14998"], ["test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_1499D"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 0, -1, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "setnz   al", "movzx   eax, al", "neg     eax", "jmp     short loc_14998"], ["call~FOO", "cmp~<TAG>,0", "setnz~al", "movzx~eax,al", "neg~eax", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 0, -1, 0.047619047619047616, ["mov     eax, 0FFFFFFFFh", "test    r12, r12", "jnz     short loc_14998"], ["mov~eax,0", "test~r12,r12", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_14998"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 3, 0, 1, 0, -1, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 10, 0, 8, 11, 2, 34, 0.02381, 0, 0], "succs": [[1, 2], [4, 7], [5, 6], [7], [3, 7], [7], [7], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[1, 0, 2, 1, 1, 4, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    mdir_name", "test    result, result", "jz      short loc_149B7"], ["sub~rsp,0", "call~FOO", "test~result,result", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 2, 7, 0.0, 0, 2], "succs": [[1, 2], [], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [s]", "test    cl, cl", "jz      short loc_149EA"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 0, -1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 2, 2, 0, 7, 1, 1, 0, -1, 0.08333333333333333, ["rol     h, 9", "movsx   rcx, cl", "add     rax, rcx", "add     s, 1", "movzx   ecx, byte ptr [s]", "test    cl, cl", "jnz     short loc_149C8"], ["rol~h,0", "movsx~rcx,cl", "add~rax,rcx", "add~s,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 0", "jmp     short loc_149DE"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 0, -1, 0.0, ["mov     edx, 0", "div     tablesize", "mov     rax, rdx", "retn"], ["mov~edx,0", "div~,tablesize", "mov~rax,rdx", "retn"]]], "func_feature": [0, 2, 3, 0, 5, 6, 1, 17, 0.05, 0, 3], "succs": [[1, 3], [2], [2, 4], [4], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 3, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_14A17"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["lea     codeset, aAscii; \"ASCII\"", "jmp     short loc_14A12"], ["lea~codeset,<TAG>", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 1, 0, 0, 3, 0, 0, 0, -1, 0.08333333333333333, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx"]]], "func_feature": [1, 1, 3, 0, 4, 4, 1, 12, 0.04167, 1, 2], "succs": [[1, 3], [2], [], [2]], "fname": "locale_charset", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     fp", "pop     rbp", "pop     r12", "retn"], ["pop~fp", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 0, 0.0863095238095238, ["call    ___errno_location", "mov     rbp, rax", "mov     r12d, [rax]", "mov     rdi, fp; stream", "call    _fclose", "test    r12d, r12d", "jz      short loc_14A9C"], ["call~FOO", "mov~rbp,rax", "mov~r12d,<TAG>", "mov~rdi,fp", "call~FOO", "test~r12d,r12d", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_14A9C"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 0, 0.017857142857142856, ["mov     rdi, fp; stream", "call    _fclose", "jmp     short loc_14A9C"], ["mov~rdi,fp", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 3, 0, 0.038690476190476185, ["mov     rdi, fp; stream", "call    _fclose"], ["mov~rdi,fp", "call~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, 0, 0.1369047619047619, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_14A94"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 0, 0.08928571428571427, ["mov     rdi, fp; fp", "call    ___freading", "test    eax, eax", "jz      short loc_14A5B"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 5, 0, 2, 8, 0, 3, 2, 0, 0.023809523809523808, ["mov     rdi, fp; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_14A94"], ["mov~rdi,fp", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "js      short loc_14A8A"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "js~FOO"]]], "func_feature": [9, 4, 16, 0, 9, 13, 1, 42, 0.04365, 0, 0], "succs": [[], [0, 2], [0], [0], [0], [1, 4], [5, 7], [4, 5], [3, 6]], "fname": "rpl_fclose", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 2, 0, 1, 5, 0, 2, 0, 0, 0.0, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, stream; fp", "call    rpl_fseeko", "jmp     short loc_14AC5"], ["mov~edx,0", "mov~esi,0", "mov~rdi,stream", "call~FOO", "jmp~FOO"]], [0, 1, 3, 0, 0, 2, 1, 1, 2, 0, 0.13333333333333333, ["test    dword ptr [stream], 100h", "jnz     short loc_14ACF"], ["test~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 2, 1, 0, 0.1, ["call    ___freading", "test    eax, eax", "jnz     short loc_14ABD"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, stream", "test    stream, stream", "jz      short loc_14AB3"], ["push~rbx", "mov~rbx,stream", "test~stream,stream", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 3, 0, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush", "jmp     short loc_14ABB"], ["mov~rdi,stream", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush"], ["mov~rdi,stream", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     stream", "retn"], ["pop~stream", "retn"]]], "func_feature": [4, 3, 9, 0, 7, 9, 1, 21, 0.05238, 0, 0], "succs": [[4], [0, 4], [1, 5], [2, 5], [6], [6], []], "fname": "rpl_fflush", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 1, 0, 0, 0.07142857142857142, ["mov     edx, r12d; whence", "mov     offset, rbp; off", "mov     fp, rbx; stream", "call    _fseeko"], ["mov~edx,r12d", "mov~offset,rbp", "mov~fp,rbx", "call~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [rdi+20h]", "cmp     [rdi+28h], rax", "jnz     short loc_14AFA"], ["mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [rdi+48h], 0", "jnz     short loc_14AFA"], ["cmp~[word ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "mov     rbp, offset", "mov     r12d, edx", "mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_14B0D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "mov~rbp,offset", "mov~r12d,edx", "mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 1, 1, 4, -1, 0.011904761904761904, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "mov     eax, 0", "jmp     short loc_14B08"], ["and~<TAG>,0", "mov~[fp+0],pos", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 2, 7, 0, 3, 3, 1, 0.14285714285714285, ["call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_14B47"], ["call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_14B08"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]]], "func_feature": [3, 1, 9, 0, 8, 11, 1, 35, 0.05952, 0, 0], "succs": [[7], [0, 2], [0, 5], [0, 1], [7], [4, 6], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_14BA6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_14B90"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localtime_r:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswcntrl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcswidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbstowcs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbstowcs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn snprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "snprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gmtime_r:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gmtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fnmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getcwd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getcwd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strspn:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _setjmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn signal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tzset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tzset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tcgetpgrp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcwidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcoll:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mktime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpncpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn timegm:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "timegm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strftime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unsetenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unsetenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcstombs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcstombs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gethostname:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gethostname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
