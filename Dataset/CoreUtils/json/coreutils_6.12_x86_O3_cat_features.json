{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_1532"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20CDE0", "jmp     cs:qword_20CDE8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 58, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1540", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__uflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 37, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 41, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 36, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fscanf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strnlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswalnum_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ungetc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswspace_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strdup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0A2h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 102, 0, 0, 2, 0, 1, 0, 0, 0.002696078431372549, ["mov     ebp, cs:input_desc", "jmp     loc_1EF2"], ["mov~ebp,<TAG>", "jmp~FOO"]], [1, 0, 102, 0, 1, 7, 0, 2, 17, 13, 0.013725490196078431, ["mov     r15, [rsp+188h+dest]", "mov     rdx, r14; count", "mov     edi, 1; fd", "mov     rsi, r15; buf", "call    full_write", "cmp     r14, rax", "jnz     loc_22B4"], ["mov~r15,[rsp+0]", "mov~rdx,r14", "mov~edi,0", "mov~rsi,r15", "call~FOO", "cmp~r14,rax", "jnz~FOO"]], [2, 0, 102, 2, 0, 4, 0, 1, 26, 11, 0.002696078431372549, ["add     r14d, 0FFFFFF80h", "add     r15, 3", "mov     [r15-1], r14b", "jmp     loc_1F7D"], ["add~r14d,0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 25, 12, 0.013725490196078431, ["cmp     r14b, 0FFh", "jz      loc_2190"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 2, 1, 10, -1, 0.007026143790849673, ["xor     edi, edi; fd", "call    _close", "test    eax, eax", "jns     loc_1E00"], ["xor~edi,edi", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.02091503267973856, ["cmp     [rsp+188h+have_read_stdin], 0", "jnz     loc_24A9"], ["cmp~[rsp+0],0", "jnz~FOO"]], [7, 0, 136, 1, 5, 33, 2, 5, 0, 17, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "xor     r12d, r12d", "push    rbp", "push    rbx", "mov     rbx, argv_0", "sub     rsp, 158h", "mov     [rsp+188h+argc], edi", "mov     [rsp+188h+argv], argv_0", "mov     rax, fs:28h", "mov     [rsp+188h+var_40], rax", "xor     eax, eax", "call    _getpagesize", "mov     ebp, eax", "mov     rax, [argv_0]", "lea     rsi, aUsageSOptionFi+1Dh; locale", "mov     edi, 6; category", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     [rsp+188h+show_nonprinting], 0", "mov     [rsp+188h+show_ends], 0", "mov     [rsp+188h+squeeze_blank], 0", "mov     [rsp+188h+number_nonblank], 0", "mov     [rsp+188h+number], 0"], ["push~r15", "push~r14", "push~r13", "push~r12", "xor~r12d,r12d", "push~rbp", "push~rbx", "mov~rbx,argv_0", "sub~rsp,0", "mov~[rsp+0],edi", "mov~[rsp+0],argv_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~ebp,eax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 102, 0, 0, 3, 0, 1, 16, 8, 0.08254357298474946, ["movzx   r14d, byte ptr [rbp+0]", "mov     rbp, rdx", "jmp     loc_1F32"], ["movzx~r14d,[yte ptr [rbp+0]", "mov~rbp,rdx", "jmp~FOO"]], [2, 0, 102, 0, 0, 3, 0, 1, 15, 9, 0.08434095860566448, ["cmp     [rsp+188h+squeeze_blank], 0", "mov     r13d, 2", "jnz     loc_2205"], ["cmp~[rsp+0],0", "mov~r13d,0", "jnz~FOO"]], [1, 0, 0, 0, 1, 4, 1, 1, 10, -1, 0.0, ["movzx   edi, [rsp+188h+ok]", "xor     edi, 1", "movzx   edi, dil; status", "call    _exit"], ["movzx~edi,[rsp+0]", "xor~edi,0", "movzx~edi,dil", "call~FOO"]], [2, 0, 1, 0, 3, 12, 2, 4, 11, -1, 0.0, ["lea     rsi, aClosingStandar; \"closing standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     outsize, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1E00"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~outsize,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 102, 0, 2, 13, 4, 3, 12, 16, 0.003594771241830065, ["mov     rbp, cs:infile", "lea     rsi, aSInputFileIsOu; \"%s: input file is output file\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 11, 9, 0.009477124183006535, ["test    ebp, ebp", "jz      loc_1CE3"], ["test~ebp,ebp", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 23, 7, 0.08205337690631809, ["cmp     r14b, 0Ah", "jz      short loc_2060"], ["cmp~r14b,0", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 22, 8, 0.09275599128540304, ["cmp     r14b, 9", "jnz     short loc_2010"], ["cmp~r14b,0", "jnz~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 23, 8, 0.0071623093681917206, ["test    al, al", "jz      short loc_2010"], ["test~al,al", "jz~FOO"]], [2, 0, 102, 0, 1, 6, 0, 2, 15, 2, 0.028921568627450978, ["call    ___errno_location", "mov     ecx, [rax]", "cmp     ecx, 5Fh ; '_'", "setz    sil", "cmp     ecx, 26h ; '&'", "ja      short loc_223F"], ["call~FOO", "mov~ecx,<TAG>", "cmp~ecx,0", "setz~sil", "cmp~ecx,0", "ja~FOO"]], [1, 0, 102, 0, 1, 7, 2, 2, 14, 3, 0.06655773420479302, ["mov     rdx, [rsp+188h+var_128]", "xor     eax, eax", "mov     esi, 541Bh; request", "mov     edi, ebp; fd", "call    _ioctl", "test    eax, eax", "js      short loc_2212"], ["mov~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebp", "call~FOO", "test~eax,eax", "js~FOO"]], [3, 0, 102, 2, 0, 5, 0, 1, 24, 11, 0.0010620915032679738, ["add     r14d, 40h ; '@'", "mov     byte ptr [r15], 5Eh ; '^'", "add     r15, 2", "mov     [r15-1], r14b", "jmp     loc_1F7D"], ["add~r14d,0", "mov~<TAG>,0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 16, 19, 0.006862745098039216, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r15; count", "mov     edi, 1; fd", "call    full_write", "cmp     r15, rax", "jz      loc_2347"], ["mov~rsi,[rsp+0]", "mov~rdx,r15", "mov~edi,0", "call~FOO", "cmp~r15,rax", "jz~FOO"]], [0, 0, 102, 1, 2, 10, 2, 3, 15, 19, 0.12276688453159042, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "mov     rbp, rax", "xor     eax, eax", "call    _error", "sub     r15, [rsp+188h+dest]", "jnz     loc_2418"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "mov~rbp,rax", "xor~eax,eax", "call~FOO", "sub~r15,[rsp+0]", "jnz~FOO"]], [2, 0, 103, 0, 0, 14, 1, 1, 4, 13, 0.1570806100217865, ["movsxd  rax, ebp", "movsxd  rcx, cs:optind@@GLIBC_2_2_5", "mov     [rsp+188h+have_read_stdin], 0", "mov     [rsp+188h+var_118], rax", "movzx   eax, [rsp+188h+number]", "lea     rdx, asc_A83F; \"-\"", "or      al, [rsp+188h+show_ends]", "cmp     [rsp+188h+argc], ecx", "mov     [rsp+188h+ok], 1", "mov     [rsp+188h+var_138], rcx", "mov     [rsp+188h+var_101], al", "lea     rax, asc_A83F; \"-\"", "mov     cs:infile, rax", "jle     short loc_1C4D"], ["movsxd~rax,ebp", "movsxd~rcx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "lea~rdx,<TAG>", "or~al,[rsp+0]", "cmp~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],rcx", "mov~[rsp+0],al", "lea~rax,<TAG>", "mov~<TAG>,rax", "jle~FOO"]], [4, 1, 105, 0, 0, 11, 1, 1, 3, 14, 0.14869281045751634, ["mov     rbx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFFFFFFh", "mov     [rsp+188h+check_redirection], 0", "lea     rdx, [rbx-1]", "cmp     rdx, rax", "mov     eax, 200h", "cmova   rbx, rax", "mov     eax, [rsp+188h+stat_buf.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_1BE3"], ["mov~rbx,[rsp+0]", "mov~rax,0", "mov~[rsp+0],0", "lea~rdx,[rbx-1]+0]", "cmp~rdx,rax", "mov~eax,<STR>", "cmova~rbx,rax", "mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 104, 0, 0, 5, 0, 0, 4, 14, 0.0, ["mov     rax, [rsp+188h+stat_buf.st_dev]", "mov     [rsp+188h+check_redirection], 1", "mov     [rsp+188h+var_F8], rax", "mov     out_dev_0, [rsp+188h+stat_buf.st_ino]", "mov     [rsp+188h+out_ino], rax"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~out_dev_0,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 136, 0, 1, 8, 1, 2, 1, 16, 0.16122004357298475, ["mov     rsi, [rsp+188h+argv]; argv", "mov     edi, [rsp+188h+argc]; argc", "lea     rcx, long_options_6418; longopts", "lea     rdx, shortopts; \"benstuvAET\"", "xor     r8d, r8d; longind", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1B53"], ["mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 6, 17, 0.011328976034858388, ["cmp     eax, 75h ; 'u'", "jz      short loc_1A0F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 9, 17, 0.00724400871459695, ["mov     [rsp+188h+show_nonprinting], 1", "jmp     short loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 4, 17, 0.024019607843137253, ["mov     [rsp+188h+number], 1", "jmp     loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 7, 17, 0.03877995642701525, ["mov     [rsp+188h+show_ends], 1", "jmp     loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 8, 17, 0.00724400871459695, ["mov     r12d, 1", "jmp     loc_1A0F"], ["mov~r12d,0", "jmp~FOO"]], [2, 0, 136, 0, 0, 3, 0, 1, 8, 17, 0.007135076252723312, ["mov     r12d, 1", "mov     [rsp+188h+show_nonprinting], 1", "jmp     loc_1A0F"], ["mov~r12d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 5, 17, 0.012690631808278867, ["mov     [rsp+188h+squeeze_blank], 1", "jmp     loc_1A0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 1, 0, 0, 5, 14, 0.0015795206971677559, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 136, 0, 0, 2, 0, 1, 2, 19, 0.026143790849673203, ["cmp     eax, 62h ; 'b'", "jz      loc_1B46"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 102, 0, 0, 6, 1, 0, 16, 2, 0.0, ["mov     rdx, 4002480000h", "shr     rdx, cl", "mov     rcx, rdx", "not     rcx", "and     ecx, 1", "mov     [rsp+188h+var_13E], cl"], ["mov~rdx,0", "shr~rdx,cl", "mov~rcx,rdx", "not~rcx", "and~ecx,0", "mov~[rsp+0],cl"]], [2, 0, 102, 1, 0, 4, 0, 1, 24, 11, 0.0051742919389978215, ["mov     esi, 3F5Eh", "add     r15, 2", "mov     [r15-2], si", "jmp     loc_1F7D"], ["mov~esi,0", "add~r15,0", "mov~[r15-2]+0],si", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 23, 12, 0.04084967320261438, ["cmp     r14b, 7Fh", "jz      short loc_2030"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 3, 19, 0.024128540305010892, ["jle     short loc_1A70"], ["jle~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 4, 18, 0.016249092229484383, ["cmp     eax, 73h ; 's'", "jz      loc_1B2F"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 102, 0, 0, 4, 0, 0, 6, 13, 0.20108932461873638, ["mov     rax, [rsp+188h+argv]", "mov     rcx, [rsp+188h+var_138]", "mov     rdx, [rax+rcx*8]", "mov     cs:infile, rdx"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,<TAG>", "mov~<TAG>,rdx"]], [1, 0, 102, 1, 0, 4, 0, 1, 8, 14, 0.22325708061002178, ["add     [rsp+188h+var_138], 1", "mov     rax, [rsp+188h+var_138]", "cmp     [rsp+188h+argc], eax", "jg      loc_1C38"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],eax", "jg~FOO"]], [1, 0, 102, 0, 0, 4, 2, 1, 16, 1, 0.026089324618736382, ["movzx   edx, [rsp+188h+var_13E]", "xor     edx, 1", "or      dl, sil", "jz      loc_251A"], ["movzx~edx,[rsp+0]", "xor~edx,0", "or~dl,sil", "jz~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 5, 18, 0.008405954974582425, ["jle     short loc_1A90"], ["jle~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 7, 18, 0.003594771241830065, ["jl      loc_1B1F"], ["jl~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 17, 13, 0.010784313725490196, ["mov     [rsp+188h+var_13E], 0", "jmp     loc_21BF"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 102, 0, 2, 10, 2, 3, 17, 19, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2347"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 102, 2, 0, 5, 0, 1, 25, 11, 0.00528322440087146, ["sub     r14d, 40h ; '@'", "mov     byte ptr [r15+2], 5Eh ; '^'", "add     r15, 4", "mov     [r15-1], r14b", "jmp     loc_1F7D"], ["sub~r14d,0", "mov~[yte ptr [r15+0],0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [1, 1, 102, 0, 0, 4, 0, 0, 24, 12, 0.027342047930283223, ["mov     ecx, 2D4Dh", "cmp     r14b, 9Fh", "mov     [r15], cx", "jbe     short loc_2048"], ["mov~ecx,<STR>", "cmp~r14b,0", "mov~<TAG>,cx", "jbe~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 8, 18, 0.00130718954248366, ["cmp     eax, 76h ; 'v'", "jnz     loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 102, 0, 0, 8, 1, 1, 5, 12, 0.3592047930283224, ["lea     rdi, asc_A83F; \"-\"", "mov     ecx, 2", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_225A"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 22, 6, 0.1261437908496732, ["cmp     [rsp+188h+var_178], r15", "mov     r13d, [rsp+188h+c]", "ja      loc_1ECB"], ["cmp~[rsp+0],r15", "mov~r13d,[rsp+0]", "ja~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 21, 7, 0.05846949891067538, ["cmp     r14b, 0Ah", "jz      loc_2060"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 102, 0, 1, 7, 3, 1, 6, 11, 0.180718954248366, ["xor     esi, esi; oflag", "xor     eax, eax", "mov     rdi, rdx; file", "call    _open", "test    eax, eax", "mov     cs:input_desc, eax", "jns     loc_1C7D"], ["xor~esi,esi", "xor~eax,eax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "mov~<TAG>,eax", "jns~FOO"]], [2, 0, 102, 0, 3, 12, 2, 4, 14, 20, 0.0, ["mov     rsi, r15; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r14, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, r14; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1D6A"], ["mov~rsi,r15", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r14,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,r14", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 13, 20, 0.006971677559912854, ["mov     rdx, rax; count", "mov     rsi, rbp; buf", "mov     edi, 1; fd", "call    full_write", "cmp     r14, rax", "jnz     loc_2395"], ["mov~rdx,rax", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "cmp~r14,rax", "jnz~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 17, 19, 0.006862745098039216, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r15; count", "mov     edi, 1; fd", "call    full_write", "cmp     r15, rax", "jz      loc_2383"], ["mov~rsi,[rsp+0]", "mov~rdx,r15", "mov~edi,0", "call~FOO", "cmp~r15,rax", "jz~FOO"]], [0, 0, 102, 1, 0, 2, 0, 1, 16, 19, 0.022167755991285402, ["sub     r15, [rsp+188h+dest]", "jnz     loc_245D"], ["sub~r15,[rsp+0]", "jnz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 4, 20, 0.012726942628903412, ["cmp     eax, 41h ; 'A'", "jz      short loc_1AA8"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 102, 0, 0, 2, 0, 0, 6, 11, 0.17015250544662308, ["mov     cs:input_desc, 0", "mov     [rsp+188h+have_read_stdin], 1"], ["mov~<TAG>,0", "mov~[rsp+0],0"]], [1, 0, 102, 0, 3, 19, 3, 4, 17, 0, 0.006971677559912854, ["mov     rdi, cs:infile; name", "mov     byte ptr [rsp+188h+var_180], dl", "mov     [rsp+188h+var_178], rax", "call    quote", "lea     rsi, aCannotDoIoctlO; \"cannot do ioctl on %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     r9, [rsp+188h+var_178]", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [r9]; errnum", "call    _error", "mov     cs:newlines2, r13d", "movzx   r10d, byte ptr [rsp+188h+var_180]", "jmp     loc_2351"], ["mov~rdi,<TAG>", "mov~[yte ptr [rsp+0],dl", "mov~[rsp+0],rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO", "mov~<TAG>,r13d", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 0, 102, 0, 0, 3, 0, 0, 12, 8, 0.026960784313725488, ["mov     r14, [rsp+188h+dest]", "mov     [rsp+188h+var_148], rbp", "nop     word ptr [rax+rax+00h]"], ["mov~r14,[rsp+0]", "mov~[rsp+0],rbp", "nop~[ord ptr [rax+0]"]], [0, 0, 102, 0, 0, 2, 0, 0, 11, 6, 0.3202614379084967, ["cmp     [rsp+188h+var_178], r15", "jbe     loc_2070"], ["cmp~[rsp+0],r15", "jbe~FOO"]], [1, 0, 102, 7, 2, 40, 3, 2, 10, 7, 0.25354030501089325, ["mov     r14, [rsp+188h+insize]", "mov     r15, [rsp+188h+var_118]", "mov     rdi, r14", "add     rdi, r15; n", "call    xmalloc", "mov     r13, rax", "mov     [rsp+188h+inbuf], rax", "lea     inbuf_0, [outsize+r15+12h]", "lea     rdi, [rax+r14*4]; n", "call    xmalloc", "mov     rcx, rax", "mov     [rsp+188h+outbuf], rax", "xor     edx, edx", "add     rcx, rbp", "add     rbp, inbuf_0", "mov     r13d, cs:newlines2", "mov     outbuf_0, rcx", "div     r15", "mov     rax, rbp", "sub     rcx, rdx", "xor     edx, edx", "div     r15", "lea     rdi, [rcx+outsize]", "mov     [rsp+188h+dest], rcx", "mov     r15, rcx", "movzx   ecx, [rsp+188h+var_106]", "mov     [rsp+188h+var_178], rdi", "sub     rbp, rdx", "mov     [rsp+188h+var_13E], cl", "mov     rax, rbp", "mov     [rsp+188h+buf], rbp", "lea     rbp, [rbp+1]", "mov     [rsp+188h+var_180], rax", "movzx   eax, [rsp+188h+number_nonblank]", "mov     [rsp+188h+var_130], rbp", "xor     eax, 1", "mov     [rsp+188h+var_107], al", "lea     rax, [rsp+188h+var_DC]", "mov     [rsp+188h+var_128], rax", "nop"], ["mov~r14,[rsp+0]", "mov~r15,[rsp+0]", "mov~rdi,r14", "add~rdi,r15", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "lea~inbuf_0,[outsize+0]", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "xor~edx,edx", "add~rcx,rbp", "add~rbp,inbuf_0", "mov~r13d,<TAG>", "mov~outbuf_0,rcx", "div~,r15", "mov~rax,rbp", "sub~rcx,rdx", "xor~edx,edx", "div~,r15", "lea~rdi,<TAG>", "mov~[rsp+0],rcx", "mov~r15,rcx", "movzx~ecx,[rsp+0]", "mov~[rsp+0],rdi", "sub~rbp,rdx", "mov~[rsp+0],cl", "mov~rax,rbp", "mov~[rsp+0],rbp", "lea~rbp,[rbp+0]", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "mov~[rsp+0],rbp", "xor~eax,0", "mov~[rsp+0],al", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop"]], [0, 0, 102, 0, 0, 8, 3, 1, 9, 8, 0.31214596949891066, ["movzx   eax, [rsp+188h+show_nonprinting]", "mov     r15, [rsp+188h+var_118]", "lea     rbp, [r15-1]", "or      eax, r12d", "or      al, [rsp+188h+squeeze_blank]", "or      al, [rsp+188h+var_101]", "mov     [rsp+188h+var_106], al", "jnz     loc_1E14"], ["movzx~eax,[rsp+0]", "mov~r15,[rsp+0]", "lea~rbp,[r15-1]+0]", "or~eax,r12d", "or~al,[rsp+0]", "or~al,[rsp+0]", "mov~[rsp+0],al", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.004212055192447348, ["cmp     eax, 0FFFFFF7Dh", "jz      short loc_1AD2"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 136, 0, 0, 1, 0, 1, 5, 19, 0.012754175744371822, ["jg      short loc_1ABD"], ["jg~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.0017066085693536674, ["cmp     eax, 0FFFFFF7Eh", "jnz     loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 8, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 6, 19, 0.0019244734931009445, ["cmp     eax, 65h ; 'e'", "jz      short loc_1AAE"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 102, 0, 1, 7, 1, 2, 7, 10, 0.34389978213507627, ["mov     ebp, cs:input_desc", "mov     rdx, [rsp+188h+out_dev]; stat_buf", "mov     edi, 1; ver", "mov     esi, ebp; fildes", "call    ___fxstat", "test    eax, eax", "js      loc_22F0"], ["mov~ebp,<TAG>", "mov~rdx,[rsp+0]", "mov~edi,0", "mov~esi,ebp", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 7, 18, 0.004157588961510529, ["cmp     eax, 6Eh ; 'n'", "jnz     loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 102, 0, 2, 9, 2, 3, 7, 15, 0.014651416122004357, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     loc_1DDD"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 1, 0, 1, 11, 16, 0.005010893246187364, ["jmp     short loc_2274"], ["jmp~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 7, 18, 0.0015432098765432098, ["cmp     eax, 54h ; 'T'", "jnz     short loc_1B3C"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 6, 18, 0.013335148874364561, ["cmp     eax, 45h ; 'E'", "jz      short loc_1AB3"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 136, 0, 0, 2, 0, 1, 3, 18, 0.006862745098039216, ["mov     [rsp+188h+number_nonblank], 1", "jmp     loc_1A9E"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 102, 0, 3, 12, 2, 4, 18, 19, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2383"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 136, 0, 0, 1, 0, 0, 5, 19, 0.004820261437908497, ["mov     r12d, 1"], ["mov~r12d,0"]], [0, 0, 102, 0, 1, 4, 1, 1, 10, 15, 0.01181917211328976, ["mov     edi, cs:input_desc; fd", "call    _close", "test    eax, eax", "jns     loc_1DDD"], ["mov~edi,<TAG>", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 102, 0, 0, 8, 1, 1, 9, 15, 0.21786492374727667, ["mov     rsi, cs:infile", "lea     rdi, asc_A83F; \"-\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_229F"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 136, 0, 0, 1, 0, 0, 6, 18, 0.014787581699346405, ["mov     [rsp+188h+show_nonprinting], 1"], ["mov~[rsp+0],0"]], [1, 0, 102, 0, 0, 2, 0, 1, 13, 18, 0.00522875816993464, ["mov     [rsp+188h+var_106], 1", "jmp     loc_1DA2"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 12, 19, 0.02053376906318083, ["test    rax, rax", "jz      loc_236B"], ["test~rax,rax", "jz~FOO"]], [2, 0, 102, 0, 3, 11, 2, 3, 14, 7, 0.0, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 13, 7, 0.025708061002178647, ["mov     rdx, outsize; count", "mov     rsi, r14; buf", "mov     edi, 1; fd", "call    full_write", "cmp     outsize, rax", "jz      short loc_20C1"], ["mov~rdx,outsize", "mov~rsi,r14", "mov~edi,0", "call~FOO", "cmp~outsize,rax", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 17, 7, 0.23393246187363834, ["cmp     r14b, 0Ah", "jz      short loc_1EC0"], ["cmp~r14b,0", "jz~FOO"]], [2, 1, 102, 0, 0, 9, 0, 1, 8, 9, 0.32832244008714595, ["mov     rcx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFFFFFFh", "lea     rdx, [rcx-1]", "cmp     rdx, rax", "mov     eax, 200h", "cmovbe  rax, rcx", "cmp     [rsp+188h+check_redirection], 0", "mov     [rsp+188h+insize], rax", "jz      short loc_1CE3"], ["mov~rcx,[rsp+0]", "mov~rax,0", "lea~rdx,[rcx-1]+0]", "cmp~rdx,rax", "mov~eax,<STR>", "cmovbe~rax,rcx", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 102, 2, 0, 5, 0, 0, 14, 6, 0.02287581699346405, ["add     r14, outsize", "mov     r8, r15", "sub     r8, r14", "cmp     outsize, r8", "jbe     short loc_2080"], ["add~r14,outsize", "mov~r8,r15", "sub~r8,r14", "cmp~outsize,r8", "jbe~FOO"]], [0, 0, 102, 0, 0, 2, 0, 0, 12, 5, 0.41661220043572983, ["cmp     rbp, [rsp+188h+var_180]", "jbe     loc_2100"], ["cmp~rbp,[rsp+0]", "jbe~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 9, 9, 0.021241830065359478, ["mov     insize_0, [rsp+188h+var_F8]", "cmp     [rsp+188h+stat_buf.st_dev], rax", "jz      loc_23C2"], ["mov~insize_0,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [2, 0, 102, 0, 3, 14, 2, 4, 18, 12, 0.002696078431372549, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     ebp, cs:input_desc", "mov     r15, [rsp+188h+dest]", "jmp     loc_1EF2"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~ebp,<TAG>", "mov~r15,[rsp+0]", "jmp~FOO"]], [2, 0, 102, 0, 0, 4, 0, 1, 13, 4, 0.22930283224400871, ["cmp     [rsp+188h+var_13E], 0", "mov     [rsp+188h+var_DC], 0", "mov     ebp, cs:input_desc", "jnz     loc_21A8"], ["cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~ebp,<TAG>", "jnz~FOO"]], [0, 0, 102, 0, 1, 11, 0, 2, 15, 5, 0.021296296296296296, ["mov     r15, [rsp+188h+dest]", "mov     rdx, r8; n", "mov     rsi, r14; src", "mov     rbp, [rsp+188h+var_148]", "mov     [rsp+188h+var_148], r8", "mov     rdi, r15; dest", "call    _memmove", "cmp     rbp, [rsp+188h+var_180]", "mov     r8, [rsp+188h+var_148]", "lea     r15, [r15+r8]", "ja      loc_1ED6"], ["mov~r15,[rsp+0]", "mov~rdx,r8", "mov~rsi,r14", "mov~rbp,[rsp+0]", "mov~[rsp+0],r8", "mov~rdi,r15", "call~FOO", "cmp~rbp,[rsp+0]", "mov~r8,[rsp+0]", "lea~r15,<TAG>", "ja~FOO"]], [1, 0, 102, 0, 1, 6, 0, 2, 14, 11, 0.19983660130718953, ["mov     rdx, [rsp+188h+insize]; count", "mov     rsi, [rsp+188h+buf]; buf", "mov     edi, ebp; fd", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_231B"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,ebp", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 102, 0, 0, 3, 1, 1, 15, 12, 0.045588235294117645, ["mov     edi, [rsp+188h+var_DC]", "test    edi, edi", "jz      loc_1EF2"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 102, 1, 0, 3, 0, 1, 16, 12, 0.020479302832244008, ["mov     r14, r15", "sub     r14, [rsp+188h+dest]", "jz      loc_1EF2"], ["mov~r14,r15", "sub~r14,[rsp+0]", "jz~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 10, 9, 0.015359477124183006, ["mov     rax, [rsp+188h+out_ino]", "cmp     [rsp+188h+stat_buf.st_ino], rax", "jnz     loc_1CE3"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 102, 1, 0, 4, 1, 1, 13, 11, 0.20577342047930283, ["add     r13d, 1", "lea     rdx, [rbp+1]", "test    r13d, r13d", "jle     short loc_2160"], ["add~r13d,0", "lea~rdx,[rbp+0]", "test~r13d,r13d", "jle~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 15, 10, 0.06873638344226579, ["test    rax, rax", "jz      loc_2378"], ["test~rax,rax", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 14, 10, 0.10639978213507625, ["cmp     r13d, 1", "jz      short loc_2127"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 106, 0, 3, 12, 2, 4, 3, 15, 0.0, ["lea     rsi, aStandardOutput; \"standard output\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     argv_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1B7E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~argv_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 107, 0, 1, 9, 1, 2, 2, 15, 0.13986928104575164, ["mov     [rsp+188h+c], eax", "lea     c_0, [rsp+188h+stat_buf]", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rsp+188h+out_dev], rax", "call    ___fxstat", "test    eax, eax", "js      loc_24E9"], ["mov~[rsp+0],eax", "lea~c_0,[rsp+0]", "mov~esi,0", "mov~edi,0", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 102, 0, 2, 9, 2, 3, 8, 16, 0.00724400871459695, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 0, 1, 3, 15, 2, 3, 7, -1, 0.0, ["lea     rsi, name_utf8; \"Torbj\"", "lea     rdi, name_ascii; \"Torbjorn Granlund\"", "call    proper_name_utf8", "sub     rsp, 8", "mov     rdi, cs:__bss_start; stream", "lea     r9, aRichardMStallm; \"Richard M. Stallman\"", "push    0", "lea     rcx, version; \"6.12\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cat\"", "mov     r8, rax", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "lea~r9,<TAG>", "push~0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8,rax", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 102, 1, 0, 6, 0, 0, 16, 9, 0.038235294117647055, ["mov     rsi, [rsp+188h+buf]", "mov     rbp, [rsp+188h+var_130]", "add     rax, rsi", "mov     [rsp+188h+var_180], rax", "mov     byte ptr [rax], 0Ah", "mov     rax, rsi"], ["mov~rsi,[rsp+0]", "mov~rbp,[rsp+0]", "add~rax,rsi", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~rax,rsi"]], [0, 0, 102, 0, 0, 1, 0, 0, 16, 8, 0.14730392156862746, ["movzx   r14d, byte ptr [rax]"], ["movzx~r14d,<TAG>"]], [1, 0, 102, 0, 0, 5, 0, 1, 15, 9, 0.10498366013071896, ["mov     byte ptr [r15], 0Ah", "mov     r15, rax", "mov     rax, rbp", "mov     rbp, rdx", "jmp     loc_1F2E"], ["mov~<TAG>,0", "mov~r15,rax", "mov~rax,rbp", "mov~rbp,rdx", "jmp~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 15, 11, 0.014106753812636165, ["cmp     [rsp+188h+var_107], 0", "jz      short loc_2160"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 18, 10, 0.16437908496732026, ["test    r13d, r13d", "js      short loc_1F5B"], ["test~r13d,r13d", "js~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 19, 10, 0.006862745098039216, ["cmp     [rsp+188h+number], 0", "jz      short loc_1F5B"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 16, 11, 0.006862745098039216, ["cmp     [rsp+188h+number], 0", "jz      short loc_2160"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 102, 0, 1, 7, 0, 2, 11, 19, 0.05991285403050109, ["mov     edi, cs:input_desc; fd", "mov     rdx, insize_0; count", "mov     rsi, rbp; buf", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r14, rax", "jnz     short loc_1D48"], ["mov~edi,<TAG>", "mov~rdx,insize_0", "mov~rsi,rbp", "call~FOO", "cmp~rax,0", "mov~r14,rax", "jnz~FOO"]], [0, 0, 102, 0, 2, 5, 0, 2, 20, 10, 0.0, ["call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, r15; dest", "call    _stpcpy", "mov     r15, rax"], ["call~FOO", "mov~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "mov~r15,rax"]], [0, 0, 102, 0, 2, 8, 0, 2, 17, 11, 0.0, ["mov     [rsp+188h+var_148], rdx", "call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, r15; dest", "call    _stpcpy", "mov     rdx, [rsp+188h+var_148]", "mov     r15, rax", "nop     dword ptr [rax+00000000h]"], ["mov~[rsp+0],rdx", "call~FOO", "mov~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "mov~rdx,[rsp+0]", "mov~r15,rax", "nop~[word ptr [rax+0]"]], [1, 0, 102, 0, 0, 2, 0, 1, 19, 9, 0.16013071895424835, ["cmp     [rsp+188h+show_nonprinting], 0", "jz      short loc_1FBC"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 102, 0, 1, 4, 1, 2, 17, 17, 0.15299564270152505, ["mov     rdi, [rsp+188h+outbuf]; ptr", "and     [rsp+188h+ok], r10b", "call    _free", "jmp     loc_1DB1"], ["mov~rdi,[rsp+0]", "and~[rsp+0],r10b", "call~FOO", "jmp~FOO"]], [0, 0, 102, 0, 0, 3, 0, 1, 17, 18, 0.017919389978213508, ["mov     cs:newlines2, r13d", "movzx   r10d, [rsp+188h+var_106]", "jmp     short loc_2351"], ["mov~<TAG>,r13d", "movzx~r10d,[rsp+0]", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 1, 0, 16, 18, 0.11851851851851851, ["mov     cs:newlines2, r13d", "xor     r10d, r10d"], ["mov~<TAG>,r13d", "xor~r10d,r10d"]], [1, 0, 102, 0, 0, 3, 1, 1, 20, 10, 0.09673202614379085, ["mov     eax, r12d", "xor     eax, 1", "jmp     short loc_1F86"], ["mov~eax,r12d", "xor~eax,0", "jmp~FOO"]], [1, 0, 102, 0, 0, 3, 0, 1, 14, 10, 0.10781590413943355, ["cmp     [rsp+188h+show_ends], 0", "lea     rax, [r15+1]", "jz      short loc_2179"], ["cmp~[rsp+0],0", "lea~rax,[r15+0]", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 22, 12, 0.06040305010893246, ["cmp     r14b, 7Eh ; '~'", "ja      short loc_1FD8"], ["cmp~r14b,0", "ja~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 21, 9, 0.16149237472766884, ["cmp     r14b, 1Fh", "ja      short loc_1F70"], ["cmp~r14b,0", "ja~FOO"]], [1, 0, 102, 0, 0, 4, 0, 0, 15, 10, 0.0, ["lea     rsi, [r15+2]", "mov     byte ptr [r15], 24h ; '$'", "mov     r15, rax", "mov     rax, rsi"], ["lea~rsi,[r15+0]", "mov~<TAG>,0", "mov~r15,rax", "mov~rax,rsi"]], [1, 0, 102, 1, 0, 2, 0, 0, 23, 11, 0.011220043572984749, ["mov     [r15], r14b", "add     r15, 1"], ["mov~<TAG>,r14b", "add~r15,0"]], [1, 0, 102, 1, 0, 2, 0, 0, 24, 10, 0.06067538126361655, ["add     rbp, 1", "movzx   r14d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r14d,[yte ptr [rbp-1]+0]"]], [2, 0, 102, 1, 0, 3, 0, 1, 24, 11, 0.0009531590413943355, ["mov     byte ptr [r15], 9", "add     r15, 1", "jmp     short loc_1F7D"], ["mov~<TAG>,0", "add~r15,0", "jmp~FOO"]], [2, 0, 102, 1, 0, 4, 0, 1, 26, 11, 0.002696078431372549, ["mov     edx, 3F5Eh", "add     r15, 4", "mov     [r15-2], dx", "jmp     loc_1F7D"], ["mov~edx,0", "add~r15,0", "mov~[r15-2]+0],dx", "jmp~FOO"]], [0, 0, 102, 3, 1, 14, 1, 2, 10, 20, 0.050272331154684095, ["mov     rax, [rsp+188h+insize]", "cmp     outsize, rax", "mov     r13, rax", "cmovnb  r13, outsize", "lea     rdi, [insize_0+rbp+0]; n", "call    xmalloc", "add     rbp, rax", "mov     [rsp+188h+inbuf], rax", "xor     edx, edx", "mov     inbuf_0, rbp", "div     r15", "lea     r15, msgid; \"write error\"", "sub     rbp, rdx", "jmp     short loc_1D6A"], ["mov~rax,[rsp+0]", "cmp~outsize,rax", "mov~r13,rax", "cmovnb~r13,outsize", "lea~rdi,[insize_0+0]", "call~FOO", "add~rbp,rax", "mov~[rsp+0],rax", "xor~edx,edx", "mov~inbuf_0,rbp", "div~,r15", "lea~r15,<TAG>", "sub~rbp,rdx", "jmp~FOO"]], [0, 0, 102, 0, 2, 7, 2, 2, 12, 18, 0.03104575163398693, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 102, 0, 0, 2, 1, 1, 21, 8, 0.010212418300653595, ["test    r12b, r12b", "jz      short loc_1FC2"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 20, 8, 0.07167755991285403, ["cmp     r14b, 9", "jz      short loc_1FA0"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 102, 0, 0, 2, 1, 0, 13, 17, 0.04035947712418301, ["movzx   ecx, [rsp+188h+var_106]", "and     [rsp+188h+ok], cl"], ["movzx~ecx,[rsp+0]", "and~[rsp+0],cl"]], [2, 0, 102, 1, 0, 3, 0, 0, 22, 10, 0.003458605664488017, ["mov     eax, 495Eh", "add     r15, 2", "mov     [r15-2], ax"], ["mov~eax,0", "add~r15,0", "mov~[r15-2]+0],ax"]], [0, 0, 102, 0, 1, 2, 0, 1, 14, 16, 0.1974400871459695, ["mov     rdi, [rsp+188h+inbuf]; ptr", "call    _free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 102, 1, 0, 2, 0, 0, 23, 9, 0.011111111111111112, ["add     rbp, 1", "movzx   r14d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r14d,[yte ptr [rbp-1]+0]"]], [1, 0, 102, 1, 0, 3, 0, 1, 22, 10, 0.003567538126361656, ["mov     [r15], r14b", "add     r15, 1", "jmp     short loc_1FB3"], ["mov~<TAG>,r14b", "add~r15,0", "jmp~FOO"]]], "func_feature": [69, 72, 171, 13, 137, 208, 0, 675, 0.06145, 27, 34], "succs": [[93], [0, 90], [125], [2, 127], [9, 10], [9, 4], [24], [85], [107, 7], [], [9], [79], [11, 63], [18, 50], [13, 15], [13, 126], [41, 34], [16, 94], [125], [45, 118], [19, 118], [32, 49], [21, 23], [21], [33, 101], [24, 43], [24], [24], [24], [24], [24], [24], [39], [75, 37], [41], [125], [35, 47], [57, 38], [42, 31], [49], [5, 39], [59, 44], [25, 68], [48, 30], [94], [118], [125], [3, 46], [26, 109], [58, 52], [88, 60], [136, 50], [69, 71], [112], [112, 53], [76, 117], [117, 55], [65, 77], [69], [116], [84], [88, 60], [61], [128, 62], [66, 103], [64, 74], [67, 109], [], [80, 70], [102, 86], [27, 109], [40], [71], [29, 109], [73, 28], [27], [117], [80], [72, 40], [40, 78], [28], [132], [81, 54], [87], [83, 87], [108, 61], [89, 63], [84, 92], [97, 91], [96, 63], [93], [17, 93], [97, 91], [98, 20], [93, 95], [1, 93], [12, 63], [120, 99], [104, 56], [8, 107], [22], [100, 22], [79], [], [105], [85], [105], [120, 111], [115, 110], [], [113, 115], [120, 114], [129, 82], [115], [120], [131, 119], [134], [116], [116], [122], [106, 123], [36, 124], [121, 14], [106], [125], [122], [125], [125], [112], [132], [51, 133], [130, 51], [134], [135], [79], [131], [135]], "fname": "main", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_25D0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_25D0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2620"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2620"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_2653"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2668"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 2, 0, 0, 3, 0, 0, 5, -1, 0.16666666666666666, ["mov     rax, cs:line_num_print", "cmp     rax, rdx", "jbe     short locret_26E2"], ["mov~rax,<TAG>", "cmp~rax,rdx", "jbe~FOO"]], [1, 0, 1, 1, 0, 2, 0, 0, 6, -1, 0.0, ["sub     rax, 1", "mov     cs:line_num_print, rax"], ["sub~rax,0", "mov~<TAG>,rax"]], [1, 0, 9, 0, 0, 3, 0, 1, 1, 3, 0.125, ["movzx   edx, byte ptr [endp]", "cmp     dl, 38h ; '8'", "jg      short loc_2690"], ["movzx~edx,<TAG>", "cmp~dl,0", "jg~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rcx, cs:line_num_start", "lea     rax, line_buf+11h; \"0\\t\"", "jmp     short loc_269D"], ["mov~rcx,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.16666666666666666, ["sub     endp, 1", "mov     byte ptr [endp+1], 30h ; '0'", "cmp     rcx, endp", "ja      short loc_26B0"], ["sub~endp,0", "mov~[yte ptr [endp+0],0", "cmp~rcx,endp", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 4, -1, 0.08333333333333333, ["lea     rdx, [rcx-1]", "mov     byte ptr [rcx-1], 31h ; '1'", "mov     cs:line_num_start, rdx"], ["lea~rdx,[rcx-1]+0]", "mov~[yte ptr [rcx-1]+0],0", "mov~<TAG>,rdx"]], [0, 0, 5, 0, 0, 3, 0, 0, 3, 1, 0.20833333333333331, ["lea     endp, line_buf; \"                 0\\t\"", "cmp     rcx, rax", "jbe     short loc_26E8"], ["lea~endp,<TAG>", "cmp~rcx,rax", "jbe~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     edx, 1", "mov     [endp], dl", "retn"], ["add~edx,0", "mov~<TAG>,dl", "retn"]], [1, 0, 3, 0, 0, 3, 0, 1, 4, 0, 0.08333333333333333, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\"", "mov     rdx, rcx", "jmp     short loc_26CB"], ["mov~<TAG>,0", "mov~rdx,rcx", "jmp~FOO"]]], "func_feature": [0, 0, 4, 0, 10, 12, 2, 28, 0.08333, 4, 3], "succs": [[], [0, 2], [0], [8, 5], [3], [3, 7], [1], [9, 6], [], [1]], "fname": "next_line_num", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [10, 0, 1, 0, 16, 69, 11, 17, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION] [FILE]...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:__bss_start", "lea     rsi, aConcatenateFil; \"Concatenate FILE(s), or standard input,\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aTEquivalentToV; \"  -t                       equivalent t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aWithNoFileOrWh; \"\\nWith no FILE, or when FILE is -, read\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "lea     rsi, aExamplesSFGOut; \"\\nExamples:\\n  %s f - g  Output f's con\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_273F"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_2746"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [19, 14, 21, 0, 4, 4, 2, 88, 0.04167, 13, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 5, 0, 1, 6, 0, 2, 0, 0, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_28A0"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_28B0"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_28C4"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_28D8"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_28F1"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_28C4"], ["xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 5, 42, 0.06845, 0, 6], "succs": [[3, 6], [0], [0, 6], [2, 5], [1, 7], [], [], [6]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     found", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~found", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, -1, 0.016094573422589374, ["mov     rdi, [rsp+0D8h+tsub]; ptr", "call    _free", "mov     rbx, [rsp+0D8h+var_40]", "xor     rbx, fs:28h", "mov     eax, r15d", "jnz     loc_31FE"], ["mov~rdi,<TAG>", "call~FOO", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [6, 0, 119, 0, 0, 10, 0, 1, 7, 6, 0.3882637800883065, ["mov     rax, [rsp+0D8h+tsub]", "mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     qword ptr [r12+4], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0", "jmp     short loc_2C7D"], ["mov~rax,<TAG>", "mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[word ptr [r12+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 6, 7, 0.31231306081754734, ["mov     r15d, 1", "jmp     loc_2BD5"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 1, 1, 10, 7, 0.06704885343968095, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "setz    r15b"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "setz~r15b"]], [1, 0, 119, 0, 0, 3, 0, 1, 13, 9, 0.275388121350235, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jz      loc_2DE2"], ["cmp~[rsp+0],0", "mov~edx,[rsp+0]", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 6, 0.3958481697763851, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jnz     loc_3000"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 14, 9, 0.006836632958268052, ["jmp     loc_2DDE"], ["jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 5, 0.10700042728955989, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_2E86"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 6, 0.16639367611451358, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jz      loc_2C10"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 14, 4, 0.09706594502207662, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; iter", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_313C"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 5, 0.11305369605469305, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_302A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 16, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 9, 1, 0.013388406209941603, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_3203"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 12, 1, 0.01103831363053696, ["mov     rax, [rsp+0D8h+tsub_iter.cur.ptr]", "mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 16, 1, 0.009827659877510326, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 21, 1, 0.010468594217347955, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 17, 1, 0.009329155390969946, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3203"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 6, 0.009151118074348383, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 14, 7, 0.02617148554336989, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_3014"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 119, 0, 0, 6, 0, 0, 4, 6, 0.3903290129611166, ["cmp     string, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "jb      short loc_2A97"], ["cmp~string,tsub_in_string", "mov~[rsp+0],string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "jb~FOO"]], [1, 0, 119, 0, 1, 3, 0, 2, 3, 7, 0.451502634952286, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_2A08"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 5, 8, 0.2433414043583535, ["jmp     loc_2FB0"], ["jmp~FOO"]], [5, 0, 119, 0, 0, 12, 1, 0, 16, 6, 0.38698191140863125, ["mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "lea     r15, [rbx+4]", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "movzx   edx, byte ptr [tsub_in_string+0]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_30A8"], ["mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "lea~r15,[rbx+0]", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "movzx~edx,[yte ptr [tsub_in_string+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 7, 0.1460974220196553, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "jnz     short loc_2DFD"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 7, 0.25042728955989174, ["test    r15b, r15b", "jnz     loc_29CE"], ["test~r15b,r15b", "jnz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 13, 7, 0.0245335422304515, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_2E70"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 11, 0.014955134596211365, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "jmp     loc_2E59"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 3, 13, 0, 4, 18, 4, 0.07869249394673124, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "mov     rcx, r15; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_3158"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rcx,r15", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 17, 12, 0.2998860561173622, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [tsub_in_string+0]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,[yte ptr [tsub_in_string+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 119, 0, 0, 5, 0, 0, 14, 8, 0.007406352371457057, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.3496652898447514, ["mov     eax, [rsp+0D8h+string_iter.cur.wc]", "test    eax, eax", "jz      loc_29CB"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2E4D"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2E4D"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 14, 7, 0.0747044580544082, ["mov     edi, [rsp+0D8h+string_iter.cur.wc]", "test    edi, edi", "jz      loc_31DA"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 13, 8, 0.008759435977780942, ["jmp     loc_2C53"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2C53"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2C53"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 1, 0, 3, 0, 1, 19, 10, 0.3809998575701467, ["mov     r15, [rsp+0D8h+string_iter.cur.bytes]", "add     r15, tsub_in_string", "jmp     loc_2950"], ["mov~r15,[rsp+0]", "add~r15,tsub_in_string", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 0, 2, 20, 11, 0.007691212078051559, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_2E59"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 15, 3, 0.06281156530408773, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_31B8"], ["cmp~rax,0", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 7, 9, 0.025352513886910694, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [r15]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [2, 0, 119, 0, 0, 8, 1, 0, 6, 7, 0.044651759008688216, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [r15]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_2B38"], ["mov~r15,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 8, 0.08367753881213502, ["test    edx, edx", "jz      loc_31DA"], ["test~edx,edx", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2A6A"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2A6A"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 9, 7, 0.07911978350662298, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]"], ["mov~r15,[rsp+0]"]], [0, 0, 119, 0, 0, 1, 0, 1, 7, 12, 0.0002492522432701894, ["jmp     loc_29B6"], ["jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 6, 11, 0.0351089588377724, ["mov     byte ptr [rsp+0D8h+var_CC], dl", "call    ___ctype_b_loc", "movzx   edx, byte ptr [rsp+0D8h+var_CC]", "mov     rax, [rax]", "test    byte ptr [rax+rdx*2], 8", "jnz     loc_29BB"], ["mov~[yte ptr [rsp+0],dl", "call~FOO", "movzx~edx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "test~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 2, 0, 6, 0, 0, 13, 6, 0.16963395527702604, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "add     [rsp+0D8h+string_iter.cur.ptr], rax", "mov     rax, [rsp+0D8h+tsub_iter.cur.bytes]", "add     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 7, 0.05198689645349665, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_2C5F"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 14, 7, 0.029198119925936475, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jmp     loc_2C5F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 0, 2, 15, 7, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_2C5F"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 14, 6, 0.009720837487537387, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 15, 5, 0.00911551061102407, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.5667996011964107, ["cmp     [rsp+0D8h+tsub_iter.in_shift], 0", "jnz     short loc_2CF7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 16, 2, 0.04778521578122774, ["test    rax, rax", "jz      loc_3166"], ["test~rax,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 3, 0.06708446090300527, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2B78"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 6, 4, 0.12298817832217632, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_2B58"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 1, 0, 7, 0, 0, 8, 6, 0.15239994302805868, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "movzx   ecx, [rsp+0D8h+string_iter.cur.wc_valid]", "mov     [rsp+0D8h+string_iter.next_done], 0", "add     rax, r15", "cmp     rax, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], rax", "jnb     loc_2BC0"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[rsp+0],0", "add~rax,r15", "cmp~rax,tsub_in_string", "mov~[rsp+0],rax", "jnb~FOO"]], [2, 0, 119, 0, 0, 5, 0, 1, 7, 7, 0.048497365047714, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "jmp     loc_2A77"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 0, 2, 8, 7, 0.007477567298105683, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     rdi, r15; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_2A77"], ["mov~r15,[rsp+0]", "mov~rdi,r15", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 5, 5, 0.15745620282011108, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jz      short loc_2A30"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DDE"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 18, 10, 0.048070075487822245, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      loc_319A"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 17, 11, 0.031049708018800738, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]"], ["mov~edx,[rsp+0]"]], [0, 0, 119, 0, 1, 4, 1, 2, 17, 5, 0.07968950291981199, ["mov     rdi, r15; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["mov~rdi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 10, 8, 0.3371314627545933, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 119, 0, 0, 8, 1, 0, 9, 7, 0.35493519441674976, ["mov     rcx, [rsp+0D8h+tsub_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_2CE0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 13, 4, 0.09257940464321321, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_2F30"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 3, 0.05597493234581968, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2F80"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 11, 7, 0.3688221051132317, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "test    ecx, ecx", "jz      loc_2D90"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 8, 0.022788776527560176, ["mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2CB8"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 2, 0.04094858282295969, ["test    rax, rax", "jnz     short loc_2EEB"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 119, 0, 0, 5, 1, 1, 13, 7, 0.03952428428998718, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "test    ecx, ecx", "jnz     loc_2CC4"], ["mov~ecx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 119, 0, 0, 4, 0, 1, 10, 7, 0.1335279874661729, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2CC4"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 1, 6, 0, 2, 11, 7, 0.0020652328728101407, ["mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2CC4"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "jmp     loc_2A9E"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 2, 0.052200541233442525, ["test    rax, rax", "jnz     loc_2BB0"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 17, 10, 0.009222333000997009, ["mov     r8d, [rsp+0D8h+string_iter.cur.wc]", "test    r8d, r8d", "jnz     loc_3189"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 10, 6, 0.01039737929069933, ["lea     rdi, [r12+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[r12+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 3, 0.056331006979062806, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_31A4"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 11, 5, 0.009186725537672696, ["mov     [rsp+0D8h+tsub_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 119, 0, 0, 2, 1, 1, 20, 2, 0.041233442529554194, ["test    rax, rax", "jnz     short loc_311B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 16, 9, 0.04023643355647343, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_2FA0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 10, 11, 0.010967098703888335, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     loc_3189"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 22, 14, 0.009542800170915824, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     short loc_3189"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 10, 10, 0.048426150121065374, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      short loc_2BA0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 1, 9, 11, 0.031405782652043863, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_2B0A"], ["mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 9, 4, 0.22204814129041445, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "lea     rcx, [r12+4]; p", "lea     rdi, [r12+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "jz      loc_2F10"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r12+0]", "lea~rdi,[r12+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 21, 13, 0.03988035892323031, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_3190"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 10, 3, 0.0811138014527845, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2F48"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 11, 2, 0.0716422162085173, ["test    rax, rax", "jnz     short loc_2D61"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 7, 6, 0.011892892750320466, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_31DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 1, 1, 20, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r15, string", "push    r13", "push    r12", "mov     string, sub; s", "push    rbp", "push    rbx", "mov     esi, 2; how", "lea     r13, is_basic_table", "sub     rsp, 0A8h", "lea     rbx, [rsp+0D8h+string_iter]", "lea     r12, [rsp+0D8h+tsub_iter]", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "lea     r14, [rbx+24h]", "call    trim2", "mov     [rsp+0D8h+tsub], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "mov~r15,string", "push~r13", "push~r12", "mov~string,sub", "push~rbp", "push~rbx", "mov~esi,0", "lea~r13,<TAG>", "sub~rsp,0", "lea~rbx,[rsp+0]", "lea~r12,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r14,[rbx+0]", "call~FOO", "mov~<TAG>,rax", "nop~<TAG>"]], [3, 0, 119, 0, 0, 5, 0, 1, 15, 9, 0.02684802734653183, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DE2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 1, 9, 0.3899729383278735, ["cmp     byte ptr [string], 0", "jz      short loc_29CB"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.009008688221051131, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jz      loc_3076"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 13, 9, 0.009827659877510326, ["mov     esi, [rsp+0D8h+tsub_iter.cur.wc]", "test    esi, esi", "jnz     loc_3189"], ["mov~esi,[rsp+0]", "test~esi,esi", "jnz~FOO"]], [0, 0, 119, 0, 1, 6, 1, 2, 2, 8, 0.4512889901723401, ["mov     rsi, [rsp+0D8h+tsub]; needle", "mov     rdi, string; haystack", "call    mbsstr", "test    rax, rax", "mov     rbp, rax", "jz      short loc_29CB"], ["mov~rsi,<TAG>", "mov~rdi,string", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 8, 9, 0.05497792337273892, ["lea     r15, [tsub_in_string+1]", "cmp     byte ptr [string], 0", "jnz     short loc_2956"], ["lea~r15,[tsub_in_string+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 12, 8, 0.06971941318900442, ["lea     rdi, [r12+4]; ps", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_2F70"], ["lea~rdi,[r12+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 0, 4, 13, 0.05376726961971229, ["cmp     string, tsub_in_string", "jnb     loc_2FC0"], ["cmp~string,tsub_in_string", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    mbuiter_multi_next"], ["call~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 14, 7, 0.027773821392963964, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DDE"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 119, 0, 2, 12, 3, 3, 5, 12, 0.030586810995584655, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [tsub_in_string-1]", "mov     rax, [rax]", "mov     rdi, [rsp+0D8h+tsub]; s", "movzx   r15d, word ptr [rax+rdx*2]", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "shr     r15w, 3", "xor     r15d, 1", "and     r15d, 1", "test    dl, dl", "jnz     loc_2FDC"], ["call~FOO", "movzx~edx,[yte ptr [tsub_in_string-1]+0]", "mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~r15d,<TAG>", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "shr~r15w,0", "xor~r15d,0", "and~r15d,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 9, 8, 0.13502350092579404, ["test    cl, cl", "jz      loc_2FB0"], ["test~cl,cl", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 6, 11, 0.02026064663153394, ["test    r15b, r15b", "jnz     short loc_29CE"], ["test~r15b,r15b", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 10, 0.05536960546930637, ["cmp     byte ptr [tsub_in_string+0], 0", "jz      short loc_29CB"], ["cmp~[yte ptr [tsub_in_string+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, -1, 0.004379717988890471, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [2, 0, 119, 0, 1, 7, 0, 2, 16, 9, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DE2"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 5, 12, 0.015774106252670547, ["mov     rdi, [rsp+0D8h+tsub]; s", "mov     r15d, 1", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "test    dl, dl", "jz      loc_29CE"], ["mov~rdi,<TAG>", "mov~r15d,0", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "test~dl,dl", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 15, 9, 0.00961401509756445, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 8, 0.08282295969235151, ["test    edx, edx", "jz      short loc_2DF4"], ["test~edx,edx", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 8, 0.31398661159379004, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_2DF4"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [45, 45, 136, 2, 120, 185, 4, 493, 0.09347, 6, 6], "succs": [[], [0, 119], [56], [2], [2], [117, 7], [11, 5], [116], [27, 70], [8, 51], [41, 97], [10, 20], [10], [], [13, 86], [100, 13], [80, 13], [13, 87], [99, 13], [12, 118], [115, 19], [63, 23], [104, 21], [3], [67, 30], [24, 26], [24, 1], [54, 31], [39], [82, 28], [32], [35], [112, 39], [32], [32], [88, 50], [35], [35], [35], [98], [39], [57, 113], [44], [42, 95], [88, 47], [44], [44], [60], [110], [48, 111], [56], [50, 36], [50], [50], [118, 55], [70], [91, 69], [66, 18], [62, 79], [58, 61], [109, 63], [60], [60], [43, 59], [116], [64, 107], [65], [29, 118], [72], [81, 68], [52, 71], [74, 53], [9, 6], [72], [16, 85], [9, 106], [9], [9], [59], [90, 14], [105, 85], [83, 118], [40, 84], [91], [17, 92], [37, 38], [89, 105], [105, 92], [], [45, 46], [89], [76, 93], [33, 34], [77, 94], [103, 15], [118, 78], [98], [117], [112, 101], [65, 105], [105, 103], [112, 22], [112, 101], [73, 75], [114, 108], [], [6], [116], [49, 110], [3, 4], [1, 111], [112, 102], [1], [117], [1, 49], [116], [26, 117], [25, 26], [], []], "fname": "mbsstr_trimmed_wordbounded", "n_num": 120}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, translation", "pop     translation", "pop     name", "pop     r12", "retn"], ["mov~rax,translation", "pop~translation", "pop~name", "pop~r12", "retn"]], [1, 0, 3, 0, 1, 11, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rsi, name; msgid", "push    rbx", "mov     rbp, name", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "cmp     name, rax", "mov     rbx, rax", "jz      short loc_325D"], ["push~r12", "push~rbp", "mov~rsi,name", "push~rbx", "mov~rbp,name", "mov~edx,0", "xor~edi,edi", "call~FOO", "cmp~name,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     rsi, name; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      short loc_3268"], ["mov~rsi,name", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 0, 0, 4, 22, 1, 4, 2, 0, 0.0, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     r12, rax", "call    _strlen", "lea     rdi, [r12+rax+4]; n", "call    xmalloc", "lea     rcx, aSS; \"%s (%s)\"", "mov     r12, rax", "mov     r9, name", "mov     r8, translation", "mov     rdi, result", "mov     translation, r12", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, result", "pop     result", "pop     name", "pop     r12", "retn"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~r12,rax", "call~FOO", "lea~rdi,[r12+0]", "call~FOO", "lea~rcx,<TAG>", "mov~r12,rax", "mov~r9,name", "mov~r8,translation", "mov~rdi,result", "mov~translation,r12", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rax,result", "pop~result", "pop~name", "pop~r12", "retn"]]], "func_feature": [6, 3, 8, 0, 4, 4, 0, 43, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "proper_name", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 11, 0, 1, 7, 1, 2, 0, 0, 0.008152173913043478, ["mov     rsi, name_converted; sub", "mov     rdi, translation; string", "mov     [rsp+48h+sub], rdx", "call    mbsstr_trimmed_wordbounded", "test    al, al", "mov     rdx, [rsp+48h+sub]", "jnz     short loc_333A"], ["mov~rsi,name_converted", "mov~rdi,translation", "mov~<TAG>,rdx", "call~FOO", "test~al,al", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 4, -1, 0.07608695652173914, ["test    name_converted, name_converted", "jz      short loc_338C"], ["test~name_converted,name_converted", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 3, 2, 0.058876811594202896, ["test    alloc_name_converted, alloc_name_converted", "jz      short loc_3416"], ["test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 2, 3, 0.14492753623188406, ["cmp     name_ascii, translation", "mov     [rsp+48h+sub], name_converted_translit", "jz      loc_3408"], ["cmp~name_ascii,translation", "mov~<TAG>,name_converted_translit", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 5, -1, 0.07336956521739131, ["test    rdx, rdx", "jz      short loc_33A0"], ["test~rdx,rdx", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 4, 1, 0.010869565217391304, ["cmp     alloc_name_converted, name", "jnz     loc_34E0"], ["cmp~alloc_name_converted,name", "jnz~FOO"]], [0, 0, 22, 0, 0, 6, 3, 1, 1, 4, 0.01992753623188406, ["xor     r15d, r15d", "xor     r14d, r14d", "test    name_utf8, name_utf8", "mov     rdx, name_utf8", "mov     locale_code, name_converted_translit", "jz      loc_34C7"], ["xor~r15d,r15d", "xor~r14d,r14d", "test~name_utf8,name_utf8", "mov~rdx,name_utf8", "mov~locale_code,name_converted_translit", "jz~FOO"]], [2, 0, 24, 1, 3, 21, 2, 4, 0, 5, 0.0, ["push    r15", "push    r14", "mov     edx, 5; category", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, name_ascii", "mov     rbx, name_utf8", "mov     name_utf8, name_ascii; msgid", "xor     edi, edi; domainname", "sub     rsp, 18h", "call    _dcgettext", "mov     r13, rax", "call    locale_charset", "lea     rsi, from_codeset; \"UTF-8\"", "mov     rdi, rax; s1", "mov     r12, rax", "call    c_strcasecmp", "test    eax, eax", "jnz     loc_3430"], ["push~r15", "push~r14", "mov~edx,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,name_ascii", "mov~rbx,name_utf8", "mov~name_utf8,name_ascii", "xor~edi,edi", "sub~rsp,0", "call~FOO", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.05344202898550725, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "jz      loc_3357"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "jz~FOO"]], [0, 0, 5, 0, 1, 3, 0, 2, 5, 0, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    _free", "jmp     loc_3416"], ["mov~rdi,alloc_name_converted", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 6, -1, 0.006038647342995169, ["mov     rsi, rdx; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_333A"], ["mov~rsi,rdx", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 1, 22, 1, 6, 36, 1, 7, 1, 4, 0.01992753623188406, ["lea     rsi, from_codeset; \"UTF-8\"", "mov     rdx, locale_code; to_codeset", "mov     rdi, name_utf8; src", "call    xstr_iconv", "mov     rdi, locale_code; s", "mov     r14, rax", "call    _strlen", "lea     rdi, [rax+0Bh]; n", "mov     r15, rax", "call    xmalloc", "mov     rdx, len; n", "mov     rsi, locale_code; src", "mov     rdi, locale_code_translit; dest", "call    _memcpy", "add     len, rax", "mov     rcx, rax", "mov     rax, 4C534E4152542F2Fh", "mov     [r15], rax", "lea     rsi, from_codeset; \"UTF-8\"", "mov     eax, 5449h", "mov     rdx, rcx; to_codeset", "mov     rdi, name_utf8; src", "mov     [r15+8], ax", "mov     byte ptr [r15+0Ah], 0", "mov     [rsp+48h+ptr], rcx", "mov     name_utf8, name_converted", "call    xstr_iconv", "mov     rcx, [rsp+48h+ptr]", "mov     [rsp+48h+sub], rax", "mov     locale_code, rbx", "mov     rdi, rcx; ptr", "call    _free", "mov     rdx, [rsp+48h+sub]", "test    rbx, rbx", "mov     r15, rdx", "jnz     loc_331A"], ["lea~rsi,<TAG>", "mov~rdx,locale_code", "mov~rdi,name_utf8", "call~FOO", "mov~rdi,locale_code", "mov~r14,rax", "call~FOO", "lea~rdi,[rax+0]", "mov~r15,rax", "call~FOO", "mov~rdx,len", "mov~rsi,locale_code", "mov~rdi,locale_code_translit", "call~FOO", "add~len,rax", "mov~rcx,rax", "mov~rax,0", "mov~<TAG>,rax", "lea~rsi,<TAG>", "mov~eax,<STR>", "mov~rdx,rcx", "mov~rdi,name_utf8", "mov~[r15+0],ax", "mov~[yte ptr [r15+0],0", "mov~[rsp+0],rcx", "mov~name_utf8,name_converted", "call~FOO", "mov~rcx,[rsp+0]", "mov~<TAG>,rax", "mov~locale_code,rbx", "mov~rdi,rcx", "call~FOO", "mov~rdx,<TAG>", "test~rbx,rbx", "mov~r15,rdx", "jnz~FOO"]], [0, 0, 21, 0, 0, 4, 1, 1, 2, 4, 0.0, ["test    name_converted_translit, name_converted_translit", "mov     r12, name_ascii", "cmovnz  r12, name_converted_translit", "jmp     loc_331A"], ["test~name_converted_translit,name_converted_translit", "mov~r12,name_ascii", "cmovnz~r12,name_converted_translit", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.028079710144927536, ["cmp     alloc_name_converted_translit, name", "jnz     loc_334F"], ["cmp~alloc_name_converted_translit,name", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0009057971014492754, ["jmp     loc_3357"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 3, -1, 0.10416666666666667, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "mov     rdx, [rsp+48h+sub]", "jz      short loc_3370"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "mov~rdx,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.05404589371980676, ["test    alloc_name_converted, alloc_name_converted", "jz      short loc_3347"], ["test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    _free"], ["mov~rdi,alloc_name_converted", "call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, -1, 0.02506038647342995, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "mov     name, translation", "jz      short loc_3357"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "mov~name,translation", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.004227053140096618, ["mov     rdi, alloc_name_converted_translit; ptr", "call    _free"], ["mov~rdi,alloc_name_converted_translit", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, -1, 0.033816425120772944, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "mov     name, result", "jnz     loc_334F"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "mov~name,result", "jnz~FOO"]], [2, 0, 5, 0, 4, 18, 2, 5, 6, -1, 0.059178743961352656, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     name_converted, rax", "call    _strlen", "lea     rdi, [rbx+rax+4]; n", "call    xmalloc", "lea     rcx, aSS; \"%s (%s)\"", "mov     rdi, rax", "mov     rbx, rax", "mov     r9, name", "xor     eax, eax", "mov     r8, translation", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "call    ___sprintf_chk", "test    alloc_name_converted, alloc_name_converted", "jz      short loc_33F0"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~name_converted,rax", "call~FOO", "lea~rdi,[rbx+0]", "call~FOO", "lea~rcx,<TAG>", "mov~rdi,rax", "mov~rbx,rax", "mov~r9,name", "xor~eax,eax", "mov~r8,translation", "mov~rdx,0", "mov~esi,0", "call~FOO", "test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     name_ascii", "pop     r12", "pop     translation", "pop     alloc_name_converted", "pop     alloc_name_converted_translit", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~name_ascii", "pop~r12", "pop~translation", "pop~alloc_name_converted", "pop~alloc_name_converted_translit", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.003321256038647343, ["jmp     loc_3357"], ["jmp~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    _free"], ["mov~rdi,alloc_name_converted", "call~FOO"]]], "func_feature": [20, 19, 41, 0, 25, 41, 1, 146, 0.03138, 2, 3], "succs": [[16, 4], [0, 4], [8, 5], [2, 15], [10, 21], [8, 9], [3, 12], [11, 6], [13, 22], [8], [16, 21], [3, 12], [3], [19, 14], [22], [16, 1], [17, 18], [18], [19, 22], [22], [19, 23], [24, 20], [], [22], [20]], "fname": "proper_name_utf8", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[3, 0, 0, 4, 1, 18, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, maxlen; n", "mov     rbx, maxlen", "xor     esi, esi; c", "mov     rbp, string", "sub     rsp, 8", "call    _memchr", "mov     rdx, end", "sub     rdx, string", "add     rdx, 1", "test    end, end", "mov     end, maxlen", "cmovnz  rax, rdx", "add     rsp, 8", "pop     maxlen", "pop     string", "retn"], ["push~rbp", "push~rbx", "mov~rdx,maxlen", "mov~rbx,maxlen", "xor~esi,esi", "mov~rbp,string", "sub~rsp,0", "call~FOO", "mov~rdx,end", "sub~rdx,string", "add~rdx,0", "test~end,end", "mov~end,maxlen", "cmovnz~rax,rdx", "add~rsp,0", "pop~maxlen", "pop~string", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 17, 18, 0.0, 0, 4], "succs": [[]], "fname": "strnlen1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 57, 0, 1, 5, 1, 2, 0, 0, 0.0367965367965368, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_3B00"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 57, 0, 0, 2, 1, 1, 10, 2, 0.02614052614052614, ["test    rax, rax", "jnz     short loc_3803"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 12, 10, 0.012071262071262072, ["mov     edx, [rsp+0A8h+i.cur.wc]", "test    edx, edx", "jnz     loc_3B3B"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 7, 0.06943056943056942, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r15d, 1", "jz      short loc_3617"], ["cmp~[rsp+0],0", "mov~r15d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 8, 0.1351981351981352, ["test    r15d, r15d", "mov     [rsp+0A8h+i.next_done], 1", "jz      loc_35F8"], ["test~r15d,r15d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 12, 9, 0.024142524142524144, ["mov     r13, [rsp+0A8h+i.cur.bytes]", "jmp     loc_367C"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [3, 0, 34, 0, 0, 6, 0, 1, 9, 9, 0.050865800865800864, ["mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "jmp     loc_367C"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 34, 1, 0, 6, 0, 1, 10, 9, 0.003996003996003996, ["mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13, r14", "sub     r13, r12", "mov     [rsp+0A8h+i.cur.bytes], r13", "jmp     loc_367C"], ["mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~r13,r14", "sub~r13,r12", "mov~[rsp+0],r13", "jmp~FOO"]], [3, 0, 34, 0, 0, 7, 0, 0, 9, 9, 0.043373293373293376, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [rsi]", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 7, 1, 0, 12, 1, 1, 5, -1, 0.008907758907758908, ["mov     ecx, eax", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "lea     rbp, [rdx-1]", "cmp     d, p", "ja      loc_3840"], ["mov~ecx,eax", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "lea~rbp,[rdx-1]+0]", "cmp~d,p", "ja~FOO"]], [2, 0, 9, 1, 0, 7, 2, 1, 4, -1, 0.009407259407259408, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_38C9"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 1, 13, 0, 0, 2, 1, 1, 5, -1, 0.002664002664002664, ["test    byte ptr [rax+rbp*2+1], 20h", "jnz     short loc_3890"], ["test~[yte ptr [rax+0],<STR>", "jnz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, -1, 0.001332001332001332, ["call    ___ctype_b_loc", "mov     r13, p", "mov     rax, [rax]", "jmp     short loc_389E"], ["call~FOO", "mov~r13,p", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 6, -1, 0.0, ["add     p, 1", "movzx   ebp, byte ptr [p+0]", "test    bpl, bpl", "jz      short loc_38A5"], ["add~p,0", "movzx~ebp,[yte ptr [p+0]", "test~bpl,bpl", "jz~FOO"]], [0, 0, 57, 0, 1, 6, 1, 2, 9, 6, 0.008574758574758574, ["mov     rdi, r13; ps", "mov     [rsp+0A8h+var_98], rdx", "call    _mbsinit", "test    eax, eax", "mov     rdx, [rsp+0A8h+var_98]", "jz      loc_3B1C"], ["mov~rdi,r13", "mov~[rsp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "jz~FOO"]], [2, 0, 57, 0, 0, 7, 1, 0, 8, 7, 0.015734265734265736, ["movzx   ecx, byte ptr [r15]", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [r14+rax*4]", "bt      eax, ecx", "jnb     loc_3A18"], ["movzx~ecx,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 78, 1, 1, 14, 2, 2, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, esi", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_40], rax", "xor     eax, eax", "call    _strdup", "test    d, d", "jz      loc_3B17"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,esi", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~d,d", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 3, -1, 0.00308025308025308, ["movzx   ebp, byte ptr [p]", "test    bpl, bpl", "jz      loc_3B0A"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [1, 0, 34, 0, 1, 9, 1, 2, 13, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "mov     rsi, [rsp+0A8h+r]", "test    eax, eax", "mov     eax, 2", "cmovnz  r15d, eax", "cmovnz  rsi, r12", "mov     [rsp+0A8h+r], rsi", "jmp     loc_3617"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovnz~r15d,eax", "cmovnz~rsi,r12", "mov~[rsp+0],rsi", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 7, 0.013486513486513486, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_3617"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 8, 0.052947052947052944, ["cmp     r15d, 1", "jz      loc_39E0"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, -1, 0.0004995004995004995, ["jmp     loc_3840"], ["jmp~FOO"]], [0, 1, 6, 0, 0, 3, 1, 1, 7, -1, 0.004995004995004995, ["movzx   eax, byte ptr [p+0]", "test    byte ptr [rdx+rax*2+1], 20h", "jnz     short loc_3918"], ["movzx~eax,[yte ptr [p+0]", "test~[yte ptr [rdx+0],<STR>", "jnz~FOO"]], [0, 0, 34, 0, 1, 5, 2, 1, 12, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "xor     r15d, r15d", "call    _iswspace", "test    eax, eax", "setz    r15b"], ["mov~edi,[rsp+0]", "xor~r15d,r15d", "call~FOO", "test~eax,eax", "setz~r15b"]], [0, 0, 34, 0, 0, 2, 1, 1, 10, 2, 0.05427905427905428, ["test    rax, rax", "jnz     short loc_39B7"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 9, 3, 0.07109557109557109, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r12, [rsp+0A8h+i.cur.ptr]", "jz      loc_3AC0"], ["cmp~rax,0", "mov~r12,[rsp+0]", "jz~FOO"]], [2, 0, 37, 1, 0, 7, 2, 1, 4, 8, 0.13994338994338995, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_3582"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 3, 9, 0.1382783882783883, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 8, 0.02664002664002664, ["cmp     r15d, 2", "jnz     loc_3AB0"], ["cmp~r15d,0", "jnz~FOO"]], [0, 0, 57, 0, 1, 4, 1, 2, 10, 7, 0.07309357309357309, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "jz      loc_3A80"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.in_shift], 0", "mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_3779"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_3779"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 57, 0, 0, 6, 0, 0, 9, 8, 0.00949050949050949, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [r15]", "mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.next_done], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 39, 0, 2, 8, 0, 3, 6, 11, 0.12737262737262736, ["mov     rdi, r15; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, r15; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_3840"], ["mov~rdi,r15", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,r15", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [6, 0, 58, 1, 0, 16, 1, 0, 5, 7, 0.030053280053280052, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     r15, d", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "cmp     rdx, d", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_3A80"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~r15,d", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "cmp~rdx,d", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 11, 6, 0.023476523476523476, ["add     r15, [rsp+0A8h+i.cur.bytes]", "mov     rdx, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     r15, rdx", "mov     [rsp+0A8h+i.cur.ptr], r15", "jnb     loc_3A80"], ["add~r15,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsp+0],0", "cmp~r15,rdx", "mov~[rsp+0],r15", "jnb~FOO"]], [2, 0, 40, 1, 0, 6, 0, 1, 10, 12, 0.00616050616050616, ["mov     rax, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1", "sub     rax, r15", "mov     [rsp+0A8h+i.cur.bytes], rax", "jmp     short loc_3A80"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "sub~rax,r15", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 40, 0, 0, 4, 0, 0, 9, 12, 0.030802530802530804, ["mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 8, 0.008991008991008992, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_3AB0"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 1, 0.020313020313020312, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r12], 0", "jnz     loc_3B40"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 5, 0, 0, 12, 6, 0.09856809856809856, ["lea     rsi, [r12+r13]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     rsi, r14", "mov     [rsp+0A8h+i.cur.ptr], rsi", "jnb     loc_3830"], ["lea~rsi,<TAG>", "mov~[rsp+0],0", "cmp~rsi,r14", "mov~[rsp+0],rsi", "jnb~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 14, 7, 0.002580752580752581, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "mov     eax, 1", "cmovz   r15d, eax", "jmp     loc_3617"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~r15d,eax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 7, 0.007575757575757576, ["mov     r15d, 1", "jmp     loc_3617"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 7, 5, 0.051864801864801864, ["cmp     [rsp+0A8h+i.in_shift], 0", "jz      short loc_3740"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 0, 1, 6, 6, 0.019230769230769232, ["lea     rbp, [rsp+0A8h+i]", "lea     r14, is_basic_table", "lea     r13, [rbp+0Ch]", "jmp     short loc_37A7"], ["lea~rbp,[rsp+0]", "lea~r14,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005994005994005994, ["call    ___ctype_b_loc", "mov     rdx, [rax]", "jmp     short loc_3929"], ["call~FOO", "mov~rdx,<TAG>", "jmp~FOO"]], [2, 0, 6, 1, 0, 4, 0, 1, 8, -1, 0.0004995004995004995, ["mov     byte ptr [p+0], 0", "sub     p, 1", "cmp     d, p", "ja      loc_3840"], ["mov~[yte ptr [p+0],0", "sub~p,0", "cmp~d,p", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 12, 11, 0.01073926073926074, ["mov     eax, [rsp+0A8h+i.cur.wc]", "test    eax, eax", "jnz     loc_3B3B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 9, 3, 0.030136530136530136, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r15, [rsp+0A8h+i.cur.ptr]", "jz      loc_3AE0"], ["cmp~rax,0", "mov~r15,[rsp+0]", "jz~FOO"]], [1, 0, 57, 1, 1, 8, 0, 2, 8, 4, 0.058774558774558776, ["lea     rcx, [rbp+0Ch]; p", "lea     rdi, [rbp+2Ch]; iter", "sub     rdx, r15; n", "mov     rsi, r15; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_3A68"], ["lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "sub~rdx,r15", "mov~rsi,r15", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 5, 0.2078754578754579, ["cmp     [rsp+0A8h+i.in_shift], 0", "jnz     loc_3961"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 6, 6, 0.13944388944388944, ["lea     rbp, [rsp+0A8h+i]", "lea     rax, [rbp+0Ch]", "mov     [rsp+0A8h+ps], rax", "jmp     short loc_362E"], ["lea~rbp,[rsp+0]", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.022810522810522812, ["cmp     r15d, 2", "jnz     short loc_3840"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 34, 1, 1, 8, 0, 2, 8, 4, 0.13478188478188477, ["lea     rcx, [rbp+0Ch]; p", "mov     rdx, r14", "lea     rdi, [rbp+2Ch]; pwc", "sub     rdx, rsi; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_3A40"], ["lea~rcx,[rbp+0]", "mov~rdx,r14", "lea~rdi,[rbp+0]", "sub~rdx,rsi", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    mbiter_multi_next"], ["call~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0A8h+r]", "mov     byte ptr [rax], 0", "xchg    ax, ax"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "xchg~ax,ax"]], [1, 0, 10, 0, 2, 8, 0, 3, 5, -1, 0.008907758907758908, ["mov     rdi, p; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, p; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_3840"], ["mov~rdi,p", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,p", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.002913752913752914, ["mov     r13, p", "jmp     loc_38A5"], ["mov~r13,p", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, -1, 0.004995004995004995, ["test    r12d, r12d", "jz      short loc_38C6"], ["test~r12d,r12d", "jz~FOO"]], [1, 0, 76, 0, 1, 4, 0, 1, 1, 11, 0.012654012654012654, ["mov     rbx, d", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_3870"], ["mov~rbx,d", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 86h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 9, 6, 0.016733266733266732, ["mov     rdi, [rsp+0A8h+ps]; ps", "mov     [rsp+0A8h+var_98], rsi", "call    _mbsinit", "test    eax, eax", "jz      loc_3B1C"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.009573759573759574, ["mov     rdx, d"], ["mov~rdx,d"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 10, 0.11871461871461872, ["jmp     loc_357A"], ["jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 10, 5, 0.010989010989010988, ["mov     [rsp+0A8h+i.in_shift], 1", "jmp     loc_37AE"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 11, 10, 0.03146853146853147, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     r14, [rsp+0A8h+i.limit]", "jz      short loc_39D3"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~r14,[rsp+0]", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 0, 0, 3, 9, 0.011738261738261738, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [0, 0, 61, 0, 0, 2, 1, 1, 2, 10, 0.019647019647019648, ["test    r12d, r12d", "jnz     loc_36C8"], ["test~r12d,r12d", "jnz~FOO"]], [2, 0, 34, 0, 0, 8, 1, 0, 8, 7, 0.07292707292707293, ["movzx   ecx, byte ptr [rsi]", "lea     rdi, is_basic_table", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [rdi+rax*4]", "bt      eax, ecx", "jnb     loc_3940"], ["movzx~ecx,<TAG>", "lea~rdi,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [2, 0, 60, 1, 0, 7, 2, 1, 4, 8, 0.021062271062271064, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_36D0"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 12, 10, 0.0, ["mov     [rsp+0A8h+i.in_shift], 0"], ["mov~[rsp+0],0"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0A1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 11, 1, 0.009657009657009656, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_3B40"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [6, 0, 35, 1, 0, 18, 2, 0, 5, 7, 0.14127539127539127, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "mov     rsi, d", "sbb     rdx, 3", "xor     r15d, r15d", "cmp     rdx, d", "mov     r14, rdx", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_3840"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "mov~rsi,d", "sbb~rdx,0", "xor~r15d,r15d", "cmp~rdx,d", "mov~r14,rdx", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 10, 5, 0.00715950715950716, ["mov     rsi, [rsp+0A8h+var_98]; s", "mov     [rsp+0A8h+i.in_shift], 1"], ["mov~rsi,[rsp+0]", "mov~[rsp+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 6, -1, 0.023976023976023976, ["mov     rax, d", "mov     d, [rsp+0A8h+var_40]", "xor     d, fs:28h", "jnz     loc_3B12"], ["mov~rax,d", "mov~d,[rsp+0]", "xor~d,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [23, 35, 79, 2, 79, 119, 1, 352, 0.03339, 6, 15], "succs": [[32, 31], [0, 73], [0, 55], [24, 41], [3, 21], [4], [4], [4], [4], [77, 46], [9, 10], [57, 13], [11], [57, 11], [65, 61], [33, 14], [], [16, 60], [58, 12], [41], [41, 19], [20, 29], [77], [22, 47], [41], [40, 66], [25, 7], [74, 27], [27], [43, 39], [34, 36], [30], [30], [30], [64, 77], [34, 45], [34, 44], [34], [34], [42, 43], [48, 72], [51, 53], [41], [41], [50, 15], [44], [23], [77, 23], [66, 55], [1, 37], [49, 38], [69, 54], [51], [56, 77], [26, 6], [], [77], [77, 63], [57], [18, 63], [59, 68], [], [75, 61], [10], [28], [50], [5, 71], [70], [67, 28], [8, 62], [35, 70], [5], [], [72, 2], [52, 77], [54], [], [76, 78], []], "fname": "trim2", "n_num": 79}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort; jumptable 0000000000003C50 case 0"], ["call~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_ABF8", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_3D86"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 0000000000003C50 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_3BAF"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_3D8B"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_3B98"], ["add~n_authors,0", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003C50 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 0000000000003C50 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_3C90"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 3, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_3BC0"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_3D70; jumptable 0000000000003C50 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 5, -1, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_3BE8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_3C58"], ["test~command_name,command_name", "jz~FOO"]]], "func_feature": [10, 10, 28, 1, 25, 36, 1, 119, 0.05442, 17, 6], "succs": [[], [0, 4, 8, 11, 12, 13, 14, 15, 16, 17], [], [2, 23], [3], [7], [19], [10, 6], [3], [7], [19], [3], [3], [3], [3], [3], [3], [3], [3], [24, 9], [1, 18], [20], [20], [], [21, 22]], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_3E42"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_3DEC"], ["sub~rsp,0", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 8, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_3E9C"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    mem_cd_iconv", "test    eax, eax", "mov     ebx, eax", "js      short loc_3EA0"], ["push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     eax, ebx", "pop     retval", "retn"], ["mov~eax,ebx", "pop~retval", "retn"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmem_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_3EBE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_cd_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_3EC8"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_3EEE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_3EF8"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 2, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_3F93"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:__bss_start; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_3F49"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 1, 1, 0.06666666666666667, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_3F9E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_3F93"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [8, 8, 12, 0, 7, 8, 0, 43, 0.02381, 7, 0], "succs": [[2, 6], [0, 4], [], [6], [3, 5], [6], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 159, 0, 0, 3, 0, 1, 0, 0, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 0000000000004148 case 92", "jz      loc_47F8"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_47F8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.00575489237728327, ["test    r11b, r11b; jumptable 0000000000004708 case 92", "jz      short loc_47F8"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_47F8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_41FC"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_4412"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_4412"], ["cmp~rbx,r14", "jnb~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_4AB8"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_4ABF"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_4ACC"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.17992671816201256, ["test    r11b, r11b; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122", "jz      loc_42DD"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.32742875579687775, ["lea     rcx, off_ACC0", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573208, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.055867019339505115, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 0000000000004148 cases 35,126", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000004148 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117054, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000004148 case 39", "mov     ebp, 27h ; '''", "jnz     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.03691199516626467, ["lea     rcx, off_AEBC", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_4208; jumptable 0000000000004148 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_4ACC"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250467998, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_4253"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_4211"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_4211"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_4211"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_4211"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.002300040250704387, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000004058 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_4078"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_ACA0", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_4264"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.3026661299906082, ["add     i_0, 1"], ["add~i_0,0"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_4937"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_4B17"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_4A71"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_4863"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 0000000000004148 default case", "jnz     loc_4810"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_4A3F"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03972954447337754, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_4460; jumptable 0000000000004148 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450209, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_4253"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.002300040250704387, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_4A1C"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.04687290360914649, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.010489461343351278, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 66h ; 'f'; jumptable 0000000000004708 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 76h ; 'v'; jumptable 0000000000004708 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 62h ; 'b'; jumptable 0000000000004708 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 61h ; 'a'; jumptable 0000000000004708 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_4B1C; jumptable 0000000000004058 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.002300040250704387, ["lea     rax, aIterCurPtr0+15h; jumptable 0000000000004058 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437792, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 0000000000004148 case 63", "cmp     eax, 2", "jz      loc_47E0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.06287255860310889, ["test    r11b, r11b; jumptable 0000000000004148 case 0", "jnz     loc_4710; jumptable 0000000000004708 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_424F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000004058 case 2", "jnz     loc_4AD4"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 159, 0, 0, 3, 2, 1, 10, -1, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_42DD"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.13253981944684026, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_4253"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_4090"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.01943534011845207, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_45E5"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099303, ["lea     rsi, aIterCurPtr0+15h; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, aIterCurPtr0+15h; \"'\"", "cmp     rsi, rax", "jnz     short loc_45B6"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, asc_AC67; \"\\\"\"", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408774, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.5060843822703411, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_4460; jumptable 0000000000004148 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_4090"], ["add~rbx,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_4991"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408774, ["lea     rax, asc_AC67; \"\\\"\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000004058 case 3", "jnz     loc_4AF4"], ["test~ebx,ebx", "jnz~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.002300040250704387, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000004058 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_49F4"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.002300040250704387, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 0000000000004148 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4285"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_4908"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_492E"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_4A0A"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_4692"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342416, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.046000805014087744, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_4078"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.009200161002817548, ["lea     rax, asc_AC67; \"\\\"\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.002300040250704387, ["lea     rax, asc_AC67; jumptable 0000000000004058 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_4078"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_45E5"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_40A6"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_49A0"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_43DD"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_49C0"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_4ACC"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_49F4"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_4128"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_44B7"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169706, ["test    r11b, r11b", "jz      short loc_4128"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.003104369802662029, ["mov     ebp, 9; jumptable 0000000000004148 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_49E8"], ["cmp~r14,len", "jbe~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_49E0"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453128, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_46E8"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Dh; jumptable 0000000000004148 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Ah; jumptable 0000000000004148 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_4960"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_489D"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_4991"], ["mov~r12d,r11d", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_44EA"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_44C3"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.0465971041397986, ["test    r11b, r11b", "jnz     loc_4388"], ["test~r11b,r11b", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 7; jumptable 0000000000004148 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 0Ch; jumptable 0000000000004148 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 0Bh; jumptable 0000000000004148 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_44E1"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_44D8"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381077, ["test    r11b, r11b; jumptable 0000000000004148 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_42DD"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254326, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_4937"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_4538"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_47EB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_43DD"], ["test~sil,sil", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084871, ["cmp     buffersize, rbx", "jbe     short loc_45D8"], ["cmp~buffersize,rbx", "jbe~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.01391524351676154, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_45D0"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_4937"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_4501"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_4128"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_4516"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_411F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.043264715465853996, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000004708 case 0", "mov     rdx, rbx", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 0000000000004058 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_452E"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_472B"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951645, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.033719548425430776, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_4338"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572588, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_434A"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_435C"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_475F"], ["cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625936, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_47EB"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_4771"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_AC69; jumptable 0000000000004058 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_AC69; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_457D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, asc_AC67; \"\\\"\"", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [0, 0, 159, 0, 0, 1, 0, 0, 10, -1, 0.002245528384048306, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.051554443869434384, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_47EB"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_479C"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.04712686638682844, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_47EB"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.0427280394073563, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_43DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_41C6"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_49F4"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_41D8"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 19, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_41EA"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[115], [0, 2], [0, 178], [0, 4], [0, 40], [13], [5, 7], [5], [44], [8, 44], [121, 12], [104, 10], [121, 10], [69, 31], [1, 126, 131, 13, 110, 47, 18, 19, 116, 117, 86, 127, 21, 125, 62, 63], [16, 13], [177, 13], [18, 13], [19, 13], [20, 13], [13, 102], [155, 13], [13], [113, 13], [3, 13, 110, 47, 18, 19, 116, 149, 86, 55, 56, 57, 58, 21, 62, 117], [13], [44], [105, 26], [26], [26], [121, 11], [41, 50], [31], [34, 31], [166, 31], [31], [92], [65, 36, 173, 81, 82, 61, 95], [76, 78], [38], [38], [38], [89], [42, 119], [59, 148], [133, 30], [74, 98], [106, 46], [45, 79], [24, 47], [41, 53], [92], [51, 85], [64, 29], [53], [53], [53], [53], [53], [], [37, 151], [92], [169, 170], [68, 149], [66, 67], [75, 52], [67], [41], [69, 70], [32, 41], [99], [96, 93], [73, 71], [71], [98], [92], [78], [14, 47], [99], [123], [92], [80, 91], [92], [111], [9, 83], [92], [17, 87], [17], [89, 119], [88, 90], [88, 28], [97, 94], [99], [92], [92], [92], [139, 93], [94], [118], [100, 101], [101], [107, 103], [29], [105, 27], [121], [9, 183], [23], [109, 77], [23], [114, 77], [115], [112, 158], [9, 111], [122], [49, 143], [120, 124], [115], [115], [48, 176], [176, 118], [124, 29], [123], [134], [122, 108], [69, 54], [124], [124], [124], [130, 132], [128, 39], [132], [69, 175], [134], [140, 119], [136, 129], [25, 15], [141, 29], [138, 165], [137, 93], [137], [43, 119], [144, 142], [144], [145, 77], [152, 146], [147, 29], [152], [154, 150], [], [153, 29], [154], [], [161, 157], [33, 156], [77], [29, 159], [33], [161], [112], [160, 162], [162], [129], [163, 164], [164], [22, 167], [138], [168, 171], [22], [171], [25, 29], [25, 135], [35, 172], [35], [72, 174], [72], [54], [123], [25, 179], [40, 29], [25, 180], [181, 29], [184, 182], [184], [9, 84], [185, 186], [186], [187, 6], [6]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 11, 1, 1, 18, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_4CC3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,<STR>", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, 0, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, 0, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_4C98"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, 0, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, 0, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_4BAD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_4BCF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, 0, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_4C41"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, 0, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_4C7B"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 1, 0, 1, 0, 11, 0, 0, 3, 0, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,<STR>", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, 0, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, 0, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    _free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[], [0, 6], [4], [2, 5], [8], [4], [8, 3], [10, 11], [9, 7], [], [9], [10]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 1, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,<STR>", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 1, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,<STR>", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_4EDB"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 1, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,<STR>", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_4F69"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_4F41"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_4F30"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_4F84"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5087"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 3, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5103"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 1, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_51B6"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 0, 0, 0, 0.25, ["cmp     count, 7FFFE000h", "jbe     short loc_5250"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 2, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_5218"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, 1, 0.2, ["cmp     eax, 16h", "jnz     short loc_5250"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 1, 1, 0.4166666666666667, ["mov     rdx, count; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbp, rax", "jns     short loc_5250"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_5218"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 9, 0, 0, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     count", "pop     rbp", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~count", "pop~rbp", "pop~buf", "pop~fd", "retn"]]], "func_feature": [2, 1, 5, 0, 7, 10, 2, 33, 0.19048, 0, 2], "succs": [[2, 6], [0, 3], [4, 6], [1, 6], [3], [3], []], "fname": "safe_read", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 0, 0, 0, 0.2, ["cmp     count, 7FFFE000h", "jbe     short loc_52B0"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_52B0"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 1, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_52B0"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 2, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_5278"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_5278"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 9, 0, 0, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[4, 6], [0, 6], [3, 6], [1, 2], [2], [2], []], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 3, 0, 2, 7, 0, 3, 0, 0, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    _free", "mov     [r12], r13d", "jmp     short loc_5335"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_5335"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_539D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_5335"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_5383"], ["cmp~len,0", "ja~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_5360"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [2, 0, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_538E"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,0", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 3, 3, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[2], [0, 2], [8, 9], [2], [2, 7], [1, 4], [3, 5], [3], [], []], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_53C5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_53C3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 10, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_53E5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_53E3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_5434"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_5420"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 1, 1, 1, -1, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[3, 5], [0, 4], [], [2], [2], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_5473"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 4, 2, 0, 4, 0, 1, 0, 0, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jnz     short loc_5512"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jnz~FOO"]], [2, 0, 4, 0, 0, 12, 1, 1, 1, 2, 0.1, ["movzx   eax, byte ptr [p1]", "lea     ecx, [__c-41h]", "lea     edx, [__c+20h]", "cmp     ecx, 1Ah", "cmovb   eax, edx", "movzx   edx, byte ptr [p2]", "lea     r9d, [__c-41h]", "lea     r8d, [__c+20h]", "cmp     r9d, 1Ah", "cmovb   edx, r8d", "test    al, al", "jnz     short loc_54E0"], ["movzx~eax,<TAG>", "lea~ecx,[__c-41h]+0]", "lea~edx,[__c+0]", "cmp~ecx,0", "cmovb~eax,edx", "movzx~edx,<TAG>", "lea~r9d,[__c-41h]+0]", "lea~r8d,[__c+0]", "cmp~r9d,0", "cmovb~edx,r8d", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "cmp     p1, p2", "jnz     short loc_54EC"], ["xor~eax,eax", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0.05, ["jmp     short locret_551A"], ["jmp~FOO"]], [0, 0, 1, 1, 0, 3, 0, 0, 2, 1, 0.1, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 4, 0, 6, 8, 2, 24, 0.04167, 0, 3], "succs": [[1, 4], [0, 4], [1, 3], [5], [5], []], "fname": "c_strcasecmp", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 40, 0, 0, 3, 0, 0, 0, 0, 0.057467532467532466, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      short loc_5860"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 12, -1, 0.20097402597402597, ["cmp     edi, 23h ; '#'", "jz      loc_5879"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 16, -1, 0.0022727272727272726, ["test    dl, dl", "jz      short loc_5893"], ["test~dl,dl", "jz~FOO"]], [3, 0, 45, 0, 0, 4, 0, 0, 3, -1, 0.05551948051948052, ["lea     r13, aUsrLocalLib; \"/usr/local/lib\"", "mov     edi, 1Dh; size", "mov     r12d, 0Fh", "mov     r14d, 0Eh"], ["lea~r13,<TAG>", "mov~edi,0", "mov~r12d,0", "mov~r14d,0"]], [0, 0, 54, 0, 1, 5, 1, 2, 2, 4, 0.03214285714285714, ["lea     rdi, name; \"CHARSETALIASDIR\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      short loc_5670"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 3, 3, 0.006818181818181818, ["cmp     byte ptr [rax], 0", "jz      short loc_5670"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     aliases", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~aliases", "retn"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, -1, 0.03506493506493506, ["cmp     byte ptr [codeset], 0", "lea     rax, aAscii; \"ASCII\"", "cmovz   codeset, rax", "mov     rcx, [rsp+0D8h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbx", "jnz     loc_5958"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "cmovz~codeset,rax", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 15, -1, 0.11883116883116883, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_5771"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 14, -1, 0.11818181818181818, ["mov     rdx, r13"], ["mov~rdx,r13"]], [1, 0, 40, 0, 0, 7, 1, 0, 7, -1, 0.13636363636363635, ["lea     rax, [rsp+0D8h+var_78]", "mov     [rsp+0D8h+var_D8], 0", "xor     r15d, r15d", "mov     [rsp+0D8h+var_D0], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+src], rax", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [3, 0, 41, 1, 1, 12, 1, 2, 6, -1, 0.1474025974025974, ["add     r12, rbp", "mov     rax, 2E74657372616863h", "lea     rsi, modes; \"r\"", "mov     [r12], rax", "mov     eax, 73h ; 's'", "mov     dword ptr [r12+8], 61696C61h", "mov     [r12+0Ch], ax", "mov     rdi, rbp; filename", "call    _fopen", "test    rax, rax", "mov     r14, rax", "jz      loc_58B4"], ["add~r12,rbp", "mov~rax,0", "lea~rsi,<TAG>", "mov~<TAG>,rax", "mov~eax,0", "mov~[word ptr [r12+0],0", "mov~[r12+0],ax", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 9, -1, 0.14788961038961038, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "mov     edi, eax", "jnz     loc_5729"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "mov~edi,eax", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 8, -1, 0.25941558441558443, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jnb     loc_5900"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jnb~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 14, -1, 0.023051948051948053, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "setnz   dl", "jmp     short loc_5870"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "setnz~dl", "jmp~FOO"]], [0, 0, 44, 0, 1, 4, 1, 2, 4, -1, 0.09042207792207792, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_5656"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 45, 1, 0, 3, 0, 1, 6, 0, 0.008279220779220779, ["lea     rdi, [rax+0Fh]", "add     r12, 1", "jmp     loc_5688"], ["lea~rdi,[rax+0]", "add~r12,0", "jmp~FOO"]], [0, 0, 40, 0, 1, 6, 0, 1, 19, -1, 0.054707792207792205, ["lea     rcx, [rax+2]", "lea     rdi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _malloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax"], ["lea~rcx,[rax+0]", "lea~rdi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax"]], [4, 0, 40, 2, 0, 14, 1, 1, 18, -1, 0.12077922077922078, ["mov     esi, eax", "mov     [rsp+0D8h+var_C0], rdx", "shr     esi, 10h", "test    eax, 8080h", "cmovz   eax, esi", "lea     rsi, [r13+2]", "mov     ecx, eax", "cmovz   r13, rsi", "add     cl, al", "sbb     r13, 3", "sub     r13, [rsp+0D8h+var_D0]", "cmp     [rsp+0D8h+var_D8], 0", "lea     rax, [rdx+r13]", "jnz     loc_58DB"], ["mov~esi,eax", "mov~[rsp+0],rdx", "shr~esi,0", "test~eax,0", "cmovz~eax,esi", "lea~rsi,[r13+0]", "mov~ecx,eax", "cmovz~r13,rsi", "add~cl,al", "sbb~r13,0", "sub~r13,[rsp+0]", "cmp~<TAG>,0", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 9, 0, 2, 6, 0, 2, 4, -1, 0.002435064935064935, ["mov     rdi, aliases; s", "call    _strlen", "lea     rbp, [aliases+rax+1]", "mov     rdi, aliases; s", "call    _strlen", "lea     r15, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~rbp,[aliases+0]", "mov~rdi,aliases", "call~FOO", "lea~r15,[aliases+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, -1, 0.033116883116883114, ["cmp     bpl, 2Ah ; '*'", "jnz     short loc_5580"], ["cmp~bpl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, -1, 0.0008116883116883117, ["cmp     byte ptr [aliases+1], 0", "jnz     short loc_5580"], ["cmp~[yte ptr [aliases+0],0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 16, -1, 0.05714285714285714, ["cmp     eax, 0FFFFFFFFh", "jnz     loc_5710"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 15, -1, 0.059415584415584415, ["cmp     eax, 0Ah", "jz      short loc_5893"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 40, 0, 0, 3, 0, 0, 10, -1, 0.20876623376623377, ["lea     eax, [rdi-9]", "cmp     eax, 1", "jbe     short loc_5710"], ["lea~eax,[rdi-9]+0]", "cmp~eax,0", "jbe~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 11, -1, 0.20194805194805196, ["cmp     edi, 20h ; ' '", "jz      short loc_5710"], ["cmp~edi,<STR>", "jz~FOO"]], [2, 0, 40, 5, 2, 15, 0, 3, 21, -1, 0.05779220779220779, ["mov     r15, [rsp+0D8h+var_D8]", "mov     rdi, 0FFFFFFFFFFFFFFFEh", "mov     rsi, [rsp+0D8h+src]; src", "sub     rdi, rdx", "add     rdx, 1; n", "sub     r15, r13", "add     rdi, r15", "add     rdi, r12; dest", "call    _memcpy", "mov     rsi, [rsp+0D8h+var_D0]; src", "lea     rdi, [r12+r15-1]; dest", "lea     rdx, [r13+1]; n", "mov     r15, r12", "call    _memcpy", "jmp     loc_5710"], ["mov~r15,<TAG>", "mov~rdi,0", "mov~rsi,[rsp+0]", "sub~rdi,rdx", "add~rdx,0", "sub~r15,r13", "add~rdi,r15", "add~rdi,r12", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[r12+0]", "lea~rdx,[r13+0]", "mov~r15,r12", "call~FOO", "jmp~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 20, -1, 0.12272727272727273, ["test    r12, r12", "jz      loc_5915"], ["test~r12,r12", "jz~FOO"]], [0, 0, 40, 1, 1, 9, 0, 2, 19, -1, 0.054707792207792205, ["add     rax, [rsp+0D8h+var_D8]", "mov     rdi, r15; ptr", "lea     rcx, [rax+2]", "lea     rsi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _realloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax", "jmp     loc_5817"], ["add~rax,<TAG>", "mov~rdi,r15", "lea~rcx,[rax+0]", "lea~rsi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 21, -1, 0.053246753246753244, ["test    r15, r15", "jz      short loc_5933"], ["test~r15,r15", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 7, -1, 0.04496753246753247, ["lea     r15, aUsageSOptionFi+1Dh; \"\""], ["lea~r15,<TAG>"]], [0, 0, 13, 0, 1, 5, 1, 2, 11, -1, 0.0775974025974026, ["mov     rdi, r14; stream", "call    _fclose", "mov     rax, [rsp+0D8h+var_D8]", "test    rax, rax", "jz      short loc_58B4"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, -1, 0.12840909090909092, ["movzx   ebp, byte ptr [aliases]", "test    bpl, bpl", "jz      short loc_55CC"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [2, 0, 56, 1, 1, 19, 3, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     edi, 0Eh; item", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    _nl_langinfo", "mov     r15, cs:charset_aliases", "test    rax, rax", "mov     rbx, rax", "lea     codeset, aUsageSOptionFi+1Dh; \"\"", "cmovz   codeset, rax", "test    r15, r15", "jnz     short loc_559A"], ["push~r15", "push~r14", "mov~edi,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~rax,rax", "mov~rbx,rax", "lea~codeset,<TAG>", "cmovz~codeset,rax", "test~r15,r15", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, -1, 0.1344155844155844, ["mov     cs:charset_aliases, r15", "jmp     loc_559A"], ["mov~<TAG>,r15", "jmp~FOO"]], [0, 0, 55, 0, 0, 1, 0, 1, 1, 5, 0.014935064935064935, ["jmp     loc_5610"], ["jmp~FOO"]], [1, 0, 42, 0, 1, 5, 0, 1, 5, -1, 0.07792207792207792, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "mov     byte ptr [rbp+r14+0], 2Fh ; '/'"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[yte ptr [rbp+0],0"]], [1, 0, 40, 0, 2, 11, 1, 3, 13, -1, 0.1357142857142857, ["mov     rsi, r14; stream", "call    _ungetc", "mov     r13, [rsp+0D8h+src]", "mov     rcx, [rsp+0D8h+var_D0]", "lea     rsi, a50s50s; \"%50s %50s\"", "xor     eax, eax", "mov     rdi, r14; stream", "mov     rdx, r13", "call    _fscanf", "cmp     eax, 1", "jle     loc_589C"], ["mov~rsi,r14", "call~FOO", "mov~r13,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "xor~eax,eax", "mov~rdi,r14", "mov~rdx,r13", "call~FOO", "cmp~eax,0", "jle~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 9, -1, 0.10016233766233766, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   edi, byte ptr [rax]; c"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~edi,<TAG>"]], [3, 0, 40, 2, 0, 11, 1, 0, 16, -1, 0.11948051948051948, ["mov     ecx, eax", "mov     r13, [rsp+0D8h+var_D0]", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "cmovz   rdx, rcx", "mov     ecx, eax", "add     cl, al", "sbb     rdx, 3", "sub     rdx, [rsp+0D8h+src]"], ["mov~ecx,eax", "mov~r13,[rsp+0]", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "cmovz~rdx,rcx", "mov~ecx,eax", "add~cl,al", "sbb~rdx,0", "sub~rdx,[rsp+0]"]], [0, 0, 14, 0, 0, 1, 0, 1, 10, -1, 0.04025974025974026, ["jmp     short loc_589C"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 2, -1, 0.06493506493506493, ["mov     rsi, aliases; s2", "mov     rdi, codeset; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_55BF"], ["mov~rsi,aliases", "mov~rdi,codeset", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 2, 6, 0, 3, 22, -1, 0.01607142857142857, ["mov     rdi, r15; ptr", "lea     r15, aUsageSOptionFi+1Dh; \"\"", "call    _free", "mov     rdi, r14; stream", "call    _fclose", "jmp     short loc_58BB"], ["mov~rdi,r15", "lea~r15,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, -1, 0.030357142857142857, ["mov     byte ptr [r15+rax], 0", "jmp     short loc_58BB"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 51, 0, 1, 6, 1, 2, 4, 2, 0.007792207792207792, ["mov     rdi, rax; s", "call    _strlen", "test    rax, rax", "mov     r12, rax", "mov     r14, rax", "jnz     loc_5947"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~r14,rax", "jnz~FOO"]], [1, 0, 45, 0, 0, 1, 0, 0, 5, -1, 0.017207792207792207, ["mov     edi, 0Eh; size"], ["mov~edi,0"]], [0, 0, 11, 0, 1, 4, 0, 2, 22, -1, 0.01607142857142857, ["mov     rdi, r14; stream", "lea     r15, aUsageSOptionFi+1Dh; \"\"", "call    _fclose", "jmp     loc_58BB"], ["mov~rdi,r14", "lea~r15,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 8, -1, 0.10714285714285714, ["mov     rdi, rbp; ptr", "call    _free", "jmp     loc_565D"], ["mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 17, -1, 0.12012987012987013, ["mov     esi, [r13+0]", "add     r13, 4", "lea     eax, [rsi-1010101h]", "not     esi", "and     eax, esi", "and     eax, 80808080h", "jz      short loc_57AF"], ["mov~esi,[r13+0]", "add~r13,0", "lea~eax,[rsi-1010101h]+0]", "not~esi", "and~eax,esi", "and~eax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 3, -1, 0.002435064935064935, ["mov     rdi, aliases; s", "call    _strlen", "lea     codeset, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~codeset,[aliases+0]"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 1, 0.003896103896103896, ["cmp     byte ptr [r13+rax-1], 2Fh ; '/'", "jnz     short loc_595D"], ["cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [0, 0, 44, 0, 1, 4, 1, 2, 6, -1, 0.051461038961038964, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jnz     loc_58C8"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [0, 0, 45, 0, 0, 2, 0, 1, 6, -1, 0.00762987012987013, ["lea     rdi, [rax+0Eh]", "jmp     loc_5645"], ["lea~rdi,[rax+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.03603896103896104, ["lea     r15, aUsageSOptionFi+1Dh; \"\""], ["lea~r15,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 42, 0, 1, 5, 0, 2, 7, -1, 0.046753246753246755, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "jmp     loc_56A9"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 40, 0, 0, 4, 0, 0, 14, -1, 0.023051948051948053, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   eax, byte ptr [rax]", "mov     edx, 1"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~eax,<TAG>", "mov~edx,0"]]], "func_feature": [26, 23, 65, 5, 57, 84, 1, 265, 0.06829, 8, 16], "succs": [[56, 14], [0, 37], [0, 22], [15], [3, 5], [3, 44], [], [54, 6], [8, 39], [8], [13], [10, 30], [24, 40], [12, 38], [23], [36, 53], [15], [27], [17, 28], [32], [19, 21], [49, 19], [13, 31], [2, 22], [25, 13], [1, 13], [13], [26, 29], [27], [42, 46], [47], [43, 30], [41, 7], [32, 35], [32], [4], [11], [9, 31], [24], [48], [31], [49, 20], [47], [47], [50, 45], [51], [47], [34], [48, 18], [7], [16, 52], [53, 55], [51], [34], [], [11], [23]], "fname": "locale_charset", "n_num": 57}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 20, 0, 0, 3, 0, 1, 0, 0, 0.10398860398860399, ["movzx   eax, byte ptr [needle+i-1]", "cmp     al, [needle+j]", "jnz     short loc_5A1D"], ["movzx~eax,[yte ptr [needle+0]", "cmp~al,<TAG>", "jnz~FOO"]], [1, 0, 20, 1, 0, 3, 0, 1, 9, 5, 0.15527065527065528, ["add     i, 1", "cmp     m, i", "jnz     short loc_5A00"], ["add~i,0", "cmp~m,i", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 0, 5, 9, 0.05982905982905983, ["xor     edx, edx", "mov     ecx, 2"], ["xor~edx,edx", "mov~ecx,0"]], [0, 0, 20, 0, 0, 1, 0, 1, 7, 7, 0.038461538461538464, ["jmp     loc_5AC0"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-20h]", "pop     needle", "pop     resultp", "pop     r13", "pop     m", "pop     rbp", "retn"], ["lea~rsp,[rbp-20h]+0]", "pop~needle", "pop~resultp", "pop~r13", "pop~m", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.07122507122507123, ["mov     rsi, [rbp+var_28]", "xor     rsi, fs:28h", "jnz     short loc_5AEE"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 1, 0, 3, 0, 1, 8, 7, 0.0014245014245014246, ["sub     j, [table+j*8]", "cmp     al, [needle+j]", "jz      loc_5AC0"], ["sub~j,<TAG>", "cmp~al,<TAG>", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 7, 7, 0.05840455840455841, ["test    j, j", "jnz     short loc_5A10"], ["test~j,j", "jnz~FOO"]], [1, 0, 12, 1, 0, 4, 0, 1, 8, 4, 0.06267806267806268, ["add     j, 1", "lea     rsi, [phaystack+1]", "cmp     m, j", "jz      short loc_5AE5"], ["add~j,0", "lea~rsi,[phaystack+0]", "cmp~m,j", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.16809116809116809, ["cmp     [needle+j], dl", "jz      short loc_5A90"], ["cmp~<TAG>,dl", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 9, 4, 0.008547008547008548, ["movzx   edx, byte ptr [rcx+1]", "mov     rcx, phaystack", "jmp     short loc_5A48"], ["movzx~edx,[yte ptr [rcx+0]", "mov~rcx,phaystack", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 0, 8, 6, 0.04700854700854701, ["mov     [table+i*8], i", "xor     edx, edx"], ["mov~<TAG>,i", "xor~edx,edx"]], [2, 0, 27, 1, 1, 19, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     r13, haystack", "mov     haystack, needle; s", "mov     rbx, needle", "mov     r12, resultp", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "call    _strlen", "mov     r14, rax", "mov     m, 1FFFFFFFFFFFFFFFh", "cmp     m, rax", "ja      loc_5A70"], ["push~rbp", "mov~rbp,rsp", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~r13,haystack", "mov~haystack,needle", "mov~rbx,needle", "mov~r12,resultp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,rax", "mov~m,0", "cmp~m,rax", "ja~FOO"]], [2, 0, 12, 2, 0, 4, 0, 1, 9, 4, 0.002849002849002849, ["movzx   edx, byte ptr [phaystack+1]", "add     rhaystack, 1", "add     rcx, 1", "jmp     short loc_5A48"], ["movzx~edx,[yte ptr [phaystack+0]", "add~rhaystack,0", "add~rcx,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, 4, 0.06125356125356125, ["test    j, j", "jz      short loc_5AB0"], ["test~j,j", "jz~FOO"]], [1, 0, 12, 0, 0, 5, 1, 0, 5, 4, 0.21794871794871795, ["mov     qword ptr [resultp], 0", "movzx   edx, byte ptr [phaystack+0]", "mov     rcx, phaystack", "xor     eax, eax", "nop     dword ptr [j+j+00h]"], ["mov~<TAG>,0", "movzx~edx,[yte ptr [phaystack+0]", "mov~rcx,phaystack", "xor~eax,eax", "nop~[word ptr [j+0]"]], [2, 0, 21, 0, 0, 3, 0, 0, 4, 5, 0.12820512820512822, ["cmp     m, 2", "mov     qword ptr [table+8], 1", "jbe     short loc_5A31"], ["cmp~m,0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [1, 0, 26, 0, 0, 3, 0, 1, 1, 5, 0.03133903133903134, ["lea     rdi, ds:0[m*8]; n", "cmp     rdi, 0FAFh", "ja      loc_5AD8"], ["lea~rdi,<TAG>", "cmp~rdi,0", "ja~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 6, 3, 0.24786324786324787, ["test    dl, dl", "jz      short loc_5A64"], ["test~dl,dl", "jz~FOO"]], [1, 0, 20, 2, 0, 5, 0, 1, 8, 6, 0.07264957264957266, ["add     j, 1", "mov     b, i", "sub     rax, j", "mov     [table+i*8], rax", "jmp     loc_5A28"], ["add~j,0", "mov~b,i", "sub~rax,j", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 12, 2, 0, 5, 1, 1, 9, 3, 0.014245014245014245, ["mov     rsi, [table+j*8]", "add     rhaystack, rsi", "sub     j, rsi", "test    dl, dl", "jnz     short loc_5A4C"], ["mov~rsi,<TAG>", "add~rhaystack,rsi", "sub~j,rsi", "test~dl,dl", "jnz~FOO"]], [4, 0, 24, 3, 0, 6, 2, 0, 2, 4, 0.03133903133903134, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     rdi, [rsp+30h+var_28+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "add     rdi, 10h; p"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~rdi,[rsp+0]", "and~rdi,0", "add~rdi,0"]], [0, 0, 24, 0, 1, 3, 0, 2, 2, 4, 0.03133903133903134, ["call    mmalloca", "mov     rdi, rax", "jmp     loc_59E2"], ["call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 3, 3, 0.12535612535612536, ["test    table, table", "jz      loc_5A70"], ["test~table,table", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 3, 0.008547008547008548, ["mov     [resultp], rhaystack", "jmp     loc_5A64"], ["mov~<TAG>,rhaystack", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.07692307692307693, ["call    freea", "mov     eax, 1", "jmp     short loc_5A72"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 0.021367521367521368, ["xor     eax, eax"], ["xor~eax,eax"]]], "func_feature": [4, 13, 24, 1, 28, 40, 1, 101, 0.06593, 1, 13], "succs": [[8, 3], [0, 16], [0], [20], [], [4, 6], [], [8, 20], [12, 7], [25, 11], [9, 15], [19], [1], [18, 27], [19], [21, 14], [19], [16, 2], [22, 23], [10, 26], [1], [10, 26], [24], [24], [17, 27], [26], [5], [5]], "fname": "knuth_morris_pratt_unibyte", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 88, 2, 0, 4, 0, 1, 0, 0, 0.06106442577030812, ["add     i, 1", "add     b, 30h", "cmp     [rbp+m], i", "jnz     loc_5D80"], ["add~i,0", "add~b,0", "cmp~[rbp+0],i", "jnz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 15, 10, 0.0163515406162465, ["mov     [table+i*8+0], i", "jmp     loc_5DF1"], ["mov~[table+0],i", "jmp~FOO"]], [1, 0, 88, 2, 0, 4, 0, 0, 15, 10, 0.03546918767507003, ["add     j, 1", "mov     rax, i", "sub     rax, j", "mov     [table+i*8+0], rax"], ["add~j,0", "mov~rax,i", "sub~rax,j", "mov~[table+0],rax"]], [2, 0, 76, 0, 0, 3, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_62D1"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 21, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6491"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 114, 0, 0, 9, 1, 0, 6, 8, 0.10560224089635854, ["mov     rcx, [rbp+needle]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_5F88"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 5, 6, 0.1226890756302521, ["cmp     [rbp+var_100], 0", "jz      loc_5BF0"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_5ED9"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 19, 5, 0.0819327731092437, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      short loc_6200"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 14, 11, 0.01803221288515406, ["mov     [rbp+phaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+phaystack.cur.wc_valid], 1", "mov     [rbp+phaystack.next_done], 1", "mov     [rbp+phaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [2, 0, 76, 0, 0, 9, 1, 0, 13, 8, 0.040686274509803916, ["mov     rcx, [rbp+phaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jb      short loc_6000"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jb~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 13, 10, 0.06600140056022409, ["mov     edx, [rbp+phaystack.cur.wc]", "test    edx, edx", "jz      loc_6130"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 11, 0.23399859943977588, ["cmp     [rbp+phaystack.cur.wc_valid], 0", "jnz     loc_6016"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 11, 0.0005602240896358543, ["mov     [rbp+phaystack.next_done], 1", "jmp     loc_6016"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 76, 0, 1, 6, 0, 2, 15, 11, 0.0038982259570494865, ["mov     rdi, [rbp+phaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.cur.bytes], rax", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_5E8A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 14, 4, 0.060784313725490195, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6410"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 76, 0, 1, 5, 1, 2, 15, 9, 0.012138188608776844, ["mov     rsi, [rbp+phaystack.cur.ptr]; s2", "mov     rdi, [rax]; s1", "call    _memcmp", "test    eax, eax", "jnz     loc_5EA3"], ["mov~rsi,[rbp+0]", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 14, 9, 0.29623015873015873, ["mov     rdx, [rax+8]; n", "cmp     rdx, [rbp+phaystack.cur.bytes]", "jz      loc_6220"], ["mov~rdx,[rax+0]", "cmp~rdx,[rbp+0]", "jz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 14, 9, 0.06196311858076563, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory", "cmp     byte ptr [rax+10h], 0", "jz      loc_5E95"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 5, 1, 1, 17, 10, 0.02131185807656396, ["mov     edx, [rbp+phaystack.cur.wc]", "mov     [rbp+phaystack.in_shift], 0", "mov     [rbp+phaystack.next_done], 1", "test    edx, edx", "jnz     loc_6021"], ["mov~edx,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "test~edx,edx", "jnz~FOO"]], [1, 0, 114, 0, 0, 5, 0, 0, 7, 11, 0.10539215686274508, ["mov     [rbp+n], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+var_E0], r14b", "mov     [rbp+var_F4], r14b", "mov     [rbp+var_DC], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],r14b", "mov~[rbp+0],r14b", "mov~[rbp+0],eax"]], [0, 0, 76, 0, 0, 1, 0, 1, 16, 8, 0.0060107376283846875, ["jmp     loc_603F"], ["jmp~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 15, 8, 0.04137488328664799, ["cmp     [rax+14h], edx", "jnz     loc_5EA3"], ["cmp~[rax+0],edx", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 8, 10, 0.14443277310924368, ["mov     r8d, [rbp+var_DC]", "test    r8d, r8d", "jz      loc_5D58"], ["mov~r8d,[rbp+0]", "test~r8d,r8d", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 10, 11, 0.025175070028011202, ["mov     [rbp+var_F4], r14b", "jmp     loc_5C37"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 9, 11, 0.011064425770308122, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 114, 0, 0, 5, 1, 1, 10, 11, 0.03175770308123249, ["mov     r8d, [rbp+var_DC]", "mov     [rbp+var_100], 0", "mov     [rbp+var_F4], r14b", "test    r8d, r8d", "jnz     loc_5C47"], ["mov~r8d,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],r14b", "test~r8d,r8d", "jnz~FOO"]], [2, 0, 76, 2, 0, 6, 0, 1, 16, 7, 0.03075396825396825, ["add     j_0, 1", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "cmp     [rbp+m], j_0", "mov     [rbp+phaystack.next_done], 0", "jz      loc_64BC"], ["add~j_0,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "cmp~[rbp+0],j_0", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 21, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_5ED9"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 20, 4, 0.05511204481792717, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6240"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 114, 0, 1, 7, 1, 2, 8, 11, 0.000980392156862745, ["mov     rdi, [rbp+needle]; s", "call    _strlen", "mov     [rbp+var_E0], 0", "mov     [rbp+n], rax", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_5C4C"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 7, 4, 0.035364145658263305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6439"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 6, 0.18970588235294114, ["cmp     [rbp+phaystack.in_shift], 0", "jnz     short loc_6098"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 11, 7, 0.3144491129785247, ["test    al, al", "jz      loc_605C"], ["test~al,al", "jz~FOO"]], [2, 0, 76, 2, 0, 7, 0, 1, 18, 7, 0.08781512605042016, ["mov     rax, [rbp+rhaystack.cur.bytes]", "mov     [rbp+rhaystack.next_done], 0", "add     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.next_done], 0", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "jmp     loc_605C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "add~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 114, 0, 0, 5, 0, 1, 8, 10, 0.04012605042016806, ["mov     rsi, [rbp+needle]; src", "lea     rcx, [rbx+28h]", "mov     rdx, [rbp+n]; n", "cmp     rsi, rcx", "jz      loc_5FB0"], ["mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "mov~rdx,[rbp+0]", "cmp~rsi,rcx", "jz~FOO"]], [2, 0, 114, 0, 0, 5, 1, 1, 7, 11, 0.006302521008403361, ["mov     [rbp+n], 1", "mov     [rbp+var_E0], 0", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_5C4C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 114, 0, 0, 1, 0, 0, 9, 9, 0.022058823529411763, ["mov     [r15], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 114, 0, 1, 5, 1, 2, 9, 12, 0.052941176470588235, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+var_E0], r14b", "call    _mbsinit", "test    eax, eax", "jz      loc_6461"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],r14b", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_5F4C"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 22, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_6260"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [8, 0, 76, 1, 0, 19, 2, 0, 10, 8, 0.2230392156862745, ["mov     rax, [rbp+resultp]", "lea     rbx, [rbp+phaystack]", "mov     [rbp+rhaystack.in_shift], 0", "mov     qword ptr [rbp+rhaystack.state.__count], 0", "mov     [rbp+rhaystack.next_done], 0", "xor     r15d, r15d", "mov     [rbp+ps], rbx", "add     rbx, 4", "mov     [rbp+phaystack.in_shift], 0", "mov     qword ptr [rax], 0", "mov     rax, [rbp+haystack]", "mov     [rbp+var_120], rbx", "lea     rbx, [rbp+rhaystack]", "mov     qword ptr [rbp+phaystack.state.__count], 0", "mov     [rbp+phaystack.next_done], 0", "mov     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.cur.ptr], rax", "xor     eax, eax", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rbp+0]", "lea~rbx,[rbp+0]", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "xor~r15d,r15d", "mov~[rbp+0],rbx", "add~rbx,0", "mov~[rbp+0],0", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rbx", "lea~rbx,[rbp+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],rax", "xor~eax,eax", "nop~[word ptr [rax+0]"]], [2, 0, 89, 0, 0, 3, 0, 0, 9, 9, 0.1811624649859944, ["cmp     [rbp+m], 2", "mov     qword ptr [table+8], 1", "jbe     loc_5E06"], ["cmp~[rbp+0],0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [0, 0, 114, 0, 0, 4, 1, 1, 10, 8, 0.05798319327731092, ["test    al, al", "mov     [r15+8], rdx", "mov     [r15+10h], al", "jz      short loc_5C80"], ["test~al,al", "mov~[r15+0],rdx", "mov~[r15+0],al", "jz~FOO"]], [0, 0, 114, 0, 1, 7, 0, 2, 9, 9, 0.022058823529411763, ["lea     rcx, [r15+18h]", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rdx, [rbp+n]", "mov     [r15], rax", "movzx   eax, [rbp+var_E0]", "jmp     loc_5C6A"], ["lea~rcx,[r15+0]", "mov~rdi,rcx", "call~FOO", "mov~rdx,[rbp+0]", "mov~<TAG>,rax", "movzx~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 16, 7, 0.14124649859943977, ["cmp     [rbp+rhaystack.next_done], 0", "jnz     loc_6338"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 8, 0.29704715219421096, ["test    j_0, j_0", "jz      loc_6270"], ["test~j_0,j_0", "jz~FOO"]], [0, 0, 76, 1, 0, 7, 1, 1, 16, 8, 0.1456465919701214, ["mov     r14, [table+j_0*8+0]", "mov     rax, j_0", "sub     rax, count", "test    count, count", "mov     [rbp+haystack], rax", "movzx   eax, [rbp+phaystack.next_done]", "jz      short loc_5E78"], ["mov~r14,[table+0]", "mov~rax,j_0", "sub~rax,count", "test~count,count", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.07163865546218487, ["movzx   eax, [rbp+phaystack.next_done]", "mov     r15, [rbp+haystack]", "jmp     loc_5E78"], ["movzx~eax,[rbp+0]", "mov~r15,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 2, 0, 0, 11, 8, 0.0, ["mov     eax, [rbp+var_DC]", "mov     [r15+14h], eax"], ["mov~eax,[rbp+0]", "mov~[r15+0],eax"]], [2, 0, 76, 0, 0, 3, 0, 1, 19, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_62DF"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 18, 5, 0.08137254901960783, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      loc_646D"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 117, 0, 1, 3, 0, 2, 2, 9, 0.008053221288515405, ["call    mmalloca", "mov     r12, rax", "jmp     loc_5B94"], ["call~FOO", "mov~r12,rax", "jmp~FOO"]], [2, 0, 119, 2, 0, 6, 0, 1, 1, 10, 0.008053221288515405, ["mov     rax, [rbp+m]", "lea     rdi, ds:0[rax*8]", "sub     rdi, rax", "shl     rdi, 3; n", "cmp     rdi, 0FAFh", "ja      loc_6484"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rdi,rax", "shl~rdi,0", "cmp~rdi,0", "ja~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 14, 7, 0.012499999999999999, ["mov     rdi, [rbp+var_120]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 114, 2, 0, 4, 0, 0, 11, 7, 0.06988795518207283, ["mov     rax, [rbp+n]", "add     [rbp+needle], rax", "add     r15, 30h", "mov     [rbp+var_F4], 0"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "add~r15,0", "mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 1, 0, 0, 15, 6, 0.006022408963585434, ["mov     [rbp+phaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 2, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_62D1"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 2, 0, 3, 0, 0, 13, 10, 0.28054388422035476, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory"]], [5, 0, 114, 2, 0, 14, 0, 1, 4, 7, 0.038865546218487396, ["mov     rax, [rbp+m]", "mov     [rbp+needle], needle_0", "lea     needle_0, [rbp+var_100]", "mov     [rbp+var_100], 0", "mov     [rbp+var_FC], 0", "mov     r15, memory", "mov     [rbp+var_F4], 0", "mov     r14d, 1", "lea     r13, [rax+rax*2]", "lea     rax, [rbx+4]", "shl     r13, 4", "mov     [rbp+ps], rax", "add     r13, memory", "jmp     loc_5C99"], ["mov~rax,[rbp+0]", "mov~[rbp+0],needle_0", "lea~needle_0,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~r15,memory", "mov~[rbp+0],0", "mov~r14d,0", "lea~r13,<TAG>", "lea~rax,[rbx+0]", "shl~r13,0", "mov~[rbp+0],rax", "add~r13,memory", "jmp~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 18, 8, 0.023739495798319327, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6358"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 6, 0.10406162464985994, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_6370"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 20, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_62DF"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 19, 4, 0.05455182072829131, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_649D"], ["cmp~rax,0", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 19, 9, 0.004271708683473389, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 76, 0, 3, 13, 0, 4, 13, 5, 0.15014005602240893, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+phaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+ps]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rbp+phaystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+phaystack.cur.bytes], rax", "jz      loc_6320"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rbp+0]", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 7, 0.1262955182072829, ["cmp     [rbp+rhaystack.next_done], 0", "jz      short loc_5EF8"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 8, 0.02584033613445378, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jnz     short loc_5F4C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04726890756302521, ["mov     edx, [rbp+rhaystack.cur.wc]", "test    edx, edx", "jz      loc_5F56"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 76, 0, 0, 1, 0, 1, 18, 9, 0.009453781512605041, ["jmp     short loc_62D1"], ["jmp~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 17, -1, 0.0018907563025210082, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     rbx, [rbp+resultp]", "mov     rdi, memory; p", "mov     [rbx], rax", "call    freea", "mov     eax, 1", "jmp     loc_5F62"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "mov~rdi,memory", "mov~<TAG>,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 114, 0, 3, 12, 0, 4, 6, 5, 0.0376750700280112, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+needle]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+needle]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; iter", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+n], rax", "jz      loc_5FD8"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 8, 6, 0.008683473389355741, ["mov     [rbp+var_100], r14b", "jmp     loc_5CA6"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 3, 0.04673202614379085, ["test    rax, rax", "jnz     short loc_6101"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 114, 0, 0, 2, 1, 1, 8, 3, 0.03837535014005602, ["test    rax, rax", "jnz     short loc_5D1C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 16, 2, 0.014775910364145658, ["mov     rax, [rbp+phaystack.cur.ptr]", "mov     [rbp+phaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 19, 7, 0.08928571428571427, ["mov     rax, [rbp+rhaystack.cur.bytes]", "add     [rbp+rhaystack.cur.ptr], rax", "sub     r14, 1", "mov     [rbp+rhaystack.next_done], 0", "jz      loc_6308"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "sub~r14,0", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04236694677871148, ["mov     esi, [rbp+rhaystack.cur.wc]", "test    esi, esi", "jnz     short loc_5ED9"], ["mov~esi,[rbp+0]", "test~esi,esi", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 114, 0, 1, 4, 1, 2, 7, 7, 0.004201680672268907, ["mov     rdi, [rbp+ps]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 20, 7, 0.00976890756302521, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 19, 7, 0.009313725490196078, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_64DF"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 17, 1, 0.008578431372549019, ["mov     eax, [rbp+phaystack.cur.wc]", "test    eax, eax", "jnz     loc_6522"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.015966386554621848, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_64FE"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 6, 0.1054971988795518, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_6160"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 8, 0.02703081232492997, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jz      short loc_62DF"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 114, 0, 0, 4, 0, 1, 9, 2, 0.004971988795518207, ["mov     rax, [rbp+needle]", "mov     [rbp+n], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 10, 1, 0.009313725490196078, ["mov     r9d, [rbp+var_DC]", "test    r9d, r9d", "jnz     loc_6522"], ["mov~r9d,[rbp+0]", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 76, 0, 1, 6, 1, 2, 16, 11, 0.03202614379084967, ["mov     rax, [rbp+ps]", "mov     [rbp+phaystack.cur.wc_valid], 1", "lea     rdi, [rax+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6430"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 22, 2, 0.010154061624649859, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 21, 2, 0.009593837535014004, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6503"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 23, 1, 0.006337535014005601, ["mov     edi, [rbp+rhaystack.cur.wc]", "test    edi, edi", "jnz     loc_6522"], ["mov~edi,[rbp+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 22, 1, 0.006092436974789915, ["mov     ecx, [rbp+rhaystack.cur.wc]", "test    ecx, ecx", "jnz     loc_6522"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "jnz~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 19, 8, 0.02461484593837535, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6148"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [3, 0, 76, 0, 0, 4, 0, 1, 14, 11, 0.0792016806722689, ["mov     [rbp+phaystack.cur.bytes], 1", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_5E8A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 14, -1, 0.0203781512605042, ["mov     rdi, memory; p", "call    freea", "mov     eax, 1", "jmp     loc_5F62"], ["mov~rdi,memory", "call~FOO", "mov~eax,0", "jmp~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 20, 9, 0.00469187675070028, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 88, 0, 0, 2, 1, 1, 14, 11, 0.017401960784313726, ["test    j, j", "jz      loc_6348"], ["test~j,j", "jz~FOO"]], [0, 0, 90, 0, 0, 1, 0, 0, 11, 10, 0.03091736694677871, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 76, 0, 0, 3, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_5F4C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 21, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.0010504201680672268, ["xor     eax, eax"], ["xor~eax,eax"]], [2, 0, 120, 1, 1, 21, 1, 2, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 108h", "mov     [rbp+haystack], haystack_0", "mov     haystack_0, needle_0; string", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+resultp], resultp_0", "call    mbslen", "mov     rsi, rax", "mov     [rbp+m], rax", "mov     m_0, 492492492492492h", "cmp     m_0, rax", "ja      loc_5F60"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~[rbp+0],haystack_0", "mov~haystack_0,needle_0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],resultp_0", "call~FOO", "mov~rsi,rax", "mov~[rbp+0],rax", "mov~m_0,0", "cmp~m_0,rax", "ja~FOO"]], [0, 0, 116, 0, 0, 2, 1, 1, 3, 8, 0.03221288515406162, ["test    memory, memory", "jz      loc_5F60"], ["test~memory,memory", "jz~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 20, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 88, 0, 0, 4, 1, 0, 10, 15, 0.02387955182072829, ["lea     r14, [memory+30h]", "xor     ebx, ebx", "mov     r15d, 2", "nop     dword ptr [rax+rax+00h]"], ["lea~r14,[memory+0]", "xor~ebx,ebx", "mov~r15d,0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 88, 0, 0, 2, 0, 1, 11, 14, 0.029551820728291316, ["movzx   ecx, byte ptr [b+10h]", "jmp     short loc_5DAD"], ["movzx~ecx,[yte ptr [b+0]", "jmp~FOO"]], [4, 0, 117, 3, 0, 6, 2, 0, 2, 9, 0.008053221288515405, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     r12, [rsp+130h+resultp+7]", "and     r12, 0FFFFFFFFFFFFFFF0h", "add     r12, 10h"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~r12,[rsp+0]", "and~r12,0", "add~r12,0"]], [1, 0, 88, 0, 0, 2, 0, 1, 13, 12, 0.012254901960784315, ["cmp     byte ptr [rax+10h], 0", "jz      short loc_5DBC"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 88, 2, 0, 5, 1, 1, 12, 13, 0.04005602240896358, ["lea     rax, [j+j*2]", "shl     rax, 4", "add     rax, memory", "test    cl, cl", "jnz     short loc_5D90"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "test~cl,cl", "jnz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 14, 11, 0.015126050420168066, ["mov     eax, [rax+14h]", "cmp     [b+14h], eax", "jz      short loc_5DE2"], ["mov~eax,[rax+0]", "cmp~[b+0],eax", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 13, 12, 0.028291316526610648, ["mov     rdx, [b+8]; n", "cmp     rdx, [rax+8]", "jnz     short loc_5D9F"], ["mov~rdx,[b+0]", "cmp~rdx,[rax+0]", "jnz~FOO"]], [0, 0, 88, 0, 1, 7, 1, 2, 14, 11, 0.01221988795518207, ["mov     rsi, [rax]; s2", "mov     rdi, [b]; s1", "mov     byte ptr [rbp+ps], cl", "call    _memcmp", "test    eax, eax", "movzx   ecx, byte ptr [rbp+ps]", "jnz     short loc_5D9F"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 21, 3, 0.04047619047619047, ["test    rax, rax", "jnz     short loc_61D0"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 88, 1, 0, 1, 0, 0, 15, 14, 0.0012605042016806721, ["sub     j, [table+j*8+0]"], ["sub~j,[table+0]"]], [0, 0, 76, 0, 0, 2, 1, 1, 20, 3, 0.03991596638655462, ["test    rax, rax", "jnz     short loc_63E4"], ["test~rax,rax", "jnz~FOO"]]], "func_feature": [36, 45, 127, 5, 121, 185, 1, 509, 0.04782, 6, 29], "succs": [[41, 111], [0], [0], [68], [57, 3], [20, 79], [5, 71], [76], [29, 7], [11], [9, 54], [18, 98], [58, 11], [11], [58], [73, 14], [21, 46], [16, 46], [17, 22], [18, 98], [23], [27], [27, 46], [25, 42], [23], [35], [25, 101], [32, 70], [76], [28, 118], [35], [74, 30], [65, 10], [32, 12], [32], [44, 37], [35], [43], [24, 26], [77], [102, 39], [33], [41, 109], [49, 55], [43], [61, 86], [45, 47], [33, 66], [33], [55], [34], [50, 63], [107], [112, 52], [56, 78], [6], [65], [68], [17], [6], [64, 81], [51, 60], [34], [120, 62], [68], [97, 15], [67, 85], [76, 77], [34, 103], [68], [84], [36, 31], [71], [89, 75], [38, 87], [82, 90], [48, 85], [76, 103], [], [72, 78], [104, 78], [108, 78], [89, 93], [], [83, 110], [96, 8], [34, 69], [88, 90], [93, 38], [19, 13], [], [90, 94], [90, 95], [], [40, 93], [4, 93], [80, 99], [58], [84], [77], [1, 119], [42], [77], [], [8], [84], [105, 53], [105, 59], [51], [111], [], [114], [107], [115, 116], [113, 116], [2, 100], [100, 117], [2, 100], [40, 91], [114], [4, 92]], "fname": "knuth_morris_pratt_multibyte", "n_num": 121}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 145, 0, 0, 2, 0, 1, 0, 0, 0.04475169639104065, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "jmp     loc_71E3"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 1, 7, 1, 2, 15, 8, 0.05327868852459016, ["mov     rdx, [rsp+1C8h+var_1A0]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "call    knuth_morris_pratt_multibyte", "test    al, al", "mov     byte ptr [rsp+1C8h+count], al", "jnz     loc_74F9"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "call~FOO", "test~al,al", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 10, 7, 0.0841439980784243, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_6F20"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 9, 7, 0.16258331832102324, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jz      loc_75CF"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 18, 18, 0.023809523809523808, ["mov     rcx, [rsp+1C8h+rneedle.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_6B68"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 17, 18, 0.21385035729298024, ["cmp     [rsp+1C8h+rneedle.in_shift], 0", "jnz     loc_6B81"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 21, 17, 0.026001321083288297, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6E30"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 20, 18, 0.027907884465261514, ["test    rax, rax", "jnz     short loc_6BFB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 18, 0.004924037710922957, ["mov     ecx, [rsp+1C8h+rneedle.cur.wc]", "test    ecx, ecx", "jnz     loc_72C4"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jnz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 0, 11, 6, 0.0026821994035108794, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 9, 0.06537861046057769, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_7543"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 10, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1", "jmp     loc_73D5"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 13, 10, 0.05658139674533117, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 24, 2, 1, 9, 0, 2, 9, -1, 0.0002552092716027142, ["mov     rsi, rbx", "mov     rdi, needle_last_ccount_0; string", "sub     rsi, rcx; maxlen", "call    _strnlen", "add     needle_last_ccount_0, rax", "mov     rcx, rbx", "movzx   edx, byte ptr [rsp+1C8h+count]", "cmp     byte ptr [needle_last_ccount_0+0], 0", "jnz     loc_66E0"], ["mov~rsi,rbx", "mov~rdi,needle_last_ccount_0", "sub~rsi,rcx", "call~FOO", "add~needle_last_ccount_0,rax", "mov~rcx,rbx", "movzx~edx,[yte ptr [rsp+0]", "cmp~[yte ptr [needle_last_ccount_0+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 8, -1, 0.0022818711343301507, ["test    needle_last_ccount_0, needle_last_ccount_0", "mov     byte ptr [rsp+1C8h+count], dl", "jz      short loc_661B"], ["test~needle_last_ccount_0,needle_last_ccount_0", "mov~[yte ptr [rsp+0],dl", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 11, 5, 0.20338177305390415, ["cmp     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "jz      loc_6D71"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 5, 1, 1, 14, 6, 0.1587101423166997, ["lea     rax, [last_ccount_0+1]", "test    dl, dl", "mov     [rsp+1C8h+last_ccount], last_ccount_0", "mov     last_ccount_0, comparison_count", "jnz     loc_6814"], ["lea~rax,[last_ccount_0+0]", "test~dl,dl", "mov~[rsp+0],last_ccount_0", "mov~last_ccount_0,comparison_count", "jnz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 10, 6, 0.07381552873356152, ["add     comparison_count, 1", "jmp     loc_6814"], ["add~comparison_count,0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 9, 0.03252416981925178, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_74CF"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 20, 16, 0.0039032006245121, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_6A47"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 17, 0.036434876598811027, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6E00"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 11, 0.024057226926079388, ["test    rax, rax", "jnz     short loc_7456"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 12, 4, 0.15326317580415946, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "cmp     [rsp+1C8h+iter_haystack.cur.wc], eax", "jnz     loc_6A79"], ["mov~eax,[rsp+0]", "cmp~[rsp+0],eax", "jnz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 16, 0.005129205948878081, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 12, 0.017364238675714086, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_7010"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 22, 16, 0.02080706179066835, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "test    edx, edx", "jnz     loc_6A47"], ["mov~edx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~edx,edx", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 19, 17, 0.0138263375968294, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1", "mov     [rsp+1C8h+rneedle.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 1, 0, 0, 15, 15, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 4, 0, 0, 1, 0, 0, 23, -1, 0.0004503693028283192, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 22, 17, 0.0005704677835825377, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_6A38"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.0016963910406533357, ["mov     rdx, [rsp+1C8h+resultp]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "mov     [rsp+1C8h+count], rcx", "call    knuth_morris_pratt_unibyte", "test    al, al", "mov     rcx, [rsp+1C8h+count]", "jnz     loc_74F9"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "mov~[rsp+0],rcx", "call~FOO", "test~al,al", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 5, 1, 2, 14, 7, 0.04524960467583419, ["mov     rdi, rcx; ps", "mov     [rsp+1C8h+resultp], rcx", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["mov~rdi,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [6, 0, 145, 1, 0, 24, 1, 0, 13, 3, 0.19119928341239825, ["movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.in_shift]", "lea     rcx, [rbp+4]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     qword ptr [rbp+4], 0", "movaps  xmmword ptr [rsp+1C8h+rhaystack.in_shift], xmm0", "mov     [rsp+1C8h+rneedle.next_done], 0", "mov     [rsp+1C8h+rhaystack.next_done], 0", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.ptr]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.ptr], xmm0", "mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rax, [rsp+1C8h+needle_last_ccount]", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.wc_valid]", "movsx   edx, byte ptr [rax]", "mov     [rsp+1C8h+rneedle.cur.ptr], rax", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.wc_valid], xmm0", "mov     eax, edx", "shr     al, 5", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.buf+8]", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.buf+8], xmm0", "bt      eax, edx", "jnb     loc_7230"], ["movdqa~xmm0,[mmword ptr [rsp+0]", "lea~rcx,[rbp+0]", "mov~[rsp+0],0", "mov~[word ptr [rbp+0],0", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "movdqa~xmm0,[mmword ptr [rsp+0]", "movsx~edx,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~eax,edx", "shr~al,0", "movdqa~xmm0,[mmword ptr [rsp+0]", "and~eax,0", "mov~eax,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "bt~eax,edx", "jnb~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 21, -1, 0.002717228127064193, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "jmp     loc_66B6"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 20, 16, 0.018570227586621028, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "test    edx, edx", "jz      loc_6C38"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 20, 15, 0.1978021978021978, ["cmp     [rsp+1C8h+rhaystack.next_done], 0", "jz      loc_6928"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 19, 16, 0.15333573530294842, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_6A47"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 11, 0.004808943333533496, ["mov     r9d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r9d, r9d", "jnz     loc_72C4"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 12, 0.005562060889929743, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 23, 17, 0.005314357773374167, ["lea     rdi, [r15+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 22, 17, 0.013961448387677896, ["mov     rcx, [rsp+1C8h+rhaystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_6C48"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 24, 16, 0.004653816129225965, ["mov     [rsp+1C8h+rhaystack.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 14, 0.12778478352248845, ["cmp     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "jnz     loc_697D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 24, 14, 0.003813126763946436, ["mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_6A63"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 15, 0.036449888908905305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6E40"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 13, 12, 0.03396284953662002, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.bytes]", "add     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "sub     [rsp+1C8h+count], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_7170"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "sub~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 13, 10, 0.05446466102203807, ["mov     r10d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r10d, r10d", "jnz     loc_6F49"], ["mov~r10d,[rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 15, 13, 0.015297543986068576, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jmp     loc_6F49"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 16, 13, 0.0023269080646129824, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jmp     loc_6F49"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.020476790968594248, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jnz     short loc_6FBE"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 10, 0.022398366660661743, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7564"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 22, 13, 0.1706149042214616, ["mov     rdx, [rsp+1C8h+rhaystack.cur.bytes]; n", "cmp     rdx, [rsp+1C8h+rneedle.cur.bytes]", "jz      loc_6D20"], ["mov~rdx,[rsp+0]", "cmp~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 14, 0.040293040293040296, ["cmp     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jz      loc_6A63"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 23, 14, 0.014712063892391762, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_6A63"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 26, 16, 0.0007205908845253108, ["mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_697D"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 25, 16, 0.02654176424668228, ["lea     rdi, [r15+4]; ps", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6E70"], ["lea~rdi,[r15+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 13, 12, 0.1585149822854741, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]"], ["mov~rcx,[rsp+0]"]], [0, 0, 145, 0, 0, 3, 1, 1, 24, 13, 0.03613463039692548, ["test    al, al", "lea     rdx, [rbx+1]", "jnz     loc_6A79"], ["test~al,al", "lea~rdx,[rbx+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.006695490302047679, ["xor     eax, eax", "jmp     loc_66B6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, -1, 0.0012910586681078484, ["movzx   esi, byte ptr [haystack]", "test    sil, sil", "jz      loc_6D18"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, -1, 0.0028973758481955205, ["cmp     byte ptr [r12+1], 0", "jz      loc_6D18"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 8, 8, 0.1696240917552393, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jz      loc_6D18"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 15, 0.022818711343301507, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jz      loc_6D18"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.003272683600552453, ["movzx   edi, byte ptr [r14]", "test    dil, dil", "jz      loc_6D18"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 10, -1, 0.0017414279709361677, ["movzx   edi, byte ptr [rdx+rbx]", "test    dil, dil", "jz      loc_6D18"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 27, -1, 0.0006004924037710923, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 14, 0.03223393182409576, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7148"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 14, 0.052155267319201754, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_7108"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71C5"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 3, 13, 0, 4, 15, 6, 0.04399357473127966, ["mov     [rsp+1C8h+rneedle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rcx, [rsp+1C8h+resultp]; p", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_73A8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 8, 11, 0.005224283912808503, ["mov     [rsp+1C8h+iter_haystack.in_shift], 1", "jmp     loc_6AB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 7, 12, 0.006795572369342862, ["lea     rax, [rsp+1C8h+iter_haystack]", "lea     rdi, [rsp+1C8h+iter_haystack.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 13, 0.025283232250445358, ["test    rax, rax", "jnz     short loc_70BB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 5, -1, 0.003948237554794932, ["mov     r8, [rsp+1C8h+needle_last_ccount]", "movzx   esi, byte ptr [r8+1]", "test    sil, sil", "jz      loc_66B3"], ["mov~r8,[rsp+0]", "movzx~esi,[yte ptr [r8+0]", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 1, 0, 5, 0, 1, 4, -1, 0.007356031946195881, ["add     r13, 1", "cmp     sil, r15b", "lea     rbx, [rdx+1]", "lea     r14, [r12+1]", "jz      loc_6E80"], ["add~r13,0", "cmp~sil,r15b", "lea~rbx,[rdx+0]", "lea~r14,[r12+0]", "jz~FOO"]], [5, 0, 161, 0, 0, 15, 1, 0, 1, 15, 0.00468384074941452, ["mov     rax, needle_0", "lea     r13, is_basic_table", "mov     [rsp+1C8h+iter_needle.cur.ptr], needle_0", "movsx   edx, byte ptr [rax]", "lea     needle_0, [rsp+1C8h+iter_needle]", "mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle.state.__count], 0", "mov     [rsp+1C8h+iter_needle.next_done], 0", "lea     rbp, [rbx+4]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7300"], ["mov~rax,needle_0", "lea~r13,<TAG>", "mov~[rsp+0],needle_0", "movsx~edx,<TAG>", "lea~needle_0,[rsp+0]", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rbx+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 183, 1, 1, 16, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, haystack", "push    rbp", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 198h", "mov     rax, fs:28h", "mov     [rsp+1C8h+var_40], rax", "xor     eax, eax", "mov     [rsp+1C8h+needle_last_ccount], needle_0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_6650"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,haystack", "push~rbp", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],needle_0", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 16, 5, 0.031563381973218035, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7503"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 18, 5, 0.005321863928421304, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 17, 4, 0.022946315979102856, ["test    rax, rax", "jnz     short loc_72D0"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 22, 15, 0.05578574431033447, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rhaystack.cur.ptr]; s", "lea     rcx, [r15+4]; p", "lea     rdi, [r15+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "jz      loc_6DD8"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r15+0]", "lea~rdi,[r15+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 16, 0.06539362277067196, ["cmp     [rsp+1C8h+rhaystack.in_shift], 0", "jnz     loc_6C61"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 145, 2, 0, 5, 0, 1, 11, 11, 0.25575722092115527, ["add     [rsp+1C8h+iter_haystack.cur.ptr], rcx", "add     r14, 1", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "jz      loc_6798"], ["add~[rsp+0],rcx", "add~r14,0", "cmp~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 10, 6, 0.13667957725334773, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]", "cmp     rcx, [rsp+1C8h+iter_needle.cur.bytes]", "jnz     loc_6A81"], ["mov~rcx,[rsp+0]", "cmp~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 8, 1, 2, 11, 5, 0.041644148201525254, ["mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s1", "mov     rdx, rcx; n", "mov     [rsp+1C8h+resultp], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+1C8h+resultp]", "jnz     loc_6A81"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 11, 0.005239296222902781, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 10, 0.028575932264456847, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7489"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 149, 0, 0, 4, 0, 0, 2, 14, 0.008617065994115174, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc], edx", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0032126343601753438, ["cmp     sil, dil", "lea     rbx, [rdx+2]", "jnz     loc_65D2"], ["cmp~sil,dil", "lea~rbx,[rdx+0]", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 5, 11, 0.16935136812185986, ["lea     rax, [rsp+1C8h+iter_haystack]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [9, 0, 146, 0, 0, 19, 2, 1, 4, 12, 0.06398246562180988, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "mov     [rsp+1C8h+iter_haystack.in_shift], 0", "xor     r14d, r14d", "xor     ebx, ebx", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle_last_ccount.state.__count], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "lea     rbp, [rsp+1C8h+rneedle]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "lea     rax, [rsp+1C8h+result]", "mov     [rsp+1C8h+iter_haystack.cur.ptr], haystack", "mov     qword ptr [rsp+1C8h+iter_haystack.state.__count], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "lea     r15, [rsp+1C8h+rhaystack]", "mov     [rsp+1C8h+last_ccount], 0", "mov     byte ptr [rsp+1C8h+count], 1", "mov     [rsp+1C8h+var_1A0], rax", "jnz     loc_6AA3"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "xor~r14d,r14d", "xor~ebx,ebx", "cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],haystack", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 24, 17, 0.028012970635921456, ["test    rax, rax", "jnz     short loc_6CDB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 148, 0, 0, 3, 1, 1, 3, 13, 0.03987269561040053, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     short loc_670B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 149, 0, 0, 3, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_66AB"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_66AB"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0016963910406533357, ["mov     rax, r12"], ["mov~rax,r12"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0003602954422626554, ["jmp     loc_66B3"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 13, 0.004728877679697353, ["mov     r11d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r11d, r11d", "jnz     loc_72C4"], ["mov~r11d,[rsp+0]", "test~r11d,r11d", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 14, 0.005391921375527932, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 24, 1, 0, 4, 0, 1, 8, -1, 0.0022218218939530415, ["neg     rdx", "lea     r9, [r8+rdx]", "add     rdx, r12", "jmp     short loc_6EDA"], ["neg~rdx", "lea~r9,<TAG>", "add~rdx,r12", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_68F1"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 18, 3, 0.02152765267519366, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_74B8"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 19, 4, 0.00469384895614404, ["mov     edi, [rsp+1C8h+rneedle.cur.wc]; iter", "test    edi, edi", "jz      short loc_72D0"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 10, 11, 0.005614603975259712, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jnz     loc_72C4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 26, 17, 0.004713865369603075, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jnz     loc_72C4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 152, 0, 0, 3, 1, 1, 7, 16, 0.004713865369603075, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     loc_72C4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 153, 0, 0, 4, 0, 1, 6, 17, 0.0005404431633939831, ["mov     rax, [rsp+1C8h+iter_needle.cur.ptr]", "mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 25, 18, 0.005374407013751276, ["mov     rax, [rsp+1C8h+rhaystack.cur.ptr]", "mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.010628715546748334, ["mov     rbx, [rsp+1C8h+var_40]", "xor     rbx, fs:28h", "jnz     loc_75D8"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 26, 0, 0, 5, 1, 1, 1, -1, 0.0007506155047138654, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "movzx   r15d, byte ptr [rax]", "mov     rax, haystack", "test    r15b, r15b", "jz      loc_66B6"], ["mov~rax,[rsp+0]", "movzx~r15d,<TAG>", "mov~rax,haystack", "test~r15b,r15b", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0042935206869633095, ["mov     rax, [rsp+1C8h+result]", "jmp     loc_66B6"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 12, 4, 0.038986969314838166, ["jmp     loc_6830"], ["jmp~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 18, 17, 0.19439440341079686, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_6DB0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 151, 0, 1, 5, 1, 2, 6, 15, 0.014201645349186333, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_74C5"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 9, -1, 0.002642166576592806, ["movzx   esi, byte ptr [r9+rbx]", "test    sil, sil", "jnz     short loc_6EC0"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 13, 15, 0.043358053603955254, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax", "jmp     loc_703A"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 12, 0.023794511499429533, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_7128"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 0, 1, 11, -1, 0.001411157148862067, ["add     rbx, 1", "cmp     sil, dil", "jnz     loc_65D2"], ["add~rbx,0", "cmp~sil,dil", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 198h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 145, 0, 1, 6, 0, 2, 8, 9, 0.0036930282831922176, ["mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_6D5C"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 10, 0.03478102043675813, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7200"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 8, -1, 0.001125923257070798, ["mov     eax, edx"], ["mov~eax,edx"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0031525851197982345, ["lea     try_kmp, [outer_loop_count+outer_loop_count*4+0]", "cmp     rax, rbx", "ja      loc_66E0"], ["lea~try_kmp,[outer_loop_count+0]", "cmp~rax,rbx", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.08978112051882543, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_73C8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_6FBE"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 0, 14, 2, 0.14132588722752656, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc], edx", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 24, 0, 0, 4, 0, 1, 7, -1, 0.004773914609980183, ["movzx   esi, byte ptr [haystack]", "mov     r12, haystack", "mov     rdx, rbx", "jmp     loc_65B0"], ["movzx~esi,<TAG>", "mov~r12,haystack", "mov~rdx,rbx", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 1, 1, 6, -1, 0.005164234672431394, ["cmp     outer_loop_count, 9", "setnbe  dl", "and     dl, al", "jz      loc_66E2"], ["cmp~outer_loop_count,0", "setnbe~dl", "and~dl,al", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 10, -1, 0.0007656278148081427, ["xor     ebp, ebp", "jmp     loc_66E2"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 6, 10, 0.17874907424087744, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "jz      loc_6D40"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 16, 8, 0.0038431513841349907, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71D6"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_68F1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 15, 1, 0.16672671590704377, ["mov     esi, [rsp+1C8h+rneedle.cur.wc]", "test    esi, esi", "jz      loc_75FC"], ["mov~esi,[rsp+0]", "test~esi,esi", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 13, 0.06534608378870674, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_70F0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 8, 11, 0.026464200644528518, ["test    rax, rax", "jnz     short loc_6B2F"], ["test~rax,rax", "jnz~FOO"]], [3, 0, 147, 0, 0, 3, 0, 0, 4, 13, 0.008496967513360956, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 158, 0, 3, 13, 0, 4, 3, 14, 0.005374407013751276, ["mov     [rsp+1C8h+iter_needle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s", "lea     rdi, [rbx+24h]; pwc", "mov     rcx, rbp; p", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "jz      loc_66F8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rbx+0]", "mov~rcx,rbp", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 159, 0, 1, 4, 1, 2, 2, 15, 0.00078064012490242, ["mov     rdi, rbp; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 6, 10, 0.15402129746392043, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_6EF0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 26, 15, 0.02119738185311956, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "mov     [rsp+1C8h+rhaystack.in_shift], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "test    eax, eax", "jnz     loc_698C"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 9, 12, 0.0072184191036650065, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 16, 19, 0.1825196661262235, ["mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "mov     [rsp+1C8h+rneedle.next_done], 0", "add     comparison_count, 1", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "jmp     loc_69E3"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "add~comparison_count,0", "add~[rsp+0],rax", "jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 16, 20, 0.0078064012490242, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jmp     loc_6900"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 17, 20, 0.003993274485077764, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jmp     loc_6900"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_6FBE"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 9, 0.08842500850697571, ["test    al, al", "jz      loc_7170"], ["test~al,al", "jz~FOO"]], [0, 0, 145, 1, 0, 5, 0, 1, 10, 10, 0.17691006625432854, ["mov     rsi, comparison_count", "sub     rsi, [rsp+1C8h+last_ccount]", "movzx   eax, [rsp+1C8h+iter_needle_last_ccount.next_done]", "mov     [rsp+1C8h+count], count_0", "jz      loc_7571"], ["mov~rsi,comparison_count", "sub~rsi,[rsp+0]", "movzx~eax,[rsp+0]", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 9, 8, 0.10286434876598811, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_6F20"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 23, 14, 0.02152765267519366, ["mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s1", "call    _memcmp", "test    eax, eax", "setnz   al", "jmp     loc_69A4"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 12, 0.08386126623831541, ["test    al, al", "jz      short loc_6F6D"], ["test~al,al", "jz~FOO"]], [2, 0, 147, 0, 1, 6, 0, 2, 5, 13, 0.004263496066774755, ["mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_670B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 156, 0, 0, 2, 0, 1, 4, 14, 0.0013811325286735123, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7525"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_67DF"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 9, 10, 0.023148982165375608, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7138"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 145, 0, 0, 3, 0, 0, 7, 9, 0.13934426229508196, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 154, 0, 0, 2, 1, 1, 5, 16, 0.0015012310094277307, ["test    rax, rax", "jnz     short loc_737C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_67DF"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 15, 8, 0.028230649132288475, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71D6"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 8, 8, 0.14721071278448328, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jnz     loc_7590"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_71C5"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 1, 0, 1, 0, 0, 9, 7, 0.03972257250945776, ["add     comparison_count, 1"], ["add~comparison_count,0"]], [0, 0, 145, 0, 1, 4, 1, 2, 19, 19, 0.005359394703656999, ["lea     rdi, [rbp+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_75B0"], ["lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 23, 16, 0.004023299105266318, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "mov     [rsp+1C8h+rhaystack.next_done], 1", "mov     [rsp+1C8h+rhaystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 1, 14, 9, 0.047764166616625636, ["cmp     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_7170"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 20, 18, 0.004653816129225965, ["mov     [rsp+1C8h+rneedle.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 1, 0, 1, 15, 7, 0.03584939650513422, ["jmp     loc_6D71"], ["jmp~FOO"]], [1, 0, 145, 1, 0, 3, 0, 1, 10, 7, 0.002642166576592806, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al", "jmp     loc_6D71"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 8, 0.02915390620308653, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jz      loc_71D6"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 13, 9, 0.008827238335435056, ["jmp     loc_71C5"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 5, 11, 0.021047258752176785, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 145, 0, 0, 2, 0, 0, 24, 14, 0.01043355551552273, ["cmp     [rsp+1C8h+rneedle.cur.wc], eax", "setnz   al"], ["cmp~[rsp+0],eax", "setnz~al"]], [1, 0, 24, 0, 0, 8, 3, 0, 3, -1, 0.0017714525911247223, ["lea     rbx, [rsp+1C8h+result]", "mov     rbp, [rsp+1C8h+needle_last_ccount]", "xor     r13d, r13d", "xor     edx, edx", "xor     ecx, ecx", "mov     eax, 1", "mov     [rsp+1C8h+resultp], rbx", "nop     dword ptr [try_kmp+00h]"], ["lea~rbx,[rsp+0]", "mov~rbp,[rsp+0]", "xor~r13d,r13d", "xor~edx,edx", "xor~ecx,ecx", "mov~eax,0", "mov~[rsp+0],rbx", "nop~[word ptr [try_kmp+0]"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 11, 0.007611241217798595, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 9, 0.018712844532516662, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 145, 0, 0, 3, 1, 1, 14, 8, 0.05813517084008887, ["mov     r8d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r8d, r8d", "jz      loc_6FDD"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 21, 19, 0.005809764006485318, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_75DD"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 7, 9, 0.14260193358554013, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 145, 2, 0, 7, 0, 0, 25, 19, 0.02715726896054765, ["mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rbx, rdx", "mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "mov     [rsp+1C8h+rhaystack.next_done], 0", "mov     [rsp+1C8h+rneedle.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rbx,rdx", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 0, 13, 7, 0.10978502371944995, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "mov     byte ptr [rsp+1C8h+count], 1"], ["movzx~edx,[rsp+0]", "mov~[yte ptr [rsp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [53, 71, 196, 2, 184, 288, 1, 762, 0.0396, 6, 24], "succs": [[16], [0, 111], [9, 148], [17, 2], [26, 163], [113, 4], [25, 29], [179, 6], [6, 103], [15], [18, 159], [10], [10], [122, 30], [13, 30], [83, 22], [167, 15], [15], [131, 21], [35], [19, 7], [50, 38], [56, 32], [177, 27], [174, 23], [35, 28], [34], [67], [33], [34], [129, 111], [177, 69], [126, 31], [109], [33, 35], [81, 42], [35], [50, 103], [178, 37], [41, 177], [164, 39], [80], [51, 62], [51], [91, 43], [124, 134], [45, 165], [45], [45], [45, 46], [161, 68], [56, 150], [51, 172], [51], [62], [140, 54], [82], [56, 181], [109], [58, 173], [128, 58], [58, 3], [58, 52], [88, 58], [58, 118], [58], [72, 48], [66, 47], [176], [144, 77], [130], [177, 70], [98, 117], [63, 95], [73, 60], [138, 87], [75, 110], [145, 79], [178, 102], [101, 78], [44, 53], [80, 40], [89, 139], [82, 84], [112, 82], [177, 11], [85, 175], [92], [128, 99], [130], [89, 171], [108, 55], [90, 95], [92], [92], [109], [95], [117, 103], [97, 178], [115], [133], [132, 100], [101, 103], [], [155, 103], [55, 103], [114, 103], [106, 178], [105, 178], [141, 119], [59, 109], [109], [32], [20, 36], [93, 94], [64, 96], [67], [146, 125], [128, 115], [], [160], [120, 135], [127], [122, 14], [12, 86], [46], [133], [74], [123, 127], [127], [121, 156], [182], [133], [183, 143], [24, 116], [155, 142], [90], [136, 153], [137, 177], [180, 71], [65, 52], [], [104, 178], [5], [143], [143], [46], [169, 124], [147, 151], [168, 148], [57], [49, 134], [90], [152, 157], [61], [154, 158], [160], [114, 107], [61], [182], [162, 149], [176], [83], [177, 166], [62], [1, 124], [113], [83], [83], [170, 182], [176], [139], [57], [74], [46], [176], [1, 182], [], [], [8, 178], [61], [5], [16], []], "fname": "mbsstr", "n_num": 184}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.047619047619047616, ["cmp     [rsp+1098h+outsize], 0", "jnz     loc_78C3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 2, 2, 7, 3, 0.11904761904761904, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 0, 1, 8, 2, 0.047619047619047616, ["mov     rax, [rsp+1098h+resultp]", "mov     r15, [rsp+1098h+result]", "mov     ebx, 0FFFFFFFFh", "cmp     [rax], r15", "jz      short loc_7824"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "mov~ebx,0", "cmp~<TAG>,r15", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 8, 3, 0.011904761904761904, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      loc_77E0"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 4, 4, 0.0992063492063492, ["mov     rdi, [rsp+1098h+count]; size", "call    _malloc", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      loc_78AE"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 18, 0, 0, 5, 1, 1, 3, 5, 0.16798941798941797, ["mov     count_0, [rsp+1098h+resultp]", "mov     rax, [rax]", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      short loc_775C"], ["mov~count_0,[rsp+0]", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 17, 0, 0, 4, 0, 0, 4, 5, 0.07275132275132275, ["mov     rax, [rsp+1098h+lengthp]", "mov     rcx, [rsp+1098h+count]", "cmp     [rax], rcx", "jnb     short loc_7774"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~<TAG>,rcx", "jnb~FOO"]], [2, 0, 21, 0, 1, 10, 2, 2, 1, 3, 0.17328042328042326, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_78B9"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],0", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 28, 1, 1, 30, 7, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, src_0", "push    r13", "push    r12", "mov     r13, srclen_0", "push    rbp", "push    rbx", "mov     rbx, cd", "xor     esi, esi; inbuf", "xor     edx, edx; inbytesleft", "sub     rsp, 1068h", "mov     [rsp+1098h+src], src_0", "mov     [rsp+1098h+resultp], resultp_0", "mov     src_0, cd; cd", "mov     [rsp+1098h+lengthp], lengthp_0", "xor     ecx, ecx; outbuf", "xor     r8d, r8d; outbytesleft", "mov     rax, fs:28h", "mov     [rsp+1098h+var_40], rax", "xor     eax, eax", "call    _iconv", "mov     [rsp+1098h+inptr], src_0", "xor     r15d, r15d", "test    srclen_0, srclen_0", "mov     [rsp+1098h+insize], srclen_0", "lea     r14, [rsp+1098h+tmp]", "lea     r12, [rsp+1098h+outsize]", "lea     rbp, [rsp+1098h+outptr]", "jz      short loc_76FB"], ["push~r15", "push~r14", "mov~r15,src_0", "push~r13", "push~r12", "mov~r13,srclen_0", "push~rbp", "push~rbx", "mov~rbx,cd", "xor~esi,esi", "xor~edx,edx", "sub~rsp,0", "mov~[rsp+0],src_0", "mov~[rsp+0],resultp_0", "mov~src_0,cd", "mov~[rsp+0],lengthp_0", "xor~ecx,ecx", "xor~r8d,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],src_0", "xor~r15d,r15d", "test~srclen_0,srclen_0", "mov~[rsp+0],srclen_0", "lea~r14,[rsp+0]", "lea~r12,[rsp+0]", "lea~rbp,[rsp+0]", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 4, 0.05291005291005291, ["mov     r13, [rsp+1098h+result]", "jmp     loc_76FB"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 1, 4, 3, 0.06349206349206349, ["cmp     eax, 16h", "mov     r13, [rsp+1098h+result]", "jnz     loc_78B9"], ["cmp~eax,0", "mov~r13,[rsp+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 7, 1, 0, 9, 2, 0.003968253968253968, ["mov     res, [rsp+1098h+resultp]", "mov     rsi, [rsp+1098h+result]", "xor     ebx, ebx", "mov     rdi, [rsp+1098h+count]", "mov     [rax], rsi", "mov     rax, [rsp+1098h+lengthp]", "mov     [rax], rdi"], ["mov~res,[rsp+0]", "mov~rsi,[rsp+0]", "xor~ebx,ebx", "mov~rdi,[rsp+0]", "mov~<TAG>,rsi", "mov~rax,[rsp+0]", "mov~<TAG>,rdi"]], [0, 0, 3, 0, 2, 7, 0, 3, 9, 2, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     rdi, r15; ptr", "call    _free", "mov     [rbp+0], r12d", "jmp     loc_7824"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~rdi,r15", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 27, 2, 0, 5, 0, 1, 3, 5, 0.03042328042328042, ["mov     rax, [rsp+1098h+outptr]", "sub     rax, r14", "add     count_0, rax", "cmp     [rsp+1098h+insize], 0", "jz      loc_7850"], ["mov~rax,[rsp+0]", "sub~rax,r14", "add~count_0,rax", "cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 27, 0, 1, 10, 0, 2, 2, 5, 0.042328042328042326, ["mov     rsi, [rsp+1098h+count]; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r13; inbytesleft", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_76A0"], ["mov~rsi,[rsp+0]", "mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r13", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],0", "call~FOO", "cmp~res,0", "jnz~FOO"]], [1, 0, 27, 0, 1, 4, 0, 2, 3, 4, 0.03968253968253968, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 7", "jz      short loc_76A0"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 13, 0, 1, 16, 4, 2, 5, 5, 0.15873015873015872, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "lea     r15, [rsp+1098h+insize]", "call    _iconv", "mov     rax, [rsp+1098h+src]", "mov     [rsp+1098h+insize], r13", "lea     r14, [rsp+1098h+inptr]", "mov     [rsp+1098h+inptr], rax", "mov     rax, [rsp+1098h+result]", "mov     [rsp+1098h+outptr], rax", "mov     rax, [rsp+1098h+count]", "mov     [rsp+1098h+outsize], rax", "jmp     short loc_77DB"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "lea~r15,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[rsp+0],r13", "lea~r14,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 5, 3, 0.017195767195767195, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 20, 2, 0, 5, 0, 1, 2, 3, 0.1693121693121693, ["mov     res, [rsp+1098h+outptr]", "sub     rax, r14", "add     rax, r15", "mov     [rsp+1098h+count], count_0", "jz      loc_7860"], ["mov~res,[rsp+0]", "sub~rax,r14", "add~rax,r15", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.06613756613756613, ["mov     rdx, [rsp+1098h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_78C8"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.003968253968253968, ["mov     count_0, [rsp+1098h+lengthp]", "xor     ebx, ebx", "mov     qword ptr [rax], 0", "jmp     short loc_7824"], ["mov~count_0,[rsp+0]", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.047619047619047616, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_7824"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1068h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 13, 0, 1, 8, 0, 2, 7, 4, 0.03835978835978836, ["mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r15; inbytesleft", "mov     rsi, r14; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_7870"], ["mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r15", "mov~rsi,r14", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 6, 4, 0.17328042328042326, ["test    r13, r13", "jnz     short loc_77B8"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, 5, 0.0013227513227513227, ["mov     r13, [rsp+1098h+insize]"], ["mov~r13,[rsp+0]"]], [0, 0, 27, 0, 0, 6, 0, 1, 1, 6, 0.006613756613756613, ["lea     rax, [rsp+1098h+insize]", "lea     rsi, [rsp+1098h+inptr]", "mov     [rsp+1098h+result], srclen_0", "mov     [rsp+1098h+count], rsi", "mov     srclen_0, rax", "jmp     short loc_76B7"], ["lea~rax,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],srclen_0", "mov~[rsp+0],rsi", "mov~srclen_0,rax", "jmp~FOO"]]], "func_feature": [14, 21, 36, 1, 29, 43, 1, 170, 0.05706, 1, 6], "succs": [[11, 22], [0, 2], [19, 12], [1, 2], [16, 17], [4, 6], [16, 4], [18, 21], [28, 7], [7], [21, 7], [19], [19], [9, 14], [13, 15], [10, 13], [26], [21], [20, 5], [24, 23], [19], [19], [], [], [], [3, 27], [25, 1], [26], [14]], "fname": "mem_cd_iconv", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 20, 0, 0, 2, 0, 1, 0, 0, 0.06818181818181818, ["cmp     eax, 7", "jnz     failed"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 20, 0, 1, 5, 0, 2, 3, 4, 0.12987012987012986, ["call    ___errno_location", "mov     r15, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_7A66"], ["call~FOO", "mov~r15,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 5, 3, 0.10173160173160173, ["call    ___errno_location", "cmp     dword ptr [rax], 7", "mov     rcx, rax", "jnz     failed"], ["call~FOO", "cmp~<TAG>,0", "mov~rcx,rax", "jnz~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 4, 3, 0.20238095238095238, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_7A00"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rdi, [rsp+88h+var_40]", "xor     rdi, fs:28h", "mov     rax, rbx", "jnz     short loc_7B0D"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 5, 2, 0.06168831168831169, ["mov     rdi, result; ptr", "xor     ebx, ebx", "call    _free"], ["mov~rdi,result", "xor~ebx,ebx", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.017316017316017316, ["mov     dword ptr [r15], 0Ch", "jmp     short failed"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 7, 3, 0.017316017316017316, ["mov     dword ptr [rcx], 0Ch"], ["mov~<TAG>,0"]], [0, 0, 20, 1, 0, 5, 0, 0, 5, 4, 0.06493506493506493, ["mov     r14, [rsp+88h+outptr]", "lea     r13, [result_size+result_size+0]", "sub     r14, result", "cmp     result_size, newsize", "jnb     loc_7AF0"], ["mov~r14,[rsp+0]", "lea~r13,[result_size+0]", "sub~r14,result", "cmp~result_size,newsize", "jnb~FOO"]], [0, 0, 12, 1, 0, 5, 0, 0, 6, 4, 0.08225108225108226, ["mov     r15, [rsp+88h+outptr]", "lea     rdx, [result_size+result_size+0]", "sub     r15, result", "cmp     result_size, newsize_0", "jnb     loc_7AB8"], ["mov~r15,[rsp+0]", "lea~rdx,[result_size+0]", "sub~r15,result", "cmp~result_size,newsize_0", "jnb~FOO"]], [2, 1, 22, 2, 2, 24, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, cd", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     [rsp+88h+inptr], src", "call    _strlen", "mov     r13, rax", "mov     [rsp+88h+inbytes_remaining], rax", "shl     r13, 4", "cmp     result_size, 10000000h", "cmovnb  r13, result_size", "lea     rbp, [result_size+1]", "mov     rdi, result_size; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_7B00"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,cd", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],src", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "shl~r13,0", "cmp~result_size,0", "cmovnb~r13,result_size", "lea~rbp,[result_size+0]", "mov~rdi,result_size", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 6, 4, 0.0670995670995671, ["mov     rsi, newsize; size", "mov     rdi, result; ptr", "call    _realloc", "test    newresult, newresult", "jz      loc_7AF0"], ["mov~rsi,newsize", "mov~rdi,result", "call~FOO", "test~newresult,newresult", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 6, 2, 0.0, ["mov     rdi, result; ptr", "call    _realloc", "test    smaller_result, smaller_result", "cmovnz  result, smaller_result", "jmp     short loc_7AC8"], ["mov~rdi,result", "call~FOO", "test~smaller_result,smaller_result", "cmovnz~result,smaller_result", "jmp~FOO"]], [1, 0, 4, 1, 0, 8, 0, 0, 5, 2, 0.06601731601731602, ["mov     res, [rsp+88h+outptr]", "lea     rdx, [rax+1]", "mov     [rsp+88h+outptr], rdx", "mov     byte ptr [rax], 0", "mov     rsi, [rsp+88h+outptr]", "sub     rsi, result; size", "cmp     result_size, length", "jbe     short loc_7AC8"], ["mov~res,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "mov~<TAG>,0", "mov~rsi,[rsp+0]", "sub~rsi,result", "cmp~result_size,length", "jbe~FOO"]], [0, 0, 12, 0, 1, 9, 1, 2, 7, 4, 0.04112554112554113, ["mov     rsi, newsize_0; size", "mov     rdi, result; ptr", "mov     [rsp+88h+inbuf], newsize_0", "mov     [rsp+88h+inbytesleft], rax", "call    _realloc", "test    newresult, newresult", "mov     rdx, [rsp+88h+inbuf]", "mov     rcx, [rsp+88h+inbytesleft]", "jz      short loc_7AB8"], ["mov~rsi,newsize_0", "mov~rdi,result", "mov~[rsp+0],newsize_0", "mov~[rsp+0],rax", "call~FOO", "test~newresult,newresult", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 1, 2, 0.006493506493506494, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     short loc_7AC8"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 1, 0, 8, 0, 0, 7, 6, 0.08225108225108226, ["lea     rsi, [newresult+used]", "mov     rbx, newresult", "mov     rbp, newsize", "mov     [rsp+88h+outptr], rsi", "lea     rsi, [newsize-1]", "mov     rdx, rsi", "sub     rdx, used", "mov     [rsp+88h+outbytes_remaining], rdx"], ["lea~rsi,<TAG>", "mov~rbx,newresult", "mov~rbp,newsize", "mov~[rsp+0],rsi", "lea~rsi,[newsize-1]+0]", "mov~rdx,rsi", "sub~rdx,used", "mov~[rsp+0],rdx"]], [0, 0, 12, 1, 0, 7, 0, 0, 8, 4, 0.025974025974025976, ["lea     rcx, [newresult+used]", "mov     rbp, result_size", "mov     rbx, newresult", "mov     [rsp+88h+outptr], rcx", "lea     rcx, [result_size-1]", "sub     rcx, used", "mov     [rsp+88h+outbytes_remaining], rcx"], ["lea~rcx,<TAG>", "mov~rbp,result_size", "mov~rbx,newresult", "mov~[rsp+0],rcx", "lea~rcx,[result_size-1]+0]", "sub~rcx,used", "mov~[rsp+0],rcx"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     result_size", "pop     cd", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~result_size", "pop~cd", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 20, 0, 1, 17, 4, 2, 1, 6, 0.0367965367965368, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "lea     rax, [rsp+88h+outbytes_remaining]", "mov     [rsp+88h+outptr], result", "mov     [rsp+88h+outbytes_remaining], r13", "mov     [rsp+88h+outbytesleft], rax", "lea     rax, [rsp+88h+outptr]", "mov     [rsp+88h+outbuf], rax", "lea     rax, [rsp+88h+inbytes_remaining]", "mov     [rsp+88h+inbytesleft], rax", "lea     rax, [rsp+88h+inptr]", "mov     [rsp+88h+inbuf], rax", "jmp     short loc_79D4"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],result", "mov~[rsp+0],r13", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 20, 0, 1, 8, 0, 2, 2, 5, 0.18831168831168832, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "mov     rdi, cd; cd", "mov     rdx, [rsp+88h+inbytesleft]; inbytesleft", "mov     rsi, [rsp+88h+inbuf]; inbuf", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_7970"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "mov~rdi,cd", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 3, 4, 0.0670995670995671, ["jmp     short loc_7A66"], ["jmp~FOO"]]], "func_feature": [13, 13, 27, 1, 23, 33, 2, 143, 0.06145, 1, 8], "succs": [[9, 6], [0, 3], [10, 6], [2, 14], [], [19, 4], [5], [6], [6], [12, 7], [8, 15], [16, 20], [17, 7], [5], [13, 5], [8, 18], [5], [21], [3], [], [21], [1, 22], [3]], "fname": "str_cd_iconv", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "add     rsp, 8", "mov     rax, result", "pop     result", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,result", "pop~result", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, -1, 0.044444444444444446, ["mov     rdi, src; s", "call    _strdup", "test    rax, rax", "mov     src, rax", "jz      short loc_7B68"], ["mov~rdi,src", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 3, 0, 0.011111111111111112, ["xor     ebx, ebx", "jmp     loc_7B57"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 2, 1, 0.11111111111111112, ["mov     rdi, to_codeset; tocode", "mov     rsi, from_codeset; fromcode", "call    _iconv_open", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     to_codeset, rax", "jz      short loc_7C00"], ["mov~rdi,to_codeset", "mov~rsi,from_codeset", "call~FOO", "cmp~rax,0", "mov~to_codeset,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 4, 1, 1, 4, -1, 0.05, ["mov     rdi, cd; cd", "call    _iconv_close", "test    eax, eax", "jns     short loc_7B57"], ["mov~rdi,cd", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 5, -1, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     cd, rax", "mov     rdi, result; ptr", "call    _free", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_7B57"], ["call~FOO", "mov~r12d,<TAG>", "mov~cd,rax", "mov~rdi,result", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 1, 0, 2, 7, 0, 3, 4, -1, 0.005555555555555556, ["call    ___errno_location", "mov     r13d, [rax]", "mov     from_codeset, rax", "mov     rdi, cd; cd", "call    _iconv_close", "mov     [r12], r13d", "jmp     loc_7B57"], ["call~FOO", "mov~r13d,<TAG>", "mov~from_codeset,rax", "mov~rdi,cd", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 1, 2, 0.06666666666666667, ["mov     r12, from_codeset", "mov     from_codeset, to_codeset; s2", "mov     rbp, to_codeset", "mov     src, from_codeset; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_7B88"], ["mov~r12,from_codeset", "mov~from_codeset,to_codeset", "mov~rbp,to_codeset", "mov~src,from_codeset", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 10, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, src", "sub     rsp, 8", "cmp     byte ptr [src], 0", "jz      short loc_7B47"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,src", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 3, -1, 0.1, ["mov     rdi, src; src", "mov     rsi, cd; cd", "call    str_cd_iconv", "test    rax, rax", "mov     src, rax", "jz      short loc_7BE0"], ["mov~rdi,src", "mov~rsi,cd", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]]], "func_feature": [10, 6, 18, 0, 11, 15, 1, 69, 0.03535, 0, 3], "succs": [[], [0, 4], [4], [2, 10], [], [4, 6], [4], [4], [1, 3], [8, 1], [5, 7]], "fname": "str_iconv", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_7C68"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_7C3F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_7C78"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_7C48"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 344, 2, 1, 10, 0, 1, 0, 0, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566825, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_8006"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8802"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_7E9D"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_7E22"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8FFE"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_7E9D"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_8043"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_7EEB"], ["mov~r14,allocated", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020722, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_8818"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.008709274157991108, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_8160"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.01886577135950784, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_8820"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_8820"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.0002632493528993739, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_B19C", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_7DE3"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_8840"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_8840"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_8840"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_807F"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_9218"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9218"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_8076"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_8940"], ["test~ah,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445137, ["test    ah, 6", "jz      short loc_807F"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 27, 9, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824854, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.023770897848876805, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_8206"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02577833626408977, ["cmp     eax, 2", "jnz     loc_8850"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_8C00"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_87D8"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806069, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_807F"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_9278"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_9091"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_81D9"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02692599969914369, ["cmp     eax, 2", "jnz     loc_8890"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_88A8"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8120"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.0026532422464636404, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746907, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_90C6"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_90AA"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_88C0"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_88C0"], ["jns~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_80F4"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_80BF"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.01388089198736403, ["mov     result_0, memory", "jmp     loc_8160"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549117, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215123, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_9104"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_90F7"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_8133"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_90E1"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_9288"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.02774622243662564, ["jmp     loc_8A8B"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_8152"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_90FA"], ["mov~rcx,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_8D68"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_9109"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8D68"], ["test~dl,dl", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 0, 1, 19, 41, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_9134"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_9118"], ["cmp~rdi,digitp", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.03050450506528065, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_88F0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318204, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8152"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.027246956422506134, ["test    dl, dl", "jnz     loc_88F0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_9166"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_9210"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_916B"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_9145"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.027512799365089245, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_9152"], ["mov~rax,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199638, ["mov     result_0, rcx", "jmp     loc_8152"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198767, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_8152"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_8A51"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_9157"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_9210"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000877C case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_86A4"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_8E0F"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_9179"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_8DD0; jumptable 000000000000819E default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.015540789384956141, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_8160"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_8160"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8160"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_8160"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_8160"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_8E0F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_8BC0"], ["test~pad,pad", "jz~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_9195"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_89F8"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_8980"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_B154", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_919E"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_8BC0"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_9011"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_9011"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_89D1"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_91B0"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_91B0"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.03118836982514024, ["mov     rax, [dp+50h]; jumptable 000000000000819E cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8658"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_9270"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708449, ["cmp     eax, 2", "jz      loc_8640"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_89F8"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_89D3"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_9270"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8EBA"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_91EC"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8F40"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_91FE"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_8F40"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_8F93"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.1274049060342462, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_834D"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [5, 0, 344, 3, 1, 17, 1, 2, 34, 30, 0.0237670074643512, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_8206"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.026447482402494026, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_8206"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166654, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_8206"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.18268597334827186, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_822B"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.1935907211735482, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_8215"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_8EBA"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_9220"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.18305945026273004, ["cmp     ecx, eax", "jl      loc_8620"], ["cmp~ecx,eax", "jl~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486232, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_8635"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_923E"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_923E"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396359, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.18250312527556833, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_823F"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_8DBD"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_8E86"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_9259"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_8AA8"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_8A51"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_8A51"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_8E86"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_8EBA"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.0100203337431205, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_8AAE"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_9283"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_8298"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759968, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_8AAE"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_8AA8"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.0025754345559515102, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.0025546858384816085, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_8AAE"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_83B0"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434862, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.019044729047685737, ["test    r12b, r12b", "jnz     loc_83B0"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_82AC"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.2163261283411919, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_8D78"], ["cmp~r12,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.043046715737383286, ["mov     rax, [dp+50h]; jumptable 000000000000819E cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8520"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042917, ["cmp     eax, 2", "jz      loc_8568"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105272, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_82FE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105272, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_82FE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105272, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_82FE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408194, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.023677334101035813, ["cmp     eax, 2", "jnz     loc_8307"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_8DD8"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_8AD3"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [1, 0, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_8FD0"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_8311"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.1389787999979251, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_8668"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_8BC0"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_8B4D"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_8B4D"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.127369892573515, ["test    eax, eax", "jns     loc_8620"], ["test~eax,eax", "jns~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_8BC0"], ["cmp~rdx,r8", "jbe~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_8BA3"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_8B8C"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_8BC0"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301048, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_8BAB"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.018488404060524006, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_8C00"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_8DD0; jumptable 000000000000819E default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_86D0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_86D0"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_8C00"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_8F1F"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.052272503280891135, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8CB0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_86A4"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_8C00"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_8C00"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    _free", "jmp     loc_86A4"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8C40"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_8C40"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_8D70"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8D70"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_869F"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_8DCE"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_8E0F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_7EEB"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_8C90"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8C90"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.05121431868992617, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8CA0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.023436324779674625, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_84B5"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585673, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_857B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_7F88"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_7F63"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_7F63"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_8CE2"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_8DB0"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_8D30"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_8CF6"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_8CE2"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_8FE1"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8D13"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    _free"], ["call~FOO"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_7E22"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.051237012599658564, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.0460998895130793, ["mov     rax, [dp+50h]; jumptable 000000000000819E case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_8520"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8520"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8520"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.02291274386226993, ["push    [rbp+var_388]", "push    arg", "jmp     loc_8528"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_7E22"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_7E50"], ["cmp~rdi,0", "jbe~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_87A1"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8D52"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_87A1"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_7D78"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_7D62"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.004617108354989792, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_869F"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547249, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_8574"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_86C1"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.048406757857279936, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_7E80"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.539132081148234, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_7DB5"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 000000000000819E default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_8DD0; jumptable 000000000000819E default case"], ["cmp~rdx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["cmp~rdx,0", "jnz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_8DD0; jumptable 000000000000819E default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_8DD0; jumptable 000000000000819E default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_8DD0; jumptable 000000000000819E default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_8DD0; jumptable 000000000000819E default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_7DE3"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 14, 26, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_8FB7"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_7E14"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_7E22"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [2, 0, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_8FA4"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.2359777573748723, ["lea     r12, [rcx+length]", "jmp     short loc_86A4"], ["lea~r12,<TAG>", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_8E47"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_8E5A"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_8EBA"], ["cmp~allocated,r12", "jnb~FOO"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_7FC9"], ["test~al,<STR>", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_7FBC"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_8678"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_7EEB"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_87F0"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_8780"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_869F"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_869F"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_86E0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_86E0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_8EDF"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_7EFA"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_8EDF"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_8EF3"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_7EEB"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8F10"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_8760"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_7F56"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_8D40"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_7F95"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_7FA2"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_7FAF"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[9], [0, 9], [8, 299], [328, 2], [2, 333], [173], [5, 7], [5], [333], [18, 23], [343], [10, 299], [104, 15], [105, 12], [12, 207], [299], [290], [16, 99, 93, 101], [23], [306], [306, 19], [19, 340], [19, 332], [35, 27], [26, 218], [24, 299], [34, 218], [28, 31], [36, 29], [35, 30], [31], [35], [141], [32, 245], [227], [42, 55], [35], [41, 171], [296, 37], [136], [142, 39], [48], [292, 46], [299, 45], [43, 52], [81, 47], [54], [51], [50, 58], [48, 70], [58], [299, 59], [51, 77], [305, 51], [61, 69], [54], [104], [56, 299], [72, 60], [299, 63], [299, 62], [67, 292], [64, 68], [66, 84], [65, 299], [64, 68], [74], [69], [49], [96, 71], [176], [44, 94], [49], [78, 95], [73, 299], [79], [75, 151], [81], [83, 95], [82, 85], [97, 79], [74, 84], [85], [94], [74, 87], [91, 86], [88, 98], [90, 299], [92, 100], [88], [94], [80], [80], [290], [104], [94], [179, 94], [165], [97], [290], [89, 98], [290], [237, 110], [238, 102], [115, 292], [104, 170], [104, 185], [104], [104], [104], [237], [219, 116], [208, 111], [120, 140], [113, 247], [192, 193, 226, 292, 263, 243, 124, 189, 191], [116, 117], [219], [25, 119], [304, 25], [130, 127], [299, 125], [121, 123], [121, 303], [267, 126], [129, 169], [131, 285], [128, 140], [249], [169, 132], [249], [136], [336], [299, 135], [138, 133], [137, 118], [141], [299, 139], [137, 347], [118], [76, 167], [145, 201], [141], [141], [141], [147, 150], [145, 201], [292, 150], [336, 153], [148, 319], [154, 159], [160, 292], [299, 155], [152, 299], [314, 158], [162, 299], [155, 324], [155], [250, 13], [314, 158], [165, 166], [122], [161, 299], [168, 299], [163, 156], [38, 183], [165], [165], [122, 157], [336], [299, 174], [186], [], [316, 172], [182, 175], [178, 299], [186, 180], [176, 183], [182], [299, 53], [299, 181], [186], [184, 217], [186], [57, 217], [184, 213], [299, 187], [188, 286], [196], [262, 190], [281, 194], [260, 190], [264, 190], [265, 190], [146], [194, 278], [308, 198], [196, 287], [200, 204], [146], [202], [108, 205], [219, 206], [202], [202], [14, 159], [112, 219], [106, 299], [209, 212], [210], [210, 211], [212], [219, 214], [217], [215], [216, 215], [219], [299, 220], [227], [292, 222], [221, 109], [107, 109], [227, 223], [224, 228], [225, 299], [227], [40, 246], [290, 230], [227, 134], [227], [290], [234, 299], [233, 231], [22, 231], [282, 235], [282, 236], [330], [297, 291], [237], [237], [343], [240, 242], [240, 344], [33, 244], [143], [143], [144], [352, 351], [114, 247], [247], [251, 253], [253, 254], [256, 268], [257, 255], [253], [257], [259, 6], [258, 261], [261], [266, 309], [262], [173], [199], [195, 262], [262], [262], [269, 309], [199], [173], [280, 270], [273, 309], [232, 274], [299, 271], [276, 309], [299, 277], [274, 355], [279], [232], [281], [288, 283], [279], [284], [330], [288], [144], [284], [299, 197], [299], [289, 337], [11, 325], [289, 337], [292], [], [348, 292], [292, 327], [17, 292], [177, 292], [298, 292], [313, 292], [306, 20], [329, 299], [241, 299], [299, 4], [299, 335], [299, 229], [299], [307, 309], [309], [103, 239], [310, 311], [311], [173], [173], [315, 317], [290], [203], [], [203], [323, 149], [336, 164], [1, 359], [320, 322], [320], [293, 294], [122], [326, 343], [3, 302], [331, 300], [333], [330], [290], [330, 350], [330], [301, 334], [21, 301], [336], [338, 341], [318], [339, 341], [341], [343], [345, 342], [345], [318], [343], [312, 346], [312], [118], [349, 295], [248, 114], [272, 275], [352], [353, 354], [354], [356, 357], [232], [357], [321, 358], [321], [1]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, rcx", "add     rsp, 8", "retn"], ["mov~rax,rcx", "add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 6, 2, 2, 1, -1, 0.16666666666666666, ["sub     rsp, 8", "call    _malloc", "xor     ecx, ecx", "test    rax, rax", "mov     rsi, rax", "jz      short loc_930D"], ["sub~rsp,0", "call~FOO", "xor~ecx,ecx", "test~rax,rax", "mov~rsi,rax", "jz~FOO"]], [4, 0, 1, 4, 0, 16, 0, 0, 2, -1, 0.0, ["lea     rcx, [p+10h]", "mov     dword ptr [rax+0Ch], 1415FB4Ah", "mov     rdx, 0FF00FF00FF00FF01h", "mov     rax, p", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rdi, [rax+slot*8]", "mov     [rax+slot*8], p", "mov     [rsi], rdi"], ["lea~rcx,[p+0]", "mov~[word ptr [rax+0],0", "mov~rdx,0", "mov~rax,p", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rdi,<TAG>", "mov~<TAG>,p", "mov~<TAG>,rdi"]], [1, 0, 4, 1, 0, 2, 0, 0, 0, 1, 0.0, ["add     n, 10h; size", "jb      short loc_9315"], ["add~n,0", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     ecx, ecx", "mov     rax, rcx", "retn"], ["xor~ecx,ecx", "mov~rax,rcx", "retn"]]], "func_feature": [1, 3, 2, 0, 5, 5, 2, 30, 0.03333, 1, 7], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "mmalloca", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.02564102564102564, ["jmp     short locret_932E"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, -1, 0.16025641025641024, ["mov     rax, [rcx-10h]", "test    rax, rax", "jnz     short loc_9370"], ["mov~rax,[rcx-10h]+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    p, p", "jz      short locret_932E"], ["test~p,p", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 0, 0.0641025641025641, ["lea     rcx, [rax+slot*8]", "jmp     short loc_938C"], ["lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 1, 0.07692307692307693, ["jmp     short loc_93A0"], ["jmp~FOO"]], [3, 0, 11, 4, 0, 14, 1, 1, 2, 3, 0.1282051282051282, ["mov     rax, p", "mov     rdx, 0FF00FF00FF00FF01h", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rcx, [rax+slot*8]", "test    rcx, rcx", "jz      short locret_932E"], ["mov~rax,p", "mov~rdx,0", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 4, 0.07051282051282051, ["cmp     dword ptr [p-4], 1415FB4Ah", "jz      short loc_9330"], ["cmp~[word ptr [p-4]+0],0", "jz~FOO"]], [1, 0, 2, 1, 0, 1, 0, 0, 6, -1, 0.038461538461538464, ["sub     rcx, 10h"], ["sub~rcx,0"]], [0, 0, 8, 0, 0, 2, 0, 1, 5, -1, 0.09615384615384615, ["cmp     p, rax", "jz      short loc_9388"], ["cmp~p,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 3, 2, 0.17307692307692307, ["cmp     rcx, p", "jnz     short loc_9378"], ["cmp~rcx,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.019230769230769232, ["mov     rcx, rax"], ["mov~rcx,rax"]], [1, 0, 1, 1, 0, 4, 0, 1, 6, -1, 0.0641025641025641, ["mov     rax, [p-10h]", "sub     p, 10h; ptr", "mov     [rcx], rax", "jmp     _free"], ["mov~rax,[p-10h]+0]", "sub~p,0", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []]], "func_feature": [0, 3, 10, 0, 14, 18, 3, 36, 0.06548, 1, 6], "succs": [[10], [0, 8], [10, 6], [12], [3], [9, 10], [10, 5], [12], [11, 7], [1, 4], [], [1], [13], []], "fname": "freea", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.06666666666666667, ["mov     rsi, [rsp+78h+var_30]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_9591"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 23, 2, 0, 4, 0, 0, 5, 7, 0.305, ["mov     rax, [rsp+78h+var_60]", "add     [rsp+78h+string], rax", "add     count, 1", "mov     [rsp+78h+var_6C], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "add~count,0", "mov~[rsp+0],0"]], [2, 0, 23, 0, 0, 3, 0, 1, 4, 8, 0.03333333333333333, ["mov     [rsp+78h+var_60], 1", "mov     [rsp+78h+var_58], 0", "jmp     loc_947B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 5, 8, 0.015000000000000001, ["mov     rdi, [rsp+78h+string]; s", "call    _strlen", "mov     [rsp+78h+var_58], 0", "mov     [rsp+78h+var_60], rax", "jmp     loc_947B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 5, 8, 0.26666666666666666, ["mov     eax, [rsp+78h+var_54]", "test    eax, eax", "jz      loc_93E3"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 7, 0.07833333333333334, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_9572"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 23, 0, 0, 3, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_6C], 1", "jmp     loc_946F"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 1, 2, 6, 10, 0.165, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+78h+var_58], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_9568"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 2, 6, 0.38333333333333336, ["cmp     [rsp+78h+var_78], 0", "jz      short loc_9438"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 23, 0, 0, 9, 1, 1, 1, 7, 0.03333333333333333, ["mov     rbp, rsp", "mov     [rsp+78h+string], string_0", "mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_74], 0", "mov     [rsp+78h+var_6C], 0", "xor     ebx, ebx", "lea     r12, is_basic_table", "lea     r13, [rbp+4]", "jmp     short loc_948E"], ["mov~rbp,rsp", "mov~[rsp+0],string_0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,ebx", "lea~r12,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 5, 3, 0.20833333333333334, ["test    rax, rax", "jnz     short loc_94F4"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 7, 1, 0.06166666666666667, ["mov     edx, [rsp+78h+var_54]", "test    edx, edx", "jnz     loc_95B5"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 23, 0, 0, 8, 1, 0, 3, 8, 0.14666666666666667, ["mov     rcx, [rsp+78h+string]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r12+rax*4]", "bt      eax, edx", "jnb     loc_9518"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.05333333333333334, ["mov     [rsp+78h+var_78], 1", "jmp     loc_9494"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 25, 1, 1, 12, 1, 2, 0, 8, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, string_0", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+78h+var_30], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_9408"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,string_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 23, 0, 0, 4, 0, 1, 6, 2, 0.08666666666666667, ["mov     rax, [rsp+78h+string]", "mov     [rsp+78h+var_60], 1", "cmp     byte ptr [rax], 0", "jnz     loc_9596"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 23, 0, 3, 12, 0, 4, 3, 5, 0.30333333333333334, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+78h+string]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+78h+string]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+78h+var_60], rax", "jz      short loc_9530"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.24666666666666667, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      short loc_9548"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 1, -1, 0.005, ["mov     rdi, string_0; s", "call    _strlen", "mov     string_0, rax"], ["mov~rdi,string_0", "call~FOO", "mov~string_0,rax"]], [3, 0, 23, 0, 0, 5, 0, 0, 4, 9, 0.045000000000000005, ["mov     [rsp+78h+var_60], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+78h+var_58], 1", "mov     [rsp+78h+var_6C], 1", "mov     [rsp+78h+var_54], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_6C], 1", "jmp     loc_946F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [12, 9, 29, 5, 26, 33, 1, 119, 0.10173, 7, 4], "succs": [[], [0, 10], [11], [2], [2], [1, 2], [], [16, 6], [5], [8, 24], [], [20, 15], [11], [9, 19], [9, 25], [23, 7], [20], [12, 22], [], [18, 14], [3, 21], [4, 13], [1], [5], [5], []], "fname": "mbslen", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 2, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_9610"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,<STR>", "jz~FOO"]], [1, 1, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_9618"], ["xor~eax,0", "cmp~ecx,<STR>", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[1, 0, 34, 2, 0, 4, 0, 0, 0, 0, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_97FB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9707"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000009666 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_9690"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9782"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_9690"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_97BA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_97DC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_96E5"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_980C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_9658"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_9690"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_9690"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_9690"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_9690"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_9690"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_969D"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000009666 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_96A0; jumptable 0000000000009666 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000009666 case 11", "cmp     r11d, 0AFh", "ja      loc_981D"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_97EA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9729"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_97A7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009666 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_97CB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_96C1"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_974F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_B1D0", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[8], [0, 2], [8], [13], [1, 3, 9, 10, 12, 22, 25, 26, 29], [13], [5], [5], [13], [24, 27], [28, 21], [15], [35, 11], [19, 23], [13], [13], [13], [13], [13], [], [34, 19], [18], [], [4, 22], [16], [6, 7], [30, 31], [16], [18], [32, 33], [14], [14], [17], [17], [23], [15]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.024118683901292598, ["test    rax, rax", "jz      short loc_A00E"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 0000000000009A55 default case"], ["mov~rax,[a+0]"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_9A10"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.44271445358401884, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_9A10"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.4430963572267921, ["cmp     bl, 74h ; 't'", "jnz     short loc_9A38"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_9E1E"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_9E04"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_A1F9"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371329, ["add     eax, 8"], ["add~eax,0"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.44729729729729734, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_9A10"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975328, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_9A13"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_9A13"], ["or~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_A01C"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.027438307873090484, ["test    memory, memory", "jz      loc_A13A"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_9C14"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824913, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_9E10"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.025440658049353703, ["mov     [a+8], memory"], ["mov~[a+0],memory"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.46119271445358406, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_99F0"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_9A17"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_A040"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_A25F"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_98CE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_9C4E"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_9C21"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.02382491186839013, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_9ACB; jumptable 0000000000009A55 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.4382784958871916, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 17, 31, 0.03025851938895418, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_99DF"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_9E3A"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_A115"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_9E45"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_9C38"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_A238"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359578, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [0, 0, 184, 1, 0, 5, 0, 1, 22, 22, 0.43434195064629855, ["lea     rsi, off_B24C", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_9E48"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_A0FF"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_9B85"], ["cmp~r11b,0", "jnz~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    _malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 0, 23, 28, 0.008578143360752051, ["mov     ecx, 10h; jumptable 0000000000009A55 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_A0BB"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056333, ["cmp     eax, 0Fh; jumptable 0000000000009A55 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9A68"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_9A68"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_9A68"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056333, ["cmp     eax, 0Fh; jumptable 0000000000009A55 case 73", "mov     ecx, 16h", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9A68"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_9A68"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_9A68"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 11h; jumptable 0000000000009A55 case 75", "jmp     loc_9A68"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 0Eh; jumptable 0000000000009A55 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_9A68"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 0000000000009A55 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_9A68"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 0000000000009A55 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_9A68"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056333, ["cmp     eax, 0Fh; jumptable 0000000000009A55 cases 63,68", "mov     ecx, 9", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_9A68"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_9A68"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_9A68"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.013513513513513473, ["cmp     eax, 0Fh; jumptable 0000000000009A55 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_9A68"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_9A68"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386606, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_99DF"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_9CB7"], ["cmp~dil,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_A262"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_9A77"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_9C77"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_9E87"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_9AB7"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_9A84"], ["mov~[a+0],memory", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_A29E"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_A280"], ["cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_98AC"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_A21A"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.005141010575793185, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_9E8A"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_98E0"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_98A0"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_98A9"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_98A9"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_A13A"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_A0A9"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775558, ["cmp     r11b, 9", "jbe     short loc_9E65"], ["cmp~r11b,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_9AA0"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.044594594594594604, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_A2DD"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 0, 1, 24, 8, 0.005141010575793185, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_A2A1"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.044594594594594604, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_A031"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.044594594594594604, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_9BAA"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_A180"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.005141010575793185, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_9CC6"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.044594594594594604, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_9CC6"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_98CE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["cmp~bl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 0000000000009A55 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_9B55"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_9CFE"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.025440658049353703, ["mov     [a+8], memory", "jmp     loc_9CD3"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_A0E2"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_A13A"], ["test~r9,r9", "js~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_9CE8"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359578, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233846, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_A16E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_A13A"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210342, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_99D6"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_A1E7"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_A2F3"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.1312573443008226, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_99DF"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_9D21"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_9A30"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_9D28"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_9966"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_9966"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_A14B"], ["test~rax,rax", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_9980"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_9940"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_9990"], ["cmp~bl,0", "jz~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_99A0"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_A13A"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_99B0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_99C0"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_A13A"], ["test~memory,memory", "jz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_9D67"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_9D46"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.03296122209165688, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_9960"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_9966"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_9B5E"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_9D6A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_9FFD; jumptable 0000000000009A55 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.010634547591069332, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_9DD0"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_9DD7"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 0, 12, 8, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_9DAF"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_9DF6"], ["jmp~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802588, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_99D6"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[19, 7], [0], [0, 135], [0], [0], [8, 14], [5, 14], [19], [11, 38], [35, 23], [9, 29], [14], [20], [12, 21], [16], [6, 14], [25], [16], [16], [30, 31], [24, 148], [20], [35, 22], [22], [32], [17, 141], [25], [145, 42], [88, 27], [37, 47], [121], [30], [34, 51], [32, 146], [45], [39], [1, 124], [81], [49, 4], [26], [3, 39], [103], [104, 41], [50], [43, 175], [48, 45], [4, 118], [117, 46], [51], [67, 68, 69, 70, 71, 76, 62, 54, 57, 124, 4], [50, 52], [2, 78], [175, 55], [122, 93], [56], [86], [120, 79], [56, 58], [56, 59], [56, 60], [56, 61], [56], [56, 63], [56, 64], [56, 65], [56, 66], [56], [56], [56], [56], [56], [56, 72], [56, 73], [56, 74], [56, 75], [56], [56, 77], [56], [10, 26], [28], [82, 47], [80, 81], [90], [28], [10, 26], [87], [85, 87], [96], [113, 92], [88], [94, 95], [90, 109], [106], [99], [110], [94], [105, 108], [96], [100, 143], [98, 116], [99], [100], [100], [89, 148], [103], [112, 86], [106, 107], [113], [97, 4], [4, 119], [123, 91], [110], [115, 4], [114, 36], [124], [33], [121], [147, 125], [117], [117], [83, 4], [], [121], [4, 111], [130, 102], [133, 127], [125], [131], [4, 174], [128, 162], [148, 134], [131, 132], [133], [40, 138], [155, 148], [84], [160], [136, 185], [26], [142], [139], [18, 15], [144, 142], [140, 150], [150, 151], [152, 158], [145, 13], [145, 137], [145], [153, 166], [149, 165], [161], [158], [154, 167], [168, 156], [148, 101], [169, 159], [122], [122, 157], [163, 173], [148, 126], [170, 171], [176, 161], [164], [150], [164], [164], [164], [164], [164], [171], [129], [150], [44, 181], [129], [177, 4], [4, 172], [33], [184], [178, 183], [179, 182], [84, 180], [184], [179], [84], [160]], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_A376"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_A360"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __uflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fscanf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strnlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswalnum:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ungetc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswspace:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strdup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
