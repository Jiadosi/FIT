{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_2432"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_218CA0", "jmp     cs:qword_218CA8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 100, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_2440", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__uflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimensat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 83, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:pathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 118, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 48, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 37, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:symlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "symlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fscanf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strnlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimes_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkfifo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:umask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xmknod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswalnum_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ungetc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:linkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswspace_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 65, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rename_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimens_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strdup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimesat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 65, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     desc, name; file", "jmp     _chmod"], ["mov~desc,name", "jmp~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 0, 0, 0.0, ["test    edi, edi", "mov     rax, name", "mov     esi, edx; mode", "js      short loc_2AAE"], ["test~edi,edi", "mov~rax,name", "mov~esi,edx", "js~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.08333333333333333, ["jmp     _fchmod"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 4, 3, 7, 0.03333, 0, 0], "succs": [[4], [0, 2], [3], [], []], "fname": "fchmod_or_lchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5839; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5820; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0A2h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 74, 0, 0, 2, 0, 1, 0, 0, 0.0005070585773385058, ["mov     cs:parents_option, r14b; jumptable 0000000000002CE8 case 261", "jmp     loc_2CB0"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 74, 1, 0, 3, 0, 1, 3, 3, 0.29785264716771565, ["movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [1, 0, 2, 0, 0, 2, 0, 1, 11, -1, 0.024435394298408, ["cmp     [rsp+158h+x.require_preserve_xattr], 0", "jnz     loc_31AA"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 10, -1, 0.05831173639392818, ["cmp     [rsp+158h+x.preserve_security_context], 0", "jz      short loc_307C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 11, -1, 0.011847463902258423, ["cmp     cs:selinux_enabled, 0", "jnz     short loc_307C"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 3, 0, 2, 9, 3, 2, 12, -1, 0.0, ["lea     rsi, aCannotPreserve; \"cannot preserve security context withou\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 4, -1, 0.0, ["xor     edi, edi; jumptable 0000000000002CE8 case 1", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, -1, 0.009070714550166606, ["cmp     [rsp+158h+x.sparse_mode], 2", "jz      loc_2FEA"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 4, -1, 0.19585338763420956, ["cmp     [rsp+158h+x.reflink_mode], 2", "jz      loc_30E6"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.symbolic_link], r14b; jumptable 0000000000002CE8 case 246", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 6, -1, 0.16660496112550907, ["xor     eax, eax", "cmp     [rsp+158h+make_backups], 0", "jnz     loc_3185"], ["xor~eax,eax", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 5, -1, 0.17771195853387634, ["mov     c, [rsp+158h+backup_suffix_string]", "test    rax, rax", "jz      short loc_3003"], ["mov~c,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 1, 3, 0, 1, 6, -1, 0.0, ["mov     rdi, rax; string", "call    xstrdup", "mov     cs:simple_backup_suffix, rax"], ["mov~rdi,rax", "call~FOO", "mov~<TAG>,rax"]], [0, 0, 74, 0, 0, 5, 0, 1, 4, 6, 0.007078698710622475, ["mov     [rsp+158h+x.preserve_ownership], r14b; jumptable 0000000000002CE8 case 243", "mov     [rsp+158h+x.preserve_mode], r14b", "mov     [rsp+158h+x.preserve_timestamps], r14b", "mov     [rsp+158h+x.require_preserve], r14b", "jmp     short loc_2CB0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 4, 7, 0.0074046649389115145, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000002CE8 case 262", "test    rdi, rdi", "jnz     loc_30C2"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 2, -1, 0.22547204738985563, ["cmp     [rsp+158h+x.hard_link], 0", "jz      short loc_2FC5"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 74, 0, 1, 8, 1, 2, 1, 5, 0.5268419104035542, ["lea     rdx, shortopts; \"abdfHilLnprst:uvxPRS:T\"", "xor     r8d, r8d; longind", "mov     rcx, r13; longopts", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_2F8C"], ["lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rcx,r13", "mov~rsi,argv", "mov~edi,r12d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 9, -1, 0.00018511662347278786, ["mov     [rsp+158h+x.dereference], 2", "jmp     loc_3028"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 8, -1, 0.019622362088115512, ["test    al, al", "jz      short loc_31E3"], ["test~al,al", "jz~FOO"]], [1, 0, 74, 0, 0, 6, 1, 1, 4, 6, 0.0005070585773385058, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000002CE8 case 229", "mov     [rsp+158h+make_backups], 1", "test    rax, rax", "cmovz   rax, [rsp+158h+version_control_string]", "mov     [rsp+158h+version_control_string], rax", "jmp     loc_2CB0"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "test~rax,rax", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+no_target_directory], 1; jumptable 0000000000002CE8 case 215", "jmp     short loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 74, 0, 1, 5, 1, 2, 4, 6, 0.0005070585773385058, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000002CE8 case 260", "xor     edx, edx; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "jmp     loc_2CB0"], ["mov~rdi,<TAG>", "xor~edx,edx", "mov~rsi,r15", "call~FOO", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.verbose], r14b; jumptable 0000000000002CE8 case 249", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 3, -1, 0.012032580525731211, ["cmp     [rsp+158h+x.symbolic_link], 0", "jz      short loc_2FC5"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 74, 0, 1, 6, 1, 2, 5, 1, 0.02165864494631618, ["mov     rdx, [rsp+158h+stat_buf]; stat_buf", "mov     rsi, cs:optarg@@GLIBC_2_2_5; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_31F0"], ["mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 2, 0.04239170677526842, ["cmp     [rsp+158h+target_directory], 0; jumptable 0000000000002CE8 case 247", "jz      loc_3102"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 74, 0, 3, 14, 3, 4, 7, 7, 0.0, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; name", "call    quote", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rsp+158h+target_directory], rax", "call    _dcgettext", "mov     rcx, [rsp+158h+target_directory]", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2F72"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~<TAG>,rax", "call~FOO", "mov~rcx,<TAG>", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 74, 0, 0, 4, 1, 1, 6, 7, 0.033506108848574606, ["mov     eax, [rsp+158h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_2F72"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.unlink_dest_after_failed_open], r14b; jumptable 0000000000002CE8 case 233", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 16, 0, 0, 4, 0, 1, 7, -1, 0.15401703072935952, ["cmp     [rsp+158h+x.dereference], 1", "mov     [rsp+158h+x.backup_type], eax", "movzx   eax, [rsp+158h+x.recursive]", "jz      loc_3174"], ["cmp~[rsp+0],0", "mov~[rsp+0],eax", "movzx~eax,[rsp+0]", "jz~FOO"]], [1, 0, 17, 0, 2, 8, 1, 3, 7, -1, 0.0, ["lea     rsi, aBackupType; \"backup type\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, [rsp+158h+version_control_string]; version", "mov     rdi, rax; context", "call    xget_version", "jmp     loc_3010"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 9, -1, 0.0020362828582006663, ["mov     [rsp+158h+x.dereference], 4", "jmp     loc_3031"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+copy_contents], 1; jumptable 0000000000002CE8 case 259", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 4, -1, 0.004442798963346909, ["lea     rsi, aCannotMakeBoth; \"cannot make both hard and symbolic link\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, -1, 0.11773417252869309, ["test    al, al", "jz      short loc_3031"], ["test~al,al", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 10, -1, 0.032765642354683454, ["cmp     [rsp+158h+x.hard_link], 0", "jz      loc_31D3"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 9, -1, 0.10736764161421695, ["cmp     [rsp+158h+x.unlink_dest_after_failed_open], 0", "jz      short loc_3048"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.interactive], 2; jumptable 0000000000002CE8 case 241", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [38, 0, 74, 1, 8, 74, 2, 8, 0, 6, 0.0, ["push    r15", "push    r14", "mov     r14d, 1", "push    r13", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "mov     rbp, argv", "lea     r13, long_opts", "lea     rbx, off_1237C", "sub     rsp, 128h", "mov     argc, [argv]; argv0", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "lea     r15, [rsp+158h+x]", "call    set_program_name", "lea     rsi, aSSUnbackup+14h; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "mov     rdi, r15; x", "mov     cs:selinux_enabled, 0", "call    cp_options_default", "lea     rdi, name; \"POSIXLY_CORRECT\"", "mov     [rsp+158h+x.copy_as_regular], 1", "mov     [rsp+158h+x.dereference], 1", "mov     [rsp+158h+x.unlink_dest_before_opening], 0", "mov     [rsp+158h+x.unlink_dest_after_failed_open], 0", "mov     [rsp+158h+x.hard_link], 0", "mov     [rsp+158h+x.interactive], 4", "mov     [rsp+158h+x.move_mode], 0", "mov     [rsp+158h+x.one_file_system], 0", "mov     [rsp+158h+x.reflink_mode], 0", "mov     [rsp+158h+x.preserve_ownership], 0", "mov     [rsp+158h+x.preserve_links], 0", "mov     [rsp+158h+x.preserve_mode], 0", "mov     [rsp+158h+x.preserve_timestamps], 0", "mov     [rsp+158h+x.preserve_security_context], 0", "mov     [rsp+158h+x.require_preserve_context], 0", "mov     [rsp+158h+x.preserve_xattr], 0", "mov     [rsp+158h+x.reduce_diagnostics], 0", "mov     [rsp+158h+x.require_preserve_xattr], 0", "mov     [rsp+158h+x.require_preserve], 0", "mov     [rsp+158h+x.recursive], 0", "mov     [rsp+158h+x.sparse_mode], 2", "mov     [rsp+158h+x.symbolic_link], 0", "mov     [rsp+158h+x.set_mode], 0", "mov     [rsp+158h+x.mode], 0", "mov     [rsp+158h+x.stdin_tty], 0", "mov     [rsp+158h+x.update], 0", "mov     [rsp+158h+x.verbose], 0", "call    _getenv", "lea     rdi, aSimpleBackupSu; \"SIMPLE_BACKUP_SUFFIX\"", "test    rax, rax", "mov     [rsp+158h+x.dest_info], 0", "setnz   [rsp+158h+x.open_dangling_dest_symlink]", "mov     [rsp+158h+x.src_info], 0", "call    _getenv", "mov     [rsp+158h+backup_suffix_string], rax", "lea     backup_suffix_string_0, [rsp+158h+st]", "mov     [rsp+158h+no_target_directory], 0", "mov     [rsp+158h+target_directory], 0", "mov     [rsp+158h+copy_contents], 0", "mov     [rsp+158h+version_control_string], 0", "mov     [rsp+158h+make_backups], 0", "mov     [rsp+158h+stat_buf], rax"], ["push~r15", "push~r14", "mov~r14d,0", "push~r13", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "mov~rbp,argv", "lea~r13,<TAG>", "lea~rbx,<TAG>", "sub~rsp,0", "mov~argc,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r15,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,r15", "mov~<TAG>,0", "call~FOO", "lea~rdi,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "lea~rdi,<TAG>", "test~rax,rax", "mov~[rsp+0],0", "setnz~[rsp+0]", "mov~[rsp+0],0", "call~FOO", "mov~[rsp+0],rax", "lea~backup_suffix_string_0,[rsp+0]", "mov~[rsp+0],0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax"]], [0, 0, 11, 0, 0, 2, 0, 0, 9, -1, 0.0020362828582006663, ["movzx   eax, [rsp+158h+copy_contents]", "mov     [rsp+158h+x.copy_as_regular], al"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al"]], [2, 0, 26, 0, 0, 4, 0, 1, 4, -1, 0.004442798963346909, ["cmp     [rsp+158h+x.interactive], 2", "mov     edx, 5", "lea     rsi, aOptionsBackupA; \"options --backup and --no-clobber are m\"...", "jz      short loc_2FA6"], ["cmp~[rsp+0],0", "mov~edx,0", "lea~rsi,<TAG>", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 3, -1, 0.20770085153646797, ["cmp     [rsp+158h+make_backups], 0", "jz      short loc_2FDF"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 1, 4, 15, 1, 4, 12, -1, 0.0, ["call    hash_init", "movsxd  rdx, cs:optind@@GLIBC_2_2_5", "movzx   ecx, [rsp+158h+no_target_directory]; no_target_directory", "mov     edi, r12d", "mov     r8, r15; x", "sub     edi, edx; n_files", "lea     rsi, [argv+rdx*8+0]; file", "mov     rdx, [rsp+158h+target_directory]; target_directory", "call    do_copy", "mov     ebx, eax", "call    forget_all", "mov     eax, ebx", "xor     eax, 1", "movzx   edi, al; status", "call    _exit"], ["call~FOO", "movsxd~rdx,<TAG>", "movzx~ecx,[rsp+0]", "mov~edi,r12d", "mov~r8,r15", "sub~edi,edx", "lea~rsi,[argv+0]", "mov~rdx,<TAG>", "call~FOO", "mov~ebx,eax", "call~FOO", "mov~eax,ebx", "xor~eax,0", "movzx~edi,al", "call~FOO"]], [2, 0, 1, 0, 2, 10, 3, 3, 12, -1, 0.0, ["lea     rsi, aCannotPreserve_0; \"cannot preserve extended attributes, cp\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_3087"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 6, -1, 0.0007404664938911515, ["mov     edx, 5", "lea     rsi, aReflinkCanBeUs; \"--reflink can be used only with --spars\"...", "jmp     loc_2FA6"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.hard_link], r14b; jumptable 0000000000002CE8 case 239", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 1, 0, 2, 7, 4, 2, 5, -1, 0.001480932987782303, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 74, 0, 0, 3, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.preserve_links], r14b; jumptable 0000000000002CE8 case 231", "mov     [rsp+158h+x.dereference], 2", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.update], r14b; jumptable 0000000000002CE8 case 248", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [2, 0, 74, 0, 0, 8, 0, 1, 4, 7, 0.014624213254350241, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000002CE8 case 228", "mov     [rsp+158h+x.dereference], 2", "mov     [rsp+158h+x.preserve_links], r14b", "mov     [rsp+158h+x.preserve_ownership], r14b", "mov     [rsp+158h+x.preserve_mode], r14b", "mov     [rsp+158h+x.preserve_timestamps], r14b", "mov     [rsp+158h+x.require_preserve], r14b", "jz      short loc_2D46"], ["cmp~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     edi, 1; jumptable 0000000000002CE8 default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [2, 0, 74, 1, 0, 3, 0, 1, 2, 4, 0.29951869677897075, ["add     eax, 83h", "cmp     eax, 10Ah; switch 267 cases", "ja      loc_2FBB; jumptable 0000000000002CE8 default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 74, 0, 0, 1, 0, 0, 5, 7, 0.0, ["mov     [rsp+158h+x.preserve_security_context], r14b"], ["mov~[rsp+0],r14b"]], [1, 0, 6, 0, 0, 1, 0, 0, 11, -1, 0.0016660496112550908, ["mov     [rsp+158h+x.unlink_dest_before_opening], 1"], ["mov~[rsp+0],0"]], [0, 0, 7, 0, 0, 1, 0, 1, 12, -1, 0.00018511662347278786, ["jmp     loc_3043"], ["jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 5, 6, 0.006571640133283969, ["mov     [rsp+158h+x.reflink_mode], 2", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 4, 7, 0.014809329877823029, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000002CE8 case 263", "test    rsi, rsi", "jz      loc_30D9"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 74, 0, 0, 4, 0, 1, 4, 6, 0.0005070585773385058, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000002CE8 case 214", "mov     [rsp+158h+make_backups], 1", "mov     [rsp+158h+backup_suffix_string], rax", "jmp     loc_2CB0"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 74, 0, 0, 4, 0, 1, 5, 6, 0.026471677156608666, ["mov     [rsp+158h+x.preserve_xattr], r14b", "mov     [rsp+158h+x.reduce_diagnostics], r14b", "mov     [rsp+158h+x.recursive], r14b", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.interactive], 3; jumptable 0000000000002CE8 case 236", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.recursive], r14b; jumptable 0000000000002CE8 cases 213,245", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.dereference], 2; jumptable 0000000000002CE8 case 211", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.dereference], 4; jumptable 0000000000002CE8 case 207", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.dereference], 3; jumptable 0000000000002CE8 case 203", "jmp     loc_2CB0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.unlink_dest_before_opening], r14b; jumptable 0000000000002CE8 case 266", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     cs:remove_trailing_slashes, r14b; jumptable 0000000000002CE8 case 265", "jmp     loc_2CB0"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 74, 0, 1, 11, 0, 2, 4, 6, 0.0005070585773385058, ["mov     r9, cs:argmatch_die; jumptable 0000000000002CE8 case 264", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, sparse_type_string; arglist", "lea     rcx, sparse_type; vallist", "lea     rdi, context; \"--sparse\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, sparse_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.sparse_mode], eax", "jmp     loc_2CB0"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 74, 0, 1, 10, 0, 2, 5, 6, 0.006571640133283969, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, reflink_type_string; arglist", "lea     rcx, reflink_type; vallist", "lea     rdi, aReflink; \"--reflink\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, reflink_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.reflink_mode], eax", "jmp     loc_2CB0"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 74, 0, 0, 2, 0, 1, 4, 6, 0.0005070585773385058, ["mov     [rsp+158h+x.one_file_system], r14b; jumptable 0000000000002CE8 case 251", "jmp     loc_2CB0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 74, 0, 0, 3, 0, 1, 6, 6, 0.07793409848204369, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     [rsp+158h+target_directory], rax", "jmp     loc_2CB0"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 74, 0, 1, 5, 0, 2, 5, 6, 0.006571640133283969, ["mov     edx, 1; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "mov     [rsp+158h+x.require_preserve], r14b", "jmp     loc_2CB0"], ["mov~edx,0", "mov~rsi,r15", "call~FOO", "mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 11, -1, 0.011662347278785635, ["cmp     [rsp+158h+x.symbolic_link], 0", "jz      loc_3048"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 0, 3, 16, 2, 3, 4, -1, 0.0, ["lea     rsi, name_utf8; jumptable 0000000000002CE8 case 0", "lea     rdi, name_ascii; \"Torbjorn Granlund\"", "call    proper_name_utf8", "mov     r8, rax", "lea     rax, aJimMeyering; \"Jim Meyering\"", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rcx, cs:Version; version", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "push    rax", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cp\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~r8,rax", "lea~rax,<TAG>", "mov~rdi,<TAG>", "mov~rcx,<TAG>", "push~0", "lea~r9,<TAG>", "push~rax", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [2, 0, 74, 0, 2, 9, 3, 2, 5, 7, 0.01906701221769715, ["lea     rsi, msgid; \"multiple target directories specified\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 74, 0, 4, 16, 2, 5, 6, 0, 0.0, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; name", "call    quote", "lea     rsi, aAccessingS; \"accessing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rsp+158h+var_130], rax", "call    _dcgettext", "mov     [rsp+158h+target_directory], rax", "call    ___errno_location", "mov     rcx, [rsp+158h+var_130]", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     rdx, [rsp+158h+target_directory]; format", "xor     eax, eax", "call    _error", "jmp     loc_3120"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rsp+0],rax", "call~FOO", "mov~<TAG>,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~rdx,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [41, 36, 103, 2, 75, 125, 0, 371, 0.03959, 40, 4], "succs": [[16], [0, 6, 9, 13, 14, 19, 20, 21, 22, 25, 28, 32, 37, 45, 47, 48, 49, 50, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72], [42, 43], [2, 4], [2, 5], [2], [], [11, 44], [11, 7], [16], [29, 30], [10, 12], [10], [16], [13, 70], [41, 23], [51, 15], [39], [17, 31], [16], [16], [16], [16], [33, 41], [74, 27], [24, 73], [69], [26, 69], [16], [34, 18], [29], [36], [16], [46], [36, 39], [53, 71], [3, 35], [16], [16], [36], [8, 46], [40, 8], [], [42], [46], [16], [50], [16], [16], [58, 52], [], [1, 50], [58], [3], [53], [16], [67, 55], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [3, 54], [], [69], [27]], "fname": "main", "n_num": 75}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_32A0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_32A0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_32F0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_32F0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3323"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_3338"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 17, 0, 0, 2, 0, 1, 0, 0, 0.013480392156862744, ["mov     [x+1Eh], bpl; jumptable 00000000000033DE case 1", "jmp     short loc_33F0"], ["mov~[x+0],bpl", "jmp~FOO"]], [0, 0, 17, 1, 0, 4, 0, 1, 3, 5, 0.4742647058823529, ["mov     eax, [r13+rax*4+0]", "movsxd  rax, dword ptr [r12+rax*4]", "add     rax, r12", "jmp     rax; switch jump"], ["mov~eax,[r13+0]", "movsxd~rax,<TAG>", "add~rax,r12", "jmp~rax"]], [0, 0, 17, 0, 0, 1, 0, 0, 5, 5, 0.0, ["mov     [x+21h], bpl"], ["mov~[x+0],bpl"]], [1, 0, 17, 0, 0, 6, 0, 1, 4, 5, 0.09191176470588235, ["cmp     cs:selinux_enabled, 0; jumptable 00000000000033DE case 6", "mov     [x+1Dh], bpl", "mov     [x+1Eh], bpl", "mov     [x+1Ch], bpl", "mov     [x+1Fh], bpl", "jz      short loc_347D"], ["cmp~<TAG>,0", "mov~[x+0],bpl", "mov~[x+0],bpl", "mov~[x+0],bpl", "mov~[x+0],bpl", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [0, 1, 1, 1, 0, 9, 0, 1, 6, -1, 0.05514705882352941, ["mov     rdi, [rsp+48h+arg_writable]; ptr", "add     rsp, 18h", "pop     comma", "pop     on_off", "pop     r12", "pop     r13", "pop     x", "pop     comma", "jmp     free"], ["mov~rdi,[rsp+0]", "add~rsp,<STR>", "pop~comma", "pop~on_off", "pop~r12", "pop~r13", "pop~x", "pop~comma", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+1Fh], bpl; jumptable 00000000000033DE case 3", "jmp     short loc_33F0"], ["mov~[x+0],bpl", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    _abort; jumptable 00000000000033DE default case"], ["call~FOO"]], [2, 0, 17, 0, 1, 9, 0, 2, 2, 1, 0.5220588235294118, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rcx, preserve_vals_6808; vallist", "lea     rdx, preserve_args_6809; arglist", "lea     rdi, aPreserve; \"--preserve\"", "mov     r8d, 4; valsize", "mov     rsi, s; arg", "call    __xargmatch_internal", "cmp     dword ptr [r13+rax*4+0], 6; switch 7 cases", "ja      loc_3486; jumptable 00000000000033DE default case"], ["mov~r9,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "mov~rsi,s", "call~FOO", "cmp~[word ptr [r13+0],0", "ja~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, 4, 0.10661764705882353, ["mov     [x+23h], bpl", "jmp     loc_33F0"], ["mov~[x+0],bpl", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 0, 0, 4, 4, 0.013480392156862744, ["mov     [x+23h], bpl; jumptable 00000000000033DE case 5", "mov     [x+24h], bpl", "nop     dword ptr [rax+rax+00000000h]"], ["mov~[x+0],bpl", "mov~[x+0],bpl", "nop~[word ptr [rax+0]"]], [0, 0, 17, 0, 0, 3, 1, 1, 5, 3, 0.5477941176470588, ["test    comma, comma", "mov     rbx, comma", "jnz     short loc_3380"], ["test~comma,comma", "mov~rbx,comma", "jnz~FOO"]], [1, 0, 17, 0, 1, 6, 2, 2, 1, 2, 0.5073529411764706, ["mov     esi, 2Ch ; ','; c", "mov     rdi, s; s", "xor     r15d, r15d", "call    _strchr", "test    comma, comma", "jz      short loc_339C"], ["mov~esi,0", "mov~rdi,s", "xor~r15d,r15d", "call~FOO", "test~comma,comma", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 0, 2, 2, 0.0, ["lea     r15, [comma+1]", "mov     byte ptr [rax], 0"], ["lea~r15,[comma+0]", "mov~<TAG>,0"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+1Dh], bpl; jumptable 00000000000033DE case 0", "jmp     short loc_33F0"], ["mov~[x+0],bpl", "jmp~FOO"]], [0, 1, 17, 1, 1, 15, 0, 1, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, x", "push    r13", "push    r12", "lea     r13, preserve_vals_6808", "push    rbp", "push    rbx", "lea     r12, off_12360", "mov     ebp, edx", "sub     rsp, 18h", "call    xstrdup", "mov     [rsp+48h+arg_writable], rax", "mov     rbx, s", "xchg    ax, ax"], ["push~r15", "push~r14", "mov~r14,x", "push~r13", "push~r12", "lea~r13,<TAG>", "push~rbp", "push~rbx", "lea~r12,<TAG>", "mov~ebp,edx", "sub~rsp,<STR>", "call~FOO", "mov~[rsp+0],rax", "mov~rbx,s", "xchg~ax,ax"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+1Ch], bpl; jumptable 00000000000033DE case 2", "jmp     short loc_33F0"], ["mov~[x+0],bpl", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+21h], bpl; jumptable 00000000000033DE case 4", "mov     [x+22h], bpl", "jmp     short loc_33F0"], ["mov~[x+0],bpl", "mov~[x+0],bpl", "jmp~FOO"]]], "func_feature": [4, 3, 16, 0, 18, 26, 2, 72, 0.13256, 6, 3], "succs": [[11], [0, 3, 6, 10, 14, 16, 17], [9], [9, 2], [], [4], [11], [], [1, 7], [11], [11], [12, 5], [8, 13], [8], [11], [12], [11], [11]], "fname": "decode_preserve_arg", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 3, 17, 4, 4, 0, 0, 0.00701530612244898, ["mov     rdi, [rbp+slash]; name", "mov     dword ptr [rbp+stat_buf], r8d", "call    quote", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     slash_0, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+stat_buf]", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     edi, edi; status", "mov     esi, r8d; errnum", "call    _error", "xor     eax, eax", "jmp     short loc_38D1"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~slash_0,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~edi,edi", "mov~esi,r8d", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [0, 0, 41, 0, 1, 4, 1, 2, 7, 3, 0.12457482993197279, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jnz     loc_383C"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.0017006802721088435, ["mov     r8d, 14h"], ["mov~r8d,0"]], [2, 0, 41, 0, 0, 4, 0, 1, 9, 4, 0.24383503401360543, ["cmp     byte ptr [slash_0+1], 2Fh ; '/'", "lea     rdi, [slash_0+1]", "mov     byte ptr [rbx], 2Fh ; '/'", "jnz     short loc_3590"], ["cmp~[yte ptr [slash_0+0],0", "lea~rdi,[slash_0+0]", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 41, 0, 0, 5, 1, 1, 16, 5, 0.04443027210884354, ["mov     edx, esi", "mov     eax, esi", "and     edx, 1C0h", "cmp     edx, 1C0h", "jz      loc_35F7"], ["mov~edx,esi", "mov~eax,esi", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 15, 5, 0.14158163265306123, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      loc_35F7"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 0, 1, 5, 2, 2, 16, 4, 0.019770408163265304, ["or      esi, 1C0h; mode", "mov     rdi, dir; file", "call    _chmod", "test    eax, eax", "jz      loc_35F7"], ["or~esi,0", "mov~rdi,dir", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 0, 8, 5, 0.052295918367346934, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 41, 0, 0, 1, 0, 0, 10, 6, 0.027636054421768707, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 41, 0, 0, 4, 1, 1, 15, 6, 0.05357142857142857, ["mov     eax, esi", "not     eax", "test    eax, r15d", "jnz     loc_3888"], ["mov~eax,esi", "not~eax", "test~eax,r15d", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 14, 6, 0.1760204081632653, ["cmp     byte ptr [x+1Dh], 0", "mov     esi, [rbp+stats.st_mode]", "jnz     short loc_37B0"], ["cmp~[yte ptr [x+0],0", "mov~esi,[rbp+0]", "jnz~FOO"]], [2, 0, 41, 0, 0, 5, 0, 1, 9, 6, 0.2070578231292517, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 1", "cmp     byte ptr [x+1Ch], 0", "mov     eax, [new+18h]", "jz      loc_37F8"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[yte ptr [x+0],0", "mov~eax,[new+0]", "jz~FOO"]], [2, 0, 41, 1, 1, 31, 1, 2, 8, 5, 0.23044217687074828, ["mov     edi, 0A8h; n", "call    xmalloc", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_dev]", "mov     r14, rax", "mov     rcx, [rbp+attr_list]", "movups  xmmword ptr [new], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_nlink]", "movups  xmmword ptr [new+10h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_gid]", "movups  xmmword ptr [new+20h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_size]", "movups  xmmword ptr [new+30h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_blocks]", "movups  xmmword ptr [new+40h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_atim.tv_nsec]", "movups  xmmword ptr [new+50h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_mtim.tv_nsec]", "movups  xmmword ptr [new+60h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_ctim.tv_nsec]", "movups  xmmword ptr [new+70h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.__glibc_reserved+8]", "movups  xmmword ptr [new+80h], xmm0", "mov     new, slash_0", "mov     byte ptr [new+90h], 0", "sub     rax, dir", "test    r15d, r15d", "mov     [new+98h], rax", "mov     rax, [rcx]", "mov     [rcx], new", "mov     [new+0A0h], rax", "jz      loc_35D7"], ["mov~edi,0", "call~FOO", "movdqa~xmm0,[mmword ptr [rbp+0]", "mov~r14,rax", "mov~rcx,[rbp+0]", "movups~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "mov~new,slash_0", "mov~[yte ptr [new+0],0", "sub~rax,dir", "test~r15d,r15d", "mov~[new+0],rax", "mov~rax,<TAG>", "mov~<TAG>,new", "mov~[new+0],rax", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 14, 3, 0.00510204081632653, ["mov     rdi, dir; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "jmp     short loc_3949"], ["mov~rdi,dir", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 13, 4, 0.19345238095238096, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_3975"], ["mov~rdx,[rbp+0]", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.03996598639455782, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_398E"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 41, 0, 0, 3, 0, 0, 3, 4, 0.08503401360544217, ["lea     rax, [rbp+src_st]", "mov     [rbp+var_190], rax", "nop"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "nop"]], [0, 0, 42, 0, 0, 2, 0, 1, 2, 5, 0.033588435374149656, ["mov     slash_0, [rbp+slash]", "jmp     loc_3581"], ["mov~slash_0,[rbp+0]", "jmp~FOO"]], [2, 0, 43, 1, 0, 3, 0, 1, 3, 5, 0.017857142857142856, ["add     slash_0, 1; s", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_3578"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 41, 0, 0, 1, 0, 1, 12, 4, 0.03273809523809524, ["jmp     loc_3590"], ["jmp~FOO"]], [2, 0, 41, 1, 0, 3, 0, 1, 11, 5, 0.03018707482993197, ["add     slash_0, 1", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_3608"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 41, 0, 0, 4, 1, 0, 10, 5, 0.09056122448979592, ["mov     r15d, eax", "and     r15d, 3Fh", "mov     esi, r15d", "not     esi"], ["mov~r15d,eax", "and~r15d,0", "mov~esi,r15d", "not~esi"]], [0, 1, 41, 0, 0, 5, 1, 1, 11, 5, 0.0, ["mov     r15d, eax", "and     r15d, 12h", "mov     esi, r15d", "not     esi", "jmp     loc_3718"], ["mov~r15d,eax", "and~r15d,<STR>", "mov~esi,r15d", "not~esi", "jmp~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 10, 5, 0.10459183673469387, ["xor     r15d, r15d", "cmp     byte ptr [x+1Dh], 0", "mov     esi, 0FFFFFFFFh", "jz      loc_3718"], ["xor~r15d,r15d", "cmp~[yte ptr [x+0],0", "mov~esi,0", "jz~FOO"]], [0, 0, 41, 0, 0, 1, 0, 1, 17, 6, 0.007227891156462584, ["jmp     loc_378B"], ["jmp~FOO"]], [1, 0, 41, 0, 1, 5, 1, 2, 4, 3, 0.3565051020408163, ["mov     esi, 2Fh ; '/'; c", "call    _strchr", "test    rax, rax", "mov     rbx, rax", "jz      loc_38CC"], ["mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 41, 0, 1, 9, 2, 2, 16, 7, 0.02147108843537415, ["call    cached_umask", "mov     esi, [rbp+stats.st_mode]", "not     eax", "and     r15d, eax", "mov     edx, esi", "mov     eax, esi", "not     edx", "test    edx, r15d", "jnz     loc_37A1"], ["call~FOO", "mov~esi,[rbp+0]", "not~eax", "and~r15d,eax", "mov~edx,esi", "mov~eax,esi", "not~edx", "test~edx,r15d", "jnz~FOO"]], [1, 0, 3, 0, 3, 14, 5, 4, 3, 2, 0.00701530612244898, ["call    quote", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_38D1"], ["call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 8, 3, 0.01764455782312925, ["mov     rdi, dir", "jmp     short loc_38F6"], ["mov~rdi,dir", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.002125850340136054, ["mov     rdi, dst_dir; name"], ["mov~rdi,dst_dir"]], [0, 1, 41, 0, 1, 6, 3, 2, 11, 4, 0.21726190476190477, ["and     eax, 0FFFh", "mov     rdi, dir; path", "and     esi, eax; mode", "call    _mkdir", "test    eax, eax", "jnz     loc_3932"], ["and~eax,<STR>", "mov~rdi,dir", "and~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 1, 0, 17, 6, 0.01403061224489796, ["or      r15d, eax", "mov     byte ptr [new+90h], 1", "mov     [new+18h], r15d"], ["or~r15d,eax", "mov~[yte ptr [new+0],0", "mov~[new+0],r15d"]], [1, 0, 45, 0, 0, 4, 0, 1, 1, 6, 0.017006802721088433, ["lea     rdi, [dir+src_offset+0]", "cmp     byte ptr [src_0], 2Fh ; '/'", "mov     [rbp+slash], src_0", "jnz     loc_3926"], ["lea~rdi,[dir+0]", "cmp~<TAG>,0", "mov~[rbp+0],src_0", "jnz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 7, 4, 0.12181122448979591, ["mov     eax, [rbp+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3651"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 6, 4, 0.2582908163265306, ["mov     rdx, [rbp+var_190]; stat_buf", "mov     rsi, [rbp+slash]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_3820"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 7, 4, 0.08227040816326531, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3970"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 43, 0, 0, 1, 0, 0, 2, 6, 0.0008503401360544217, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 41, 0, 1, 10, 2, 2, 5, 5, 0.3239795918367347, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     byte ptr [rbx], 0", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     r15d, eax", "movzx   eax, byte ptr [x+1Ch]", "or      al, [x+1Dh]", "or      al, [x+1Eh]", "jnz     short loc_3620"], ["mov~rdx,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~r15d,eax", "movzx~eax,[yte ptr [x+0]", "or~al,[x+0]", "or~al,[x+0]", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 6, 5, 0.06547619047619048, ["test    r15d, r15d", "jnz     short loc_3620"], ["test~r15d,r15d", "jnz~FOO"]], [2, 0, 7, 0, 0, 4, 1, 1, 1, 4, 0.002976190476190476, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_38F3"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [9, 1, 49, 5, 5, 50, 6, 6, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, x", "mov     rbx, const_dir", "sub     rsp, 168h", "mov     [rbp+attr_list], attr_list_0", "mov     [rbp+new_dst], new_dst_0", "mov     [rbp+verbose_fmt_string], verbose_fmt_string_0", "mov     verbose_fmt_string_0, fs:28h", "mov     [rbp+var_38], verbose_fmt_string_0", "xor     edx, edx", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+190h+attr_list+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r13, rax", "call    dir_len", "mov     r15, rax", "add     dirlen, 1Fh", "mov     rsi, dir; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdx, dirlen; n", "sub     rsp, rax", "lea     __old, [rsp+190h+attr_list+7]", "and     rbx, 0FFFFFFFFFFFFFFF0h", "mov     rdi, dst_dir; dest", "call    _memcpy", "mov     rax, [rbp+attr_list]", "mov     byte ptr [dst_dir+dirlen], 0", "mov     rsi, dst_dir; filename", "mov     edi, 1; ver", "mov     qword ptr [rax], 0", "lea     rax, [rbp+stats]", "mov     rdx, rax; stat_buf", "mov     [rbp+stat_buf], rax", "call    ___xstat", "test    eax, eax", "jz      loc_38B0"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,x", "mov~rbx,const_dir", "sub~rsp,<STR>", "mov~[rbp+0],attr_list_0", "mov~[rbp+0],new_dst_0", "mov~[rbp+0],verbose_fmt_string_0", "mov~verbose_fmt_string_0,<TAG>", "mov~[rbp+0],verbose_fmt_string_0", "xor~edx,edx", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~r15,rax", "add~dirlen,0", "mov~rsi,dir", "and~rax,0", "mov~rdx,dirlen", "sub~rsp,rax", "lea~__old,[rsp+0]", "and~rbx,0", "mov~rdi,dst_dir", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dst_dir", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 12, 3, 0.016581632653061226, ["mov     rdi, dir; name", "call    quote", "lea     rsi, aCannotMakeDire; \"cannot make directory %s\"", "mov     x, rax", "mov     edx, 5; category"], ["mov~rdi,dir", "call~FOO", "lea~rsi,<TAG>", "mov~x,rax", "mov~edx,0"]], [1, 0, 4, 0, 0, 2, 0, 0, 2, 3, 0.002125850340136054, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.02317176870748299, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 41, 0, 1, 6, 1, 1, 13, 5, 0.0, ["mov     rdx, [rbp+slash]", "mov     rsi, rax", "mov     rcx, dir", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rcx,dir", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 12, 5, 0.18835034013605442, ["mov     rax, [rbp+verbose_fmt_string]", "test    rax, rax", "jz      short loc_3754"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 3, 12, 4, 4, 13, 2, 0.01764455782312925, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     slash_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     loc_38D1"], ["xor~edi,edi", "call~FOO", "mov~slash_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 17, 3, 0.00701530612244898, ["mov     rdi, dir; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_3949"], ["mov~rdi,dir", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     dir", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~dir", "pop~r14", "pop~r15", "pop~rbp", "retn"]]], "func_feature": [28, 47, 64, 2, 50, 74, 1, 296, 0.07468, 5, 8], "succs": [[16], [0, 12], [0], [8, 26], [32, 3], [3, 6], [48, 3], [3], [21], [27, 4], [9, 5], [24, 22], [11, 36], [47], [10, 13], [], [49, 15], [26], [17], [17, 19], [26], [20, 21], [31], [31], [31, 23], [4], [44, 38], [32, 25], [16], [28], [28], [42, 46], [5], [18, 37], [2, 12], [1, 34], [29, 7], [19], [35, 39], [35, 36], [43, 30], [40, 33], [47], [44], [16], [14], [45, 14], [16], [47], []], "fname": "make_dir_parents_private", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 21, 0, 1, 5, 1, 2, 0, 0, 0.10064935064935066, ["mov     rdi, x; x", "call    chown_failure_ok", "test    al, al", "mov     r14d, eax", "jz      loc_3BCF"], ["mov~rdi,x", "call~FOO", "test~al,al", "mov~r14d,eax", "jz~FOO"]], [0, 0, 21, 0, 1, 6, 1, 2, 4, 5, 0.11471861471861472, ["mov     edx, [p+20h]; group", "mov     esi, [p+1Ch]; owner", "mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jz      loc_3A1B"], ["mov~edx,[p+0]", "mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.0367965367965368, ["lea     r15, [rbp+timespec]", "jmp     short loc_3A52"], ["lea~r15,[rbp+0]", "jmp~FOO"]], [3, 1, 22, 4, 2, 29, 4, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, const_dst_name", "mov     rbx, attr_list", "mov     r13, x", "sub     rsp, 48h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+70h+src_name+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     __old, rax", "add     dst_name, src_offset", "test    attr_list, attr_list", "mov     [rbp+src_name], rax", "jz      loc_3BA8"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,const_dst_name", "mov~rbx,attr_list", "mov~r13,x", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~__old,rax", "add~dst_name,src_offset", "test~attr_list,attr_list", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 21, 0, 1, 13, 1, 2, 3, 3, 0.04112554112554113, ["mov     rax, [p+50h]", "mov     rdx, [p+48h]", "mov     rsi, r15; timespec", "mov     rdi, dst_name; file", "mov     [rbp+timespec.tv_sec], rdx", "mov     [rbp+timespec.tv_nsec], rax", "mov     rdx, [p+58h]", "mov     rax, [p+60h]", "mov     [rbp+timespec.tv_sec+10h], rdx", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_3A10"], ["mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~rsi,r15", "mov~rdi,dst_name", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rdx,[p+0]", "mov~rax,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 21, 0, 0, 4, 0, 1, 2, 4, 0.2683982683982684, ["cmp     byte ptr [x+1Eh], 0", "mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 0", "jz      short loc_3A10"], ["cmp~[yte ptr [x+0],0", "mov~rax,[p+0]", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.24891774891774893, ["cmp     byte ptr [x+1Ch], 0", "jnz     loc_3AE0"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 21, 0, 1, 7, 1, 2, 6, 5, 0.05411255411255411, ["mov     edx, [p+20h]; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "movzx   r14d, byte ptr [x+1Dh]", "test    r14b, r14b", "jz      loc_3A29"], ["mov~edx,[p+0]", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 3, 0, 3, 11, 3, 4, 7, 2, 0.025974025974025976, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_3BAE"], ["xor~edi,edi", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 6, 3, 0.031385281385281384, ["mov     rdi, dst_name; name", "call    quote", "mov     edx, 5", "mov     dst_name, rax", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "jmp     short loc_3B82"], ["mov~rdi,dst_name", "call~FOO", "mov~edx,0", "mov~dst_name,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 7, 3, 0.011904761904761904, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aFailedToPreser_0; \"failed to preserve permissions for %s\"", "mov     dst_name, rax", "mov     edx, 5; category"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,rax", "mov~edx,0"]], [0, 0, 21, 0, 0, 3, 1, 1, 4, 4, 0.15043290043290045, ["movzx   r14d, byte ptr [x+1Dh]", "test    r14b, r14b", "jnz     loc_3B30"], ["movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 7, 4, 0.011904761904761904, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.025974025974025976, ["mov     r14d, 1"], ["mov~r14d,0"]], [1, 0, 21, 0, 0, 5, 1, 1, 6, 3, 0.21861471861471862, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 2Fh ; '/'", "mov     p, [p+0A0h]", "test    p, p", "jz      loc_3BA8"], ["mov~rax,[p+0]", "mov~<TAG>,0", "mov~p,[p+0]", "test~p,p", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 5, 4, 0.13095238095238096, ["cmp     byte ptr [p+90h], 0", "jnz     loc_3B58"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r14d", "jnz     short loc_3BE8"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r14d", "jnz~FOO"]], [1, 0, 3, 0, 4, 17, 4, 5, 4, 2, 0.01948051948051948, ["mov     rdi, dst_name; name", "xor     r14d, r14d", "call    quote", "lea     rsi, aFailedToPreser; \"failed to preserve times for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3BAE"], ["mov~rdi,dst_name", "xor~r14d,r14d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 2, 0.032467532467532464, ["xor     r14d, r14d", "jmp     short loc_3BAE"], ["xor~r14d,r14d", "jmp~FOO"]], [1, 0, 21, 0, 1, 8, 1, 2, 5, 3, 0.11904761904761904, ["mov     r8d, [p+18h]; mode", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, dst_name; dst_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jz      loc_3A36"], ["mov~r8d,[p+0]", "mov~rdi,[rbp+0]", "mov~ecx,0", "mov~rdx,dst_name", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 6, 4, 0.03463203463203463, ["mov     esi, [p+18h]; mode", "mov     rdi, dst_name; file", "call    _chmod", "test    eax, eax", "jz      loc_3A36"], ["mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [18, 21, 36, 1, 23, 34, 1, 147, 0.0767, 4, 4], "succs": [[9, 7], [0, 11], [5], [2, 13], [17, 6], [4, 6], [1, 11], [12, 15], [16], [8], [8], [19, 15], [19], [16], [13, 5], [20, 14], [21, 22], [16], [16], [18, 14], [10, 14], [], []], "fname": "re_protect", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 1, 0, 3, 13, 2, 4, 0, 0, 0.1, ["mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aForCompleteDoc; \"For complete documentation, run: info c\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_3C2F"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [25, 0, 4, 0, 46, 190, 27, 47, 1, 2, 0.1, ["lea     rsi, aUsageSOptionTS; \"Usage: %s [OPTION]... [-T] SOURCE DEST\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopySourceToDe; \"Copy SOURCE to DEST, or multiple SOURCE\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aMandatoryArgum; \"Mandatory arguments to long options are\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAArchiveSameAs; \"  -a, --archive                same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFForceIfAnExis; \"  -f, --force                  if an ex\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aLLinkLinkFiles; \"  -l, --link                   link fil\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNNoClobberDoNo; \"  -n, --no-clobber             do not o\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aPSameAsPreserv; \"  -p                           same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoPreserveAttr; \"      --no-preserve=ATTR_LIST  don't pr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRRRecursiveCop; \"  -R, -r, --recursive          copy dir\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSparseWhenCont; \"      --sparse=WHEN            control \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSSymbolicLinkM; \"  -s, --symbolic-link          make sym\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUUpdateCopyOnl; \"  -u, --update                 copy onl\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aByDefaultSpars; \"\\nBy default, sparse SOURCE files are d\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheBackupSuffi; \"\\nThe backup suffix is `~', unless set \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoneOffNeverMa; \"  none, off       never make backups (e\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsASpecialCase; \"\\nAs a special case, cp makes a backup \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aReportSBugsToS; \"\\nReport %s bugs to %s\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "lea     rcx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageHttpW; \"%s home page: <http://www.gnu.org/softw\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, domainname; \"coreutils\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <http:\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_3FAF"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "lea~rcx,<TAG>", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 2, 0, 3, 13, 2, 4, 3, 0, 0.0, ["mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aReportSTransla; \"Report %s translation bugs to <http://t\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     short loc_3FAF"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 2, 1, 0.06666666666666667, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_3FE8"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 6, 1, 0, 8, 1, 1, 0, 3, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_3C36"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.03333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]]], "func_feature": [56, 35, 61, 0, 7, 9, 4, 241, 0.04286, 32, 1], "succs": [[6], [0, 3], [0], [0, 2], [1, 5], [6], []], "fname": "usage", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 16, 0, 0, 2, 0, 1, 0, 0, 0.010522496371552975, ["cmp     edi, 2", "jle     loc_4354"], ["cmp~edi,0", "jle~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 2, -1, 0.007438316400580552, ["cmp     [rbp+target_directory], 0", "jz      loc_447E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 1, 6, -1, 0.025036284470246733, ["lea     r8, [rbp+unused]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "xor     edx, edx; nonexistent_dst", "mov     rsi, new_dest; dst_name", "mov     rdi, source; src_name", "call    copy", "mov     r15d, eax"], ["lea~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "xor~edx,edx", "mov~rsi,new_dest", "mov~rdi,source", "call~FOO", "mov~r15d,eax"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.05551523947750363, ["cmp     byte ptr [x+16h], 0", "jz      short loc_43D1"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 6, -1, 0.026124818577648767, ["mov     r13d, [x]", "test    r13d, r13d", "jz      short loc_43D1"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 7, -1, 0.020682148040638608, ["mov     rsi, dest; s2", "mov     rdi, source; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_43D1"], ["mov~rsi,dest", "mov~rdi,source", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, -1, 0.01451378809869376, ["cmp     [rbp+new_dst], 0", "jnz     short loc_43D1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 9, -1, 0.007619738751814224, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_43D1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 1, 4, 0, 1, 10, 0, 1, 10, -1, 0.0, ["mov     rdi, dest; file", "mov     esi, r13d; backup_type", "call    find_backup_file_name", "mov     rsi, x", "lea     x, x_tmp_6791", "lea     rdi, x_tmp_6791", "mov     ecx, 12h", "mov     dest, rax", "rep movsd", "mov     cs:x_tmp_6791.backup_type, 0"], ["mov~rdi,dest", "mov~esi,r13d", "call~FOO", "mov~rsi,x", "lea~x,<TAG>", "lea~rdi,<TAG>", "mov~ecx,<STR>", "mov~dest,rax", "movsd~<TAG>,<TAG>", "mov~<TAG>,0"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.02558055152394775, ["cmp     [rbp+target_directory], 0", "jnz     loc_40AE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 1, -1, 0.016690856313497822, ["test    cl, cl", "mov     r14, x", "jz      loc_427D"], ["test~cl,cl", "mov~r14,x", "jz~FOO"]], [1, 0, 2, 0, 1, 6, 0, 2, 2, -1, 0.0010885341074020319, ["mov     rdi, [file]; name", "call    quote", "mov     edx, 5", "mov     file, rax", "lea     rsi, aMissingDestina; \"missing destination file operand after \"...", "jmp     short loc_449F"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~file,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 5, 1, 0, 2, 0, 1, 1, 1, 0.00181422351233672, ["sub     r12d, 1", "jnz     short loc_4541"], ["sub~r12d,0", "jnz~FOO"]], [1, 0, 33, 1, 0, 6, 1, 1, 6, -1, 0.028664731494920173, ["sub     r12d, 1", "movsxd  rax, r12d", "mov     rax, [file+rax*8]", "test    rax, rax", "mov     [rbp+target_directory], rax", "jnz     loc_40AE"], ["sub~r12d,0", "movsxd~rax,r12d", "mov~rax,<TAG>", "test~rax,rax", "mov~[rbp+0],rax", "jnz~FOO"]], [2, 0, 36, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_431B"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 18, 1, 1, 5, 0, 2, 9, -1, 0.05551523947750363, ["mov     rdi, dst_name; ptr", "add     rbx, 8", "call    free", "cmp     [rbp+var_100], rbx", "jz      loc_43EE"], ["mov~rdi,dst_name", "add~rbx,0", "call~FOO", "cmp~[rbp+0],rbx", "jz~FOO"]], [1, 0, 18, 0, 1, 10, 2, 2, 8, -1, 0.043178519593613934, ["movzx   edx, [rbp+new_dst]; nonexistent_dst", "mov     r8, [rbp+var_110]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "mov     rsi, dst_name; dst_name", "mov     rdi, arg; src_name", "call    copy", "and     r15d, eax", "cmp     cs:parents_option, 0", "jz      loc_417A"], ["movzx~edx,[rbp+0]", "mov~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "mov~rsi,dst_name", "mov~rdi,arg", "call~FOO", "and~r15d,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.01088534107402032, ["jmp     loc_417A"], ["jmp~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 9, -1, 0.036284470246734396, ["test    al, al", "jnz     loc_442B"], ["test~al,al", "jnz~FOO"]], [3, 0, 18, 1, 3, 18, 2, 4, 7, -1, 0.018867924528301886, ["sub     rsp, rax", "mov     rsi, __old; src", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, tmp_abns_; name", "call    last_component", "mov     rdi, rax; file", "mov     r13, rax", "call    strip_trailing_slashes", "lea     rdi, asc_1217C; \"..\"", "mov     ecx, 3", "mov     rsi, arg_base", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_4450"], ["sub~rsp,rax", "mov~rsi,__old", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,tmp_abns_", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,arg_base", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [3, 0, 18, 1, 1, 7, 1, 2, 6, -1, 0.09905660377358491, ["mov     rdi, arg; s", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "and     rax, 0FFFFFFFFFFFFFFF0h", "cmp     cs:parents_option, 0", "jnz     loc_40F0"], ["mov~rdi,arg", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "and~rax,0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 17, 0, 3, 15, 2, 3, 7, -1, 0.0, ["mov     rdi, r15; name", "mov     dword ptr [rbp+target_directory], r8d", "call    quote", "lea     rsi, aAccessingS; \"accessing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r15, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+target_directory]", "mov     rdx, rax; format", "mov     rcx, r15", "mov     edi, 1; status", "xor     eax, eax", "mov     esi, r8d; errnum", "call    _error"], ["mov~rdi,r15", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r15,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r15", "mov~edi,0", "xor~eax,eax", "mov~esi,r8d", "call~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, -1, 0.0043541364296081275, ["cmp     r8d, 2", "jz      short loc_4314"], ["cmp~r8d,0", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     x", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~x", "pop~r15", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, -1, 0.031204644412191583, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_453C"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [1, 0, 16, 0, 0, 1, 0, 0, 7, -1, 0.011611030478955007, ["mov     [rbp+new_dst], 1"], ["mov~[rbp+0],0"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, -1, 0.002902757619738752, ["mov     rdi, [file+10h]; name", "call    quote", "lea     rsi, aExtraOperandS; \"extra operand %s\"", "mov     file, rax", "mov     edx, 5; category"], ["mov~rdi,[file+0]", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0"]], [3, 0, 24, 0, 2, 11, 3, 3, 3, -1, 0.007801161103047896, ["lea     rsi, aCannotCombineT; \"cannot combine --target-directory (-t) \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "cmp     r12d, 2", "jg      loc_4487"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12d,0", "jg~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.010522496371552975, ["lea     rsi, aWithParentsThe; \"with --parents, the destination must be\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [1, 0, 13, 0, 0, 4, 0, 1, 4, -1, 0.07365747460087083, ["cmp     cs:parents_option, 0", "mov     r12, [file]", "mov     file, [file+8]", "jnz     loc_4516"], ["cmp~<TAG>,0", "mov~r12,<TAG>", "mov~file,[file+0]", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.034107402031930335, ["cmp     r12d, 2", "jz      short loc_4354"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 8, -1, 0.00272133526850508, ["mov     rdi, [rbp+target_directory]; string", "call    xstrdup", "mov     r13, rax"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~r13,rax"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.0010885341074020319, ["mov     edx, 5", "lea     rsi, aMissingFileOpe; \"missing file operand\"", "jmp     short loc_4522"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 11, -1, 0.0, ["mov     rax, [p+0A0h]", "mov     [rbp+attr_list], rax", "call    free"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "call~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 10, -1, 0.024310595065312045, ["mov     rdi, [rbp+attr_list]; ptr", "test    rdi, rdi", "jnz     short loc_4418"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 4, 2, 3, -1, 0.0025399129172714078, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 3, -1, 0.0627721335268505, ["cmp     r12d, 1", "jnz     loc_4469"], ["cmp~r12d,0", "jnz~FOO"]], [1, 0, 41, 0, 1, 9, 1, 2, 4, -1, 0.019593613933236574, ["movsxd  rax, edi", "lea     target_directory_0, [rbp+sb]; stat_buf", "mov     edi, 1; ver", "lea     r13, [file+rax*8-8]", "mov     r15, [r13+0]", "mov     rsi, r15; filename", "call    ___xstat", "test    eax, eax", "jz      loc_44C1"], ["movsxd~rax,edi", "lea~target_directory_0,[rbp+0]", "mov~edi,0", "lea~r13,[file+0]", "mov~r15,[r13+0]", "mov~rsi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 3, -1, 0.020500725689404933, ["cmp     edi, 1", "jz      loc_4354"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 2, 8, 4, 3, 3, -1, 0.005805515239477504, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_44B7"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 40, 0, 1, 4, 1, 2, 5, -1, 0.00544267053701016, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jz      loc_44C1"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 2, 6, -1, 0.0, ["mov     rdi, arg; file", "call    strip_trailing_slashes", "jmp     loc_41AE"], ["mov~rdi,arg", "call~FOO", "jmp~FOO"]], [2, 0, 18, 0, 0, 4, 0, 1, 5, -1, 0.10631349782293179, ["cmp     cs:remove_trailing_slashes, 0", "mov     [rbp+unused], 0", "mov     r12, [rbx]", "jnz     loc_4440"], ["cmp~<TAG>,0", "mov~[rbp+0],0", "mov~r12,<TAG>", "jnz~FOO"]], [3, 0, 18, 2, 4, 26, 2, 5, 7, -1, 0.06676342525399129, ["sub     rsp, rax", "mov     rsi, __old; src", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r13, rax", "call    strip_trailing_slashes", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_no_trailing_slash; abase", "call    file_name_concat", "cmp     byte ptr [x+2Ah], 0", "mov     rsi, [rbp+unused]", "mov     arg_no_trailing_slash, rax", "lea     dst_name, verbose_fmt_string; \"%s -> %s\\n\"", "mov     edx, 0", "lea     rcx, [rbp+attr_list]; attr_list", "lea     r8, [rbp+new_dst]; new_dst", "mov     r9, x; x", "mov     rdi, dst_name; const_dir", "cmovnz  rdx, rax; verbose_fmt_string", "sub     rsi, dst_name; src_offset", "call    make_dir_parents_private", "test    al, al", "jnz     loc_4223"], ["sub~rsp,rax", "mov~rsi,__old", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,arg_no_trailing_slash", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rsi,[rbp+0]", "mov~arg_no_trailing_slash,rax", "lea~dst_name,<TAG>", "mov~edx,0", "lea~rcx,[rbp+0]", "lea~r8,[rbp+0]", "mov~r9,x", "mov~rdi,dst_name", "cmovnz~rdx,rax", "sub~rsi,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 8, -1, 0.00272133526850508, ["mov     rdi, [rbp+target_directory]; dir", "mov     rsi, r13; abase", "xor     edx, edx; base_in_result", "call    file_name_concat", "mov     r13, rax", "jmp     loc_4223"], ["mov~rdi,[rbp+0]", "mov~rsi,r13", "xor~edx,edx", "call~FOO", "mov~r13,rax", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 7, -1, 0.0050798258345428155, ["jmp     loc_4354"], ["jmp~FOO"]], [2, 0, 14, 0, 3, 13, 3, 3, 7, -1, 0.0, ["mov     rdi, [r13+0]; name", "call    quote", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     n_files, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[r13+0]", "call~FOO", "lea~rsi,<TAG>", "mov~n_files,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 53, 1, 0, 20, 3, 1, 0, 2, 0.0, ["push    rbp", "xor     eax, eax", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, edi", "push    rbx", "mov     rbx, file", "sub     rsp, 0E8h", "mov     [rbp+target_directory], target_directory_0", "mov     [rbp+new_dst], 0", "mov     file, fs:28h", "mov     [rbp+var_38], file", "xor     esi, esi", "test    target_directory_0, target_directory_0", "setz    al", "cmp     eax, edi", "jge     loc_44F7"], ["push~rbp", "xor~eax,eax", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,edi", "push~rbx", "mov~rbx,file", "sub~rsp,0", "mov~[rbp+0],target_directory_0", "mov~[rbp+0],0", "mov~file,<TAG>", "mov~[rbp+0],file", "xor~esi,esi", "test~target_directory_0,target_directory_0", "setz~al", "cmp~eax,edi", "jge~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 18, 0, 0, 9, 0, 1, 4, -1, 0.068577648766328, ["lea     eax, [n_files-1]", "mov     r15d, 1", "lea     rax, [file+rax*8+8]", "mov     [rbp+var_100], rax", "lea     rax, [rbp+copy_into_self]", "mov     [rbp+var_110], rax", "lea     rax, [rbp+unused]", "mov     [rbp+base_in_result], rax", "jmp     loc_4193"], ["lea~eax,[n_files-1]+0]", "mov~r15d,0", "lea~rax,[file+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 19, 0, 2, 5, 0, 3, 4, -1, 0.0, ["mov     rdi, x; x", "call    dest_info_init", "mov     rdi, x; x", "call    src_info_init", "jmp     loc_40B8"], ["mov~rdi,x", "call~FOO", "mov~rdi,x", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 1, 0, 8, -1, 0.027939042089985485, ["movzx   eax, cs:parents_option", "xor     r15d, r15d"], ["movzx~eax,<TAG>", "xor~r15d,r15d"]], [0, 0, 18, 1, 1, 9, 1, 2, 9, -1, 0.005805515239477504, ["mov     rsi, [rbp+unused]", "mov     rdx, [rbp+attr_list]; attr_list", "mov     rcx, x; x", "mov     rdi, dst_name; const_dst_name", "sub     rsi, dst_name; src_offset", "call    re_protect", "and     r15d, eax", "movzx   eax, cs:parents_option", "jmp     loc_4172"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,x", "mov~rdi,dst_name", "sub~rsi,dst_name", "call~FOO", "and~r15d,eax", "movzx~eax,<TAG>", "jmp~FOO"]]], "func_feature": [38, 42, 78, 3, 54, 81, 1, 304, 0.02125, 13, 9], "succs": [[26, 29], [0, 27], [24], [2, 4], [2, 5], [2, 6], [2, 7], [8, 2], [2], [36, 38], [9, 1], [35], [32, 11], [36, 46], [13, 30], [24, 43], [53, 15], [15], [34, 15], [45, 31], [19, 44], [25], [25, 21], [], [49, 23], [30], [35], [26, 36], [40], [3, 28], [29, 47], [16], [40], [34], [33, 17], [39], [50, 51], [41, 14], [37, 29], [], [39], [14, 22], [20], [42, 20], [16, 52], [16], [29], [29], [10, 12], [], [43], [50], [18], [18]], "fname": "do_copy", "n_num": 54}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [3, 0, 1, 0, 2, 14, 2, 3, 0, 0, 0.0, ["push    rbx", "call    ___errno_location", "lea     rsi, aFailedToRestor; \"failed to restore the default file crea\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dword ptr [rax], 5Fh ; '_'", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "pop     rbx", "xor     eax, eax", "jmp     _error"], ["push~rbx", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~edi,0", "pop~rbx", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [2, 2, 3, 0, 2, 1, 2, 14, 0.0, 1, 0], "succs": [[], [0]], "fname": "restore_default_fscreatecon_or_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 5, 1, 2, 0, 0, 0.16666666666666666, ["push    rbx", "mov     rbx, file", "call    can_write_any_file", "test    al, al", "jz      short loc_45C0"], ["push~rbx", "mov~rbx,file", "call~FOO", "test~al,al", "jz~FOO"]], [1, 1, 4, 0, 0, 3, 1, 1, 0, 2, 0.0, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      short loc_45B8"], ["and~esi,0", "cmp~esi,<STR>", "jz~FOO"]], [1, 0, 0, 0, 1, 7, 1, 1, 2, 0, 0.0, ["mov     rdi, file; name", "mov     esi, 2; type", "call    _euidaccess", "test    eax, eax", "setz    al", "pop     file", "retn"], ["mov~rdi,file", "mov~esi,0", "call~FOO", "test~eax,eax", "setz~al", "pop~file", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 3, 0, 0, 2, -1, 0.0, ["mov     eax, 1", "pop     file", "retn"], ["mov~eax,0", "pop~file", "retn"]]], "func_feature": [2, 3, 4, 0, 5, 4, 2, 20, 0.03333, 0, 0], "succs": [[2, 4], [0, 3], [], [], []], "fname": "writable_destination", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 4, 0, 3, 12, 2, 3, 0, 0, 0.0, ["mov     rdi, backup_dst_name; name", "call    quote", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     backup_dst_name, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdi,backup_dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~backup_dst_name,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 5, 0, 3, 19, 3, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, src", "push    rbx", "mov     edi, 1; n", "mov     rbx, backup_dst_name", "call    quote_n", "xor     edi, edi; n", "mov     rsi, src; name", "mov     rbp, rax", "call    quote_n", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     rdx, rax", "mov     rcx, rbp", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "test    backup_dst_name, backup_dst_name", "jz      short loc_464F"], ["push~r12", "push~rbp", "mov~r12,src", "push~rbx", "mov~edi,0", "mov~rbx,backup_dst_name", "call~FOO", "xor~edi,edi", "mov~rsi,src", "mov~rbp,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "mov~edi,0", "call~FOO", "test~backup_dst_name,backup_dst_name", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 1, 0, 0, 5, 0, 1, 2, 0, 0.15000000000000002, ["pop     rbx", "pop     rbp", "pop     src", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~src", "mov~esi,0", "jmp~FOO"]], [1, 0, 0, 0, 0, 7, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "pop     rbx", "pop     rbp", "pop     src", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~src", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.30000000000000004, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_4670"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]]], "func_feature": [6, 5, 8, 0, 6, 6, 3, 47, 0.075, 3, 0], "succs": [[5], [0, 5], [], [2], [], [3, 4]], "fname": "emit_verbose", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 0, 0.30000000000000004, ["mov     rax, [rsp+48h+var_30]", "xor     rax, fs:28h", "jnz     loc_4783"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 3, 15, 2, 3, 1, 0, 0.07500000000000001, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aSOverwriteS; \"%s: overwrite %s? \"", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 5, 1, 1, 14, 2, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, rsi", "mov     rbx, dst_name", "sub     rsp, 28h", "mov     esi, [rsi]; mode", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "call    writable_destination", "test    al, al", "jz      short loc_4710"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,rsi", "mov~rbx,dst_name", "sub~rsp,0", "mov~esi,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [5, 1, 3, 2, 4, 29, 3, 5, 1, 0, 0.07500000000000001, ["lea     r12, [rsp+48h+perms]", "mov     edi, [rbp+0]; mode", "mov     rsi, r12; str", "add     r12, 1", "call    strmode", "mov     rdi, dst_name; name", "mov     [rsp+48h+perms+0Ah], 0", "mov     ebp, [rbp+0]", "call    quote", "lea     rsi, aSTryToOverwrit; \"%s: try to overwrite %s, overriding mod\"...", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, rax", "and     ebp, 0FFFh", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r12", "mov     r9, rbp", "mov     r8, r13", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_46EC"], ["lea~r12,[rsp+0]", "mov~edi,[rbp+0]", "mov~rsi,r12", "add~r12,0", "call~FOO", "mov~rdi,dst_name", "mov~[rsp+0],0", "mov~ebp,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r13,rax", "and~ebp,<STR>", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r12", "mov~r9,rbp", "mov~r8,r13", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]]], "func_feature": [9, 8, 12, 1, 6, 6, 2, 68, 0.075, 5, 4], "succs": [[], [0, 4], [1], [2, 5], [], [1]], "fname": "overwrite_prompt", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+38h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "dest_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash_no_name; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+40h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "src_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 15, 1, 1, 0, 0, 0.0, ["pxor    xmm0, xmm0", "push    rbx", "mov     qword ptr [x+40h], 0", "mov     rbx, x", "movups  xmmword ptr [x], xmm0", "movups  xmmword ptr [x+10h], xmm0", "movups  xmmword ptr [x+20h], xmm0", "movups  xmmword ptr [x+30h], xmm0", "call    _geteuid", "test    eax, eax", "setz    al", "mov     [x+1Ah], al", "mov     [x+19h], al", "pop     x", "retn"], ["pxor~xmm0,xmm0", "push~rbx", "mov~[word ptr [x+0],0", "mov~rbx,x", "movups~<TAG>,xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "call~FOO", "test~eax,eax", "setz~al", "mov~[x+0],al", "mov~[x+0],al", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 15, 0.0, 0, 0], "succs": [[]], "fname": "cp_options_default", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 2, 0, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 1", "setz    al", "cmp     edx, 16h", "setz    dl", "or      al, dl", "jz      short loc_4852"], ["push~rbx", "mov~rbx,x", "call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~al,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     x", "retn"], ["pop~x", "retn"]], [1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.0, ["movzx   eax, byte ptr [x+19h]", "xor     eax, 1"], ["movzx~eax,[yte ptr [x+0]", "xor~eax,0"]]], "func_feature": [1, 2, 2, 0, 3, 3, 3, 14, 0.0, 0, 0], "succs": [[1, 2], [], [1]], "fname": "chown_failure_ok", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 25, 1, 0, 14, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, dst_name", "push    rbp", "push    rbx", "mov     rbp, x", "mov     ebx, edx", "sub     rsp, 8", "test    r8b, r8b", "mov     r14d, [src_sb+1Ch]", "mov     r12d, [src_sb+20h]", "jnz     short loc_48B5"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,dst_name", "push~rbp", "push~rbx", "mov~rbp,x", "mov~ebx,edx", "sub~rsp,0", "test~r8b,r8b", "mov~r14d,[src_sb+0]", "mov~r12d,[src_sb+0]", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     x", "pop     gid", "pop     dst_name", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~x", "pop~gid", "pop~dst_name", "pop~r14", "pop~r15", "retn"]], [0, 0, 3, 0, 1, 6, 2, 2, 0, -1, 0.07095238095238095, ["mov     rdi, x; x", "call    chown_failure_ok", "mov     edx, eax", "xor     eax, eax", "test    dl, dl", "jz      loc_49F0"], ["mov~rdi,x", "call~FOO", "mov~edx,eax", "xor~eax,eax", "test~dl,dl", "jz~FOO"]], [1, 0, 24, 0, 0, 3, 1, 1, 0, 6, 0.016666666666666666, ["mov     rax, 0FF00000000FFh", "test    [x+18h], rax", "jz      loc_4930"], ["mov~rax,0", "test~[x+0],rax", "jz~FOO"]], [1, 0, 19, 0, 1, 7, 3, 2, 0, 3, 0.05738095238095239, ["and     edx, esi", "mov     x, dst_name; name", "mov     esi, ebx; desc", "and     edx, 1C0h; mode", "call    qset_acl", "test    eax, eax", "jz      loc_48B5"], ["and~edx,esi", "mov~x,dst_name", "mov~esi,ebx", "and~edx,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 20, 0, 0, 7, 3, 1, 0, 4, 0.09904761904761905, ["mov     eax, edx", "mov     ecx, esi", "not     eax", "and     ecx, 0FFFh", "or      ah, 0Eh", "test    eax, ecx", "jnz     loc_4980"], ["mov~eax,edx", "mov~ecx,esi", "not~eax", "and~ecx,<STR>", "or~ah,0", "test~eax,ecx", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 0, -1, 0.0688095238095238, ["mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jnz     short loc_4950"], ["mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 0, -1, 0.14261904761904762, ["cmp     ebx, 0FFFFFFFFh", "mov     edx, r12d; group", "mov     esi, r14d; owner", "jz      short loc_4910"], ["cmp~ebx,0", "mov~edx,r12d", "mov~esi,r14d", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 0, 1, 0, 5, 0.012380952380952381, ["mov     esi, [dst_sb+18h]", "mov     edx, [x+10h]", "jmp     loc_489E"], ["mov~esi,[dst_sb+0]", "mov~edx,[x+0]", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 0, 5, 0.025, ["mov     esi, [dst_sb+18h]", "mov     edx, [src_sb+18h]"], ["mov~esi,[dst_sb+0]", "mov~edx,[src_sb+0]"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, -1, 0.019285714285714288, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     gid, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~gid,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 0, 2, 0.05571428571428572, ["call    ___errno_location", "mov     dest_desc, rax", "mov     eax, [rax]", "cmp     eax, 1", "jz      loc_4A60"], ["call~FOO", "mov~dest_desc,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [2, 0, 0, 1, 0, 9, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     dest_desc", "pop     x", "pop     gid", "pop     dst_name", "pop     uid", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~dest_desc", "pop~x", "pop~gid", "pop~dst_name", "pop~uid", "pop~r15", "retn"]], [0, 0, 8, 0, 1, 4, 1, 2, 0, -1, 0.0688095238095238, ["mov     edi, ebx; fd", "call    _fchown", "test    eax, eax", "jz      short loc_491C"], ["mov~edi,ebx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 2, 0.010238095238095237, ["cmp     eax, 16h", "jz      loc_4A60"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 0, 6, 0.025, ["cmp     byte ptr [x+27h], 0", "jz      loc_48B5"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 0, -1, 0.0, ["movzx   eax, byte ptr [x+20h]", "add     rsp, 8", "pop     rbx", "pop     x", "pop     r12", "neg     eax", "pop     dst_name", "pop     r14", "pop     r15", "retn"], ["movzx~eax,[yte ptr [x+0]", "add~rsp,0", "pop~rbx", "pop~x", "pop~r12", "neg~eax", "pop~dst_name", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 3, 14, 3, 4, 0, -1, 0.009642857142857144, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aClearingPermis; \"clearing permissions for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     gid, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4A27"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~gid,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.004404761904761905, ["jmp     short loc_4A27"], ["jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 0, -1, 0.017738095238095237, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     edi, ebx; fd", "call    _fchown", "mov     [r15], r14d", "jmp     loc_48EA"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebx", "call~FOO", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 0, -1, 0.05880952380952381, ["call    ___errno_location", "mov     r14d, [rax]", "mov     r15, rax", "cmp     r14d, 1", "jz      loc_4A40"], ["call~FOO", "mov~r14d,<TAG>", "mov~r15,rax", "cmp~r14d,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, -1, 0.017738095238095237, ["cmp     r14d, 16h", "jz      loc_4A40"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.02880952380952381, ["cmp     byte ptr [x+1Ah], 0", "jnz     loc_49B6"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 0, -1, 0.05880952380952381, ["call    ___errno_location", "mov     ebx, [rax]", "mov     uid, rax", "cmp     ebx, 1", "jz      short loc_4964"], ["call~FOO", "mov~ebx,<TAG>", "mov~uid,rax", "cmp~ebx,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, -1, 0.017738095238095237, ["cmp     ebx, 16h", "jnz     short loc_48EA"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 0, -1, 0.017738095238095237, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     [r14], ebx", "jmp     loc_48EA"], ["mov~edx,r12d", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "mov~<TAG>,ebx", "jmp~FOO"]]], "func_feature": [16, 18, 37, 0, 26, 39, 2, 148, 0.03474, 2, 4], "succs": [[3, 7], [], [1, 10], [9, 15], [11, 7], [4, 7], [12, 23], [13, 6], [5], [5], [16], [22, 14], [], [20, 12], [17, 22], [8, 7], [], [16], [16], [2], [19, 21], [2, 19], [17, 18], [24, 25], [25, 2], [2]], "fname": "set_owner", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 2, 9, 1, 2, 0, 0, 0.0, ["xor     edi, edi; mask", "call    _umask", "mov     ebx, eax", "mov     edi, eax; mask", "mov     cs:mask_6993, eax", "call    _umask", "mov     eax, ebx", "pop     rbx", "retn"], ["xor~edi,edi", "call~FOO", "mov~ebx,eax", "mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "mov~eax,ebx", "pop~rbx", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     ebx, cs:mask_6993", "cmp     ebx, 0FFFFFFFFh", "jz      short loc_4A80"], ["push~rbx", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "retn"], ["mov~eax,ebx", "pop~rbx", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 16, 0.0, 1, 0], "succs": [[], [0, 2], []], "fname": "cached_umask", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 381, 0, 0, 2, 1, 1, 0, 0, 0.12896844548260544, ["test    edx, edx", "jnz     loc_6C22"], ["test~edx,edx", "jnz~FOO"]], [2, 0, 387, 0, 0, 4, 1, 1, 16, 35, 0.001387789596511436, ["mov     eax, [rbp+src_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_6004"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 388, 0, 0, 2, 0, 1, 15, 35, 0.12878612382000346, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6EE3"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 107, 1, 0, 3, 0, 1, 41, 12, 0.004835813980425089, ["add     rax, 1", "cmp     byte ptr [rax-1], 0", "jz      short loc_7801"], ["add~rax,0", "cmp~[yte ptr [rax-1]+0],0", "jz~FOO"]], [1, 0, 107, 0, 0, 3, 0, 1, 40, 13, 0.006444534532795377, ["lea     rsi, [rax+8]", "cmp     qword ptr [rsi-8], 0", "jz      loc_7DF0"], ["lea~rsi,[rax+0]", "cmp~[word ptr [rsi-8]+0],0", "jz~FOO"]], [0, 0, 3, 0, 3, 13, 3, 4, 17, -1, 4.826161657110867e-05, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [r14]; errnum", "mov     dst_lstat_sb, rax; format", "xor     edi, edi; status", "mov     r8, r13", "mov     rcx, r12", "xor     eax, eax", "call    _error", "mov     rsi, [rbp+src_sb.st_dev]; dev", "mov     rdi, [rbp+src_sb.st_ino]; ino", "call    forget_created", "jmp     loc_4CA2"], ["xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~dst_lstat_sb,rax", "xor~edi,edi", "mov~r8,r13", "mov~rcx,r12", "xor~eax,eax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 18, -1, 2.5739528837924622e-05, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+src_name]; name", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aInterDeviceMov; \"inter-device move failed: %s to %s; una\"...", "jmp     loc_57DD"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r13,rax", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 10, 1, 2, 16, -1, 0.0007464463362998141, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+src_name]; name", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aCannotMoveSToS; \"cannot move %s to %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 107, 0, 0, 2, 0, 0, 42, 11, 0.004201978082791194, ["cmp     rdx, rax", "jb      loc_7DC7"], ["cmp~rdx,rax", "jb~FOO"]], [2, 0, 66, 0, 1, 12, 1, 2, 19, -1, 0.005537216141258535, ["mov     rdi, [rbp+dst_name]; file", "call    dir_name", "lea     r8, asc_1217C+1; \".\"", "mov     rdi, rax", "mov     ecx, 2", "mov     r12, rax", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_6750"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~r8,<TAG>", "mov~rdi,rax", "mov~ecx,0", "mov~r12,rax", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 67, 0, 0, 3, 0, 1, 18, -1, 0.026349233927272963, ["mov     rax, [rbp+src_name]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_501E"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 5, 0, 2, 11, 1, 3, 15, -1, 0.00042942113944604237, ["mov     rsi, [rbp+src_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotOverwrit_0; \"cannot overwrite non-directory %s with \"...", "jmp     loc_4C80"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 405, 0, 0, 2, 0, 1, 14, 38, 0.005144044838259237, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6FE5"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 404, 0, 0, 3, 1, 1, 15, 37, 0.005210109628943243, ["mov     edx, [x_0]", "test    edx, edx", "jz      loc_6FE5"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [0, 0, 58, 0, 1, 2, 0, 1, 20, -1, 0.0010231462713075038, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [1, 0, 65, 0, 1, 6, 1, 2, 20, -1, 0.003979974646564095, ["lea     dst_lstat_sb, [rbp+dot_sb]; stat_buf", "mov     rsi, r8; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_5016"], ["lea~dst_lstat_sb,[rbp+0]", "mov~rsi,r8", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 64, 0, 1, 6, 1, 2, 21, -1, 0.0032045713403216153, ["lea     dst_lstat_sb, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_5016"], ["lea~dst_lstat_sb,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 59, 0, 0, 1, 0, 1, 24, -1, 0.0003024394638456143, ["jmp     loc_5016"], ["jmp~FOO"]], [2, 0, 363, 0, 0, 4, 1, 1, 17, 33, 0.128692818027966, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6B3D"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 379, 0, 0, 6, 2, 1, 18, 34, 0.003673245261245493, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      loc_600C"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 364, 0, 0, 1, 0, 1, 20, 34, 0.0006097050893483395, ["jmp     loc_600C"], ["jmp~FOO"]], [3, 0, 12, 0, 4, 22, 5, 5, 14, -1, 0.006475100223290412, ["mov     rsi, cs:top_level_dst_name; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, cs:top_level_src_name; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCopyADir; \"cannot copy a directory, %s, into itsel\"...", "mov     r13, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, r13", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+fildes]", "mov     byte ptr [rax], 1", "jmp     loc_564F"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,r13", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 295, 0, 1, 7, 1, 2, 13, 27, 0.009476972774013373, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+omitted_permissions], r8b", "call    same_name", "test    al, al", "movzx   r8d, byte ptr [rbp+omitted_permissions]", "jnz     loc_67C8"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 362, 0, 0, 2, 0, 1, 18, 33, 0.008205547297456721, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6B3D"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [3, 0, 323, 0, 0, 5, 0, 1, 23, 30, 0.004637941352483543, ["cmp     r13d, 4000h", "mov     byte ptr [rbp+new_dst], 1", "mov     [rbp+dst_backup], 0", "setnz   byte ptr [rbp+var_338]", "jmp     loc_4F0A"], ["cmp~r13d,0", "mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "setnz~[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 346, 0, 0, 2, 0, 1, 22, 31, 0.005789785267980669, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      loc_7BE7"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 21, -1, 0.006608624029137147, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_5C50"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 12, 0, 2, 9, 4, 3, 21, -1, 0.0005630521933296011, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 12, 0, 5, 22, 4, 6, 20, -1, 0.0015652850974562911, ["mov     rsi, [rbp+src_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCreateSy; \"cannot create symbolic link %s to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     r8, r12", "mov     rcx, r14", "mov     dst_lstat_sb, r13; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~r8,r12", "mov~rcx,r14", "mov~dst_lstat_sb,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 56, 0, 1, 6, 1, 2, 25, -1, 0.017666969106130512, ["mov     rdi, r13; ptr", "mov     byte ptr [rbp+fildes], r8b", "call    free", "movzx   r8d, byte ptr [rbp+fildes]", "test    r8b, r8b", "jz      un_backup"], ["mov~rdi,r13", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "test~r8b,r8b", "jz~FOO"]], [1, 0, 12, 0, 3, 14, 3, 4, 26, -1, 0.0003474836393119824, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotCreateSy_0; \"cannot create symbolic link %s\"", "mov     r13, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "mov     esi, r12d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,r12d", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 5, 18, 3, 6, 25, -1, 0.0020076832493581206, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aClosingS; \"closing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "mov     rcx, r14", "mov     rdx, r12; format", "xor     eax, eax", "call    _error", "mov     rdi, r13; ptr", "call    free", "jmp     un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "mov~rcx,r14", "mov~rdx,r12", "xor~eax,eax", "call~FOO", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 12, 0, 1, 5, 2, 1, 23, -1, 0.0012403235458774927, ["mov     esi, [rax]; errnum", "mov     dst_lstat_sb, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~esi,<TAG>", "mov~dst_lstat_sb,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 57, 0, 1, 5, 1, 2, 19, -1, 0.020638275966358435, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, [rbp+src_name]; from", "call    _symlink", "test    eax, eax", "jnz     loc_5B90"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 309, 0, 0, 5, 0, 1, 12, 27, 0.0017309833143504308, ["cmp     byte ptr [rbp+copied_as_regular], 0", "mov     dst_lstat_sb, [rbp+src_sb.st_dev]; dev", "mov     rdi, [rbp+src_sb.st_ino]; ino", "mov     byte ptr [rbp+omitted_permissions], r8b", "jnz     loc_5AB8"], ["cmp~[yte ptr [rbp+0],0", "mov~dst_lstat_sb,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "jnz~FOO"]], [1, 0, 311, 0, 0, 2, 0, 1, 11, 27, 0.002332644800936919, ["cmp     r13d, 4000h", "jz      loc_5818"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 19, 34, 0.007767975307212003, ["movzx   r8d, byte ptr [x_0+15h]", "test    r8b, r8b", "jnz     short loc_6050"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 107, 0, 1, 8, 0, 2, 39, 10, 0.0031026857053381637, ["mov     rsi, [rbp+x]; buf", "mov     edi, [rbp+fildes]; fd", "mov     rdx, rcx; count", "mov     [rbp+nbytes], rcx", "call    full_write", "mov     rcx, [rbp+nbytes]", "cmp     rcx, rax", "jnz     loc_80EA"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "mov~rdx,rcx", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "cmp~rcx,rax", "jnz~FOO"]], [1, 0, 107, 1, 0, 3, 0, 1, 38, 11, 0.011104461732827982, ["add     [rbp+length], rax", "cmp     byte ptr [rbp+var_348], 0", "jz      short loc_7814"], ["add~[rbp+0],rax", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 20, 33, 0.002604518574287498, ["cmp     byte ptr [x_0+1Fh], 0", "jz      loc_7295"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 46, 0, 0, 3, 1, 0, 20, -1, 0.017628359812873626, ["xor     r8d, r8d", "mov     r12d, r14d", "mov     byte ptr [rbp+restore_dst_mode], 0"], ["xor~r8d,r8d", "mov~r12d,r14d", "mov~[yte ptr [rbp+0],0"]], [0, 0, 107, 0, 0, 2, 1, 1, 40, 9, 0.0005244429000727141, ["xor     r9d, r9d", "jmp     loc_77A1"], ["xor~r9d,r9d", "jmp~FOO"]], [1, 0, 358, 0, 0, 2, 0, 0, 21, 33, 4.504417546636809e-05, ["cmp     [rbp+dst_sb.st_nlink], 1", "jbe     loc_7295"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 21, -1, 0.05713210169687844, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      short loc_5090"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 58, 0, 1, 10, 3, 2, 20, -1, 0.018111512218768836, ["mov     rcx, [rbp+dst_name]; file2", "mov     rsi, [rbp+src_name]; file1", "mov     edx, 0FFFFFF9Ch; fd2", "xor     r8d, r8d; flag", "mov     edi, edx; fd1", "call    rpl_linkat", "xor     r8d, r8d", "test    eax, eax", "mov     byte ptr [rbp+restore_dst_mode], 0", "jz      loc_5046"], ["mov~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edx,0", "xor~r8d,r8d", "mov~edi,edx", "call~FOO", "xor~r8d,r8d", "test~eax,eax", "mov~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 46, 0, 0, 4, 1, 1, 26, -1, 0.014665096555407554, ["xor     r14d, r14d", "mov     byte ptr [rbp+restore_dst_mode], 0", "mov     r12d, r8d", "jmp     loc_5046"], ["xor~r14d,r14d", "mov~[yte ptr [rbp+0],0", "mov~r12d,r8d", "jmp~FOO"]], [0, 0, 46, 0, 0, 3, 2, 1, 25, -1, 0.0016280251989987324, ["xor     r14d, r14d", "xor     r8d, r8d", "jmp     loc_5046"], ["xor~r14d,r14d", "xor~r8d,r8d", "jmp~FOO"]], [2, 0, 46, 0, 0, 4, 1, 1, 23, -1, 0.0005887917221675257, ["xor     r8d, r8d", "mov     byte ptr [rbp+restore_dst_mode], 0", "mov     r12d, 1", "jmp     loc_5046"], ["xor~r8d,r8d", "mov~[yte ptr [rbp+0],0", "mov~r12d,0", "jmp~FOO"]], [0, 0, 58, 0, 0, 5, 2, 1, 23, -1, 0.003664665418299518, ["xor     r14d, r14d", "xor     r8d, r8d", "mov     rax, [rbp+device]", "cmp     [rbp+src_sb.st_dev], rax", "jnz     loc_5046"], ["xor~r14d,r14d", "xor~r8d,r8d", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 46, 0, 0, 4, 0, 1, 23, -1, 0.0007271416896713706, ["mov     r14d, r8d", "mov     byte ptr [rbp+restore_dst_mode], 0", "mov     r12d, 1", "jmp     loc_5046"], ["mov~r14d,r8d", "mov~[yte ptr [rbp+0],0", "mov~r12d,0", "jmp~FOO"]], [3, 0, 46, 0, 0, 4, 0, 1, 26, -1, 0.00183715887080687, ["mov     byte ptr [rbp+restore_dst_mode], 0", "mov     r14d, 1", "mov     r12d, 1", "jmp     loc_5046"], ["mov~[yte ptr [rbp+0],0", "mov~r14d,0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 46, 0, 0, 4, 1, 1, 28, -1, 0.000144784849713326, ["xor     r8d, r8d", "mov     byte ptr [rbp+restore_dst_mode], 0", "mov     r14d, eax", "jmp     loc_5046"], ["xor~r8d,r8d", "mov~[yte ptr [rbp+0],0", "mov~r14d,eax", "jmp~FOO"]], [1, 0, 46, 0, 0, 5, 1, 1, 27, -1, 0.00014800229081806657, ["mov     r12d, r8d", "mov     r14d, r8d", "mov     byte ptr [rbp+restore_dst_mode], 0", "xor     r8d, r8d", "jmp     loc_5046"], ["mov~r12d,r8d", "mov~r14d,r8d", "mov~[yte ptr [rbp+0],0", "xor~r8d,r8d", "jmp~FOO"]], [1, 0, 12, 0, 3, 14, 3, 4, 16, -1, 3.3783131599776064e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_564F"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 19, 0, 1, 4, 1, 2, 15, -1, 0.003590664272890485, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_701B"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 22, -1, 0.004131194378486902, ["cmp     qword ptr [r15+38h], 0", "jz      short loc_5090"], ["cmp~[word ptr [r15+0],0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 20, 32, 0.004566085167811003, ["xor     r8d, r8d", "mov     [rbp+dst_backup], 0", "jmp     loc_4BD6"], ["xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 356, 0, 0, 4, 1, 1, 19, 33, 0.003964423681224515, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7848"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 331, 0, 0, 2, 0, 1, 14, 32, 2.5739528837924622e-05, ["mov     dst_lstat_sb, r12", "jmp     loc_4C14"], ["mov~dst_lstat_sb,r12", "jmp~FOO"]], [1, 0, 332, 0, 1, 9, 1, 2, 13, 31, 0.0011389741510781646, ["lea     r12, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+var_338], r8b", "mov     dst_lstat_sb, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+var_338]", "jnz     loc_5290"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 492, 0, 0, 2, 0, 1, 14, 41, 0.010487785521086037, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6868"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 500, 0, 0, 3, 1, 1, 13, 42, 0.014175509267302865, ["mov     esi, [x_0]", "test    esi, esi", "jz      loc_6160"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [0, 0, 354, 0, 1, 6, 1, 2, 20, 33, 0.005478765961189079, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+new_dst], r9b", "call    _unlink", "test    eax, eax", "movzx   r9d, byte ptr [rbp+new_dst]", "jz      loc_73BD"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 356, 0, 0, 4, 1, 1, 22, 33, 0.0005598347522248606, ["mov     eax, [rbp+src_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_6050"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 19, -1, 0.00045365919576842147, ["mov     rdi, [rbp+src_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "jmp     loc_4EBD"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 18, -1, 0.0012660630747154174, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+dst_name], r11b", "call    _unlink", "test    eax, eax", "movzx   r11d, byte ptr [rbp+dst_name]", "jnz     loc_7055"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r11b", "call~FOO", "test~eax,eax", "movzx~r11d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 1, 488, 0, 0, 5, 1, 1, 15, 40, 0.010309217539772934, ["mov     esi, [r11+18h]", "mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_4DB3"], ["mov~esi,[r11+0]", "mov~eax,esi", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 491, 0, 0, 2, 0, 1, 15, 41, 0.002929480125866296, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_6868"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 305, 0, 0, 2, 0, 1, 12, 28, 0.015941240945584495, ["cmp     r13d, 4000h", "jz      loc_585A"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 296, 0, 1, 6, 1, 2, 13, 26, 0.0012178014581443086, ["mov     rsi, dst_lstat_sb; dev", "call    src_to_dest_lookup", "test    rax, rax", "mov     [rbp+earlier_file], rax", "movzx   r8d, byte ptr [rbp+omitted_permissions]", "jz      loc_4F6F"], ["mov~rsi,dst_lstat_sb", "call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 487, 0, 0, 2, 1, 1, 16, 42, 0.0034394445409676776, ["test    cl, cl", "jz      short loc_688D"], ["test~cl,cl", "jz~FOO"]], [1, 0, 43, 0, 1, 9, 1, 2, 23, -1, 0.002760564467867416, ["lea     r13, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+copied_as_regular], r8b", "mov     dst_lstat_sb, r13; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+copied_as_regular]", "jz      loc_694A"], ["lea~r13,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,r13", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 353, 0, 1, 5, 0, 2, 21, 33, 0.0008376071676007976, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r12, rax", "movzx   r9d, byte ptr [rbp+new_dst]", "jz      loc_73BD"], ["call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 486, 0, 0, 2, 0, 1, 17, 41, 0.0028426092160383004, ["cmp     qword ptr [r11+10h], 1", "ja      loc_71BF"], ["cmp~[word ptr [r11+0],0", "ja~FOO"]], [0, 0, 41, 0, 0, 1, 0, 0, 24, -1, 6.595754264718185e-05, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 293, 0, 0, 2, 0, 1, 14, 26, 0.0025160389439071317, ["cmp     dword ptr [x_0+4], 4", "jz      loc_4F6F"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 5, 0, 2, 11, 1, 3, 19, -1, 6.434882209481155e-05, ["mov     rsi, [rbp+src_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aWillNotOverwri; \"will not overwrite just-created %s with\"...", "jmp     loc_4C80"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 398, 0, 1, 10, 1, 2, 18, 38, 0.001475196746523555, ["mov     rdi, [x_0+38h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     dst_lstat_sb, r12; stats", "mov     byte ptr [rbp+var_338], r8b", "mov     byte ptr [rbp+new_dst], r9b", "call    seen_file", "test    al, al", "movzx   r9d, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "jnz     loc_785B"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~dst_lstat_sb,r12", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 22, -1, 0.05090635315920542, ["cmp     byte ptr [r15+17h], 0", "jz      short loc_50A4"], ["cmp~[yte ptr [r15+0],0", "jz~FOO"]], [0, 0, 41, 0, 1, 6, 0, 2, 24, -1, 6.595754264718185e-05, ["mov     rdi, [r15+38h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r13; stats", "call    record_file", "movzx   r8d, byte ptr [rbp+copied_as_regular]", "jmp     loc_5090"], ["mov~rdi,[r15+0]", "mov~rsi,[rbp+0]", "mov~rdx,r13", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 25, -1, 0.0010714078878786123, ["mov     rdi, r13; ptr", "call    free"], ["mov~rdi,r13", "call~FOO"]], [1, 0, 74, 0, 1, 4, 0, 2, 24, -1, 0.007451593598579178, ["call    ___errno_location", "cmp     byte ptr [x_0+29h], 0", "mov     r12d, [rax]", "jz      short loc_6AC1"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r12d,<TAG>", "jz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 25, -1, 0.005131818562061221, ["cmp     byte ptr [rbp+new_dst], 0", "jnz     short loc_6AC1"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 71, 0, 0, 9, 1, 1, 27, -1, 0.0038448421201649906, ["movzx   eax, byte ptr [rbp+new_dst]", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, src_link_val", "mov     rsi, [rbp+dst_sb.st_size]; size", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "cmp     rsi, rax", "jnz     loc_6AC1"], ["movzx~eax,[yte ptr [rbp+0]", "or~rcx,0", "mov~rdi,src_link_val", "mov~rsi,[rbp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 70, 0, 1, 5, 1, 2, 28, -1, 0.003191701575902653, ["mov     rdi, [rbp+dst_name]; file", "call    areadlink_with_size", "test    rax, rax", "mov     r14, rax", "jz      loc_6AC1"], ["mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 1, 72, 0, 0, 4, 1, 1, 26, -1, 0.004491547782217846, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7949"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 1, 472, 0, 0, 4, 1, 1, 17, 41, 0.001972291397205974, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_715B"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 107, 0, 0, 3, 0, 1, 37, 9, 0.005649826579924455, ["mov     rax, [rbp+restore_dst_mode]", "cmp     dword ptr [rax], 4", "jz      loc_77A1"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 107, 0, 1, 9, 1, 2, 36, 8, 0.02495447320836792, ["mov     rsi, [rbp+x]; buf", "mov     rdx, rbx; nbytes", "mov     edi, r12d; fd", "mov     byte ptr [rbp+nbytes], r9b", "call    _read", "test    rax, rax", "mov     rcx, rax", "movzx   r9d, byte ptr [rbp+nbytes]", "js      loc_7891"], ["mov~rsi,[rbp+0]", "mov~rdx,rbx", "mov~edi,r12d", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~r9d,[yte ptr [rbp+0]", "js~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 23, -1, 0.0009362753614795081, ["cmp     byte ptr [rbp+var_338], 0", "jnz     loc_5220"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 22, -1, 0.00032925147305178543, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 38, 0, 0, 2, 1, 1, 23, -1, 0.047421864442771376, ["test    r8b, r8b", "jnz     loc_5220"], ["test~r8b,r8b", "jnz~FOO"]], [0, 0, 465, 0, 0, 3, 0, 1, 18, 40, 0.008038776600194333, ["mov     rcx, [r11+8]", "cmp     [rdx+8], rcx", "jnz     loc_4DB3"], ["mov~rcx,[r11+0]", "cmp~[rdx+0],rcx", "jnz~FOO"]], [1, 1, 466, 0, 0, 5, 1, 1, 17, 41, 0.001637677522312954, ["mov     esi, [r11+18h]", "mov     ecx, esi", "and     ecx, 0F000h", "cmp     ecx, 0A000h", "jnz     loc_68A0"], ["mov~esi,[r11+0]", "mov~ecx,esi", "and~ecx,0", "cmp~ecx,<STR>", "jnz~FOO"]], [1, 1, 471, 0, 0, 5, 1, 1, 20, 41, 0.0018612896790924241, ["mov     esi, [r11+18h]", "mov     ecx, esi", "and     ecx, 0F000h", "cmp     ecx, 0A000h", "jnz     loc_68A0"], ["mov~esi,[r11+0]", "mov~ecx,esi", "and~ecx,0", "cmp~ecx,<STR>", "jnz~FOO"]], [1, 0, 62, 0, 1, 7, 0, 2, 44, -1, 0.0011968880909634949, ["mov     rdi, [rbp+dst_name]; name", "movzx   ebx, byte ptr [rbp+s]", "call    quote", "mov     edx, 5", "mov     r14, rax", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "jmp     loc_78C3"], ["mov~rdi,[rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "call~FOO", "mov~edx,0", "mov~r14,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 107, 0, 1, 6, 1, 2, 43, 10, 0.0032238759869500587, ["mov     edi, [rbp+fildes]; fd", "mov     edx, 1; whence", "mov     rsi, rcx; offset", "call    _lseek", "test    rax, rax", "js      loc_808D"], ["mov~edi,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 24, -1, 0.0451953951982909, ["cmp     byte ptr [r15+1Eh], 0", "jz      loc_5170"], ["cmp~[yte ptr [r15+0],0", "jz~FOO"]], [1, 0, 47, 0, 4, 17, 4, 5, 24, -1, 0.0011389741510781646, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, r12; format", "mov     rcx, r13", "xor     edi, edi; status", "xor     eax, eax", "xor     r12d, r12d", "call    _error", "jmp     loc_66DE"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,r12", "mov~rcx,r13", "xor~edi,edi", "xor~eax,eax", "xor~r12d,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 56, 0, 1, 17, 1, 2, 23, -1, 0.008545523574190975, ["movdqu  xmm0, xmmword ptr [x_0]", "movzx   eax, byte ptr [rbp+new_dst]", "mov     rdi, [rbp+src_name]; dir", "movaps  xmmword ptr [rbp+dev], xmm0", "movdqu  xmm0, xmmword ptr [x_0+10h]", "mov     dword ptr [rbp+device], eax", "mov     rax, [x_0+40h]", "movaps  [rbp+var_2E0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+20h]", "mov     [rbp+var_2B0], rax", "movaps  [rbp+var_2D0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+30h]", "movaps  [rbp+var_2C0], xmm0", "call    savedir", "test    rax, rax", "mov     [rbp+s], rax", "jz      loc_7075"], ["movdqu~xmm0,<TAG>", "movzx~eax,[yte ptr [rbp+0]", "mov~rdi,[rbp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "mov~[word ptr [rbp+0],eax", "mov~rax,[x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "mov~[rbp+0],rax", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 464, 0, 0, 3, 0, 1, 19, 40, 0.0007367940129855923, ["mov     rcx, [r11]", "cmp     [rdx], rcx", "jnz     loc_4DB3"], ["mov~rcx,<TAG>", "cmp~<TAG>,rcx", "jnz~FOO"]], [1, 0, 62, 0, 1, 6, 0, 1, 38, -1, 0.004874423273681976, ["mov     rdi, [rbp+src_name]; name", "movzx   ebx, byte ptr [rbp+s]", "call    quote", "lea     rsi, aReadingS; \"reading %s\"", "mov     r14, rax", "mov     edx, 5; category"], ["mov~rdi,[rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "mov~edx,0"]], [1, 0, 463, 0, 0, 2, 0, 1, 20, 43, 0.0006161399715578207, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_61A1"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 3, 0, 2, 10, 4, 3, 23, -1, 0.00013513252639910426, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error", "jmp     loc_4CA2"], ["xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 22, -1, 0.00032710651231529215, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotBackupS; \"cannot backup %s\"", "jmp     loc_60A7"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 445, 0, 0, 1, 0, 1, 21, 45, 0.00042470222582575626, ["jmp     loc_62D8"], ["jmp~FOO"]], [0, 0, 445, 0, 0, 1, 0, 1, 19, 40, 0.0071025012387148255, ["jmp     loc_4DB3"], ["jmp~FOO"]], [1, 0, 502, 0, 0, 2, 0, 1, 18, 41, 0.005805872473504373, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_5E18"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 118, 0, 0, 3, 0, 1, 33, 11, 0.014956274975386576, ["mov     eax, [x_0+0Ch]", "cmp     eax, 3", "jz      loc_7E11"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [5, 0, 119, 2, 0, 16, 2, 1, 32, 12, 0.030427340527531644, ["xor     edx, edx", "mov     eax, 8", "div     rcx", "mov     rcx, qword ptr [rbp+var_A0+8]", "lea     rdx, [rcx-8000h]", "imul    rax, rsi", "mov     [rbp+s], rax", "lea     r13, [rax+7]", "mov     rax, 1FFFFFFFFFFF8000h", "cmp     rdx, rax", "mov     eax, 8000h", "cmova   rcx, rax", "mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_7D71"], ["xor~edx,edx", "mov~eax,0", "div~,rcx", "mov~rcx,[word ptr [rbp+0]", "lea~rdx,[rcx-8000h]+0]", "imul~rax,rsi", "mov~[rbp+0],rax", "lea~r13,[rax+0]", "mov~rax,0", "cmp~rdx,rax", "mov~eax,0", "cmova~rcx,rax", "mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 31, -1, 0.006965223751579226, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jnz     short loc_70FB"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 1, 4, 1, 2, 30, -1, 0.008397521283372908, ["call    cached_umask", "not     eax", "and     [rbp+omitted_permissions], eax", "jz      loc_5211"], ["call~FOO", "not~eax", "and~[rbp+0],eax", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 21, -1, 0.012605934248373583, ["mov     byte ptr [rbp+restore_dst_mode], 0", "jmp     loc_6533"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 83, 0, 0, 4, 1, 1, 20, -1, 0.013214030617169553, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_68D0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 12, 0, 4, 20, 5, 5, 15, -1, 3.8609293256886937e-05, ["mov     rsi, [rbp+earlier_file]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aWillNotCreateH; \"will not create hard link %s to directo\"...", "mov     r13, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_564F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 341, 0, 0, 2, 0, 1, 10, 30, 0.009332831412520996, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5550"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 342, 0, 0, 4, 0, 1, 24, 31, 0.00020591623070339698, ["movzx   eax, byte ptr [rbp+copied_as_regular]", "mov     [rbp+dst_backup], 0", "mov     byte ptr [rbp+new_dst], al", "jmp     loc_4BEE"], ["movzx~eax,[yte ptr [rbp+0]", "mov~[rbp+0],0", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 342, 0, 0, 2, 0, 1, 9, 31, 0.008212625667887151, ["cmp     qword ptr [x_0+38h], 0", "jz      loc_5290"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 61, 0, 2, 10, 4, 2, 39, -1, 0.006901947409852663, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+restore_dst_mode]", "mov     rcx, r14", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "xor     r8d, r8d"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r14", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "xor~r8d,r8d"]], [1, 0, 62, 0, 1, 6, 0, 2, 41, -1, 0.0012328161832997648, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r14, rax", "lea     rsi, aWritingS; \"writing %s\"", "jmp     loc_78C3"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r14,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 60, 0, 2, 12, 1, 3, 29, -1, 0.00020913367180813757, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, rax", "call    _dcgettext", "mov     rdx, rax", "mov     rax, [rbp+restore_dst_mode]", "mov     rcx, r13", "mov     esi, [rax]", "jmp     loc_6447"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r13", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 147, 0, 1, 4, 1, 2, 28, 14, 0.0028506528188001518, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_80B4"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 40, -1, 0.0009663048117904203, ["movzx   ebx, byte ptr [rbp+s]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [0, 0, 448, 0, 0, 4, 0, 1, 20, 42, 0.0015105885986757012, ["mov     rax, [rdx]", "cmp     [r11], rax", "setz    al", "jmp     loc_5F1C"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "jmp~FOO"]], [1, 0, 466, 0, 0, 2, 0, 1, 21, 43, 0.0002766999350076897, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_717A"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 463, 0, 0, 4, 1, 1, 19, 42, 0.0002316557595413216, ["mov     eax, [r11+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_6DE7"], ["mov~eax,[r11+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 7, 0, 0, 5, 1, 1, 33, -1, 4.504417546636809e-05, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     [rbp+dst_mode], eax", "not     eax", "test    [rbp+omitted_permissions], eax", "jz      loc_5220"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "not~eax", "test~[rbp+0],eax", "jz~FOO"]], [1, 0, 11, 0, 1, 6, 1, 2, 33, -1, 0.002583605207106684, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_sb]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_70E1"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 32, -1, 0.005508259171315869, ["cmp     byte ptr [rbp+new_dst], 0", "jnz     loc_7B43"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 36, 0, 0, 12, 1, 1, 25, -1, 0.008946631231915275, ["mov     rax, [rbp+src_sb.st_atim.tv_sec]", "test    r14b, r14b", "lea     rsi, [rbp+timespec]; timespec", "mov     rdi, [rbp+dst_name]; file", "mov     [rbp+timespec.tv_sec], rax", "mov     rax, [rbp+src_sb.st_atim.tv_nsec]", "mov     [rbp+timespec.tv_nsec], rax", "mov     rax, [rbp+src_sb.st_mtim.tv_sec]", "mov     [rbp+timespec.tv_sec+10h], rax", "mov     rax, [rbp+src_sb.st_mtim.tv_nsec]", "mov     [rbp+timespec.tv_nsec+10h], rax", "jz      loc_692A"], ["mov~rax,[rbp+0]", "test~r14b,r14b", "lea~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 70, 0, 0, 3, 1, 1, 35, -1, 0.010963430564403518, ["mov     rax, 0FF00000000FFh", "test    [x_0+18h], rax", "jnz     loc_805B"], ["mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [1, 0, 77, 0, 0, 2, 0, 1, 34, -1, 0.01619981596236881, ["cmp     byte ptr [x_0+1Ch], 0", "jz      short loc_7EC8"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 75, 0, 0, 3, 0, 1, 36, -1, 3.2174411047405776e-05, ["mov     eax, dword ptr [rbp+var_B0]", "cmp     [rbp+src_sb.st_gid], eax", "jz      short loc_7EC8"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 72, 0, 0, 2, 1, 1, 37, -1, 0.00105853812345965, ["test    eax, eax", "jnz     short loc_7EC8"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 71, 0, 0, 1, 1, 0, 38, -1, 0.0, ["and     r14d, 0FFFFF1FFh"], ["and~r14d,0"]], [2, 0, 83, 0, 3, 16, 3, 4, 34, 5, 0.0017465342796900104, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+var_348], rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+restore_dst_mode]", "mov     rcx, [rbp+var_348]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+20h], 0", "jz      loc_7E52"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 84, 0, 1, 14, 1, 2, 33, 5, 0.0025380247914561925, ["mov     rax, [rbp+src_sb.st_atim.tv_sec]", "mov     rsi, [rbp+dst_name]; file", "lea     rdx, [rbp+var_2A0]; timespec", "mov     edi, [rbp+fildes]; fd", "mov     [rbp+var_2A0.tv_sec], rax", "mov     rax, [rbp+src_sb.st_atim.tv_nsec]", "mov     [rbp+var_2A0.tv_nsec], rax", "mov     rax, [rbp+src_sb.st_mtim.tv_sec]", "mov     [rbp+var_290], rax", "mov     rax, [rbp+src_sb.st_mtim.tv_nsec]", "mov     [rbp+var_288], rax", "call    gl_futimens", "test    eax, eax", "jz      loc_7E52"], ["mov~rax,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 4, 16, 3, 5, 18, -1, 4.826161657110867e-06, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotUnBackup; \"cannot un-backup %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     dst_lstat_sb, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4CA2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~dst_lstat_sb,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 17, -1, 0.0042277176116291195, ["mov     rsi, [rbp+dst_name]; new", "call    _rename", "test    eax, eax", "jnz     loc_60D0"], ["mov~rsi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 63, 0, 0, 1, 0, 1, 40, -1, 0.0008520856525721296, ["jmp     short loc_80F1"], ["jmp~FOO"]], [3, 0, 84, 1, 0, 10, 1, 1, 19, -1, 0.023421898762143165, ["sub     rsp, 30h", "mov     rsi, [rbp+restore_dst_mode]", "lea     rax, [rsp+3D0h+var_3C1]", "and     rax, 0FFFFFFFFFFFFFFF0h", "cmp     byte ptr [rbp+new_dst], 0", "mov     [rbp+ancestors], rax", "mov     [rax], rsi", "mov     [rax+8], dst_lstat_sb", "mov     [rax+10h], rcx", "jnz     short loc_5925"], ["sub~rsp,0", "mov~rsi,[rbp+0]", "lea~rax,[rsp+0]", "and~rax,0", "cmp~[yte ptr [rbp+0],0", "mov~[rbp+0],rax", "mov~<TAG>,rsi", "mov~[rax+0],dst_lstat_sb", "mov~[rax+0],rcx", "jnz~FOO"]], [0, 0, 85, 0, 0, 1, 0, 1, 18, -1, 0.02323850461917295, ["jmp     loc_58E0"], ["jmp~FOO"]], [0, 0, 90, 0, 0, 3, 1, 1, 19, -1, 0.00047296384239686496, ["mov     rax, [rax]", "test    rax, rax", "jz      loc_58E0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 33, 0, 1, 3, 1, 2, 26, -1, 0.0030946421025763227, ["call    lutimens", "test    eax, eax", "jz      short loc_5170"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 59, 0, 1, 11, 3, 2, 22, -1, 0.002126728570233522, ["mov     edx, [rbp+omitted_permissions]", "mov     rax, [rbp+src_sb.st_rdev]", "lea     rcx, [rbp+dev]; dev", "mov     rsi, [rbp+dst_name]; path", "xor     edi, edi; ver", "not     edx", "and     edx, [rbp+src_mode]; mode", "mov     [rbp+dev], rax", "call    ___xmknod", "test    eax, eax", "jnz     loc_6F7D"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "xor~edi,edi", "not~edx", "and~edx,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 2, 86, 0, 0, 4, 1, 1, 22, -1, 0.0026704761169346796, ["mov     eax, [rbp+src_mode]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_68DC"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [0, 1, 85, 0, 0, 2, 0, 1, 23, -1, 0.0019256385011872357, ["cmp     r13d, 0C000h", "jz      loc_68DC"], ["cmp~r13d,<STR>", "jz~FOO"]], [0, 2, 82, 0, 0, 4, 1, 1, 21, -1, 0.01986769882177307, ["mov     eax, [rbp+src_mode]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_68DC"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 16, -1, 0.002176598907357001, ["cmp     byte ptr [x_0+2Ah], 0", "jz      short loc_69B9"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 2, 2, 31, -1, 0.0015416905293548602, ["mov     esi, [rbp+dst_mode]", "or      esi, [rbp+omitted_permissions]; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "test    eax, eax", "jz      loc_5220"], ["mov~esi,[rbp+0]", "or~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 30, -1, 0.004421300318097678, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jnz     loc_70FB"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 32, 0, 1, 3, 0, 2, 27, -1, 0.0016821854575951938, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jz      short loc_5170"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 440, 0, 0, 3, 1, 1, 21, 43, 0.0005035295328919004, ["xor     r11d, r11d", "cmp     byte ptr [x_0+29h], 0", "jnz     loc_4DD4"], ["xor~r11d,r11d", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 442, 0, 0, 2, 0, 1, 20, 38, 0.005022425564500042, ["cmp     r13d, 4000h", "jz      loc_5AEB"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 90, 0, 0, 3, 1, 1, 38, 6, 0.0049795263497701674, ["test    r9b, r9b", "movzx   ebx, byte ptr [rbp+s]", "jz      loc_7E47"], ["test~r9b,r9b", "movzx~ebx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 107, 0, 0, 1, 0, 1, 37, 7, 0.017695926076073176, ["jz      loc_8111"], ["jz~FOO"]], [0, 0, 33, 0, 1, 3, 1, 2, 26, -1, 0.0031557734835663937, ["call    utimens", "test    eax, eax", "jz      loc_5179"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 89, 0, 1, 5, 1, 1, 39, 6, 0.0016307063999193496, ["mov     rsi, [rbp+length]; length", "mov     edi, [rbp+fildes]; fd", "call    _ftruncate", "test    eax, eax", "jns     loc_7E47"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 32, 0, 0, 1, 0, 1, 27, -1, 0.0016950552220141564, ["jmp     loc_511A"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 15, -1, 0.0019234935404507422, ["test    r14, r14", "jnz     loc_6353"], ["test~r14,r14", "jnz~FOO"]], [1, 0, 427, 0, 0, 2, 0, 1, 14, 43, 0.013996405045805635, ["cmp     eax, 2", "jz      loc_693C"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 422, 0, 2, 11, 1, 3, 16, 42, 0.0004198760641686454, ["mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [r12+18h]; dst_sb", "mov     byte ptr [rbp+new_dst], r11b", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r10b", "mov     byte ptr [rbp+var_338], r8b", "call    overwrite_prompt", "call    yesno", "test    al, al", "movzx   r11d, byte ptr [rbp+new_dst]", "jz      loc_693C"], ["mov~rdi,[rbp+0]", "lea~rsi,[r12+0]", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r10b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "call~FOO", "test~al,al", "movzx~r11d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 81, 0, 1, 8, 2, 2, 20, -1, 0.00895306611412478, ["mov     esi, [rbp+omitted_permissions]", "mov     r14, [rbp+dst_name]", "not     esi", "mov     rdi, r14; path", "and     esi, r12d; mode", "call    _mkdir", "test    eax, eax", "jz      loc_64B0"], ["mov~esi,[rbp+0]", "mov~r14,[rbp+0]", "not~esi", "mov~rdi,r14", "and~esi,r12d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 503, 0, 0, 2, 0, 1, 13, 44, 0.00037000572704516644, ["mov     ecx, 1", "jmp     loc_5EB2"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 513, 0, 0, 2, 0, 1, 12, 41, 0.0025256912672213536, ["cmp     dword ptr [x_0+4], 2", "jz      loc_813D"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 59, 0, 3, 16, 4, 4, 31, -1, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aClosingS; \"closing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+restore_dst_mode]", "mov     rcx, r14", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "jmp     loc_6456"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r14", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 60, 0, 1, 6, 1, 1, 30, -1, 0.015527370771478028, ["mov     edi, [rbp+fildes]; fd", "mov     byte ptr [rbp+var_348], r8b", "call    _close", "test    eax, eax", "movzx   r8d, byte ptr [rbp+var_348]", "jns     loc_6456"], ["mov~edi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jns~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 16, -1, 0.000598980285665871, ["jmp     loc_6357"], ["jmp~FOO"]], [1, 0, 3, 0, 3, 17, 4, 4, 7, -1, 2.89569699426652e-05, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+dst_name], al", "call    quote", "lea     rsi, aWarningSourceF; \"warning: source file %s specified more \"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "movzx   r8d, byte ptr [rbp+dst_name]", "mov     ebx, r8d", "jmp     loc_4CA2"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],al", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~ebx,r8d", "jmp~FOO"]], [0, 0, 537, 0, 1, 5, 1, 2, 6, 35, 7.721858651377387e-05, ["mov     dst_lstat_sb, [rbp+stats]; stats", "mov     rsi, [rbp+src_name]; file", "call    seen_file", "test    al, al", "jnz     loc_6110"], ["mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 4, 0, 4, 16, 3, 5, 32, -1, 2.89569699426652e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     dest_is_symlink, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r14", "mov     rdx, r13; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6B7D"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~dest_is_symlink,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r14", "mov~rdx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 1, 5, 0, 1, 21, -1, 0.0009866819387871104, ["mov     rdi, r14; name", "call    quote", "lea     rsi, aCannotCreateDi; \"cannot create directory %s\"", "mov     r13, rax", "mov     edx, 5; category"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0"]], [2, 0, 444, 0, 0, 3, 0, 1, 12, 44, 0.005218260479741916, ["cmp     r13d, 4000h", "mov     r10d, 1", "jnz     loc_4DC3"], ["cmp~r13d,0", "mov~r10d,0", "jnz~FOO"]], [0, 0, 514, 0, 0, 3, 1, 1, 11, 42, 0.0016034653985658794, ["movzx   ecx, byte ptr [x_0+17h]", "test    cl, cl", "jnz     loc_62D8"], ["movzx~ecx,[yte ptr [x_0+0]", "test~cl,cl", "jnz~FOO"]], [0, 0, 445, 0, 0, 1, 0, 0, 25, 45, 0.0015620676563515502, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 464, 0, 0, 2, 0, 1, 18, 42, 0.0007126632047000379, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_6DE7"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 475, 0, 0, 4, 1, 1, 19, 42, 0.0006370533387386344, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_715B"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 31, 0, 4, 17, 3, 5, 28, -1, 0.002075785752741794, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+copied_as_regular], rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+copied_as_regular]", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     dst_lstat_sb, r13; format", "call    _error", "cmp     byte ptr [r15+20h], 0", "jnz     loc_4CA0"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~dst_lstat_sb,r13", "call~FOO", "cmp~[yte ptr [r15+0],0", "jnz~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 29, -1, 0.00017052437855125062, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 13, 0, 2, 5, 1, 2, 22, -1, 0.00189346409013983, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13"], ["xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13"]], [1, 0, 14, 0, 1, 6, 0, 2, 21, -1, 0.0005249791402568376, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateLi; \"cannot create link %s\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 22, -1, 4.504417546636809e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 21, -1, 0.0005475012279900215, ["mov     rdi, [rbp+src_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotOpenSFor; \"cannot open %s for reading\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 23, -1, 9.330579203747676e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateSp; \"cannot create special file %s\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 9.008835093273618e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 8.365346872325503e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateFi; \"cannot create fifo %s\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 23, -1, 6.917498375192242e-05, ["mov     rdi, [rbp+src_name]; name", "call    quote", "mov     edx, 5", "mov     src_link_val, rax", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "jmp     loc_595E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_link_val,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 25, -1, 0.03400459879581911, ["test    r14b, r14b", "jnz     loc_5220"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 20, 0, 1, 4, 0, 2, 14, -1, 0.005028860446709523, ["call    ___errno_location", "cmp     dword ptr [rax], 11h", "mov     r13, rax", "jz      loc_696A"], ["call~FOO", "cmp~<TAG>,0", "mov~r13,rax", "jz~FOO"]], [1, 0, 13, 0, 2, 8, 1, 3, 28, -1, 0.00021878599512235928, ["lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+dst_name]", "jmp     loc_5970"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "jmp~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 26, -1, 0.032748188044417884, ["cmp     byte ptr [r15+1Ch], 0", "jz      short loc_51E4"], ["cmp~[yte ptr [r15+0],0", "jz~FOO"]], [1, 1, 468, 0, 0, 4, 1, 1, 16, 42, 0.002861913862666744, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6DE7"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 27, -1, 0.007435774513147533, ["cmp     byte ptr [rbp+new_dst], 0", "jnz     short loc_519B"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 59, 0, 3, 17, 5, 4, 30, -1, 0.0004745725629492352, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+fildes], r8b", "call    quote", "lea     rsi, aNotWritingThro; \"not writing through dangling symlink %s\"", "mov     r13, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "xor     r13d, r13d", "call    _error", "movzx   r8d, byte ptr [rbp+fildes]", "jmp     loc_6456"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "xor~r13d,r13d", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 138, 0, 0, 3, 1, 1, 29, 13, 0.001977117558863085, ["movzx   r8d, byte ptr [x_0+2Ch]", "test    r8b, r8b", "jz      loc_8147"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 17, -1, 0.0061581822744734655, ["cmp     [rbp+earlier_file], 0", "jnz     loc_565A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 1, 2, 0, 2, 16, -1, 0.0015186322014375526, ["call    restore_default_fscreatecon_or_die", "jmp     loc_5989"], ["call~FOO", "jmp~FOO"]], [0, 0, 25, 0, 0, 3, 0, 1, 29, -1, 0.0014671531437617034, ["mov     eax, [rbp+dst_sb.st_gid]", "cmp     [rbp+src_sb.st_gid], eax", "jnz     loc_519B"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 28, -1, 0.002869957465428595, ["mov     eax, [rbp+dst_sb.st_uid]", "cmp     [rbp+src_sb.st_uid], eax", "jz      loc_7188"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 68, 0, 1, 6, 1, 2, 29, -1, 0.002532126149430835, ["mov     rdi, dest_link_val; s1", "mov     rsi, r13; s2", "call    _strcmp", "test    eax, eax", "mov     rdi, dest_link_val; ptr", "jnz     loc_8191"], ["mov~rdi,dest_link_val", "mov~rsi,r13", "call~FOO", "test~eax,eax", "mov~rdi,dest_link_val", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 30, -1, 8.68709098279956e-05, ["jmp     loc_51E4"], ["jmp~FOO"]], [0, 0, 65, 0, 1, 1, 0, 1, 30, -1, 0.0010231462713075038, ["call    free"], ["call~FOO"]], [1, 0, 461, 0, 0, 2, 0, 1, 18, 42, 0.003445879423177159, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_5E70"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 462, 0, 0, 1, 0, 1, 22, 43, 0.0001303063647419934, ["jmp     loc_61A1"], ["jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 2, 18, -1, 0.0, ["mov     rsi, [rbp+src_sb.st_dev]; dev", "mov     rdi, [rbp+src_sb.st_ino]; ino", "call    forget_created", "jmp     loc_565A"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 64, 0, 1, 4, 0, 2, 24, -1, 0.008217344581507436, ["mov     rdi, r13; ptr", "call    free", "cmp     byte ptr [x_0+21h], 0", "jz      short loc_79B7"], ["mov~rdi,r13", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 75, 0, 1, 5, 1, 2, 23, -1, 0.01586520208747579, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, src_link_val; from", "call    _symlink", "test    eax, eax", "jz      loc_79A3"], ["mov~rsi,[rbp+0]", "mov~rdi,src_link_val", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 460, 0, 0, 2, 0, 1, 19, 41, 0.004607375661988508, ["cmp     eax, 0A000h", "jz      loc_6DF2"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 63, 0, 1, 1, 0, 1, 25, -1, 0.0, ["call    restore_default_fscreatecon_or_die"], ["call~FOO"]], [2, 0, 135, 0, 0, 3, 0, 1, 27, 12, 0.004314588521457115, ["cmp     byte ptr [x_0+25h], 0", "mov     dword ptr [rcx], 5Fh ; '_'", "jz      short loc_7B00"], ["cmp~[yte ptr [x_0+0],0", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 153, 0, 0, 2, 1, 1, 26, 13, 0.007034934975515273, ["test    eax, eax", "js      loc_7CBE"], ["test~eax,eax", "js~FOO"]], [2, 0, 16, 0, 3, 12, 2, 3, 17, -1, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 13, 0, 2, 4, 0, 3, 30, -1, 4.1826734361627513e-05, ["call    free", "mov     rdi, r13; ptr", "call    free", "jmp     loc_6AC9"], ["call~FOO", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [1, 0, 324, 0, 0, 3, 1, 1, 7, 31, 0.0030694388139225113, ["mov     byte ptr [rbp+var_338], 0", "xor     r8d, r8d", "jmp     loc_4EFF"], ["mov~[yte ptr [rbp+0],0", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 526, 0, 0, 2, 1, 1, 6, 32, 0.004039497307001795, ["test    r12b, r12b", "jnz     loc_59B0"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 25, -1, 0.006923933257401723, ["movzx   r8d, byte ptr [x_0+1Ch]", "test    r8b, r8b", "jnz     loc_7A5E"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [2, 0, 23, 0, 1, 9, 0, 2, 28, -1, 0.0018438618731084107, ["movzx   r8d, byte ptr [rbp+new_dst]; new_dst", "mov     rcx, [rbp+stats]; src_sb", "lea     r9, [rbp+dst_sb]; dst_sb", "mov     rsi, [rbp+dst_name]; dst_name", "mov     edx, 0FFFFFFFFh; dest_desc", "mov     rdi, r15; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_4CA0"], ["movzx~r8d,[yte ptr [rbp+0]", "mov~rcx,[rbp+0]", "lea~r9,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edx,0", "mov~rdi,r15", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 1, 79, 0, 1, 6, 1, 2, 36, 1, 0.0010070590657838008, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, [rbp+fildes]; desc", "mov     edx, 180h; mode", "call    fchmod_or_lchmod", "test    eax, eax", "jnz     loc_7E66"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "mov~edx,<STR>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 80, 0, 1, 3, 1, 2, 35, 2, 0.0020076832493581206, ["call    _geteuid", "test    eax, eax", "jz      loc_7E66"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 140, 0, 1, 8, 1, 2, 27, 12, 0.003603534037309447, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     dword ptr [rbp+var_348], r9d", "call    ___lxstat", "test    eax, eax", "mov     r9d, dword ptr [rbp+var_348]", "jnz     short loc_75EA"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r9d", "call~FOO", "test~eax,eax", "mov~r9d,[word ptr [rbp+0]", "jnz~FOO"]], [1, 0, 141, 0, 0, 4, 1, 1, 26, 13, 0.005765654459695116, ["movzx   r8d, byte ptr [x_0+18h]", "mov     r9d, 11h", "test    r8b, r8b", "jz      loc_757A"], ["movzx~r8d,[yte ptr [x_0+0]", "mov~r9d,0", "test~r8b,r8b", "jz~FOO"]], [2, 0, 225, 0, 1, 5, 0, 2, 17, 22, 0.0015331106864088853, ["call    ___errno_location", "cmp     byte ptr [x_0+22h], 0", "mov     dst_mode_bits, rax", "mov     dword ptr [rax], 5Fh ; '_'", "jz      loc_4FC2"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~dst_mode_bits,rax", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 226, 0, 0, 2, 1, 1, 16, 22, 0.003709709593765886, ["test    al, al", "jnz     loc_59C0"], ["test~al,al", "jnz~FOO"]], [1, 0, 15, 0, 1, 8, 2, 2, 17, -1, 0.0008317085255754393, ["mov     rcx, [rbp+dst_name]; file2", "mov     rsi, [rbp+earlier_file]; file1", "mov     edx, 0FFFFFF9Ch; fd2", "xor     r8d, r8d; flag", "mov     edi, edx; fd1", "call    rpl_linkat", "test    eax, eax", "jz      loc_4E60"], ["mov~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edx,0", "xor~r8d,r8d", "mov~edi,edx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 18, -1, 9.974067424695791e-05, ["jmp     loc_5601"], ["jmp~FOO"]], [0, 0, 78, 0, 1, 7, 1, 2, 37, 0, 0.0, ["mov     edx, dword ptr [rbp+device]", "mov     rsi, [rbp+dst_name]; name", "mov     edi, [rbp+fildes]; desc", "not     edx", "and     edx, [rbp+mode]; mode", "call    fchmod_or_lchmod", "jmp     loc_7E66"], ["mov~edx,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "not~edx", "and~edx,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 21, 0, 0, 3, 1, 1, 27, -1, 0.022892897820505395, ["mov     rax, 0FF00000000FFh", "test    [r15+18h], rax", "jnz     loc_6B54"], ["mov~rax,0", "test~[r15+0],rax", "jnz~FOO"]], [1, 0, 22, 0, 0, 6, 2, 0, 29, -1, 0.000144784849713326, ["mov     ecx, [rbp+src_mode]", "mov     edx, ecx", "and     dh, 0F1h", "test    eax, eax", "cmovnz  edx, ecx", "mov     [rbp+src_mode], edx"], ["mov~ecx,[rbp+0]", "mov~edx,ecx", "and~dh,0", "test~eax,eax", "cmovnz~edx,ecx", "mov~[rbp+0],edx"]], [0, 0, 333, 0, 0, 3, 1, 1, 12, 32, 0.0033414198353099145, ["test    r9b, r9b", "lea     dst_lstat_sb, [rbp+dst_sb]; stats", "jz      loc_6828"], ["test~r9b,r9b", "lea~dst_lstat_sb,[rbp+0]", "jz~FOO"]], [0, 0, 385, 0, 0, 2, 0, 1, 17, 35, 0.0009727396939999015, ["mov     eax, [rbp+dst_sb.st_mode]", "jmp     loc_5B44"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 59, 0, 0, 4, 1, 1, 22, -1, 0.013474643346653539, ["cmp     [rbp+device], 0", "setnz   r12b", "and     r12b, [x_0+1Bh]", "jnz     loc_69E8"], ["cmp~[rbp+0],0", "setnz~r12b", "and~r12b,[x_0+0]", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 28, -1, 0.018544526167448505, ["cmp     byte ptr [r15+27h], 0", "jnz     loc_6F04"], ["cmp~[yte ptr [r15+0],0", "jnz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 24, -1, 3.539185215214635e-05, ["jmp     loc_6549"], ["jmp~FOO"]], [1, 0, 380, 0, 1, 8, 0, 2, 17, 35, 0.01143317696569564, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+var_338], r8b", "mov     byte ptr [rbp+new_dst], r9b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "movzx   r9d, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "jz      loc_7426"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "cmp~<TAG>,0", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 29, -1, 0.015668938180086613, ["mov     eax, [rbp+omitted_permissions]", "test    eax, eax", "jnz     loc_70B8"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 484, 0, 1, 13, 1, 2, 18, 40, 0.004089367644125274, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "mov     [rbp+var_338], r11", "mov     [rbp+new_dst], rdx", "call    same_name", "test    al, al", "mov     rdx, [rbp+new_dst]", "mov     r11, [rbp+var_338]", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_7449"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],r11", "mov~[rbp+0],rdx", "call~FOO", "test~al,al", "mov~rdx,[rbp+0]", "mov~r11,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 224, 0, 3, 15, 3, 4, 18, 22, 0.0007866643501090713, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     dst_lstat_sb, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r14", "call    _error", "cmp     byte ptr [x_0+22h], 0", "jz      loc_4FC2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~esi,<TAG>", "mov~dst_lstat_sb,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r14", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 457, 0, 0, 18, 0, 0, 20, 43, 0.0002734824939029491, ["movdqa  xmm0, xmmword ptr [dst_lstat_sb]", "movaps  xmmword ptr [rbp+timespec.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+10h]", "movaps  xmmword ptr [rbp+timespec.tv_sec+10h], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+20h]", "movaps  [rbp+var_B0], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+30h]", "movaps  [rbp+var_A0], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+40h]", "movaps  [rbp+var_90], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+50h]", "movaps  [rbp+var_80], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+60h]", "movaps  [rbp+var_70], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+70h]", "movaps  [rbp+var_60], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+80h]", "movaps  [rbp+var_50], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0"]], [0, 0, 3, 0, 0, 1, 0, 1, 19, -1, 3.3783131599776064e-05, ["jmp     loc_4CA2"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 31, -1, 1.8768406444320038e-05, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 79, 0, 1, 6, 1, 2, 21, -1, 0.006618276352451369, ["mov     rsi, [rbp+dst_name]; filename", "lea     dst_lstat_sb, [rbp+dst_sb]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_6A07"], ["mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 24, -1, 0.0006555536250908927, ["mov     ebx, r12d", "jmp     loc_4CA2"], ["mov~ebx,r12d", "jmp~FOO"]], [1, 0, 5, 0, 1, 8, 1, 2, 28, -1, 0.0015073711575709606, ["mov     r8d, [rbp+src_mode]; mode", "mov     rdx, [rbp+dst_name]; dst_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdi, [rbp+src_name]; src_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jz      loc_5220"], ["mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,0", "mov~rdi,[rbp+0]", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 456, 0, 0, 3, 1, 1, 20, 42, 0.004594505897569545, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      loc_7B95"], ["and~esi,0", "cmp~esi,<STR>", "jz~FOO"]], [0, 0, 457, 0, 0, 3, 0, 1, 19, 43, 0.0016119379934750294, ["mov     r11, [rbp+new_dst]", "mov     esi, [r11+18h]", "jmp     loc_6219"], ["mov~r11,[rbp+0]", "mov~esi,[r11+0]", "jmp~FOO"]], [3, 0, 344, 0, 3, 18, 3, 4, 22, 32, 0.00013513252639910426, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+new_dst], r8b", "mov     byte ptr [rbp+var_338], r9b", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     r8d, r8d", "mov     [rbp+dst_backup], 0", "movzx   r9d, byte ptr [rbp+var_338]", "jmp     loc_4BD6"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 350, 0, 0, 3, 1, 1, 21, 32, 0.005854134090075481, ["movzx   r8d, byte ptr [x_0+2Ah]", "test    r8b, r8b", "jnz     loc_79DD"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [2, 0, 326, 0, 0, 5, 0, 1, 12, 29, 0.002248991332213664, ["cmp     r13d, 4000h", "setnz   byte ptr [rbp+var_338]", "cmp     byte ptr [x_0+2Ah], 0", "movzx   eax, byte ptr [rbp+var_338]", "jz      loc_4F15"], ["cmp~r13d,0", "setnz~[yte ptr [rbp+0]", "cmp~[yte ptr [x_0+0],0", "movzx~eax,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 337, 0, 0, 3, 1, 1, 11, 30, 0.005690151841770537, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_5A20"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 35, -1, 0.0014392686541872853, ["xor     r8d, r8d", "jmp     loc_78E5"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 74, 0, 1, 9, 0, 2, 36, -1, 0.002366427932536695, ["movzx   r8d, byte ptr [rbp+new_dst]; new_dst", "mov     r9, [rbp+ancestors]; dst_sb", "mov     rdi, x_0; x", "mov     rcx, [rbp+stats]; src_sb", "mov     edx, [rbp+fildes]; dest_desc", "mov     rsi, [rbp+dst_name]; dst_name", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_8032"], ["movzx~r8d,[yte ptr [rbp+0]", "mov~r9,[rbp+0]", "mov~rdi,x_0", "mov~rcx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 447, 0, 0, 3, 1, 1, 19, 39, 0.004662072160769097, ["movzx   r10d, byte ptr [x_0+18h]", "test    r10b, r10b", "jz      loc_7A3A"], ["movzx~r10d,[yte ptr [x_0+0]", "test~r10b,r10b", "jz~FOO"]], [0, 0, 325, 0, 0, 2, 1, 1, 13, 29, 0.0006145312510054503, ["test    al, al", "jz      loc_4F15"], ["test~al,al", "jz~FOO"]], [0, 0, 538, 0, 0, 4, 1, 1, 5, 34, 0.00041054548496489773, ["mov     r8d, [x_0]", "mov     rdi, [x_0+40h]; ht", "test    r8d, r8d", "jz      loc_5230"], ["mov~r8d,<TAG>", "mov~rdi,[x_0+0]", "test~r8d,r8d", "jz~FOO"]], [0, 0, 324, 0, 0, 1, 0, 1, 14, 31, 3.2174411047405776e-05, ["jmp     loc_52B8"], ["jmp~FOO"]], [0, 0, 535, 0, 0, 2, 0, 1, 7, 34, 0.0017116786677219874, ["mov     rdi, [x_0+40h]", "jmp     loc_4BA2"], ["mov~rdi,[x_0+0]", "jmp~FOO"]], [0, 1, 86, 0, 0, 2, 0, 1, 19, -1, 0.039809935029139286, ["cmp     r13d, 0A000h", "jnz     short loc_5A64"], ["cmp~r13d,<STR>", "jnz~FOO"]], [0, 0, 208, 0, 0, 3, 1, 1, 18, 19, 0.1349437698542928, ["movzx   r12d, byte ptr [x_0+17h]", "test    r12b, r12b", "jnz     loc_5A50"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 415, 0, 0, 2, 0, 1, 22, 42, 0.0015025449959138496, ["mov     eax, [x_0+8]", "jmp     loc_5F3F"], ["mov~eax,[x_0+0]", "jmp~FOO"]], [1, 0, 322, 0, 0, 2, 0, 1, 8, 29, 0.1914631635167918, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_52FC"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 326, 0, 0, 5, 0, 1, 9, 30, 0.1737557619007784, ["cmp     r13d, 4000h", "setnz   byte ptr [rbp+var_338]", "cmp     byte ptr [x_0+2Ah], 0", "movzx   eax, byte ptr [rbp+var_338]", "jz      loc_4F0A"], ["cmp~r13d,0", "setnz~[yte ptr [rbp+0]", "cmp~[yte ptr [x_0+0],0", "movzx~eax,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 325, 0, 0, 2, 1, 1, 10, 30, 0.0011614962388113487, ["test    al, al", "jz      loc_4F0A"], ["test~al,al", "jz~FOO"]], [2, 0, 323, 0, 0, 6, 0, 1, 24, 30, 0.0010360160357264661, ["movzx   eax, byte ptr [rbp+copied_as_regular]", "cmp     r13d, 4000h", "mov     [rbp+dst_backup], 0", "setnz   byte ptr [rbp+var_338]", "mov     byte ptr [rbp+new_dst], al", "jmp     loc_4F0A"], ["movzx~eax,[yte ptr [rbp+0]", "cmp~r13d,0", "mov~[rbp+0],0", "setnz~[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 323, 0, 0, 1, 0, 0, 7, 30, 0.009231053025574367, ["mov     [rbp+dst_backup], 0"], ["mov~[rbp+0],0"]], [2, 0, 76, 0, 1, 8, 2, 2, 23, -1, 0.0008558393338609937, ["mov     rdi, [rbp+dst_name]; file", "mov     esi, r12d", "or      esi, 1C0h; mode", "call    _chmod", "test    eax, eax", "mov     [rbp+dst_mode], r12d", "mov     byte ptr [rbp+restore_dst_mode], 1", "jnz     loc_719F"], ["mov~rdi,[rbp+0]", "mov~esi,r12d", "or~esi,0", "call~FOO", "test~eax,eax", "mov~[rbp+0],r12d", "mov~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 20, -1, 0.020578753305920735, ["cmp     dword ptr [x_0+4], 2", "jz      loc_6A47"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 59, 0, 1, 7, 2, 2, 23, -1, 0.0008494044516515125, ["mov     rdi, [rbp+dst_name]; path", "mov     esi, r12d", "and     esi, 0FFFFEFFFh; mode", "call    _mkfifo", "test    eax, eax", "movzx   r8d, byte ptr [rbp+fildes]", "jz      loc_6BD6"], ["mov~rdi,[rbp+0]", "mov~esi,r12d", "and~esi,0", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 60, 0, 1, 13, 3, 2, 22, -1, 0.0028377830543811896, ["mov     r12d, [rbp+omitted_permissions]", "mov     rsi, [rbp+dst_name]; path", "lea     rcx, [rbp+var_2F8]; dev", "xor     edi, edi; ver", "mov     byte ptr [rbp+fildes], r8b", "mov     [rbp+var_2F8], 0", "not     r12d", "and     r12d, [rbp+src_mode]", "mov     edx, r12d; mode", "call    ___xmknod", "test    eax, eax", "movzx   r8d, byte ptr [rbp+fildes]", "jnz     loc_7250"], ["mov~r12d,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],0", "not~r12d", "and~r12d,[rbp+0]", "mov~edx,r12d", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 426, 0, 0, 2, 0, 1, 15, 42, 0.012784502229686686, ["cmp     eax, 3", "jz      loc_6D88"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 78, 0, 1, 6, 1, 2, 22, -1, 0.01732431162847564, ["mov     rsi, [rbp+src_sb.st_size]; size", "mov     rdi, [rbp+src_name]; file", "call    areadlink_with_size", "test    rax, rax", "mov     r13, rax", "jz      loc_755A"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 1, 81, 0, 0, 2, 0, 1, 24, -1, 0.0012338886636680116, ["cmp     r13d, 0A000h", "jz      loc_6A5D"], ["cmp~r13d,<STR>", "jz~FOO"]], [0, 0, 60, 0, 1, 8, 1, 2, 26, -1, 0.003574577067366782, ["mov     edx, [rbp+src_sb.st_gid]; group", "mov     esi, [rbp+src_sb.st_uid]; owner", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+fildes], r8b", "call    _lchown", "test    eax, eax", "movzx   r8d, byte ptr [rbp+fildes]", "jz      loc_7C57"], ["mov~edx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 395, 0, 0, 2, 0, 1, 18, 37, 0.021827120454560076, ["cmp     r13d, 4000h", "jz      loc_5FF6"], ["cmp~r13d,0", "jz~FOO"]], [3, 0, 409, 0, 0, 6, 2, 1, 17, 38, 0.04330193110815106, ["mov     eax, [rbp+dst_sb.st_mode]", "xor     r9d, 1", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_6F24"], ["mov~eax,[rbp+0]", "xor~r9d,0", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 3, 0, 3, 14, 4, 4, 5, -1, 4.826161657110867e-05, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aOmittingDirect; \"omitting directory %s\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4CA2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 539, 0, 0, 2, 0, 1, 4, 34, 0.0031319644193913026, ["cmp     byte ptr [x_0+26h], 0", "jz      loc_5258"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 58, 0, 1, 5, 1, 2, 27, -1, 0.0019015076929016815, ["mov     rdi, x_0; x", "call    chown_failure_ok", "test    al, al", "mov     r12d, eax", "jz      loc_7E1D"], ["mov~rdi,x_0", "call~FOO", "test~al,al", "mov~r12d,eax", "jz~FOO"]], [0, 0, 453, 0, 0, 18, 0, 0, 21, 41, 0.0019677869796593376, ["movdqa  xmm0, xmmword ptr [r11]", "movaps  xmmword ptr [rbp+dot_sb.st_dev], xmm0", "movdqa  xmm0, xmmword ptr [r11+10h]", "movaps  xmmword ptr [rbp+dot_sb.st_nlink], xmm0", "movdqa  xmm0, xmmword ptr [r11+20h]", "movaps  xmmword ptr [rbp+dot_sb.st_gid], xmm0", "movdqa  xmm0, xmmword ptr [r11+30h]", "movaps  xmmword ptr [rbp+dot_sb.st_size], xmm0", "movdqa  xmm0, xmmword ptr [r11+40h]", "movaps  xmmword ptr [rbp+dot_sb.st_blocks], xmm0", "movdqa  xmm0, xmmword ptr [r11+50h]", "movaps  xmmword ptr [rbp+dot_sb.st_atim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r11+60h]", "movaps  xmmword ptr [rbp+dot_sb.st_mtim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r11+70h]", "movaps  xmmword ptr [rbp+dot_sb.st_ctim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r11+80h]", "movaps  xmmword ptr [rbp+dot_sb.__glibc_reserved+8], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r11+0]", "movaps~[mmword ptr [rbp+0],xmm0"]], [1, 0, 343, 0, 0, 2, 0, 1, 8, 31, 0.1761003112338029, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      loc_5290"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 1, 330, 0, 0, 4, 1, 1, 13, 31, 0.0031676780156539228, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5290"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 329, 0, 1, 7, 1, 2, 14, 31, 0.0010023401521635146, ["mov     rdi, [x_0+38h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     byte ptr [rbp+var_338], r8b", "call    seen_file", "test    al, al", "movzx   r8d, byte ptr [rbp+var_338]", "jz      loc_5290"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [3, 0, 357, 0, 0, 4, 0, 1, 21, 32, 0.0038014066652509925, ["cmp     dword ptr [x_0+4], 2", "mov     byte ptr [rbp+new_dst], 0", "mov     [rbp+dst_backup], 0", "jnz     loc_4BD6"], ["cmp~[word ptr [x_0+0],0", "mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [0, 0, 452, 0, 0, 3, 0, 1, 22, 40, 0.005898213033210428, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     loc_4DB3"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 454, 0, 1, 10, 1, 2, 21, 41, 0.003624125660379787, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+var_338], r9b", "mov     byte ptr [rbp+new_dst], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+new_dst]", "movzx   r9d, byte ptr [rbp+var_338]", "jz      loc_62A2"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [5, 0, 112, 1, 1, 20, 1, 2, 33, 11, 0.01464418318822674, ["mov     rdi, [rbp+dot_sb.st_blksize]", "mov     rax, 1FFFFFFFFFFF8000h", "mov     r8, 7FFFFFFFFFFFFFFFh", "sub     r8, r13", "mov     rsi, rcx; b", "mov     [rbp+var_348], rcx", "mov     [rbp+x], r8", "lea     rdx, [rdi-8000h]", "cmp     rdx, rax", "mov     eax, 8000h", "mov     rdx, r8; lcm_max", "cmova   rdi, rax; a", "call    buffer_lcm", "mov     rsi, rax", "mov     eax, [rbp+dot_sb.st_mode]", "mov     rcx, [rbp+var_348]", "mov     r8, [rbp+x]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_7DF8"], ["mov~rdi,[rbp+0]", "mov~rax,0", "mov~r8,0", "sub~r8,r13", "mov~rsi,rcx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "lea~rdx,[rdi-8000h]+0]", "cmp~rdx,rax", "mov~eax,0", "mov~rdx,r8", "cmova~rdi,rax", "call~FOO", "mov~rsi,rax", "mov~eax,[rbp+0]", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 116, 0, 0, 2, 0, 1, 34, 12, 0.0027187377335057884, ["cmp     eax, 2", "jnz     loc_76B3"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 115, 0, 0, 4, 1, 1, 35, 11, 0.001981943720520196, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_76B3"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 113, 0, 0, 1, 0, 1, 37, 12, 1.6087205523702888e-05, ["jmp     loc_76B3"], ["jmp~FOO"]], [1, 0, 323, 0, 0, 3, 1, 0, 11, 30, 0.002689780763563123, ["test    r8b, r8b", "mov     edx, 0", "cmovnz  dst_lstat_sb, [rbp+dst_backup]; backup_dst_name"], ["test~r8b,r8b", "mov~edx,0", "cmovnz~dst_lstat_sb,[rbp+0]"]], [0, 0, 324, 0, 0, 1, 0, 1, 13, 31, 3.8609293256886937e-05, ["jmp     loc_52B8"], ["jmp~FOO"]], [0, 0, 451, 0, 0, 3, 0, 1, 23, 40, 0.0007129849488105121, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "jnz     loc_4DB3"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 23, 32, 0.001097147416716537, ["jmp     loc_4BD6"], ["jmp~FOO"]], [1, 0, 447, 0, 0, 2, 0, 1, 24, 46, 0.0005022425564500043, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_5E70"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 307, 0, 1, 6, 0, 2, 13, 27, 0.00011743660032303109, ["mov     rsi, rdi; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "movzx   r8d, byte ptr [rbp+omitted_permissions]", "mov     [rbp+earlier_file], rax", "jmp     loc_55B0"], ["mov~rsi,rdi", "mov~rdi,[rbp+0]", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 155, 0, 1, 9, 1, 2, 25, 12, 0.039732180202441396, ["mov     rdi, [rbp+dst_name]; file", "xor     eax, eax", "mov     esi, 201h; flags", "call    open_safer", "cmp     byte ptr [x_0+21h], 0", "mov     rcx, [rbp+restore_dst_mode]", "mov     [rbp+fildes], eax", "mov     r9d, [rcx]", "jz      loc_7CB1"], ["mov~rdi,[rbp+0]", "xor~eax,eax", "mov~esi,0", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~rcx,[rbp+0]", "mov~[rbp+0],eax", "mov~r9d,<TAG>", "jz~FOO"]], [2, 0, 156, 0, 1, 7, 1, 2, 24, 13, 0.07752746085982896, ["mov     eax, [rbp+src_mode]", "and     eax, 1FFh", "mov     [rbp+mode], eax", "call    ___errno_location", "cmp     byte ptr [rbp+new_dst], 0", "mov     [rbp+restore_dst_mode], rax", "jz      loc_7AB2"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "call~FOO", "cmp~[yte ptr [rbp+0],0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 430, 0, 0, 2, 0, 1, 12, 38, 0.0808767098018271, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6300"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 444, 0, 0, 3, 1, 1, 11, 39, 0.08828132876027704, ["xor     r10d, r10d", "cmp     r13d, 4000h", "jz      loc_5AE0"], ["xor~r10d,r10d", "cmp~r13d,0", "jz~FOO"]], [0, 0, 439, 0, 0, 1, 1, 0, 13, 45, 0.0017663751665025773, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 440, 0, 0, 3, 1, 1, 12, 43, 0.014175723763376512, ["movzx   r11d, byte ptr [x_0+29h]", "test    r11b, r11b", "jz      loc_5F30"], ["movzx~r11d,[yte ptr [x_0+0]", "test~r11b,r11b", "jz~FOO"]], [0, 0, 158, 0, 0, 3, 0, 1, 23, 14, 0.07802294678995901, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+src_sb.st_dev], rax", "jz      loc_72CD"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 430, 0, 0, 3, 1, 1, 13, 46, 0.00045805636527823353, ["movzx   r10d, byte ptr [x_0+18h]", "test    r10b, r10b", "jz      loc_4E60"], ["movzx~r10d,[yte ptr [x_0+0]", "test~r10b,r10b", "jz~FOO"]], [2, 0, 322, 0, 1, 8, 0, 2, 8, 29, 0.009256792554412292, ["mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "mov     byte ptr [rbp+earlier_file], r8b", "call    emit_verbose", "cmp     byte ptr [x_0+18h], 0", "mov     byte ptr [rbp+var_338], 1", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_4F15"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~[yte ptr [rbp+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 323, 0, 0, 5, 2, 1, 7, 30, 0.0051320330581348704, ["mov     byte ptr [rbp+new_dst], r8b", "mov     [rbp+dst_backup], 0", "xor     r8d, r8d", "xor     edx, edx", "jmp     loc_52C8"], ["mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],0", "xor~r8d,r8d", "xor~edx,edx", "jmp~FOO"]], [0, 0, 429, 0, 0, 1, 0, 0, 14, 45, 0.0013867171161431888, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 134, 0, 0, 2, 0, 1, 28, 11, 0.00022843831843658103, ["cmp     byte ptr [x_0+22h], 0", "jz      loc_7BD8"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [3, 0, 406, 0, 0, 6, 2, 1, 13, 37, 0.08492746815269547, ["mov     eax, [rbp+dst_sb.st_mode]", "xor     r9d, 1", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_5FF6"], ["mov~eax,[rbp+0]", "xor~r9d,0", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 428, 0, 0, 2, 1, 0, 13, 44, 0.005255690044593734, ["mov     eax, [x_0+8]", "xor     r11d, r11d"], ["mov~eax,[x_0+0]", "xor~r11d,r11d"]], [1, 0, 384, 0, 0, 2, 0, 1, 18, 36, 0.002372058454469989, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6C22"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 400, 0, 0, 2, 0, 1, 17, 37, 0.0034096832107488257, ["cmp     edx, 3", "jz      loc_6B02"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 432, 0, 0, 3, 0, 1, 13, 42, 0.02162570864140332, ["cmp     byte ptr [x_0+18h], 0", "mov     eax, [x_0+8]", "jnz     loc_6307"], ["cmp~[yte ptr [x_0+0],0", "mov~eax,[x_0+0]", "jnz~FOO"]], [0, 0, 428, 0, 0, 3, 0, 1, 21, 44, 0.002930016366050419, ["mov     eax, [x_0+8]", "mov     r11d, r10d", "jmp     loc_6307"], ["mov~eax,[x_0+0]", "mov~r11d,r10d", "jmp~FOO"]], [1, 0, 63, 0, 1, 9, 1, 2, 36, -1, 0.003936539191650097, ["mov     ecx, [rbp+fildes]; dest_desc", "mov     rdx, [rbp+dst_name]; dst_name", "mov     r8d, r14d; mode", "mov     rdi, [rbp+src_name]; src_name", "mov     esi, r12d; source_desc", "call    copy_acl", "test    eax, eax", "mov     r8d, 1", "jz      loc_78E5"], ["mov~ecx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~r8d,r14d", "mov~rdi,[rbp+0]", "mov~esi,r12d", "call~FOO", "test~eax,eax", "mov~r8d,0", "jz~FOO"]], [1, 0, 407, 0, 0, 2, 0, 1, 18, 37, 0.021986383789244734, ["cmp     r13d, 4000h", "jz      loc_5B09"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 558, 1, 0, 27, 1, 1, 0, 37, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r15, x_0", "push    rbx", "mov     r12d, edx", "sub     rsp, 378h", "mov     eax, [rbp+command_line_arg]", "mov     [rbp+src_name], src_name_0", "mov     [rbp+dst_name], dst_name_0", "mov     [rbp+device], device_0", "mov     [rbp+restore_dst_mode], ancestors_0", "mov     r14, [rbp+rename_succeeded]", "mov     dword ptr [rbp+copied_as_regular], eax", "mov     rax, [rbp+first_dir_created_per_command_line_arg]", "mov     byte ptr [rbp+new_dst], dl", "mov     [rbp+var_348], rax", "mov     rax, [rbp+copy_into_self]", "mov     qword ptr [rbp+fildes], rax", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "cmp     byte ptr [x_0+18h], 0", "jz      short loc_4B1E"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r15,x_0", "push~rbx", "mov~r12d,edx", "sub~rsp,0", "mov~eax,[rbp+0]", "mov~[rbp+0],src_name_0", "mov~[rbp+0],dst_name_0", "mov~[rbp+0],device_0", "mov~[rbp+0],ancestors_0", "mov~r14,[rbp+0]", "mov~[word ptr [rbp+0],eax", "mov~rax,[rbp+0]", "mov~[yte ptr [rbp+0],dl", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 557, 0, 0, 2, 1, 1, 1, 37, 3.2174411047405778e-06, ["test    r14, r14", "jz      short loc_4B1E"], ["test~r14,r14", "jz~FOO"]], [1, 0, 556, 0, 0, 1, 0, 0, 2, 37, 0.0, ["mov     byte ptr [r14], 0"], ["mov~<TAG>,0"]], [1, 0, 425, 0, 0, 2, 0, 1, 16, 41, 0.013047259919907166, ["cmp     eax, 4", "jz      loc_6D27"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 383, 0, 0, 4, 1, 1, 19, 35, 0.004269276225898683, ["mov     ecx, [rbp+src_sb.st_mode]", "and     ecx, 0F000h", "cmp     ecx, 4000h", "jnz     loc_6C22"], ["mov~ecx,[rbp+0]", "and~ecx,0", "cmp~ecx,0", "jnz~FOO"]], [0, 0, 385, 0, 0, 3, 1, 1, 20, 36, 0.0021119819651701276, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_6B0D"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 418, 0, 0, 2, 1, 1, 17, 40, 0.018649361123444636, ["test    r11b, r11b", "jz      loc_5F51"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 424, 0, 0, 2, 0, 1, 17, 41, 0.00037965805035938816, ["cmp     byte ptr [x_0+2Bh], 0", "jz      loc_6322"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 423, 0, 1, 13, 1, 2, 18, 41, 2.9493210126788626e-05, ["mov     esi, [rbp+dst_sb.st_mode]; mode", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r10b", "mov     byte ptr [rbp+var_338], r8b", "mov     byte ptr [rbp+new_dst], r11b", "call    writable_destination", "test    al, al", "movzx   r11d, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "movzx   r10d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_6322"], ["mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r10b", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r11b", "call~FOO", "test~al,al", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r10d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 419, 0, 0, 4, 0, 1, 17, 41, 0.0013266582155213647, ["movzx   r8d, byte ptr [rbp+var_338]", "movzx   r10d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jmp     loc_6322"], ["movzx~r8d,[yte ptr [rbp+0]", "movzx~r10d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 402, 0, 0, 2, 0, 1, 16, 36, 0.006075601286118458, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jnz     loc_5F91"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 517, 0, 0, 3, 0, 1, 10, 41, 0.0015922043546992874, ["mov     rax, [rbp+dst_sb.st_dev]", "cmp     [rbp+src_sb.st_dev], rax", "jnz     loc_4DA8"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 133, 0, 2, 12, 3, 3, 28, 11, 0.0030790911372367328, ["lea     rsi, aFailedToGetFil; \"failed to get file system create contex\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+restore_dst_mode]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+22h], 0", "jz      loc_7BD8"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 382, 0, 0, 3, 1, 1, 20, 34, 0.004168194951191418, ["and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_6C22"], ["and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 37, -1, 0.0010392334768312065, ["jmp     loc_7F7E"], ["jmp~FOO"]], [0, 0, 307, 0, 1, 7, 0, 2, 10, 27, 0.1097580698785309, ["mov     rsi, [rbp+src_sb.st_dev]; dev", "mov     rdi, [rbp+src_sb.st_ino]; ino", "mov     byte ptr [rbp+omitted_permissions], r8b", "call    src_to_dest_lookup", "movzx   r8d, byte ptr [rbp+omitted_permissions]", "mov     [rbp+earlier_file], rax", "jmp     loc_55B0"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 321, 0, 0, 2, 0, 1, 9, 28, 0.10955858853003698, ["cmp     [rbp+src_sb.st_nlink], 1", "jnz     loc_4F15"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 381, 0, 0, 2, 1, 1, 19, 33, 0.011813371256239156, ["test    edx, edx", "jnz     loc_6C22"], ["test~edx,edx", "jnz~FOO"]], [2, 0, 384, 0, 0, 3, 1, 1, 18, 34, 0.006911599733166886, ["and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6B35"], ["and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 61, 0, 0, 3, 2, 1, 29, -1, 0.00406684555639209, ["xor     r8d, r8d", "xor     r13d, r13d", "jmp     loc_78E5"], ["xor~r8d,r8d", "xor~r13d,r13d", "jmp~FOO"]], [0, 0, 62, 0, 2, 10, 3, 3, 30, -1, 0.0017116786677219874, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+restore_dst_mode]", "mov     rcx, r13", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_7B33"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r13", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 385, 0, 0, 4, 1, 1, 17, 35, 0.0043784011033678035, ["mov     ecx, [rbp+src_sb.st_mode]", "and     ecx, 0F000h", "cmp     ecx, 4000h", "jnz     loc_6C22"], ["mov~ecx,[rbp+0]", "and~ecx,0", "cmp~ecx,0", "jnz~FOO"]], [3, 0, 142, 0, 1, 17, 3, 2, 25, 12, 0.038207113118794364, ["mov     r13d, [rbp+omitted_permissions]", "mov     rdi, [rbp+dst_name]; file", "xor     eax, eax", "mov     esi, 0C1h; flags", "not     r13d", "and     r13d, [rbp+mode]", "mov     edx, r13d", "call    open_safer", "mov     rcx, [rbp+restore_dst_mode]", "mov     [rbp+fildes], eax", "shr     eax, 1Fh", "mov     r9d, [rcx]", "cmp     r9d, 11h", "setz    dl", "and     dl, al", "mov     byte ptr [rbp+new_dst], dl", "jz      loc_75EA"], ["mov~r13d,[rbp+0]", "mov~rdi,[rbp+0]", "xor~eax,eax", "mov~esi,0", "not~r13d", "and~r13d,[rbp+0]", "mov~edx,r13d", "call~FOO", "mov~rcx,[rbp+0]", "mov~[rbp+0],eax", "shr~eax,0", "mov~r9d,<TAG>", "cmp~r9d,0", "setz~dl", "and~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 29, 13, 0.0014607182615522223, ["cmp     byte ptr [x_0+2Ah], 0", "jz      loc_72F7"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 143, 0, 3, 13, 2, 4, 30, 13, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r13, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r13", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_72F7"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r13", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 537, 0, 0, 2, 0, 1, 5, 33, 0.004766424500599517, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      loc_5340"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 60, 0, 1, 5, 1, 2, 25, -1, 0.0, ["mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "xor     edx, edx; backup_dst_name", "call    emit_verbose", "jmp     loc_6533"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "xor~edx,edx", "call~FOO", "jmp~FOO"]], [1, 0, 61, 0, 0, 2, 0, 1, 24, -1, 0.0019401169861585684, ["cmp     byte ptr [x_0+2Ah], 0", "jnz     loc_6E50"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 523, 0, 0, 1, 0, 0, 7, 35, 0.0025980836920780166, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [3, 0, 555, 0, 0, 9, 0, 1, 1, 36, 0.005357039439393062, ["mov     rax, qword ptr [rbp+fildes]", "cmp     dword ptr [r15+4], 2", "mov     edi, 1; ver", "mov     dst_name_0, [rbp+src_name]; filename", "mov     byte ptr [rax], 0", "lea     rax, [rbp+src_sb]", "mov     [rbp+stats], rax", "mov     new_dst_0, rax; stat_buf", "jz      loc_4E90"], ["mov~rax,[word ptr [rbp+0]", "cmp~[word ptr [r15+0],0", "mov~edi,0", "mov~dst_name_0,[rbp+0]", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~new_dst_0,rax", "jz~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 18, 32, 0.13455285076006682, ["mov     byte ptr [rbp+new_dst], 0", "mov     [rbp+dst_backup], 0", "jmp     loc_4BD6"], ["mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 19, -1, 7.882730706614415e-05, ["test    r14, r14", "jz      short loc_6360"], ["test~r14,r14", "jz~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 16, -1, 0.0006161399715578208, ["mov     byte ptr [r14], 1"], ["mov~<TAG>,0"]], [1, 0, 126, 0, 0, 2, 0, 1, 31, 15, 0.0014060217627716325, ["cmp     dword ptr [x_0+30h], 2", "jnz     loc_763E"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 128, 0, 1, 7, 2, 2, 30, 7, 0.02479681859423563, ["mov     edi, [rbp+fildes]; fd", "xor     eax, eax", "mov     edx, r12d", "mov     esi, 40049409h; request", "call    _ioctl", "test    eax, eax", "jz      loc_7E44"], ["mov~edi,[rbp+0]", "xor~eax,eax", "mov~edx,r12d", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 382, 0, 0, 2, 1, 1, 19, 36, 0.0006756626319955213, ["test    edx, edx", "jnz     loc_6C22"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 17, -1, 0.0008612017357022279, ["test    r11b, r11b", "jz      loc_4E60"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 553, 0, 1, 5, 2, 2, 2, 35, 0.003558489861843079, ["call    ___xstat", "test    eax, eax", "setnz   bl", "test    bl, bl", "jnz     loc_4EA2"], ["call~FOO", "test~eax,eax", "setnz~bl", "test~bl,bl", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 18, -1, 0.00042470222582575626, ["movzx   ebx, byte ptr [x_0+2Ah]", "test    bl, bl", "jz      loc_4E60"], ["movzx~ebx,[yte ptr [x_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 136, 0, 1, 8, 1, 1, 30, 12, 0.0002477429650650245, ["mov     rdi, [rbp+dst_name]; file", "mov     edx, r13d", "mov     esi, 41h ; 'A'; flags", "xor     eax, eax", "call    open_safer", "mov     [rbp+fildes], eax", "mov     rax, [rbp+restore_dst_mode]", "mov     r9d, [rax]"], ["mov~rdi,[rbp+0]", "mov~edx,r13d", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r9d,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 6, -1, 0.0035777945084715223, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_7B3E"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 522, 0, 1, 10, 3, 2, 8, 34, 0.02762602180567085, ["lea     r12, [rbp+dst_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     dst_lstat_sb, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "setnz   r8b", "xor     r9d, r9d", "test    r8b, r8b", "jz      loc_4D94"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "setnz~r8b", "xor~r9d,r9d", "test~r8b,r8b", "jz~FOO"]], [1, 0, 531, 0, 0, 2, 0, 1, 7, 35, 0.009297868552516146, ["cmp     byte ptr [x_0+14h], 0", "jz      loc_5350"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 530, 0, 0, 2, 0, 1, 8, 35, 0.00013513252639910426, ["cmp     r13d, 4000h", "jz      loc_5350"], ["cmp~r13d,0", "jz~FOO"]], [0, 1, 529, 0, 0, 2, 0, 1, 9, 35, 9.652323314221733e-05, ["cmp     r13d, 0A000h", "jz      loc_5350"], ["cmp~r13d,<STR>", "jz~FOO"]], [1, 0, 528, 0, 0, 2, 0, 1, 8, 35, 0.002020553013777083, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5350"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 527, 0, 0, 2, 0, 1, 9, 35, 0.0002831348172171708, ["cmp     byte ptr [x_0+28h], 0", "jnz     loc_5350"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 526, 0, 0, 2, 0, 1, 10, 35, 0.00022200343622709988, ["cmp     byte ptr [x_0+17h], 0", "jnz     loc_5350"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 525, 0, 0, 3, 1, 1, 11, 35, 0.00015443717302754775, ["mov     edi, [x_0]", "test    edi, edi", "jnz     loc_5350"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 524, 0, 0, 2, 0, 1, 12, 35, 8.043602761851445e-05, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_5350"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 34, -1, 0.0011196695044497211, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     delayed_ok, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_4EBD"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~delayed_ok,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 551, 0, 0, 6, 1, 1, 3, 34, 0.010569294029072798, ["mov     eax, [rbp+src_sb.st_mode]", "mov     r13d, eax", "mov     [rbp+src_mode], eax", "and     r13d, 0F000h", "cmp     r13d, 4000h", "jz      loc_4CD0"], ["mov~eax,[rbp+0]", "mov~r13d,eax", "mov~[rbp+0],eax", "and~r13d,0", "cmp~r13d,0", "jz~FOO"]], [0, 0, 553, 0, 1, 5, 2, 2, 2, 35, 0.003558489861843079, ["call    ___lxstat", "test    eax, eax", "setnz   bl", "test    bl, bl", "jz      loc_4B62"], ["call~FOO", "test~eax,eax", "setnz~bl", "test~bl,bl", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 29, -1, 2.6543889114109766e-05, ["cmp     byte ptr [r15+20h], 0", "cmovz   ebx, r12d", "jmp     loc_4CA2"], ["cmp~[yte ptr [r15+0],0", "cmovz~ebx,r12d", "jmp~FOO"]], [1, 0, 346, 0, 1, 4, 0, 2, 9, 33, 0.014549268675636893, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r12, rax", "jz      loc_4BBE"], ["call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "jz~FOO"]], [2, 0, 522, 0, 1, 10, 2, 2, 13, 34, 0.0008397521283372908, ["lea     r12, [rbp+dst_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     dst_lstat_sb, r12; stat_buf", "call    ___xstat", "test    eax, eax", "mov     r9d, 1", "setnz   r8b", "test    r8b, r8b", "jnz     loc_537D"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "mov~r9d,0", "setnz~r8b", "test~r8b,r8b", "jnz~FOO"]], [1, 0, 459, 0, 0, 2, 0, 1, 17, 41, 0.005646609138819714, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_5E70"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 5, 0, 2, 11, 2, 3, 20, -1, 0.00011904532087540137, ["mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "call    quote_n", "mov     rsi, [rbp+src_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotMoveDire; \"cannot move directory onto non-director\"...", "jmp     loc_4C80"], ["mov~rsi,[rbp+0]", "xor~edi,edi", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 543, 0, 0, 2, 0, 1, 4, 33, 0.009165095482927184, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      loc_4E70"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 21, 32, 0.002194294833433074, ["mov     byte ptr [rbp+new_dst], 1", "mov     r8d, 1", "jmp     loc_4BD6"], ["mov~[yte ptr [rbp+0],0", "mov~r8d,0", "jmp~FOO"]], [3, 0, 349, 1, 3, 25, 5, 4, 20, 33, 0.003406197649552025, ["or      rdx, 0FFFFFFFFFFFFFFFFh", "mov     byte ptr [rbp+new_dst], r9b", "mov     byte ptr [rbp+var_338], r8b", "xor     eax, eax", "mov     rcx, rdx", "mov     rdi, __old", "repne scasb", "mov     rsi, __old; src", "mov     rdx, rcx", "not     rdx; n", "lea     rax, [__len+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+3A0h+nbytes+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, __old; ptr", "mov     [rbp+dst_backup], rax", "call    free", "mov     rsi, [rbp+dst_backup]; new", "mov     rdi, [rbp+dst_name]; old", "call    _rename", "test    eax, eax", "movzx   r9d, byte ptr [rbp+new_dst]", "jz      loc_7B83"], ["or~rdx,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "xor~eax,eax", "mov~rcx,rdx", "mov~rdi,__old", "scasb~<TAG>,", "mov~rsi,__old", "mov~rdx,rcx", "not~rdx", "lea~rax,[__len+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,__old", "mov~[rbp+0],rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 3, 0, 3, 13, 2, 4, 19, -1, 1.2869764418962311e-05, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     dst_lstat_sb, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4CA2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~dst_lstat_sb,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 354, 0, 2, 13, 1, 3, 19, 34, 0.004895872881046914, ["mov     esi, [x_0]; backup_type", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+var_338], r8b", "mov     byte ptr [rbp+new_dst], r9b", "call    find_backup_file_name", "mov     rsi, [rbp+src_name]; s2", "mov     rdi, rax; s1", "mov     r12, rax", "call    _strcmp", "test    eax, eax", "movzx   r9d, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "jnz     loc_74A9"], ["mov~esi,<TAG>", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 534, 0, 1, 5, 1, 2, 6, 33, 0.005432971049464941, ["mov     rdx, [rbp+stats]; stats", "mov     rsi, [rbp+src_name]; file", "call    record_file", "test    r12b, r12b", "jz      loc_4E75"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~r12b,r12b", "jz~FOO"]], [1, 0, 3, 0, 3, 14, 3, 4, 10, -1, 0.00019304646628443467, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     dst_lstat_sb, rax; format", "mov     rcx, r13", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4CA2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~dst_lstat_sb,rax", "mov~rcx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 2, 0, 7, 32, 0.02140413419732352, ["xor     r9d, r9d", "xor     r8d, r8d", "mov     byte ptr [rbp+new_dst], 1", "mov     [rbp+dst_backup], 0"], ["xor~r9d,r9d", "xor~r8d,r8d", "mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 532, 0, 1, 6, 1, 2, 6, 33, 0.0023967791269580807, ["mov     rdi, [x_0+40h]; ht", "mov     dst_lstat_sb, [rbp+stats]; stats", "mov     rsi, [rbp+src_name]; file", "call    record_file", "test    r12b, r12b", "jnz     loc_4BBE"], ["mov~rdi,[x_0+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~r12b,r12b", "jnz~FOO"]], [0, 1, 91, 0, 0, 2, 0, 1, 21, -1, 0.006811322818735803, ["cmp     r13d, 1000h", "jz      loc_6B8B"], ["cmp~r13d,<STR>", "jz~FOO"]], [0, 0, 445, 0, 0, 1, 0, 1, 22, 40, 0.0021325199642220553, ["jmp     loc_4DB3"], ["jmp~FOO"]], [2, 0, 165, 1, 1, 11, 3, 2, 20, 17, 0.08633091596258333, ["xor     esi, esi", "cmp     dword ptr [x_0+4], 2", "mov     rdi, [rbp+src_name]; file", "mov     r14d, [rbp+src_sb.st_mode]", "setz    sil", "xor     eax, eax", "shl     esi, 11h; flags", "call    open_safer", "test    eax, eax", "mov     r12d, eax", "js      loc_6A27"], ["xor~esi,esi", "cmp~[word ptr [x_0+0],0", "mov~rdi,[rbp+0]", "mov~r14d,[rbp+0]", "setz~sil", "xor~eax,eax", "shl~esi,0", "call~FOO", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [1, 0, 202, 0, 0, 2, 0, 1, 19, 18, 0.0942265164336167, ["cmp     r13d, 8000h", "jz      loc_63B0"], ["cmp~r13d,0", "jz~FOO"]], [0, 1, 201, 0, 0, 4, 1, 1, 20, 18, 0.00734863548322748, ["cmp     r13d, 0A000h", "setnz   r8b", "and     r8b, [x_0+14h]", "jnz     loc_63B0"], ["cmp~r13d,<STR>", "setnz~r8b", "and~r8b,[x_0+0]", "jnz~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 22, 32, 0.001097147416716537, ["mov     byte ptr [rbp+new_dst], 1", "mov     [rbp+dst_backup], 0", "jmp     loc_4BD6"], ["mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 259, 0, 0, 5, 2, 1, 15, 22, 0.1724580606551997, ["mov     ecx, r12d", "and     ecx, 3Fh", "test    al, al", "mov     [rbp+omitted_permissions], ecx", "jz      short loc_543C"], ["mov~ecx,r12d", "and~ecx,0", "test~al,al", "mov~[rbp+0],ecx", "jz~FOO"]], [1, 0, 270, 0, 0, 3, 0, 1, 14, 23, 0.19342290689368932, ["cmp     byte ptr [x_0+1Ch], 0", "movzx   eax, byte ptr [x_0+21h]", "jnz     loc_53D0"], ["cmp~[yte ptr [x_0+0],0", "movzx~eax,[yte ptr [x_0+0]", "jnz~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 27, 10, 0.02973880813111716, ["mov     dword ptr [rbp+device], 0", "jmp     loc_760A"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 150, 0, 0, 2, 0, 0, 26, 11, 0.03156792339916218, ["cmp     [rbp+fildes], 0", "jns     loc_7BD8"], ["cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 161, 0, 1, 6, 1, 2, 21, 16, 0.08471844172892415, ["lea     dst_lstat_sb, [rbp+dot_sb]; stat_buf", "mov     esi, eax; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_6BEB"], ["lea~dst_lstat_sb,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 31, 0.0012033229731729762, ["cmp     qword ptr [x_0+38h], 0", "jz      loc_7D2F"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 1, 22, 15, 0.07931314067295998, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+src_sb.st_ino], rax", "jnz     short loc_641D"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 1, 503, 0, 0, 4, 1, 1, 17, 42, 0.004977381389033674, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5E18"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 505, 0, 0, 6, 1, 1, 16, 43, 0.004073280438601571, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "mov     r11, [rbp+dst_backup]", "mov     dst_lstat_sb, [rbp+ancestors]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7400"], ["mov~eax,[word ptr [rbp+0]", "mov~r11,[rbp+0]", "mov~dst_lstat_sb,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 442, 0, 0, 2, 0, 1, 20, 45, 0.00072392424856663, ["cmp     r13d, 4000h", "jz      loc_7C0C"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 441, 0, 0, 3, 1, 1, 21, 45, 0.00021985847549060614, ["movzx   r11d, byte ptr [x_0+29h]", "test    r11b, r11b", "jz      loc_7C0C"], ["movzx~r11d,[yte ptr [x_0+0]", "test~r11b,r11b", "jz~FOO"]], [1, 0, 60, 0, 3, 13, 1, 4, 22, -1, 0.004321023403666596, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, r14", "mov     rdx, r13", "mov     esi, [rax]", "jmp     loc_6447"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,r14", "mov~rdx,r13", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 63, 0, 1, 5, 0, 1, 29, -1, 0.0015894159057418455, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     r13, rax", "mov     edx, 5; category"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0"]], [1, 0, 131, 0, 1, 8, 1, 2, 28, 9, 0.06067772179430256, ["lea     rax, [rbp+timespec]", "mov     esi, [rbp+fildes]; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rbp+ancestors], rax", "call    ___fxstat", "test    eax, eax", "jnz     loc_7C18"], ["lea~rax,[rbp+0]", "mov~esi,[rbp+0]", "mov~edi,0", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 257, 0, 3, 15, 3, 4, 17, 22, 4.826161657110867e-05, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+ancestors], rax", "call    _dcgettext", "mov     rcx, [rbp+ancestors]", "mov     esi, [r14]; errnum", "mov     dst_lstat_sb, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+22h], 0", "jnz     loc_4CA2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~dst_lstat_sb,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 258, 0, 1, 5, 0, 2, 16, 22, 0.0007947079528709228, ["call    ___errno_location", "cmp     byte ptr [x_0+22h], 0", "mov     r14, rax", "mov     dword ptr [rax], 5Fh ; '_'", "jz      short loc_543C"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r14,rax", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 19, 35, 0.0005421388261487874, ["cmp     al, 2Fh ; '/'", "jnz     loc_6C55"], ["cmp~al,0", "jnz~FOO"]], [3, 0, 3, 0, 4, 23, 5, 5, 15, -1, 9.974067424695791e-05, ["mov     rsi, cs:top_level_dst_name; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, cs:top_level_src_name; name", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aCannotMoveSToA; \"cannot move %s to a subdirectory of its\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "mov     r8, r13", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+fildes]", "mov     ebx, r12d", "mov     byte ptr [rax], 1", "jmp     loc_4CA2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "mov~r8,r13", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~ebx,r12d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 280, 0, 1, 5, 0, 2, 14, 27, 0.00607131136464547, ["call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_5BE9"], ["call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 256, 0, 0, 2, 0, 1, 16, 21, 0.17261249782822727, ["cmp     r13d, 4000h", "jnz     loc_4FCC"], ["cmp~r13d,0", "jnz~FOO"]], [1, 0, 60, 0, 2, 10, 2, 2, 23, -1, 0.00038609293256886934, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aSkippingFileSA; \"skipping file %s, as it was replaced wh\"...", "mov     r13, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r13", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r13", "mov~dst_lstat_sb,rax", "xor~esi,esi"]], [1, 0, 63, 0, 1, 6, 0, 2, 32, -1, 0.0006080963687959692, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aFailedToCloneS; \"failed to clone %s\"", "jmp     short loc_7C33"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 59, 0, 1, 5, 4, 1, 23, -1, 0.004658854719664356, ["xor     edi, edi; status", "xor     eax, eax", "xor     r13d, r13d", "call    _error", "xor     r8d, r8d"], ["xor~edi,edi", "xor~eax,eax", "xor~r13d,r13d", "call~FOO", "xor~r8d,r8d"]], [1, 0, 11, 0, 0, 2, 0, 1, 15, -1, 0.0061388776278450225, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_5C50"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 357, 0, 0, 4, 1, 1, 18, 34, 0.008660815213777508, ["movzx   eax, byte ptr [x_0+18h]", "test    al, al", "mov     byte ptr [rbp+new_dst], al", "jnz     short loc_6C7A"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 0, 91, 0, 0, 6, 1, 1, 17, -1, 0.027776705297409537, ["mov     rsi, [rbp+restore_dst_mode]", "mov     dst_lstat_sb, [rbp+src_sb.st_ino]", "mov     rcx, [rbp+src_sb.st_dev]", "test    rsi, rsi", "mov     rax, rsi", "jnz     short loc_547C"], ["mov~rsi,[rbp+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~rcx,[rbp+0]", "test~rsi,rsi", "mov~rax,rsi", "jnz~FOO"]], [0, 1, 95, 0, 0, 5, 2, 1, 16, -1, 0.015958507879513265, ["mov     ecx, r12d", "and     ecx, 12h", "test    al, al", "mov     [rbp+omitted_permissions], ecx", "jz      loc_5449"], ["mov~ecx,r12d", "and~ecx,<STR>", "test~al,al", "mov~[rbp+0],ecx", "jz~FOO"]], [2, 0, 94, 0, 1, 5, 0, 2, 17, -1, 0.0015331106864088853, ["call    ___errno_location", "cmp     byte ptr [x_0+22h], 0", "mov     r13, rax", "mov     dword ptr [rax], 5Fh ; '_'", "jz      loc_5449"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r13,rax", "mov~<TAG>,0", "jz~FOO"]], [2, 0, 93, 0, 3, 15, 3, 4, 18, -1, 0.0007866643501090713, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     dst_lstat_sb, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r14", "call    _error", "cmp     byte ptr [x_0+22h], 0", "jz      loc_5449"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~esi,[r13+0]", "mov~dst_lstat_sb,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r14", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 265, 0, 0, 2, 0, 1, 15, 23, 0.02032779289975097, ["cmp     r13d, 4000h", "jz      loc_5C60"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 58, 0, 1, 6, 1, 2, 24, -1, 0.021753119309151046, ["mov     edi, r12d; fd", "mov     byte ptr [rbp+fildes], r8b", "call    _close", "test    eax, eax", "movzx   r8d, byte ptr [rbp+fildes]", "js      loc_6F9D"], ["mov~edi,r12d", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "js~FOO"]], [1, 0, 59, 0, 3, 21, 5, 4, 27, -1, 0.0023728628147461762, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+fildes], r8b", "mov     dword ptr [rbp+new_dst], r9d", "call    quote", "lea     rsi, aCannotCreateRe; \"cannot create regular file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, rax", "call    _dcgettext", "mov     r9d, dword ptr [rbp+new_dst]", "mov     rcx, r13", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "xor     r13d, r13d", "mov     esi, r9d; errnum", "call    _error", "movzx   r8d, byte ptr [rbp+fildes]", "mov     byte ptr [rbp+new_dst], r8b", "xor     r8d, r8d", "jmp     loc_6456"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[word ptr [rbp+0],r9d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "mov~r9d,[word ptr [rbp+0]", "mov~rcx,r13", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "xor~r13d,r13d", "mov~esi,r9d", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],r8b", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 22, 45, 8.794339019624246e-05, ["mov     r10d, r11d", "jmp     loc_4DD4"], ["mov~r10d,r11d", "jmp~FOO"]], [0, 0, 90, 0, 0, 2, 0, 1, 18, -1, 0.003315573058435165, ["cmp     dst_lstat_sb, [rax+8]", "jnz     short loc_5470"], ["cmp~dst_lstat_sb,[rax+0]", "jnz~FOO"]], [0, 0, 90, 0, 0, 2, 0, 1, 19, -1, 0.0017937234158928721, ["cmp     [rax+10h], rcx", "jnz     short loc_5470"], ["cmp~[rax+0],rcx", "jnz~FOO"]], [2, 0, 5, 0, 2, 11, 1, 2, 15, -1, 0.00041354842999598903, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+src_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aWillNotCopySTh; \"will not copy %s through just-created s\"...", "mov     rbx, rax", "mov     edx, 5; category", "nop"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "nop"]], [1, 0, 129, 0, 0, 2, 0, 1, 29, 8, 0.05775950271230285, ["cmp     dword ptr [x_0+30h], 0", "jnz     loc_7C6C"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 0, 1, 23, -1, 0.000952362567003211, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+dot_sb.st_dev], rax", "jnz     loc_679C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 63, 0, 0, 3, 0, 1, 22, -1, 0.0024420377984980986, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+dot_sb.st_ino], rax", "jz      loc_747A"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 4, 0, 2, 10, 4, 2, 16, -1, 0.0011264261307696762, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "nop     dword ptr [rax+rax+00h]"], ["xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "nop~[word ptr [rax+0]"]], [2, 0, 5, 0, 2, 11, 1, 3, 16, -1, 0.0006470274061633303, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+src_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aSAndSAreTheSam; \"%s and %s are the same file\"", "jmp     loc_4C80"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 5, -1, 0.0007540073228959544, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 4, 0, 3, 11, 3, 4, 4, -1, 0.0002026987895986564, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     dst_lstat_sb, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4CA0"], ["xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~dst_lstat_sb,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 20, -1, 0.0010472770795930582, ["mov     rdi, [rbp+src_name]; name", "call    quote", "mov     edx, 5", "mov     dst_mode_bits, rax", "lea     rsi, aCannotCopyCycl; \"cannot copy cyclic symbolic link %s\"", "jmp     loc_5770"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~dst_mode_bits,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 21, -1, 0.0003169179488169469, ["lea     rsi, aBackingUpSWoul_0; \"backing up %s would destroy source;  %s\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     loc_6CE2"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 20, -1, 0.0016248077578939917, ["cmp     byte ptr [x_0+18h], 0", "mov     edx, 5; category", "jz      loc_7493"], ["cmp~[yte ptr [x_0+0],0", "mov~edx,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, -1, 0.0010936082315013223, ["mov     ebx, 1", "jmp     loc_4CA2"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 17, -1, 2.89569699426652e-05, ["mov     rdi, [x_0+38h]; ht", "mov     dst_lstat_sb, [rbp+stats]; stats", "mov     rsi, [rbp+dst_name]; file", "call    record_file", "movzx   ebx, byte ptr [rbp+copied_as_regular]", "jmp     loc_4CA2"], ["mov~rdi,[x_0+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.0073003738666563706, ["mov     rdi, [rbp+dst_backup]; old", "test    rdi, rdi", "jz      loc_4CA2"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 18, -1, 0.0014172828066382245, ["cmp     byte ptr [x_0+2Ah], 0", "jz      loc_4CA2"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [3, 0, 3, 0, 4, 19, 3, 5, 19, -1, 0.0, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_backup]; name", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aSSUnbackup; \"%s -> %s (unbackup)\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r13", "mov     rsi, rax", "mov     dst_lstat_sb, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4CA2"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r13", "mov~rsi,rax", "mov~dst_lstat_sb,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 19, -1, 3.3783131599776064e-05, ["jmp     loc_4CA2"], ["jmp~FOO"]], [1, 0, 3, 0, 4, 18, 5, 5, 22, -1, 0.00014800229081806657, ["mov     rsi, [rbp+src_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "mov     r13, rax", "xor     edi, edi; n", "call    quote_n", "mov     rdx, fmt; format", "mov     rcx, rax", "mov     r8, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, tmp_backup; ptr", "xor     ebx, ebx", "call    free", "jmp     loc_4CA2"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "mov~r13,rax", "xor~edi,edi", "call~FOO", "mov~rdx,fmt", "mov~rcx,rax", "mov~r8,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,tmp_backup", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 29, -1, 2.17177274569989e-05, ["mov     edx, [r15+10h]; mode", "mov     rdi, [rbp+dst_name]; name", "mov     esi, 0FFFFFFFFh; desc", "call    set_acl", "test    eax, eax", "cmovz   ebx, r12d", "jmp     loc_4CA2"], ["mov~edx,[r15+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "test~eax,eax", "cmovz~ebx,r12d", "jmp~FOO"]], [1, 0, 3, 0, 3, 15, 5, 4, 20, -1, 5.79139398853304e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotOverwrit; \"cannot overwrite directory %s with non-\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error", "jmp     loc_4CA2"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 7, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 148, 0, 0, 3, 1, 1, 27, 15, 0.003970322323249873, ["movzx   r8d, byte ptr [x_0+16h]", "test    r8b, r8b", "jz      loc_735A"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jz~FOO"]], [0, 0, 289, 0, 1, 6, 1, 2, 13, 28, 0.011005257298765145, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, [rbp+src_name]; old", "mov     byte ptr [rbp+new_dst], r8b", "call    _rename", "test    eax, eax", "jnz     loc_5790"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 290, 0, 0, 3, 1, 1, 12, 25, 0.2003709709593766, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     loc_54B0"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.0044030681518374805, ["cmp     byte ptr [x_0+2Ah], 0", "jz      short loc_5510"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 21, -1, 0.0003169179488169469, ["lea     rsi, aBackingUpSWoul; \"backing up %s would destroy source;  %s\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [1, 0, 9, 0, 0, 3, 0, 1, 15, -1, 0.0007335765718808517, ["cmp     r13d, 4000h", "movzx   r8d, byte ptr [rbp+new_dst]", "jnz     short loc_5510"], ["cmp~r13d,0", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [3, 0, 77, 0, 0, 6, 1, 1, 22, -1, 0.005212254589679736, ["mov     r12d, [rbp+dst_sb.st_mode]", "mov     byte ptr [rbp+restore_dst_mode], 0", "mov     eax, r12d", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_6518"], ["mov~r12d,[rbp+0]", "mov~[yte ptr [rbp+0],0", "mov~eax,r12d", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 326, 0, 0, 4, 1, 1, 6, 31, 0.009279529138219125, ["mov     r8d, 1", "mov     byte ptr [rbp+var_338], r8b", "and     r8b, [x_0+2Ah]", "jnz     loc_5CD8"], ["mov~r8d,0", "mov~[yte ptr [rbp+0],r8b", "and~r8b,[x_0+0]", "jnz~FOO"]], [0, 0, 518, 0, 0, 3, 0, 1, 9, 41, 0.01708246730543597, ["mov     rax, [rbp+dst_sb.st_ino]", "cmp     [rbp+src_sb.st_ino], rax", "jz      loc_5CF8"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 8, 0, 1, 7, 1, 1, 16, -1, 0.0, ["test    r8b, r8b", "mov     eax, 0", "cmovnz  rax, [rbp+dst_backup]", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "mov     dst_lstat_sb, rax; backup_dst_name", "call    emit_verbose"], ["test~r8b,r8b", "mov~eax,0", "cmovnz~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~dst_lstat_sb,rax", "call~FOO"]], [1, 0, 533, 0, 0, 2, 0, 1, 6, 36, 0.005305024141533089, ["cmp     r13d, 8000h", "jnz     loc_4D08"], ["cmp~r13d,0", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, -1, 0.0022795570227086993, ["test    r14, r14", "jz      short loc_5519"], ["test~r14,r14", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r14], 1"], ["mov~<TAG>,0"]], [2, 0, 326, 0, 0, 5, 0, 1, 11, 29, 0.0035622435431319427, ["cmp     r13d, 4000h", "setnz   byte ptr [rbp+var_338]", "cmp     byte ptr [x_0+2Ah], 0", "movzx   eax, byte ptr [rbp+var_338]", "jz      loc_52FC"], ["cmp~r13d,0", "setnz~[yte ptr [rbp+0]", "cmp~[yte ptr [x_0+0],0", "movzx~eax,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 325, 0, 0, 2, 1, 1, 12, 29, 0.0006241835743196721, ["test    al, al", "jz      loc_52FC"], ["test~al,al", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0008317085255754393, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      loc_4E60"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 63, 0, 0, 3, 0, 1, 23, -1, 0.0031756143703789504, ["mov     rax, [rbp+var_348]", "cmp     byte ptr [rax], 0", "jz      loc_6E6A"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 27, -1, 0.0004906597684729381, ["mov     r8d, 1", "jmp     loc_735A"], ["mov~r8d,0", "jmp~FOO"]], [1, 0, 135, 0, 0, 2, 0, 1, 26, 11, 0.032729419637973524, ["cmp     [rbp+fildes], 0", "js      loc_7D24"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 62, 0, 1, 7, 0, 2, 24, -1, 0.0, ["mov     rdx, [rbp+dst_sb.st_dev]; dev", "mov     rsi, [rbp+dst_sb.st_ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     rax, [rbp+var_348]", "mov     byte ptr [rax], 1", "jmp     loc_6528"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 529, 0, 0, 1, 0, 1, 7, 36, 0.0002702650527982085, ["jmp     loc_4D2D"], ["jmp~FOO"]], [1, 0, 347, 0, 1, 6, 0, 2, 21, 33, 0.0013245132547848714, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     __old, rax", "movzx   r9d, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "jz      loc_7D5A"], ["call~FOO", "cmp~<TAG>,0", "mov~__old,rax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 509, 0, 1, 14, 1, 2, 13, 40, 0.0035874468317857442, ["lea     rax, [rbp+dot_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+var_338], r8b", "mov     dst_lstat_sb, rax; stat_buf", "mov     byte ptr [rbp+new_dst], cl", "mov     [rbp+dst_backup], rax", "call    ___lxstat", "test    eax, eax", "movzx   ecx, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_4DB3"], ["lea~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,rax", "mov~[yte ptr [rbp+0],cl", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 1, 271, 0, 0, 2, 1, 0, 14, 24, 0.0, ["mov     r12d, [x_0+10h]", "and     r12d, 0FFFh"], ["mov~r12d,[x_0+0]", "and~r12d,<STR>"]], [1, 1, 272, 0, 0, 4, 1, 1, 13, 24, 0.19317194648751954, ["mov     r12d, [rbp+src_mode]", "and     r12d, 0FFFh", "cmp     byte ptr [x_0+27h], 0", "jz      short loc_4F9D"], ["mov~r12d,[rbp+0]", "and~r12d,<STR>", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 307, 0, 1, 7, 0, 1, 12, 27, 0.0034217486148916043, ["mov     dst_lstat_sb, [rbp+src_sb.st_dev]; dev", "mov     rsi, [rbp+src_sb.st_ino]; ino", "mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+omitted_permissions], r8b", "call    remember_copied", "movzx   r8d, byte ptr [rbp+omitted_permissions]", "mov     [rbp+earlier_file], rax"], ["mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 317, 0, 0, 2, 0, 1, 11, 28, 0.0029085667586854825, ["cmp     [rbp+src_sb.st_nlink], 1", "ja      loc_5580"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 13, 28, 0.0003458749187596121, ["cmp     eax, 3", "jz      loc_5580"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 314, 0, 0, 2, 0, 1, 13, 28, 0.0007030108813858162, ["cmp     eax, 4", "jz      loc_5580"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 504, 0, 0, 2, 0, 1, 10, 40, 0.018503396545326237, ["cmp     dword ptr [x_0+4], 2", "jz      loc_5EB0"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 1, 139, 0, 0, 4, 1, 1, 28, 12, 0.0026238232209159413, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_75EA"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 24, -1, 0.00590078698609422, ["cmp     dword ptr [x_0+4], 3", "jnz     short loc_65C1"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 53, 0, 0, 1, 0, 0, 25, -1, 0.0, ["mov     dword ptr [rbp+dev+4], 2"], ["mov~[word ptr [rbp+0],0"]], [1, 0, 306, 0, 0, 2, 0, 1, 11, 26, 0.11555589874927343, ["cmp     [rbp+earlier_file], 0", "jz      loc_4F6F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 114, 1, 0, 7, 0, 1, 36, 10, 0.0014285438505048165, ["mov     rax, [rbp+dot_sb.st_size]", "mov     esi, 200h", "mov     byte ptr [rbp+var_348], 1", "cqo", "idiv    rsi", "cmp     [rbp+dot_sb.st_blocks], rax", "jl      loc_7751"], ["mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~[yte ptr [rbp+0],0", "cqo~,", "idiv~,rsi", "cmp~[rbp+0],rax", "jl~FOO"]], [1, 0, 508, 0, 1, 13, 1, 2, 14, 40, 0.0009684497725269139, ["lea     rax, [rbp+timespec]", "mov     rsi, [rbp+src_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+var_338], r9b", "mov     byte ptr [rbp+new_dst], r8b", "mov     dst_lstat_sb, rax; stat_buf", "mov     byte ptr [rbp+earlier_file], cl", "mov     [rbp+ancestors], rax", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+new_dst]", "movzx   r9d, byte ptr [rbp+var_338]", "jnz     loc_4DB3"], ["lea~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,rax", "mov~[yte ptr [rbp+0],cl", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 450, 0, 0, 2, 0, 1, 15, 40, 0.006057369119858261, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4DB3"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 449, 0, 0, 2, 0, 1, 16, 40, 0.0004890510479205678, ["cmp     dword ptr [x_0+4], 2", "jz      loc_4DB3"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 1, 448, 0, 0, 4, 1, 1, 17, 40, 0.0003442661982072418, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_4DB3"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 447, 0, 0, 4, 1, 1, 18, 40, 0.00019787262794154553, ["mov     eax, [r11+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_4DB3"], ["mov~eax,[r11+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 445, 0, 0, 1, 0, 1, 16, 40, 0.006134587706372035, ["jmp     loc_4DB3"], ["jmp~FOO"]], [1, 0, 458, 0, 1, 11, 1, 2, 18, 40, 0.012293842461213747, ["mov     rsi, [rbp+src_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+var_338], r8b", "mov     [rbp+new_dst], r11", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+var_338]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_4DB3"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],r11", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [2, 0, 52, 0, 0, 4, 0, 1, 25, -1, 0.004549461722103177, ["mov     rax, [rbp+s]", "mov     r12d, 1", "cmp     byte ptr [rax], 0", "jz      loc_66D2"], ["mov~rax,[rbp+0]", "mov~r12d,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 122, 0, 1, 5, 0, 2, 30, 14, 0.031933102964550236, ["call    _getpagesize", "movsxd  rsi, eax", "mov     ecx, 8", "mov     rax, rsi", "jmp     short loc_7653"], ["call~FOO", "movsxd~rsi,eax", "mov~ecx,0", "mov~rax,rsi", "jmp~FOO"]], [1, 0, 438, 0, 0, 3, 1, 1, 14, 44, 0.00458753477517594, ["xor     ecx, ecx", "cmp     byte ptr [x_0+1Eh], 0", "jz      short loc_4DFC"], ["xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 507, 0, 0, 4, 0, 1, 15, 44, 0.0010553206823549096, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "movzx   ecx, byte ptr [rbp+earlier_file]", "jnz     short loc_5DEF"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 122, 0, 0, 1, 0, 0, 32, 14, 0.0, ["mov     rcx, rdx"], ["mov~rcx,rdx"]], [0, 0, 122, 1, 0, 5, 2, 1, 31, 13, 0.03182370996698906, ["xor     edx, edx", "div     rcx", "mov     rax, rcx", "test    rdx, rdx", "jnz     short loc_7650"], ["xor~edx,edx", "div~,rcx", "mov~rax,rcx", "test~rdx,rdx", "jnz~FOO"]], [2, 0, 437, 0, 0, 3, 0, 1, 15, 44, 0.0003281789926835389, ["cmp     byte ptr [x_0+18h], 0", "mov     ecx, 1", "jz      short loc_4DFC"], ["cmp~[yte ptr [x_0+0],0", "mov~ecx,0", "jz~FOO"]], [1, 0, 21, 0, 1, 8, 2, 2, 13, -1, 0.0063838321439526075, ["mov     rcx, [rbp+dst_name]; file2", "mov     rsi, [rbp+earlier_file]; file1", "mov     edx, 0FFFFFF9Ch; fd2", "xor     r8d, r8d; flag", "mov     edi, edx; fd1", "call    rpl_linkat", "test    eax, eax", "jz      loc_4E60"], ["mov~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edx,0", "xor~r8d,r8d", "mov~edi,edx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 107, 0, 0, 2, 0, 1, 44, 9, 0.00041504990251153454, ["movzx   r9d, byte ptr [rbp+var_348]", "jmp     loc_77A1"], ["movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 506, 0, 0, 3, 0, 0, 16, 44, 0.0, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "setz    cl"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setz~cl"]], [0, 0, 107, 0, 0, 2, 0, 1, 41, 14, 0.0, ["mov     rax, rsi", "jmp     loc_77F2"], ["mov~rax,rsi", "jmp~FOO"]], [0, 0, 436, 0, 0, 4, 1, 0, 16, 44, 0.0, ["xor     ecx, ecx", "mov     rax, [rbp+src_sb.st_dev]", "cmp     [rbp+dst_sb.st_dev], rax", "setnz   cl; options"], ["xor~ecx,ecx", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setnz~cl"]], [0, 1, 81, 0, 0, 2, 1, 1, 34, 3, 0.003001872550722959, ["test    byte ptr [rbp+timespec.tv_nsec+10h], 80h", "jz      loc_81A3"], ["test~[yte ptr [rbp+0],<STR>", "jz~FOO"]], [0, 0, 111, 0, 0, 3, 0, 0, 34, 11, 0.0009169707148510647, ["mov     rax, [rbp+dot_sb.st_size]", "cmp     rcx, rax", "jbe     loc_7724"], ["mov~rax,[rbp+0]", "cmp~rcx,rax", "jbe~FOO"]], [1, 0, 132, 0, 0, 3, 0, 0, 27, 10, 0.03096143575091858, ["mov     eax, [rbp+omitted_permissions]", "mov     byte ptr [rbp+new_dst], 1", "mov     dword ptr [rbp+device], eax"], ["mov~eax,[rbp+0]", "mov~[yte ptr [rbp+0],0", "mov~[word ptr [rbp+0],eax"]], [2, 0, 65, 0, 0, 3, 0, 1, 37, -1, 0.003219049825292948, ["cmp     dword ptr [rbp+device], 0", "mov     r8d, 1", "jz      loc_78E5"], ["cmp~[word ptr [rbp+0],0", "mov~r8d,0", "jz~FOO"]], [0, 0, 64, 0, 1, 6, 1, 2, 38, -1, 0.0020913367180813757, ["mov     byte ptr [rbp+var_348], r8b", "call    cached_umask", "not     eax", "test    dword ptr [rbp+device], eax", "movzx   r8d, byte ptr [rbp+var_348]", "jz      loc_78E5"], ["mov~[yte ptr [rbp+0],r8b", "call~FOO", "not~eax", "test~[word ptr [rbp+0],eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 63, 0, 1, 7, 1, 2, 39, -1, 0.0010553206823549096, ["mov     edx, [rbp+mode]; mode", "mov     rsi, [rbp+dst_name]; name", "mov     edi, [rbp+fildes]; desc", "call    fchmod_or_lchmod", "test    eax, eax", "movzx   r8d, byte ptr [rbp+var_348]", "jz      loc_78E5"], ["mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 61, 0, 0, 3, 1, 1, 38, -1, 0.00039252781477835047, ["movzx   r8d, byte ptr [x_0+20h]", "xor     r8d, 1", "jmp     loc_78E5"], ["movzx~r8d,[yte ptr [x_0+0]", "xor~r8d,0", "jmp~FOO"]], [0, 0, 61, 0, 1, 7, 1, 2, 37, -1, 9.813195369458762e-05, ["mov     edx, [x_0+10h]; mode", "mov     esi, [rbp+fildes]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    r8b", "jmp     loc_78E5"], ["mov~edx,[x_0+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~r8b", "jmp~FOO"]], [0, 0, 110, 0, 0, 2, 0, 1, 35, 11, 0.0, ["lea     rcx, [rax+1]", "jmp     loc_7724"], ["lea~rcx,[rax+0]", "jmp~FOO"]], [0, 0, 501, 0, 0, 1, 0, 0, 17, 43, 0.00046974640129212437, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 51, 0, 0, 10, 0, 1, 26, -1, 0.002557865678268759, ["lea     rax, [rbp+dev]", "mov     r13, [rbp+s]", "mov     r12d, 1", "mov     byte ptr [rbp+mode], bl", "mov     [rbp+x], x_0", "mov     [rbp+dst_backup], rax", "lea     rax, [rbp+var_2F8]", "mov     r14, qword ptr [rbp+fildes]", "mov     [rbp+earlier_file], rax", "jmp     short loc_6638"], ["lea~rax,[rbp+0]", "mov~r13,[rbp+0]", "mov~r12d,0", "mov~[yte ptr [rbp+0],bl", "mov~[rbp+0],x_0", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~r14,[word ptr [rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 108, 0, 0, 2, 0, 1, 34, 10, 0.010815428273585451, ["mov     byte ptr [rbp+var_348], 1", "jmp     loc_7751"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 36, -1, 0.00518008017863233, ["cmp     byte ptr [x_0+27h], 0", "jnz     loc_803A"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 502, 0, 0, 6, 1, 1, 12, 43, 0.009337014085957157, ["mov     eax, [rbp+src_sb.st_mode]", "mov     r11, r12", "mov     dst_lstat_sb, [rbp+stats]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5E18"], ["mov~eax,[rbp+0]", "mov~r11,r12", "mov~dst_lstat_sb,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 501, 0, 0, 4, 1, 1, 13, 43, 0.0005437475467011577, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5E18"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 454, 0, 0, 2, 1, 1, 14, 41, 0.004987569952532019, ["test    cl, cl", "jnz     loc_5EE8"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 51, 0, 1, 5, 0, 2, 28, -1, 0.0, ["mov     rdi, r13; s", "call    _strlen", "lea     r13, [r13+rax+1]", "cmp     byte ptr [r13+0], 0", "jz      loc_66C4"], ["mov~rdi,r13", "call~FOO", "lea~r13,[r13+0]", "cmp~[yte ptr [r13+0],0", "jz~FOO"]], [3, 1, 51, 1, 5, 31, 4, 6, 27, -1, 0.001866115840749535, ["mov     rdi, [rbp+src_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r13; abase", "call    file_name_concat", "mov     rdi, [rbp+dst_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r13; abase", "mov     rbx, rax", "call    file_name_concat", "mov     r9, [rbp+dst_backup]; x", "mov     r8, [rbp+ancestors]; ancestors", "mov     rsi, rax; dst_name", "mov     rcx, [rbp+src_sb.st_dev]; device", "mov     edx, dword ptr [rbp+device]; new_dst", "mov     rdi, rbx; src_name", "push    0; rename_succeeded", "push    [rbp+earlier_file]; copy_into_self", "mov     r15, rax", "push    [rbp+var_348]; first_dir_created_per_command_line_arg", "push    0; command_line_arg", "call    copy_internal", "and     r12d, eax", "movzx   eax, byte ptr [rbp+var_2F8]", "add     rsp, 20h", "or      [r14], al", "mov     rdi, r15; ptr", "call    free", "mov     rdi, rbx; ptr", "call    free", "cmp     byte ptr [rbp+var_2F8], 0", "jz      loc_6620"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r13", "call~FOO", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r13", "mov~rbx,rax", "call~FOO", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,rax", "mov~rcx,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "mov~rdi,rbx", "push~0", "push~[rbp+0]", "mov~r15,rax", "push~[rbp+0]", "push~0", "call~FOO", "and~r12d,eax", "movzx~eax,[yte ptr [rbp+0]", "add~rsp,<STR>", "or~<TAG>,al", "mov~rdi,r15", "call~FOO", "mov~rdi,rbx", "call~FOO", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 86, 0, 0, 1, 1, 0, 31, 6, 0.02203947156747296, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [2, 0, 12, 0, 4, 19, 4, 4, 15, -1, 0.00019304646628443467, ["mov     rsi, [rbp+earlier_file]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCreateHa; \"cannot create hard link %s to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     dst_lstat_sb, rax; format", "mov     r8, r12", "mov     rcx, r14", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~esi,[r13+0]", "mov~dst_lstat_sb,rax", "mov~r8,r12", "mov~rcx,r14", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 32, 5, 0.024065923223275398, ["cmp     byte ptr [x_0+1Eh], 0", "jnz     loc_7F8C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 435, 0, 1, 14, 1, 2, 15, 43, 0.007811410762125998, ["mov     dst_lstat_sb, [rbp+stats]; src_stat", "mov     rdi, [rbp+dst_name]; dst_name", "mov     rsi, r12; dst_stat", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r10b", "mov     byte ptr [rbp+var_338], r8b", "mov     byte ptr [rbp+new_dst], r11b", "call    utimecmp", "test    eax, eax", "movzx   r11d, byte ptr [rbp+new_dst]", "movzx   r8d, byte ptr [rbp+var_338]", "movzx   r10d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "js      loc_5F30"], ["mov~dst_lstat_sb,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,r12", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r10b", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r11b", "call~FOO", "test~eax,eax", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r10d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "js~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 33, 4, 0.01994813484939158, ["cmp     byte ptr [x_0+23h], 0", "jz      short loc_7E66"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 16, -1, 0.0004322095884034842, ["test    r14, r14", "jz      short loc_4E60"], ["test~r14,r14", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14], 1", "nop"], ["mov~<TAG>,0", "nop"]], [1, 0, 414, 0, 0, 2, 0, 1, 14, 41, 0.02209545504269544, ["cmp     eax, 2", "jz      loc_4E60"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 410, 0, 0, 2, 1, 1, 16, 39, 0.042495425871229425, ["test    r10b, r10b", "jnz     loc_4E60"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, -1, 6.4348822094811555e-06, ["jmp     loc_4E60"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 19, -1, 4.9870337123478956e-05, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 537, 0, 0, 2, 1, 1, 5, 32, 0.01045014146016057, ["test    r12b, r12b", "jnz     short loc_4EE8"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 35, -1, 0.004086150203020534, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+14h]", "cmp     [rbp+src_sb.st_uid], eax", "jnz     short loc_7E89"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 447, 0, 0, 2, 1, 1, 15, 41, 0.005310922783558447, ["test    al, al", "jz      loc_5E70"], ["test~al,al", "jz~FOO"]], [0, 0, 503, 0, 0, 1, 1, 0, 11, 44, 0.005849307928418371, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [1, 0, 5, 0, 1, 5, 0, 1, 3, -1, 6.756626319955213e-05, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 48, 0, 0, 2, 0, 0, 28, -1, 0.0004633115190826432, ["movzx   ebx, byte ptr [rbp+mode]", "mov     r15, [rbp+x]"], ["movzx~ebx,[yte ptr [rbp+0]", "mov~r15,[rbp+0]"]], [0, 0, 412, 0, 2, 12, 1, 3, 16, 40, 0.00035070108041672295, ["mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [r12+18h]; dst_sb", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+var_338], r10b", "mov     byte ptr [rbp+new_dst], r8b", "call    overwrite_prompt", "call    yesno", "test    al, al", "movzx   r8d, byte ptr [rbp+new_dst]", "movzx   r10d, byte ptr [rbp+var_338]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_5F51"], ["mov~rdi,[rbp+0]", "lea~rsi,[r12+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r10b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r10d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 413, 0, 0, 2, 0, 1, 15, 40, 0.02260252376080256, ["cmp     eax, 3", "jz      loc_6E93"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 47, 0, 1, 2, 0, 1, 26, -1, 0.00105853812345965, ["mov     rdi, [rbp+s]; ptr", "call    free"], ["mov~rdi,[rbp+0]", "call~FOO"]], [0, 0, 221, 0, 0, 3, 1, 1, 17, 20, 0.16215206055653156, ["movzx   r14d, byte ptr [x_0+28h]", "test    r14b, r14b", "jz      loc_56E0"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 276, 0, 1, 5, 1, 2, 16, 25, 0.0040797153208110525, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "mov     byte ptr [rbp+new_dst], r12b", "jz      loc_4F7D"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "mov~[yte ptr [rbp+0],r12b", "jz~FOO"]], [0, 1, 278, 0, 0, 2, 0, 1, 15, 26, 0.00540530105596417, ["cmp     eax, 12h", "jz      loc_66F0"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 275, 0, 0, 2, 0, 1, 17, 25, 0.0007528812185092952, ["cmp     dword ptr [r14], 2", "jz      loc_4F7D"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 448, 0, 1, 8, 1, 1, 14, 42, 0.0011202057446338444, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+var_338], r9b", "mov     byte ptr [rbp+new_dst], r8b", "call    same_name", "movzx   r8d, byte ptr [rbp+new_dst]", "movzx   r9d, byte ptr [rbp+var_338]", "xor     eax, 1"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "xor~eax,0"]], [1, 0, 319, 0, 0, 2, 0, 1, 9, 28, 0.09962055644571427, ["cmp     byte ptr [x_0+1Fh], 0", "jz      short loc_4F50"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 318, 0, 0, 2, 0, 1, 10, 28, 0.0035005759219577486, ["cmp     byte ptr [x_0+17h], 0", "jnz     short loc_4F50"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 386, 0, 0, 2, 0, 1, 19, 37, 0.0017998901780102922, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_6F43"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 395, 0, 0, 5, 1, 1, 20, 37, 0.00011743660032303109, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_6F31"], ["mov~eax,[rbp+0]", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 316, 0, 0, 3, 0, 1, 12, 29, 0.0013706299106194862, ["cmp     byte ptr [rbp+copied_as_regular], 0", "mov     eax, [x_0+4]", "jz      short loc_4F47"], ["cmp~[yte ptr [rbp+0],0", "mov~eax,[x_0+0]", "jz~FOO"]], [0, 0, 109, 2, 0, 11, 2, 1, 34, 10, 0.012955026608237937, ["lea     rcx, [rcx+rsi-1]", "xor     edx, edx", "mov     rax, rcx", "div     rsi", "sub     rcx, rdx", "setz    dl", "cmp     rcx, r8", "setnbe  al", "or      dl, al", "mov     byte ptr [rbp+var_348], dl", "jz      short loc_7751"], ["lea~rcx,[rcx+0]", "xor~edx,edx", "mov~rax,rcx", "div~,rsi", "sub~rcx,rdx", "setz~dl", "cmp~rcx,r8", "setnbe~al", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 0, 108, 0, 0, 2, 0, 0, 35, 10, 0.0, ["mov     byte ptr [rbp+var_348], 0", "mov     rcx, rsi"], ["mov~[yte ptr [rbp+0],0", "mov~rcx,rsi"]], [1, 0, 312, 0, 0, 2, 0, 1, 10, 27, 0.09755978541812793, ["cmp     byte ptr [x_0+26h], 0", "jz      short loc_4F64"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 1, 0, 0, 11, 26, 0.09576123584057794, ["mov     [rbp+earlier_file], 0"], ["mov~[rbp+0],0"]], [1, 0, 13, 0, 1, 6, 0, 1, 25, -1, 0.00011743660032303109, ["mov     rdi, [rbp+src_name]; name", "call    quote", "lea     rsi, aSHasUnknownFil; \"%s has unknown file type\"", "mov     r12, rax", "mov     edx, 5; category", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "nop~[word ptr [rax+0]"]], [1, 0, 62, 0, 3, 14, 3, 3, 40, -1, 1.2869764418962311e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+restore_dst_mode]", "mov     rcx, r14", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r14", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 13, 0, 2, 8, 0, 3, 23, -1, 0.0001319150852943637, ["mov     rdi, r12; ptr", "call    free", "mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSCanMakeRelati; \"%s: can make relative symbolic links on\"...", "jmp     loc_5770"], ["mov~rdi,r12", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 401, 0, 0, 3, 0, 1, 19, 36, 0.02208987814478056, ["cmp     byte ptr [rbp+copied_as_regular], 0", "mov     edx, [x_0]", "jz      short loc_5FF9"], ["cmp~[yte ptr [rbp+0],0", "mov~edx,<TAG>", "jz~FOO"]], [1, 0, 107, 2, 1, 16, 2, 1, 35, 9, 0.023825151380603978, ["lea     rdi, [r13+rcx+0]; n", "mov     [rbp+nbytes], rcx", "call    xmalloc", "mov     rcx, [rbp+s]", "mov     r13, rax", "xor     edx, edx", "mov     byte ptr [rbp+s], bl", "xor     r9d, r9d", "mov     [rbp+length], 0", "lea     rsi, [rax+rcx-1]", "mov     rax, rsi", "div     rcx", "mov     rcx, [rbp+nbytes]", "mov     rbx, rcx", "sub     rsi, rdx", "mov     [rbp+x], rsi"], ["lea~rdi,[r13+0]", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "mov~r13,rax", "xor~edx,edx", "mov~[yte ptr [rbp+0],bl", "xor~r9d,r9d", "mov~[rbp+0],0", "lea~rsi,[rax+0]", "mov~rax,rsi", "div~,rcx", "mov~rcx,[rbp+0]", "mov~rbx,rcx", "sub~rsi,rdx", "mov~[rbp+0],rsi"]], [1, 0, 222, 0, 0, 1, 0, 0, 17, 21, 0.0027943475994671916, ["mov     [rbp+omitted_permissions], 0"], ["mov~[rbp+0],0"]], [1, 0, 396, 0, 0, 2, 0, 1, 19, 37, 0.0018355501502544996, ["cmp     r13d, 4000h", "jz      short loc_5FF6"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 107, 0, 0, 3, 0, 0, 39, 14, 0.0067373216733267694, ["mov     rax, [rbp+x]", "lea     rdx, [rax+rcx]", "mov     byte ptr [rdx], 1"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~<TAG>,0"]], [0, 0, 389, 0, 0, 1, 0, 0, 14, 36, 0.10585408046605699, ["mov     edx, [x_0]"], ["mov~edx,<TAG>"]]], "func_feature": [303, 421, 788, 19, 559, 920, 2, 2817, 0.01201, 53, 16], "succs": [[233, 18], [0, 229], [0, 1], [8, 3], [496, 3], [355], [5], [5], [96, 37], [14, 15], [9, 33], [427], [11, 13], [11, 324], [33], [16, 14], [426, 14], [14], [344, 23], [18, 404], [18], [411], [75, 21], [344, 36], [259], [24, 393], [195, 196], [26], [26], [26, 45], [26], [26], [26], [40, 28], [293, 69], [34, 549], [62, 39], [41, 122], [37, 557], [281, 42], [43], [88], [281, 62], [78, 55], [43, 180], [43], [43], [43], [232, 43], [43], [43], [43], [43], [411], [148, 53], [78, 71], [278], [56, 377], [279], [58, 260], [66, 67], [513, 60], [72, 246], [291, 62], [430], [64, 345], [297, 70], [66, 191], [493, 22], [446, 22], [73, 86], [74, 79], [90, 246], [235, 86], [78], [114, 446], [427], [556, 76], [89, 91], [78], [30], [80, 82], [80, 85], [80, 84], [80, 199], [80, 83], [92, 175], [88, 101], [155, 87], [241, 91], [103], [97, 241], [297, 100], [202, 92], [124, 92], [118], [494, 95], [129, 187], [46], [98, 475], [297, 102], [118], [105, 202], [355], [103], [172], [297], [106, 61], [285, 509], [284, 108], [128, 149], [150, 110], [230], [112, 162], [411], [248, 457], [115], [115, 260], [166], [118], [410], [120, 337], [119], [529], [123, 203], [371, 123], [241, 149], [365, 126], [126, 127], [156, 143], [312, 510], [528, 130], [130, 250], [130, 134], [130], [520, 249], [520, 135], [355], [137, 437], [119], [113, 162], [140], [140, 421], [187, 151], [183, 47], [144, 146], [144, 270], [144, 269], [211, 223], [241, 170], [149, 239], [177, 187], [488, 258], [152, 306], [157, 518], [154, 38], [190, 158], [139, 518], [177], [346, 167], [268, 159], [323, 159], [240, 171], [511], [466, 163], [418], [418, 165], [350], [355], [168, 255], [368], [179], [299, 301], [164, 172], [172], [371, 125], [94, 175], [178, 429], [187], [32], [179], [179], [179], [179], [179], [179], [179], [241, 190], [517, 54], [32], [192, 226], [371, 93], [216, 198], [418], [193, 353], [436, 204], [195], [200, 216], [216, 197], [201, 212], [226], [205], [428, 207], [202], [436], [208, 215], [81, 205], [237, 485], [215], [305, 326], [209, 444], [223], [30], [263], [213, 342], [50, 271], [227, 429], [225, 131], [217, 131], [474, 462], [219, 419], [555, 236], [555, 221], [224, 434], [517], [131], [242, 231], [226], [59, 279], [332], [48, 99], [441, 234], [99], [19, 412], [150, 111], [176, 251], [555, 238], [243], [355], [241], [450, 181], [355], [368, 241], [283, 277], [243], [278], [25, 245], [252, 541], [228, 247], [166], [249, 133], [153, 397], [541, 254], [169, 378], [288], [378], [265, 44], [256, 385], [523], [330, 541], [259, 261], [288, 259], [259], [259], [184, 460], [147, 44], [185, 49], [49, 266], [161, 317], [186, 206], [269, 550], [52, 276], [558, 543], [272, 313], [355], [274, 339], [51, 189], [282], [260, 117], [280, 260], [260, 423], [278, 63], [297, 290], [282, 383], [546, 499], [284, 286], [284, 478], [284], [302], [288], [297, 292], [278], [428, 174], [477], [210, 391], [336, 294], [306, 307], [296, 299], [488], [298, 310], [408, 295], [304, 434], [330, 541], [302], [307], [390, 326], [12, 558], [160], [233, 318], [308, 77], [160, 523], [160], [328, 166], [553, 12], [315, 343], [316, 343], [343], [320, 321], [233, 327], [442, 318], [65, 524], [320, 322], [320, 161], [320], [309, 335], [473, 173], [333, 390], [233, 331], [504], [477], [329, 541], [344, 233], [331, 349], [166], [333], [233, 332], [220, 462], [336, 338], [336], [381, 214], [230], [340, 230], [356], [367, 351], [278], [352, 346], [350], [409, 487], [347, 516], [233, 372], [352, 434], [531, 366], [376, 434], [462], [], [354, 443], [369, 452], [356, 358], [356, 359], [360, 356], [361, 356], [362, 356], [363, 356], [364, 356], [370, 356], [430], [275, 373], [531, 366], [355], [379, 380], [369, 452], [428, 485], [427], [253, 527], [278], [465, 374], [355], [433, 375], [380, 454], [355], [278], [380, 357], [145, 267], [297], [392, 182], [384, 386], [384, 382], [278], [403, 407], [417, 388], [401], [444, 390], [394, 399], [116, 262], [408, 300], [107, 61], [395, 507], [398, 311], [420, 311], [410], [334], [400, 424], [355, 407], [402, 407], [412, 20], [355], [538, 405], [536, 413], [410], [334], [418], [436, 196], [57, 377], [141, 421], [413, 415], [416, 413], [413, 439], [222, 414], [29, 31], [418], [488], [422, 142], [142, 431], [427], [348, 487], [552, 17], [552, 425], [429], [427], [355], [429], [27], [440], [432, 448], [355], [355], [138, 355], [355, 438], [355], [355], [355], [355], [355], [], [121, 419], [406, 447], [468, 445], [449, 455], [440], [453, 455], [264, 460], [263, 303], [473, 325], [455], [464, 357], [456, 459], [459], [330, 458], [289, 330], [434, 435], [341, 463], [419], [500, 461], [341], [360], [104, 387], [297, 479], [389], [467, 389], [477], [545, 469], [472, 469], [548, 469], [297, 530], [194, 462], [476, 486], [486], [68, 446], [554, 287], [297, 489], [297, 481], [297, 482], [297, 483], [297, 526], [297], [297, 244], [508, 535], [491], [492, 519], [396, 495], [491], [490, 109], [497, 519], [434, 188], [88], [396], [4], [519], [218, 131], [506, 546], [401], [502, 166], [166, 503], [166, 551], [166], [166], [546], [61], [515], [554], [505, 501], [512, 61], [540, 61], [480, 540], [515, 532], [514, 532], [518], [411], [520, 136], [521, 310], [498, 131], [522, 434], [434], [434, 534], [273, 434], [434], [428], [451, 454], [250, 132], [484, 428], [511], [430], [535], [524, 525], [524, 533], [46], [257, 10], [539, 468], [537, 7], [468, 6], [529], [548, 542], [548, 470], [442, 319], [558, 543], [472, 471], [554, 547], [554], [35, 549], [446], [27], [504], [27], [2, 309], [88], [536], [544, 558], [4], [2]], "fname": "copy_internal", "n_num": 559}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.058333333333333334, ["cmp     dword ptr [options], 3", "ja      loc_8327"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 1, 16, 1, 0, 6, 2, 1, 0, 1, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "test    options, options", "jz      loc_8346"], ["sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~options,options", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___6970; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoHardLinkCoSy; \"!(co->hard_link && co->symbolic_link)\"", "mov     edx, 8D6h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, -1, 0.020833333333333332, ["cmp     byte ptr [options+28h], 0", "jz      short loc_824B"], ["cmp~[yte ptr [options+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___6970; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidSparseMod; \"VALID_SPARSE_MODE (co->sparse_mode)\"", "mov     edx, 8D4h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 12, 0, 0, 4, 0, 1, 2, -1, 0.1, ["mov     eax, [options+0Ch]", "lea     r10d, [rax-1]", "cmp     r10d, 2", "ja      loc_8308"], ["mov~eax,[options+0]", "lea~r10d,[rax-1]+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___6970; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidReflinkMo; \"VALID_REFLINK_MODE (co->reflink_mode)\"", "mov     edx, 8D5h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.125, ["mov     r10d, [options+30h]", "cmp     r10d, 2", "ja      loc_82E9"], ["mov~r10d,[options+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, -1, 0.13333333333333333, ["cmp     byte ptr [options+17h], 0", "jnz     short loc_82A0"], ["cmp~[yte ptr [options+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6970; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoNull; \"co != NULL\"", "mov     edx, 8D2h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___6970; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidBackupTyp; \"VALID_BACKUP_TYPE (co->backup_type)\"", "mov     edx, 8D3h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [2, 1, 2, 1, 1, 17, 3, 2, 6, -1, 0.06666666666666667, ["mov     [rsp+18h+first_dir_created_per_command_line_arg], 0", "push    rename_succeeded_0; rename_succeeded", "movzx   edx, dl; new_dst", "push    copy_into_self_0; copy_into_self", "mov     rename_succeeded_0, options; x", "xor     r8d, r8d; ancestors", "xor     ecx, ecx; device", "mov     cs:top_level_dst_name, dst_name", "mov     cs:top_level_src_name, src_name", "lea     rax, [rsp+28h+first_dir_created_per_command_line_arg]", "push    rax; first_dir_created_per_command_line_arg", "push    1; command_line_arg", "call    copy_internal", "add     rsp, 20h", "mov     rsi, [rsp+18h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_82E4"], ["mov~[rsp+0],0", "push~rename_succeeded_0", "movzx~edx,dl", "push~copy_into_self_0", "mov~rename_succeeded_0,options", "xor~r8d,r8d", "xor~ecx,ecx", "mov~<TAG>,dst_name", "mov~<TAG>,src_name", "lea~rax,[rsp+0]", "push~rax", "push~0", "call~FOO", "add~rsp,<STR>", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.125, ["cmp     eax, 2", "jz      short loc_8256"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.029166666666666667, ["cmp     r10d, 2", "jz      short loc_82C5"], ["cmp~r10d,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___6970; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoReflinkModeR; \"! (co->reflink_mode == REFLINK_ALWAYS &\"...", "mov     edx, 8D9h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 7, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [8, 5, 17, 1, 17, 18, 2, 73, 0.03873, 11, 3], "succs": [[10, 5], [0, 9], [], [2, 12], [], [4, 7], [], [8, 6], [3, 12], [], [], [16, 14], [11, 13], [11, 15], [], [], []], "fname": "copy", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "src_to_dest_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_8390"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "src_to_dest_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a+10h]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,[a+0]", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "src_to_dest_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 1, 4, 1, 1, 13, 2, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     [rsp+28h+var_18], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_delete", "test    ent, ent", "jz      short loc_840F"], ["push~rbx", "sub~rsp,<STR>", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 3, 0, 2, 5, 0, 2, 0, 2, 0.0, ["mov     rdi, [ent+10h]; ptr", "mov     rbx, ent", "call    free", "mov     rdi, ent; ptr", "call    free"], ["mov~rdi,[ent+0]", "mov~rbx,ent", "call~FOO", "mov~rdi,ent", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_8425"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 6, 3, 5, 5, 2, 25, 0.06667, 2, 2], "succs": [[1, 3], [3], [], [2, 4], []], "fname": "forget_created", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     e, [e+10h]"], ["mov~e,[e+0]"]], [1, 0, 5, 1, 1, 11, 2, 2, 0, 3, 0.0, ["sub     rsp, 28h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_lookup", "test    e, e", "jz      short loc_8480"], ["sub~rsp,0", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~e,e", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_8465"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.30000000000000004, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_8484"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 2, 6, 6, 2, 20, 0.075, 2, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "src_to_dest_lookup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.05, ["xor     eax, eax", "jmp     short loc_84F4"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 1, -1, 0.15000000000000002, ["cmp     ent, ent_from_table", "mov     dev, ent_from_table", "jz      short loc_8500"], ["cmp~ent,ent_from_table", "mov~dev,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 1, 5, 1, 3, 21, 1, 4, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, name", "push    rbp", "push    rbx", "mov     edi, 18h; n", "mov     r12, ino", "mov     rbp, dev", "sub     rsp, 8", "call    xmalloc", "mov     rdi, name; string", "mov     rbx, rax", "call    xstrdup", "mov     rdi, cs:src_to_dest; table", "mov     rsi, ent; entry", "mov     [ent+10h], rax", "mov     [ent], ino", "mov     [ent+8], dev", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_8504"], ["push~r13", "push~r12", "mov~r13,name", "push~rbp", "push~rbx", "mov~edi,<STR>", "mov~r12,ino", "mov~rbp,dev", "sub~rsp,0", "call~FOO", "mov~rdi,name", "mov~rbx,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rsi,ent", "mov~[ent+0],rax", "mov~<TAG>,ino", "mov~[ent+0],dev", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 1, 0, 2, 5, 0, 2, 2, -1, 0.05, ["mov     rdi, [ent+10h]; ptr", "call    free", "mov     rdi, ent; ptr", "call    free", "mov     rax, [ent_from_table+10h]"], ["mov~rdi,[ent+0]", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~rax,[ent_from_table+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     ent_from_table", "pop     ino", "pop     name", "retn"], ["add~rsp,0", "pop~ent", "pop~ent_from_table", "pop~ino", "pop~name", "retn"]]], "func_feature": [6, 2, 9, 0, 6, 6, 3, 38, 0.04167, 1, 2], "succs": [[5], [0, 4], [], [1, 2], [5], []], "fname": "remember_copied", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 10, 2, 2, 0, 1, 0.0, ["lea     r8, src_to_dest_free; data_freer", "lea     rcx, src_to_dest_compare; comparator", "lea     rdx, src_to_dest_hash; hasher", "sub     rsp, 8", "xor     esi, esi; tuning", "mov     edi, 67h ; 'g'; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:src_to_dest, rax", "jz      short loc_8546"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "sub~rsp,0", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 13, 0.0, 4, 2], "succs": [[], [0, 2], []], "fname": "hash_init", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     rdi, cs:src_to_dest; table", "jmp     hash_free"], ["mov~rdi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "forget_all", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _chmod"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, esi", "mov     esi, edx; mode", "cmp     eax, 0FFFFFFFFh", "jz      short loc_8570"], ["mov~eax,esi", "mov~esi,edx", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edi, eax; file", "jmp     _fchmod"], ["mov~edi,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [0, 0, 3, 0, 5, 4, 2, 7, 0.03333, 0, 0], "succs": [[2], [0, 3], [], [4], []], "fname": "chmod_or_fchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     short chmod_or_fchmod"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "qset_acl", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, name", "push    rbx", "call    chmod_or_fchmod", "test    eax, eax", "mov     ebx, eax", "jz      short loc_85D9"], ["push~r12", "push~rbp", "mov~rbp,name", "push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, name; name", "call    quote", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 2, 28, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 3, 16, 2, 3, 0, 0, 0.0, ["mov     rdi, src_name; name", "call    quote", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, rbx", "xor     eax, eax", "mov     ebx, 0FFFFFFFFh", "xor     edi, edi; status", "call    _error", "mov     eax, ebx", "pop     rbx", "pop     dst_name", "pop     src_name", "retn"], ["mov~rdi,src_name", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rbx", "xor~eax,eax", "mov~ebx,0", "xor~edi,edi", "call~FOO", "mov~eax,ebx", "pop~rbx", "pop~dst_name", "pop~src_name", "retn"]], [1, 0, 4, 0, 1, 11, 0, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, dst_name", "push    rbx", "mov     r12, src_name", "mov     edx, r8d; mode", "mov     esi, ecx; desc", "mov     src_name, dst_name; name", "call    qset_acl", "cmp     eax, 0FFFFFFFEh", "jz      short loc_8650"], ["push~r12", "push~rbp", "mov~rbp,dst_name", "push~rbx", "mov~r12,src_name", "mov~edx,r8d", "mov~esi,ecx", "mov~src_name,dst_name", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 1, 0, 0.16666666666666666, ["cmp     eax, 0FFFFFFFFh", "mov     ebx, eax", "jz      short loc_8610"], ["cmp~eax,0", "mov~ebx,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 6, 1, 0, 2, 0, 0.0, ["xor     ebx, ebx", "mov     eax, ebx", "pop     rbx", "pop     dst_name", "pop     src_name", "retn"], ["xor~ebx,ebx", "mov~eax,ebx", "pop~rbx", "pop~dst_name", "pop~src_name", "retn"]], [1, 0, 0, 0, 4, 20, 3, 4, 2, 0, 0.0, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     src_name, rax", "call    _dcgettext", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~src_name,rax", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~eax,eax", "xor~edi,edi", "call~FOO", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [8, 6, 10, 0, 5, 4, 3, 56, 0.03333, 2, 0], "succs": [[], [0, 2], [3, 4], [], []], "fname": "copy_acl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_871B"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_8760"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_8730"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_871B"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_871B"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_871B"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_86E0"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [1, 0, 12, 0, 1, 3, 0, 2, 3, 4, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_86F6"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_8748"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_8770"], ["cmp~buf_size,r15", "ja~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_86D0"], ["mov~buf_size,0", "jmp~FOO"]]], "func_feature": [7, 5, 18, 0, 13, 19, 2, 65, 0.12121, 0, 3], "succs": [[4], [0, 2], [8, 11], [5], [], [10, 4], [4], [4], [10, 4], [1, 6], [9, 1], [12, 7], [5]], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    ht, ht", "jz      short locret_8800"], ["test~ht,ht", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, -1, 0.07142857142857142, ["add     rsp, 8", "mov     rdi, ent; x", "pop     ent", "pop     stats", "pop     file", "pop     ht", "jmp     triple_free"], ["add~rsp,0", "mov~rdi,ent", "pop~ent", "pop~stats", "pop~file", "pop~ht", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.14285714285714285, ["cmp     ent, ent_from_table", "jz      short loc_87F0"], ["cmp~ent,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 1, 5, 1, 3, 23, 1, 4, 1, 1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13, ht", "push    rbp", "push    rbx", "mov     r12, file", "mov     edi, 18h; n", "mov     rbp, stats", "sub     rsp, 8", "call    xmalloc", "mov     rdi, file; string", "mov     rbx, rax", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     rsi, ent; entry", "mov     rdi, ht; table", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_8802"], ["push~r13", "push~r12", "mov~r13,ht", "push~rbp", "push~rbx", "mov~r12,file", "mov~edi,<STR>", "mov~rbp,stats", "sub~rsp,0", "call~FOO", "mov~rdi,file", "mov~rbx,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~rsi,ent", "mov~rdi,ht", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     stats", "pop     file", "pop     ht", "retn"], ["add~rsp,0", "pop~ent", "pop~stats", "pop~file", "pop~ht", "retn"]]], "func_feature": [4, 2, 8, 0, 8, 7, 4, 42, 0.04167, 0, 3], "succs": [[], [0, 6], [4], [2, 7], [], [], [3, 5], []], "fname": "record_file", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_8861"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 2, 0.0, ["mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.name], file", "mov     file, rsp; entry", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[stats+0]", "mov~<TAG>,file", "mov~file,rsp", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "setnz~al"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_884C"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 4, 1, 5, 5, 3, 21, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_88C8"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_88B4"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_88B4"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 2, -1, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_8890"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_88E1"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_88A0"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 1, 42, 0.06845, 0, 6], "succs": [[], [0, 3], [], [2, 5], [2], [1, 2], [4, 7], [5]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 3, 1, 15, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     rbx, table_size", "sub     rsp, 8", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "xor     edx, edx", "add     rsp, 8", "div     table_size", "pop     table_size", "pop     p", "mov     rax, rdx", "retn"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~rbx,table_size", "sub~rsp,0", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "xor~edx,edx", "add~rsp,0", "div~,table_size", "pop~table_size", "pop~p", "mov~rax,rdx", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_893C"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_8940"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 14, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_896C"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_8970"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 16, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "triple_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_8A2D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_8A2D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_8A2D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_8A3D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_8A2D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[5, 7], [0, 7], [1, 7], [4, 6], [2, 7], [7], [], []], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 119, 0, 0, 1, 0, 1, 0, 0, 0.0002492522432701894, ["jmp     loc_8B16"], ["jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 6, 11, 0.035108958837772354, ["mov     byte ptr [rsp+0D8h+var_CC], dl", "call    ___ctype_b_loc", "movzx   edx, byte ptr [rsp+0D8h+var_CC]", "mov     rax, [rax]", "test    byte ptr [rax+rdx*2], 8", "jnz     loc_8B1B"], ["mov~[yte ptr [rsp+0],dl", "call~FOO", "movzx~edx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "test~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 17, 5, 0.07968950291981199, ["mov     rdi, r15; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_933F"], ["mov~rdi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [5, 0, 119, 0, 0, 12, 1, 0, 16, 6, 0.38698191140863125, ["mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "lea     r15, [rbx+4]", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "movzx   edx, byte ptr [tsub_in_string+0]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_9208"], ["mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "lea~r15,[rbx+0]", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "movzx~edx,[yte ptr [tsub_in_string+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 10, 8, 0.3371314627545933, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 119, 0, 0, 8, 1, 0, 9, 7, 0.35493519441674976, ["mov     rcx, [rsp+0D8h+tsub_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_8E40"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 13, 4, 0.09257940464321321, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_9090"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 5, 0.10700042728955989, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_8FE6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 15, 5, 0.00911551061102407, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 3, 0.05597493234581968, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_90E0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 11, 7, 0.3688221051132317, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "test    ecx, ecx", "jz      loc_8EF0"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 8, 0.022788776527560176, ["mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_8E18"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8DB3"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 16, 9, 0.04023643355647343, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_9100"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 2, 0.04094858282295969, ["test    rax, rax", "jnz     short loc_904B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 6, 0.16639367611451358, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jz      loc_8D70"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 5, 1, 1, 13, 7, 0.03952428428998718, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "test    ecx, ecx", "jnz     loc_8E24"], ["mov~ecx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 119, 0, 0, 4, 0, 1, 10, 7, 0.1335279874661729, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_8E24"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 1, 6, 0, 2, 11, 7, 0.0020652328728101407, ["mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_8E24"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 6, 4, 0.12298817832217632, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_8CB8"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "jmp     loc_8BFE"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 5, 5, 0.15745620282011108, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jz      short loc_8B90"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 7, 0.05198689645349665, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_8DBF"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 13, 8, 0.008759435977780942, ["jmp     loc_8DB3"], ["jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 3, 0.06708446090300527, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_8CD8"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 2, 0.052200541233442525, ["test    rax, rax", "jnz     loc_8D10"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 17, 10, 0.009222333000997009, ["mov     r8d, [rsp+0D8h+string_iter.cur.wc]", "test    r8d, r8d", "jnz     loc_92E9"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 16, 1, 0.009827659877510326, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_9363"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 3, 13, 0, 4, 18, 4, 0.07869249394673124, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "mov     rcx, r15; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_92B8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rcx,r15", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 10, 6, 0.01039737929069933, ["lea     rdi, [r12+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_933F"], ["lea~rdi,[r12+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 3, 0.056331006979062806, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_9304"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 11, 5, 0.009186725537672696, ["mov     [rsp+0D8h+tsub_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 119, 0, 3, 12, 0, 4, 14, 4, 0.09706594502207662, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; iter", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_929C"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 5, 0.11305369605469305, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_918A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 16, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [2, 0, 119, 0, 0, 4, 0, 1, 9, 1, 0.013388406209941603, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_9363"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 20, 2, 0.041233442529554194, ["test    rax, rax", "jnz     short loc_927B"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 10, 11, 0.010967098703888335, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     loc_92E9"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8DB3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 21, 1, 0.010468594217347955, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_9363"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 22, 14, 0.009542800170915824, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     short loc_92E9"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 10, 10, 0.048426150121065374, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      short loc_8D00"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 1, 9, 11, 0.031405782652043863, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_8C6A"], ["mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 9, 4, 0.22204814129041445, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "lea     rcx, [r12+4]; p", "lea     rdi, [r12+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "jz      loc_9070"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r12+0]", "lea~rdi,[r12+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 11, 0.014955134596211365, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "jmp     loc_8FB9"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.5667996011964107, ["cmp     [rsp+0D8h+tsub_iter.in_shift], 0", "jnz     short loc_8E57"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 21, 13, 0.03988035892323031, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_92F0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8BCA"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 10, 3, 0.0811138014527845, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_90A8"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8FAD"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 11, 2, 0.0716422162085173, ["test    rax, rax", "jnz     short loc_8EC1"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 14, 7, 0.029198119925936475, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jmp     loc_8DBF"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 7, 6, 0.011892892750320466, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_933F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 6, 7, 0.044651759008688216, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [r15]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_8C98"], ["mov~r15,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 119, 1, 1, 20, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r15, string", "push    r13", "push    r12", "mov     string, sub; s", "push    rbp", "push    rbx", "mov     esi, 2; how", "lea     r13, is_basic_table", "sub     rsp, 0A8h", "lea     rbx, [rsp+0D8h+string_iter]", "lea     r12, [rsp+0D8h+tsub_iter]", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "lea     r14, [rbx+24h]", "call    trim2", "mov     [rsp+0D8h+tsub], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "mov~r15,string", "push~r13", "push~r12", "mov~string,sub", "push~rbp", "push~rbx", "mov~esi,0", "lea~r13,<TAG>", "sub~rsp,0", "lea~rbx,[rsp+0]", "lea~r12,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r14,[rbx+0]", "call~FOO", "mov~<TAG>,rax", "nop~<TAG>"]], [2, 0, 119, 0, 0, 4, 0, 1, 12, 1, 0.01103831363053696, ["mov     rax, [rsp+0D8h+tsub_iter.cur.ptr]", "mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_9363"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 1, 15, 9, 0.02684802734653183, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8F42"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 1, 9, 0.3899729383278735, ["cmp     byte ptr [string], 0", "jz      short loc_8B2B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 119, 1, 0, 3, 0, 1, 19, 10, 0.3809998575701467, ["mov     r15, [rsp+0D8h+string_iter.cur.bytes]", "add     r15, tsub_in_string", "jmp     loc_8AB0"], ["mov~r15,[rsp+0]", "add~r15,tsub_in_string", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 13, 9, 0.009827659877510326, ["mov     esi, [rsp+0D8h+tsub_iter.cur.wc]", "test    esi, esi", "jnz     loc_92E9"], ["mov~esi,[rsp+0]", "test~esi,esi", "jnz~FOO"]], [0, 0, 119, 0, 1, 6, 1, 2, 2, 8, 0.4512889901723401, ["mov     rsi, [rsp+0D8h+tsub]; needle", "mov     rdi, string; haystack", "call    mbsstr", "test    rax, rax", "mov     rbp, rax", "jz      short loc_8B2B"], ["mov~rsi,<TAG>", "mov~rdi,string", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 8, 9, 0.05497792337273892, ["lea     r15, [tsub_in_string+1]", "cmp     byte ptr [string], 0", "jnz     short loc_8AB6"], ["lea~r15,[tsub_in_string+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 16, 2, 0.04778521578122774, ["test    rax, rax", "jz      loc_92C6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 15, 3, 0.06281156530408773, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_9318"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 119, 0, 0, 5, 0, 1, 7, 7, 0.048497365047714, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "jmp     loc_8BD7"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 12, 8, 0.06971941318900442, ["lea     rdi, [r12+4]; ps", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_90D0"], ["lea~rdi,[r12+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 1, 3, 0, 2, 3, 7, 0.451502634952286, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_8B68"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 17, 1, 0.009329155390969946, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_9363"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 0, 4, 13, 0.05376726961971229, ["cmp     string, tsub_in_string", "jnb     loc_9120"], ["cmp~string,tsub_in_string", "jnb~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.009008688221051131, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jz      loc_91D6"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    mbuiter_multi_next"], ["call~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 17, 11, 0.031049708018800738, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]"], ["mov~edx,[rsp+0]"]], [0, 0, 119, 0, 0, 1, 0, 0, 14, 7, 0.027773821392963964, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 119, 0, 1, 7, 0, 2, 8, 7, 0.007477567298105683, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     rdi, r15; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_8BD7"], ["mov~r15,[rsp+0]", "mov~rdi,r15", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 0, 2, 15, 7, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_8DBF"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 6, 0.3958481697763851, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jnz     loc_9160"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8F3E"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 18, 10, 0.048070075487822245, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      loc_92FA"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8BCA"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 119, 0, 2, 12, 3, 3, 5, 12, 0.03058681099558463, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [tsub_in_string-1]", "mov     rax, [rax]", "mov     rdi, [rsp+0D8h+tsub]; s", "movzx   r15d, word ptr [rax+rdx*2]", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "shr     r15w, 3", "xor     r15d, 1", "and     r15d, 1", "test    dl, dl", "jnz     loc_913C"], ["call~FOO", "movzx~edx,[yte ptr [tsub_in_string-1]+0]", "mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~r15d,<TAG>", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "shr~r15w,0", "xor~r15d,0", "and~r15d,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 0, 2, 20, 11, 0.007691212078051559, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_8FB9"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 6, 7, 0.31231306081754734, ["mov     r15d, 1", "jmp     loc_8D35"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 5, 8, 0.2433414043583535, ["jmp     loc_9110"], ["jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 9, 8, 0.13502350092579404, ["test    cl, cl", "jz      loc_9110"], ["test~cl,cl", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 6, 11, 0.020260646631533978, ["test    r15b, r15b", "jnz     short loc_8B2E"], ["test~r15b,r15b", "jnz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 14, 7, 0.02617148554336989, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_9174"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 10, 0.05536960546930637, ["cmp     byte ptr [tsub_in_string+0], 0", "jz      short loc_8B2B"], ["cmp~[yte ptr [tsub_in_string+0],0", "jz~FOO"]], [1, 0, 119, 1, 0, 7, 0, 0, 8, 6, 0.15239994302805868, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "movzx   ecx, [rsp+0D8h+string_iter.cur.wc_valid]", "mov     [rsp+0D8h+string_iter.next_done], 0", "add     rax, r15", "cmp     rax, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], rax", "jnb     loc_8D20"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[rsp+0],0", "add~rax,r15", "cmp~rax,tsub_in_string", "mov~[rsp+0],rax", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, -1, 0.004379717988890471, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.3496652898447514, ["mov     eax, [rsp+0D8h+string_iter.cur.wc]", "test    eax, eax", "jz      loc_8B2B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 1, 10, 7, 0.06704885343968095, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "setz    r15b"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "setz~r15b"]], [2, 0, 119, 0, 1, 7, 0, 2, 16, 9, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8F42"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 5, 12, 0.015774106252670537, ["mov     rdi, [rsp+0D8h+tsub]; s", "mov     r15d, 1", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "test    dl, dl", "jz      loc_8B2E"], ["mov~rdi,<TAG>", "mov~r15d,0", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "test~dl,dl", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 15, 9, 0.00961401509756445, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 8, 0.08282295969235151, ["test    edx, edx", "jz      short loc_8F54"], ["test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 14, 9, 0.006836632958268052, ["jmp     loc_8F3E"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8F3E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 8, 0.31398661159379004, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_8F54"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 13, 9, 0.275388121350235, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jz      loc_8F42"], ["cmp~[rsp+0],0", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 7, 0.1460974220196553, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "jnz     short loc_8F5D"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 7, 0.25042728955989174, ["test    r15b, r15b", "jnz     loc_8B2E"], ["test~r15b,r15b", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5839; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 14, 6, 0.009720837487537387, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_933F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 6, 0.009151118074348383, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_933F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 8, 0.08367753881213502, ["test    edx, edx", "jz      loc_933A"], ["test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 14, 7, 0.0747044580544082, ["mov     edi, [rsp+0D8h+string_iter.cur.wc]", "test    edi, edi", "jz      loc_933A"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, -1, 0.016094573422589374, ["mov     rdi, [rsp+0D8h+tsub]; ptr", "call    free", "mov     rbx, [rsp+0D8h+var_40]", "xor     rbx, fs:28h", "mov     eax, r15d", "jnz     loc_935E"], ["mov~rdi,<TAG>", "call~FOO", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     found", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~found", "retn"]], [6, 0, 119, 0, 0, 10, 0, 1, 7, 6, 0.3882637800883065, ["mov     rax, [rsp+0D8h+tsub]", "mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     qword ptr [r12+4], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0", "jmp     short loc_8DDD"], ["mov~rax,<TAG>", "mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[word ptr [r12+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5839; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [3, 0, 119, 0, 0, 6, 0, 0, 4, 6, 0.3903290129611166, ["cmp     string, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "jb      short loc_8BF7"], ["cmp~string,tsub_in_string", "mov~[rsp+0],string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "jb~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 13, 7, 0.0245335422304515, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_8FD0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 17, 12, 0.2998860561173622, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [tsub_in_string+0]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,[yte ptr [tsub_in_string+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 119, 0, 0, 5, 0, 0, 14, 8, 0.007406352371457057, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 119, 0, 0, 2, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8FAD"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 7, 9, 0.025352513886910694, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [r15]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 1, 0, 0, 9, 7, 0.07911978350662298, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]"], ["mov~r15,[rsp+0]"]], [2, 0, 119, 2, 0, 6, 0, 0, 13, 6, 0.16963395527702604, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "add     [rsp+0D8h+string_iter.cur.ptr], rax", "mov     rax, [rsp+0D8h+tsub_iter.cur.bytes]", "add     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]]], "func_feature": [45, 45, 136, 2, 120, 185, 5, 493, 0.09347, 6, 6], "succs": [[84], [0, 86], [28, 101], [2, 114], [10], [4, 29], [9, 51], [113, 6], [6], [74, 14], [75, 15], [10], [106], [12, 38], [27, 13], [22, 7], [72, 15], [15], [15], [24, 64], [19], [19, 53], [119, 23], [106], [25, 73], [42, 35], [13, 70], [26, 111], [44, 30], [101, 31], [80, 36], [43], [56, 63], [32, 85], [32], [37, 111], [46, 39], [41, 70], [106], [40, 111], [70, 46], [78, 47], [41], [48, 17], [58], [43, 5], [49, 116], [105], [50, 18], [89], [65, 55], [119], [20, 101], [52, 117], [57], [59, 111], [97], [88, 60], [57], [65, 70], [88, 66], [88, 60], [67, 71], [91, 62], [87], [16, 11], [112, 68], [69, 111], [92, 79], [77, 70], [], [77], [75], [87], [119], [33, 98], [94], [96, 76], [105], [1, 84], [58], [110], [81], [81, 90], [108, 86], [93, 103], [88, 61], [83, 21], [108], [88, 58], [110], [97], [1, 108], [94], [97, 100], [94], [94], [99, 100], [97, 95], [3, 100], [3, 108], [], [8, 101], [34, 101], [], [104, 118], [104, 119], [], [107, 109], [], [45], [], [82, 21], [115, 102], [89], [106], [89], [105], [87], [45]], "fname": "mbsstr_trimmed_wordbounded", "n_num": 120}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, translation", "pop     translation", "pop     name", "pop     r12", "retn"], ["mov~rax,translation", "pop~translation", "pop~name", "pop~r12", "retn"]], [1, 0, 3, 0, 1, 11, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rsi, name; msgid", "push    rbx", "mov     rbp, name", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "cmp     name, rax", "mov     rbx, rax", "jz      short loc_93BD"], ["push~r12", "push~rbp", "mov~rsi,name", "push~rbx", "mov~rbp,name", "mov~edx,0", "xor~edi,edi", "call~FOO", "cmp~name,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     rsi, name; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      short loc_93C8"], ["mov~rsi,name", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 0, 0, 4, 22, 1, 4, 2, 0, 0.0, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     r12, rax", "call    _strlen", "lea     rdi, [r12+rax+4]; n", "call    xmalloc", "lea     rcx, aSS_1; \"%s (%s)\"", "mov     r12, rax", "mov     r9, name", "mov     r8, translation", "mov     rdi, result", "mov     translation, r12", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, result", "pop     result", "pop     name", "pop     r12", "retn"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~r12,rax", "call~FOO", "lea~rdi,[r12+0]", "call~FOO", "lea~rcx,<TAG>", "mov~r12,rax", "mov~r9,name", "mov~r8,translation", "mov~rdi,result", "mov~translation,r12", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rax,result", "pop~result", "pop~name", "pop~r12", "retn"]]], "func_feature": [6, 3, 8, 0, 4, 4, 0, 43, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "proper_name", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 14, 0, 1, 5, 1, 2, 0, 0, 0.01327643432906591, ["mov     rsi, rbp; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_9528"], ["mov~rsi,rbp", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 4, -1, 0.10597439544807967, ["test    rbp, rbp", "jz      short loc_9504"], ["test~rbp,rbp", "jz~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 3, -1, 0.12140147666463458, ["mov     rsi, name_ascii; s2", "mov     rdi, translation; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_94E1"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 4, -1, 0.015714963083384135, ["mov     name_utf8, name_converted", "mov     r15, name_converted", "jmp     loc_9478"], ["mov~name_utf8,name_converted", "mov~r15,name_converted", "jmp~FOO"]], [1, 0, 23, 0, 0, 6, 3, 1, 3, -1, 0.030938833570412518, ["mov     name_converted, name_ascii", "mov     [rsp+48h+sub], 0", "xor     ebp, ebp", "xor     r12d, r12d", "xor     r15d, r15d", "jmp     loc_9478"], ["mov~name_converted,name_ascii", "mov~[rsp+0],0", "xor~ebp,ebp", "xor~r12d,r12d", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 2, 1, 4, 0, 0.015714963083384135, ["xor     ebp, ebp", "xor     r15d, r15d", "mov     name_converted, converted_translit", "jmp     loc_9478"], ["xor~ebp,ebp", "xor~r15d,r15d", "mov~name_converted,converted_translit", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 2, 0, 2, -1, 0.001422475106685633, ["mov     [rsp+48h+sub], name_converted_translit", "mov     rbx, name_converted_translit", "xor     r12d, r12d", "xor     r15d, r15d"], ["mov~[rsp+0],name_converted_translit", "mov~rbx,name_converted_translit", "xor~r12d,r12d", "xor~r15d,r15d"]], [0, 0, 25, 0, 0, 3, 1, 1, 3, 1, 0.01933888775994039, ["test    name_converted, name_converted", "mov     [rsp+48h+sub], converted_translit", "jz      loc_9700"], ["test~name_converted,name_converted", "mov~[rsp+0],converted_translit", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, -1, 0.04501117659012396, ["test    r15, r15", "jz      short loc_9499"], ["test~r15,r15", "jz~FOO"]], [1, 0, 22, 0, 1, 9, 3, 2, 2, -1, 0.030583214793741112, ["mov     rsi, name_ascii; s2", "mov     rdi, translation; s1", "mov     [rsp+48h+sub], 0", "xor     r12d, r12d", "xor     r15d, r15d", "mov     rbx, name_ascii", "call    _strcmp", "test    eax, eax", "jz      short loc_9487"], ["mov~rsi,name_ascii", "mov~rdi,translation", "mov~[rsp+0],0", "xor~r12d,r12d", "xor~r15d,r15d", "mov~rbx,name_ascii", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 1, 5, 1, 2, 4, -1, 0.03578202262412789, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      loc_96E8"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 19, 0, 1, 5, 1, 2, 3, -1, 0.030803359750728173, ["mov     rsi, name_ascii; s2", "mov     rdi, translation; s1", "call    _strcmp", "test    eax, eax", "jz      loc_94AB"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.00995732574679943, ["cmp     name, r15", "jz      short loc_9499"], ["cmp~name,r15", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     rdi, r15; ptr", "call    free"], ["mov~rdi,r15", "call~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 5, -1, 0.011955564587143535, ["mov     r15, name", "xor     r12d, r12d", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r15,name", "xor~r12d,r12d", "nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.02367404998983946, ["test    r12, r12", "jz      short loc_94AB"], ["test~r12,r12", "jz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 6, -1, 0.017780938833570414, ["mov     rsi, [rsp+48h+sub]; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      loc_9680"], ["mov~rsi,[rsp+0]", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, -1, 0.08202939781887152, ["cmp     [rsp+48h+sub], 0", "jz      loc_9680"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, -1, 0.005181873602926235, ["cmp     name, r12", "jz      short loc_94AB"], ["cmp~name,r12", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 7, -1, 0.007112375533428165, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.005334281650071124, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 5, -1, 0.022488654067601435, ["test    r12, r12", "mov     name, translation", "jnz     loc_94A3"], ["test~r12,r12", "mov~name,translation", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 5, -1, 0.028991397412450045, ["mov     rdi, r15; ptr", "mov     name, translation", "call    free", "test    r12, r12", "jnz     loc_94A3"], ["mov~rdi,r15", "mov~name,translation", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, -1, 0.022996680891417737, ["test    r12, r12", "mov     name, result", "jnz     loc_94A3"], ["test~r12,r12", "mov~name,result", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, -1, 0.06584027636659215, ["test    r15, r15", "jnz     loc_9620"], ["test~r15,r15", "jnz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 3, -1, 0.11977579082842241, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_9528"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0020151730678046468, ["jmp     loc_94AB"], ["jmp~FOO"]], [1, 1, 38, 1, 3, 21, 2, 4, 0, 4, 0.0, ["push    r15", "push    r14", "mov     edx, 5; category", "push    r13", "push    r12", "mov     r13, name_ascii", "push    rbp", "push    rbx", "mov     rbp, name_utf8", "mov     name_utf8, name_ascii; msgid", "xor     edi, edi; domainname", "sub     rsp, 18h", "call    _dcgettext", "mov     r14, rax", "call    locale_charset", "lea     rsi, from_codeset; \"UTF-8\"", "mov     rdi, rax; s1", "mov     r12, rax", "call    c_strcasecmp", "test    eax, eax", "jnz     loc_9548"], ["push~r15", "push~r14", "mov~edx,0", "push~r13", "push~r12", "mov~r13,name_ascii", "push~rbp", "push~rbx", "mov~rbp,name_utf8", "mov~name_utf8,name_ascii", "xor~edi,edi", "sub~rsp,<STR>", "call~FOO", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     name_ascii", "pop     translation", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~name_ascii", "pop~translation", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0013039355144618303, ["jmp     loc_94AB"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.0020151730678046468, ["jmp     loc_94AB"], ["jmp~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, r15; ptr", "call    free"], ["mov~rdi,r15", "call~FOO"]], [2, 0, 5, 0, 4, 18, 2, 5, 6, -1, 0.04860123281175913, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rbp+rax+4]; n", "call    xmalloc", "lea     rcx, aSS_1; \"%s (%s)\"", "mov     rdi, rax", "mov     rbp, rax", "mov     r9, name", "xor     eax, eax", "mov     r8, translation", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "call    ___sprintf_chk", "test    r15, r15", "jz      short loc_96D0"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~rbp,rax", "call~FOO", "lea~rdi,[rbp+0]", "call~FOO", "lea~rcx,<TAG>", "mov~rdi,rax", "mov~rbp,rax", "mov~r9,name", "xor~eax,eax", "mov~r8,translation", "mov~rdx,0", "mov~esi,0", "call~FOO", "test~r15,r15", "jz~FOO"]], [1, 0, 33, 0, 1, 5, 1, 2, 2, 2, 0.005689900426742532, ["mov     esi, 3Fh ; '?'; c", "mov     rdi, converted_translit; s", "call    _strchr", "test    rax, rax", "jz      short loc_9640"], ["mov~esi,0", "mov~rdi,converted_translit", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 1, 34, 1, 6, 32, 1, 7, 1, 3, 0.008534850640113799, ["lea     rsi, from_codeset; \"UTF-8\"", "mov     rdx, locale_code; to_codeset", "mov     rdi, name_utf8; src", "call    xstr_iconv", "mov     rdi, locale_code; s", "mov     rbx, rax", "call    _strlen", "lea     rdi, [rax+0Bh]; n", "mov     r15, rax", "call    xmalloc", "mov     rdx, len; n", "mov     rsi, locale_code; src", "mov     rdi, locale_code_translit; dest", "call    _memcpy", "mov     rcx, rax", "add     len, rax", "mov     rax, 4C534E4152542F2Fh", "mov     [r15], rax", "lea     rsi, from_codeset; \"UTF-8\"", "mov     eax, 5449h", "mov     rdx, rcx; to_codeset", "mov     rdi, name_utf8; src", "mov     [r15+8], ax", "mov     byte ptr [r15+0Ah], 0", "mov     [rsp+48h+sub], rcx", "call    xstr_iconv", "mov     rcx, [rsp+48h+sub]", "mov     locale_code, rax", "mov     rdi, rcx; ptr", "call    free", "test    converted_translit, converted_translit", "jz      short loc_95E7"], ["lea~rsi,<TAG>", "mov~rdx,locale_code", "mov~rdi,name_utf8", "call~FOO", "mov~rdi,locale_code", "mov~rbx,rax", "call~FOO", "lea~rdi,[rax+0]", "mov~r15,rax", "call~FOO", "mov~rdx,len", "mov~rsi,locale_code", "mov~rdi,locale_code_translit", "call~FOO", "mov~rcx,rax", "add~len,rax", "mov~rax,0", "mov~<TAG>,rax", "lea~rsi,<TAG>", "mov~eax,<STR>", "mov~rdx,rcx", "mov~rdi,name_utf8", "mov~[r15+0],ax", "mov~[yte ptr [r15+0],0", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~locale_code,rax", "mov~rdi,rcx", "call~FOO", "test~converted_translit,converted_translit", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 1, -1, 0.017069701280227598, ["test    name_converted_translit, name_converted_translit", "jz      short loc_94C0"], ["test~name_converted_translit,name_converted_translit", "jz~FOO"]], [0, 0, 29, 0, 1, 2, 0, 1, 3, -1, 0.005554426607058187, ["mov     rdi, converted_translit; ptr", "call    free"], ["mov~rdi,converted_translit", "call~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 2, -1, 0.048939917360969996, ["test    name_converted, name_converted", "jz      short loc_9660"], ["test~name_converted,name_converted", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 1, 1, 5, -1, 0.02667140825035562, ["mov     name_utf8, name", "mov     r15, name", "mov     [rsp+48h+sub], 0", "xor     r12d, r12d", "jmp     loc_94F0"], ["mov~name_utf8,name", "mov~r15,name", "mov~[rsp+0],0", "xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [26, 34, 57, 0, 39, 62, 1, 193, 0.02706, 2, 3], "succs": [[24, 17], [0, 17], [8, 25], [2], [2], [2], [2], [3, 5], [12, 15], [8, 25], [38, 14], [10, 28], [13, 15], [15], [22], [18, 28], [32, 19], [16, 32], [28, 20], [24], [28], [20, 29], [26, 20], [20, 30], [21, 22], [24, 1], [28], [34, 35], [], [28], [28], [23], [23, 31], [36, 7], [33, 37], [9, 6], [37], [11, 4], [1]], "fname": "proper_name_utf8", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[3, 0, 0, 4, 1, 18, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, maxlen; n", "mov     rbx, maxlen", "xor     esi, esi; c", "mov     rbp, string", "sub     rsp, 8", "call    _memchr", "mov     rdx, end", "sub     rdx, string", "add     rdx, 1", "test    end, end", "mov     end, maxlen", "cmovnz  rax, rdx", "add     rsp, 8", "pop     maxlen", "pop     string", "retn"], ["push~rbp", "push~rbx", "mov~rdx,maxlen", "mov~rbx,maxlen", "xor~esi,esi", "mov~rbp,string", "sub~rsp,0", "call~FOO", "mov~rdx,end", "sub~rdx,string", "add~rdx,0", "test~end,end", "mov~end,maxlen", "cmovnz~rax,rdx", "add~rsp,0", "pop~maxlen", "pop~string", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 17, 18, 0.0, 0, 4], "succs": [[]], "fname": "strnlen1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 57, 0, 0, 2, 1, 1, 0, 0, 0.02614052614052614, ["test    rax, rax", "jnz     short loc_9A23"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 9, 3, 0.030136530136530136, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r15, [rsp+0A8h+i.cur.ptr]", "jz      loc_9D00"], ["cmp~rax,0", "mov~r15,[rsp+0]", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5820; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 86h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 9, 6, 0.016733266733266732, ["mov     rdi, [rsp+0A8h+ps]; ps", "mov     [rsp+0A8h+var_98], rsi", "call    _mbsinit", "test    eax, eax", "jz      loc_9D3C"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 57, 0, 1, 6, 1, 2, 9, 6, 0.008574758574758574, ["mov     rdi, r13; ps", "mov     [rsp+0A8h+var_98], rdx", "call    _mbsinit", "test    eax, eax", "mov     rdx, [rsp+0A8h+var_98]", "jz      loc_9D3C"], ["mov~rdi,r13", "mov~[rsp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "jz~FOO"]], [2, 0, 60, 1, 0, 7, 2, 1, 4, 8, 0.021062271062271064, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_98F0"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 0, 0, 3, 9, 0.011738261738261738, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 10, 0.11871461871461872, ["jmp     loc_979A"], ["jmp~FOO"]], [1, 0, 39, 0, 2, 8, 0, 3, 6, 11, 0.12737262737262736, ["mov     rdi, r15; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, r15; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_9A60"], ["mov~rdi,r15", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,r15", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 9, 3, 0.07109557109557109, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r12, [rsp+0A8h+i.cur.ptr]", "jz      loc_9CE0"], ["cmp~rax,0", "mov~r12,[rsp+0]", "jz~FOO"]], [1, 0, 34, 1, 1, 8, 0, 2, 8, 4, 0.13478188478188477, ["lea     rcx, [rbp+0Ch]; p", "mov     rdx, r14", "lea     rdi, [rbp+2Ch]; pwc", "sub     rdx, rsi; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_9C60"], ["lea~rcx,[rbp+0]", "mov~rdx,r14", "lea~rdi,[rbp+0]", "sub~rdx,rsi", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 34, 1, 0, 6, 0, 1, 10, 9, 0.003996003996003996, ["mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13, r14", "sub     r13, r12", "mov     [rsp+0A8h+i.cur.bytes], r13", "jmp     loc_989C"], ["mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~r13,r14", "sub~r13,r12", "mov~[rsp+0],r13", "jmp~FOO"]], [1, 0, 76, 0, 1, 4, 0, 1, 1, 11, 0.012654012654012654, ["mov     rbx, d", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_9A90"], ["mov~rbx,d", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 78, 1, 1, 14, 2, 2, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, esi", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_40], rax", "xor     eax, eax", "call    _strdup", "test    d, d", "jz      loc_9D37"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,esi", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~d,d", "jz~FOO"]], [3, 0, 40, 0, 0, 4, 0, 0, 9, 12, 0.030802530802530804, ["mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 57, 1, 1, 8, 0, 2, 8, 4, 0.058774558774558776, ["lea     rcx, [rbp+0Ch]; p", "lea     rdi, [rbp+2Ch]; iter", "sub     rdx, r15; n", "mov     rsi, r15; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_9C88"], ["lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "sub~rdx,r15", "mov~rsi,r15", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 6, 6, 0.13944388944388944, ["lea     rbp, [rsp+0A8h+i]", "lea     rax, [rbp+0Ch]", "mov     [rsp+0A8h+ps], rax", "jmp     short loc_984E"], ["lea~rbp,[rsp+0]", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [6, 0, 35, 1, 0, 18, 2, 0, 5, 7, 0.14127539127539127, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "mov     rsi, d", "sbb     rdx, 3", "xor     r15d, r15d", "cmp     rdx, d", "mov     r14, rdx", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_9A60"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "mov~rsi,d", "sbb~rdx,0", "xor~r15d,r15d", "cmp~rdx,d", "mov~r14,rdx", "mov~[rsp+0],rdx", "jbe~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 11, 1, 0.009657009657009656, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_9D60"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [6, 0, 58, 1, 0, 16, 1, 0, 5, 7, 0.030053280053280052, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     r15, d", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "cmp     rdx, d", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_9CA0"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~r15,d", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "cmp~rdx,d", "mov~[rsp+0],rdx", "jbe~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 2, 10, 0.019647019647019648, ["test    r12d, r12d", "jnz     loc_98E8"], ["test~r12d,r12d", "jnz~FOO"]], [3, 0, 57, 0, 0, 6, 0, 0, 9, 8, 0.00949050949050949, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [r15]", "mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.next_done], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 57, 0, 0, 7, 1, 0, 8, 7, 0.015734265734265736, ["movzx   ecx, byte ptr [r15]", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [r14+rax*4]", "bt      eax, ecx", "jnb     loc_9C38"], ["movzx~ecx,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [2, 0, 40, 1, 0, 6, 0, 1, 10, 12, 0.00616050616050616, ["mov     rax, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1", "sub     rax, r15", "mov     [rsp+0A8h+i.cur.bytes], rax", "jmp     short loc_9CA0"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "sub~rax,r15", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 34, 0, 0, 7, 0, 0, 9, 9, 0.043373293373293376, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [rsi]", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 34, 0, 0, 8, 1, 0, 8, 7, 0.07292707292707293, ["movzx   ecx, byte ptr [rsi]", "lea     rdi, is_basic_table", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [rdi+rax*4]", "bt      eax, ecx", "jnb     loc_9B60"], ["movzx~ecx,<TAG>", "lea~rdi,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 10, 2, 0.05427905427905428, ["test    rax, rax", "jnz     short loc_9BD7"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 10, 5, 0.010989010989010988, ["mov     [rsp+0A8h+i.in_shift], 1", "jmp     loc_99CE"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 3, -1, 0.00308025308025308, ["movzx   ebp, byte ptr [p]", "test    bpl, bpl", "jz      loc_9D2A"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, -1, 0.004995004995004995, ["test    r12d, r12d", "jz      short loc_9AE6"], ["test~r12d,r12d", "jz~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 12, 10, 0.012071262071262072, ["mov     edx, [rsp+0A8h+i.cur.wc]", "test    edx, edx", "jnz     loc_9D5B"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 3, 9, 0.1382783882783883, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 7, 0.06943056943056942, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r15d, 1", "jz      short loc_9837"], ["cmp~[rsp+0],0", "mov~r15d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 8, 0.1351981351981352, ["test    r15d, r15d", "mov     [rsp+0A8h+i.next_done], 1", "jz      loc_9818"], ["test~r15d,r15d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 12, 9, 0.024142524142524144, ["mov     r13, [rsp+0A8h+i.cur.bytes]", "jmp     loc_989C"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [3, 0, 34, 0, 0, 6, 0, 1, 9, 9, 0.050865800865800864, ["mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "jmp     loc_989C"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "jmp~FOO"]], [3, 0, 7, 1, 0, 12, 1, 1, 5, -1, 0.008907758907758908, ["mov     ecx, eax", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "lea     rbp, [rdx-1]", "cmp     d, p", "ja      loc_9A60"], ["mov~ecx,eax", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "lea~rbp,[rdx-1]+0]", "cmp~d,p", "ja~FOO"]], [2, 0, 9, 1, 0, 7, 2, 1, 4, -1, 0.009407259407259408, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_9AE9"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 6, -1, 0.023976023976023976, ["mov     rax, d", "mov     d, [rsp+0A8h+var_40]", "xor     d, fs:28h", "jnz     loc_9D32"], ["mov~rax,d", "mov~d,[rsp+0]", "xor~d,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.022810522810522812, ["cmp     r15d, 2", "jnz     short loc_9A60"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 10, 0, 2, 8, 0, 3, 5, -1, 0.008907758907758908, ["mov     rdi, p; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, p; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_9A60"], ["mov~rdi,p", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,p", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [2, 0, 6, 1, 0, 4, 0, 1, 8, -1, 0.0004995004995004995, ["mov     byte ptr [p+0], 0", "sub     p, 1", "cmp     d, p", "ja      loc_9A60"], ["mov~[yte ptr [p+0],0", "sub~p,0", "cmp~d,p", "ja~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, -1, 0.0004995004995004995, ["jmp     loc_9A60"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0A8h+r]", "mov     byte ptr [rax], 0", "xchg    ax, ax"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "xchg~ax,ax"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, -1, 0.001332001332001332, ["call    ___ctype_b_loc", "mov     r13, p", "mov     rax, [rax]", "jmp     short loc_9ABE"], ["call~FOO", "mov~r13,p", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 34, 0, 1, 9, 1, 2, 13, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "mov     rsi, [rsp+0A8h+r]", "test    eax, eax", "mov     eax, 2", "cmovnz  r15d, eax", "cmovnz  rsi, r12", "mov     [rsp+0A8h+r], rsi", "jmp     loc_9837"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovnz~r15d,eax", "cmovnz~rsi,r12", "mov~[rsp+0],rsi", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 7, 0.013486513486513486, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_9837"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 8, 0.052947052947052944, ["cmp     r15d, 1", "jz      loc_9C00"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 5, 0.2078754578754579, ["cmp     [rsp+0A8h+i.in_shift], 0", "jnz     loc_9B81"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 10, 5, 0.00715950715950716, ["mov     rsi, [rsp+0A8h+var_98]; s", "mov     [rsp+0A8h+i.in_shift], 1"], ["mov~rsi,[rsp+0]", "mov~[rsp+0],0"]], [0, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.002913752913752914, ["mov     r13, p", "jmp     loc_9AC5"], ["mov~r13,p", "jmp~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.in_shift], 0", "mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_9999"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 57, 0, 1, 5, 1, 2, 11, 9, 0.0367965367965368, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_9D20"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 34, 0, 1, 5, 2, 1, 12, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "xor     r15d, r15d", "call    _iswspace", "test    eax, eax", "setz    r15b"], ["mov~edi,[rsp+0]", "xor~r15d,r15d", "call~FOO", "test~eax,eax", "setz~r15b"]], [0, 1, 13, 0, 0, 2, 1, 1, 5, -1, 0.002664002664002664, ["test    byte ptr [rax+rbp*2+1], 20h", "jnz     short loc_9AB0"], ["test~[yte ptr [rax+0],<STR>", "jnz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 6, -1, 0.0, ["add     p, 1", "movzx   ebp, byte ptr [p+0]", "test    bpl, bpl", "jz      short loc_9AC5"], ["add~p,0", "movzx~ebp,[yte ptr [p+0]", "test~bpl,bpl", "jz~FOO"]], [2, 0, 37, 1, 0, 7, 2, 1, 4, 8, 0.13994338994338995, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_97A2"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 8, 0.02664002664002664, ["cmp     r15d, 2", "jnz     loc_9CD0"], ["cmp~r15d,0", "jnz~FOO"]], [0, 1, 6, 0, 0, 3, 1, 1, 7, -1, 0.004995004995004995, ["movzx   eax, byte ptr [p+0]", "test    byte ptr [rdx+rax*2+1], 20h", "jnz     short loc_9B38"], ["movzx~eax,[yte ptr [p+0]", "test~[yte ptr [rdx+0],<STR>", "jnz~FOO"]], [0, 0, 57, 0, 1, 4, 1, 2, 10, 7, 0.07309357309357309, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "jz      loc_9CA0"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 11, 6, 0.023476523476523476, ["add     r15, [rsp+0A8h+i.cur.bytes]", "mov     rdx, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     r15, rdx", "mov     [rsp+0A8h+i.cur.ptr], r15", "jnb     loc_9CA0"], ["add~r15,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsp+0],0", "cmp~r15,rdx", "mov~[rsp+0],r15", "jnb~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 8, 0.008991008991008992, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_9CD0"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 1, 0.020313020313020312, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r12], 0", "jnz     loc_9D60"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 5, 0, 0, 12, 6, 0.09856809856809856, ["lea     rsi, [r12+r13]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     rsi, r14", "mov     [rsp+0A8h+i.cur.ptr], rsi", "jnb     loc_9A50"], ["lea~rsi,<TAG>", "mov~[rsp+0],0", "cmp~rsi,r14", "mov~[rsp+0],rsi", "jnb~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 14, 7, 0.002580752580752581, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "mov     eax, 1", "cmovz   r15d, eax", "jmp     loc_9837"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~r15d,eax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 7, 0.007575757575757576, ["mov     r15d, 1", "jmp     loc_9837"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 7, 5, 0.051864801864801864, ["cmp     [rsp+0A8h+i.in_shift], 0", "jz      short loc_9960"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 0, 1, 6, 6, 0.019230769230769232, ["lea     rbp, [rsp+0A8h+i]", "lea     r14, is_basic_table", "lea     r13, [rbp+0Ch]", "jmp     short loc_99C7"], ["lea~rbp,[rsp+0]", "lea~r14,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005994005994005994, ["call    ___ctype_b_loc", "mov     rdx, [rax]", "jmp     short loc_9B49"], ["call~FOO", "mov~rdx,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    mbiter_multi_next"], ["call~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 12, 11, 0.01073926073926074, ["mov     eax, [rsp+0A8h+i.cur.wc]", "test    eax, eax", "jnz     loc_9D5B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_9999"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.009573759573759574, ["mov     rdx, d"], ["mov~rdx,d"]], [1, 0, 34, 0, 1, 6, 1, 2, 11, 10, 0.03146853146853147, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     r14, [rsp+0A8h+i.limit]", "jz      short loc_9BF3"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~r14,[rsp+0]", "jz~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 12, 10, 0.0, ["mov     [rsp+0A8h+i.in_shift], 0"], ["mov~[rsp+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5820; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0A1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [23, 35, 79, 2, 79, 119, 1, 352, 0.03339, 6, 15], "succs": [[18, 52], [0, 23], [], [49, 2], [2, 27], [19, 5], [5], [31], [38, 7], [26, 11], [9, 35], [33], [20, 29], [73, 12], [8], [1, 14], [48], [16, 38], [78, 30], [8, 68], [6, 31], [59], [4, 21], [8], [33], [24, 3], [75, 62], [15], [50, 44], [74, 28], [52, 70], [56], [53, 63], [32, 47], [33], [33], [69, 38], [36, 37], [66, 77], [43, 38], [74, 38], [58, 38], [38], [38], [54], [63], [45, 63], [57, 46], [25, 10], [10], [40], [59], [72, 51], [63], [40, 55], [40, 54], [56, 17], [65, 61], [41, 42], [8, 60], [8, 67], [64, 65], [78, 71], [48, 39], [63], [63], [], [22, 15], [67], [58], [], [75, 70], [59], [], [37], [34, 76], [34], [], []], "fname": "trim2", "n_num": 79}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 1, 11, 1, 2, 0, 0, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000009E24 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_A026"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, 1, 0.1368421052631579, ["lea     rdx, off_14828", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000009E24 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000009E24 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 18, 0, 1, 7, 1, 1, 1, 3, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000009E24 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000009E24 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000009E24 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 2, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D9h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_A140; jumptable 0000000000009E24 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000009E24 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [0, 0, 1, 0, 1, 5, 1, 2, 4, -1, 0.010526315789473684, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_9E94"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 2, 0, 0, 16, 0, 1, 3, -1, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000009E24 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_9F1A"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000009E24 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 3, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_9DBC"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_9E30"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000009E24 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_A0C3"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 0, 0, 2, 1, 23, 1, 1, 5, -1, 0.0, ["mov     r9, [rsp+60h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r9,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    _abort; jumptable 0000000000009E24 case 0"], ["call~FOO"]]], "func_feature": [19, 21, 30, 4, 21, 28, 3, 276, 0.0183, 16, 13], "succs": [[18], [0, 2, 3, 6, 7, 8, 10, 13, 16, 20], [19], [18], [], [9, 4], [4], [4], [4], [1, 12], [17], [19], [11], [11], [9], [5, 14], [17], [], [], [], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["xor     r9d, r9d", "cmp     qword ptr [authors], 0", "jz      short loc_A1AB"], ["xor~r9d,r9d", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.25, ["jmp     version_etc_arn"], ["jmp~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 2, 1, 0.16666666666666666, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_A1A0"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 8, 0.1, 0, 1], "succs": [[3], [0, 2], [4], [2, 3], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 8, 2, 0, 4, 0, 0, 0, 0, 0.09821428571428571, ["mov     r11d, eax", "add     r11, [authors+10h]", "add     eax, 8", "mov     [authors], eax"], ["mov~r11d,eax", "add~r11,[authors+0]", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.25, ["mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "ja      short loc_A21A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, 0, 0.09821428571428571, ["mov     r11, [authors+8]", "lea     rax, [r11+8]", "mov     [authors+8], rax", "jmp     short loc_A1E5"], ["mov~r11,[authors+0]", "lea~rax,[r11+0]", "mov~[authors+0],rax", "jmp~FOO"]], [1, 0, 8, 1, 0, 8, 2, 0, 0, 2, 0.0, ["sub     rsp, 68h", "mov     r10, authors", "xor     r9d, r9d", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     authors, rsp; authors", "nop     dword ptr [rax]"], ["sub~rsp,0", "mov~r10,authors", "xor~r9d,r9d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~authors,rsp", "nop~<TAG>"]], [0, 0, 2, 0, 1, 4, 1, 2, 4, -1, 0.21428571428571427, ["call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_A215"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 3, 0.3571428571428571, ["mov     rax, [r11]", "test    rax, rax", "mov     [r8+n_authors*8], rax", "jz      short loc_A1FB"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jnz     short loc_A1D0"], ["add~n_authors,0", "cmp~n_authors,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 7, 1, 9, 11, 0, 33, 0.12698, 1, 5], "succs": [[5], [0, 2], [5], [1], [8, 7], [4, 6], [1, 4], [], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 10, 0, 0, 4, 1, 1, 0, 0, 0.3111111111111111, ["mov     rax, [rax]", "test    rax, rax", "mov     [r8+r9*8], rax", "jz      short loc_A2CC"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 2, 0, 0.08333333333333334, ["mov     rax, rbx", "add     rbx, 8", "jmp     short loc_A2B6"], ["mov~rax,rbx", "add~rbx,0", "jmp~FOO"]], [2, 0, 10, 2, 0, 4, 0, 0, 2, 4, 0.08333333333333334, ["mov     eax, r10d", "mov     r11d, 1", "add     r10d, 8", "add     rax, rbp"], ["mov~eax,r10d", "mov~r11d,0", "add~r10d,0", "add~rax,rbp"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 1, 0.17777777777777778, ["cmp     r10d, 2Fh ; '/'", "ja      short loc_A2FC"], ["cmp~r10d,0", "ja~FOO"]], [2, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.07777777777777778, ["add     r9, 1; n_authors", "cmp     r9, 0Ah", "jnz     short loc_A2A0"], ["add~r9,0", "cmp~r9,0", "jnz~FOO"]], [1, 2, 10, 1, 0, 20, 3, 0, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     r10d, 20h ; ' '", "xor     r11d, r11d", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+0C8h+arg_0]", "mov     [rsp+0C8h+var_28], r8", "lea     rbx, [rsp+0C8h+arg_0]", "lea     r8, [rsp+0C8h+var_A8]; authors", "mov     [rsp+0C8h+var_20], r9", "mov     [rsp+0C8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0C8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0C8h+var_48]", "xor     r9d, r9d", "mov     [rsp+0C8h+authors.reg_save_area], rax", "mov     rbp, rax", "nop     word ptr [rax+rax+00000000h]"], ["push~rbp", "push~rbx", "mov~r10d,<STR>", "xor~r11d,r11d", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "lea~rbx,[rsp+0]", "lea~r8,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],<STR>", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "xor~r9d,r9d", "mov~[rsp+0],rax", "mov~rbp,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.26666666666666666, ["test    r11b, r11b", "jnz     short loc_A2F5"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 5, -1, 0.17777777777777778, ["call    version_etc_arn", "mov     rax, [rsp+0C8h+var_50]", "xor     rax, fs:28h", "jnz     short loc_A2F0"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     [rsp+0C8h+authors.gp_offset], r10d", "jmp     short loc_A2D1"], ["mov~[rsp+0],r10d", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 6, 9, 5, 11, 14, 1, 49, 0.10707, 1, 6], "succs": [[4, 6], [0], [0], [1, 2], [3, 6], [3], [8, 9], [], [10, 7], [8], []], "fname": "version_etc", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpWwwGnuOrgS; \"http://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <http:\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[], [0]], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 16, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_A3DC"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    mem_cd_iconv", "test    eax, eax", "mov     ebx, eax", "js      short loc_A3E0"], ["push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     eax, ebx", "pop     retval", "retn"], ["mov~eax,ebx", "pop~retval", "retn"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmem_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_A3FE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_cd_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_A408"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_A42E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_A438"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 2, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 1, 2, 0, 0, 3, 1, 0, 0, 0, 0.011111111111111112, ["test    b, b", "mov     edi, 2000h", "cmovnz  rdi, b"], ["test~b,b", "mov~edi,<STR>", "cmovnz~rdi,b"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 4, 0.0, ["test    a, a", "mov     rcx, lcm_max", "jnz     short loc_A478"], ["test~a,a", "mov~rcx,lcm_max", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.11111111111111112, ["mov     r8, b", "mov     rax, a"], ["mov~r8,b", "mov~rax,a"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.07777777777777778, ["test    b, b", "jz      short loc_A464"], ["test~b,b", "jz~FOO"]], [0, 0, 4, 2, 0, 8, 1, 1, 4, -1, 0.17777777777777778, ["xor     edx, edx", "mov     rax, a", "div     n", "mov     n, b", "imul    r8, rax", "mov     r9, rax", "cmp     lcm, lcm_max", "ja      short loc_A464"], ["xor~edx,edx", "mov~rax,a", "div~,n", "mov~n,b", "imul~r8,rax", "mov~r9,rax", "cmp~lcm,lcm_max", "ja~FOO"]], [0, 0, 7, 1, 0, 4, 2, 1, 3, 1, 0.2111111111111111, ["xor     edx, edx", "div     n", "test    r, r", "jnz     short loc_A4B8"], ["xor~edx,edx", "div~,n", "test~r,r", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     rax, n", "mov     n, r", "jmp     short loc_A483"], ["mov~rax,n", "mov~n,r", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.005555555555555556, ["jmp     short loc_A46E"], ["jmp~FOO"]], [0, 0, 3, 1, 0, 5, 1, 1, 5, -1, 0.06666666666666667, ["xor     edx, edx", "mov     q, lcm", "div     b", "cmp     rax, q", "jnz     short loc_A464"], ["xor~edx,edx", "mov~q,lcm", "div~,b", "cmp~rax,q", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.08333333333333334, ["cmp     size, lcm_max", "cmovbe  lcm_max, size", "mov     r8, rcx"], ["cmp~size,lcm_max", "cmovbe~lcm_max,size", "mov~r8,rcx"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     rax, r8", "retn"], ["mov~rax,r8", "retn"]]], "func_feature": [0, 7, 7, 0, 11, 15, 1, 36, 0.06768, 0, 4], "succs": [[9], [0, 3], [5], [9, 2], [8, 9], [4, 6], [5], [10], [9, 7], [10], []], "fname": "buffer_lcm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 12, 2, 0, 6, 1, 1, 0, 0, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_A567"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_A520"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_A5BD"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_A5A8"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_A557"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965812, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_A557"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 12, 2, 1, 11, 1, 1, 6, 4, 0.03311965811965812, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_A5E0"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_A5D0"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_A5BD"], ["mov~<TAG>,i", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_A567"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [4, 7, 14, 1, 14, 20, 1, 76, 0.11538, 0, 8], "succs": [[2, 5], [0, 9], [12], [11, 13], [12, 5], [8, 4], [4], [4], [1, 10], [6, 7], [11], [], [11], [5]], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 1, 0, 0, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_A650"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [2, 0, 1, 0, 2, 18, 4, 3, 2, -1, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_A616"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[2], [0, 3], [4], [2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 9, 0, 0, 3, 2, 1, 0, 0, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_A6F1"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 1, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_A740"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,<STR>", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_A770"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS_0; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_A740"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [1, 1, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,<STR>", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [1, 1, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_A6C8"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_A6C8"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, aS; \", `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_A6F1"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[8], [0, 2], [5, 6], [8, 2], [2], [7], [], [], [9, 3], [10, 3], [8, 4]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_A7C6"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_A7D5"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 4, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A820"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_A82F"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_A841"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_A841"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[3, 0, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 10, 0.0, 3, 2], "succs": [[]], "fname": "get_version_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[3, 1, 37, 2, 4, 32, 0, 5, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r15d, esi", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, file", "sub     rsp, 48h", "mov     [rsp+78h+backup_type], esi", "call    _strlen", "mov     rdi, cs:simple_backup_suffix; s", "mov     r14, rax", "mov     [rsp+78h+filelen], rax", "lea     r12, [r14+1]", "call    _strlen", "lea     rdx, [rax+1]", "mov     eax, 9", "cmp     rdx, 9", "mov     [rsp+78h+simple_backup_suffix_size], rdx", "cmovnb  rax, simple_backup_suffix_size_0", "add     rax, r12", "mov     rdi, rax; n", "mov     [rsp+78h+ssize], rax", "call    xmalloc", "mov     rdx, r12; n", "mov     rsi, file; src", "mov     rdi, rax; dest", "mov     rbp, rax", "call    _memcpy", "cmp     r15d, 1", "jz      loc_AB20"], ["push~r15", "push~r14", "mov~r15d,esi", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,file", "sub~rsp,<STR>", "mov~[rsp+0],esi", "call~FOO", "mov~rdi,<TAG>", "mov~r14,rax", "mov~[rsp+0],rax", "lea~r12,[r14+0]", "call~FOO", "lea~rdx,[rax+0]", "mov~eax,0", "cmp~rdx,0", "mov~[rsp+0],rdx", "cmovnb~rax,simple_backup_suffix_size_0", "add~rax,r12", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,r12", "mov~rsi,file", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "cmp~r15d,0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 0, 10, 0.18393393393393392, ["cmp     qword ptr [rax], 0", "jz      short loc_A970"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 35, 1, 1, 6, 1, 2, 0, 11, 0.1478978978978979, ["add     edx, 1", "mov     rdi, r12; dirp", "mov     [rax], dl", "call    _readdir", "test    rax, rax", "jnz     loc_A981"], ["add~edx,0", "mov~rdi,r12", "mov~<TAG>,dl", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 35, 0, 1, 4, 1, 2, 0, 11, 0.22672672672672672, ["mov     rdi, r12; dirp", "call    _readdir", "test    rax, rax", "jz      loc_AB00"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 0, 4, 0.14564564564564564, ["cmp     byte ptr [rbx+r15+1], 0", "jnz     loc_A970"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 0, 5, 0.19519519519519518, ["cmp     cl, 7Eh ; '~'", "jnz     loc_A970"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 0, -1, 0.1996996996996997, ["mov     rdi, r12; dirp", "call    _closedir", "cmp     [rsp+78h+var_48], 1", "jz      short loc_AB3B"], ["mov~rdi,r12", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, -1, 0.06831831831831832, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, -1, 0.06043543543543543, ["cmp     [rsp+78h+var_48], 2", "jnz     short loc_AB57"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 0, 3, 0.13813813813813813, ["cmp     r15, [rsp+78h+var_50]", "ja      short loc_AA46"], ["cmp~r15,[rsp+0]", "ja~FOO"]], [0, 0, 35, 0, 1, 7, 0, 1, 0, 13, 0.024024024024024024, ["lea     rax, [rcx+rcx]", "mov     rdi, rbp; p", "mov     rsi, rax; n", "mov     [rsp+78h+ssize], rax", "call    xrealloc", "mov     r9, [rsp+78h+var_40]", "mov     rbp, rax"], ["lea~rax,<TAG>", "mov~rdi,rbp", "mov~rsi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rbp,rax"]], [1, 0, 35, 1, 0, 4, 0, 0, 0, 1, 0.03228228228228228, ["mov     eax, 2", "mov     [rsp+78h+var_40], r9", "mul     rcx", "jo      loc_ABDF"], ["mov~eax,0", "mov~[rsp+0],r9", "mul~,rcx", "jo~FOO"]], [3, 0, 6, 0, 2, 11, 1, 3, 0, -1, 0.11261261261261261, ["mov     esi, 2Eh ; '.'", "movzx   r14d, word ptr [rbx]", "mov     [rbx], si", "call    ___errno_location", "mov     esi, 3; name", "mov     dword ptr [rax], 0", "mov     rdi, s; path", "mov     r13, rax", "call    _pathconf", "test    rax, rax", "js      short loc_ABD0"], ["mov~esi,0", "movzx~r14d,<TAG>", "mov~<TAG>,si", "call~FOO", "mov~esi,0", "mov~<TAG>,0", "mov~rdi,s", "mov~r13,rax", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 7, 0, 2, 8, 0, 3, 0, -1, 0.14301801801801803, ["mov     rdi, s; name", "call    last_component", "mov     rdi, rax; name", "mov     rbx, rax", "call    base_len", "cmp     rax, 0Eh", "mov     r12, rax", "ja      short loc_AB70"], ["mov~rdi,s", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "cmp~rax,0", "mov~r12,rax", "ja~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 0, -1, 0.04954954954954955, ["cmp     [rsp+78h+backup_type], 2", "jnz     short loc_AB3B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [5, 0, 36, 2, 3, 23, 1, 4, 0, 13, 0.02027027027027027, ["mov     rdi, s; name", "call    last_component", "mov     file, rax", "sub     rax, s", "mov     rdi, rbx; name", "mov     [rsp+78h+var_70], rax", "call    base_len", "movzx   r13d, word ptr [rbx]", "mov     r8d, 2Eh ; '.'", "mov     filelen_0, rax", "mov     [rbx], r8w", "mov     rdi, s; name", "call    opendir_safer", "mov     [rsp+78h+var_50], 1", "mov     r12, rax", "mov     [rsp+78h+var_48], 2", "mov     [rbx], r13w", "add     rbx, r14", "test    rax, rax", "mov     dword ptr [rbx], 7E317E2Eh", "mov     byte ptr [rbx+4], 0", "lea     r13, [r14+4]", "jz      loc_AB16"], ["mov~rdi,s", "call~FOO", "mov~file,rax", "sub~rax,s", "mov~rdi,rbx", "mov~[rsp+0],rax", "call~FOO", "movzx~r13d,<TAG>", "mov~r8d,0", "mov~filelen_0,rax", "mov~<TAG>,r8w", "mov~rdi,s", "call~FOO", "mov~[rsp+0],0", "mov~r12,rax", "mov~[rsp+0],0", "mov~<TAG>,r13w", "add~rbx,r14", "test~rax,rax", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "lea~r13,[r14+0]", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 0, -1, 0.0259009009009009, ["mov     rdx, rax"], ["mov~rdx,rax"]], [0, 0, 4, 0, 0, 1, 0, 1, 0, -1, 0.0007507507507507507, ["jmp     short loc_AB9C"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 0, 4, 0.03303303303303303, ["mov     byte ptr [rsp+78h+var_40], r8b", "jnz     loc_A970"], ["mov~[yte ptr [rsp+0],r8b", "jnz~FOO"]], [1, 0, 5, 0, 0, 4, 1, 1, 0, -1, 0.04692192192192192, ["mov     ecx, [r13+0]", "mov     edx, 0FFh", "test    ecx, ecx", "jnz     short loc_AB9F"], ["mov~ecx,[r13+0]", "mov~edx,0", "test~ecx,ecx", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 0, -1, 0.028528528528528527, ["cmp     r12, rdx", "mov     [rbx], r14w", "jbe     short loc_AB57"], ["cmp~r12,rdx", "mov~<TAG>,r14w", "jbe~FOO"]], [0, 0, 35, 0, 1, 5, 0, 1, 0, 9, 0.17717717717717718, ["lea     rbx, [rax+13h]", "mov     rdi, rbx; s", "call    _strlen", "cmp     rax, r13", "jb      short loc_A970"], ["lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "cmp~rax,r13", "jb~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 0, -1, 0.01951951951951952, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 35, 0, 1, 8, 1, 2, 0, 8, 0.17492492492492492, ["mov     rax, [rsp+78h+var_70]", "lea     r15, [r14+2]", "mov     rsi, rbx; s2", "mov     rdx, r15; n", "lea     rdi, [rbp+rax+0]; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A970"], ["mov~rax,[rsp+0]", "lea~r15,[r14+0]", "mov~rsi,rbx", "mov~rdx,r15", "lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 0, 1, 0, -1, 0.012012012012012012, ["mov     rax, [rsp+78h+filelen]", "mov     rdx, [rsp+78h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax+0]; dest", "call    _memcpy"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,[s+0]", "call~FOO"]], [0, 0, 35, 0, 1, 8, 1, 2, 0, 3, 0.006756756756756757, ["mov     rax, [rsp+78h+filelen]", "mov     rdx, r15; n", "mov     rsi, rbx; s2", "lea     rdi, [rbp+rax+2]; s1", "call    _memcmp", "test    eax, eax", "movzx   r8d, byte ptr [rsp+78h+var_40]", "jg      loc_A970"], ["mov~rax,[rsp+0]", "mov~rdx,r15", "mov~rsi,rbx", "lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rsp+0]", "jg~FOO"]], [1, 0, 35, 1, 0, 5, 0, 1, 0, 7, 0.17192192192192193, ["add     rbx, r15", "movzx   eax, byte ptr [rbx]", "lea     edx, [rax-31h]", "cmp     dl, 8", "ja      short loc_A970"], ["add~rbx,r15", "movzx~eax,<TAG>", "lea~edx,[rax-31h]+0]", "cmp~dl,0", "ja~FOO"]], [2, 0, 1, 2, 0, 9, 0, 1, 0, -1, 0.0, ["mov     rax, [rsp+78h+filelen]", "lea     rcx, [rdx-1]", "add     rax, s", "sub     rax, rbx", "cmp     rax, rdx", "cmovnb  rax, rcx", "mov     byte ptr [rbx+rax], 7Eh ; '~'", "mov     byte ptr [rbx+rax+1], 0", "jmp     short loc_AB57"], ["mov~rax,[rsp+0]", "lea~rcx,[rdx-1]+0]", "add~rax,s", "sub~rax,rbx", "cmp~rax,rdx", "cmovnb~rax,rcx", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [3, 0, 35, 2, 1, 15, 0, 2, 0, 12, 0.12087087087087087, ["mov     rax, [rsp+78h+filelen]", "lea     rdx, [r15+2]; n", "mov     edi, 7E2Eh", "mov     rsi, rbx; src", "add     rax, rbp", "lea     rcx, [rax+r9+2]", "mov     [rax], di", "mov     byte ptr [rax+2], 30h ; '0'", "mov     rdi, rcx; dest", "call    _memcpy", "add     r15, rax", "movzx   edx, byte ptr [r15-1]", "lea     rax, [r15-1]", "cmp     dl, 39h ; '9'", "jnz     short loc_AAE7"], ["mov~rax,[rsp+0]", "lea~rdx,[r15+0]", "mov~edi,0", "mov~rsi,rbx", "add~rax,rbp", "lea~rcx,[rax+0]", "mov~<TAG>,di", "mov~[yte ptr [rax+0],0", "mov~rdi,rcx", "call~FOO", "add~r15,rax", "movzx~edx,[yte ptr [r15-1]+0]", "lea~rax,[r15-1]+0]", "cmp~dl,0", "jnz~FOO"]], [0, 0, 35, 0, 0, 9, 0, 0, 0, 2, 0.1111111111111111, ["movzx   esi, r8b", "movzx   r9d, r8b", "mov     [rsp+78h+var_48], esi", "mov     rsi, [rsp+78h+filelen]", "lea     rax, [r15+r9]", "mov     [rsp+78h+var_50], rax", "lea     rcx, [rax+rsi+3]", "cmp     rcx, [rsp+78h+ssize]", "jb      short loc_AA9B"], ["movzx~esi,r8b", "movzx~r9d,r8b", "mov~[rsp+0],esi", "mov~rsi,[rsp+0]", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,[rax+0]", "cmp~rcx,[rsp+0]", "jb~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 0, 13, 0.015765765765765764, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [4, 0, 35, 1, 0, 8, 0, 1, 0, 6, 0.16816816816816815, ["cmp     al, 39h ; '9'", "movsx   eax, byte ptr [rbx+1]", "mov     r15d, 1", "setz    r8b", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_A9FC"], ["cmp~al,0", "movsx~eax,[yte ptr [rbx+0]", "mov~r15d,0", "setz~r8b", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 0, 7, 0.015765765765765764, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [3, 0, 35, 1, 0, 5, 0, 1, 0, 12, 0.024774774774774775, ["mov     byte ptr [rax], 30h ; '0'", "sub     rax, 1", "movzx   edx, byte ptr [rax]", "cmp     dl, 39h ; '9'", "jz      short loc_AAD8"], ["mov~<TAG>,0", "sub~rax,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 0, -1, 0.0, ["add     rsp, 48h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 35, 0, 0, 1, 0, 0, 0, 12, 0.036036036036036036, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [4, 0, 35, 2, 0, 9, 1, 0, 0, 6, 0.024774774774774775, ["cmp     cl, 39h ; '9'", "setz    al", "add     r15, 1", "and     r8d, eax", "movsx   eax, byte ptr [rbx+r15]", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_A9E0"], ["cmp~cl,0", "setz~al", "add~r15,0", "and~r8d,eax", "movsx~eax,<TAG>", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]]], "func_feature": [21, 8, 44, 4, 38, 62, 2, 223, 0.07796, 1, 16], "succs": [[24, 15], [3, 21], [1, 7], [1, 6], [9, 3], [3, 4], [8, 13], [6], [35, 14], [18, 29], [28], [33, 10], [16, 19], [35, 12], [13, 22], [36, 14], [20], [16], [25, 3], [17, 20], [35, 27], [3, 23], [24], [26, 3], [13], [3, 29], [3, 31], [35], [2, 30], [11, 28], [34], [32, 5], [37], [], [34, 2], [], [3], [37, 5]], "fname": "find_backup_file_name", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [version], 0", "jz      short loc_AC00"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    version, version", "jz      short loc_AC00"], ["test~version,version", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.16666666666666666, ["jmp     get_version_0"], ["jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 2", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 5, 0, 7, 0.06667, 0, 0], "succs": [[2, 3], [0, 3], [4], [], []], "fname": "get_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.11904761904761904, ["jmp     get_version_0"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.047619047619047616, ["cmp     byte ptr [version], 0", "jnz     short loc_AC42"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.09523809523809523, ["lea     rdi, asc_148FE; \"$\"", "mov     rsi, rax; version", "add     rsp, 8"], ["lea~rdi,<TAG>", "mov~rsi,rax", "add~rsp,0"]], [1, 0, 5, 1, 1, 5, 1, 2, 1, 1, 0.14285714285714285, ["lea     context, aVersionControl; \"VERSION_CONTROL\"", "sub     rsp, 8", "call    _getenv", "test    rax, rax", "jz      short loc_AC50"], ["lea~context,<TAG>", "sub~rsp,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    version, version", "jz      short loc_AC1A"], ["test~version,version", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 4, 0, 0, 2, 0, 1, 2, 1, 0.11904761904761904, ["cmp     byte ptr [rax], 0", "jz      short loc_AC50"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, 2", "add     rsp, 8", "retn"], ["mov~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 6, 0, 8, 10, 1, 18, 0.06548, 2, 3], "succs": [[5], [0, 3], [0], [6, 7], [1, 3], [], [2, 7], []], "fname": "xget_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_ACBA"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.16666666666666669, ["test    sil, sil", "jz      short loc_AC9A"], ["test~sil,sil", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_ACA5"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_ACBA"], ["test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_AC90"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_ACA5"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_AC7C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_AC70"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 12, 30, 0.10505, 0, 3], "succs": [[10, 5], [0, 2], [0], [5], [10, 3], [1, 6], [10, 5], [8, 4], [9], [9, 4], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 5, 0, 0, 2, 0, 0, 0, 0, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, 3, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_ACE0"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_AD00"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_ACE8"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_ACDA"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 6, 23, 0.07738, 0, 0], "succs": [[3], [0, 7], [], [1, 2], [3, 6], [4, 6], [], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_AE10"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_AD78"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_AD78"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 3, 2, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    rpl_fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_ADFA"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 1, 3, 0.030303030303030304, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; fp", "xor     esi, esi; offset", "mov     edx, 1; whence", "call    rpl_fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_AD58"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_ADC3"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 0, 3, 0.0, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; fp", "push    r12", "push    rbp", "push    rbx", "call    freadahead", "test    rax, rax", "jnz     loc_ADD8"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 64, 0.03205, 6, 0], "succs": [[12, 6], [0, 9], [0, 10], [0], [2, 3], [2, 4], [11], [1, 5], [], [8], [8], [], [11]], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 8, 1, 1, 7, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_AE7C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 0, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_AED2"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 0, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_AE93"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 0, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 0, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name_0; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_AEDD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 7, 0, 1, 4, 0, 2, 0, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_AE93"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 0, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_AED2"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 3, 46, 0.03968, 8, 2], "succs": [[1, 6], [5, 7], [1, 4], [7], [8, 3], [], [2, 4], [], [7]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mdir_name", "test    result, result", "jz      short loc_AF13"], ["sub~rsp,0", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 7, 2, 1, 12, 1, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "xor     ebp, ebp", "mov     rbx, file", "sub     rsp, 8", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_AF70"], ["push~rbp", "push~rbx", "xor~ebp,ebp", "mov~rbx,file", "sub~rsp,0", "cmp~<TAG>,0", "setz~bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 0, -1, 0.19047619047619047, ["cmp     prefix_length, length", "jnz     short loc_AF50"], ["cmp~prefix_length,length", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 0, 2, 0.11904761904761904, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rdx, [length-1]", "jz      short loc_AF5E"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rdx,[length-1]+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, -1, 0.023809523809523808, ["mov     length, rax"], ["mov~length,rax"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     rax, length", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rax,length", "pop~file", "pop~prefix_length", "retn"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, -1, 0.07142857142857142, ["cmp     byte ptr [file+length-1], 2Fh ; '/'", "lea     rax, [length-1]", "jnz     short loc_AF63"], ["cmp~[yte ptr [file+0],0", "lea~rax,[length-1]+0]", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0.023809523809523808, ["jmp     short loc_AF70"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rdx, length", "mov     rax, rdx", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rdx,length", "mov~rax,rdx", "pop~file", "pop~prefix_length", "retn"]]], "func_feature": [1, 1, 5, 0, 8, 10, 2, 33, 0.05357, 0, 4], "succs": [[2, 7], [4, 5], [1, 6], [1], [], [3, 4], [7], []], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 1, 7, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, length; n", "mov     rsi, file; src", "mov     rdi, dir; dest", "call    _memcpy", "test    length, length", "mov     rcx, rax", "jz      short loc_AFD0"], ["mov~rdx,length", "mov~rsi,file", "mov~rdi,dir", "call~FOO", "test~length,length", "mov~rcx,rax", "jz~FOO"]], [1, 0, 4, 1, 2, 14, 2, 3, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    dir_len", "test    rax, rax", "mov     rbx, rax", "setz    al", "movzx   eax, al", "lea     rdi, [length+rax+1]; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      short loc_AFC6"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "setz~al", "movzx~eax,al", "lea~rdi,[length+0]", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.0, ["mov     byte ptr [rax], 2Eh ; '.'", "mov     ebx, 1", "jmp     short loc_AFC2"], ["mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.16666666666666666, ["mov     byte ptr [rcx+length], 0"], ["mov~<TAG>,0"]], [1, 0, 0, 1, 0, 5, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, rcx", "pop     length", "pop     file", "retn"], ["add~rsp,0", "mov~rax,rcx", "pop~length", "pop~file", "retn"]]], "func_feature": [3, 3, 6, 0, 5, 6, 2, 30, 0.06667, 0, 2], "succs": [[2, 3], [0, 4], [3], [4], []], "fname": "mdir_name", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 1, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 3, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_AFFA"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 1, 2, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_AFFA"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_B008"], ["test~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 1, 19, 0.05833, 0, 0], "succs": [[], [0], [0], [1, 4], [1, 5], [1, 2]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 14, 0, 0, 3, 0, 1, 0, 0, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_B090"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_B090"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_B0D8"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_B170"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [1, 1, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_B090"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [1, 1, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_B090"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 1, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,<STR>", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [1, 1, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_B090"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_B180"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_B090"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_B198"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_B11D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]]], "func_feature": [0, 25, 11, 0, 16, 23, 2, 110, 0.07381, 0, 12], "succs": [[10, 3], [0, 3], [11], [2, 12], [3, 7], [3, 4], [3], [3, 6], [], [8, 13], [3, 5], [14, 15], [11], [], [9], [9]], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "jmp     strmode"], ["mov~edi,[statp+0]", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "filemodestring", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_B1D3"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 4, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     byte ptr [dirbase+dirbaselen-1], 2Fh ; '/'", "setnz   bl", "movzx   ebx, bl"], ["cmp~[yte ptr [dirbase+0],0", "setnz~bl", "movzx~ebx,bl"]], [0, 1, 9, 3, 2, 20, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r14, dir", "push    rbp", "push    rbx", "mov     r12, abase", "sub     rsp, 18h", "call    last_component", "mov     r13, rax", "mov     rdi, dirbase; name", "mov     rbp, r13", "sub     rbp, dir", "call    base_len", "add     rbp, rax", "test    rax, rax", "mov     rbx, rax", "jz      short loc_B224"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r14,dir", "push~rbp", "push~rbx", "mov~r12,abase", "sub~rsp,<STR>", "call~FOO", "mov~r13,rax", "mov~rdi,dirbase", "mov~rbp,r13", "sub~rbp,dir", "call~FOO", "add~rbp,rax", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, 0, 0.0, ["jmp     short loc_B2A0"], ["jmp~FOO"]], [2, 0, 7, 1, 0, 3, 0, 1, 2, 1, 0.1111111111111111, ["add     r12, 1", "cmp     byte ptr [r12], 2Fh ; '/'", "jnz     short loc_B231"], ["add~r12,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 1, 2, 0.19444444444444442, ["movzx   eax, byte ptr [abase]", "cmp     al, 2Fh ; '/'", "mov     [rsp+48h+var_39], al", "jz      short loc_B2A0"], ["movzx~eax,<TAG>", "cmp~al,0", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 3, 0, 1, 8, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "test    base_in_result, base_in_result", "mov     byte ptr [rax], 2Fh ; '/'", "lea     rdi, [rax+rbx]; dest", "jz      short loc_B27F"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "test~base_in_result,base_in_result", "mov~<TAG>,0", "lea~rdi,<TAG>", "jz~FOO"]], [0, 0, 4, 1, 2, 9, 1, 3, 2, -1, 0.2777777777777778, ["mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rbx+dirlen+1]", "mov     [rsp+48h+baselen], rax", "add     rdi, baselen_0; size", "call    _malloc", "test    rax, rax", "mov     dirbase, rax", "jz      short loc_B28E"], ["mov~rdi,r12", "call~FOO", "lea~rdi,[rbx+0]", "mov~<TAG>,rax", "add~rdi,baselen_0", "call~FOO", "test~rax,rax", "mov~dirbase,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, -1, 0.027777777777777776, ["mov     rdx, [rsp+48h+baselen]; n", "mov     rsi, r12; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,<TAG>", "mov~rsi,r12", "call~FOO", "mov~<TAG>,0"]], [1, 0, 2, 1, 0, 6, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "cmp     [rsp+48h+var_39], 2Fh ; '/'", "mov     rcx, p", "setz    al", "sub     rcx, rax", "mov     [base_in_result], rcx"], ["xor~eax,eax", "cmp~[rsp+0],0", "mov~rcx,p", "setz~al", "sub~rcx,rax", "mov~<TAG>,rcx"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     rbx", "pop     dirlen", "pop     r12", "pop     p_concat", "pop     dir", "pop     base_in_result", "retn"], ["add~rsp,<STR>", "mov~rax,p_concat", "pop~rbx", "pop~dirlen", "pop~r12", "pop~p_concat", "pop~dir", "pop~base_in_result", "retn"]]], "func_feature": [6, 4, 12, 0, 10, 14, 2, 67, 0.07778, 0, 7], "succs": [[4], [0, 4], [3], [2, 6], [3, 6], [8, 7], [9, 5], [9], [7], []], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     fp", "pop     whence", "pop     offset", "retn"], ["pop~fp", "pop~whence", "pop~offset", "retn"]], [1, 0, 1, 0, 0, 2, 1, 1, 5, 0, 0.03156565656565656, ["or      eax, 0FFFFFFFFh", "jmp     short loc_B33C"], ["or~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 2, 0, 5, -1, 0.021464646464646464, ["and     dword ptr [fp], 0FFFFFFEFh", "xor     eax, eax"], ["and~<TAG>,0", "xor~eax,eax"]], [0, 0, 12, 0, 0, 9, 0, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "mov     r12, offset", "push    rbx", "mov     rax, [fp+8]", "mov     rbx, fp", "cmp     [fp+10h], rax", "mov     ebp, edx", "jz      short loc_B2E0"], ["push~r12", "push~rbp", "mov~r12,offset", "push~rbx", "mov~rax,[fp+0]", "mov~rbx,fp", "cmp~[fp+0],rax", "mov~ebp,edx", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 4, 0.06818181818181818, ["mov     rax, [rdi+20h]", "cmp     [rdi+28h], rax", "jnz     short loc_B2C6"], ["mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 7, 0, 1, 1, -1, 0.05303030303030303, ["mov     edx, ebp; whence", "mov     rsi, offset; off", "mov     rdi, fp; stream", "pop     fp", "pop     whence", "pop     offset", "jmp     _fseeko"], ["mov~edx,ebp", "mov~rsi,offset", "mov~rdi,fp", "pop~fp", "pop~whence", "pop~offset", "jmp~FOO"]], [2, 0, 5, 0, 2, 7, 1, 3, 5, 1, 0.07449494949494949, ["call    _fileno", "xor     esi, esi; offset", "mov     edx, 2; whence", "mov     edi, eax; stream", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_B341"], ["call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 4, 2, 0.07575757575757576, ["test    offset, offset", "jle     short loc_B320"], ["test~offset,offset", "jle~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 3, 0.12121212121212122, ["cmp     qword ptr [rdi+48h], 0", "jnz     short loc_B2C6"], ["cmp~[word ptr [rdi+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 6, -1, 0.045454545454545456, ["and     dword ptr [fp], 0FFFFFFEFh", "jmp     short loc_B2C6"], ["and~<TAG>,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.1590909090909091, ["cmp     edx, 2", "jnz     short loc_B320"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 3, 0, 2, 7, 0, 3, 4, 1, 0.10732323232323232, ["call    _fileno", "mov     edx, ebp; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_B341"], ["call~FOO", "mov~edx,ebp", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]]], "func_feature": [4, 6, 14, 0, 13, 18, 2, 49, 0.05828, 0, 0], "succs": [[], [0], [0], [4, 6], [9, 6], [], [5], [1, 10], [12, 7], [11, 6], [6], [8, 12], [1, 2]], "fname": "rpl_fseeko", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, candidate", "retn"], ["mov~rax,candidate", "retn"]], [5, 0, 9, 0, 0, 7, 1, 1, 0, 0, 0.0, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r9, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      candidate, 1", "cmp     candidate, 0FFFFFFFFFFFFFFFFh", "jz      short loc_B3DF"], ["cmp~candidate,0", "mov~eax,0", "mov~r9,0", "cmovb~candidate,rax", "or~candidate,0", "cmp~candidate,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, 0, 0.125, ["test    rax, rax", "jnz     short loc_B3DF"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 0, 0.22916666666666666, ["add     candidate, 2", "cmp     candidate, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_B378"], ["add~candidate,0", "cmp~candidate,0", "jnz~FOO"]], [3, 0, 8, 0, 0, 4, 0, 1, 4, 0, 0.1736111111111111, ["mov     r8d, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_B3B9"], ["mov~r8d,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, 0, 0.2569444444444444, ["test    rcx, rcx", "jz      short loc_B3D5"], ["test~rcx,rcx", "jz~FOO"]], [1, 0, 8, 3, 0, 8, 1, 0, 5, 0, 0.1875, ["add     rcx, 2", "xor     edx, edx", "mov     rax, candidate", "div     rcx", "add     rsi, r8", "cmp     rsi, candidate", "mov     rax, rdx", "jb      short loc_B3B0"], ["add~rcx,0", "xor~edx,edx", "mov~rax,candidate", "div~,rcx", "add~rsi,r8", "cmp~rsi,candidate", "mov~rax,rdx", "jb~FOO"]], [1, 0, 8, 1, 0, 3, 1, 1, 6, 0, 0.048611111111111105, ["add     r8, 8", "test    rdx, rdx", "jz      short loc_B3D5"], ["add~r8,0", "test~rdx,rdx", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 1, 0, 0.09722222222222221, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 8, 2, 0, 10, 0, 0, 2, 0, 0.3819444444444444, ["mov     rax, candidate", "mov     rcx, candidate", "mul     r9", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     candidate, 9", "mov     rax, rcx", "jbe     short loc_B3D0"], ["mov~rax,candidate", "mov~rcx,candidate", "mul~,r9", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~candidate,0", "mov~rax,rcx", "jbe~FOO"]]], "func_feature": [0, 5, 6, 0, 10, 16, 2, 42, 0.15, 0, 7], "succs": [[], [0, 8], [0, 3], [0, 9], [6], [3, 4], [2, 7], [3, 6], [9], [2, 5]], "fname": "next_prime", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 6, 1, 0, 0, 0, 0.0, ["mov     rax, data", "xor     edx, edx", "ror     rax, 3", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "xor~edx,edx", "ror~rax,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0.013157894736842105, ["mov     rsi, [bucket+0]"], ["mov~rsi,[bucket+0]"]], [0, 0, 16, 0, 1, 4, 1, 2, 3, -1, 0.08157894736842106, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_B4E0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 6, -1, 0.060526315789473685, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_B480"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 5, -1, 0.09473684210526316, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_B499"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 8, -1, 0.013157894736842105, ["mov     rsi, [rax]", "cmp     rsi, entry", "jz      short loc_B4AB"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 2, 1, 17, 0, 1, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, table", "push    r13", "push    r12", "mov     r12, entry", "push    rbp", "mov     rbp, [table]", "mov     r15, bucket_head", "mov     entry, [table+10h]", "mov     r13d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     loc_B53F"], ["push~r15", "push~r14", "mov~r14,table", "push~r13", "push~r12", "mov~r12,entry", "push~rbp", "mov~rbp,<TAG>", "mov~r15,bucket_head", "mov~entry,[table+0]", "mov~r13d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["pop     rbp", "mov     rax, rsi", "pop     entry", "pop     r13", "pop     table", "pop     bucket_head", "retn"], ["pop~rbp", "mov~rax,rsi", "pop~entry", "pop~r13", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 7, -1, 0.04736842105263158, ["test    r13b, r13b", "jz      short loc_B4CB"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.05263157894736842, ["test    r13b, r13b", "jz      short loc_B4CB"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.002631578947368421, ["mov     qword ptr [bucket+0], 0", "jmp     short loc_B4CB"], ["mov~[word ptr [bucket+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 8, -1, 0.0, ["mov     rdx, [rax+8]", "mov     [cursor+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["mov~rdx,[rax+0]", "mov~[cursor+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 17, 0, 0, 2, 0, 1, 2, -1, 0.08421052631578947, ["cmp     rsi, entry", "jz      loc_B4E4"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 7, -1, 0.007894736842105263, ["mov     rax, [cursor+8]", "mov     rsi, [rax]"], ["mov~rax,[cursor+0]", "mov~rsi,<TAG>"]], [0, 0, 8, 0, 0, 4, 1, 1, 7, -1, 0.02631578947368421, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_B530"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 18, 0, 0, 4, 1, 1, 1, -1, 0.04736842105263158, ["mov     [bucket_head], bucket", "mov     rsi, [bucket+0]", "test    rsi, rsi", "jz      loc_B530"], ["mov~<TAG>,bucket", "mov~rsi,[bucket+0]", "test~rsi,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 4, -1, 0.08947368421052632, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_B530"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.031578947368421054, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      short loc_B520"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     esi, esi", "pop     rbp", "mov     rax, rsi", "pop     entry", "pop     r13", "pop     table", "pop     bucket_head", "retn"], ["xor~esi,esi", "pop~rbp", "mov~rax,rsi", "pop~entry", "pop~r13", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 6, -1, 0.03684210526315789, ["jmp     short loc_B4AB"], ["jmp~FOO"]], [1, 0, 0, 0, 0, 13, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket+0], xmm0", "mov     qword ptr [next], 0", "mov     rdx, [table+48h]", "mov     [next+8], rdx", "mov     [table+48h], next", "mov     next, rsi", "pop     bucket", "pop     entry", "pop     r13", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~[mmword ptr [bucket+0],xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[next+0],rdx", "mov~[table+0],next", "mov~next,rsi", "pop~bucket", "pop~entry", "pop~r13", "pop~table", "pop~bucket_head", "retn"]]], "func_feature": [4, 9, 17, 0, 21, 29, 3, 92, 0.03283, 0, 2], "succs": [[9], [0, 16], [13, 14], [2, 19], [8, 2], [], [5, 15], [], [11, 7], [17, 7], [7], [7], [1, 9], [8], [18, 4], [18, 12], [18, 3], [10, 20], [], [8], []], "fname": "hash_find_entry", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 10, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     tuning, [rdi]", "lea     rcx, default_tuning", "mov     eax, 1", "cmp     tuning, rcx", "jz      short locret_B5C5"], ["mov~tuning,<TAG>", "lea~rcx,<TAG>", "mov~eax,0", "cmp~tuning,rcx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.07222222222222223, ["mov     [rdi], rcx", "xor     eax, eax"], ["mov~<TAG>,rcx", "xor~eax,eax"]], [0, 0, 9, 0, 0, 3, 0, 0, 0, 2, 0.08888888888888889, ["movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_14A14", "jbe     short loc_B5C0"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 0, 2, 0.13333333333333333, ["movss   xmm1, cs:dword_14A18", "ucomiss xmm1, xmm0", "jbe     short loc_B5C0"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 0, 2, 0.16666666666666669, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_14A1C", "jbe     short loc_B5C0"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 0, 2, 0.17777777777777778, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_14A20", "jb      short loc_B5C0"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 0, 2, 0.16666666666666669, ["addss   xmm1, cs:dword_14A14", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_B5C0"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 0, 2, 0.13333333333333333, ["movss   xmm3, cs:dword_14A24", "ucomiss xmm3, xmm2", "jb      short loc_B5C0"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 0, 2, 0.011111111111111112, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333334, ["ucomiss xmm0, xmm1", "ja      short locret_B5C5"], ["ucomiss~xmm0,xmm1", "ja~FOO"]]], "func_feature": [0, 1, 2, 0, 11, 18, 4, 30, 0.09394, 6, 0], "succs": [[9, 2], [9], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 10], [1], [], [8, 9]], "fname": "check_tuning", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 1, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     bucket", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~bucket", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 1, 22, 1, 0, 11, 0, 0, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r12, [src]", "cmp     bucket, [src+8]", "mov     [rsp+48h+safe], dl", "jnb     loc_B6F2"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r12,<TAG>", "cmp~bucket,[src+0]", "mov~[rsp+0],dl", "jnb~FOO"]], [1, 0, 21, 1, 0, 3, 0, 1, 3, 4, 0.3658008658008658, ["add     bucket, 10h", "cmp     [src+8], bucket", "ja      loc_B5F8"], ["add~bucket,0", "cmp~[src+0],bucket", "ja~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 3, 2, 0.4069264069264069, ["mov     rbp, [bucket+8]", "test    cursor, cursor", "jnz     short loc_B62C"], ["mov~rbp,[bucket+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 2, 3, 0.4155844155844156, ["mov     rbx, [bucket]", "test    rbx, rbx", "jz      loc_B6E4"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 1, 4, 3, 0.21212121212121213, ["jmp     short loc_B681"], ["jmp~FOO"]], [1, 0, 21, 1, 0, 3, 0, 1, 8, 6, 0.08225108225108226, ["mov     [new_bucket+0], rbx", "add     qword ptr [dst+18h], 1", "jmp     short loc_B6D7"], ["mov~[new_bucket+0],rbx", "add~[word ptr [dst+0],0", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 7, 7, 0.2727272727272727, ["cmp     qword ptr [new_bucket+0], 0", "jz      short loc_B710"], ["cmp~[word ptr [new_bucket+0],0", "jz~FOO"]], [1, 0, 21, 0, 1, 4, 1, 2, 9, 7, 0.07683982683982683, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_B6C8"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 8, 8, 0.15151515151515152, ["mov     rax, [dst+48h]", "test    rax, rax", "jz      short loc_B71B"], ["mov~rax,[dst+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 21, 2, 1, 8, 0, 1, 6, 1, 0.2792207792207792, ["mov     cursor, [dst]", "mov     rsi, [dst+10h]", "mov     rdi, rbx", "call    qword ptr [dst+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [dst+8], new_bucket", "jbe     loc_B73B"], ["mov~cursor,<TAG>", "mov~rsi,[dst+0]", "mov~rdi,rbx", "call~[word ptr [dst+0]", "shl~rax,0", "add~rbp,rax", "cmp~[dst+0],new_bucket", "jbe~FOO"]], [2, 0, 21, 0, 0, 3, 0, 1, 5, 2, 0.3874458874458874, ["cmp     [rsp+48h+safe], 0", "mov     qword ptr [bucket+8], 0", "jnz     short loc_B6E4"], ["cmp~[rsp+0],0", "mov~[word ptr [bucket+0],0", "jnz~FOO"]], [0, 1, 0, 1, 0, 9, 1, 0, 10, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     rbx", "pop     new_bucket", "pop     bucket", "pop     src", "pop     r14", "pop     dst", "retn"], ["add~rsp,<STR>", "xor~eax,eax", "pop~rbx", "pop~new_bucket", "pop~bucket", "pop~src", "pop~r14", "pop~dst", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 21, 2, 1, 9, 0, 1, 4, 1, 0.1774891774891775, ["mov     r14, [cursor+0]", "mov     rbx, [dst]", "mov     rsi, [dst+10h]", "mov     rdi, data", "call    qword ptr [dst+30h]", "shl     rax, 4", "add     rax, rbx", "cmp     [dst+8], new_bucket", "jbe     loc_B73B"], ["mov~r14,[cursor+0]", "mov~rbx,<TAG>", "mov~rsi,[dst+0]", "mov~rdi,data", "call~[word ptr [dst+0]", "shl~rax,0", "add~rax,rbx", "cmp~[dst+0],new_bucket", "jbe~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 9, 7, 0.03571428571428571, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [2, 0, 21, 1, 0, 9, 1, 1, 6, 2, 0.05303030303030303, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "test    next, next", "mov     qword ptr [cursor+0], 0", "mov     new_bucket, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor", "mov     rbp, next", "jnz     short loc_B62C"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "test~next,next", "mov~[word ptr [cursor+0],0", "mov~new_bucket,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor", "mov~rbp,next", "jnz~FOO"]], [0, 0, 21, 0, 0, 6, 1, 1, 6, 2, 0.05303030303030303, ["mov     rdx, [new_bucket+8]", "test    next, next", "mov     [cursor+8], rdx", "mov     [new_bucket+8], cursor", "mov     rbp, next", "jz      short loc_B67D"], ["mov~rdx,[new_bucket+0]", "test~next,next", "mov~[cursor+0],rdx", "mov~[new_bucket+0],cursor", "mov~rbp,next", "jz~FOO"]], [0, 0, 21, 0, 0, 4, 0, 0, 10, 6, 0.11471861471861472, ["mov     rdx, [new_bucket+8]", "mov     [rax], rbx", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,rbx", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax"]], [1, 0, 21, 0, 0, 3, 0, 1, 5, 3, 0.14502164502164502, ["cmp     qword ptr [new_bucket], 0", "mov     rcx, [cursor+8]", "jnz     short loc_B618"], ["cmp~<TAG>,0", "mov~rcx,[cursor+0]", "jnz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 7, 3, 0.12987012987012986, ["mov     rbx, [bucket]"], ["mov~rbx,<TAG>"]], [2, 0, 21, 1, 0, 2, 0, 0, 9, 5, 0.24242424242424243, ["mov     qword ptr [bucket], 0", "sub     qword ptr [src+18h], 1"], ["mov~<TAG>,0", "sub~[word ptr [src+0],0"]], [0, 0, 21, 0, 0, 3, 0, 0, 1, 4, 0.04329004329004329, ["mov     r15, dst", "mov     r13, src", "nop     dword ptr [rax]"], ["mov~r15,dst", "mov~r13,src", "nop~<TAG>"]]], "func_feature": [4, 7, 16, 0, 23, 33, 3, 102, 0.15848, 0, 11], "succs": [[], [0, 22], [0, 4], [5, 14], [2, 3], [11], [21], [9, 6], [18, 12], [8, 15], [13, 7], [10, 2], [], [], [19, 13], [18], [20, 14], [20, 14], [21], [16, 17], [11], [2], [4]], "fname": "transfer_entries", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 7, 1, 0, 4, 1, 1, 0, 0, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_B798"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_B7AC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_B780"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [1, 0, 7, 0, 0, 4, 1, 1, 3, -1, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_B7A5"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_B7B7"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[0, 5], [0], [3, 6], [2, 7], [2], [3], [1, 5], [], [], [8, 4]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_B7D0"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_B7FD"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_B7FD"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_B7F0"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_B810"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_B806"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 5], [0, 2], [0, 4], [0, 3], [3], [8, 7], [1, 5], [], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_B875"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_B87C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_B850"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_B885"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_14A38", "jns     short loc_B8CF"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_14A38", "js      short loc_B949"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_B920"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_B8D8"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 5, 5, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_B868"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[], [0], [5, 6], [2, 4], [3, 12], [4], [14], [11, 12], [1], [8, 13], [8, 13], [3], [9, 10], [1], [5, 14]], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 7, 0, 0, 3, 1, 1, 0, 0, 0.1, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_B9A8"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 3, -1, 0.15555555555555556, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_B9D0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 3, -1, 0.03333333333333333, ["xor     esi, esi"], ["xor~esi,esi"]], [0, 0, 2, 0, 0, 1, 0, 1, 2, -1, 0.022222222222222223, ["jmp     short loc_B9C5"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.044444444444444446, ["mov     rsi, [cursor+0]"], ["mov~rsi,[cursor+0]"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.18888888888888888, ["cmp     rsi, entry", "jz      short loc_B9C7"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 1, -1, 0.08888888888888889, ["mov     rsi, [bucket+0]", "test    rsi, rsi", "jnz     short loc_B9AC"], ["mov~rsi,[bucket+0]", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 10, 2, 1, 13, 0, 1, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, table", "push    rbp", "mov     rbp, [table]", "mov     r12, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     short loc_B9DD"], ["push~r13", "push~r12", "mov~r13,table", "push~rbp", "mov~rbp,<TAG>", "mov~r12,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["pop     rbp", "mov     rax, rsi", "pop     entry", "pop     table", "retn"], ["pop~rbp", "mov~rax,rsi", "pop~entry", "pop~table", "retn"]], [0, 0, 0, 0, 0, 6, 0, 0, 4, -1, 0.0, ["mov     rsi, [cursor+0]", "pop     cursor", "pop     entry", "mov     rax, rsi", "pop     table", "retn"], ["mov~rsi,[cursor+0]", "pop~cursor", "pop~entry", "mov~rax,rsi", "pop~table", "retn"]]], "func_feature": [3, 4, 8, 0, 11, 13, 2, 40, 0.05758, 0, 2], "succs": [[2, 4], [0, 10], [9], [2], [5], [1, 9], [3, 5], [], [6, 7], [], []], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 7, 0, 0, 4, 0, 0, 0, 0, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_BA28"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_BA23"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_BA26"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 6, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_BA10"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 4, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_BA28"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[8, 4], [0, 2], [], [], [3, 7], [], [9, 5], [9], [], [8, 6]], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.05454545454545454, ["test    rax, rax", "jz      short loc_BAA8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 4, -1, 0.01818181818181818, ["mov     rcx, [cursor]", "mov     cursor, [cursor+8]", "cmp     rcx, entry", "jnz     short loc_BA7F"], ["mov~rcx,<TAG>", "mov~cursor,[cursor+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, -1, 0.07272727272727272, ["mov     rcx, [rax]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_BA90"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.03636363636363636, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_BA98"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 1, 2, -1, 0.14545454545454545, ["add     bucket, 10h", "cmp     rsi, bucket", "ja      short loc_BAA0"], ["add~bucket,0", "cmp~rsi,bucket", "ja~FOO"]], [1, 0, 11, 1, 1, 14, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbx, [table]", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rsi, [table+8]", "shl     rax, 4", "lea     rdx, [rbx+rax]", "cmp     rsi, bucket", "jbe     short loc_BAB8"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbx,<TAG>", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rsi,[table+0]", "shl~rax,0", "lea~rdx,<TAG>", "cmp~rsi,bucket", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, -1, 0.08181818181818182, ["test    cursor, cursor", "mov     rax, cursor", "jz      short loc_BAA8"], ["test~cursor,cursor", "mov~rax,cursor", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.09090909090909091, ["test    rax, rax", "jz      short loc_BAA8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.02727272727272727, ["mov     rax, [rax]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]]], "func_feature": [2, 5, 9, 0, 12, 17, 0, 46, 0.04394, 0, 2], "succs": [[1, 4], [0, 7], [0, 7], [11, 4], [9, 3], [10, 6], [2, 4], [8, 4], [11], [], [], []], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_BB20"], ["cmp~buffer_size,counter", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_BB22"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_BB0A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_BB17"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_BAF0"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, -1, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_BB0D"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_BACC"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[], [0, 8], [], [2, 6], [11, 7], [12, 4], [9], [1], [1, 11], [10, 5], [9, 12], [10], []], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_BB60"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_BB52"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_BB7A"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_BB96"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_BB84"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_BB63"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 4, 1, 0, 1, -1, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_BB84"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[5], [0, 2], [9, 3], [2, 6], [8, 7], [1, 9], [5], [3], [9], []], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_BBCD"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_BBB0"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 10, 0, 0, 8, 2, 1, 0, 0, 0.07189542483660132, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_BC8C"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 3, 4, 0.1503267973856209, ["test    candidate, candidate", "js      loc_BD70"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 6, 0, 0, 4, 1, 0, 7, -1, 0.049019607843137254, ["subss   xmm0, cs:dword_14A30", "mov     rax, 8000000000000000h", "cvttss2si rbp, xmm0", "xor     rbp, rax"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbp,xmm0", "xor~rbp,rax"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 1, 0.14379084967320263, ["ucomiss xmm0, cs:dword_14A30", "jb      loc_BD90"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [4, 0, 1, 2, 0, 10, 0, 1, 7, -1, 0.0016339869281045752, ["shl     rbp, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbp, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbp", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0", "jmp     short loc_BD5A"], ["shl~rbp,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbp,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbp", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 6, -1, 0.049019607843137254, ["mov     esi, 10h; size", "mov     rdi, rbp; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 5, 2, 0.17973856209150327, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_14A2C", "jnb     fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, -1, 0.09150326797385622, ["test    rbp, rbp", "mov     [table+10h], rbp", "jz      short fail"], ["test~rbp,rbp", "mov~[table+0],rbp", "jz~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 4, -1, 0.15359477124183007, ["mov     rdi, rbp; candidate", "call    next_prime", "mov     rbp, rax", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rbp, rax", "ja      short fail"], ["mov~rdi,rbp", "call~FOO", "mov~rbp,rax", "mov~rax,0", "cmp~rbp,rax", "ja~FOO"]], [0, 0, 15, 0, 1, 4, 1, 2, 2, 7, 0.04411764705882353, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 1, 6, 0.05228758169934641, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_BD30"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [1, 1, 18, 1, 1, 23, 3, 2, 0, 7, 0.0, ["push    r15", "push    r14", "lea     rax, raw_hasher", "push    r13", "push    r12", "mov     r12, hasher", "push    rbp", "push    rbx", "mov     r13, comparator", "mov     rbp, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "sub     rsp, 8", "test    hasher, hasher", "mov     r14, data_freer", "cmovz   r12, rax", "lea     rax, raw_comparator", "test    comparator, comparator", "cmovz   r13, rax", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_BD5A"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,hasher", "push~rbp", "push~rbx", "mov~r13,comparator", "mov~rbp,candidate", "mov~edi,<STR>", "mov~r15,tuning", "sub~rsp,0", "test~hasher,hasher", "mov~r14,data_freer", "cmovz~r12,rax", "lea~rax,<TAG>", "test~comparator,comparator", "cmovz~r13,rax", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 2, 5, 0.05065359477124183, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_14A28", "jnz     loc_BC7A"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 4, 3, 0.07189542483660132, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [1, 0, 14, 0, 0, 2, 0, 1, 3, 6, 0.07189542483660132, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_BCC4"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 5, 0.04575163398692811, ["movss   xmm1, dword ptr [tuning+8]"], ["movss~xmm1,[word ptr [tuning+0]"]], [0, 0, 1, 0, 1, 3, 1, 1, 3, -1, 0.04738562091503268, ["mov     rdi, table; ptr", "xor     ebx, ebx", "call    free"], ["mov~rdi,table", "xor~ebx,ebx", "call~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     hasher", "pop     comparator", "pop     data_freer", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~hasher", "pop~comparator", "pop~data_freer", "pop~r15", "retn"]], [0, 0, 6, 0, 0, 2, 0, 1, 7, 0, 0.049019607843137254, ["cvttss2si rbp, xmm0", "jmp     loc_BCC4"], ["cvttss2si~rbp,xmm0", "jmp~FOO"]]], "func_feature": [6, 13, 18, 0, 19, 29, 4, 99, 0.06966, 6, 4], "succs": [[6], [0, 13], [8], [2, 18], [17], [16, 4], [16, 3], [16, 5], [16, 7], [16, 14], [9, 12], [17, 10], [16, 1], [6], [8, 15], [1], [17], [], [8]], "fname": "hash_initialize", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 11, 0, 0, 4, 1, 1, 0, 0, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_BDF5"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_BE11"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_BE00"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_BDD6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_BDC8"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_BE1B"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_BDB0"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 1, 3, 0, 1, 5, 5, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2, 4], [0, 10], [6], [10], [3, 5], [3], [11, 7], [4, 6], [9, 1], [], [9, 1], [7]], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 18, 0, 0, 1, 0, 0, 0, 0, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 18, 0, 1, 4, 1, 2, 6, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_BE70"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_BEF1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_BEE0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 18, 1, 0, 3, 0, 1, 5, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_BE58"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_BE86"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 6, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 10, 0, 0, 2, 0, 0, 1, 2, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_BECC"], ["cmp~rbp,rax", "jnb~FOO"]], [1, 0, 21, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_BE93"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_BE93"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_BEC1"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 4, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_BEA0"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 4, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 1, 5, 1, 2, 5, 3, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_BEB0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_BECC"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 3, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 0, 2, 0, 1, 5, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_BE73"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[6], [0, 21], [5], [2, 19], [2, 4], [], [8, 7], [20, 6], [9], [3, 12], [9, 11], [9, 17], [13], [14, 15], [3, 13], [16], [16, 14], [18, 3], [7], [4], [1], [1]], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 5, 0, 1, 6, 2, 2, 0, 0, 0.0380952380952381, ["xor     edx, edx; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_C0FD"], ["xor~edx,edx", "mov~rsi,r12", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 5, 1, 0.08571428571428572, ["mov     rax, [new_table+78h+storage.free_entry_list]", "mov     edx, 1; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "mov     [table+48h], rax", "call    transfer_entries", "test    al, al", "jz      short loc_C0FD"], ["mov~rax,[new_table+0]", "mov~edx,0", "mov~rsi,r12", "mov~rdi,table", "mov~[table+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 1, 7, 0, 1, 1, 5, 0.20952380952380956, ["mov     table, rsi; candidate", "call    next_prime", "lea     rdx, [rax-1]", "mov     r12, rax", "mov     rax, 1FFFFFFFFFFFFFFEh", "cmp     rdx, rax", "jbe     short loc_BFE0"], ["mov~table,rsi", "call~FOO", "lea~rdx,[rax-1]+0]", "mov~r12,rax", "mov~rax,0", "cmp~rdx,rax", "jbe~FOO"]], [2, 0, 21, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, table", "sub     rsp, 60h", "mov     rbp, [table+28h]", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "cmp     byte ptr [rbp+10h], 0", "jnz     short loc_BF7C"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,table", "sub~rsp,0", "mov~rbp,[table+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 5, 6, 0.0642857142857143, ["cvttss2si rsi, xmm0", "jmp     loc_BF7C"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [1, 0, 14, 0, 0, 4, 1, 0, 5, 6, 0.0642857142857143, ["subss   xmm0, cs:dword_14A30", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax"]], [0, 0, 3, 0, 1, 3, 0, 2, 7, -1, 0.014285714285714287, ["mov     rdi, [new_table+78h+storage.bucket]; ptr", "call    free", "jmp     loc_BF9C"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, -1, 0.07142857142857144, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 17, 0, 0, 3, 0, 0, 3, 8, 0.1285714285714286, ["divss   xmm0, dword ptr [rbp+8]", "ucomiss xmm0, cs:dword_14A2C", "jnb     short loc_BF9A"], ["divss~xmm0,[word ptr [rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 3, 3, 0.14523809523809525, ["mov     esi, 10h; size", "mov     rdi, r12; nmemb", "call    _calloc", "test    rax, rax", "mov     [new_table+78h+storage.bucket], rax", "jz      short loc_BF9A"], ["mov~esi,0", "mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 4, 7, 0.11904761904761905, ["ucomiss xmm0, cs:dword_14A30", "jb      loc_C0A0"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.08571428571428572, ["mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_C0F8"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.0071428571428571435, ["mov     ebp, 1", "jmp     loc_BF9C"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 13, 0, 2, 5, -1, 0.0071428571428571435, ["mov     rdi, [table]; ptr", "call    free", "mov     rax, [new_table+78h+storage.bucket]", "mov     [table], rax", "mov     rax, [new_table+78h+storage.bucket_limit]", "mov     [table+8], rax", "mov     rax, [new_table+78h+storage.n_buckets]", "mov     [table+10h], rax", "mov     rax, [new_table+78h+storage.n_buckets_used]", "mov     [table+18h], rax", "mov     rax, [new_table+78h+storage.free_entry_list]", "mov     [table+48h], rax", "jmp     loc_BF9C"], ["mov~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 2, 4, 0.17142857142857143, ["cmp     [table+10h], r12", "jz      loc_C0B0"], ["cmp~[table+0],r12", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 10, 0.014285714285714287, ["test    candidate, candidate", "js      loc_BFC0"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 60h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [0, 0, 18, 0, 0, 2, 0, 0, 2, 9, 0.026190476190476195, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [2, 0, 18, 0, 0, 8, 2, 1, 2, 9, 0.026190476190476195, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     esi, 1", "or      rax, rsi", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_BF47"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~esi,0", "or~rax,rsi", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [3, 0, 8, 2, 1, 23, 2, 2, 4, 2, 0.13095238095238096, ["mov     [new_table+78h+storage.n_buckets], r12", "shl     r12, 4", "xor     edx, edx; safe", "add     r12, rax", "mov     rax, [table+30h]", "mov     rsi, table; src", "mov     [new_table+78h+storage.bucket_limit], r12", "mov     r12, new_table", "mov     [new_table+78h+storage.tuning], rbp", "mov     rdi, r12; dst", "mov     [new_table+78h+storage.n_buckets_used], 0", "mov     [new_table+78h+storage.n_entries], 0", "mov     [new_table+78h+storage.hasher], rax", "mov     rax, [table+38h]", "mov     [new_table+78h+storage.comparator], rax", "mov     rax, [table+40h]", "mov     [new_table+78h+storage.data_freer], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+storage.free_entry_list], rax", "call    transfer_entries", "test    al, al", "mov     ebp, eax", "jnz     short loc_C0C0"], ["mov~[new_table+0],r12", "shl~r12,0", "xor~edx,edx", "add~r12,rax", "mov~rax,[table+0]", "mov~rsi,table", "mov~[new_table+0],r12", "mov~r12,new_table", "mov~[new_table+0],rbp", "mov~rdi,r12", "mov~[new_table+0],0", "mov~[new_table+0],0", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "call~FOO", "test~al,al", "mov~ebp,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 13, 22, 1, 22, 30, 2, 116, 0.06407, 3, 4], "succs": [[20, 6], [0, 20], [14, 7], [2, 15], [2], [2], [11], [11], [10, 7], [19, 7], [4, 5], [16, 21], [11], [11], [9, 12], [17, 18], [], [8], [8], [1, 13], [], []], "fname": "hash_rehash", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 29, 0, 0, 2, 0, 0, 0, 0, 0.03787878787878788, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 31, 0, 0, 3, 1, 1, 2, 7, 0.052083333333333336, ["mov     data, [table+18h]", "test    rax, rax", "js      loc_C2C0"], ["mov~data,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 13, 4, 0.10416666666666667, ["ucomiss xmm0, cs:dword_14A30", "jnb     loc_C370"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 12, 2, 0.12452651515151515, ["ucomiss xmm0, cs:dword_14A2C", "jnb     loc_C14E"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 14, 3, 0.041193181818181816, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [1, 0, 5, 0, 1, 4, 1, 2, 8, 3, 0.03740530303030303, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_C1CA"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 7, 4, 0.09090909090909091, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_C300"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.05681818181818182, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "mov     rax, r12", "jnz     loc_C38F"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,r12", "jnz~FOO"]], [0, 0, 28, 0, 0, 4, 1, 1, 4, 5, 0.1259469696969697, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      short loc_C1F0"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 29, 0, 0, 8, 2, 1, 3, 6, 0.03787878787878788, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_C186"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 9, 2, 0.0023674242424242425, ["jmp     loc_C14E"], ["jmp~FOO"]], [0, 0, 12, 0, 1, 4, 1, 2, 15, 2, 0.08712121212121213, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_C14E"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 5, 1, 1, 14, 3, 0.041193181818181816, ["subss   xmm0, cs:dword_14A30", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_C28F"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 26, 0, 0, 5, 0, 1, 5, 4, 0.07054924242424243, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax", "mulss   xmm0, dword ptr [rdx+8]", "ucomiss xmm1, xmm0", "ja      short loc_C213"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax", "mulss~xmm0,[word ptr [rdx+0]", "ucomiss~xmm1,xmm0", "ja~FOO"]], [0, 0, 25, 0, 1, 7, 1, 2, 6, 8, 0.11268939393939394, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_C330"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [2, 0, 26, 0, 0, 10, 2, 0, 5, 4, 0.07054924242424243, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "mulss   xmm0, dword ptr [rdx+8]", "ucomiss xmm1, xmm0", "jbe     short loc_C1A6"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "mulss~xmm0,[word ptr [rdx+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 1, 33, 1, 0, 10, 2, 1, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_C2B8"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 6, 3, 0.16051136363636365, ["mov     r13, [rsp+38h+bucket]", "cmp     qword ptr [r13+0], 0", "jz      loc_C2E0"], ["mov~r13,<TAG>", "cmp~[word ptr [r13+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 10, 4, 0.17518939393939395, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     loc_C1A6"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 11, 0, 1, 7, 2, 2, 16, 4, 0.06628787878787878, ["xor     ecx, ecx; delete", "mov     rdx, r13; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_C1A6"], ["xor~ecx,ecx", "mov~rdx,r13", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 7, 7, 0.05965909090909091, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 23, 0, 0, 8, 2, 1, 7, 7, 0.05965909090909091, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_C23B"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 8, 6, 0.15246212121212122, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_C350"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, 3, 0.01278409090909091, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 32, 0, 1, 9, 2, 2, 1, 2, 0.029356060606060608, ["mov     r13, rsp", "xor     ecx, ecx; delete", "mov     rbx, table", "mov     rdx, r13; bucket_head", "mov     rbp, entry", "call    hash_find_entry", "test    rax, rax", "mov     r12, rax", "jz      short loc_C170"], ["mov~r13,rsp", "xor~ecx,ecx", "mov~rbx,table", "mov~rdx,r13", "mov~rbp,entry", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 5, 0.07528409090909091, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 17, 0, 0, 2, 0, 1, 12, 3, 0.0, ["mulss   xmm0, xmm2", "jmp     loc_C270"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 11, 3, 0.12263257575757576, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jz      loc_C320"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [2, 0, 20, 0, 0, 8, 2, 1, 9, 5, 0.07528409090909091, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_C251"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [1, 0, 3, 1, 0, 7, 0, 1, 9, 2, 0.00615530303030303, ["mov     rdx, [r13+8]", "mov     [rax], entry", "mov     data, entry", "mov     [rax+8], rdx", "mov     [r13+8], rax", "add     qword ptr [table+20h], 1", "jmp     loc_C14E"], ["mov~rdx,[r13+0]", "mov~<TAG>,entry", "mov~data,entry", "mov~[rax+0],rdx", "mov~[r13+0],rax", "add~[word ptr [table+0],0", "jmp~FOO"]], [2, 0, 3, 2, 0, 5, 0, 1, 7, 2, 0.032670454545454544, ["mov     [r13+0], entry", "mov     data, entry", "add     qword ptr [table+20h], 1", "add     qword ptr [table+18h], 1", "jmp     loc_C14E"], ["mov~[r13+0],entry", "mov~data,entry", "add~[word ptr [table+0],0", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     entry", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~table", "pop~entry", "pop~r12", "pop~r13", "retn"]]], "func_feature": [7, 23, 29, 1, 34, 49, 3, 148, 0.06239, 3, 5], "succs": [[9], [0, 10], [4, 13], [8, 2], [12], [11, 31], [25, 5], [], [33, 7], [16, 14], [9], [8], [8, 20], [12], [18, 15], [21, 22], [18, 15], [26, 23], [32, 6], [18, 29], [18, 23], [24], [24], [], [27, 30], [31], [8, 1], [19], [3], [3, 28], [19], [8], [8], []], "fname": "hash_insert", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 13, 0, 0, 4, 0, 0, 0, 0, 0.2222222222222222, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_C3DF"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [2, 0, 14, 0, 0, 8, 2, 1, 10, 3, 0.1025132275132275, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_C47A"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 10, 3, 0.1025132275132275, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 21, 0, 0, 8, 2, 1, 5, 3, 0.07936507936507936, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_C438"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 4, 4, 0.14417989417989419, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_C4F0"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [1, 0, 26, 1, 0, 5, 1, 1, 2, 6, 0.06084656084656084, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_C510"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [2, 0, 27, 1, 0, 4, 0, 1, 1, 2, 0.031746031746031744, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_C400"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 12, 5, 0.19047619047619047, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_C550"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 8, 5, 0.09457671957671956, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_C464"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 1, 6, 1, 2, 7, 6, 0.19047619047619047, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_C580"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 3, 5, 0.04365079365079365, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.06878306878306878, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_C59E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 13, 4, 0.1746031746031746, ["ucomiss xmm0, cs:dword_14A30", "jnb     loc_C530"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_C49A"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 14, 3, 0.06878306878306878, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 24, 0, 0, 8, 2, 1, 3, 5, 0.04365079365079365, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_C41E"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 5, 3, 0.07936507936507936, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 7, 0, 1, 4, 1, 2, 15, 2, 0.13095238095238093, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_C3DF"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 8, 0, 0, 5, 1, 1, 14, 3, 0.06878306878306878, ["subss   xmm0, cs:dword_14A30", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_C4AC"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 6, 2, 0.2037037037037037, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_C3DF"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 16, 3, 0.0873015873015873, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_C4D9"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 17, 4, 0.03042328042328042, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 28, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     ecx, 1; delete", "push    rbx", "mov     rbx, table", "sub     rsp, 10h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_C3DF"], ["push~r12", "push~rbp", "mov~ecx,0", "push~rbx", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 18, 3, 0.005291005291005291, ["mov     r12, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_C4C8"], ["mov~r12,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, 5, 0.09457671957671956, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.011904761904761904, ["mov     qword ptr [table+48h], 0", "jmp     loc_C3DF"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 9, 4, 0.21825396825396826, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_C560"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 19, 23, 1, 29, 41, 1, 121, 0.08789, 2, 4], "succs": [[12, 7], [0], [0], [20], [17, 3], [16, 10], [12, 5], [13, 14], [27], [8, 25], [4], [], [11, 28], [19, 15], [13], [18], [4], [20], [12, 21], [18], [9, 12], [26, 22], [24], [12, 6], [24, 26], [27], [12], [1, 2], []], "fname": "hash_delete", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 23, 0, 1, 6, 0, 2, 0, 0, 0.011494252873563218, ["mov     file2_0, [rsp+58h+file2]; to", "mov     edx, [rsp+58h+fd2]; tofd", "call    _linkat", "cmp     eax, 0FFFFFFFFh", "mov     ebp, eax", "jz      loc_C728"], ["mov~file2_0,[rsp+0]", "mov~edx,[rsp+0]", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, -1, 0.05517241379310345, ["mov     eax, cs:have_follow_really_4919", "test    eax, eax", "js      short loc_C628"], ["mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [1, 0, 2, 0, 0, 4, 0, 1, 7, -1, 0.031609195402298854, ["cmp     file1, rbx", "mov     [rsp+58h+fd2], eax", "mov     ebp, 0FFFFFFFFh", "jz      loc_C610"], ["cmp~file1,rbx", "mov~[rsp+0],eax", "mov~ebp,0", "jz~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 6, -1, 0.06666666666666667, ["mov     rax, [rsp+58h+to]", "mov     eax, [rax]", "cmp     eax, 16h", "jnz     short loc_C6F4"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 0, 9, -1, 0.02528735632183908, ["mov     rax, [rsp+58h+to]", "mov     dword ptr [rax], 28h ; '('", "mov     eax, 28h ; '('"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~eax,0"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.0034482758620689655, ["mov     cs:have_follow_really_4919, 1"], ["mov~<TAG>,0"]], [1, 0, 22, 0, 1, 4, 0, 2, 4, -1, 0.026436781609195402, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "mov     [rsp+58h+to], rax", "jnz     loc_C606"], ["call~FOO", "cmp~<TAG>,0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 5, -1, 0.04367816091954023, ["mov     cs:have_follow_really_4919, ebp", "jmp     loc_C632"], ["mov~<TAG>,ebp", "jmp~FOO"]], [0, 0, 19, 0, 1, 5, 0, 2, 7, -1, 0.08620689655172414, ["mov     rdi, rbx; file", "call    mdir_name", "cmp     file1, rbx", "mov     r15, rax", "jz      short loc_C692"], ["mov~rdi,rbx", "call~FOO", "cmp~file1,rbx", "mov~r15,rax", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 6, -1, 0.1724137931034483, ["cmp     byte ptr [r14], 2Fh ; '/'", "jz      short loc_C640"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     rdi, rbx; ptr", "call    free"], ["mov~rdi,rbx", "call~FOO"]], [0, 0, 1, 0, 1, 6, 0, 2, 8, -1, 0.0, ["mov     r15, [rsp+58h+to]", "mov     rdi, rbx; ptr", "mov     r12d, [r15]", "call    free", "mov     [r15], r12d", "jmp     loc_C610"], ["mov~r15,[rsp+0]", "mov~rdi,rbx", "mov~r12d,<TAG>", "call~FOO", "mov~<TAG>,r12d", "jmp~FOO"]], [0, 0, 2, 0, 1, 9, 1, 2, 7, -1, 0.02471264367816092, ["mov     rcx, [rsp+58h+file2]; to", "mov     edx, [rsp+58h+fd2]; tofd", "xor     r8d, r8d; flags", "mov     rsi, rbx; from", "mov     edi, r13d; fromfd", "call    _linkat", "cmp     file1, rbx", "mov     ebp, eax", "jz      loc_C610"], ["mov~rcx,[rsp+0]", "mov~edx,[rsp+0]", "xor~r8d,r8d", "mov~rsi,rbx", "mov~edi,r13d", "call~FOO", "cmp~file1,rbx", "mov~ebp,eax", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 8, -1, 0.08850574712643677, ["test    r15, r15", "jz      loc_C7A0"], ["test~r15,r15", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 2, 8, -1, 0.0, ["mov     rdi, rbx; ptr", "call    free", "mov     rcx, [rsp+58h+to]; to", "mov     eax, [rsp+58h+fd2]", "mov     [rcx], eax", "jmp     loc_C610"], ["mov~rdi,rbx", "call~FOO", "mov~rcx,[rsp+0]", "mov~eax,[rsp+0]", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "mov     eax, ebp", "pop     rbx", "pop     rbp", "pop     r12", "pop     fd1", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,ebp", "pop~rbx", "pop~rbp", "pop~r12", "pop~fd1", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 0, 0, 4, 0, 1, 10, -1, 0.0011494252873563218, ["mov     rax, [rsp+58h+to]", "mov     ebp, 0FFFFFFFFh", "mov     dword ptr [rax], 0Ch", "jmp     loc_C610"], ["mov~rax,[rsp+0]", "mov~ebp,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 6, 0, 2, 9, -1, 0.004597701149425287, ["mov     rdi, r14; ptr", "mov     ebp, 0FFFFFFFFh", "call    free", "mov     rax, [rsp+58h+to]", "mov     dword ptr [rax], 0Ch", "jmp     loc_C610"], ["mov~rdi,r14", "mov~ebp,0", "call~FOO", "mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 2, 0, 0.0022988505747126436, ["call    ___errno_location", "mov     ebp, 0FFFFFFFFh", "mov     dword ptr [rax], 16h", "jmp     loc_C610"], ["call~FOO", "mov~ebp,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 0, 1, 2, 0, 1, 3, -1, 0.06551724137931034, ["call    ___errno_location", "mov     [rsp+58h+to], rax"], ["call~FOO", "mov~[rsp+0],rax"]], [0, 0, 30, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    r8d, r8d", "jz      loc_C720"], ["test~r8d,r8d", "jz~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 4, -1, 0.1471264367816092, ["mov     rbx, file1", "mov     ebp, 14h", "jmp     short loc_C65D"], ["mov~rbx,file1", "mov~ebp,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.0011494252873563218, ["jmp     _linkat"], ["jmp~FOO"]], [0, 0, 19, 0, 3, 11, 2, 4, 9, -1, 0.06436781609195402, ["xor     edx, edx; base_in_result", "mov     rsi, r14; abase", "mov     rdi, r15; dir", "call    mfile_name_concat", "mov     rdi, r15; ptr", "mov     rbx, rax", "call    free", "mov     rdi, r14; ptr", "call    free", "test    rbx, rbx", "jnz     short loc_C654"], ["xor~edx,edx", "mov~rsi,r14", "mov~rdi,r15", "call~FOO", "mov~rdi,r15", "mov~rbx,rax", "call~FOO", "mov~rdi,r14", "call~FOO", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 7, -1, 0.067816091954023, ["cmp     file1, rbx", "jz      loc_C6D8"], ["cmp~file1,rbx", "jz~FOO"]], [2, 0, 27, 1, 0, 13, 1, 1, 1, 1, 0.03103448275862069, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, file1", "sub     rsp, 28h", "test    r8d, 0FFFFFBFFh", "mov     [rsp+58h+file2], file2_0", "mov     [rsp+58h+fd2], edx", "jnz     loc_C7BD"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,file1", "sub~rsp,0", "test~r8d,0", "mov~[rsp+0],file2_0", "mov~[rsp+0],edx", "jnz~FOO"]], [0, 0, 19, 0, 1, 3, 0, 1, 8, -1, 0.013793103448275862, ["mov     rdi, rbx; ptr", "mov     rbx, r14", "call    free"], ["mov~rdi,rbx", "mov~rbx,r14", "call~FOO"]], [1, 0, 19, 1, 0, 2, 0, 1, 9, -1, 0.07816091954022988, ["sub     ebp, 1", "jz      loc_C6E4"], ["sub~ebp,0", "jz~FOO"]], [0, 0, 19, 0, 1, 6, 1, 2, 5, -1, 0.25862068965517243, ["mov     rsi, rbx; filename", "mov     edi, r13d; fd", "call    areadlinkat", "test    rax, rax", "mov     r14, rax", "jz      loc_C750"], ["mov~rsi,rbx", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 19, 1, 0, 3, 0, 1, 8, -1, 0.035632183908045977, ["sub     ebp, 1", "mov     rbx, r14", "jnz     loc_C65D"], ["sub~ebp,0", "mov~rbx,r14", "jnz~FOO"]]], "func_feature": [15, 8, 39, 0, 31, 45, 3, 130, 0.04538, 1, 4], "succs": [[5, 6], [0, 19], [14, 15], [2, 12], [2], [15], [5, 7], [21], [10, 13], [8, 25], [13], [15], [11, 15], [24, 17], [15], [], [15], [15], [15], [21], [26, 23], [29], [], [22], [16, 28], [27, 30], [1, 18], [28], [4, 29], [9, 3], [4, 29]], "fname": "rpl_linkat", "n_num": 31}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_C849"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_C801"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_C828"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 4, 25, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 3, 11, 1, 4, 0, 0, 0.2, ["mov     edi, eax; fd", "call    dup_safer", "mov     edi, eax; fd", "mov     r13d, eax", "call    rpl_fdopendir", "mov     rbp, rax", "call    ___errno_location", "test    newdp, newdp", "mov     r12, rax", "mov     r14d, [rax]", "jz      short loc_C8C0"], ["mov~edi,eax", "call~FOO", "mov~edi,eax", "mov~r13d,eax", "call~FOO", "mov~rbp,rax", "call~FOO", "test~newdp,newdp", "mov~r12,rax", "mov~r14d,<TAG>", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 1, 2, 0.15000000000000002, ["mov     rdi, dp; dirp", "call    _dirfd", "cmp     eax, 2", "jbe     short loc_C880"], ["mov~rdi,dp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 5, 0, 1, 9, 1, 2, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "call    _opendir", "test    rax, rax", "mov     rbx, rax", "jz      short loc_C872"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 3, 0, 0.0, ["mov     edi, r13d; fd", "call    _close", "jmp     short loc_C8A4"], ["mov~edi,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, -1, 0.0, ["mov     rax, dp", "pop     dp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,dp", "pop~dp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 0, 0, 1, 11, 0, 1, 3, -1, 0.0, ["mov     rdi, dp; dirp", "mov     dp, newdp", "call    _closedir", "mov     [r12], r14d", "mov     rax, rbx", "pop     rbx", "pop     newdp", "pop     r12", "pop     f", "pop     e", "retn"], ["mov~rdi,dp", "mov~dp,newdp", "call~FOO", "mov~<TAG>,r14d", "mov~rax,rbx", "pop~rbx", "pop~newdp", "pop~r12", "pop~f", "pop~e", "retn"]]], "func_feature": [7, 2, 10, 0, 6, 7, 2, 45, 0.05833, 0, 0], "succs": [[3, 5], [0, 4], [1, 4], [5], [], []], "fname": "opendir_safer", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 31, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 69, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 179, 0, 0, 4, 0, 0, 0, 0, 0.017512077294685992, ["lea     rcx, [arg_0+r14]", "lea     bytes, [arg_0+r12+1]", "lea     r8, [rcx+r12]", "nop     word ptr [rax+rax+00000000h]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 16, 7, 0.021669453734671128, ["cmp     bytes, 1", "jz      short loc_D32F"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 11, 11, 0.0295661464139725, ["cmp     r15, r13", "jnb     short loc_CC0C"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.03030162269292704, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_CCDF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 1, 0, 0, 16, 12, 0.0, ["mov     byte ptr [rcx+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 179, 0, 0, 2, 0, 0, 15, 12, 0.0295661464139725, ["cmp     r15, r13", "jnb     short loc_CE5B"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 12, 11, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, 2, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 0", "jmp     loc_CD1E"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, 2, 0.006764446302489781, ["cmp     r15, r13", "jnb     loc_CD1E"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 12, 10, 0.02910163507989595, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_CC1F"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 13, 10, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, 3, 0.0006967670011148272, ["mov     r13, [rsp+0D8h+var_80]", "mov     r12, arg_0", "mov     printable, [rsp+0D8h+argsize]", "jmp     force_outer_quoting_style"], ["mov~r13,[rsp+0]", "mov~r12,arg_0", "mov~printable,[rsp+0]", "jmp~FOO"]], [2, 0, 179, 1, 0, 5, 1, 1, 19, 4, 0.004970271274619101, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_D40E"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [4, 0, 180, 0, 0, 8, 1, 1, 2, 8, 0.0020903010033444815, ["lea     rax, unk_14A40; jumptable 000000000000C980 case 4", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+quoting_style], 3", "mov     [rsp+0D8h+s2], rax", "jmp     loc_C9A0"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 206, 1, 0, 5, 0, 1, 1, 9, 0.00478446674098848, ["lea     rcx, off_14A80", "mov     edx, r14d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r14d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [3, 0, 179, 0, 1, 14, 2, 1, 9, 9, 0.07374117428465254, ["mov     [rsp+0D8h+i], arg_0", "mov     [rsp+0D8h+argsize], r11", "mov     byte ptr [rsp+0D8h+p], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0D8h+p]", "mov     r11, [rsp+0D8h+argsize]", "mov     r9, [rsp+0D8h+i]", "movzx   ebp, word ptr [rcx+rdx*2]", "mov     ecx, 1", "shr     bp, 0Eh", "xor     ebp, 1", "and     bpl, [rsp+0D8h+backslash_escapes]"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r11", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~r9,[rsp+0]", "movzx~ebp,<TAG>", "mov~ecx,0", "shr~bp,0", "xor~ebp,0", "and~bpl,[rsp+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 8, 10, 0.17934782608695654, ["cmp     [rsp+0D8h+var_90], 1; jumptable 000000000000CA5E default case", "jnz     loc_D200"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.0023322339898426813, ["mov     ebx, 0Ch; jumptable 000000000000CA5E case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 179, 1, 0, 5, 0, 1, 8, 6, 0.30703037904124864, ["lea     rcx, off_14AA4", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 179, 0, 1, 12, 1, 2, 8, 5, 0.0146553325901152, ["mov     rsi, [rsp+0D8h+s2]; s2", "mov     rdx, r11; n", "mov     rdi, r8; s1", "mov     [rsp+0D8h+arg], arg_0", "mov     [rsp+0D8h+i], r11", "mov     [rsp+0D8h+argsize], r8", "call    _memcmp", "test    eax, eax", "mov     r8, [rsp+0D8h+argsize]", "mov     r11, [rsp+0D8h+i]", "mov     r9, [rsp+0D8h+arg]", "jnz     loc_D1C8"], ["mov~rsi,[rsp+0]", "mov~rdx,r11", "mov~rdi,r8", "mov~[rsp+0],arg_0", "mov~[rsp+0],r11", "mov~[rsp+0],r8", "call~FOO", "test~eax,eax", "mov~r8,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 179, 0, 0, 4, 0, 1, 7, 6, 0.10963628762541806, ["mov     byte ptr [rsp+0D8h+p], al", "lea     rax, [i_0+r11]", "cmp     rax, argsize_0", "ja      loc_D0A0"], ["mov~[yte ptr [rsp+0],al", "lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 2, 9, 0.0001858045336306206, ["test    ebx, ebx; jumptable 000000000000C980 case 2", "jnz     loc_D515"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 13, 9, 0.0286371237458194, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_CC32"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 15, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 179, 0, 0, 2, 0, 0, 14, 9, 0.01723337049424006, ["cmp     r13, len", "jbe     short loc_D42D"], ["cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 14, 9, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 9, 0.00013935340022296544, ["test    buffersize, buffersize", "jz      short loc_D036"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 181, 0, 0, 2, 0, 0, 4, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 179, 0, 0, 3, 0, 1, 9, 4, 0.005713489409141583, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "movzx   r10d, byte ptr [rsp+0D8h+p]", "jnz     loc_CCDF"], ["cmp~[rsp+0],0", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 14, 9, 0.007803790412486065, ["jmp     loc_CE23"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 7, 0.09057971014492754, ["cmp     m, 1", "ja      loc_CE31"], ["cmp~m,0", "ja~FOO"]], [1, 0, 179, 0, 0, 4, 0, 1, 18, 5, 0.017465626161278336, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_D326"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 179, 1, 0, 3, 0, 1, 19, 6, 0.011914715719063546, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_D300"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 10, 8, 0.003994797473058343, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 179, 1, 0, 3, 0, 1, 14, 8, 0.028172612411742848, ["add     r15, 3", "mov     ebx, 27h ; '''", "jmp     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["add~r15,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 1, 0, 5, 0, 1, 12, 6, 0.14393657871918744, ["mov     rdx, rcx", "movzx   esi, [rsp+0D8h+elide_outer_quotes]", "mov     rcx, [rsp+0D8h+buffer]", "add     rdx, r14", "jmp     short loc_CEB3"], ["mov~rdx,rcx", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r14", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 11, 7, 0.0616251703208225, ["movzx   ebp, [rsp+0D8h+backslash_escapes]"], ["movzx~ebp,[rsp+0]"]], [2, 0, 179, 0, 0, 2, 0, 0, 9, 6, 0.002701907593211948, ["mov     ebx, 9; jumptable 000000000000CA5E case 9", "mov     eax, 74h ; 't'"], ["mov~ebx,0", "mov~eax,0"]], [1, 0, 179, 0, 0, 3, 0, 1, 7, 7, 0.4823834076551468, ["movzx   ebx, byte ptr [r8]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_CDD8; jumptable 000000000000CA5E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 179, 0, 0, 6, 2, 1, 6, 7, 0.580012077294686, ["test    r11, r11", "lea     r8, [arg_0+i_0]", "setnz   al", "and     al, [rsp+0D8h+backslash_escapes]", "mov     r10d, eax", "jz      short loc_CA40"], ["test~r11,r11", "lea~r8,<TAG>", "setnz~al", "and~al,[rsp+0]", "mov~r10d,eax", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 9, 8, 0.004343180973615756, ["xor     r10d, r10d", "jmp     loc_CA40"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 16, 7, 0.016304347826086956, ["add     r15, 3", "mov     ebx, 30h ; '0'", "jmp     loc_CB2B"], ["add~r15,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 15, 8, 0.016768859160163508, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_D440"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 16, 8, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 179, 0, 0, 2, 1, 1, 14, 4, 0.03428867831041744, ["test    sil, sil", "jnz     loc_CCDF"], ["test~sil,sil", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 13, 5, 0.16028737767868204, ["test    bpl, bpl", "jnz     short loc_CE48"], ["test~bpl,bpl", "jnz~FOO"]], [0, 0, 179, 0, 1, 11, 0, 1, 10, 11, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0D8h+var_80], r11", "mov     byte ptr [rsp+0D8h+arg], r10b", "mov     [rsp+0D8h+i], r8", "mov     [rsp+0D8h+argsize], arg_0", "call    _strlen", "movzx   r10d, byte ptr [rsp+0D8h+arg]", "mov     r11, [rsp+0D8h+var_80]", "mov     argsize_0, rax", "mov     r8, [rsp+0D8h+i]", "mov     r9, [rsp+0D8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r11", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r8", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [2, 0, 179, 0, 0, 5, 0, 1, 9, 11, 0.10100798959494613, ["lea     rax, [rsp+0D8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0D8h+mbstate.__count], 0", "mov     [rsp+0D8h+p], rax", "jnz     short loc_D253"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.03418222779635823, ["cmp     [rsp+0D8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 6, 0.002701907593211948, ["mov     ebx, 0Dh; jumptable 000000000000CA5E case 13", "mov     eax, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 6, 0.002701907593211948, ["mov     ebx, 0Ah; jumptable 000000000000CA5E case 10", "mov     eax, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 9; jumptable 000000000000D0BE case 9", "xor     r10d, r10d", "mov     eax, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 0Ah; jumptable 000000000000D0BE case 10", "xor     r10d, r10d", "mov     eax, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 0Dh; jumptable 000000000000D0BE case 13", "xor     r10d, r10d", "mov     eax, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 10, 6, 0.0011612783351913787, ["mov     ebx, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 4, 0.0010451505016722408, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_CCDF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [4, 0, 180, 0, 0, 7, 0, 1, 4, 8, 0.008361204013377926, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0D8h+elide_outer_quotes], 0", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "mov     r15d, 1", "mov     [rsp+0D8h+s2], rax", "jmp     loc_C9A0"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 2, 9, 0.0001858045336306206, ["test    ebx, ebx; jumptable 000000000000C980 case 3", "jnz     loc_D4F1"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 6, 0.0013238573021181717, ["xor     r10d, r10d; jumptable 000000000000D0BE case 63"], ["xor~r10d,r10d"]], [0, 0, 179, 1, 0, 5, 0, 1, 9, 6, 0.08357720178372352, ["lea     rcx, off_14CA0", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 6, 0.05195559271646228, ["cmp     [rsp+0D8h+backslash_escapes], 0", "jnz     short loc_CCB0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.0023322339898426813, ["mov     ebx, 7; jumptable 000000000000CA5E case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.0023322339898426813, ["mov     ebx, 0Bh; jumptable 000000000000CA5E case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 16, 11, 0.02910163507989595, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_CE71"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 7, 0.2410620277468104, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_CB2B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 7, 0.19900826830174656, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122", "jz      loc_CC63"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 179, 0, 0, 4, 0, 1, 9, 7, 0.010892790784095132, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000CA5E case 8", "mov     ebx, 8", "mov     eax, 62h ; 'b'", "jz      short loc_CC63"], ["cmp~[rsp+0],0", "mov~ebx,0", "mov~eax,0", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 2, 1, 10, 8, 0.01388888888888889, ["xor     ebx, ebx", "test    byte ptr [rsp+0D8h+flags], 1", "jz      loc_CC63"], ["xor~ebx,ebx", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 9, 5, 0.07907531277096494, ["mov     eax, [rsp+0D8h+quoting_style]; jumptable 000000000000CA5E case 63", "cmp     eax, 2", "jz      loc_D1D0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 179, 1, 0, 4, 0, 0, 17, 11, 0.0, ["mov     eax, ebx", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+r15+1], al"], ["mov~eax,ebx", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [1, 0, 181, 0, 0, 2, 0, 0, 4, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 9, 0.00013935340022296544, ["test    buffersize, buffersize", "jz      short loc_D071"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 179, 0, 0, 15, 0, 0, 14, 9, 0.02938034188034188, ["mov     rsi, r12", "mov     r12, [rsp+0D8h+argsize]", "mov     rdi, r13", "mov     bytes, m", "mov     rcx, rbx", "mov     r9, arg_0", "mov     bytes, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "cmp     rsi, r12", "movzx   ebx, [rsp+0D8h+c]", "mov     r8, [rsp+0D8h+var_60]", "movzx   r10d, [rsp+0D8h+var_69]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "jnb     short loc_D4E7"], ["mov~rsi,r12", "mov~r12,[rsp+0]", "mov~rdi,r13", "mov~bytes,m", "mov~rcx,rbx", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r11,[rsp+0]", "cmp~rsi,r12", "movzx~ebx,[rsp+0]", "mov~r8,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 10, 0.06823671497584541, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_D482"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 9, 0.06839929394277221, ["cmp     eax, 3", "jnz     loc_D1DB"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 179, 1, 0, 3, 1, 1, 11, 9, 0.23864269788182832, ["add     i_0, 1", "test    r10b, r10b", "jz      store_c"], ["add~i_0,0", "test~r10b,r10b", "jz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 17, 10, 0.0286371237458194, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_CE8A"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 11, 0, 1, 13, 8, 0.0036696395392047565, ["mov     rcx, m", "mov     r9, arg_0", "mov     r14, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "movzx   ebx, [rsp+0D8h+c]", "movzx   r10d, [rsp+0D8h+var_69]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "mov     r12, [rsp+0D8h+argsize]", "movzx   ebp, [rsp+0D8h+backslash_escapes]", "jmp     loc_D38C"], ["mov~rcx,m", "mov~r9,arg_0", "mov~r14,[rsp+0]", "mov~r11,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "mov~r12,[rsp+0]", "movzx~ebp,[rsp+0]", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 12, 9, 0.07650501672240803, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_D44E"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 12, 10, 0.040040876997398736, ["cmp     r13, r15", "jbe     short loc_CC89"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 12, 11, 0.02912486064659978, ["add     i_0, 1", "jmp     short loc_CC7B"], ["add~i_0,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 13, 10, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 179, 1, 0, 5, 1, 0, 18, 10, 0.0, ["mov     eax, ebx", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+r15+2], al"], ["mov~eax,ebx", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 179, 0, 0, 13, 1, 0, 10, 10, 0.10054347826086957, ["lea     rax, [rsp+0D8h+w]", "xor     esi, esi", "mov     [rsp+0D8h+c], bl", "mov     [rsp+0D8h+var_68], r15", "mov     [rsp+0D8h+i], i_0", "mov     c_0, rsi", "mov     [rsp+0D8h+arg], rax", "mov     [rsp+0D8h+var_78], r11", "mov     r15, arg_0", "mov     [rsp+0D8h+var_60], r8", "mov     [rsp+0D8h+var_69], r10b", "mov     [rsp+0D8h+var_80], r13", "mov     [rsp+0D8h+argsize], r12"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r15", "mov~[rsp+0],i_0", "mov~c_0,rsi", "mov~[rsp+0],rax", "mov~[rsp+0],r11", "mov~r15,arg_0", "mov~[rsp+0],r8", "mov~[rsp+0],r10b", "mov~[rsp+0],r13", "mov~[rsp+0],r12"]], [1, 0, 179, 1, 0, 2, 0, 1, 13, 9, 0.039576365663322184, ["add     r15, 1", "jmp     store_c"], ["add~r15,0", "jmp~FOO"]], [3, 0, 180, 0, 0, 7, 1, 1, 3, 8, 0.004180602006688963, ["lea     rax, unk_14A40", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+s2], rax", "jmp     loc_C9A0"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 179, 0, 0, 4, 0, 0, 12, 8, 0.056554254923820144, ["lea     rax, [i_0+2]", "mov     ebx, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebx,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 1, 1, 11, 9, 0.05869100706057228, ["test    byte ptr [rsp+0D8h+flags], 4", "jz      loc_D1DB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [3, 0, 179, 2, 0, 3, 1, 0, 18, 9, 0.028172612411742848, ["and     ebx, 7", "add     r15, 3", "add     ebx, 30h ; '0'"], ["and~ebx,0", "add~r15,0", "add~ebx,0"]], [4, 0, 180, 0, 0, 7, 0, 1, 4, 8, 0.008361204013377926, ["lea     rax, unk_14A40", "mov     [rsp+0D8h+elide_outer_quotes], 0", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "mov     r15d, 1", "mov     [rsp+0D8h+s2], rax", "jmp     loc_C9A0"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 179, 1, 0, 3, 0, 0, 15, 8, 0.1527777777777778, ["add     i_0, 1", "cmp     r14, ilim", "jnb     store_c"], ["add~i_0,0", "cmp~r14,ilim", "jnb~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 14, 9, 0.12140003716090673, ["test    r10b, r10b", "jz      short loc_CE94"], ["test~r10b,r10b", "jz~FOO"]], [1, 0, 179, 1, 0, 3, 1, 1, 16, 9, 0.008198625046451134, ["add     r15, 1", "xor     r10d, r10d", "jmp     short loc_CE94"], ["add~r15,0", "xor~r10d,r10d", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 7, 0.05067044469218382, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [3, 0, 180, 0, 0, 6, 2, 1, 2, 8, 0.0020903010033444815, ["mov     [rsp+0D8h+elide_outer_quotes], 0; jumptable 000000000000C980 case 0", "mov     [rsp+0D8h+backslash_escapes], 0", "xor     r11d, r11d", "mov     [rsp+0D8h+s2], 0", "xor     r15d, r15d", "jmp     loc_C9A0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 16, 7, 0.012913415087328132, ["cmp     r15, r13", "jnb     short loc_CEAA"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 17, 7, 0.0, ["mov     [rcx+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 179, 0, 0, 1, 0, 0, 10, 6, 0.001201923076923077, ["nop     dword ptr [esc+00000000h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 179, 0, 0, 3, 0, 1, 14, 6, 0.04672209835253313, ["movzx   ebx, byte ptr [arg_0+rax]", "cmp     bl, 3Eh ; '>'", "ja      loc_D1DB"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 179, 1, 0, 2, 0, 0, 17, 6, 0.01244890375325158, ["movzx   ebx, byte ptr [arg_0+r14]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 179, 0, 0, 1, 0, 0, 11, 5, 0.005667038275733928, ["mov     ebx, eax"], ["mov~ebx,eax"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 4, 0.03621252941905115, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     short loc_CCDF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 179, 1, 0, 10, 2, 1, 11, 5, 0.0053322030224204125, ["mov     eax, ebx", "mov     rsi, [rsp+0D8h+var_C8]", "mov     ecx, ebx", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jnz     store_escape"], ["mov~eax,ebx", "mov~rsi,[rsp+0]", "mov~ecx,ebx", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 5, 0.06040002167719558, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 66h ; 'f'; jumptable 000000000000D0BE case 12", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 62h ; 'b'; jumptable 000000000000D0BE case 8", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 61h ; 'a'; jumptable 000000000000D0BE case 7", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 76h ; 'v'; jumptable 000000000000D0BE case 11", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 1, 1, 12, 1, 2, 11, 9, 0.10305183946488294, ["mov     rax, [rsp+0D8h+i]", "mov     rdx, [rsp+0D8h+argsize]", "mov     rcx, [rsp+0D8h+p]; p", "mov     rdi, [rsp+0D8h+arg]; pwc", "lea     r12, [rax+m]", "lea     r13, [arg_0+r12]", "sub     rdx, r12; n", "mov     rsi, r13; s", "call    _mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      loc_D35A"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r12,<TAG>", "lea~r13,<TAG>", "sub~rdx,r12", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 179, 1, 2, 10, 2, 3, 15, 9, 0.027545522110739504, ["mov     edi, [rsp+0D8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0D8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_D28F"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 0, 15, 5, 0.04268084974606714, ["mov     rsi, 7000A38200000000h", "bt      rsi, rbx", "jnb     loc_D1DB"], ["mov~rsi,0", "bt~rsi,rbx", "jnb~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 15, 10, 0.008663136380527686, ["cmp     r15, r13", "jnb     short loc_CEC7"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 1, 0, 0, 16, 10, 0.0, ["mov     byte ptr [rcx+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 179, 0, 0, 1, 0, 1, 16, 9, 0.004041248606465998, ["jmp     short loc_D4E7"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 15, 10, 0.017279821627647716, ["cmp     byte ptr [rdi], 0", "jnz     short loc_D4D7"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 6, 0.01302954292084727, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000CA5E case 92", "jz      loc_D1E8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 16, 4, 0.03866282670630496, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_CCDF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 8, 7, 0.09038229282794501, ["movzx   ebx, byte ptr [r8]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_CDD0; jumptable 000000000000D0BE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.008198625046451134, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      loc_D1E8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 17, 12, 0.0379041248606466, ["cmp     r15, r13", "jnb     short loc_CADD"], ["cmp~r15,r13", "jnb~FOO"]], [2, 0, 179, 1, 0, 4, 0, 0, 13, 8, 0.021483649201040508, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_D420"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 8, 0.02431716833890747, ["mov     ebx, 3Fh ; '?'", "jmp     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.0060773566208348825, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_CCDF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 7, 3, 0.04150989409141583, ["mov     rax, [rsp+0D8h+s2]", "test    rax, rax", "jz      short loc_D3F7"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 15, 0, 0, 6, 1, 1, 6, 4, 0.05241623312275487, ["cmp     [rsp+0D8h+quoting_style], 2", "mov     rbp, argsize_0", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0D8h+elide_outer_quotes], al", "jz      short loc_D3BD"], ["cmp~[rsp+0],0", "mov~rbp,argsize_0", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, 3, 0.0026380372847764153, ["test    r15, r15", "jz      force_outer_quoting_style"], ["test~r15,r15", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 18, 12, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15], 3Fh ; '?'"], ["mov~rsi,<TAG>", "mov~<TAG>,0"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 4, 0.007594760312151617, ["test    r11, r11", "jnz     loc_D19D"], ["test~r11,r11", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 14, 9, 0.03425771088814567, ["cmp     [rsp+0D8h+quoting_style], 2", "jnz     short loc_D32F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.01282438374829679, ["mov     rbp, argsize_0", "mov     argsize_0, arg_0"], ["mov~rbp,argsize_0", "mov~argsize_0,arg_0"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, 4, 0.0006967670011148272, ["jmp     loc_CCDF"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.046698872785829314, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_CCDF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 18, 11, 0.03743961352657005, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_CAF0"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 10, 8, 0.08544685990338165, ["test    bpl, bpl", "jz      loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 5, 0.0008128948346339651, ["xor     r10d, r10d; jumptable 000000000000D0BE case 0"], ["xor~r10d,r10d"]], [1, 0, 179, 0, 0, 2, 0, 0, 19, 11, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+1], 22h ; '\"'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [0, 0, 179, 0, 0, 2, 0, 1, 15, 8, 0.027986807878112228, ["movzx   ebp, [rsp+0D8h+backslash_escapes]", "jmp     loc_D38C"], ["movzx~ebp,[rsp+0]", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 17, 9, 0.008175399479747306, ["mov     rcx, m"], ["mov~rcx,m"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 5, 0.06023937817416078, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000CA5E case 0", "jnz     loc_D0EB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 9, 11, 0.0033444816053511705, ["xor     r10d, r10d; jumptable 000000000000D0BE default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 179, 0, 0, 3, 0, 0, 19, 10, 0.036975102192493496, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_CB03"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 11, 9, 0.04591694537346711, ["cmp     r15, r13", "jnb     short loc_D104"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 20, 10, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+2], 22h ; '\"'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [1, 0, 179, 0, 0, 2, 0, 0, 12, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [2, 0, 190, 0, 1, 11, 1, 2, 3, 11, 0.00020903010033444816, ["lea     rsi, asc_14A42; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0D8h+quote_string], rax", "lea     rax, asc_14A42; \"`\"", "cmp     r14d, 7", "setz    r14b", "cmp     rsi, rax", "jnz     short loc_CF1D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~r14d,0", "setz~r14b", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 191, 0, 0, 3, 0, 1, 2, 10, 0.0005109624674842066, ["mov     r14d, [rsp+0D8h+quoting_style]; jumptable 000000000000C980 cases 6-8", "cmp     r14d, 8", "jz      short loc_CF57"], ["mov~r14d,[rsp+0]", "cmp~r14d,0", "jz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 20, 9, 0.036510590858416944, ["lea     len, [r15+3]", "cmp     r13, len", "jbe     short loc_CB16"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 4, 0, 0, 12, 8, 0.04545243403939056, ["lea     rax, [i_0+1]", "lea     rdx, [r15+1]", "cmp     rax, argsize_0", "jnb     short loc_D122"], ["lea~rax,[i_0+0]", "lea~rdx,[r15+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 21, 9, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+3], 3Fh ; '?'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [0, 0, 189, 0, 0, 4, 1, 0, 4, 11, 0.0, ["lea     rax, unk_14A40", "test    r14b, r14b", "cmovz   rax, rsi", "mov     [rsp+0D8h+quote_string], rax"], ["lea~rax,<TAG>", "test~r14b,r14b", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [3, 1, 3, 2, 1, 14, 1, 1, 8, 2, 0.011932134894091416, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rdx, arg_0; arg", "push    [rsp+0E0h+quote_string_0]; right_quote", "push    [rsp+0E8h+quote_string]; left_quote", "mov     rsi, r13; buffersize", "push    0; quote_these_too", "mov     r9d, [rsp+0F8h+flags]", "mov     r8d, [rsp+0F8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0F8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rdx,arg_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rsi,r13", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [1, 0, 179, 1, 0, 3, 0, 0, 21, 8, 0.03604607952434039, ["add     r15, 4", "mov     r14, i_0", "nop     dword ptr [rax]"], ["add~r15,0", "mov~r14,i_0", "nop~<TAG>"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 6, 0.021059782608695652, ["cmp     [rsp+0D8h+quoting_style], 2; jumptable 000000000000CA5E cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     short loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.004947045707915273, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      short loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 9, 8, 0.008494751021924936, ["test    i_0, i_0; jumptable 000000000000CA5E cases 35,126", "jnz     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 10, 8, 0.02078688219992568, ["test    al, al", "jnz     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 8, 0.004621887774061687, ["test    i_0, i_0", "jnz     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 5, 0.038238960113960115, ["cmp     [rsp+0D8h+quoting_style], 2; jumptable 000000000000CA5E case 39", "mov     ebx, 27h ; '''", "jnz     loc_CB20; jumptable 000000000000CA5E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebx,0", "jnz~FOO"]], [1, 0, 179, 1, 0, 4, 0, 1, 16, 10, 0.008663136380527686, ["add     m, 1", "lea     rdx, [r14+m]", "cmp     r12, rdx", "ja      short loc_D4D0"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r12,rdx", "ja~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 17, 10, 0.0, ["cmp     byte ptr [r8+m], 0", "jz      short loc_D4E4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 13, 7, 0.023388145670754368, ["mov     r15, len", "mov     ebx, 30h ; '0'", "jmp     loc_CB2B"], ["mov~r15,len", "mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 6, 0.06507029604855692, ["cmp     [rsp+0D8h+var_C8], 0", "jz      short loc_CB55"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, 1, 0.009522482348569306, ["mov     rsi, [rsp+0D8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_D53E"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [3, 0, 180, 0, 0, 7, 1, 1, 3, 8, 0.004180602006688963, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+s2], rax", "jmp     loc_C9A0"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 6, 0.0006909606094388704, ["xor     r10d, r10d; jumptable 000000000000D0BE case 39"], ["xor~r10d,r10d"]], [1, 0, 188, 0, 1, 9, 1, 2, 4, 10, 0.00880248978075065, ["lea     rsi, aIterCurPtr0+15h; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, rax", "mov     [rsp+0D8h+quote_string_0], rax", "lea     rax, aIterCurPtr0+15h; \"'\"", "cmp     rdi, rax", "jnz     short loc_CF57"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rdi,rax", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     argsize_0", "pop     arg_0", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~arg_0", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 179, 0, 0, 2, 0, 1, 15, 8, 0.025803604607952436, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      short loc_D32F"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 1, 1, 10, 6, 0.006212839093273876, ["xor     r10d, r10d; jumptable 000000000000D0BE cases 37,43-58,65-90,93,95,97-122", "cmp     [rsp+0D8h+var_C8], 0", "jnz     loc_CB33"], ["xor~r10d,r10d", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 187, 0, 0, 4, 1, 0, 5, 10, 0.0, ["lea     rax, unk_14A40", "test    r14b, r14b", "cmovz   rax, rdi", "mov     [rsp+0D8h+quote_string_0], rax"], ["lea~rax,<TAG>", "test~r14b,r14b", "cmovz~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 000000000000C980 default case"], ["call~FOO"]], [3, 0, 208, 1, 1, 29, 2, 2, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r14d, r8d", "push    r13", "push    r12", "mov     r13, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r12, arg_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0A8h", "mov     rax, [rsp+0D8h+quote_these_too]", "mov     [rsp+0D8h+buffer], buffer_0", "mov     [rsp+0D8h+quoting_style], r8d", "mov     [rsp+0D8h+flags], r9d", "mov     [rsp+0D8h+var_C8], rax", "mov     rax, [rsp+0D8h+left_quote]", "mov     [rsp+0D8h+quote_string], rax", "mov     rax, [rsp+0D8h+right_quote]", "mov     [rsp+0D8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r14d, 8; switch 9 cases", "mov     [rsp+0D8h+var_90], rax", "ja      loc_D539; jumptable 000000000000C980 default case"], ["push~r15", "push~r14", "mov~r14d,r8d", "push~r13", "push~r12", "mov~r13,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r12,arg_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r14d,0", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 186, 0, 0, 3, 2, 1, 3, 9, 0.021878483835005576, ["xor     r15d, r15d", "test    ebx, ebx", "jnz     short loc_CF86"], ["xor~r15d,r15d", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 9, 3, 0.022412671869193608, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_D3F7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 3, 0.026755852842809364, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     short loc_D3F7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 12, 5, 0.0, ["mov     [rsi+len], cl"], ["mov~<TAG>,cl"]], [0, 0, 9, 0, 0, 2, 0, 0, 11, 5, 0.013726309921962096, ["cmp     r13, len", "jbe     short loc_D3E8"], ["cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 1, 0, 2, 0, 0, 12, 9, 0.06377740616871051, ["add     i_0, 1", "nop     word ptr [rax+rax+00h]"], ["add~i_0,0", "nop~[ord ptr [rax+0]"]], [0, 0, 179, 0, 0, 1, 0, 1, 11, 10, 0.004714790040876998, ["jmp     loc_CB5E"], ["jmp~FOO"]], [0, 0, 185, 0, 0, 4, 1, 1, 4, 9, 0.0007432181345224824, ["mov     rdx, [rsp+0D8h+quote_string]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_CF86"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 12, 8, 0.5005806391675957, ["cmp     r15, r13", "jnb     short loc_CB75"], ["cmp~r15,r13", "jnb~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 11, 9, 0.017930137495354888, ["add     i_0, 1", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 5, 11, 0.0006270903010033445, ["mov     rcx, [rsp+0D8h+buffer]", "xchg    ax, ax"], ["mov~rcx,<TAG>", "xchg~ax,ax"]], [0, 0, 179, 0, 0, 2, 0, 0, 13, 8, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     [rax+r15], bl"], ["mov~rax,<TAG>", "mov~<TAG>,bl"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 10, 0.00469156447417317, ["cmp     buffersize, r15", "jbe     short loc_CF79"], ["cmp~buffersize,r15", "jbe~FOO"]], [1, 0, 184, 1, 0, 4, 1, 1, 7, 9, 0.0126347082868822, ["add     r15, 1", "movzx   eax, byte ptr [rdx+len]", "test    al, al", "jnz     short loc_CF70"], ["add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 7, 10, 0.0, ["mov     [rcx+r15], al"], ["mov~<TAG>,al"]], [1, 0, 179, 1, 0, 2, 0, 1, 13, 7, 0.5001161278335191, ["add     r15, 1", "jmp     loc_C9B0"], ["add~r15,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 11, 7, 0.012932769726247989, ["add     i_0, 1", "jmp     loc_C9B0"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 10, 7, 0.000272900408769974, ["xor     r10d, r10d; jumptable 000000000000D0BE cases 32-34,36,38,40-42,59-62,91,94,96,124", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 179, 0, 0, 11, 2, 0, 12, 8, 0.050887216648086216, ["mov     rcx, m", "xor     ebp, 1", "movzx   ebx, [rsp+0D8h+c]", "movzx   r10d, [rsp+0D8h+var_69]", "and     bpl, [rsp+0D8h+backslash_escapes]", "mov     r9, arg_0", "mov     bytes, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "mov     r12, [rsp+0D8h+argsize]"], ["mov~rcx,m", "xor~ebp,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~bpl,[rsp+0]", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r11,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "mov~r12,[rsp+0]"]], [0, 0, 179, 0, 0, 1, 0, 1, 10, 7, 0.0002167719559023907, ["jmp     short loc_CB88; jumptable 000000000000CA5E cases 32-34,36,38,40-42,59-62,91,94,96,124"], ["jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 12, 7, 0.0003870927783971263, ["jmp     short loc_CB88; jumptable 000000000000CA5E cases 32-34,36,38,40-42,59-62,91,94,96,124"], ["jmp~FOO"]], [3, 0, 180, 0, 0, 6, 2, 0, 2, 8, 0.0020903010033444815, ["mov     [rsp+0D8h+elide_outer_quotes], 0; jumptable 000000000000C980 case 5", "mov     [rsp+0D8h+backslash_escapes], 1", "xor     r11d, r11d", "mov     [rsp+0D8h+s2], 0", "xor     r15d, r15d", "nop     dword ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~r15d,r15d", "nop~[word ptr [rax+0]"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 9, 0.00020322370865849128, ["xor     r10d, r10d; jumptable 000000000000D0BE cases 35,126"], ["xor~r10d,r10d"]], [0, 0, 179, 0, 0, 3, 1, 1, 10, 7, 0.007339279078409513, ["movzx   r10d, [rsp+0D8h+backslash_escapes]; jumptable 000000000000D0BE case 92", "and     r10b, [rsp+0D8h+elide_outer_quotes]", "jz      short loc_D1E8"], ["movzx~r10d,[rsp+0]", "and~r10b,[rsp+0]", "jz~FOO"]], [1, 0, 180, 0, 1, 9, 1, 2, 4, 8, 0.0459866220735786, ["test    ebx, ebx", "mov     rbx, [rsp+0D8h+quote_string_0]", "setnz   [rsp+0D8h+elide_outer_quotes]", "mov     rdi, rbx; s", "call    _strlen", "mov     [rsp+0D8h+s2], rbx", "mov     r11, rax", "mov     [rsp+0D8h+backslash_escapes], 1", "jmp     loc_C9A0"], ["test~ebx,ebx", "mov~rbx,[rsp+0]", "setnz~[rsp+0]", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rbx", "mov~r11,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 179, 0, 0, 4, 1, 0, 3, 7, 0.1164065403195838, ["mov     r9, arg_0", "xor     r14d, r14d", "mov     arg_0, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r9,arg_0", "xor~r14d,r14d", "mov~arg_0,argsize_0", "nop~[word ptr [rax+0]"]], [4, 0, 180, 0, 0, 8, 1, 1, 2, 8, 0.0020903010033444815, ["lea     rax, aIterCurPtr0+15h; jumptable 000000000000C980 case 1", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+quoting_style], 2", "mov     [rsp+0D8h+s2], rax", "jmp     loc_C9A0"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 12, 4, 0.004947045707915273, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_D3E0"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 10, 0.0003483835005574136, ["xor     r10d, r10d; jumptable 000000000000D0BE cases 123,125"], ["xor~r10d,r10d"]], [0, 0, 179, 0, 0, 2, 1, 1, 5, 5, 0.6370501981915027, ["test    bpl, bpl", "jz      loc_D3A0"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 179, 0, 0, 4, 0, 1, 4, 6, 0.6375147095255792, ["cmp     argsize_0, i_0", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_C9C6"], ["cmp~argsize_0,i_0", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 179, 0, 0, 4, 0, 1, 9, 9, 0.02125139353400223, ["cmp     argsize_0, 1; jumptable 000000000000CA5E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_CBC8"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 5, 6, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   bpl"], ["cmp~<TAG>,0", "setnz~bpl"]], [1, 0, 179, 0, 0, 2, 0, 0, 10, 9, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 9, 1, 0, 4, 0, 0, 10, 6, 0.018023039762170196, ["mov     rsi, [rsp+0D8h+buffer]", "mov     rdx, r15", "sub     rax, r15", "nop"], ["mov~rsi,<TAG>", "mov~rdx,r15", "sub~rax,r15", "nop"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 13, 3, 0.0004645113340765515, ["mov     r15, len"], ["mov~r15,len"]]], "func_feature": [13, 75, 139, 7, 209, 348, 6, 715, 0.04269, 7, 35], "succs": [[31], [0, 109], [9, 6], [129, 2], [63], [4, 63], [9], [162], [162, 7], [10, 22], [22], [150], [32, 11], [197], [193, 198, 13, 145, 21, 57, 94], [133], [47, 15], [60], [65, 66, 68, 37, 49, 138, 203, 157, 16, 17, 50, 115, 152, 154, 61, 62], [40, 28], [19, 117], [26, 163], [25, 34], [42], [42, 23], [34], [56, 27], [56], [33, 129], [133], [35, 29], [32, 12], [109, 31], [38], [65], [45], [35], [48], [16, 18], [20, 38], [38], [161], [41, 43], [41], [129, 5], [91, 44], [83], [83, 46], [60, 55], [48], [48], [48], [48], [48], [48], [129, 60], [197], [85, 71], [68], [194, 107, 164, 134, 104, 105, 106, 139, 200, 51, 52, 53, 58, 168, 189, 195], [64, 100], [60], [60], [76, 69], [161, 75], [64, 161], [64, 97], [64, 188], [74, 122], [76], [89], [89, 70], [136, 114], [72, 128], [121, 87], [180, 79], [88, 82], [30], [73, 77], [81, 84], [79], [84], [88], [108], [180], [197], [65, 93], [121, 86], [90], [197], [180, 95], [90, 111], [90], [65, 98], [197], [96, 99], [99], [100], [121, 110], [45], [101], [80, 129], [101, 103], [177, 101], [101], [101], [101], [101], [190, 78], [108, 190], [121, 116], [112, 92], [92], [136], [113, 158], [54, 118], [129, 119], [59, 139], [54, 127], [132, 126], [24, 160], [65], [121, 129], [8, 174], [123, 125], [123, 150], [132], [129, 181], [109, 167], [150], [129], [129, 141], [140, 135], [65, 36], [131], [140], [30], [136], [67, 131], [16], [146, 142], [147, 143], [146], [147], [149, 165], [144, 172], [148, 151], [120, 160], [151], [165], [162], [65], [65, 153], [65, 130], [65, 191], [65, 156], [192, 65], [65, 3], [137, 159], [137, 158], [161], [102, 103], [166, 207], [197], [157], [169, 172], [], [1, 109], [178, 102], [172], [], [170, 14], [179, 196], [8, 206], [8, 173], [199], [199, 175], [180], [177], [196, 182], [187, 183], [180], [184], [187], [185, 186], [184, 196], [185], [202], [202], [152], [30], [152], [152], [197], [154], [181, 54], [197], [202], [197], [176, 208], [203], [124, 39], [201, 204], [155, 205], [201], [155], [176], [], [8]], "fname": "quotearg_buffer_restyled", "n_num": 209}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[3, 1, 4, 4, 1, 24, 1, 2, 0, 0, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    qword ptr [options+30h]; right_quote", "mov     r9d, eax; flags", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     rsi, size_0; buffersize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rdi, val; buffer", "mov     [rsp+78h+size], size_0", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_D6AB"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~[word ptr [options+0]", "mov~r9d,eax", "push~[word ptr [options+0]", "push~r15", "mov~rsi,size_0", "mov~rdx,[rsp+0]", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_D5EF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, -1, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [1, 0, 11, 1, 1, 18, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_D6F3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, -1, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, -1, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_D6C8"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     rdi, rax; buffer", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, [rsp+78h+size]; buffersize", "mov     val, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~val,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_D669"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, -1, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_D5CD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]]], "func_feature": [9, 4, 15, 0, 12, 15, 8, 112, 0.05909, 4, 13], "succs": [[11, 7], [0, 5], [0], [1, 10], [2], [9, 4], [11], [8, 6], [6], [2], [], []], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 8", "jz      short loc_D807"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_D807"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 1, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,<STR>", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_D95F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 1, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_D9F9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_D9D1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_D9C0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_DA14"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 2, 1, 1, 25, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 88h", "mov     dword ptr [rsp+88h+s], esi", "mov     dword ptr [rsp+88h+s+4], 0", "mov     rax, arg", "mov     arg, [rsp+88h+var_18]", "mov     s_0, arg; arg", "movups  [rsp+88h+s+8], xmm0", "mov     rcx, fs:28h", "mov     [rsp+88h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+88h+var_30], xmm0", "mov     rcx, rsp; options", "movdqa  xmm0, [rsp+88h+s]", "mov     [rsp+88h+o.right_quote], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+50h]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, [rsp+88h+var_30+8]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+88h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_DB28"], ["pxor~xmm0,xmm0", "sub~rsp,<STR>", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,[rsp+0]", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "movdqa~xmm0,[rsp+0]", "mov~[rsp+0],rdx", "mov~rdx,0", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 88h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [2, 2, 3, 3, 3, 2, 4, 28, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 1, 2, 1, 1, 25, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 88h", "mov     dword ptr [rsp+88h+s], esi", "mov     dword ptr [rsp+88h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+88h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+88h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+88h+var_30], xmm0", "movdqa  xmm0, [rsp+88h+s]", "mov     rcx, [rsp+88h+var_18]", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+50h]", "mov     [rsp+88h+o.right_quote], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, [rsp+88h+var_30+8]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+88h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_DBB4"], ["pxor~xmm0,xmm0", "sub~rsp,<STR>", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 88h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 3, 3, 2, 1, 28, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [3, 1, 2, 2, 1, 35, 6, 2, 0, 1, 0.0, ["sub     rsp, 48h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+48h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+48h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+18h], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+48h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_DC73"], ["sub~rsp,<STR>", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~<TAG>,xmm0", "shr~al,0", "movzx~eax,al", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 38, 0.0, 5, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 9, 1, 2, 0, 0, 0.2, ["mov     [rsp+48h+left_quote], left_quote_0", "mov     [rsp+48h+right_quote], right_quote_0", "mov     rcx, rsp; options", "mov     right_quote_0, argsize; argsize", "mov     left_quote_0, arg; arg", "call    quotearg_n_options", "mov     rdi, [rsp+48h+var_10]", "xor     rdi, fs:28h", "jnz     short loc_DD4C"], ["mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~rcx,rsp", "mov~right_quote_0,argsize", "mov~left_quote_0,arg", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.15000000000000002, ["test    right_quote_0, right_quote_0", "jz      short loc_DD47"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 5, 1, 0, 16, 2, 1, 0, 3, 0.0, ["sub     rsp, 48h", "mov     r9, arg", "mov     arg, cs:default_quoting_options.right_quote", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "movaps  [rsp+48h+var_48], xmm0", "test    left_quote_0, left_quote_0", "mov     [rsp+48h+right_quote], rcx", "mov     dword ptr [rsp+48h+var_48], 8", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+48h+var_38], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+20h], xmm0", "jz      short loc_DD47"], ["sub~rsp,<STR>", "mov~r9,arg", "mov~arg,<TAG>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~<TAG>,xmm0", "test~left_quote_0,left_quote_0", "mov~[rsp+0],rcx", "mov~<TAG>,0", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 4, 6, 3, 6, 6, 3, 31, 0.05833, 5, 2], "succs": [[2, 5], [0, 3], [], [], [1, 3], []], "fname": "quotearg_n_custom_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_custom_mem"], ["mov~r8,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_n_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rcx, arg; arg", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~rcx,arg", "mov~r8,0", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_custom_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_DDC8"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_DE00"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_DE00"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.2, ["cmp     count, 7FFFE000h", "jbe     short loc_DE00"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_DDC8"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[2], [2, 3], [1, 4], [4, 5], [], [4, 6], [2]], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 11, 1, 4, 25, 2, 5, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, source", "push    rbp", "push    rbx", "mov     rbp, dest", "xor     ebx, ebx", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+168h+var_40], rax", "xor     eax, eax", "call    last_component", "mov     rdi, dest; name", "mov     r13, rax", "call    last_component", "mov     rdi, source_basename; name", "mov     r14, rax", "call    base_len", "mov     rdi, dest_basename; name", "mov     r15, rax", "call    base_len", "cmp     source_baselen, dest_baselen", "jz      short loc_DE98"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,source", "push~rbp", "push~rbx", "mov~rbp,dest", "xor~ebx,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,dest", "mov~r13,rax", "call~FOO", "mov~rdi,source_basename", "mov~r14,rax", "call~FOO", "mov~rdi,dest_basename", "mov~r15,rax", "call~FOO", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [0, 0, 10, 0, 1, 6, 1, 2, 0, 2, 0.06363636363636363, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_DE67"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.16363636363636364, ["mov     rcx, [rsp+168h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_DF72"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 0, 3, 0.0, ["mov     rax, [rsp+168h+dest_dir_stats.st_dev]", "cmp     [rsp+168h+source_dir_stats.st_dev], rax", "setz    bl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "setz~bl"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.21818181818181817, ["xor     ebx, ebx", "mov     rax, [rsp+168h+dest_dir_stats.st_ino]", "cmp     [rsp+168h+source_dir_stats.st_ino], rax", "jnz     short loc_DF0D"], ["xor~ebx,ebx", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 0, 4, 0.19999999999999998, ["lea     rdx, [rsp+168h+dest_dir_stats]; stat_buf", "mov     rsi, dest_dirname; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_DF28"], ["lea~rdx,[rsp+0]", "mov~rsi,dest_dirname", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 8, 0, 2, 8, 1, 3, 0, 5, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, source_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_DED4"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,source_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 3, 12, 1, 4, 0, 5, 0.10909090909090909, ["mov     rdi, source; file", "call    dir_name", "mov     rdi, dest; file", "mov     source, rax", "call    dir_name", "mov     rdx, rsp; stat_buf", "mov     rsi, source_dirname; filename", "mov     edi, 1; ver", "mov     dest, rax", "call    ___xstat", "test    eax, eax", "jnz     short loc_DF50"], ["mov~rdi,source", "call~FOO", "mov~rdi,dest", "mov~source,rax", "call~FOO", "mov~rdx,rsp", "mov~rsi,source_dirname", "mov~edi,0", "mov~dest,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 138h", "pop     rbx", "pop     rbp", "pop     r12", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "retn"]], [0, 0, 3, 0, 2, 5, 0, 3, 0, 2, 0.16363636363636364, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest_dirname; ptr", "call    free", "jmp     loc_DE67"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest_dirname", "call~FOO", "jmp~FOO"]], [1, 0, 6, 0, 2, 8, 1, 3, 0, 4, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, dest_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     short loc_DEED"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,dest_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [16, 9, 25, 1, 12, 16, 4, 90, 0.07652, 2, 2], "succs": [[1, 3], [8, 3], [], [9, 2], [10], [10, 4], [11, 5], [6], [6, 7], [], [3], [5]], "fname": "same_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 19, 1, 1, 6, 0, 1, 0, 0, 0.17142857142857143, ["mov     rdi, entry; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     r8, used", "add     r8, entry_size", "jb      loc_E0D4"], ["mov~rdi,entry", "call~FOO", "lea~rdx,[rax+0]", "mov~r8,used", "add~r8,entry_size", "jb~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 4, 2, 0.18333333333333335, ["test    dl, dl", "jnz     short loc_DFFC"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 5, 2, 0.03571428571428572, ["movzx   edx, byte ptr [dp+14h]", "test    dl, dl", "jz      short loc_DFC4"], ["movzx~edx,[yte ptr [dp+0]", "test~dl,dl", "jz~FOO"]], [0, 1, 21, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "test    dirp, dirp", "jz      loc_E0BE"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "test~dirp,dirp", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 6, 3, 0.15476190476190477, ["cmp     allocated, r8", "ja      short loc_E055"], ["cmp~allocated,r8", "ja~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 2, 0.08571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 1, 6, 1, 2, 3, -1, 0.14047619047619048, ["mov     byte ptr [name_space+used], 0", "mov     rdi, dirp; dirp", "mov     ebx, [r12]", "call    _closedir", "test    eax, eax", "jnz     short loc_E0B8"], ["mov~<TAG>,0", "mov~rdi,dirp", "mov~ebx,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 19, 0, 1, 5, 1, 2, 2, 4, 0.39047619047619053, ["mov     dword ptr [r12], 0", "mov     rdi, dirp; dirp", "call    _readdir", "test    dp, dp", "jz      loc_E088"], ["mov~<TAG>,0", "mov~rdi,dirp", "call~FOO", "test~dp,dp", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, -1, 0.07857142857142858, ["test    ebx, ebx", "jnz     short loc_E0C3"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0, ["mov     ebx, [r12]", "jmp     short loc_E09D"], ["mov~ebx,<TAG>", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 0, 0, 8, 1, 0.1, ["lea     rcx, [allocated+allocated]", "cmp     rcx, allocated", "jb      loc_E0D4"], ["lea~rcx,<TAG>", "cmp~rcx,allocated", "jb~FOO"]], [0, 0, 19, 0, 0, 3, 0, 0, 9, 2, 0.1, ["cmp     r8, allocated", "mov     rbx, allocated", "jnb     short loc_E020"], ["cmp~r8,allocated", "mov~rbx,allocated", "jnb~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.002380952380952381, ["xor     r14d, r14d", "jmp     short loc_E0A1"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 1, 0, 1, 5, 1, 2, 5, -1, 0.0, ["mov     rdi, name_space; ptr", "xor     r14d, r14d", "call    free", "mov     [r12], ebx", "jmp     short loc_E0A1"], ["mov~rdi,name_space", "xor~r14d,r14d", "call~FOO", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 2, 19, 0, 2, 9, 1, 3, 1, 5, 0.04285714285714286, ["mov     rbp, dirp", "mov     edi, 200h; n", "xor     r13d, r13d", "call    xmalloc", "mov     ebx, 200h", "mov     r14, rax", "call    ___errno_location", "mov     r12, rax", "jmp     short loc_DFC4"], ["mov~rbp,dirp", "mov~edi,<STR>", "xor~r13d,r13d", "call~FOO", "mov~ebx,<STR>", "mov~r14,rax", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [1, 0, 19, 0, 0, 4, 0, 1, 3, 3, 0.22380952380952382, ["movzx   edx, byte ptr [dp+13h]", "lea     r15, [dp+13h]", "cmp     dl, 2Eh ; '.'", "jnz     short loc_DFC0"], ["movzx~edx,[yte ptr [dp+0]", "lea~r15,[dp+0]", "cmp~dl,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 3, 0.002380952380952381, ["movzx   edx, byte ptr [dp+15h]", "jmp     loc_DFC0"], ["movzx~edx,[yte ptr [dp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 19, 0, 1, 7, 0, 2, 7, 5, 0.19285714285714287, ["lea     rdi, [name_space+used]; dest", "mov     rsi, entry; src", "mov     [rsp+48h+n], r8", "call    _memcpy", "mov     r8, [rsp+48h+n]", "mov     r13, r8", "jmp     loc_DFC4"], ["lea~rdi,<TAG>", "mov~rsi,entry", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~r13,r8", "jmp~FOO"]], [0, 0, 19, 0, 1, 8, 0, 1, 10, 6, 0.10476190476190478, ["mov     rdi, name_space; p", "mov     rsi, allocated; n", "mov     [rsp+48h+var_40], r8", "mov     [rsp+48h+n], entry_size", "call    xrealloc", "mov     r8, [rsp+48h+var_40]", "mov     rdx, [rsp+48h+n]; n", "mov     name_space, rax"], ["mov~rdi,name_space", "mov~rsi,allocated", "mov~[rsp+0],r8", "mov~<TAG>,entry_size", "call~FOO", "mov~r8,[rsp+0]", "mov~rdx,<TAG>", "mov~name_space,rax"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 3, 0.06190476190476191, ["cmp     byte ptr [dp+14h], 2Eh ; '.'", "jz      loc_E078"], ["cmp~[yte ptr [dp+0],0", "jz~FOO"]]], "func_feature": [9, 9, 24, 1, 22, 32, 2, 93, 0.09416, 0, 3], "succs": [[18, 4], [0, 7], [0, 7], [13, 15], [19, 5], [10], [8, 9], [16, 6], [12, 14], [8], [18, 11], [10, 20], [], [12], [12], [7], [1, 21], [1], [], [7], [19], [17, 2]], "fname": "savedirstream", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 1, 2, 1, 5, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    opendir_safer", "add     rsp, 8", "mov     rdi, rax; dirp", "jmp     savedirstream"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 5, 0.0, 0, 2], "succs": [[1], []], "fname": "savedir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 1, 2, 1, 5, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    rpl_fdopendir", "add     rsp, 8", "mov     rdi, rax; dirp", "jmp     savedirstream"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 5, 0.0, 0, 2], "succs": [[1], []], "fname": "fdsavedir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[5, 0, 0, 3, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    last_component", "cmp     byte ptr [had_slash], 0", "mov     rbx, had_slash", "cmovz   rbx, file", "mov     rdi, base; name", "call    base_len", "add     base, had_slash", "cmp     byte ptr [base_lim], 0", "mov     byte ptr [base_lim], 0", "setnz   al", "add     rsp, 8", "pop     base_lim", "pop     file", "retn"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "cmp~<TAG>,0", "mov~rbx,had_slash", "cmovz~rbx,file", "mov~rdi,base", "call~FOO", "add~base,had_slash", "cmp~<TAG>,0", "mov~<TAG>,0", "setnz~al", "add~rsp,0", "pop~base_lim", "pop~file", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 18, 0.0, 0, 3], "succs": [[]], "fname": "strip_trailing_slashes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_info_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b]", "cmp     [a], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_info_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 30, 0, 0, 2, 1, 1, 0, 0, 0.17860187553282184, ["test    al, al", "jnz     loc_E662"], ["test~al,al", "jnz~FOO"]], [0, 0, 31, 0, 1, 8, 1, 2, 17, 6, 0.0864236999147485, ["call    lutimens", "test    eax, eax", "mov     r10d, [rsp+148h+stat_result]", "mov     r11, [rsp+148h+res]", "setnz   al", "mov     r8d, dword ptr [rsp+148h+dst_ns]", "mov     r9, [rsp+148h+dst_m_ns]", "jmp     loc_E580"], ["call~FOO", "test~eax,eax", "mov~r10d,[rsp+0]", "mov~r11,[rsp+0]", "setnz~al", "mov~r8d,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 31, 0, 1, 7, 1, 1, 17, 6, 0.0864236999147485, ["call    utimens", "mov     r9, [rsp+148h+dst_m_ns]", "mov     r8d, dword ptr [rsp+148h+dst_ns]", "test    eax, eax", "mov     r11, [rsp+148h+res]", "mov     r10d, [rsp+148h+stat_result]", "setnz   al"], ["call~FOO", "mov~r9,[rsp+0]", "mov~r8d,[word ptr [rsp+0]", "test~eax,eax", "mov~r11,[rsp+0]", "mov~r10d,[rsp+0]", "setnz~al"]], [0, 0, 57, 0, 0, 2, 0, 1, 7, 16, 0.1155157715260017, ["cmp     cs:new_dst_res_4918, dst_res_0", "jz      loc_E6B0"], ["cmp~<TAG>,dst_res_0", "jz~FOO"]], [0, 0, 59, 0, 1, 11, 1, 2, 6, 17, 0.10720375106564364, ["mov     rax, [dst_stat+0]", "mov     rdi, cs:ht_4917; table", "mov     [rsp+148h+dst_ns], r9", "mov     dword ptr [rsp+148h+res], r10d", "mov     [rsi], rax", "call    hash_insert", "test    rax, rax", "mov     r11, rax", "mov     r10d, dword ptr [rsp+148h+res]", "mov     r9, [rsp+148h+dst_ns]", "jz      loc_E8DA"], ["mov~rax,[dst_stat+0]", "mov~rdi,<TAG>", "mov~[rsp+0],r9", "mov~[word ptr [rsp+0],r10d", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~r11,rax", "mov~r10d,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [3, 1, 33, 1, 0, 25, 2, 1, 16, 7, 0.17988064791133845, ["mov     rax, [rsp+148h+dst_a_s_0]", "mov     edx, 38E38E39h", "lea     r15, [rsp+148h+timespec]", "mov     [rsp+148h+dst_m_ns], dst_m_ns_0", "mov     [rsp+148h+res], dst_res_0", "mov     [rsp+148h+stat_result], r10d", "mov     m, r15; timespec", "mov     rdi, [rsp+148h+dst_name]; file", "mov     [rsp+148h+timespec.tv_sec], rax", "movsxd  rax, dword ptr [rsp+148h+var_118]", "mov     [rsp+148h+timespec.tv_nsec], rax", "movzx   eax, byte ptr [rsp+148h+dst_ns]", "mov     dword ptr [rsp+148h+dst_ns], r8d", "or      rax, r13", "mov     [rsp+148h+timespec.tv_sec+10h], rax", "mov     eax, r8d", "mul     edx", "shr     edx, 1", "lea     eax, [rdx+dst_m_ns_0]", "cdqe", "mov     [rsp+148h+timespec.tv_nsec+10h], rax", "mov     eax, [dst_stat+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_E7E6"], ["mov~rax,[rsp+0]", "mov~edx,0", "lea~r15,[rsp+0]", "mov~[rsp+0],dst_m_ns_0", "mov~[rsp+0],dst_res_0", "mov~[rsp+0],r10d", "mov~m,r15", "mov~rdi,[rsp+0]", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,[yte ptr [rsp+0]", "mov~[word ptr [rsp+0],r8d", "or~rax,r13", "mov~[rsp+0],rax", "mov~eax,r8d", "mul~,edx", "shr~edx,0", "lea~eax,<TAG>", "cdqe~", "mov~[rsp+0],rax", "mov~eax,[dst_stat+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 28, -1, 0.0023444160272804776, ["jmp     loc_E66F"], ["jmp~FOO"]], [0, 0, 17, 1, 0, 4, 0, 1, 27, -1, 0.010869565217391304, ["lea     esi, [res_0+res_0*4]", "add     esi, esi", "cmp     esi, r8d", "jnz     short loc_E84B"], ["lea~esi,<TAG>", "add~esi,esi", "cmp~esi,r8d", "jnz~FOO"]], [2, 1, 29, 0, 0, 11, 1, 1, 19, 4, 0.16709292412617222, ["mov     eax, [dst_stat+18h]", "mov     [rsp+148h+var_118], r9", "lea     rdx, [rsp+148h+dst_status]; stat_buf", "mov     dword ptr [rsp+148h+dst_m_ns], r8d", "mov     [rsp+148h+dst_ns], r11", "mov     edi, 1; ver", "mov     dword ptr [rsp+148h+res], r10d", "mov     rsi, [rsp+148h+dst_name]; filename", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_E88A"], ["mov~eax,[dst_stat+0]", "mov~[rsp+0],r9", "lea~rdx,[rsp+0]", "mov~[word ptr [rsp+0],r8d", "mov~[rsp+0],r11", "mov~edi,0", "mov~[word ptr [rsp+0],r10d", "mov~rsi,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [6, 0, 48, 12, 0, 33, 2, 1, 14, 13, 0.015345268542199489, ["mov     eax, r10d", "mov     r13d, r10d", "imul    edi", "mov     eax, r10d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r13d, eax", "mov     eax, ecx", "imul    edi", "mov     eax, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, ecx", "add     eax, eax", "sub     edx, eax", "mov     eax, esi", "or      r13d, edx", "imul    edi", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, esi", "add     eax, eax", "sub     edx, eax", "or      r13d, edx", "jnz     loc_E770"], ["mov~eax,r10d", "mov~r13d,r10d", "imul~,edi", "mov~eax,r10d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r13d,eax", "mov~eax,ecx", "imul~,edi", "mov~eax,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,ecx", "add~eax,eax", "sub~edx,eax", "mov~eax,esi", "or~r13d,edx", "imul~,edi", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,esi", "add~eax,eax", "sub~edx,eax", "or~r13d,edx", "jnz~FOO"]], [6, 0, 48, 7, 0, 23, 0, 1, 13, 13, 0.033816425120772944, ["mov     eax, r10d", "sar     r10d, 1Fh", "lea     r12d, [res_0+res_0*4]", "imul    edi", "mov     eax, ecx", "sar     ecx, 1Fh", "add     r12d, r12d", "mov     r8d, r12d", "sar     edx, 2", "sub     edx, r10d", "mov     r10d, edx", "imul    edi", "mov     eax, esi", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, ecx", "mov     ecx, edx", "imul    edi", "sar     edx, 2", "sub     edx, esi", "cmp     dword ptr [rsp+148h+res], r12d", "mov     esi, edx", "jle     loc_E770"], ["mov~eax,r10d", "sar~r10d,0", "lea~r12d,<TAG>", "imul~,edi", "mov~eax,ecx", "sar~ecx,0", "add~r12d,r12d", "mov~r8d,r12d", "sar~edx,0", "sub~edx,r10d", "mov~r10d,edx", "imul~,edi", "mov~eax,esi", "sar~esi,0", "sar~edx,0", "sub~edx,ecx", "mov~ecx,edx", "imul~,edi", "sar~edx,0", "sub~edx,esi", "cmp~[word ptr [rsp+0],r12d", "mov~esi,edx", "jle~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 118h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.028132992327365727, ["mov     rdi, [rsp+148h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebx", "jnz     loc_E8B7"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 10, 2, 0, 13, 2, 0, 24, -1, 0.06223358908780904, ["xor     eax, eax", "cmp     r8d, 77359400h", "mov     ebx, r8d", "setz    al", "not     eax", "cdqe", "and     r12, rax", "mov     eax, r10d", "mov     r10d, r14d", "cdq", "idiv    r8d", "sub     r10d, edx", "nop     word ptr [rax+rax+00h]"], ["xor~eax,eax", "cmp~r8d,0", "mov~ebx,r8d", "setz~al", "not~eax", "cdqe~", "and~r12,rax", "mov~eax,r10d", "mov~r10d,r14d", "cdq~,", "idiv~,r8d", "sub~r10d,edx", "nop~[ord ptr [rax+0]"]], [1, 0, 18, 0, 0, 2, 0, 1, 23, -1, 0.09345694799658993, ["cmp     r8d, 0Ah", "jz      loc_E66F"], ["cmp~r8d,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 27, -1, 0.0023444160272804776, ["mov     r8d, 77359400h", "jmp     loc_E66F"], ["mov~r8d,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 23, 0, 0.02632139812446718, ["mov     r8d, ebx", "jmp     loc_E66F"], ["mov~r8d,ebx", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 26, -1, 0.004688832054560955, ["mov     r8d, esi"], ["mov~r8d,esi"]], [0, 0, 8, 0, 0, 2, 0, 1, 1, -1, 0.0697996589940324, ["cmp     src_s_0, r13", "jg      loc_E6D8"], ["cmp~src_s_0,r13", "jg~FOO"]], [2, 0, 69, 1, 0, 19, 2, 1, 0, 23, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, ecx", "sub     rsp, 118h", "mov     r14, [src_stat+60h]", "mov     r13, [dst_stat+58h]", "mov     rax, fs:28h", "mov     [rsp+148h+var_40], rax", "xor     eax, eax", "and     ebx, 1", "mov     [rsp+148h+dst_name], dst_name_0", "mov     r12, [src_stat+58h]", "mov     r9, [dst_stat+60h]", "mov     r10d, r14d", "jz      loc_E2C0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,ecx", "sub~rsp,0", "mov~r14,[src_stat+0]", "mov~r13,[dst_stat+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "mov~[rsp+0],dst_name_0", "mov~r12,[src_stat+0]", "mov~r9,[dst_stat+0]", "mov~r10d,r14d", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 10, -1, 0.057225063938618925, ["mov     [r11+8], ebx", "mov     byte ptr [r11+0Ch], 1", "jmp     loc_E2C0"], ["mov~[r11+0],ebx", "mov~[yte ptr [r11+0],0", "jmp~FOO"]], [1, 0, 9, 2, 0, 12, 2, 0, 9, -1, 0.01896845694799659, ["xor     eax, eax", "cmp     edi, 77359400h", "setz    al", "not     eax", "cdqe", "and     src_s_0, rax", "mov     eax, r10d", "mov     r10d, r14d", "cdq", "idiv    edi", "sub     r10d, edx", "nop     dword ptr [rax+00h]"], ["xor~eax,eax", "cmp~edi,0", "setz~al", "not~eax", "cdqe~", "and~src_s_0,rax", "mov~eax,r10d", "mov~r10d,r14d", "cdq~,", "idiv~,edi", "sub~r10d,edx", "nop~[word ptr [rax+0]"]], [1, 0, 48, 1, 0, 2, 0, 1, 15, 14, 0.0123614663256607, ["sub     r15d, 1", "jnz     loc_E3F8"], ["sub~r15d,0", "jnz~FOO"]], [0, 0, 65, 0, 0, 3, 0, 1, 2, 21, 0.03868286445012788, ["lea     rax, [src_s_0-1]", "cmp     rax, dst_s_0", "jg      loc_E6D8"], ["lea~rax,[src_s_0-1]+0]", "cmp~rax,dst_s_0", "jg~FOO"]], [0, 0, 68, 0, 0, 6, 0, 1, 1, 22, 0.01257459505541347, ["cmp     dst_s_0, src_s_0", "mov     rbp, dst_stat", "setz    byte ptr [rsp+148h+stat_result]", "cmp     r9d, r14d", "movzx   eax, byte ptr [rsp+148h+stat_result]", "jnz     short loc_E210"], ["cmp~dst_s_0,src_s_0", "mov~rbp,dst_stat", "setz~[yte ptr [rsp+0]", "cmp~r9d,r14d", "movzx~eax,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 67, 0, 0, 2, 1, 1, 2, 22, 0.0007459505541346973, ["test    al, al", "jz      short loc_E210"], ["test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 6, 0, 2, 23, 3, 0.008418584825234441, ["call    lutimens", "mov     r10d, dword ptr [rsp+148h+res]", "mov     r11, [rsp+148h+dst_ns]", "mov     r8d, dword ptr [rsp+148h+dst_m_ns]", "mov     r9, [rsp+148h+var_118]", "jmp     loc_E657"], ["call~FOO", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~r8d,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 1, 25, 0, 0, 12, 1, 1, 22, 4, 0.028985507246376812, ["mov     eax, [dst_stat+18h]", "mov     [rsp+148h+timespec.tv_sec+10h], r13", "mov     rsi, r15; timespec", "mov     [rsp+148h+timespec.tv_nsec+10h], rdx", "mov     [rsp+148h+var_118], r9", "mov     dword ptr [rsp+148h+dst_m_ns], r8d", "mov     [rsp+148h+dst_ns], r11", "and     eax, 0F000h", "mov     dword ptr [rsp+148h+res], r10d", "mov     rdi, [rsp+148h+dst_name]; file", "cmp     eax, 0A000h", "jz      loc_E8BC"], ["mov~eax,[dst_stat+0]", "mov~[rsp+0],r13", "mov~rsi,r15", "mov~[rsp+0],rdx", "mov~[rsp+0],r9", "mov~[word ptr [rsp+0],r8d", "mov~[rsp+0],r11", "and~eax,0", "mov~[word ptr [rsp+0],r10d", "mov~rdi,[rsp+0]", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 55, 0, 0, 6, 1, 1, 8, 15, 0.13469735720375106, ["movzx   eax, byte ptr [r11+0Ch]", "mov     edi, [dst_res_0+8]", "mov     dword ptr [rsp+148h+res], edi", "test    al, al", "mov     byte ptr [rsp+148h+dst_ns], al", "jz      short loc_E2F0"], ["movzx~eax,[yte ptr [r11+0]", "mov~edi,[dst_res_0+0]", "mov~[word ptr [rsp+0],edi", "test~al,al", "mov~[yte ptr [rsp+0],al", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 8, 16, 0.0, ["mov     cs:new_dst_res_4918, 0", "jmp     loc_E289"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 4, -1, 0.000319693094629156, ["setl    bl", "movzx   ebx, bl", "jmp     loc_E1E2"], ["setl~bl", "movzx~ebx,bl", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.01278772378516624, ["cmp     r10d, r9d", "jg      loc_E6D8"], ["cmp~r10d,r9d", "jg~FOO"]], [1, 0, 41, 0, 0, 12, 1, 1, 14, 12, 0.029127593066211994, ["mov     eax, r12d", "mov     r12, [rsp+148h+dst_m_ns]", "mov     r10d, [rsp+148h+var_10C]", "cmp     eax, 77359400h", "mov     [dst_res_0+8], eax", "mov     r13, [rsp+148h+dst_m_s]", "setz    byte ptr [rsp+148h+dst_ns]", "movzx   eax, byte ptr [rsp+148h+dst_ns]", "not     eax", "cdqe", "and     rax, r12", "jmp     loc_E4CE"], ["mov~eax,r12d", "mov~r12,[rsp+0]", "mov~r10d,[rsp+0]", "cmp~eax,0", "mov~[dst_res_0+0],eax", "mov~r13,[rsp+0]", "setz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "not~eax", "cdqe~", "and~rax,r12", "jmp~FOO"]], [7, 0, 53, 12, 0, 39, 2, 1, 9, 14, 0.12190963341858482, ["mov     rcx, [dst_stat+50h]", "mov     edi, 66666667h", "mov     rsi, [dst_stat+70h]", "mov     eax, ecx", "mov     [rsp+148h+var_118], rcx", "imul    edi", "mov     eax, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     r15d, edx", "add     eax, eax", "sub     ecx, eax", "mov     eax, esi", "imul    edi", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     r8d, edx", "add     eax, eax", "sub     esi, eax", "mov     eax, r9d", "imul    edi", "mov     eax, r9d", "or      ecx, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     esi, edx", "mov     dword ptr [rsp+148h+dst_m_ns], edx", "mov     edx, r9d", "add     eax, eax", "sub     edx, eax", "or      ecx, edx", "jnz     loc_E698"], ["mov~rcx,[dst_stat+0]", "mov~edi,0", "mov~rsi,[dst_stat+0]", "mov~eax,ecx", "mov~[rsp+0],rcx", "imul~,edi", "mov~eax,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~r15d,edx", "add~eax,eax", "sub~ecx,eax", "mov~eax,esi", "imul~,edi", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~r8d,edx", "add~eax,eax", "sub~esi,eax", "mov~eax,r9d", "imul~,edi", "mov~eax,r9d", "or~ecx,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~esi,edx", "mov~[word ptr [rsp+0],edx", "mov~edx,r9d", "add~eax,eax", "sub~edx,eax", "or~ecx,edx", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 12, 12, 0.008738277919863598, ["mov     dword ptr [dst_res_0+8], 0Ah", "mov     rax, src_s_0", "jmp     loc_E4CE"], ["mov~[word ptr [dst_res_0+0],0", "mov~rax,src_s_0", "jmp~FOO"]], [9, 0, 50, 12, 0, 35, 2, 1, 11, 13, 0.02877237851662404, ["mov     eax, r8d", "imul    edi", "mov     eax, r8d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r8d, eax", "mov     eax, r15d", "imul    edi", "mov     eax, r15d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r15d, eax", "mov     eax, dword ptr [rsp+148h+dst_m_ns]", "or      r15d, r8d", "mov     r8d, 0Ah", "imul    edi", "mov     edi, dword ptr [rsp+148h+dst_m_ns]", "mov     eax, edi", "sar     edx, 2", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, 8", "mov     edx, edi", "mov     edi, 66666667h", "or      r15d, edx", "jnz     loc_E7D6"], ["mov~eax,r8d", "imul~,edi", "mov~eax,r8d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r8d,eax", "mov~eax,r15d", "imul~,edi", "mov~eax,r15d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r15d,eax", "mov~eax,[word ptr [rsp+0]", "or~r15d,r8d", "mov~r8d,0", "imul~,edi", "mov~edi,[word ptr [rsp+0]", "mov~eax,edi", "sar~edx,0", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,0", "mov~edx,edi", "mov~edi,0", "or~r15d,edx", "jnz~FOO"]], [1, 0, 62, 0, 1, 12, 1, 2, 5, 19, 0.0, ["mov     r8, cs:data_freer; data_freer", "lea     options, dev_info_compare; comparator", "lea     src_stat, dev_info_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 10h; candidate", "mov     [rsp+148h+dst_ns], dst_ns_0", "mov     dword ptr [rsp+148h+res], r10d", "call    hash_initialize", "mov     r9, [rsp+148h+dst_ns]", "mov     cs:ht_4917, rax", "mov     r10d, dword ptr [rsp+148h+res]", "jmp     loc_E239"], ["mov~r8,<TAG>", "lea~options,<TAG>", "lea~src_stat,<TAG>", "xor~esi,esi", "mov~edi,0", "mov~[rsp+0],dst_ns_0", "mov~[word ptr [rsp+0],r10d", "call~FOO", "mov~r9,[rsp+0]", "mov~<TAG>,rax", "mov~r10d,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 4, 19, 0.061167945439045183, ["cmp     cs:ht_4917, 0", "jz      loc_E6E8"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 0, 1, 3, 20, 0.05008525149190111, ["lea     rax, [dst_s_0-1]", "cmp     rax, src_s_0", "jg      loc_E2E0"], ["lea~rax,[dst_s_0-1]+0]", "cmp~rax,src_s_0", "jg~FOO"]], [0, 0, 27, 0, 1, 7, 0, 2, 20, 3, 0.07875106564364877, ["call    ___lxstat", "mov     r10d, dword ptr [rsp+148h+res]", "mov     [rsp+148h+stat_result], eax", "mov     r11, [rsp+148h+dst_ns]", "mov     r8d, dword ptr [rsp+148h+dst_m_ns]", "mov     r9, [rsp+148h+var_118]", "jmp     loc_E5DB"], ["call~FOO", "mov~r10d,[word ptr [rsp+0]", "mov~[rsp+0],eax", "mov~r11,[rsp+0]", "mov~r8d,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 24, 2, 0.017476555839727195, ["cmp     [rsp+148h+stat_result], 0", "jz      loc_E809"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 0, 1, 23, 3, 0.008418584825234441, ["call    utimens", "mov     r9, [rsp+148h+var_118]", "mov     r8d, dword ptr [rsp+148h+dst_m_ns]", "mov     r11, [rsp+148h+dst_ns]", "mov     r10d, dword ptr [rsp+148h+res]"], ["call~FOO", "mov~r9,[rsp+0]", "mov~r8d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~r10d,[word ptr [rsp+0]"]], [3, 0, 20, 3, 0, 10, 2, 1, 22, 1, 0.13469735720375106, ["mov     ecx, dword ptr [rsp+148h+dst_status.st_mtim.tv_sec]", "mov     esi, 0Ah", "and     ecx, 1", "imul    ecx, 3B9ACA00h", "add     ecx, dword ptr [rsp+148h+dst_status.st_mtim.tv_nsec]", "mov     eax, ecx", "cdq", "idiv    esi", "test    edx, edx", "jz      loc_E8DF"], ["mov~ecx,[word ptr [rsp+0]", "mov~esi,0", "and~ecx,0", "imul~ecx,,0", "add~ecx,[word ptr [rsp+0]", "mov~eax,ecx", "cdq~,", "idiv~,esi", "test~edx,edx", "jz~FOO"]], [0, 0, 26, 0, 0, 9, 4, 1, 21, 2, 0.1606990622335891, ["mov     rax, [rsp+148h+dst_status.st_mtim.tv_sec]", "mov     rcx, [rsp+148h+dst_status.st_mtim.tv_nsec]", "movsxd  rdx, r9d", "xor     rcx, rdx", "xor     rax, r13", "or      rax, rcx", "movsxd  rcx, [rsp+148h+stat_result]", "or      rax, rcx", "jz      loc_E809"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "movsxd~rdx,r9d", "xor~rcx,rdx", "xor~rax,r13", "or~rax,rcx", "movsxd~rcx,[rsp+0]", "or~rax,rcx", "jz~FOO"]], [4, 0, 41, 0, 0, 6, 1, 1, 17, 12, 0.007281898266552998, ["mov     rax, r12", "mov     dword ptr [dst_res_0+8], 77359400h", "mov     byte ptr [rsp+148h+dst_ns], 1", "and     rax, 0FFFFFFFFFFFFFFFEh", "mov     r8d, 77359400h", "jmp     loc_E4CE"], ["mov~rax,r12", "mov~[word ptr [dst_res_0+0],0", "mov~[yte ptr [rsp+0],0", "and~rax,0", "mov~r8d,0", "jmp~FOO"]], [1, 0, 43, 0, 0, 8, 3, 1, 16, 13, 0.014350667803353223, ["mov     r13, [rsp+148h+dst_m_s]", "mov     rax, [rsp+148h+dst_a_s_0]", "mov     r12, [rsp+148h+dst_m_ns]", "mov     r10d, [rsp+148h+var_10C]", "or      rax, r13", "or      rax, [dst_stat+68h]", "test    al, 1", "jz      loc_E7A1"], ["mov~r13,[rsp+0]", "mov~rax,[rsp+0]", "mov~r12,[rsp+0]", "mov~r10d,[rsp+0]", "or~rax,r13", "or~rax,[dst_stat+0]", "test~al,0", "jz~FOO"]], [1, 0, 17, 1, 0, 2, 0, 1, 26, -1, 0.030903665814151746, ["sub     edi, 1", "jz      short loc_E8AC"], ["sub~edi,0", "jz~FOO"]], [0, 0, 48, 0, 0, 5, 0, 0, 12, 14, 0.023870417732310314, ["mov     [rsp+148h+var_10C], r10d", "mov     r10d, [rsp+148h+var_110]", "mov     r15d, eax", "mov     [rsp+148h+dst_m_ns], src_s_0", "mov     [rsp+148h+dst_m_s], dst_m_s_0"], ["mov~[rsp+0],r10d", "mov~r10d,[rsp+0]", "mov~r15d,eax", "mov~[rsp+0],src_s_0", "mov~[rsp+0],dst_m_s_0"]], [0, 0, 39, 0, 0, 2, 0, 1, 13, 10, 0.18627450980392157, ["cmp     r9d, r14d", "jl      short loc_E4E7"], ["cmp~r9d,r14d", "jl~FOO"]], [0, 0, 40, 0, 0, 2, 0, 1, 12, 11, 0.19213554987212275, ["cmp     r13, r12", "jg      loc_E1E2"], ["cmp~r13,r12", "jg~FOO"]], [2, 0, 41, 0, 0, 4, 0, 1, 11, 12, 0.10155583972719523, ["mov     dword ptr [dst_res_0+8], 0Ah", "mov     rax, src_s_0", "mov     r8d, 0Ah", "jmp     loc_E4CE"], ["mov~[word ptr [dst_res_0+0],0", "mov~rax,src_s_0", "mov~r8d,0", "jmp~FOO"]], [1, 0, 52, 0, 0, 6, 0, 1, 10, 13, 0.12563938618925832, ["cmp     dword ptr [rsp+148h+res], 0Ah", "mov     rax, [dst_stat+48h]", "mov     ecx, r8d", "mov     [rsp+148h+var_110], r15d", "mov     [rsp+148h+dst_a_s_0], rax", "jle     loc_E7C0"], ["cmp~[word ptr [rsp+0],0", "mov~rax,[dst_stat+0]", "mov~ecx,r8d", "mov~[rsp+0],r15d", "mov~[rsp+0],rax", "jle~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 5, 18, 0.0850383631713555, ["mov     rsi, cs:new_dst_res_4918; entry", "test    rsi, rsi", "jz      loc_E730"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [3, 0, 17, 0, 0, 3, 0, 0, 24, -1, 0.058823529411764705, ["mov     edi, 9", "mov     esi, 0Ah", "mov     ebx, 66666667h"], ["mov~edi,0", "mov~esi,0", "mov~ebx,0"]], [2, 0, 41, 0, 0, 3, 0, 0, 17, 12, 0.007281898266552998, ["mov     dword ptr [dst_res_0+8], 3B9ACA00h", "mov     rax, r12", "mov     r8d, 3B9ACA00h"], ["mov~[word ptr [dst_res_0+0],0", "mov~rax,r12", "mov~r8d,0"]], [0, 0, 7, 0, 0, 1, 0, 1, 2, -1, 0.036231884057971016, ["jl      short loc_E2E0"], ["jl~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 35, 2, 0, 7, 0, 1, 16, 8, 0.007459505541346973, ["mov     eax, r10d", "cdq", "idiv    r8d", "mov     eax, r14d", "sub     eax, edx", "cmp     eax, r9d", "jle     loc_E4F6"], ["mov~eax,r10d", "cdq~,", "idiv~,r8d", "mov~eax,r14d", "sub~eax,edx", "cmp~eax,r9d", "jle~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 15, 8, 0.1867007672634271, ["jz      loc_E6C0"], ["jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 17, -1, 0.0017050298380221654, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 27, 0, 1, 6, 0, 1, 20, 3, 0.07875106564364877, ["call    ___xstat", "mov     r9, [rsp+148h+var_118]", "mov     r8d, dword ptr [rsp+148h+dst_m_ns]", "mov     r11, [rsp+148h+dst_ns]", "mov     r10d, dword ptr [rsp+148h+res]", "mov     [rsp+148h+stat_result], eax"], ["call~FOO", "mov~r9,[rsp+0]", "mov~r8d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~[rsp+0],eax"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.018861892583120203, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_E1E2"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 14, 9, 0.18925831202046037, ["cmp     r13, rax", "jl      loc_E6D8"], ["cmp~r13,rax", "jl~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 3, -1, 0.0009590792838874681, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [1, 0, 38, 0, 0, 2, 0, 1, 14, 10, 0.000639386189258312, ["cmp     byte ptr [rsp+148h+stat_result], 0", "jnz     loc_E1E2"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [3, 0, 60, 0, 1, 11, 0, 2, 6, 18, 0.0, ["mov     edi, 10h; n", "mov     [rsp+148h+dst_ns], r9", "mov     dword ptr [rsp+148h+res], r10d", "call    xmalloc", "mov     r9, [rsp+148h+dst_ns]", "mov     rsi, rax", "mov     cs:new_dst_res_4918, rax", "mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "mov     r10d, dword ptr [rsp+148h+res]", "jmp     loc_E249"], ["mov~edi,0", "mov~[rsp+0],r9", "mov~[word ptr [rsp+0],r10d", "call~FOO", "mov~r9,[rsp+0]", "mov~rsi,rax", "mov~<TAG>,rax", "mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "mov~r10d,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.001278772378516624, ["mov     ebx, 1", "jmp     loc_E1E2"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 19, -1, 0.0076726342710997444, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_E1E2"], ["mov~ebx,0", "jmp~FOO"]], [4, 0, 17, 5, 0, 17, 0, 1, 25, -1, 0.05328218243819267, ["mov     eax, ecx", "sar     ecx, 1Fh", "imul    ebx", "sar     edx, 2", "sub     edx, ecx", "mov     eax, edx", "mov     ecx, edx", "imul    ebx", "mov     eax, edx", "mov     edx, ecx", "sar     eax, 2", "sar     edx, 1Fh", "sub     eax, edx", "lea     eax, [rax+rax*4]", "add     eax, eax", "cmp     ecx, eax", "jz      loc_E66C"], ["mov~eax,ecx", "sar~ecx,0", "imul~,ebx", "sar~edx,0", "sub~edx,ecx", "mov~eax,edx", "mov~ecx,edx", "imul~,ebx", "mov~eax,edx", "mov~edx,ecx", "sar~eax,0", "sar~edx,0", "sub~eax,edx", "lea~eax,<TAG>", "add~eax,eax", "cmp~ecx,eax", "jz~FOO"]]], "func_feature": [11, 37, 67, 4, 70, 105, 1, 479, 0.05303, 6, 63], "succs": [[8, 68], [0], [0], [28, 29], [3, 61], [1, 2], [13], [69, 6], [60, 39], [32, 22], [32, 9], [], [56, 11], [20], [13, 53], [13], [13], [13], [62, 55], [24, 18], [18], [18], [10, 45], [62, 38], [25, 23], [64, 23], [40], [41, 26], [33, 21], [28], [12], [62, 30], [49], [51, 20], [49], [34, 47], [52], [52, 36], [67, 37], [43], [42, 68], [40], [16, 14], [42, 27], [49], [44, 54], [7, 15], [10], [65, 63], [48, 12], [49], [50, 35], [66, 4], [69], [49], [67, 31], [], [59, 5], [57, 5], [62], [43], [], [12], [58, 62], [12], [12, 63], [4], [12], [12], [17, 46]], "fname": "utimecmp", "n_num": 70}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.013636363636363636, ["mov     qword ptr [ts], 0", "xor     eax, eax", "jmp     loc_E928"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.04090909090909091, ["cmp     rdx, 3FFFFFFFh", "jz      short loc_E9B8"], ["cmp~rdx,0", "jz~FOO"]], [0, 1, 0, 1, 0, 9, 1, 0, 3, 0, 0.0, ["mov     rax, [statbuf+60h]", "mov     rdx, [statbuf+58h]", "mov     [timespec+18h], rax", "mov     [timespec+10h], rdx", "add     rsp, 18h", "xor     eax, eax", "pop     timespec", "pop     statbuf", "retn"], ["mov~rax,[statbuf+0]", "mov~rdx,[statbuf+0]", "mov~[timespec+0],rax", "mov~[timespec+0],rdx", "add~rsp,<STR>", "xor~eax,eax", "pop~timespec", "pop~statbuf", "retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 0, 0.049999999999999996, ["cmp     rdx, 3FFFFFFEh", "jz      short loc_E94E"], ["cmp~rdx,0", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 3, 0, 0.02727272727272727, ["mov     statbuf, timespec; ts", "call    gettime", "mov     rdx, [timespec+18h]", "cmp     rdx, 3FFFFFFEh", "jnz     short loc_E91D"], ["mov~statbuf,timespec", "call~FOO", "mov~rdx,[timespec+0]", "cmp~rdx,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 3, 0, 0.05909090909090909, ["xor     eax, eax", "cmp     rdx, 3FFFFFFFh", "jz      short loc_E998"], ["xor~eax,eax", "cmp~rdx,0", "jz~FOO"]], [1, 1, 11, 1, 0, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, statbuf", "sub     rsp, 18h", "mov     rbx, [ts]", "mov     rax, [timespec+8]", "mov     rdx, [timespec+18h]", "cmp     rax, 3FFFFFFEh", "jz      short loc_E970"], ["push~rbp", "push~rbx", "mov~rbp,statbuf", "sub~rsp,<STR>", "mov~rbx,<TAG>", "mov~rax,[timespec+0]", "mov~rdx,[timespec+0]", "cmp~rax,0", "jz~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     timespec", "pop     statbuf", "retn"], ["add~rsp,<STR>", "pop~timespec", "pop~statbuf", "retn"]], [2, 0, 3, 0, 0, 3, 0, 1, 1, 0, 0.02727272727272727, ["cmp     rdx, 3FFFFFFEh", "mov     eax, 1", "jz      short loc_E928"], ["cmp~rdx,0", "mov~eax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, 0, 0.01818181818181818, ["mov     rax, [statbuf+50h]", "mov     rcx, [statbuf+48h]", "mov     [timespec+8], rax", "xor     eax, eax", "cmp     rdx, 3FFFFFFFh", "mov     [timespec], rcx", "jnz     short loc_E928"], ["mov~rax,[statbuf+0]", "mov~rcx,[statbuf+0]", "mov~[timespec+0],rax", "xor~eax,eax", "cmp~rdx,0", "mov~<TAG>,rcx", "jnz~FOO"]], [0, 1, 0, 1, 1, 8, 0, 1, 3, 0, 0.0, ["lea     rdi, [timespec+10h]; ts", "mov     [rsp+28h+var_19], al", "call    gettime", "movzx   eax, [rsp+28h+var_19]", "add     rsp, 18h", "pop     timespec", "pop     statbuf", "retn"], ["lea~rdi,[timespec+0]", "mov~[rsp+0],al", "call~FOO", "movzx~eax,[rsp+0]", "add~rsp,<STR>", "pop~timespec", "pop~statbuf", "retn"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 0, 0.05454545454545454, ["cmp     rax, 3FFFFFFFh", "jz      short loc_E930"], ["cmp~rax,0", "jz~FOO"]]], "func_feature": [2, 4, 11, 1, 12, 17, 2, 57, 0.02424, 0, 4], "succs": [[7], [0, 4], [], [2, 5], [2, 5], [10, 7], [8, 11], [], [9, 7], [10, 7], [], [1, 3]], "fname": "update_timespec", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 7, 0, 0, 4, 0, 0, 0, 0, 0.13636363636363635, ["mov     rax, [timespec+18h]", "lea     rcx, [rax-3FFFFFFEh]", "cmp     rcx, 1", "jbe     short loc_EA0B"], ["mov~rax,[timespec+0]", "lea~rcx,[rax-3FFFFFFEh]+0]", "cmp~rcx,0", "jbe~FOO"]], [1, 0, 9, 0, 0, 4, 0, 0, 1, -1, 0.08181818181818182, ["mov     rax, [timespec+8]", "lea     rdx, [rax-3FFFFFFEh]", "cmp     rdx, 1", "jbe     short loc_E9F2"], ["mov~rax,[timespec+0]", "lea~rdx,[rax-3FFFFFFEh]+0]", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, -1, 0.03636363636363636, ["cmp     rax, 3B9AC9FFh", "ja      short loc_EA40"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 4, -1, 0.08636363636363636, ["cmp     rcx, 1", "ja      short loc_EA32"], ["cmp~rcx,0", "ja~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.1409090909090909, ["xor     eax, eax", "cmp     rdx, 1", "ja      short loc_EA1F"], ["xor~eax,eax", "cmp~rdx,0", "ja~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     qword ptr [timespec], 0", "mov     eax, 1"], ["mov~<TAG>,0", "mov~eax,0"]], [1, 0, 11, 1, 0, 3, 1, 1, 0, 1, 0.0, ["sub     rsp, 8", "test    timespec, timespec", "jz      short loc_EA52"], ["sub~rsp,0", "test~timespec,timespec", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, -1, 0.013636363636363636, ["cmp     rax, 3B9AC9FFh", "ja      short loc_EA40"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___4251; \"validate_timespec\"", "lea     rsi, aUtimensC; \"utimens.c\"", "lea     timespec, aTimespec; \"timespec\"", "mov     edx, 51h ; 'Q'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~timespec,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["mov     qword ptr [timespec+10h], 0", "mov     eax, 1"], ["mov~[word ptr [timespec+0],0", "mov~eax,0"]], [1, 0, 0, 1, 0, 2, 0, 0, 4, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 3, -1, 0.04090909090909091, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     short loc_EA32"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [2, 2, 8, 0, 12, 17, 2, 35, 0.0447, 3, 2], "succs": [[4, 7], [0, 2], [0, 11], [9, 10], [3, 5], [3], [8, 1], [11, 4], [], [10], [], [10]], "fname": "validate_timespec", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 28, 0, 0, 1, 0, 1, 0, 0, 0.012288583509513742, ["jnz     short loc_ED71"], ["jnz~FOO"]], [2, 0, 30, 0, 1, 8, 1, 2, 4, 3, 0.0165169133192389, ["xor     ecx, ecx; flags", "mov     rdx, rsi; times", "mov     edi, 0FFFFFF9Ch; fd", "mov     rsi, file; path", "call    _utimensat", "cmp     eax, 0", "mov     ebp, eax", "jle     loc_ED00"], ["xor~ecx,ecx", "mov~rdx,rsi", "mov~edi,0", "mov~rsi,file", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jle~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 6, -1, 0.068446088794926, ["test    al, al", "mov     ebp, 0FFFFFFFFh", "jnz     loc_EC48"], ["test~al,al", "mov~ebp,0", "jnz~FOO"]], [1, 0, 15, 0, 1, 8, 1, 2, 5, -1, 0.025766384778012685, ["lea     r13, [rsp+0F8h+timeval]", "mov     rsi, file; filename", "mov     edi, 1; ver", "mov     rdx, r13; stat_buf", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     loc_EB7B"], ["lea~r13,[rsp+0]", "mov~rsi,file", "mov~edi,0", "mov~rdx,r13", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 15, 0, 1, 7, 1, 1, 5, -1, 0.0400369978858351, ["lea     r13, [rsp+0F8h+timeval]", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "mov     rdx, r13; stat_buf", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["lea~r13,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "mov~rdx,r13", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 33, 0, 0, 2, 1, 1, 2, -1, 0.019027484143763214, ["test    ebx, ebx", "js      loc_ED57"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 2, 6, 0.019556025369978858, ["test    file, file", "jz      loc_EC85"], ["test~file,file", "jz~FOO"]], [1, 0, 41, 0, 0, 4, 2, 1, 1, 6, 0.019556025369978858, ["xor     r13d, r13d", "test    r12, r12", "mov     [rsp+0F8h+ts], 0", "jnz     loc_EAE4"], ["xor~r13d,r13d", "test~r12,r12", "mov~[rsp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.04439746300211417, ["mov     rcx, [rsp+0F8h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_ED6C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.016649048625792813, ["mov     cs:utimensat_works_really, 1", "jmp     loc_EC48"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 5, -1, 0.02973044397463002, ["jz      short loc_ED02"], ["jz~FOO"]], [1, 0, 21, 0, 1, 3, 0, 2, 6, -1, 0.01744186046511628, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     short loc_ED02"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 27, 0, 1, 3, 0, 2, 6, 1, 0.015856236786469344, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     short loc_ED02"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [5, 0, 8, 4, 0, 20, 0, 0, 5, -1, 0.03461945031712474, ["mov     rax, [rsi]", "mov     rdi, [rsi+8]", "mov     rcx, 20C49BA5E353F7CFh", "lea     r13, [rsp+0F8h+timeval]", "mov     [rsp+0F8h+timeval.tv_sec], rax", "mov     rax, rdi", "sar     rdi, 3Fh", "imul    rcx", "mov     rax, [rsi+10h]", "mov     rsi, [rsi+18h]", "mov     [rsp+0F8h+timeval.tv_sec+10h], rax", "mov     rax, rsi", "sar     rsi, 3Fh", "sar     rdx, 7", "sub     rdx, rdi", "mov     [rsp+0F8h+timeval.tv_usec], rdx", "imul    rcx", "sar     rdx, 7", "sub     rdx, rsi", "mov     [rsp+0F8h+timeval.tv_usec+10h], rdx"], ["mov~rax,<TAG>", "mov~rdi,[rsi+0]", "mov~rcx,0", "lea~r13,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,rdi", "sar~rdi,0", "imul~,rcx", "mov~rax,[rsi+0]", "mov~rsi,[rsi+0]", "mov~[rsp+0],rax", "mov~rax,rsi", "sar~rsi,0", "sar~rdx,0", "sub~rdx,rdi", "mov~[rsp+0],rdx", "imul~,rcx", "sar~rdx,0", "sub~rdx,rsi", "mov~[rsp+0],rdx"]], [0, 0, 10, 0, 0, 4, 2, 1, 6, -1, 0.016913319238900635, ["mov     rsi, [rsp+0F8h+ts]", "xor     r13d, r13d", "test    rsi, rsi", "jnz     loc_EBBE"], ["mov~rsi,[rsp+0]", "xor~r13d,r13d", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 4, -1, 0.07822410147991543, ["mov     rsi, [rsp+0F8h+ts]", "test    rsi, rsi", "jz      loc_ED18"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, -1, 0.047040169133192394, ["cmp     [rsp+0F8h+ts], 0", "jz      loc_ED18"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 18, 0, 0, 4, 1, 1, 5, -1, 0.028012684989429177, ["test    r13d, r13d", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jnz     loc_EB62"], ["test~r13d,r13d", "mov~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 29, 0, 0, 3, 1, 0, 4, -1, 0.03594080338266385, ["mov     eax, cs:utimensat_works_really", "test    eax, eax", "jns     loc_EB1F"], ["mov~eax,<TAG>", "test~eax,eax", "jns~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 6, -1, 0.06818181818181819, ["test    ebx, ebx", "js      loc_ECE0"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 5, -1, 0.04254756871035941, ["xor     r13d, r13d", "jmp     loc_EC12"], ["xor~r13d,r13d", "jmp~FOO"]], [0, 0, 31, 0, 1, 5, 0, 2, 3, -1, 0.028012684989429177, ["mov     esi, ebx; fd2", "mov     edi, ebx; fd", "call    _dup2", "cmp     eax, ebx", "jnz     loc_ED62"], ["mov~esi,ebx", "mov~edi,ebx", "call~FOO", "cmp~eax,ebx", "jnz~FOO"]], [1, 0, 26, 0, 1, 2, 0, 1, 5, -1, 0.012684989429175477, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 25, 0, 0, 1, 0, 0, 5, -1, 0.07558139534883722, ["mov     rsi, [rsp+0F8h+ts]; times"], ["mov~rsi,[rsp+0]"]], [0, 0, 26, 0, 0, 1, 0, 1, 7, 0, 0.023255813953488372, ["jmp     loc_EB1F"], ["jmp~FOO"]], [1, 0, 24, 0, 1, 5, 0, 2, 4, -1, 0.10795454545454546, ["mov     edi, ebx; fd", "call    _futimens", "cmp     eax, 0", "mov     ebp, eax", "jle     loc_ED20"], ["mov~edi,ebx", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jle~FOO"]], [0, 0, 12, 0, 1, 6, 2, 2, 8, -1, 0.02167019027484144, ["lea     rsi, [rsp+0F8h+ts]; ts", "mov     rdi, r13; statbuf", "xor     ebp, ebp", "call    update_timespec", "test    al, al", "jnz     loc_EC48"], ["lea~rsi,[rsp+0]", "mov~rdi,r13", "xor~ebp,ebp", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 1, 44, 1, 0, 12, 2, 1, 0, 7, 0.0, ["push    r13", "push    r12", "mov     r12, file", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_30], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_EC70"], ["push~r13", "push~r12", "mov~r12,file", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 3, -1, 0.0031712473572938693, ["call    ___errno_location", "mov     dword ptr [rax], 9"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 7, 2, 2, 7, -1, 0.04413319238900634, ["xor     esi, esi; file", "mov     rdx, t; tvp", "mov     edi, ebx; fd", "call    _futimesat", "test    eax, eax", "mov     ebp, eax", "jz      short loc_EC48"], ["xor~esi,esi", "mov~rdx,t", "mov~edi,ebx", "call~FOO", "test~eax,eax", "mov~ebp,eax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 7, -1, 0.009513742071881607, ["jmp     loc_EC1A"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 9, -1, 0.010042283298097253, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 19, 0, 0, 1, 0, 1, 7, -1, 0.016913319238900635, ["jmp     loc_EB41"], ["jmp~FOO"]], [0, 0, 31, 0, 0, 3, 1, 0, 3, 4, 0.030391120507399578, ["test    ebx, ebx", "mov     rsi, [rsp+0F8h+ts]", "jns     short loc_EB24"], ["test~ebx,ebx", "mov~rsi,[rsp+0]", "jns~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 8, -1, 0.019027484143763214, ["test    file, file", "mov     ebp, 0FFFFFFFFh", "jz      short loc_EC48"], ["test~file,file", "mov~ebp,0", "jz~FOO"]], [2, 0, 18, 0, 0, 4, 1, 1, 3, -1, 0.14349894291754758, ["test    r13d, r13d", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      short loc_EBB0"], ["test~r13d,r13d", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 19, 0, 1, 2, 0, 1, 5, -1, 0.07399577167019028, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 3, 0, 1, 5, 0, 1, 9, -1, 0.0, ["mov     rsi, t; tvp", "mov     rdi, file; file", "call    _utimes", "mov     ebp, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~rsi,t", "mov~rdi,file", "call~FOO", "mov~ebp,eax", "nop~[word ptr [rax+0]"]], [0, 0, 17, 0, 0, 2, 1, 1, 4, -1, 0.06421775898520085, ["test    ebx, ebx", "js      loc_ED38"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 2, 5, 0.059196617336152224, ["mov     edx, cs:utimensat_works_really", "test    edx, edx", "js      short loc_EB41"], ["mov~edx,<TAG>", "test~edx,edx", "js~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 7, -1, 0.003964059196617336, ["mov     rdx, t; tvp", "mov     rsi, file; file", "mov     edi, 0FFFFFF9Ch; fd", "call    _futimesat", "mov     ebp, eax", "jmp     loc_EC48"], ["mov~rdx,t", "mov~rsi,file", "mov~edi,0", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.011099365750528542, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_EC48"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 42, 0, 1, 10, 1, 2, 1, 7, 0.002642706131078224, ["movdqu  xmm0, xmmword ptr [timespec]", "lea     file, [rsp+0F8h+adjusted_timespec]; timespec", "movaps  xmmword ptr [rsp+0F8h+adjusted_timespec.tv_sec], xmm0", "mov     [rsp+0F8h+ts], rdi", "movdqu  xmm0, xmmword ptr [timespec+10h]", "movaps  xmmword ptr [rsp+0F8h+adjusted_timespec.tv_sec+10h], xmm0", "call    validate_timespec", "test    eax, eax", "mov     r13d, eax", "js      loc_ED62"], ["movdqu~xmm0,<TAG>", "lea~file,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rdi", "movdqu~xmm0,[mmword ptr [timespec+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "mov~r13d,eax", "js~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 4, -1, 0.0, ["add     rsp, 0D8h", "pop     fd", "pop     rbp", "pop     file", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~fd", "pop~rbp", "pop~file", "pop~r13", "retn"]]], "func_feature": [16, 28, 49, 1, 45, 70, 3, 179, 0.03239, 3, 6], "succs": [[10, 13], [0, 23], [17, 9], [2], [2], [29, 22], [40, 5], [40, 5], [], [8, 44], [9], [10, 12], [33, 10], [25, 10], [20], [14, 31], [21, 14], [27, 21], [4, 15], [24, 18], [41, 30], [20], [42, 19], [24], [26], [24], [11, 37], [32, 9], [43, 7], [42], [9, 35], [30], [16], [36], [1, 26], [9, 38], [16, 39], [36], [9], [3, 4], [34, 36], [9], [9], [42, 6], []], "fname": "fdutimens", "n_num": 45}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, edi", "mov     fd, file; file", "mov     esi, eax; fd", "jmp     fdutimens"], ["mov~eax,edi", "mov~fd,file", "mov~esi,eax", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "gl_futimens", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, timespec; timespec", "mov     esi, 0FFFFFFFFh; fd", "jmp     fdutimens"], ["mov~rdx,timespec", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 4, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "utimens", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 20, 0, 0, 1, 0, 0, 0, 0, 0.01846153846153846, ["mov     rdx, [rsp+0E8h+ts]; times"], ["mov~rdx,[rsp+0]"]], [0, 0, 21, 0, 0, 3, 1, 0, 2, 5, 0.03692307692307692, ["mov     eax, cs:lutimensat_works_really", "test    eax, eax", "jns     short loc_EE80"], ["mov~eax,<TAG>", "test~eax,eax", "jns~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 4, 2, 0.05846153846153846, ["jnz     short loc_EF7A"], ["jnz~FOO"]], [3, 0, 19, 0, 1, 7, 0, 2, 3, 3, 0.09846153846153846, ["mov     ecx, 100h; flags", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "cmp     eax, 0", "mov     ebx, eax", "jle     loc_EF40"], ["mov~ecx,0", "mov~rsi,file", "mov~edi,0", "call~FOO", "cmp~eax,0", "mov~ebx,eax", "jle~FOO"]], [1, 0, 16, 0, 1, 3, 0, 2, 5, 1, 0.04153846153846154, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     short loc_EF42"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 6, 0, 0.046153846153846156, ["jmp     loc_EE01"], ["jmp~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 3, -1, 0.09846153846153846, ["test    r12d, r12d", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jnz     loc_EEC0"], ["test~r12d,r12d", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, -1, 0.023076923076923078, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 22, 0, 0, 4, 1, 0, 1, 5, 0.01846153846153846, ["mov     edx, cs:lutimensat_works_really", "mov     [rsp+0E8h+ts], 0", "test    edx, edx", "jns     short loc_EF30"], ["mov~edx,<TAG>", "mov~[rsp+0],0", "test~edx,edx", "jns~FOO"]], [0, 1, 26, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     rbp, file", "push    rbx", "sub     rsp, 0D0h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_20], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_EF08"], ["push~r12", "push~rbp", "mov~rbp,file", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 2, 1, 2, 4, 0.027692307692307693, ["xor     edx, edx", "xor     r12d, r12d", "jmp     loc_EE85"], ["xor~edx,edx", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, -1, 0.01846153846153846, ["mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jmp     loc_EE18"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 3, -1, 0.07461538461538461, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_EF6B"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 12, 0, 1, 5, 1, 2, 4, -1, 0.047692307692307694, ["call    ___errno_location", "test    r12d, r12d", "mov     dword ptr [rax], 26h ; '&'", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_EE18"], ["call~FOO", "test~r12d,r12d", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.07384615384615384, ["mov     rcx, [rsp+0E8h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_EF75"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 1, 6, 0, 0, 4, 1, 1, 4, -1, 0.06076923076923077, ["mov     eax, [rsp+0E8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_EF60"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.05846153846153846, ["cmp     [rsp+0E8h+ts], 0", "jz      loc_EE32"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 6, -1, 0.023846153846153847, ["lea     rsi, [rsp+0E8h+ts]; ts", "mov     rdi, r12; statbuf", "call    update_timespec", "test    al, al", "jz      loc_EE32"], ["lea~rsi,[rsp+0]", "mov~rdi,r12", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 5, -1, 0.023076923076923078, ["mov     cs:utimensat_works_really, 1", "mov     cs:lutimensat_works_really, 1", "jmp     loc_EE5A"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 5, -1, 0.006923076923076923, ["mov     rdx, [rsp+0E8h+ts]; timespec", "mov     esi, 0FFFFFFFFh; fd", "mov     rdi, file; file", "call    fdutimens", "mov     ebx, eax"], ["mov~rdx,[rsp+0]", "mov~esi,0", "mov~rdi,file", "call~FOO", "mov~ebx,eax"]], [1, 0, 10, 0, 1, 8, 1, 2, 4, -1, 0.09615384615384616, ["lea     r12, [rsp+0E8h+st]", "mov     rsi, file; filename", "mov     edi, 1; ver", "mov     rdx, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "mov     ebx, eax", "jnz     loc_EF6B"], ["lea~r12,[rsp+0]", "mov~rsi,file", "mov~edi,0", "mov~rdx,r12", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jnz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 5, -1, 0.004615384615384615, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, -1, 0.006923076923076923, ["jmp     loc_EE5A"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.055384615384615386, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_EE5A"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 22, 0, 1, 10, 1, 2, 1, 6, 0.01846153846153846, ["movdqu  xmm0, xmmword ptr [timespec]", "lea     file, [rsp+0E8h+adjusted_timespec]; timespec", "movaps  xmmword ptr [rsp+0E8h+adjusted_timespec.tv_sec], xmm0", "mov     [rsp+0E8h+ts], rdi", "movdqu  xmm0, xmmword ptr [timespec+10h]", "movaps  xmmword ptr [rsp+0E8h+adjusted_timespec.tv_sec+10h], xmm0", "call    validate_timespec", "test    eax, eax", "mov     r12d, eax", "js      loc_EF6B"], ["movdqu~xmm0,<TAG>", "lea~file,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rdi", "movdqu~xmm0,[mmword ptr [timespec+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 0D0h", "pop     rbx", "pop     file", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~file", "pop~r12", "retn"]]], "func_feature": [10, 14, 29, 1, 27, 40, 3, 102, 0.0384, 3, 2], "succs": [[3], [0, 6], [19, 4], [2, 13], [19, 5], [6], [21, 7], [12], [10, 11], [8, 25], [3], [12], [16, 24], [12, 21], [], [26, 14], [20, 22], [16, 18], [16, 23], [15], [15], [24, 17], [24], [15], [15], [24, 1], []], "fname": "lutimens", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3600", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3599, 0", "jz      short loc_EFA8"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3599, 1", "setz    al", "mov     cs:can_write_3600, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_EFE5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_EFE3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 14, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_F005"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_F003"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 6, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_F054"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_F040"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 1, 1, 1, -1, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[3, 5], [0, 4], [], [2], [2], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_F093"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[1], []], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 5, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.3333333333333333, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_F174"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 6, 1, 1, 1, 0, 0.0, ["mov     rdx, [rsp+28h+response]", "mov     byte ptr [rdx+rax-1], 0", "mov     rdi, [rsp+28h+response]; response", "call    _rpmatch", "test    eax, eax", "setnle  bl"], ["mov~rdx,[rsp+0]", "mov~[yte ptr [rdx+0],0", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnle~bl"]], [3, 1, 4, 1, 1, 15, 3, 2, 0, 0, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_F152"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]]], "func_feature": [4, 5, 6, 1, 5, 5, 2, 31, 0.06667, 2, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "yesno", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.02631578947368421, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_F23A"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 19, 2, 0, 3, 0, 1, 4, 3, 0.14035087719298245, ["add     buf_size, buf_size", "sub     r12d, 1", "jz      loc_F290"], ["add~buf_size,buf_size", "sub~r12d,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 428h", "pop     buf_size", "pop     rbp", "pop     r12", "pop     r13", "pop     filename", "pop     fd", "retn"], ["add~rsp,0", "pop~buf_size", "pop~rbp", "pop~r12", "pop~r13", "pop~filename", "pop~fd", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.09941520467836257, ["mov     rcx, [rsp+458h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_F2C2"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 4, 2, 0.039473684210526314, ["mov     rdi, link_length; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jz      short loc_F23A"], ["mov~rdi,link_length", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 3, 3, 0.1111111111111111, ["cmp     buffer, r13", "mov     byte ptr [buffer+rdx+0], 0", "lea     r12, [rdx+1]", "jz      short loc_F29F"], ["cmp~buffer,r13", "mov~[yte ptr [buffer+0],0", "lea~r12,[rdx+0]", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 4, 0.1783625730994152, ["cmp     rdx, buf_size", "jb      loc_F268"], ["cmp~rdx,buf_size", "jb~FOO"]], [0, 0, 19, 0, 1, 8, 1, 1, 1, 5, 0.1871345029239766, ["mov     rdx, buffer; buf", "mov     rcx, buf_size; len", "mov     rsi, filename; path", "mov     edi, r15d; fd", "call    _readlinkat", "test    rax, rax", "mov     rdx, rax", "jns     short loc_F1C0"], ["mov~rdx,buffer", "mov~rcx,buf_size", "mov~rsi,filename", "mov~edi,r15d", "call~FOO", "test~rax,rax", "mov~rdx,rax", "jns~FOO"]], [1, 0, 19, 0, 1, 5, 0, 2, 2, 4, 0.05555555555555555, ["mov     [rsp+458h+var_450], rax", "call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "mov     rdx, [rsp+458h+var_450]", "jz      short loc_F1C0"], ["mov~[rsp+0],rax", "call~FOO", "cmp~<TAG>,0", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 19, 0, 1, 5, 1, 2, 5, 3, 0.12280701754385964, ["mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jz      short loc_F238"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jz~FOO"]], [3, 0, 19, 1, 0, 17, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "mov     r15d, edi", "push    r13", "push    r12", "mov     r14, filename", "push    rbp", "push    rbx", "mov     r12d, 35h ; '5'", "mov     ebx, 400h", "sub     rsp, 428h", "lea     r13, [rsp+458h+initial_buf]", "mov     rax, fs:28h", "mov     [rsp+458h+var_40], rax", "xor     eax, eax", "mov     rbp, buffer", "jmp     short loc_F1F3"], ["push~r15", "push~r14", "mov~r15d,edi", "push~r13", "push~r12", "mov~r14,filename", "push~rbp", "push~rbx", "mov~r12d,0", "mov~ebx,0", "sub~rsp,0", "lea~r13,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbp,buffer", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 3, 4, 0.07602339181286549, ["cmp     buffer, r13", "jz      short loc_F1D6"], ["cmp~buffer,r13", "jz~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 5, 2, 0.0, ["mov     rdi, buffer; ptr", "mov     rsi, link_length; size", "call    _realloc", "test    smaller_buffer, smaller_buffer", "cmovnz  buffer, smaller_buffer", "jmp     short loc_F23A"], ["mov~rdi,buffer", "mov~rsi,link_length", "call~FOO", "test~smaller_buffer,smaller_buffer", "cmovnz~buffer,smaller_buffer", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 4, 2, 0.039473684210526314, ["cmp     buf_size, link_length", "jbe     short loc_F23A"], ["cmp~buf_size,link_length", "jbe~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, 2, 0.013157894736842105, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_F23A"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 5, 2, 0.0, ["mov     rdx, link_length; n", "mov     rsi, r13; src", "mov     rdi, buffer; dest", "call    _memcpy", "jmp     loc_F23A"], ["mov~rdx,link_length", "mov~rsi,r13", "mov~rdi,buffer", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 4, 2, 0.021929824561403508, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 19, 0, 1, 2, 0, 1, 4, 4, 0.0, ["mov     rdi, buffer; ptr", "call    free"], ["mov~rdi,buffer", "call~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, 3, 0.049707602339181284, ["cmp     buffer, r13", "jz      short loc_F238"], ["cmp~buffer,r13", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [10, 9, 23, 2, 20, 29, 1, 90, 0.05804, 1, 4], "succs": [[3], [0, 9], [], [2, 19], [3, 15], [4, 13], [11, 5], [8, 6], [18, 6], [16, 7], [7], [1, 17], [3], [3, 12], [3], [3], [3], [1], [16, 14], []], "fname": "areadlinkat", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 4, 2, 0, 4, 0, 1, 0, 0, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jnz     short loc_F312"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jnz~FOO"]], [2, 0, 4, 0, 0, 12, 1, 1, 1, 2, 0.1, ["movzx   eax, byte ptr [p1]", "lea     ecx, [__c-41h]", "lea     edx, [__c+20h]", "cmp     ecx, 1Ah", "cmovb   eax, edx", "movzx   edx, byte ptr [p2]", "lea     r9d, [__c-41h]", "lea     r8d, [__c+20h]", "cmp     r9d, 1Ah", "cmovb   edx, r8d", "test    al, al", "jnz     short loc_F2E0"], ["movzx~eax,<TAG>", "lea~ecx,[__c-41h]+0]", "lea~edx,[__c+0]", "cmp~ecx,0", "cmovb~eax,edx", "movzx~edx,<TAG>", "lea~r9d,[__c-41h]+0]", "lea~r8d,[__c+0]", "cmp~r9d,0", "cmovb~edx,r8d", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "cmp     p1, p2", "jnz     short loc_F2EC"], ["xor~eax,eax", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0.05, ["jmp     short locret_F31A"], ["jmp~FOO"]], [0, 0, 1, 1, 0, 3, 0, 0, 2, 1, 0.1, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 4, 0, 6, 8, 2, 24, 0.04167, 0, 3], "succs": [[1, 4], [0, 4], [1, 3], [5], [5], []], "fname": "c_strcasecmp", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_F347"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_F347"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_F360"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_F380"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 1, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 9, 0, 0, 3, 1, 1, 0, 0, 0.12447065940713854, ["movzx   ebp, byte ptr [aliases]", "test    bpl, bpl", "jz      short loc_F42C"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [2, 0, 58, 1, 1, 19, 3, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     edi, 0Eh; item", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    _nl_langinfo", "mov     r15, cs:charset_aliases", "test    rax, rax", "mov     rbx, rax", "lea     codeset, aSSUnbackup+14h; \"\"", "cmovz   codeset, rax", "test    r15, r15", "jnz     short loc_F3FA"], ["push~r15", "push~r14", "mov~edi,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~rax,rax", "mov~rbx,rax", "lea~codeset,<TAG>", "cmovz~codeset,rax", "test~r15,r15", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, -1, 0.13067150635208713, ["mov     cs:charset_aliases, r15", "jmp     loc_F3FA"], ["mov~<TAG>,r15", "jmp~FOO"]], [0, 0, 9, 0, 2, 6, 0, 2, 4, -1, 0.002268602540834846, ["mov     rdi, aliases; s", "call    _strlen", "lea     rbp, [aliases+rax+1]", "mov     rdi, aliases; s", "call    _strlen", "lea     r15, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~rbp,[aliases+0]", "mov~rdi,aliases", "call~FOO", "lea~r15,[aliases+0]"]], [0, 0, 56, 0, 1, 5, 1, 2, 2, 4, 0.031155474894131886, ["lea     rdi, aCharsetaliasdi; \"CHARSETALIASDIR\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      short loc_F4D0"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 1, 5, 0.014519056261343014, ["jmp     loc_F470"], ["jmp~FOO"]], [1, 0, 44, 0, 1, 5, 0, 1, 5, -1, 0.07713248638838476, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "mov     byte ptr [rbp+r14+0], 2Fh ; '/'"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[yte ptr [rbp+0],0"]], [0, 0, 46, 0, 1, 4, 1, 2, 4, -1, 0.08817301875378102, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_F4B6"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 11, -1, 0.07047791893526921, ["mov     rdi, r14; stream", "call    _fclose", "mov     rax, [rsp+0D8h+var_D8]", "test    rax, rax", "jz      loc_F544"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 40, 0, 2, 11, 1, 3, 14, -1, 0.12734422262552936, ["mov     rsi, r14; stream", "call    _ungetc", "mov     r13, [rsp+0D8h+src]", "mov     rcx, [rsp+0D8h+var_D0]", "lea     rsi, a50s50s; \"%50s %50s\"", "xor     eax, eax", "mov     rdi, r14; stream", "mov     rdx, r13", "call    _fscanf", "cmp     eax, 1", "jle     loc_F70D"], ["mov~rsi,r14", "call~FOO", "mov~r13,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "xor~eax,eax", "mov~rdi,r14", "mov~rdx,r13", "call~FOO", "cmp~eax,0", "jle~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 17, -1, 0.06291591046581972, ["cmp     eax, 0FFFFFFFFh", "jz      short loc_F70D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 10, -1, 0.14806412583182094, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "mov     edi, eax", "jnz     loc_F5BA"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "mov~edi,eax", "jnz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 3, 3, 0.006352087114337568, ["cmp     byte ptr [rax], 0", "jz      short loc_F4D0"], ["cmp~<TAG>,0", "jz~FOO"]], [4, 0, 40, 2, 0, 14, 1, 1, 19, -1, 0.11675741076830007, ["mov     esi, eax", "mov     [rsp+0D8h+var_C0], rdx", "shr     esi, 10h", "test    eax, 8080h", "cmovz   eax, esi", "lea     rsi, [r13+2]", "mov     ecx, eax", "cmovz   r13, rsi", "add     cl, al", "sbb     r13, 3", "sub     r13, [rsp+0D8h+var_D0]", "cmp     [rsp+0D8h+var_D8], 0", "lea     rax, [rdx+r13]", "jnz     loc_F781"], ["mov~esi,eax", "mov~[rsp+0],rdx", "shr~esi,0", "test~eax,0", "cmovz~eax,esi", "lea~rsi,[r13+0]", "mov~ecx,eax", "cmovz~r13,rsi", "add~cl,al", "sbb~r13,0", "sub~r13,[rsp+0]", "cmp~<TAG>,0", "lea~rax,<TAG>", "jnz~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 18, -1, 0.11675741076830007, ["mov     esi, [r13+0]", "add     r13, 4", "lea     eax, [rsi-1010101h]", "not     esi", "and     eax, esi", "and     eax, 80808080h", "jz      short loc_F640"], ["mov~esi,[r13+0]", "add~r13,0", "lea~eax,[rsi-1010101h]+0]", "not~esi", "and~eax,esi", "and~eax,0", "jz~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 9, -1, 0.20235934664246827, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jnb     loc_F6FA"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jnb~FOO"]], [2, 0, 40, 5, 2, 17, 0, 2, 22, -1, 0.05142165759225651, ["mov     r15, [rsp+0D8h+var_D8]", "mov     rdi, 0FFFFFFFFFFFFFFFEh", "mov     rsi, [rsp+0D8h+src]; src", "sub     rdi, rdx", "add     rdx, 1; n", "sub     r15, r13", "add     rdi, r15", "add     rdi, r12; dest", "call    _memcpy", "mov     rsi, [rsp+0D8h+var_D0]; src", "lea     rdi, [r12+r15-1]; dest", "lea     rdx, [r13+1]; n", "mov     r15, r12", "call    _memcpy", "mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      loc_F5AF"], ["mov~r15,<TAG>", "mov~rdi,0", "mov~rsi,[rsp+0]", "sub~rdi,rdx", "add~rdx,0", "sub~r15,r13", "add~rdi,r15", "add~rdi,r12", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[r12+0]", "lea~rdx,[r13+0]", "mov~r15,r12", "call~FOO", "mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 2, -1, 0.06291591046581972, ["mov     rsi, aliases; s2", "mov     rdi, codeset; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_F41F"], ["mov~rsi,aliases", "mov~rdi,codeset", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, -1, 0.032062915910465825, ["cmp     bpl, 2Ah ; '*'", "jnz     short loc_F3E0"], ["cmp~bpl,0", "jnz~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 16, -1, 0.11675741076830007, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_F602"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 15, -1, 0.11675741076830007, ["mov     rdx, r13"], ["mov~rdx,r13"]], [0, 0, 11, 0, 0, 1, 0, 0, 7, -1, 0.07849364791288567, ["lea     r15, aSSUnbackup+14h; \"\""], ["lea~r15,<TAG>"]], [0, 0, 12, 0, 1, 3, 0, 2, 23, -1, 0.036297640653357534, ["mov     rdi, r14; stream", "call    _fclose", "jmp     loc_F544"], ["mov~rdi,r14", "call~FOO", "jmp~FOO"]], [4, 0, 43, 1, 1, 13, 2, 1, 6, -1, 0.1457955232909861, ["add     r12, rbp", "mov     rax, 2E74657372616863h", "mov     esi, 20000h; oflag", "mov     [r12], rax", "mov     eax, 73h ; 's'", "mov     dword ptr [r12+8], 61696C61h", "mov     [r12+0Ch], ax", "mov     rdi, rbp; file", "xor     eax, eax", "call    _open", "test    eax, eax", "mov     r12d, eax", "jns     short loc_F568"], ["add~r12,rbp", "mov~rax,0", "mov~esi,0", "mov~<TAG>,rax", "mov~eax,0", "mov~[word ptr [r12+0],0", "mov~[r12+0],ax", "mov~rdi,rbp", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~r12d,eax", "jns~FOO"]], [0, 0, 53, 0, 1, 6, 1, 2, 4, 2, 0.007259528130671507, ["mov     rdi, rax; s", "call    _strlen", "test    rax, rax", "mov     r12, rax", "mov     r14, rax", "jnz     loc_F7C0"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~r14,rax", "jnz~FOO"]], [0, 0, 40, 0, 0, 4, 0, 0, 8, -1, 0.1358136721113128, ["lea     rax, [rsp+0D8h+var_78]", "mov     [rsp+0D8h+var_D0], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+src], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 42, 0, 1, 8, 2, 2, 7, -1, 0.13611615245009076, ["lea     rsi, aNoClobber+9; modes", "mov     edi, eax; fd", "xor     r15d, r15d", "call    _fdopen", "test    rax, rax", "mov     r14, rax", "mov     [rsp+0D8h+var_D8], 0", "jz      loc_F763"], ["lea~rsi,<TAG>", "mov~edi,eax", "xor~r15d,r15d", "call~FOO", "test~rax,rax", "mov~r14,rax", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, -1, 0.0007562008469449487, ["cmp     byte ptr [aliases+1], 0", "jnz     short loc_F3E0"], ["cmp~[yte ptr [aliases+0],0", "jnz~FOO"]], [1, 0, 47, 0, 0, 1, 0, 0, 5, -1, 0.01663641863278887, ["mov     edi, 0Eh; size"], ["mov~edi,0"]], [0, 0, 40, 1, 1, 9, 0, 2, 20, -1, 0.05248033877797943, ["add     rax, [rsp+0D8h+var_D8]", "mov     rdi, r15; ptr", "lea     rcx, [rax+2]", "lea     rsi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _realloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax", "jmp     loc_F6A8"], ["add~rax,<TAG>", "mov~rdi,r15", "lea~rcx,[rax+0]", "lea~rsi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax", "jmp~FOO"]], [0, 0, 40, 0, 1, 6, 0, 1, 20, -1, 0.05248033877797943, ["lea     rcx, [rax+2]", "lea     rdi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _malloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax"], ["lea~rcx,[rax+0]", "lea~rdi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax"]], [0, 0, 3, 0, 1, 3, 0, 1, 3, -1, 0.002268602540834846, ["mov     rdi, aliases; s", "call    _strlen", "lea     codeset, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~codeset,[aliases+0]"]], [1, 0, 40, 0, 0, 3, 0, 0, 11, -1, 0.21899576527525713, ["lea     eax, [rdi-9]", "cmp     eax, 1", "jbe     short loc_F5A1"], ["lea~eax,[rdi-9]+0]", "cmp~eax,0", "jbe~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 12, -1, 0.20538415003024804, ["cmp     edi, 20h ; ' '", "jz      short loc_F5A1"], ["cmp~edi,<STR>", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 1, 18, -1, 0.037507562008469456, ["jmp     loc_F5A1"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 22, -1, 0.05323653962492438, ["test    r15, r15", "jz      short loc_F7B3"], ["test~r15,r15", "jz~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 23, -1, 0.0, ["mov     rdi, r15; ptr", "call    free"], ["mov~rdi,r15", "call~FOO"]], [0, 0, 46, 0, 1, 4, 1, 2, 6, -1, 0.0500604960677556, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jnz     loc_F558"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 6, -1, 0.007410768300060496, ["lea     rdi, [rax+0Eh]", "jmp     loc_F4A5"], ["lea~rdi,[rax+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.03357531760435572, ["lea     r15, aSSUnbackup+14h; \"\""], ["lea~r15,<TAG>"]], [0, 0, 40, 0, 0, 3, 0, 0, 10, -1, 0.10571687840290382, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   edi, byte ptr [rax]; c"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~edi,<TAG>"]], [3, 0, 40, 2, 0, 11, 1, 0, 17, -1, 0.11675741076830007, ["mov     ecx, eax", "mov     r13, [rsp+0D8h+var_D0]", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "cmovz   rdx, rcx", "mov     ecx, eax", "add     cl, al", "sbb     rdx, 3", "sub     rdx, [rsp+0D8h+src]"], ["mov~ecx,eax", "mov~r13,[rsp+0]", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "cmovz~rdx,rcx", "mov~ecx,eax", "add~cl,al", "sbb~rdx,0", "sub~rdx,[rsp+0]"]], [0, 0, 40, 0, 0, 2, 1, 1, 21, -1, 0.11675741076830007, ["test    r12, r12", "jz      loc_F7A6"], ["test~r12,r12", "jz~FOO"]], [0, 0, 44, 0, 1, 5, 0, 2, 7, -1, 0.04627949183303086, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "jmp     short loc_F509"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 16, -1, 0.0662431941923775, ["cmp     eax, 0Ah", "jz      short loc_F777"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 15, -1, 0.027223230490018152, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "setnz   dl", "jmp     short loc_F740"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "setnz~dl", "jmp~FOO"]], [1, 0, 40, 0, 0, 4, 0, 0, 15, -1, 0.027223230490018152, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   eax, byte ptr [rax]", "mov     edx, 1"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~eax,<TAG>", "mov~edx,0"]], [0, 0, 10, 0, 1, 3, 0, 2, 8, -1, 0.10586811857229281, ["mov     rdi, rbp; ptr", "call    free", "jmp     loc_F4BD"], ["mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 5, 1, 0.0036297640653357535, ["cmp     byte ptr [r13+rax-1], 2Fh ; '/'", "jnz     short loc_F7D6"], ["cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 17, -1, 0.002117362371445856, ["test    dl, dl", "jz      short loc_F777"], ["test~dl,dl", "jz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 13, -1, 0.20205686630369027, ["cmp     edi, 23h ; '#'", "jz      loc_F749"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, -1, 0.0338777979431337, ["cmp     byte ptr [codeset], 0", "lea     rax, aAscii; \"ASCII\"", "cmovz   codeset, rax", "mov     rcx, [rsp+0D8h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbx", "jnz     loc_F7D1"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "cmovz~codeset,rax", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 14, -1, 0.0662431941923775, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      short loc_F730"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, -1, 0.028281911675741078, ["mov     byte ptr [r15+rax], 0", "jmp     loc_F54B"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 11, 0, 1, 4, 0, 2, 8, -1, 0.003327283726557774, ["mov     edi, r12d; fd", "lea     r15, aSSUnbackup+14h; \"\"", "call    _close", "jmp     loc_F54B"], ["mov~edi,r12d", "lea~r15,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 47, 1, 0, 3, 0, 1, 6, 0, 0.008015728977616456, ["lea     rdi, [rax+0Fh]", "add     r12, 1", "jmp     loc_F4E8"], ["lea~rdi,[rax+0]", "add~r12,0", "jmp~FOO"]], [3, 0, 47, 0, 0, 4, 0, 0, 3, -1, 0.054143980641258325, ["lea     r13, aUsrLocalLib; \"/usr/local/lib\"", "mov     edi, 1Dh; size", "mov     r12d, 0Fh", "mov     r14d, 0Eh"], ["lea~r13,<TAG>", "mov~edi,0", "mov~r12d,0", "mov~r14d,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     aliases", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~aliases", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [27, 25, 65, 5, 59, 88, 1, 272, 0.06752, 8, 16], "succs": [[17, 51], [0, 5], [0], [0], [56, 12], [4], [23], [6, 39], [21, 53], [8, 20], [8, 34], [8, 32], [24, 56], [29, 30], [13, 14], [40, 11], [40, 11], [18, 31], [3, 27], [41, 19], [19], [47], [21], [26, 21], [48, 28], [15], [25, 54], [3, 31], [37], [42], [42], [51], [33, 15], [50, 15], [15], [36, 22], [22], [43, 39], [37], [2], [32], [14], [16, 35], [23], [49, 10], [44], [44], [2], [38, 55], [10, 52], [9, 52], [57, 58], [45, 46], [47], [47], [7], [7], [], []], "fname": "locale_charset", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 20, 0, 0, 3, 0, 1, 0, 0, 0.10398860398860399, ["movzx   eax, byte ptr [needle+i-1]", "cmp     al, [needle+j]", "jnz     short loc_F89D"], ["movzx~eax,[yte ptr [needle+0]", "cmp~al,<TAG>", "jnz~FOO"]], [1, 0, 20, 1, 0, 3, 0, 1, 9, 5, 0.15527065527065528, ["add     i, 1", "cmp     m, i", "jnz     short loc_F880"], ["add~i,0", "cmp~m,i", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 0, 5, 9, 0.05982905982905983, ["xor     edx, edx", "mov     ecx, 2"], ["xor~edx,edx", "mov~ecx,0"]], [0, 0, 20, 0, 0, 1, 0, 1, 7, 7, 0.038461538461538464, ["jmp     loc_F940"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-20h]", "pop     needle", "pop     resultp", "pop     r13", "pop     m", "pop     rbp", "retn"], ["lea~rsp,[rbp-20h]+0]", "pop~needle", "pop~resultp", "pop~r13", "pop~m", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.07122507122507123, ["mov     rsi, [rbp+var_28]", "xor     rsi, fs:28h", "jnz     short loc_F96E"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 1, 0, 3, 0, 1, 8, 7, 0.0014245014245014246, ["sub     j, [table+j*8]", "cmp     al, [needle+j]", "jz      loc_F940"], ["sub~j,<TAG>", "cmp~al,<TAG>", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 7, 7, 0.05840455840455841, ["test    j, j", "jnz     short loc_F890"], ["test~j,j", "jnz~FOO"]], [2, 0, 27, 1, 1, 19, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     r13, haystack", "mov     haystack, needle; s", "mov     rbx, needle", "mov     r12, resultp", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "call    _strlen", "mov     r14, rax", "mov     m, 1FFFFFFFFFFFFFFFh", "cmp     m, rax", "ja      loc_F8F0"], ["push~rbp", "mov~rbp,rsp", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~r13,haystack", "mov~haystack,needle", "mov~rbx,needle", "mov~r12,resultp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,rax", "mov~m,0", "cmp~m,rax", "ja~FOO"]], [1, 0, 12, 1, 0, 4, 0, 1, 8, 4, 0.06267806267806268, ["add     j, 1", "lea     rsi, [phaystack+1]", "cmp     m, j", "jz      short loc_F965"], ["add~j,0", "lea~rsi,[phaystack+0]", "cmp~m,j", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.16809116809116809, ["cmp     [needle+j], dl", "jz      short loc_F910"], ["cmp~<TAG>,dl", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 9, 4, 0.008547008547008548, ["movzx   edx, byte ptr [rcx+1]", "mov     rcx, phaystack", "jmp     short loc_F8C8"], ["movzx~edx,[yte ptr [rcx+0]", "mov~rcx,phaystack", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 0, 8, 6, 0.04700854700854701, ["mov     [table+i*8], i", "xor     edx, edx"], ["mov~<TAG>,i", "xor~edx,edx"]], [1, 0, 20, 2, 0, 5, 0, 1, 8, 6, 0.07264957264957266, ["add     j, 1", "mov     b, i", "sub     rax, j", "mov     [table+i*8], rax", "jmp     loc_F8A8"], ["add~j,0", "mov~b,i", "sub~rax,j", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 12, 2, 0, 4, 0, 1, 9, 4, 0.002849002849002849, ["movzx   edx, byte ptr [phaystack+1]", "add     rhaystack, 1", "add     rcx, 1", "jmp     short loc_F8C8"], ["movzx~edx,[yte ptr [phaystack+0]", "add~rhaystack,0", "add~rcx,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, 4, 0.06125356125356125, ["test    j, j", "jz      short loc_F930"], ["test~j,j", "jz~FOO"]], [1, 0, 12, 0, 0, 5, 1, 0, 5, 4, 0.21794871794871795, ["mov     qword ptr [resultp], 0", "movzx   edx, byte ptr [phaystack+0]", "mov     rcx, phaystack", "xor     eax, eax", "nop     dword ptr [j+j+00h]"], ["mov~<TAG>,0", "movzx~edx,[yte ptr [phaystack+0]", "mov~rcx,phaystack", "xor~eax,eax", "nop~[word ptr [j+0]"]], [2, 0, 21, 0, 0, 3, 0, 0, 4, 5, 0.12820512820512822, ["cmp     m, 2", "mov     qword ptr [table+8], 1", "jbe     short loc_F8B1"], ["cmp~m,0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [0, 1, 26, 0, 0, 3, 0, 1, 1, 5, 0.03133903133903134, ["lea     rdi, ds:0[m*8]; n", "cmp     rdi, 0FAFh", "ja      loc_F958"], ["lea~rdi,<TAG>", "cmp~rdi,<STR>", "ja~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 6, 3, 0.24786324786324787, ["test    dl, dl", "jz      short loc_F8E4"], ["test~dl,dl", "jz~FOO"]], [0, 0, 12, 2, 0, 5, 1, 1, 9, 3, 0.014245014245014245, ["mov     rsi, [table+j*8]", "add     rhaystack, rsi", "sub     j, rsi", "test    dl, dl", "jnz     short loc_F8CC"], ["mov~rsi,<TAG>", "add~rhaystack,rsi", "sub~j,rsi", "test~dl,dl", "jnz~FOO"]], [4, 0, 24, 3, 0, 6, 2, 0, 2, 4, 0.03133903133903134, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     rdi, [rsp+30h+var_28+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "add     rdi, 10h; p"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~rdi,[rsp+0]", "and~rdi,0", "add~rdi,0"]], [0, 0, 24, 0, 1, 3, 0, 2, 2, 4, 0.03133903133903134, ["call    mmalloca", "mov     rdi, rax", "jmp     loc_F862"], ["call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 3, 3, 0.12535612535612536, ["test    table, table", "jz      loc_F8F0"], ["test~table,table", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 3, 0.008547008547008548, ["mov     [resultp], rhaystack", "jmp     loc_F8E4"], ["mov~<TAG>,rhaystack", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.07692307692307693, ["call    freea", "mov     eax, 1", "jmp     short loc_F8F2"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 0.021367521367521368, ["xor     eax, eax"], ["xor~eax,eax"]]], "func_feature": [4, 13, 24, 1, 28, 40, 1, 101, 0.06593, 1, 13], "succs": [[8, 3], [0, 17], [0], [14], [], [4, 6], [], [8, 14], [13, 7], [27, 19], [25, 12], [16, 10], [20], [1], [1], [20], [21, 15], [20], [17, 2], [22, 23], [26, 11], [26, 11], [24], [24], [18, 27], [26], [5], [5]], "fname": "knuth_morris_pratt_unibyte", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.015966386554621848, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_1037E"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 11, 14, 0.029551820728291316, ["movzx   ecx, byte ptr [b+10h]", "jmp     short loc_FC2D"], ["movzx~ecx,[yte ptr [b+0]", "jmp~FOO"]], [2, 0, 88, 2, 0, 4, 0, 1, 16, 9, 0.06106442577030812, ["add     i, 1", "add     b, 30h", "cmp     [rbp+m], i", "jnz     loc_FC00"], ["add~i,0", "add~b,0", "cmp~[rbp+0],i", "jnz~FOO"]], [1, 0, 88, 0, 0, 4, 1, 0, 10, 15, 0.02387955182072829, ["lea     r14, [memory+30h]", "xor     ebx, ebx", "mov     r15d, 2", "nop     dword ptr [rax+rax+00h]"], ["lea~r14,[memory+0]", "xor~ebx,ebx", "mov~r15d,0", "nop~[word ptr [rax+0]"]], [4, 0, 117, 3, 0, 6, 2, 0, 2, 9, 0.008053221288515405, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     r12, [rsp+130h+resultp+7]", "and     r12, 0FFFFFFFFFFFFFFF0h", "add     r12, 10h"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~r12,[rsp+0]", "and~r12,0", "add~r12,0"]], [1, 1, 119, 2, 0, 6, 0, 1, 1, 10, 0.008053221288515405, ["mov     rax, [rbp+m]", "lea     rdi, ds:0[rax*8]", "sub     rdi, rax", "shl     rdi, 3; n", "cmp     rdi, 0FAFh", "ja      loc_10304"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rdi,rax", "shl~rdi,0", "cmp~rdi,<STR>", "ja~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 13, 12, 0.012254901960784327, ["cmp     byte ptr [rax+10h], 0", "jz      short loc_FC3C"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 88, 2, 0, 5, 1, 1, 12, 13, 0.04005602240896358, ["lea     rax, [j+j*2]", "shl     rax, 4", "add     rax, memory", "test    cl, cl", "jnz     short loc_FC10"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "test~cl,cl", "jnz~FOO"]], [0, 0, 114, 0, 1, 4, 1, 2, 7, 7, 0.004201680672268907, ["mov     rdi, [rbp+ps]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_1035F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 114, 0, 0, 9, 1, 0, 6, 8, 0.10560224089635854, ["mov     rcx, [rbp+needle]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_FE08"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [0, 0, 116, 0, 0, 2, 1, 1, 3, 8, 0.03221288515406162, ["test    memory, memory", "jz      loc_FDE0"], ["test~memory,memory", "jz~FOO"]], [0, 0, 117, 0, 1, 3, 0, 2, 2, 9, 0.008053221288515405, ["call    mmalloca", "mov     r12, rax", "jmp     loc_FA14"], ["call~FOO", "mov~r12,rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 6, 0.10406162464985994, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_101F0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 16, 7, 0.14124649859943977, ["cmp     [rbp+rhaystack.next_done], 0", "jnz     loc_101B8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 20, 4, 0.05511204481792717, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_100C0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 19, 5, 0.0819327731092437, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      short loc_10080"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 14, 11, 0.015126050420168088, ["mov     eax, [rax+14h]", "cmp     [b+14h], eax", "jz      short loc_FC62"], ["mov~eax,[rax+0]", "cmp~[b+0],eax", "jz~FOO"]], [0, 0, 88, 0, 0, 2, 1, 1, 14, 11, 0.01740196078431374, ["test    j, j", "jz      loc_101C8"], ["test~j,j", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 13, 12, 0.02829131652661067, ["mov     rdx, [b+8]; n", "cmp     rdx, [rax+8]", "jnz     short loc_FC1F"], ["mov~rdx,[b+0]", "cmp~rdx,[rax+0]", "jnz~FOO"]], [0, 0, 88, 0, 1, 7, 1, 2, 14, 11, 0.012219887955182087, ["mov     rsi, [rax]; s2", "mov     rdi, [b]; s1", "mov     byte ptr [rbp+ps], cl", "call    _memcmp", "test    eax, eax", "movzx   ecx, byte ptr [rbp+ps]", "jnz     short loc_FC1F"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 8, 6, 0.008683473389355741, ["mov     [rbp+var_100], r14b", "jmp     loc_FB26"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 21, 3, 0.04047619047619047, ["test    rax, rax", "jnz     short loc_10050"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 18, 5, 0.08137254901960783, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      loc_102ED"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 20, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [0, 0, 88, 1, 0, 1, 0, 0, 15, 14, 0.0012605042016806721, ["sub     j, [table+j*8+0]"], ["sub~j,[table+0]"]], [1, 0, 76, 0, 0, 2, 0, 1, 19, 4, 0.05455182072829131, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_1031D"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 20, 3, 0.03991596638655462, ["test    rax, rax", "jnz     short loc_10264"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 22, 2, 0.010154061624649859, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_10383"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 23, 1, 0.006337535014005601, ["mov     edi, [rbp+rhaystack.cur.wc]", "test    edi, edi", "jnz     loc_103A2"], ["mov~edi,[rbp+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 114, 0, 1, 7, 0, 2, 9, 9, 0.022058823529411763, ["lea     rcx, [r15+18h]", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rdx, [rbp+n]", "mov     [r15], rax", "movzx   eax, [rbp+var_E0]", "jmp     loc_FAEA"], ["lea~rcx,[r15+0]", "mov~rdi,rcx", "call~FOO", "mov~rdx,[rbp+0]", "mov~<TAG>,rax", "movzx~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 5, 0, 1, 8, 10, 0.04012605042016806, ["mov     rsi, [rbp+needle]; src", "lea     rcx, [rbx+28h]", "mov     rdx, [rbp+n]; n", "cmp     rsi, rcx", "jz      loc_FE30"], ["mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "mov~rdx,[rbp+0]", "cmp~rsi,rcx", "jz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 21, 2, 0.009593837535014004, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_10383"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 22, 1, 0.006092436974789915, ["mov     ecx, [rbp+rhaystack.cur.wc]", "test    ecx, ecx", "jnz     loc_103A2"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "jnz~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 22, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_100E0"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [5, 0, 114, 2, 0, 14, 0, 1, 4, 7, 0.038865546218487396, ["mov     rax, [rbp+m]", "mov     [rbp+needle], needle_0", "lea     needle_0, [rbp+var_100]", "mov     [rbp+var_100], 0", "mov     [rbp+var_FC], 0", "mov     r15, memory", "mov     [rbp+var_F4], 0", "mov     r14d, 1", "lea     r13, [rax+rax*2]", "lea     rax, [rbx+4]", "shl     r13, 4", "mov     [rbp+ps], rax", "add     r13, memory", "jmp     loc_FB19"], ["mov~rax,[rbp+0]", "mov~[rbp+0],needle_0", "lea~needle_0,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~r15,memory", "mov~[rbp+0],0", "mov~r14d,0", "lea~r13,<TAG>", "lea~rax,[rbx+0]", "shl~r13,0", "mov~[rbp+0],rax", "add~r13,memory", "jmp~FOO"]], [1, 0, 88, 2, 0, 4, 0, 0, 15, 10, 0.035469187675070055, ["add     j, 1", "mov     rax, i", "sub     rax, j", "mov     [table+i*8+0], rax"], ["add~j,0", "mov~rax,i", "sub~rax,j", "mov~[table+0],rax"]], [1, 0, 76, 2, 0, 3, 0, 0, 13, 10, 0.2805438842203548, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory"]], [3, 0, 76, 0, 0, 4, 0, 1, 14, 11, 0.07920168067226889, ["mov     [rbp+phaystack.cur.bytes], 1", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_FD0A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 76, 0, 1, 6, 0, 2, 15, 11, 0.0038982259570494865, ["mov     rdi, [rbp+phaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.cur.bytes], rax", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_FD0A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 11, 0.23399859943977586, ["cmp     [rbp+phaystack.cur.wc_valid], 0", "jnz     loc_FE96"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_FDCC"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 114, 0, 0, 5, 1, 1, 7, 11, 0.006302521008403361, ["mov     [rbp+n], 1", "mov     [rbp+var_E0], 0", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_FACC"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 3, 12, 0, 4, 6, 5, 0.0376750700280112, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+needle]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+needle]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; iter", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+n], rax", "jz      loc_FE58"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 21, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_10311"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 15, 10, 0.016351540616246513, ["mov     [table+i*8+0], i", "jmp     loc_FC71"], ["mov~[table+0],i", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 6, 0.1054971988795518, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_FFE0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 21, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [2, 0, 76, 0, 0, 3, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_10151"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 5, 6, 0.1226890756302521, ["cmp     [rbp+var_100], 0", "jz      loc_FA70"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_FD59"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 14, 11, 0.01803221288515406, ["mov     [rbp+phaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+phaystack.cur.wc_valid], 1", "mov     [rbp+phaystack.next_done], 1", "mov     [rbp+phaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [2, 0, 76, 0, 0, 9, 1, 0, 13, 8, 0.040686274509803916, ["mov     rcx, [rbp+phaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jb      short loc_FE80"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jb~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 13, 10, 0.06600140056022409, ["mov     edx, [rbp+phaystack.cur.wc]", "test    edx, edx", "jz      loc_FFB0"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 11, 0.0005602240896358543, ["mov     [rbp+phaystack.next_done], 1", "jmp     loc_FE96"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 14, 4, 0.060784313725490195, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_10290"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 76, 0, 1, 5, 1, 2, 15, 9, 0.012138188608776843, ["mov     rsi, [rbp+phaystack.cur.ptr]; s2", "mov     rdi, [rax]; s1", "call    _memcmp", "test    eax, eax", "jnz     loc_FD23"], ["mov~rsi,[rbp+0]", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 14, 9, 0.29623015873015873, ["mov     rdx, [rax+8]; n", "cmp     rdx, [rbp+phaystack.cur.bytes]", "jz      loc_100A0"], ["mov~rdx,[rax+0]", "cmp~rdx,[rbp+0]", "jz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 14, 9, 0.06196311858076563, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory", "cmp     byte ptr [rax+10h], 0", "jz      loc_FD15"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 5, 1, 1, 17, 10, 0.02131185807656396, ["mov     edx, [rbp+phaystack.cur.wc]", "mov     [rbp+phaystack.in_shift], 0", "mov     [rbp+phaystack.next_done], 1", "test    edx, edx", "jnz     loc_FEA1"], ["mov~edx,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "test~edx,edx", "jnz~FOO"]], [1, 0, 114, 0, 0, 5, 0, 0, 7, 11, 0.10539215686274508, ["mov     [rbp+n], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+var_E0], r14b", "mov     [rbp+var_F4], r14b", "mov     [rbp+var_DC], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],r14b", "mov~[rbp+0],r14b", "mov~[rbp+0],eax"]], [0, 0, 76, 0, 0, 1, 0, 1, 16, 8, 0.0060107376283846875, ["jmp     loc_FEBF"], ["jmp~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 15, 8, 0.04137488328664799, ["cmp     [rax+14h], edx", "jnz     loc_FD23"], ["cmp~[rax+0],edx", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 8, 10, 0.14443277310924368, ["mov     r8d, [rbp+var_DC]", "test    r8d, r8d", "jz      loc_FBD8"], ["mov~r8d,[rbp+0]", "test~r8d,r8d", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 10, 11, 0.025175070028011202, ["mov     [rbp+var_F4], r14b", "jmp     loc_FAB7"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 9, 11, 0.011064425770308122, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 114, 0, 0, 5, 1, 1, 10, 11, 0.03175770308123249, ["mov     r8d, [rbp+var_DC]", "mov     [rbp+var_100], 0", "mov     [rbp+var_F4], r14b", "test    r8d, r8d", "jnz     loc_FAC7"], ["mov~r8d,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],r14b", "test~r8d,r8d", "jnz~FOO"]], [2, 0, 76, 2, 0, 6, 0, 1, 16, 7, 0.03075396825396825, ["add     j_0, 1", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "cmp     [rbp+m], j_0", "mov     [rbp+phaystack.next_done], 0", "jz      loc_1033C"], ["add~j_0,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "cmp~[rbp+0],j_0", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 21, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_FD59"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 114, 0, 1, 7, 1, 2, 8, 11, 0.000980392156862745, ["mov     rdi, [rbp+needle]; s", "call    _strlen", "mov     [rbp+var_E0], 0", "mov     [rbp+n], rax", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_FACC"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 7, 4, 0.035364145658263305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_102B9"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 6, 0.1897058823529412, ["cmp     [rbp+phaystack.in_shift], 0", "jnz     short loc_FF18"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 11, 7, 0.3144491129785247, ["test    al, al", "jz      loc_FEDC"], ["test~al,al", "jz~FOO"]], [2, 0, 76, 2, 0, 7, 0, 1, 18, 7, 0.08781512605042016, ["mov     rax, [rbp+rhaystack.cur.bytes]", "mov     [rbp+rhaystack.next_done], 0", "add     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.next_done], 0", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "jmp     loc_FEDC"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "add~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 114, 0, 0, 1, 0, 0, 9, 9, 0.022058823529411763, ["mov     [r15], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 114, 0, 1, 5, 1, 2, 9, 12, 0.052941176470588235, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+var_E0], r14b", "call    _mbsinit", "test    eax, eax", "jz      loc_102E1"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],r14b", "call~FOO", "test~eax,eax", "jz~FOO"]], [8, 0, 76, 1, 0, 19, 2, 0, 10, 8, 0.2230392156862745, ["mov     rax, [rbp+resultp]", "lea     rbx, [rbp+phaystack]", "mov     [rbp+rhaystack.in_shift], 0", "mov     qword ptr [rbp+rhaystack.state.__count], 0", "mov     [rbp+rhaystack.next_done], 0", "xor     r15d, r15d", "mov     [rbp+ps], rbx", "add     rbx, 4", "mov     [rbp+phaystack.in_shift], 0", "mov     qword ptr [rax], 0", "mov     rax, [rbp+haystack]", "mov     [rbp+var_120], rbx", "lea     rbx, [rbp+rhaystack]", "mov     qword ptr [rbp+phaystack.state.__count], 0", "mov     [rbp+phaystack.next_done], 0", "mov     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.cur.ptr], rax", "xor     eax, eax", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rbp+0]", "lea~rbx,[rbp+0]", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "xor~r15d,r15d", "mov~[rbp+0],rbx", "add~rbx,0", "mov~[rbp+0],0", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rbx", "lea~rbx,[rbp+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],rax", "xor~eax,eax", "nop~[word ptr [rax+0]"]], [2, 0, 89, 0, 0, 3, 0, 0, 9, 9, 0.1811624649859944, ["cmp     [rbp+m], 2", "mov     qword ptr [table+8], 1", "jbe     loc_FC86"], ["cmp~[rbp+0],0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [2, 0, 120, 1, 1, 21, 1, 2, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 108h", "mov     [rbp+haystack], haystack_0", "mov     haystack_0, needle_0; string", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+resultp], resultp_0", "call    mbslen", "mov     rsi, rax", "mov     [rbp+m], rax", "mov     m_0, 492492492492492h", "cmp     m_0, rax", "ja      loc_FDE0"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~[rbp+0],haystack_0", "mov~haystack_0,needle_0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],resultp_0", "call~FOO", "mov~rsi,rax", "mov~[rbp+0],rax", "mov~m_0,0", "cmp~m_0,rax", "ja~FOO"]], [0, 0, 114, 0, 0, 4, 1, 1, 10, 8, 0.05798319327731092, ["test    al, al", "mov     [r15+8], rdx", "mov     [r15+10h], al", "jz      short loc_FB00"], ["test~al,al", "mov~[r15+0],rdx", "mov~[r15+0],al", "jz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 8, 0.29704715219421096, ["test    j_0, j_0", "jz      loc_100F0"], ["test~j_0,j_0", "jz~FOO"]], [0, 0, 76, 1, 0, 7, 1, 1, 16, 8, 0.1456465919701214, ["mov     r14, [table+j_0*8+0]", "mov     rax, j_0", "sub     rax, count", "test    count, count", "mov     [rbp+haystack], rax", "movzx   eax, [rbp+phaystack.next_done]", "jz      short loc_FCF8"], ["mov~r14,[table+0]", "mov~rax,j_0", "sub~rax,count", "test~count,count", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.07163865546218487, ["movzx   eax, [rbp+phaystack.next_done]", "mov     r15, [rbp+haystack]", "jmp     loc_FCF8"], ["movzx~eax,[rbp+0]", "mov~r15,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 2, 0, 0, 11, 8, 0.0, ["mov     eax, [rbp+var_DC]", "mov     [r15+14h], eax"], ["mov~eax,[rbp+0]", "mov~[r15+0],eax"]], [2, 0, 76, 0, 0, 3, 0, 1, 19, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_1015F"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 14, 7, 0.012499999999999999, ["mov     rdi, [rbp+var_120]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_1035F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 114, 2, 0, 4, 0, 0, 11, 7, 0.06988795518207283, ["mov     rax, [rbp+n]", "add     [rbp+needle], rax", "add     r15, 30h", "mov     [rbp+var_F4], 0"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "add~r15,0", "mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 1, 0, 0, 15, 6, 0.006022408963585434, ["mov     [rbp+phaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 2, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_10151"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 18, 8, 0.023739495798319327, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_101D8"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 76, 0, 1, 6, 1, 2, 16, 11, 0.03202614379084967, ["mov     rax, [rbp+ps]", "mov     [rbp+phaystack.cur.wc_valid], 1", "lea     rdi, [rax+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_102B0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 20, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_1015F"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 19, 9, 0.004271708683473389, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 76, 0, 3, 13, 0, 4, 13, 5, 0.15014005602240896, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+phaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+ps]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rbp+phaystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+phaystack.cur.bytes], rax", "jz      loc_101A0"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rbp+0]", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 7, 0.1262955182072829, ["cmp     [rbp+rhaystack.next_done], 0", "jz      short loc_FD78"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 8, 0.02584033613445378, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jnz     short loc_FDCC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04726890756302521, ["mov     edx, [rbp+rhaystack.cur.wc]", "test    edx, edx", "jz      loc_FDD6"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 76, 0, 0, 1, 0, 1, 18, 9, 0.009453781512605041, ["jmp     short loc_10151"], ["jmp~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 17, -1, 0.0018907563025210082, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     rbx, [rbp+resultp]", "mov     rdi, memory; p", "mov     [rbx], rax", "call    freea", "mov     eax, 1", "jmp     loc_FDE2"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "mov~rdi,memory", "mov~<TAG>,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 3, 0.04673202614379084, ["test    rax, rax", "jnz     short loc_FF81"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_FDCC"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 114, 0, 0, 2, 1, 1, 8, 3, 0.03837535014005602, ["test    rax, rax", "jnz     short loc_FB9C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 16, 2, 0.014775910364145658, ["mov     rax, [rbp+phaystack.cur.ptr]", "mov     [rbp+phaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_10383"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 19, 7, 0.08928571428571427, ["mov     rax, [rbp+rhaystack.cur.bytes]", "add     [rbp+rhaystack.cur.ptr], rax", "sub     r14, 1", "mov     [rbp+rhaystack.next_done], 0", "jz      loc_10188"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "sub~r14,0", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04236694677871148, ["mov     esi, [rbp+rhaystack.cur.wc]", "test    esi, esi", "jnz     short loc_FD59"], ["mov~esi,[rbp+0]", "test~esi,esi", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 20, 7, 0.00976890756302521, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_1035F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 19, 7, 0.009313725490196078, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_1035F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 17, 1, 0.008578431372549019, ["mov     eax, [rbp+phaystack.cur.wc]", "test    eax, eax", "jnz     loc_103A2"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 8, 0.02703081232492997, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jz      short loc_1015F"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 114, 0, 0, 4, 0, 1, 9, 2, 0.004971988795518207, ["mov     rax, [rbp+needle]", "mov     [rbp+n], 1", "cmp     byte ptr [rax], 0", "jnz     loc_10383"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 10, 1, 0.009313725490196078, ["mov     r9d, [rbp+var_DC]", "test    r9d, r9d", "jnz     loc_103A2"], ["mov~r9d,[rbp+0]", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 19, 8, 0.02461484593837535, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_FFC8"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 14, -1, 0.0203781512605042, ["mov     rdi, memory; p", "call    freea", "mov     eax, 1", "jmp     loc_FDE2"], ["mov~rdi,memory", "call~FOO", "mov~eax,0", "jmp~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 20, 9, 0.00469187675070028, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 90, 0, 0, 1, 0, 0, 11, 10, 0.03091736694677871, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.0010504201680672268, ["xor     eax, eax"], ["xor~eax,eax"]]], "func_feature": [36, 45, 127, 5, 121, 185, 1, 509, 0.04782, 6, 29], "succs": [[], [0, 109], [8], [2, 76], [2], [11], [12, 5], [17, 19], [19, 7], [105, 21], [9, 60], [120, 35], [11], [89, 23], [13, 110], [68, 22], [50, 15], [18, 36], [25, 45], [18, 20], [18, 36], [43], [34, 28], [26, 84], [23], [8], [91, 27], [32, 44], [113, 29], [34, 114], [79], [74, 30], [33, 113], [114, 44], [41, 100], [49], [3], [57], [37], [37], [37, 53], [104], [31], [42, 70], [48, 88], [3], [16, 115], [16], [96], [10, 43], [103], [53], [51, 85], [58, 116], [53], [99, 39], [80, 61], [56, 80], [57, 62], [58, 116], [63], [67], [80, 67], [65, 77], [63], [31], [65, 118], [98, 71], [103], [31], [69, 101], [52, 93], [40, 71], [71], [79], [64, 66], [72], [4, 76], [120, 6], [83, 86], [81, 14], [72, 94], [72], [86], [73], [105, 87], [49], [93], [96], [107, 92], [59, 54], [73], [96], [38, 55], [46, 95], [104, 103], [73, 119], [96], [1], [90, 102], [104], [75, 111], [113, 108], [82, 46], [119, 103], [], [105, 47], [24, 105], [90, 114], [], [73, 97], [112, 113], [114, 75], [], [], [106, 117], [1], [104], [77], [], [1]], "fname": "knuth_morris_pratt_multibyte", "n_num": 121}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 145, 0, 0, 2, 0, 1, 0, 0, 0.02915390620308653, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jz      loc_11056"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 9, 0.08842500850697571, ["test    al, al", "jz      loc_10FF0"], ["test~al,al", "jz~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 14, 0.05215526731920175, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_10F88"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 13, 15, 0.04335805360395525, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax", "jmp     loc_10EBA"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 15, 15, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 15, 0.022818711343301507, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jz      loc_10B98"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 14, 0.12778478352248845, ["cmp     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "jnz     loc_107FD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 26, 16, 0.0007205908845253108, ["mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_107FD"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 23, 16, 0.004023299105266318, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "mov     [rsp+1C8h+rhaystack.next_done], 1", "mov     [rsp+1C8h+rhaystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 145, 0, 0, 1, 0, 1, 13, 9, 0.008827238335435056, ["jmp     loc_11045"], ["jmp~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, -1, 0.0012910586681078484, ["movzx   esi, byte ptr [haystack]", "test    sil, sil", "jz      loc_10B98"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [0, 0, 26, 0, 0, 5, 1, 1, 1, -1, 0.0007506155047138654, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "movzx   r15d, byte ptr [rax]", "mov     rax, haystack", "test    r15b, r15b", "jz      loc_10536"], ["mov~rax,[rsp+0]", "movzx~r15d,<TAG>", "mov~rax,haystack", "test~r15b,r15b", "jz~FOO"]], [1, 0, 151, 0, 1, 5, 1, 2, 6, 15, 0.014201645349186333, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_11345"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 154, 0, 0, 2, 1, 1, 5, 16, 0.0015012310094277307, ["test    rax, rax", "jnz     short loc_111FC"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 152, 0, 0, 3, 1, 1, 7, 16, 0.004713865369603075, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     loc_11144"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [9, 0, 146, 0, 0, 19, 2, 1, 4, 12, 0.06398246562180988, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "mov     [rsp+1C8h+iter_haystack.in_shift], 0", "xor     r14d, r14d", "xor     ebx, ebx", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle_last_ccount.state.__count], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "lea     rbp, [rsp+1C8h+rneedle]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "lea     rax, [rsp+1C8h+result]", "mov     [rsp+1C8h+iter_haystack.cur.ptr], haystack", "mov     qword ptr [rsp+1C8h+iter_haystack.state.__count], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "lea     r15, [rsp+1C8h+rhaystack]", "mov     [rsp+1C8h+last_ccount], 0", "mov     byte ptr [rsp+1C8h+count], 1", "mov     [rsp+1C8h+var_1A0], rax", "jnz     loc_10923"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "xor~r14d,r14d", "xor~ebx,ebx", "cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],haystack", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 148, 0, 0, 3, 1, 1, 3, 13, 0.03987269561040053, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     short loc_1058B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 147, 0, 1, 6, 0, 2, 5, 13, 0.004263496066774755, ["mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_1058B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 147, 0, 0, 3, 0, 0, 4, 13, 0.008496967513360956, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.010628715546748334, ["mov     rbx, [rsp+1C8h+var_40]", "xor     rbx, fs:28h", "jnz     loc_11458"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 5, 11, 0.021047258752176785, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 14, 0.040293040293040296, ["cmp     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jz      loc_108E3"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 26, 15, 0.02119738185311956, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "mov     [rsp+1C8h+rhaystack.in_shift], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "test    eax, eax", "jnz     loc_1080C"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~eax,eax", "jnz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 12, 0.017364238675714082, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_10E90"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 13, 0.06534608378870674, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_10F70"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 9, 8, 0.10286434876598811, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_10DA0"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 8, 8, 0.14721071278448328, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jnz     loc_11410"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jnz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 10, 0.028575932264456854, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_11309"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.08978112051882545, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_11248"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 149, 0, 0, 3, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_1052B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 24, 14, 0.01043355551552273, ["cmp     [rsp+1C8h+rneedle.cur.wc], eax", "setnz   al"], ["cmp~[rsp+0],eax", "setnz~al"]], [1, 0, 24, 0, 0, 4, 1, 1, 6, -1, 0.005164234672431394, ["cmp     outer_loop_count, 9", "setnbe  dl", "and     dl, al", "jz      loc_10562"], ["cmp~outer_loop_count,0", "setnbe~dl", "and~dl,al", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0032126343601753438, ["cmp     sil, dil", "lea     rbx, [rdx+2]", "jnz     loc_10452"], ["cmp~sil,dil", "lea~rbx,[rdx+0]", "jnz~FOO"]], [1, 0, 24, 1, 0, 3, 0, 1, 11, -1, 0.001411157148862067, ["add     rbx, 1", "cmp     sil, dil", "jnz     loc_10452"], ["add~rbx,0", "cmp~sil,dil", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, -1, 0.0028973758481955205, ["cmp     byte ptr [r12+1], 0", "jz      loc_10B98"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 145, 0, 1, 8, 1, 2, 11, 5, 0.041644148201525254, ["mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s1", "mov     rdx, rcx; n", "mov     [rsp+1C8h+resultp], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+1C8h+resultp]", "jnz     loc_10901"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 10, 6, 0.13667957725334776, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]", "cmp     rcx, [rsp+1C8h+iter_needle.cur.bytes]", "jnz     loc_10901"], ["mov~rcx,[rsp+0]", "cmp~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 24, 13, 0.03613463039692548, ["test    al, al", "lea     rdx, [rbx+1]", "jnz     loc_108F9"], ["test~al,al", "lea~rdx,[rbx+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 23, 14, 0.02152765267519366, ["mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s1", "call    _memcmp", "test    eax, eax", "setnz   al", "jmp     loc_10824"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 12, 4, 0.038986969314838166, ["jmp     loc_106B0"], ["jmp~FOO"]], [1, 0, 24, 0, 0, 8, 3, 0, 3, -1, 0.0017714525911247223, ["lea     rbx, [rsp+1C8h+result]", "mov     rbp, [rsp+1C8h+needle_last_ccount]", "xor     r13d, r13d", "xor     edx, edx", "xor     ecx, ecx", "mov     eax, 1", "mov     [rsp+1C8h+resultp], rbx", "nop     dword ptr [try_kmp+00h]"], ["lea~rbx,[rsp+0]", "mov~rbp,[rsp+0]", "xor~r13d,r13d", "xor~edx,edx", "xor~ecx,ecx", "mov~eax,0", "mov~[rsp+0],rbx", "nop~[word ptr [try_kmp+0]"]], [2, 0, 145, 0, 0, 8, 1, 0, 6, 10, 0.15402129746392043, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_10D70"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 145, 2, 0, 5, 0, 1, 11, 11, 0.2557572209211553, ["add     [rsp+1C8h+iter_haystack.cur.ptr], rcx", "add     r14, 1", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "jz      loc_10618"], ["add~[rsp+0],rcx", "add~r14,0", "cmp~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 11, 0.007611241217798595, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 3, 12, 0, 4, 18, 17, 0.19439440341079686, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_10C30"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 17, 18, 0.21385035729298024, ["cmp     [rsp+1C8h+rneedle.in_shift], 0", "jnz     loc_10A01"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 20, 18, 0.004653816129225965, ["mov     [rsp+1C8h+rneedle.in_shift], 1"], ["mov~[rsp+0],0"]], [2, 0, 145, 0, 0, 3, 0, 1, 16, 20, 0.0078064012490242, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jmp     loc_10780"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 3, 13, 0, 4, 15, 6, 0.043993574731279635, ["mov     [rsp+1C8h+rneedle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rcx, [rsp+1C8h+resultp]; p", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_11228"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 9, 0.018712844532516662, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 24, 1, 0, 5, 0, 1, 4, -1, 0.007356031946195881, ["add     r13, 1", "cmp     sil, r15b", "lea     rbx, [rdx+1]", "lea     r14, [r12+1]", "jz      loc_10D00"], ["add~r13,0", "cmp~sil,r15b", "lea~rbx,[rdx+0]", "lea~r14,[r12+0]", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 7, -1, 0.004773914609980183, ["movzx   esi, byte ptr [haystack]", "mov     r12, haystack", "mov     rdx, rbx", "jmp     loc_10430"], ["movzx~esi,<TAG>", "mov~r12,haystack", "mov~rdx,rbx", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 17, 0.036434876598811027, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_10C80"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 17, 4, 0.02294631597910287, ["test    rax, rax", "jnz     short loc_11150"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 16, 5, 0.031563381973218035, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_11383"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 13, 10, 0.05446466102203807, ["mov     r10d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r10d, r10d", "jnz     loc_10DC9"], ["mov~r10d,[rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.020476790968594248, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jnz     short loc_10E3E"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_10E3E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_10E3E"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 19, 19, 0.005359394703656999, ["lea     rdi, [rbp+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 23, 17, 0.005314357773374167, ["lea     rdi, [r15+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 7, 12, 0.006795572369342862, ["lea     rax, [rsp+1C8h+iter_haystack]", "lea     rdi, [rsp+1C8h+iter_haystack.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 16, 0.005129205948878081, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 5, 1, 2, 14, 7, 0.04524960467583417, ["mov     rdi, rcx; ps", "mov     [rsp+1C8h+resultp], rcx", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["mov~rdi,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 159, 0, 1, 4, 1, 2, 2, 15, 0.00078064012490242, ["mov     rdi, rbp; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 11, 0.0052392962229027805, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_11430"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 20, 18, 0.027907884465261514, ["test    rax, rax", "jnz     short loc_10A7B"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 14, 8, 0.05813517084008887, ["mov     r8d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r8d, r8d", "jz      loc_10E5D"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_11045"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_11045"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 10, 6, 0.07381552873356152, ["add     comparison_count, 1", "jmp     loc_10694"], ["add~comparison_count,0", "jmp~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 9, 7, 0.16258331832102324, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jz      loc_1144F"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 14, 9, 0.04776416661662563, ["cmp     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_10FF0"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 7, 9, 0.14260193358554013, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 145, 2, 0, 7, 0, 0, 25, 19, 0.02715726896054765, ["mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rbx, rdx", "mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "mov     [rsp+1C8h+rhaystack.next_done], 0", "mov     [rsp+1C8h+rneedle.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rbx,rdx", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 0, 13, 7, 0.10978502371944995, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "mov     byte ptr [rsp+1C8h+count], 1"], ["movzx~edx,[rsp+0]", "mov~[yte ptr [rsp+0],0"]], [2, 0, 145, 0, 1, 6, 0, 2, 16, 8, 0.0038431513841349907, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_11056"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 15, 8, 0.028230649132288475, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_11056"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 21, 19, 0.005809764006485318, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 8, 8, 0.1696240917552393, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jz      loc_10B98"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_1065F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_1065F"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0031525851197982345, ["lea     try_kmp, [outer_loop_count+outer_loop_count*4+0]", "cmp     rax, rbx", "ja      loc_10560"], ["lea~try_kmp,[outer_loop_count+0]", "cmp~rax,rbx", "ja~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 16, 19, 0.1825196661262235, ["mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "mov     [rsp+1C8h+rneedle.next_done], 0", "add     comparison_count, 1", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "jmp     loc_10863"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "add~comparison_count,0", "add~[rsp+0],rax", "jmp~FOO"]], [0, 0, 145, 0, 0, 5, 1, 1, 14, 6, 0.1587101423166997, ["lea     rax, [last_ccount_0+1]", "test    dl, dl", "mov     [rsp+1C8h+last_ccount], last_ccount_0", "mov     last_ccount_0, comparison_count", "jnz     loc_10694"], ["lea~rax,[last_ccount_0+0]", "test~dl,dl", "mov~[rsp+0],last_ccount_0", "mov~last_ccount_0,comparison_count", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 16, 7, 0.04475169639104065, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "jmp     loc_11063"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 23, 14, 0.014712063892391762, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_108E3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 22, 15, 0.05578574431033447, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rhaystack.cur.ptr]; s", "lea     rcx, [r15+4]; p", "lea     rdi, [r15+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "jz      loc_10C58"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r15+0]", "lea~rdi,[r15+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 18, 0.004924037710922957, ["mov     ecx, [rsp+1C8h+rneedle.cur.wc]", "test    ecx, ecx", "jnz     loc_11144"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 8, -1, 0.0022818711343301507, ["test    needle_last_ccount_0, needle_last_ccount_0", "mov     byte ptr [rsp+1C8h+count], dl", "jz      short loc_1049B"], ["test~needle_last_ccount_0,needle_last_ccount_0", "mov~[yte ptr [rsp+0],dl", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 15, 7, 0.035849396505134204, ["jmp     loc_10BF1"], ["jmp~FOO"]], [6, 0, 145, 1, 0, 24, 1, 0, 13, 3, 0.19119928341239814, ["movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.in_shift]", "lea     rcx, [rbp+4]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     qword ptr [rbp+4], 0", "movaps  xmmword ptr [rsp+1C8h+rhaystack.in_shift], xmm0", "mov     [rsp+1C8h+rneedle.next_done], 0", "mov     [rsp+1C8h+rhaystack.next_done], 0", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.ptr]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.ptr], xmm0", "mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rax, [rsp+1C8h+needle_last_ccount]", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.wc_valid]", "movsx   edx, byte ptr [rax]", "mov     [rsp+1C8h+rneedle.cur.ptr], rax", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.wc_valid], xmm0", "mov     eax, edx", "shr     al, 5", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.buf+8]", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.buf+8], xmm0", "bt      eax, edx", "jnb     loc_110B0"], ["movdqa~xmm0,[mmword ptr [rsp+0]", "lea~rcx,[rbp+0]", "mov~[rsp+0],0", "mov~[word ptr [rbp+0],0", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "movdqa~xmm0,[mmword ptr [rsp+0]", "movsx~edx,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~eax,edx", "shr~al,0", "movdqa~xmm0,[mmword ptr [rsp+0]", "and~eax,0", "mov~eax,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "bt~eax,edx", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 15, 1, 0.16672671590704377, ["mov     esi, [rsp+1C8h+rneedle.cur.wc]", "test    esi, esi", "jz      loc_1147C"], ["mov~esi,[rsp+0]", "test~esi,esi", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 8, 11, 0.005224283912808503, ["mov     [rsp+1C8h+iter_haystack.in_shift], 1", "jmp     loc_10930"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 1, 7, 1, 2, 15, 8, 0.05327868852459016, ["mov     rdx, [rsp+1C8h+var_1A0]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "call    knuth_morris_pratt_multibyte", "test    al, al", "mov     byte ptr [rsp+1C8h+count], al", "jnz     loc_11379"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "call~FOO", "test~al,al", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 10, 7, 0.0841439980784243, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_10DA0"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 10, -1, 0.0007656278148081427, ["xor     ebp, ebp", "jmp     loc_10562"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.0016963910406533357, ["mov     rdx, [rsp+1C8h+resultp]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "mov     [rsp+1C8h+count], rcx", "call    knuth_morris_pratt_unibyte", "test    al, al", "mov     rcx, [rsp+1C8h+count]", "jnz     loc_11379"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "mov~[rsp+0],rcx", "call~FOO", "test~al,al", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 18, 5, 0.005321863928421307, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 18, 18, 0.023809523809523808, ["mov     rcx, [rsp+1C8h+rneedle.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_109E8"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 21, 17, 0.026001321083288297, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_10CB0"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 0, 11, 6, 0.0026821994035108794, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 9, 0.06537861046057768, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_113C3"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 10, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1", "jmp     loc_11255"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 13, 10, 0.05658139674533118, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 24, 2, 1, 9, 0, 2, 9, -1, 0.0002552092716027142, ["mov     rsi, rbx", "mov     rdi, needle_last_ccount_0; string", "sub     rsi, rcx; maxlen", "call    _strnlen", "add     needle_last_ccount_0, rax", "mov     rcx, rbx", "movzx   edx, byte ptr [rsp+1C8h+count]", "cmp     byte ptr [needle_last_ccount_0+0], 0", "jnz     loc_10560"], ["mov~rsi,rbx", "mov~rdi,needle_last_ccount_0", "sub~rsi,rcx", "call~FOO", "add~needle_last_ccount_0,rax", "mov~rcx,rbx", "movzx~edx,[yte ptr [rsp+0]", "cmp~[yte ptr [needle_last_ccount_0+0],0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 11, 5, 0.20338177305390426, ["cmp     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "jz      loc_10BF1"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.003272683600552453, ["movzx   edi, byte ptr [r14]", "test    dil, dil", "jz      loc_10B98"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 5, -1, 0.003948237554794932, ["mov     r8, [rsp+1C8h+needle_last_ccount]", "movzx   esi, byte ptr [r8+1]", "test    sil, sil", "jz      loc_10533"], ["mov~r8,[rsp+0]", "movzx~esi,[yte ptr [r8+0]", "test~sil,sil", "jz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 20, 16, 0.0039032006245121, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_108C7"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 11, 0.024057226926079384, ["test    rax, rax", "jnz     short loc_112D6"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 9, 0.03252416981925178, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_1134F"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 12, 4, 0.1532631758041594, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "cmp     [rsp+1C8h+iter_haystack.cur.wc], eax", "jnz     loc_108F9"], ["mov~eax,[rsp+0]", "cmp~[rsp+0],eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 12, 0.08386126623831541, ["test    al, al", "jz      short loc_10DED"], ["test~al,al", "jz~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 22, 16, 0.02080706179066835, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "test    edx, edx", "jnz     loc_108C7"], ["mov~edx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~edx,edx", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 19, 17, 0.0138263375968294, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1", "mov     [rsp+1C8h+rneedle.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 4, 0, 0, 1, 0, 0, 23, -1, 0.0004503693028283192, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 14, 0.005391921375527933, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 13, 0.025283232250445365, ["test    rax, rax", "jnz     short loc_10F3B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 22, 17, 0.0005704677835825377, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_108B8"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 21, -1, 0.002717228127064193, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "jmp     loc_10536"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 20, 16, 0.018570227586621028, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "test    edx, edx", "jz      loc_10AB8"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 15, 13, 0.015297543986068576, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jmp     loc_10DC9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 9, 12, 0.007218419103665004, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 25, 18, 0.005374407013751276, ["mov     rax, [rsp+1C8h+rhaystack.cur.ptr]", "mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 153, 0, 0, 4, 0, 1, 6, 17, 0.0005404431633939831, ["mov     rax, [rsp+1C8h+iter_needle.cur.ptr]", "mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 12, 0.0055620608899297425, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_1145D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 20, 15, 0.1978021978021978, ["cmp     [rsp+1C8h+rhaystack.next_done], 0", "jz      loc_107A8"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 19, 16, 0.15333573530294842, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_108C7"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 11, 0.004808943333533497, ["mov     r9d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r9d, r9d", "jnz     loc_11144"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jnz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 22, 17, 0.013961448387677896, ["mov     rcx, [rsp+1C8h+rhaystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_10AC8"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 24, 16, 0.004653816129225965, ["mov     [rsp+1C8h+rhaystack.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 145, 1, 0, 3, 0, 1, 10, 7, 0.002642166576592806, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al", "jmp     loc_10BF1"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al", "jmp~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 24, 14, 0.003813126763946436, ["mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_108E3"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 15, 0.036449888908905305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_10CC0"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 10, 0.022398366660661743, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_113E4"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 22, 13, 0.1706149042214616, ["mov     rdx, [rsp+1C8h+rhaystack.cur.bytes]; n", "cmp     rdx, [rsp+1C8h+rneedle.cur.bytes]", "jz      loc_10BA0"], ["mov~rdx,[rsp+0]", "cmp~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 25, 16, 0.02654176424668228, ["lea     rdi, [r15+4]; ps", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_10CF0"], ["lea~rdi,[r15+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 13, 12, 0.1585149822854741, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]"], ["mov~rcx,[rsp+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 14, 0.032233931824095764, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_10FC8"], ["cmp~rax,0", "jz~FOO"]], [5, 0, 161, 0, 0, 15, 1, 0, 1, 15, 0.00468384074941452, ["mov     rax, needle_0", "lea     r13, is_basic_table", "mov     [rsp+1C8h+iter_needle.cur.ptr], needle_0", "movsx   edx, byte ptr [rax]", "lea     needle_0, [rsp+1C8h+iter_needle]", "mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle.state.__count], 0", "mov     [rsp+1C8h+iter_needle.next_done], 0", "lea     rbp, [rbx+4]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_11180"], ["mov~rax,needle_0", "lea~r13,<TAG>", "mov~[rsp+0],needle_0", "movsx~edx,<TAG>", "lea~needle_0,[rsp+0]", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rbx+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 183, 1, 1, 16, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, haystack", "push    rbp", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 198h", "mov     rax, fs:28h", "mov     [rsp+1C8h+var_40], rax", "xor     eax, eax", "mov     [rsp+1C8h+needle_last_ccount], needle_0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_104D0"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,haystack", "push~rbp", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],needle_0", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 16, 0.06539362277067196, ["cmp     [rsp+1C8h+rhaystack.in_shift], 0", "jnz     loc_10AE1"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 12, 0.023794511499429533, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_10FA8"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 149, 0, 0, 4, 0, 0, 2, 14, 0.008617065994115174, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc], edx", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 2, 0, 0, 5, 11, 0.16935136812185997, ["lea     rax, [rsp+1C8h+iter_haystack]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [0, 0, 145, 0, 0, 2, 1, 1, 24, 17, 0.028012970635921456, ["test    rax, rax", "jnz     short loc_10B5B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_1052B"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0016963910406533357, ["mov     rax, r12"], ["mov~rax,r12"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0003602954422626554, ["jmp     loc_10533"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 13, 0.004728877679697352, ["mov     r11d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r11d, r11d", "jnz     loc_11144"], ["mov~r11d,[rsp+0]", "test~r11d,r11d", "jnz~FOO"]], [0, 0, 24, 1, 0, 4, 0, 1, 8, -1, 0.0022218218939530415, ["neg     rdx", "lea     r9, [r8+rdx]", "add     rdx, r12", "jmp     short loc_10D5A"], ["neg~rdx", "lea~r9,<TAG>", "add~rdx,r12", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_10771"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 18, 3, 0.02152765267519366, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_11338"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 19, 4, 0.0046938489561440385, ["mov     edi, [rsp+1C8h+rneedle.cur.wc]; iter", "test    edi, edi", "jz      short loc_11150"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 10, 11, 0.0056146039752597125, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jnz     loc_11144"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 26, 17, 0.004713865369603075, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jnz     loc_11144"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.006695490302047679, ["xor     eax, eax", "jmp     loc_10536"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0042935206869633095, ["mov     rax, [rsp+1C8h+result]", "jmp     loc_10536"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 10, -1, 0.0017414279709361677, ["movzx   edi, byte ptr [rdx+rbx]", "test    dil, dil", "jz      loc_10B98"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 198h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 24, 0, 0, 1, 0, 0, 8, -1, 0.001125923257070798, ["mov     eax, edx"], ["mov~eax,edx"]], [0, 0, 24, 0, 0, 3, 1, 1, 9, -1, 0.002642166576592806, ["movzx   esi, byte ptr [r9+rbx]", "test    sil, sil", "jnz     short loc_10D40"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 0, 14, 2, 0.14132588722752656, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc], edx", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 145, 2, 0, 5, 0, 1, 13, 12, 0.03396284953662002, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.bytes]", "add     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "sub     [rsp+1C8h+count], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_10FF0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "sub~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 16, 13, 0.0023269080646129824, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jmp     loc_10DC9"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 6, 10, 0.17874907424087755, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "jz      loc_10BC0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 10, 0.034781020436758146, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_11080"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_10771"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 8, 11, 0.026464200644528507, ["test    rax, rax", "jnz     short loc_109AF"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 158, 0, 3, 13, 0, 4, 3, 14, 0.005374407013751276, ["mov     [rsp+1C8h+iter_needle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s", "lea     rdi, [rbx+24h]; pwc", "mov     rcx, rbp; p", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "jz      loc_10578"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rbx+0]", "mov~rcx,rbp", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 27, -1, 0.0006004924037710923, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 1, 5, 0, 2, 17, 20, 0.003993274485077764, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jmp     loc_10780"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 145, 1, 0, 5, 0, 1, 10, 10, 0.17691006625432854, ["mov     rsi, comparison_count", "sub     rsi, [rsp+1C8h+last_ccount]", "movzx   eax, [rsp+1C8h+iter_needle_last_ccount.next_done]", "mov     [rsp+1C8h+count], count_0", "jz      loc_113F1"], ["mov~rsi,comparison_count", "sub~rsi,[rsp+0]", "movzx~eax,[rsp+0]", "mov~[rsp+0],count_0", "jz~FOO"]], [1, 0, 156, 0, 0, 2, 0, 1, 4, 14, 0.0013811325286735123, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_113A5"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 9, 10, 0.023148982165375608, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_10FB8"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 145, 0, 0, 3, 0, 0, 7, 9, 0.13934426229508196, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 145, 0, 1, 6, 0, 2, 8, 9, 0.0036930282831922176, ["mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_10BDC"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 1, 0, 1, 0, 0, 9, 7, 0.03972257250945776, ["add     comparison_count, 1"], ["add~comparison_count,0"]]], "func_feature": [53, 71, 196, 2, 184, 288, 1, 762, 0.0396, 6, 24], "succs": [[9, 77], [0, 29], [125, 143], [2], [2], [162, 22], [140, 5], [5], [5], [69], [41, 162], [10, 20], [30, 151], [129, 12], [12, 159], [21, 149], [152, 15], [15], [15], [], [19, 165], [42], [140, 31], [176, 22], [64, 44], [24, 3], [136, 178], [26, 183], [50, 67], [107, 28], [16], [38], [52, 84], [32, 155], [32, 167], [32, 162], [40, 43], [43, 36], [76, 142], [38], [93], [51], [75, 63], [42, 149], [56], [132, 53], [45, 102], [45], [85], [48, 55], [69], [35, 111], [51], [112, 68], [101, 157], [177, 54], [169, 74], [56, 169], [56], [56], [], [60, 47], [60, 135], [96, 60], [4, 60], [49, 60], [60, 175], [106, 60], [80, 103], [97, 77], [69], [69], [109], [72, 98], [97, 29], [81], [46], [86], [77], [77], [90, 126], [73, 162], [81], [81], [91, 166], [46], [92, 109], [86], [140], [88, 138], [159, 103], [100, 108], [37], [168, 65], [], [85, 94], [171], [163, 87], [104, 178], [52], [99, 163], [158, 126], [61, 118], [122, 117], [109], [114, 79], [105], [105], [100, 166], [115, 37], [33, 162], [152, 110], [131], [130, 139], [113, 78], [93, 142], [57, 25], [131, 119], [124], [123], [154, 126], [120, 147], [124], [20], [123, 131], [169], [], [160, 126], [161, 126], [14, 126], [133, 126], [146, 6], [131], [139, 159], [8, 62], [89], [37], [140], [137, 150], [70, 71], [142, 39], [23, 7], [43], [121, 170], [66, 148], [144, 11], [89, 134], [58, 59], [16], [171], [128, 141], [16], [20], [152], [147, 159], [167], [95], [156, 173], [157, 159], [], [180, 159], [141, 159], [20], [20], [34, 162], [], [52], [153, 164], [95], [25, 29], [169], [172, 181], [182, 174], [95], [180, 127], [18, 179], [162], [85], [1, 116], [17, 13], [82, 83], [27], [27], [37]], "fname": "mbsstr", "n_num": 184}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.047619047619047616, ["cmp     [rsp+1098h+outsize], 0", "jnz     loc_11743"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 2, 2, 7, 3, 0.11904761904761904, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 0, 1, 8, 2, 0.047619047619047616, ["mov     rax, [rsp+1098h+resultp]", "mov     r15, [rsp+1098h+result]", "mov     ebx, 0FFFFFFFFh", "cmp     [rax], r15", "jz      short loc_116A4"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "mov~ebx,0", "cmp~<TAG>,r15", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 8, 3, 0.011904761904761904, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      loc_11660"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 4, 4, 0.0992063492063492, ["mov     rdi, [rsp+1098h+count]; size", "call    _malloc", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      loc_1172E"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 18, 0, 0, 5, 1, 1, 3, 5, 0.16798941798941797, ["mov     count_0, [rsp+1098h+resultp]", "mov     rax, [rax]", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      short loc_115DC"], ["mov~count_0,[rsp+0]", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 17, 0, 0, 4, 0, 0, 4, 5, 0.07275132275132275, ["mov     rax, [rsp+1098h+lengthp]", "mov     rcx, [rsp+1098h+count]", "cmp     [rax], rcx", "jnb     short loc_115F4"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~<TAG>,rcx", "jnb~FOO"]], [1, 1, 21, 0, 1, 10, 2, 2, 1, 3, 0.17328042328042326, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_11739"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],<STR>", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 28, 1, 1, 30, 7, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, src_0", "push    r13", "push    r12", "mov     r13, srclen_0", "push    rbp", "push    rbx", "mov     rbx, cd", "xor     esi, esi; inbuf", "xor     edx, edx; inbytesleft", "sub     rsp, 1068h", "mov     [rsp+1098h+src], src_0", "mov     [rsp+1098h+resultp], resultp_0", "mov     src_0, cd; cd", "mov     [rsp+1098h+lengthp], lengthp_0", "xor     ecx, ecx; outbuf", "xor     r8d, r8d; outbytesleft", "mov     rax, fs:28h", "mov     [rsp+1098h+var_40], rax", "xor     eax, eax", "call    _iconv", "mov     [rsp+1098h+inptr], src_0", "xor     r15d, r15d", "test    srclen_0, srclen_0", "mov     [rsp+1098h+insize], srclen_0", "lea     r14, [rsp+1098h+tmp]", "lea     r12, [rsp+1098h+outsize]", "lea     rbp, [rsp+1098h+outptr]", "jz      short loc_1157B"], ["push~r15", "push~r14", "mov~r15,src_0", "push~r13", "push~r12", "mov~r13,srclen_0", "push~rbp", "push~rbx", "mov~rbx,cd", "xor~esi,esi", "xor~edx,edx", "sub~rsp,0", "mov~[rsp+0],src_0", "mov~[rsp+0],resultp_0", "mov~src_0,cd", "mov~[rsp+0],lengthp_0", "xor~ecx,ecx", "xor~r8d,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],src_0", "xor~r15d,r15d", "test~srclen_0,srclen_0", "mov~[rsp+0],srclen_0", "lea~r14,[rsp+0]", "lea~r12,[rsp+0]", "lea~rbp,[rsp+0]", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 4, 0.05291005291005291, ["mov     r13, [rsp+1098h+result]", "jmp     loc_1157B"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 1, 4, 3, 0.06349206349206349, ["cmp     eax, 16h", "mov     r13, [rsp+1098h+result]", "jnz     loc_11739"], ["cmp~eax,0", "mov~r13,[rsp+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 7, 1, 0, 9, 2, 0.003968253968253968, ["mov     res, [rsp+1098h+resultp]", "mov     rsi, [rsp+1098h+result]", "xor     ebx, ebx", "mov     rdi, [rsp+1098h+count]", "mov     [rax], rsi", "mov     rax, [rsp+1098h+lengthp]", "mov     [rax], rdi"], ["mov~res,[rsp+0]", "mov~rsi,[rsp+0]", "xor~ebx,ebx", "mov~rdi,[rsp+0]", "mov~<TAG>,rsi", "mov~rax,[rsp+0]", "mov~<TAG>,rdi"]], [0, 0, 3, 0, 2, 7, 0, 3, 9, 2, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     rdi, r15; ptr", "call    free", "mov     [rbp+0], r12d", "jmp     loc_116A4"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~rdi,r15", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 27, 2, 0, 5, 0, 1, 3, 5, 0.03042328042328042, ["mov     rax, [rsp+1098h+outptr]", "sub     rax, r14", "add     count_0, rax", "cmp     [rsp+1098h+insize], 0", "jz      loc_116D0"], ["mov~rax,[rsp+0]", "sub~rax,r14", "add~count_0,rax", "cmp~[rsp+0],0", "jz~FOO"]], [1, 1, 27, 0, 1, 10, 0, 2, 2, 5, 0.042328042328042326, ["mov     rsi, [rsp+1098h+count]; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r13; inbytesleft", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_11520"], ["mov~rsi,[rsp+0]", "mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r13", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],<STR>", "call~FOO", "cmp~res,0", "jnz~FOO"]], [1, 0, 27, 0, 1, 4, 0, 2, 3, 4, 0.03968253968253968, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 7", "jz      short loc_11520"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 13, 0, 1, 16, 4, 2, 5, 5, 0.15873015873015872, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "lea     r15, [rsp+1098h+insize]", "call    _iconv", "mov     rax, [rsp+1098h+src]", "mov     [rsp+1098h+insize], r13", "lea     r14, [rsp+1098h+inptr]", "mov     [rsp+1098h+inptr], rax", "mov     rax, [rsp+1098h+result]", "mov     [rsp+1098h+outptr], rax", "mov     rax, [rsp+1098h+count]", "mov     [rsp+1098h+outsize], rax", "jmp     short loc_1165B"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "lea~r15,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[rsp+0],r13", "lea~r14,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 5, 3, 0.017195767195767195, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 20, 2, 0, 5, 0, 1, 2, 3, 0.1693121693121693, ["mov     res, [rsp+1098h+outptr]", "sub     rax, r14", "add     rax, r15", "mov     [rsp+1098h+count], count_0", "jz      loc_116E0"], ["mov~res,[rsp+0]", "sub~rax,r14", "add~rax,r15", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.06613756613756613, ["mov     rdx, [rsp+1098h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_11748"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.003968253968253968, ["mov     count_0, [rsp+1098h+lengthp]", "xor     ebx, ebx", "mov     qword ptr [rax], 0", "jmp     short loc_116A4"], ["mov~count_0,[rsp+0]", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.047619047619047616, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_116A4"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1068h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 13, 0, 1, 8, 0, 2, 7, 4, 0.03835978835978836, ["mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r15; inbytesleft", "mov     rsi, r14; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_116F0"], ["mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r15", "mov~rsi,r14", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 6, 4, 0.17328042328042326, ["test    r13, r13", "jnz     short loc_11638"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, 5, 0.0013227513227513227, ["mov     r13, [rsp+1098h+insize]"], ["mov~r13,[rsp+0]"]], [0, 0, 27, 0, 0, 6, 0, 1, 1, 6, 0.006613756613756613, ["lea     rax, [rsp+1098h+insize]", "lea     rsi, [rsp+1098h+inptr]", "mov     [rsp+1098h+result], srclen_0", "mov     [rsp+1098h+count], rsi", "mov     srclen_0, rax", "jmp     short loc_11537"], ["lea~rax,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],srclen_0", "mov~[rsp+0],rsi", "mov~srclen_0,rax", "jmp~FOO"]]], "func_feature": [14, 21, 36, 1, 29, 43, 1, 170, 0.05706, 1, 6], "succs": [[11, 22], [0, 2], [19, 12], [1, 2], [16, 17], [4, 6], [16, 4], [18, 21], [28, 7], [7], [21, 7], [19], [19], [9, 14], [13, 15], [10, 13], [26], [21], [20, 5], [24, 23], [19], [19], [], [], [], [3, 27], [25, 1], [26], [14]], "fname": "mem_cd_iconv", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 20, 0, 0, 2, 0, 1, 0, 0, 0.06818181818181818, ["cmp     eax, 7", "jnz     failed"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 20, 0, 1, 5, 0, 2, 3, 4, 0.12987012987012986, ["call    ___errno_location", "mov     r15, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_118E6"], ["call~FOO", "mov~r15,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 5, 3, 0.10173160173160173, ["call    ___errno_location", "cmp     dword ptr [rax], 7", "mov     rcx, rax", "jnz     failed"], ["call~FOO", "cmp~<TAG>,0", "mov~rcx,rax", "jnz~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 4, 3, 0.20238095238095238, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_11880"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rdi, [rsp+88h+var_40]", "xor     rdi, fs:28h", "mov     rax, rbx", "jnz     short loc_1198D"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 20, 1, 0, 5, 0, 0, 5, 4, 0.06493506493506493, ["mov     r14, [rsp+88h+outptr]", "lea     r13, [result_size+result_size+0]", "sub     r14, result", "cmp     result_size, newsize", "jnb     loc_11970"], ["mov~r14,[rsp+0]", "lea~r13,[result_size+0]", "sub~r14,result", "cmp~result_size,newsize", "jnb~FOO"]], [0, 0, 12, 1, 0, 5, 0, 0, 6, 4, 0.08225108225108226, ["mov     r15, [rsp+88h+outptr]", "lea     rdx, [result_size+result_size+0]", "sub     r15, result", "cmp     result_size, newsize_0", "jnb     loc_11938"], ["mov~r15,[rsp+0]", "lea~rdx,[result_size+0]", "sub~r15,result", "cmp~result_size,newsize_0", "jnb~FOO"]], [2, 1, 22, 2, 2, 24, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, cd", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     [rsp+88h+inptr], src", "call    _strlen", "mov     r13, rax", "mov     [rsp+88h+inbytes_remaining], rax", "shl     r13, 4", "cmp     result_size, 10000000h", "cmovnb  r13, result_size", "lea     rbp, [result_size+1]", "mov     rdi, result_size; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_11980"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,cd", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],src", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "shl~r13,0", "cmp~result_size,0", "cmovnb~r13,result_size", "lea~rbp,[result_size+0]", "mov~rdi,result_size", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 6, 4, 0.0670995670995671, ["mov     rsi, newsize; size", "mov     rdi, result; ptr", "call    _realloc", "test    newresult, newresult", "jz      loc_11970"], ["mov~rsi,newsize", "mov~rdi,result", "call~FOO", "test~newresult,newresult", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 6, 2, 0.0, ["mov     rdi, result; ptr", "call    _realloc", "test    smaller_result, smaller_result", "cmovnz  result, smaller_result", "jmp     short loc_11948"], ["mov~rdi,result", "call~FOO", "test~smaller_result,smaller_result", "cmovnz~result,smaller_result", "jmp~FOO"]], [1, 0, 4, 1, 0, 8, 0, 0, 5, 2, 0.06601731601731602, ["mov     res, [rsp+88h+outptr]", "lea     rdx, [rax+1]", "mov     [rsp+88h+outptr], rdx", "mov     byte ptr [rax], 0", "mov     rsi, [rsp+88h+outptr]", "sub     rsi, result; size", "cmp     result_size, length", "jbe     short loc_11948"], ["mov~res,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "mov~<TAG>,0", "mov~rsi,[rsp+0]", "sub~rsi,result", "cmp~result_size,length", "jbe~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 7, 3, 0.017316017316017316, ["mov     dword ptr [rcx], 0Ch"], ["mov~<TAG>,0"]], [0, 0, 12, 0, 1, 9, 1, 2, 7, 4, 0.04112554112554113, ["mov     rsi, newsize_0; size", "mov     rdi, result; ptr", "mov     [rsp+88h+inbuf], newsize_0", "mov     [rsp+88h+inbytesleft], rax", "call    _realloc", "test    newresult, newresult", "mov     rdx, [rsp+88h+inbuf]", "mov     rcx, [rsp+88h+inbytesleft]", "jz      short loc_11938"], ["mov~rsi,newsize_0", "mov~rdi,result", "mov~[rsp+0],newsize_0", "mov~[rsp+0],rax", "call~FOO", "test~newresult,newresult", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 5, 2, 0.06168831168831169, ["mov     rdi, result; ptr", "xor     ebx, ebx", "call    free"], ["mov~rdi,result", "xor~ebx,ebx", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.017316017316017316, ["mov     dword ptr [r15], 0Ch", "jmp     short failed"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 1, 0, 8, 0, 0, 7, 6, 0.08225108225108226, ["lea     rsi, [newresult+used]", "mov     rbx, newresult", "mov     rbp, newsize", "mov     [rsp+88h+outptr], rsi", "lea     rsi, [newsize-1]", "mov     rdx, rsi", "sub     rdx, used", "mov     [rsp+88h+outbytes_remaining], rdx"], ["lea~rsi,<TAG>", "mov~rbx,newresult", "mov~rbp,newsize", "mov~[rsp+0],rsi", "lea~rsi,[newsize-1]+0]", "mov~rdx,rsi", "sub~rdx,used", "mov~[rsp+0],rdx"]], [1, 0, 3, 0, 1, 3, 0, 2, 1, 2, 0.006493506493506494, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     short loc_11948"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 1, 0, 7, 0, 0, 8, 4, 0.025974025974025976, ["lea     rcx, [newresult+used]", "mov     rbp, result_size", "mov     rbx, newresult", "mov     [rsp+88h+outptr], rcx", "lea     rcx, [result_size-1]", "sub     rcx, used", "mov     [rsp+88h+outbytes_remaining], rcx"], ["lea~rcx,<TAG>", "mov~rbp,result_size", "mov~rbx,newresult", "mov~[rsp+0],rcx", "lea~rcx,[result_size-1]+0]", "sub~rcx,used", "mov~[rsp+0],rcx"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     result_size", "pop     cd", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~result_size", "pop~cd", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 20, 0, 1, 17, 4, 2, 1, 6, 0.0367965367965368, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "lea     rax, [rsp+88h+outbytes_remaining]", "mov     [rsp+88h+outptr], result", "mov     [rsp+88h+outbytes_remaining], r13", "mov     [rsp+88h+outbytesleft], rax", "lea     rax, [rsp+88h+outptr]", "mov     [rsp+88h+outbuf], rax", "lea     rax, [rsp+88h+inbytes_remaining]", "mov     [rsp+88h+inbytesleft], rax", "lea     rax, [rsp+88h+inptr]", "mov     [rsp+88h+inbuf], rax", "jmp     short loc_11854"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],result", "mov~[rsp+0],r13", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 20, 0, 1, 8, 0, 2, 2, 5, 0.18831168831168832, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "mov     rdi, cd; cd", "mov     rdx, [rsp+88h+inbytesleft]; inbytesleft", "mov     rsi, [rsp+88h+inbuf]; inbuf", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_117F0"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "mov~rdi,cd", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 3, 4, 0.0670995670995671, ["jmp     short loc_118E6"], ["jmp~FOO"]]], "func_feature": [13, 13, 27, 1, 23, 33, 2, 143, 0.06145, 1, 8], "succs": [[14, 6], [0, 3], [14, 7], [2, 11], [], [19, 4], [9, 15], [12, 13], [17, 20], [16, 15], [5], [10, 5], [14], [18, 12], [5], [14], [21], [5], [3], [], [21], [1, 22], [3]], "fname": "str_cd_iconv", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "add     rsp, 8", "mov     rax, result", "pop     result", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,result", "pop~result", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, -1, 0.044444444444444446, ["mov     rdi, src; s", "call    _strdup", "test    rax, rax", "mov     src, rax", "jz      short loc_119E8"], ["mov~rdi,src", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 3, 0, 0.011111111111111112, ["xor     ebx, ebx", "jmp     loc_119D7"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 2, 1, 0.11111111111111112, ["mov     rdi, to_codeset; tocode", "mov     rsi, from_codeset; fromcode", "call    _iconv_open", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     to_codeset, rax", "jz      short loc_11A80"], ["mov~rdi,to_codeset", "mov~rsi,from_codeset", "call~FOO", "cmp~rax,0", "mov~to_codeset,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 4, 1, 1, 4, -1, 0.05, ["mov     rdi, cd; cd", "call    _iconv_close", "test    eax, eax", "jns     short loc_119D7"], ["mov~rdi,cd", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 5, -1, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     cd, rax", "mov     rdi, result; ptr", "call    free", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_119D7"], ["call~FOO", "mov~r12d,<TAG>", "mov~cd,rax", "mov~rdi,result", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 1, 0, 2, 7, 0, 3, 4, -1, 0.005555555555555556, ["call    ___errno_location", "mov     r13d, [rax]", "mov     from_codeset, rax", "mov     rdi, cd; cd", "call    _iconv_close", "mov     [r12], r13d", "jmp     loc_119D7"], ["call~FOO", "mov~r13d,<TAG>", "mov~from_codeset,rax", "mov~rdi,cd", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 1, 2, 0.06666666666666667, ["mov     r12, from_codeset", "mov     from_codeset, to_codeset; s2", "mov     rbp, to_codeset", "mov     src, from_codeset; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_11A08"], ["mov~r12,from_codeset", "mov~from_codeset,to_codeset", "mov~rbp,to_codeset", "mov~src,from_codeset", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 10, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, src", "sub     rsp, 8", "cmp     byte ptr [src], 0", "jz      short loc_119C7"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,src", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 3, -1, 0.1, ["mov     rdi, src; src", "mov     rsi, cd; cd", "call    str_cd_iconv", "test    rax, rax", "mov     src, rax", "jz      short loc_11A60"], ["mov~rdi,src", "mov~rsi,cd", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]]], "func_feature": [10, 6, 18, 0, 11, 15, 1, 69, 0.03535, 0, 3], "succs": [[], [0, 4], [4], [2, 10], [], [4, 6], [4], [4], [1, 3], [8, 1], [5, 7]], "fname": "str_iconv", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_11AE8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_11ABF"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_11AF8"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_11AC8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 5, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi; cmd", "xor     eax, eax", "jmp     _fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 2, 1, 1, -1, 0.08333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "jmp     _fcntl"], ["xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 1, 0, 0.08333333333333333, ["mov     esi, 406h; cmd", "xor     eax, eax", "jmp     _fcntl"], ["mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.0, ["and     esi, 80000h", "mov     edx, 3", "jnz     short loc_11B40"], ["and~esi,0", "mov~edx,0", "jnz~FOO"]]], "func_feature": [0, 4, 3, 0, 4, 4, 1, 9, 0.04167, 0, 0], "succs": [[], [0], [0], [1, 2]], "fname": "dup_safer_flag", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_11B82"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 1, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_11BC2"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer_flag", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 0, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer_flag", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.07142857142857142, ["xor     eax, eax", "jmp     short loc_11C17"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 7, 1, 1, 12, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     esi, edi; fildes", "mov     ebx, edi", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___fxstat", "test    eax, eax", "jnz     short loc_11C50"], ["push~rbx", "mov~esi,edi", "mov~ebx,edi", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 2, 2, 0.03571428571428571, ["call    ___errno_location", "mov     dword ptr [rax], 14h", "xor     eax, eax", "jmp     short loc_11C17"], ["call~FOO", "mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 1, 3, 0.047619047619047616, ["mov     eax, [rsp+0A8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_11C38"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.23809523809523808, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_11C54"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 2, 2, 0.03571428571428571, ["mov     edi, ebx; fd", "call    _fdopendir"], ["mov~edi,ebx", "call~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 0A0h", "pop     fd", "retn"], ["add~rsp,0", "pop~fd", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 6, 9, 1, 8, 9, 2, 31, 0.05357, 1, 2], "succs": [[4], [0, 3], [4], [2, 5], [6, 7], [4], [], []], "fname": "rpl_fdopendir", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 3, 1, 1, 7, 1, 1, 0, 0, 0.0, ["mov     rdi, rsp; tv", "xor     esi, esi; tz", "call    _gettimeofday", "mov     rax, [rsp+28h+tv.tv_sec]", "mov     [ts], rax", "imul    rax, [rsp+28h+tv.tv_usec], 3E8h", "mov     [ts+8], rax"], ["mov~rdi,rsp", "xor~esi,esi", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "imul~rax,[rsp+0],0", "mov~[ts+0],rax"]], [0, 1, 4, 1, 1, 11, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     rsi, ts; tp", "mov     rbx, ts", "xor     edi, edi; clock_id", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_11CA4"], ["push~rbx", "mov~rsi,ts", "mov~rbx,ts", "xor~edi,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     ts", "retn"], ["add~rsp,<STR>", "pop~ts", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_11CBA"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 5, 1, 5, 5, 2, 25, 0.06667, 1, 3], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "gettime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, rcx", "add     rsp, 8", "retn"], ["mov~rax,rcx", "add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 6, 2, 2, 1, -1, 0.16666666666666666, ["sub     rsp, 8", "call    _malloc", "xor     ecx, ecx", "test    rax, rax", "mov     rsi, rax", "jz      short loc_11D1D"], ["sub~rsp,0", "call~FOO", "xor~ecx,ecx", "test~rax,rax", "mov~rsi,rax", "jz~FOO"]], [4, 0, 1, 4, 0, 16, 0, 0, 2, -1, 0.0, ["lea     rcx, [p+10h]", "mov     dword ptr [rax+0Ch], 1415FB4Ah", "mov     rdx, 0FF00FF00FF00FF01h", "mov     rax, p", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rdi, [rax+slot*8]", "mov     [rax+slot*8], p", "mov     [rsi], rdi"], ["lea~rcx,[p+0]", "mov~[word ptr [rax+0],0", "mov~rdx,0", "mov~rax,p", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rdi,<TAG>", "mov~<TAG>,p", "mov~<TAG>,rdi"]], [1, 0, 4, 1, 0, 2, 0, 0, 0, 1, 0.0, ["add     n, 10h; size", "jb      short loc_11D25"], ["add~n,0", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     ecx, ecx", "mov     rax, rcx", "retn"], ["xor~ecx,ecx", "mov~rax,rcx", "retn"]]], "func_feature": [1, 3, 2, 0, 5, 5, 2, 30, 0.03333, 1, 7], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "mmalloca", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.09615384615384615, ["cmp     p, rax", "jz      short loc_11D98"], ["cmp~p,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, -1, 0.16025641025641024, ["mov     rax, [rcx-10h]", "test    rax, rax", "jnz     short loc_11D80"], ["mov~rax,[rcx-10h]+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.019230769230769232, ["mov     rcx, rax"], ["mov~rcx,rax"]], [1, 0, 1, 1, 0, 4, 0, 1, 6, -1, 0.0641025641025641, ["mov     rax, [p-10h]", "sub     p, 10h; ptr", "mov     [rcx], rax", "jmp     free"], ["mov~rax,[p-10h]+0]", "sub~p,0", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 0, 0.0641025641025641, ["lea     rcx, [rax+slot*8]", "jmp     short loc_11D9C"], ["lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 2, 1, 0, 1, 0, 0, 6, -1, 0.038461538461538464, ["sub     rcx, 10h"], ["sub~rcx,0"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 4, 0.07051282051282051, ["cmp     dword ptr [p-4], 1415FB4Ah", "jz      short loc_11D40"], ["cmp~[word ptr [p-4]+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    p, p", "jz      short locret_11D3E"], ["test~p,p", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [0, 0, 10, 0, 0, 2, 0, 1, 3, 2, 0.17307692307692307, ["cmp     rcx, p", "jnz     short loc_11D88"], ["cmp~rcx,p", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.02564102564102564, ["jmp     short locret_11D3E"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 1, 0.07692307692307693, ["jmp     short loc_11DB0"], ["jmp~FOO"]], [3, 0, 11, 4, 0, 14, 1, 1, 2, 3, 0.1282051282051282, ["mov     rax, p", "mov     rdx, 0FF00FF00FF00FF01h", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rcx, [rax+slot*8]", "test    rcx, rcx", "jz      short locret_11D3E"], ["mov~rax,p", "mov~rdx,0", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 10, 0, 14, 18, 3, 36, 0.06548, 1, 6], "succs": [[2, 5], [0, 10], [1], [8], [3], [3], [12, 13], [13, 6], [], [1, 11], [13], [4], [9, 13], []], "fname": "freea", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.06666666666666667, ["mov     rsi, [rsp+78h+var_30]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_11FA1"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 5, 8, 0.26666666666666666, ["mov     eax, [rsp+78h+var_54]", "test    eax, eax", "jz      loc_11DF3"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 1, -1, 0.005, ["mov     rdi, string_0; s", "call    _strlen", "mov     string_0, rax"], ["mov~rdi,string_0", "call~FOO", "mov~string_0,rax"]], [2, 0, 23, 0, 0, 3, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_6C], 1", "jmp     loc_11E7F"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_6C], 1", "jmp     loc_11E7F"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 23, 0, 0, 5, 0, 0, 4, 9, 0.045000000000000005, ["mov     [rsp+78h+var_60], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+78h+var_58], 1", "mov     [rsp+78h+var_6C], 1", "mov     [rsp+78h+var_54], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 23, 2, 0, 4, 0, 0, 5, 7, 0.305, ["mov     rax, [rsp+78h+var_60]", "add     [rsp+78h+string], rax", "add     count, 1", "mov     [rsp+78h+var_6C], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "add~count,0", "mov~[rsp+0],0"]], [2, 0, 23, 0, 0, 3, 0, 1, 4, 8, 0.03333333333333333, ["mov     [rsp+78h+var_60], 1", "mov     [rsp+78h+var_58], 0", "jmp     loc_11E8B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 5, 8, 0.015000000000000001, ["mov     rdi, [rsp+78h+string]; s", "call    _strlen", "mov     [rsp+78h+var_58], 0", "mov     [rsp+78h+var_60], rax", "jmp     loc_11E8B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5707; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 7, 0.07833333333333334, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_11F82"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 23, 0, 1, 5, 1, 2, 6, 10, 0.165, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+78h+var_58], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_11F78"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 2, 6, 0.38333333333333336, ["cmp     [rsp+78h+var_78], 0", "jz      short loc_11E48"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 23, 0, 0, 9, 1, 1, 1, 7, 0.03333333333333333, ["mov     rbp, rsp", "mov     [rsp+78h+string], string_0", "mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_74], 0", "mov     [rsp+78h+var_6C], 0", "xor     ebx, ebx", "lea     r12, is_basic_table", "lea     r13, [rbp+4]", "jmp     short loc_11E9E"], ["mov~rbp,rsp", "mov~[rsp+0],string_0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,ebx", "lea~r12,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5707; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 7, 1, 0.06166666666666667, ["mov     edx, [rsp+78h+var_54]", "test    edx, edx", "jnz     loc_11FC5"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 23, 0, 0, 8, 1, 0, 3, 8, 0.14666666666666667, ["mov     rcx, [rsp+78h+string]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r12+rax*4]", "bt      eax, edx", "jnb     loc_11F28"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.05333333333333334, ["mov     [rsp+78h+var_78], 1", "jmp     loc_11EA4"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 25, 1, 1, 12, 1, 2, 0, 8, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, string_0", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+78h+var_30], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_11E18"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,string_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5707; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 23, 0, 0, 4, 0, 1, 6, 2, 0.08666666666666667, ["mov     rax, [rsp+78h+string]", "mov     [rsp+78h+var_60], 1", "cmp     byte ptr [rax], 0", "jnz     loc_11FA6"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 23, 0, 3, 12, 0, 4, 3, 5, 0.30333333333333334, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+78h+string]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+78h+string]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+78h+var_60], rax", "jz      short loc_11F40"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.24666666666666667, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      short loc_11F58"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 5, 3, 0.20833333333333334, ["test    rax, rax", "jnz     short loc_11F04"], ["test~rax,rax", "jnz~FOO"]]], "func_feature": [12, 9, 29, 5, 26, 33, 1, 119, 0.10173, 7, 4], "succs": [[13, 6], [0, 7], [0], [1], [1], [1], [], [14], [7], [7], [], [10, 19], [3, 4], [], [18, 23], [14], [], [16, 12], [11, 5], [23], [2, 15], [], [17, 21], [8, 24], [25, 9], [12, 22]], "fname": "mbslen", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_12046"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_12030"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __uflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimensat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn pathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dup2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn symlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "symlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fscanf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strnlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimes:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkfifo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn umask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xmknod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswalnum:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ungetc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn linkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswspace:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn chmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rename:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimens:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn euidaccess:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strdup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimesat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
