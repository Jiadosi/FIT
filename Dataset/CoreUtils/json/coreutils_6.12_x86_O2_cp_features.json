{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_20E2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_217CE0", "jmp     cs:qword_217CE8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 91, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_20F0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__uflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimensat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 70, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:pathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 101, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 50, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 32, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:symlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "symlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fscanf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strnlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strndup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkfifo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:umask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 28, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xmknod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswalnum_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 25, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ungetc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswspace_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 63, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rename_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimens_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:link_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "link", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strdup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 73, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0A2h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 59, 0, 1, 5, 1, 2, 0, 0, 0.0005235729592830702, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 00000000000028E8 case 260", "xor     edx, edx; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "jmp     loc_28B0"], ["mov~rdi,<TAG>", "xor~edx,edx", "mov~rsi,r15", "call~FOO", "jmp~FOO"]], [0, 0, 59, 1, 0, 3, 0, 1, 3, 11, 0.3591466978375219, ["movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [1, 0, 19, 0, 0, 2, 0, 1, 3, 8, 0.011396843950905903, ["cmp     [rsp+148h+x.symbolic_link], 0", "jz      short loc_2BC9"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 2, 8, 0.2054354178842782, ["cmp     [rsp+148h+x.hard_link], 0", "jz      short loc_2BC9"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 59, 0, 0, 8, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.dereference], 2; jumptable 00000000000028E8 case 228", "mov     [rsp+148h+x.preserve_links], r14b", "mov     [rsp+148h+x.preserve_ownership], r14b", "mov     [rsp+148h+x.preserve_mode], r14b", "mov     [rsp+148h+x.preserve_timestamps], r14b", "mov     [rsp+148h+x.require_preserve], r14b", "mov     [rsp+148h+x.recursive], r14b", "jmp     loc_28B0"], ["mov~[rsp+0],0", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 7, 4, 0.0020455873758036236, ["movzx   eax, [rsp+148h+copy_contents]", "mov     [rsp+148h+x.copy_as_regular], al"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 5, 0.0002922267679719462, ["mov     [rsp+148h+x.dereference], 2", "jmp     loc_2C07"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 6, 4, 0.10286382232612507, ["test    al, al", "jz      short loc_2C10"], ["test~al,al", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+copy_contents], 1; jumptable 00000000000028E8 case 259", "jmp     loc_28B0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 59, 0, 0, 5, 0, 1, 4, 10, 0.008705922462497564, ["mov     [rsp+148h+x.preserve_ownership], r14b; jumptable 00000000000028E8 case 243", "mov     [rsp+148h+x.preserve_mode], r14b", "mov     [rsp+148h+x.preserve_timestamps], r14b", "mov     [rsp+148h+x.require_preserve], r14b", "jmp     short loc_28B0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 4, 11, 0.010227936879018117, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 00000000000028E8 case 262", "test    rdi, rdi", "jnz     loc_2BB2"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+no_target_directory], 1; jumptable 00000000000028E8 case 215", "jmp     short loc_28B0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 15, 0, 1, 3, 0, 1, 4, 7, 0.0, ["mov     rdi, rax; string", "call    xstrdup", "mov     cs:simple_backup_suffix, rax"], ["mov~rdi,rax", "call~FOO", "mov~<TAG>,rax"]], [0, 0, 16, 0, 0, 3, 1, 1, 3, 7, 0.18234950321449445, ["mov     c, [rsp+148h+backup_suffix_string]", "test    rax, rax", "jz      short loc_2BE2"], ["mov~c,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.one_file_system], r14b; jumptable 00000000000028E8 case 251", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [2, 0, 1, 0, 2, 10, 3, 3, 10, 0, 0.0, ["lea     rsi, aCannotPreserve; \"cannot preserve security context withou\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2C3B"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 9, 1, 0.01548801870251315, ["cmp     cs:selinux_enabled, 0", "jz      loc_2D74"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 7, 3, 0.08591466978375219, ["movzx   eax, [rsp+148h+x.hard_link]", "or      al, [rsp+148h+x.symbolic_link]", "jz      short loc_2C27"], ["movzx~eax,[rsp+0]", "or~al,[rsp+0]", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 7, 4, 0.0020455873758036236, ["mov     [rsp+148h+x.dereference], 4", "jmp     loc_2C10"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 2, 0.04558737580362361, ["cmp     [rsp+148h+x.preserve_security_context], 0", "jz      short loc_2C3B"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 59, 0, 0, 4, 0, 1, 4, 10, 0.0005235729592830702, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 00000000000028E8 case 214", "mov     [rsp+148h+make_backups], 1", "mov     [rsp+148h+backup_suffix_string], rax", "jmp     loc_28B0"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, 3, 0.014611338398597311, ["cmp     [rsp+148h+x.unlink_dest_after_failed_open], 0", "jz      short loc_2C27"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.verbose], r14b; jumptable 00000000000028E8 case 249", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 9, 3, 0.0, ["mov     [rsp+148h+x.unlink_dest_before_opening], 1"], ["mov~[rsp+0],0"]], [1, 0, 1, 0, 2, 9, 4, 2, 4, -1, 0.0005844535359438924, ["lea     rsi, aCannotMakeBoth; \"cannot make both hard and symbolic link\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 59, 0, 0, 4, 1, 1, 6, 11, 0.042665108123904144, ["mov     eax, [rsp+148h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_2B5F"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 59, 0, 4, 16, 2, 5, 6, 12, 0.0, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; name", "call    quote", "lea     rsi, aAccessingS; \"accessing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rsp+148h+var_120], rax", "call    _dcgettext", "mov     [rsp+148h+target_directory], rax", "call    ___errno_location", "mov     rcx, [rsp+148h+var_120]", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     rdx, [rsp+148h+target_directory]; format", "xor     eax, eax", "call    _error", "jmp     loc_2C94"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rsp+0],rax", "call~FOO", "mov~<TAG>,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~rdx,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 59, 0, 1, 6, 1, 2, 5, 12, 0.029807130333138514, ["mov     rdx, [rsp+148h+stat_buf]; stat_buf", "mov     rsi, cs:optarg@@GLIBC_2_2_5; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_2D2B"], ["mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.unlink_dest_after_failed_open], r14b; jumptable 00000000000028E8 case 233", "jmp     short loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 0, 1, 4, 15, 1, 4, 9, -1, 0.0, ["call    hash_init", "movsxd  rdx, cs:optind@@GLIBC_2_2_5", "movzx   ecx, [rsp+148h+no_target_directory]; no_target_directory", "mov     edi, r12d", "mov     r8, r15; x", "sub     edi, edx; n_files", "lea     rsi, [argv+rdx*8+0]; file", "mov     rdx, [rsp+148h+target_directory]; target_directory", "call    do_copy", "mov     ebx, eax", "call    forget_all", "mov     eax, ebx", "xor     eax, 1", "movzx   edi, al; status", "call    _exit"], ["call~FOO", "movsxd~rdx,<TAG>", "movzx~ecx,[rsp+0]", "mov~edi,r12d", "mov~r8,r15", "sub~edi,edx", "lea~rsi,[argv+0]", "mov~rdx,<TAG>", "call~FOO", "mov~ebx,eax", "call~FOO", "mov~eax,ebx", "xor~eax,0", "movzx~edi,al", "call~FOO"]], [1, 0, 0, 0, 3, 16, 2, 3, 4, -1, 0.0, ["lea     rsi, name_utf8; jumptable 00000000000028E8 case 0", "lea     rdi, name_ascii; \"Torbjorn Granlund\"", "call    proper_name_utf8", "mov     r8, rax", "lea     rax, aJimMeyering; \"Jim Meyering\"", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     rcx, version; \"6.12\"", "push    rax", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cp\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~r8,rax", "lea~rax,<TAG>", "mov~rdi,<TAG>", "push~0", "lea~r9,<TAG>", "lea~rcx,<TAG>", "push~rax", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.recursive], r14b; jumptable 00000000000028E8 cases 213,245", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.update], r14b; jumptable 00000000000028E8 case 248", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     edi, 1; jumptable 00000000000028E8 default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [2, 0, 59, 1, 0, 3, 0, 1, 2, 12, 0.36323787258912915, ["add     eax, 83h", "cmp     eax, 10Ah; switch 267 cases", "ja      loc_2BA8; jumptable 00000000000028E8 default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.unlink_dest_before_opening], r14b; jumptable 00000000000028E8 case 266", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 59, 0, 0, 3, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.preserve_links], r14b; jumptable 00000000000028E8 case 231", "mov     [rsp+148h+x.dereference], 2", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.dereference], 2; jumptable 00000000000028E8 case 211", "jmp     loc_28B0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.symbolic_link], r14b; jumptable 00000000000028E8 case 246", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 6, 5, 0.025715955581531266, ["test    al, al", "jz      short loc_2D1E"], ["test~al,al", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.interactive], 3; jumptable 00000000000028E8 case 236", "jmp     short loc_28B0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     cs:remove_trailing_slashes, r14b; jumptable 00000000000028E8 case 265", "jmp     loc_28B0"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 12, 0.058153126826417295, ["cmp     [rsp+148h+target_directory], 0; jumptable 00000000000028E8 case 247", "jz      loc_2C76"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.dereference], 4; jumptable 00000000000028E8 case 207", "jmp     loc_28B0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 59, 0, 1, 5, 0, 2, 5, 10, 0.008182349503214495, ["mov     edx, 1; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "mov     [rsp+148h+x.require_preserve], r14b", "jmp     loc_28B0"], ["mov~edx,0", "mov~rsi,r15", "call~FOO", "mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 59, 0, 1, 8, 1, 2, 1, 9, 0.5730566919929865, ["lea     rdx, shortopts; \"abdfHilLprst:uvxPRS:T\"", "xor     r8d, r8d; longind", "mov     rcx, r13; longopts", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_2B79"], ["lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rcx,r13", "mov~rsi,argv", "mov~edi,r12d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 59, 0, 0, 6, 1, 1, 4, 10, 0.0005235729592830702, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 00000000000028E8 case 229", "mov     [rsp+148h+make_backups], 1", "test    rax, rax", "cmovz   rax, [rsp+148h+version_control_string]", "mov     [rsp+148h+version_control_string], rax", "jmp     loc_28B0"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "test~rax,rax", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.hard_link], r14b; jumptable 00000000000028E8 case 239", "jmp     loc_28B0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     [rsp+148h+x.dereference], 3; jumptable 00000000000028E8 case 203", "jmp     loc_28B0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 59, 0, 1, 11, 0, 2, 4, 10, 0.0005235729592830702, ["mov     r9, cs:argmatch_die; jumptable 00000000000028E8 case 264", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, sparse_type_string; arglist", "lea     rcx, sparse_type; vallist", "lea     rdi, context; \"--sparse\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, sparse_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+148h+x.sparse_mode], eax", "jmp     loc_28B0"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [2, 0, 59, 0, 3, 20, 4, 4, 4, 10, 0.0005235729592830702, ["mov     r9, cs:argmatch_die; jumptable 00000000000028E8 case 263", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rcx, reply_vals; vallist", "lea     rdx, reply_args; arglist", "lea     rdi, aReply; \"--reply\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, reply_vals", "lea     rsi, msgid; \"the --reply option is deprecated; use -\"...", "xor     edi, edi; domainname", "mov     eax, [rdx+rax*4]", "mov     edx, 5; category", "mov     [rsp+148h+x.interactive], eax", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_28B0"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~eax,<TAG>", "mov~edx,0", "mov~[rsp+0],eax", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 4, 10, 0.0005235729592830702, ["mov     cs:parents_option, r14b; jumptable 00000000000028E8 case 261", "jmp     loc_28B0"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 6, 10, 0.0967270601987142, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     [rsp+148h+target_directory], rax", "jmp     loc_28B0"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [34, 0, 59, 1, 7, 71, 2, 7, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r14d, 1", "push    r13", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "mov     rbp, argv", "mov     edi, 6; category", "lea     r13, long_opts", "lea     rbx, off_12638", "sub     rsp, 118h", "mov     rax, fs:28h", "mov     [rsp+148h+var_40], rax", "xor     eax, eax", "mov     rax, [argv]", "lea     argv, aSSUnbackup+14h; locale", "lea     r15, [rsp+148h+x]", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "mov     rdi, r15; x", "mov     cs:selinux_enabled, 0", "call    cp_options_default", "lea     rdi, name; \"POSIXLY_CORRECT\"", "mov     [rsp+148h+x.copy_as_regular], 1", "mov     [rsp+148h+x.dereference], 1", "mov     [rsp+148h+x.unlink_dest_before_opening], 0", "mov     [rsp+148h+x.unlink_dest_after_failed_open], 0", "mov     [rsp+148h+x.hard_link], 0", "mov     [rsp+148h+x.interactive], 4", "mov     [rsp+148h+x.move_mode], 0", "mov     [rsp+148h+x.one_file_system], 0", "mov     [rsp+148h+x.preserve_ownership], 0", "mov     [rsp+148h+x.preserve_links], 0", "mov     [rsp+148h+x.preserve_mode], 0", "mov     [rsp+148h+x.preserve_timestamps], 0", "mov     [rsp+148h+x.preserve_security_context], 0", "mov     [rsp+148h+x.require_preserve_context], 0", "mov     [rsp+148h+x.require_preserve], 0", "mov     [rsp+148h+x.recursive], 0", "mov     [rsp+148h+x.sparse_mode], 2", "mov     [rsp+148h+x.symbolic_link], 0", "mov     [rsp+148h+x.set_mode], 0", "mov     [rsp+148h+x.mode], 0", "mov     [rsp+148h+x.stdin_tty], 0", "mov     [rsp+148h+x.update], 0", "mov     [rsp+148h+x.verbose], 0", "call    _getenv", "lea     rdi, aSimpleBackupSu; \"SIMPLE_BACKUP_SUFFIX\"", "test    rax, rax", "mov     [rsp+148h+x.dest_info], 0", "setnz   [rsp+148h+x.open_dangling_dest_symlink]", "mov     [rsp+148h+x.src_info], 0", "call    _getenv", "mov     [rsp+148h+backup_suffix_string], rax", "lea     backup_suffix_string_0, [rsp+148h+st]", "mov     [rsp+148h+no_target_directory], 0", "mov     [rsp+148h+target_directory], 0", "mov     [rsp+148h+copy_contents], 0", "mov     [rsp+148h+version_control_string], 0", "mov     [rsp+148h+make_backups], 0", "mov     [rsp+148h+stat_buf], rax", "nop     dword ptr [rax+rax+00000000h]"], ["push~r15", "push~r14", "mov~r14d,0", "push~r13", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "mov~rbp,argv", "mov~edi,0", "lea~r13,<TAG>", "lea~rbx,<TAG>", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~argv,<TAG>", "lea~r15,[rsp+0]", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,r15", "mov~<TAG>,0", "call~FOO", "lea~rdi,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "lea~rdi,<TAG>", "test~rax,rax", "mov~[rsp+0],0", "setnz~[rsp+0]", "mov~[rsp+0],0", "call~FOO", "mov~[rsp+0],rax", "lea~backup_suffix_string_0,[rsp+0]", "mov~[rsp+0],0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 2, 1, 1, 4, -1, 0.0, ["xor     edi, edi; jumptable 00000000000028E8 case 1", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 12, 0, 0, 4, 0, 1, 5, 5, 0.15078901227352426, ["cmp     [rsp+148h+x.dereference], 1", "mov     [rsp+148h+x.backup_type], eax", "movzx   eax, [rsp+148h+x.recursive]", "jz      loc_2CE8"], ["cmp~[rsp+0],0", "mov~[rsp+0],eax", "movzx~eax,[rsp+0]", "jz~FOO"]], [2, 0, 59, 0, 2, 9, 3, 2, 5, 11, 0.024254821741671536, ["lea     rsi, aMultipleTarget; \"multiple target directories specified\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 13, 0, 2, 8, 1, 3, 5, 6, 0.0, ["lea     rsi, aBackupType; \"backup type\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, [rsp+148h+version_control_string]; version", "mov     rdi, rax; context", "call    xget_version", "jmp     loc_2BEF"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 4, 6, 0.16773816481589712, ["xor     eax, eax", "cmp     [rsp+148h+make_backups], 0", "jnz     loc_2CF9"], ["xor~eax,eax", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 59, 0, 3, 14, 3, 4, 7, 11, 0.0, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; name", "call    quote", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rsp+148h+target_directory], rax", "call    _dcgettext", "mov     rcx, [rsp+148h+target_directory]", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2B5F"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~<TAG>,rax", "call~FOO", "mov~rcx,<TAG>", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [40, 37, 90, 2, 60, 101, 0, 340, 0.04332, 39, 4], "succs": [[45], [0, 4, 8, 9, 10, 11, 14, 20, 22, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54], [24, 13], [2, 13], [45], [17], [5], [17, 5], [45], [45], [9, 44], [45], [58], [58, 12], [45], [29], [29, 15], [19, 21], [17], [16, 29], [45], [19, 23], [45], [19], [33], [59, 52], [25], [25, 26], [45], [], [], [45], [45], [], [33, 1], [45], [45], [45], [45], [18, 6], [45], [45], [56, 27], [45], [45], [34, 3], [45], [45], [45], [45], [45], [45], [45], [45], [], [7, 39], [52], [55], [57, 55], [52]], "fname": "main", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2E00"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2E00"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2E50"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2E50"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_2E83"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2E98"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 1, 1, 0, 9, 0, 1, 0, 0, 0.06190476190476191, ["mov     rdi, [rsp+48h+arg_writable]; ptr", "add     rsp, 18h", "pop     comma", "pop     rbp", "pop     r12", "pop     on_off", "pop     x", "pop     comma", "jmp     free"], ["mov~rdi,[rsp+0]", "add~rsp,0", "pop~comma", "pop~rbp", "pop~r12", "pop~on_off", "pop~x", "pop~comma", "jmp~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 5, 3, 0.5095238095238096, ["test    comma, comma", "mov     rbx, comma", "jnz     short loc_2EE0"], ["test~comma,comma", "mov~rbx,comma", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Ch], r13b; jumptable 0000000000002F3D case 2", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, 5, 0.43333333333333335, ["mov     eax, [r12+rax*4]", "movsxd  rax, dword ptr [rbp+rax*4+0]", "add     rax, rbp", "jmp     rax; switch jump"], ["mov~eax,<TAG>", "movsxd~rax,[word ptr [rbp+0]", "add~rax,rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [1, 0, 15, 0, 0, 6, 0, 1, 4, 4, 0.06984126984126984, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000002F3D case 5", "mov     [x+1Dh], r13b", "mov     [x+1Eh], r13b", "mov     [x+1Ch], r13b", "mov     [x+1Fh], r13b", "jz      short loc_2F50"], ["cmp~<TAG>,0", "mov~[x+0],r13b", "mov~[x+0],r13b", "mov~[x+0],r13b", "mov~[x+0],r13b", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 4, 4, 0.01746031746031746, ["mov     [x+21h], r13b; jumptable 0000000000002F3D case 4", "mov     [x+22h], r13b", "nop     dword ptr [rax+rax+00000000h]"], ["mov~[x+0],r13b", "mov~[x+0],r13b", "nop~[word ptr [rax+0]"]], [2, 0, 15, 0, 1, 9, 0, 2, 2, 1, 0.48571428571428577, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rcx, preserve_vals_6709; vallist", "lea     rdx, preserve_args_6710; arglist", "lea     rdi, aPreserve; \"--preserve\"", "mov     r8d, 4; valsize", "mov     rsi, s; arg", "call    __xargmatch_internal", "cmp     dword ptr [r12+rax*4], 5; switch 6 cases", "ja      loc_2FCF; jumptable 0000000000002F3D default case"], ["mov~r9,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "mov~rsi,s", "call~FOO", "cmp~<TAG>,0", "ja~FOO"]], [1, 0, 15, 0, 1, 6, 2, 2, 1, 2, 0.46666666666666673, ["mov     esi, 2Ch ; ','; c", "mov     rdi, s; s", "xor     r15d, r15d", "call    _strchr", "test    comma, comma", "jz      short loc_2EFC"], ["mov~esi,0", "mov~rdi,s", "xor~r15d,r15d", "call~FOO", "test~comma,comma", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 0, 2, 2, 0.0, ["lea     r15, [comma+1]", "mov     byte ptr [rax], 0"], ["lea~r15,[comma+0]", "mov~<TAG>,0"]], [0, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.0, ["mov     [x+21h], r13b", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    _abort; jumptable 0000000000002F3D default case"], ["call~FOO"]], [1, 0, 15, 1, 1, 15, 0, 1, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, x", "push    r13", "push    r12", "lea     r12, preserve_vals_6709", "push    rbp", "push    rbx", "lea     rbp, off_12620", "mov     r13d, edx", "sub     rsp, 18h", "call    xstrdup", "mov     [rsp+48h+arg_writable], rax", "mov     rbx, s", "nop"], ["push~r15", "push~r14", "mov~r14,x", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "push~rbx", "lea~rbp,<TAG>", "mov~r13d,edx", "sub~rsp,0", "call~FOO", "mov~[rsp+0],rax", "mov~rbx,s", "nop"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Fh], r13b; jumptable 0000000000002F3D case 3", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Eh], r13b; jumptable 0000000000002F3D case 1", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 4, 4, 0.01746031746031746, ["mov     [x+1Dh], r13b; jumptable 0000000000002F3D case 0", "jmp     short loc_2F50"], ["mov~[x+0],r13b", "jmp~FOO"]]], "func_feature": [4, 3, 15, 0, 16, 23, 2, 68, 0.13214, 6, 3], "succs": [[4], [0, 8], [1], [2, 5, 6, 13, 14, 15], [], [1, 10], [1], [3, 11], [9, 7], [7], [1], [], [8], [1], [1], [1]], "fname": "decode_preserve_arg", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 41, 0, 0, 4, 1, 1, 0, 0, 0.12181122448979591, ["mov     eax, [rbp+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_31A1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 6, 4, 0.2582908163265306, ["mov     rdx, [rbp+var_190]; stat_buf", "mov     rsi, [rbp+slash]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_3370"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 10, 5, 0.10459183673469387, ["xor     r15d, r15d", "cmp     byte ptr [x+1Dh], 0", "mov     esi, 0FFFFFFFFh", "jz      loc_3268"], ["xor~r15d,r15d", "cmp~[yte ptr [x+0],0", "mov~esi,0", "jz~FOO"]], [2, 0, 41, 0, 0, 5, 0, 1, 9, 6, 0.2070578231292517, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 1", "cmp     byte ptr [x+1Ch], 0", "mov     eax, [new+18h]", "jz      loc_3348"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[yte ptr [x+0],0", "mov~eax,[new+0]", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.0017006802721088435, ["mov     r8d, 14h"], ["mov~r8d,0"]], [0, 0, 41, 0, 0, 3, 1, 1, 12, 5, 0.18835034013605442, ["mov     rax, [rbp+verbose_fmt_string]", "test    rax, rax", "jz      short loc_32A4"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 1, 41, 0, 1, 6, 3, 2, 11, 4, 0.21726190476190477, ["and     eax, 0FFFh", "mov     rdi, dir; path", "and     esi, eax; mode", "call    _mkdir", "test    eax, eax", "jnz     loc_3482"], ["and~eax,<STR>", "mov~rdi,dir", "and~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 41, 0, 1, 10, 2, 2, 5, 5, 0.3239795918367347, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     byte ptr [rbx], 0", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     r15d, eax", "movzx   eax, byte ptr [x+1Ch]", "or      al, [x+1Dh]", "or      al, [x+1Eh]", "jnz     short loc_3170"], ["mov~rdx,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~r15d,eax", "movzx~eax,[yte ptr [x+0]", "or~al,[x+0]", "or~al,[x+0]", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 6, 5, 0.06547619047619048, ["test    r15d, r15d", "jnz     short loc_3170"], ["test~r15d,r15d", "jnz~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 15, 5, 0.14158163265306123, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      loc_3147"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 14, 6, 0.1760204081632653, ["cmp     byte ptr [x+1Dh], 0", "mov     esi, [rbp+stats.st_mode]", "jnz     short loc_3300"], ["cmp~[yte ptr [x+0],0", "mov~esi,[rbp+0]", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 1, 0, 17, 6, 0.01403061224489796, ["or      r15d, eax", "mov     byte ptr [new+90h], 1", "mov     [new+18h], r15d"], ["or~r15d,eax", "mov~[yte ptr [new+0],0", "mov~[new+0],r15d"]], [2, 0, 7, 0, 0, 4, 1, 1, 1, 4, 0.002976190476190476, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_3443"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [9, 1, 49, 5, 5, 50, 6, 6, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, x", "mov     rbx, const_dir", "sub     rsp, 168h", "mov     [rbp+attr_list], attr_list_0", "mov     [rbp+new_dst], new_dst_0", "mov     [rbp+verbose_fmt_string], verbose_fmt_string_0", "mov     verbose_fmt_string_0, fs:28h", "mov     [rbp+var_38], verbose_fmt_string_0", "xor     edx, edx", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+190h+attr_list+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r13, rax", "call    dir_len", "mov     r15, rax", "add     dirlen, 1Fh", "mov     rsi, dir; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdx, dirlen; n", "sub     rsp, rax", "lea     __old, [rsp+190h+attr_list+7]", "and     rbx, 0FFFFFFFFFFFFFFF0h", "mov     rdi, dst_dir; dest", "call    _memcpy", "mov     rax, [rbp+attr_list]", "mov     byte ptr [dst_dir+dirlen], 0", "mov     rsi, dst_dir; filename", "mov     edi, 1; ver", "mov     qword ptr [rax], 0", "lea     rax, [rbp+stats]", "mov     rdx, rax; stat_buf", "mov     [rbp+stat_buf], rax", "call    ___xstat", "test    eax, eax", "jz      loc_3400"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,x", "mov~rbx,const_dir", "sub~rsp,<STR>", "mov~[rbp+0],attr_list_0", "mov~[rbp+0],new_dst_0", "mov~[rbp+0],verbose_fmt_string_0", "mov~verbose_fmt_string_0,<TAG>", "mov~[rbp+0],verbose_fmt_string_0", "xor~edx,edx", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~r15,rax", "add~dirlen,0", "mov~rsi,dir", "and~rax,0", "mov~rdx,dirlen", "sub~rsp,rax", "lea~__old,[rsp+0]", "and~rbx,0", "mov~rdi,dst_dir", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dst_dir", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 8, 3, 0.01764455782312925, ["mov     rdi, dir", "jmp     short loc_3446"], ["mov~rdi,dir", "jmp~FOO"]], [2, 0, 41, 0, 0, 4, 1, 1, 7, 4, 0.08227040816326531, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_34C0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 12, 3, 0.016581632653061226, ["mov     rdi, dir; name", "call    quote", "lea     rsi, aCannotMakeDire; \"cannot make directory %s\"", "mov     x, rax", "mov     edx, 5; category"], ["mov~rdi,dir", "call~FOO", "lea~rsi,<TAG>", "mov~x,rax", "mov~edx,0"]], [1, 0, 4, 0, 0, 2, 0, 0, 2, 3, 0.002125850340136054, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 41, 0, 0, 2, 0, 0, 8, 5, 0.052295918367346934, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 41, 0, 1, 4, 1, 2, 7, 3, 0.12457482993197279, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jnz     loc_338C"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.02317176870748299, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 41, 0, 1, 5, 1, 2, 4, 3, 0.3565051020408163, ["mov     esi, 2Fh ; '/'; c", "call    _strchr", "test    rax, rax", "mov     rbx, rax", "jz      loc_341C"], ["mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 1, 13, 5, 0.0, ["mov     rdx, [rbp+slash]", "mov     rsi, rax", "mov     rcx, dir", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rcx,dir", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 41, 0, 1, 5, 2, 2, 16, 4, 0.019770408163265304, ["or      esi, 1C0h; mode", "mov     rdi, dir; file", "call    _chmod", "test    eax, eax", "jz      loc_3147"], ["or~esi,0", "mov~rdi,dir", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.03996598639455782, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_34DE"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 3, 17, 4, 4, 8, 2, 0.00701530612244898, ["mov     rdi, [rbp+slash]; name", "mov     dword ptr [rbp+stat_buf], r8d", "call    quote", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     slash_0, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+stat_buf]", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     edi, edi; status", "mov     esi, r8d; errnum", "call    _error", "xor     eax, eax", "jmp     short loc_3421"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~slash_0,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~edi,edi", "mov~esi,r8d", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 3, 14, 5, 4, 3, 2, 0.00701530612244898, ["call    quote", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_3421"], ["call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 3, 12, 4, 4, 13, 2, 0.01764455782312925, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     slash_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     loc_3421"], ["xor~edi,edi", "call~FOO", "mov~slash_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [2, 0, 41, 1, 1, 31, 1, 2, 8, 5, 0.23044217687074828, ["mov     edi, 0A8h; n", "call    xmalloc", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_dev]", "mov     r14, rax", "mov     rcx, [rbp+attr_list]", "movups  xmmword ptr [new], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_nlink]", "movups  xmmword ptr [new+10h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_gid]", "movups  xmmword ptr [new+20h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_size]", "movups  xmmword ptr [new+30h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_blocks]", "movups  xmmword ptr [new+40h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_atim.tv_nsec]", "movups  xmmword ptr [new+50h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_mtim.tv_nsec]", "movups  xmmword ptr [new+60h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_ctim.tv_nsec]", "movups  xmmword ptr [new+70h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.__glibc_reserved+8]", "movups  xmmword ptr [new+80h], xmm0", "mov     new, slash_0", "mov     byte ptr [new+90h], 0", "sub     rax, dir", "test    r15d, r15d", "mov     [new+98h], rax", "mov     rax, [rcx]", "mov     [rcx], new", "mov     [new+0A0h], rax", "jz      loc_3127"], ["mov~edi,0", "call~FOO", "movdqa~xmm0,[mmword ptr [rbp+0]", "mov~r14,rax", "mov~rcx,[rbp+0]", "movups~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "mov~new,slash_0", "mov~[yte ptr [new+0],0", "sub~rax,dir", "test~r15d,r15d", "mov~[new+0],rax", "mov~rax,<TAG>", "mov~<TAG>,new", "mov~[new+0],rax", "jz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 13, 4, 0.19345238095238096, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_34C5"], ["mov~rdx,[rbp+0]", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 41, 0, 0, 3, 0, 0, 3, 4, 0.08503401360544217, ["lea     rax, [rbp+src_st]", "mov     [rbp+var_190], rax", "nop"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "nop"]], [0, 0, 42, 0, 0, 2, 0, 1, 2, 5, 0.033588435374149656, ["mov     slash_0, [rbp+slash]", "jmp     loc_30D1"], ["mov~slash_0,[rbp+0]", "jmp~FOO"]], [2, 0, 43, 1, 0, 3, 0, 1, 3, 5, 0.017857142857142856, ["add     slash_0, 1; s", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_30C8"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 45, 0, 0, 4, 0, 1, 1, 6, 0.017006802721088433, ["lea     rdi, [dir+src_offset+0]", "cmp     byte ptr [src_0], 2Fh ; '/'", "mov     [rbp+slash], src_0", "jnz     loc_3476"], ["lea~rdi,[dir+0]", "cmp~<TAG>,0", "mov~[rbp+0],src_0", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 17, 3, 0.00701530612244898, ["mov     rdi, dir; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_3499"], ["mov~rdi,dir", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     dir", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~dir", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.002125850340136054, ["mov     rdi, dst_dir; name"], ["mov~rdi,dst_dir"]], [0, 0, 43, 0, 0, 1, 0, 0, 2, 6, 0.0008503401360544217, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 41, 0, 0, 4, 0, 1, 9, 4, 0.24383503401360543, ["cmp     byte ptr [slash_0+1], 2Fh ; '/'", "lea     rdi, [slash_0+1]", "mov     byte ptr [rbx], 2Fh ; '/'", "jnz     short loc_30E0"], ["cmp~[yte ptr [slash_0+0],0", "lea~rdi,[slash_0+0]", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 41, 0, 0, 5, 1, 1, 16, 5, 0.04443027210884354, ["mov     edx, esi", "mov     eax, esi", "and     edx, 1C0h", "cmp     edx, 1C0h", "jz      loc_3147"], ["mov~edx,esi", "mov~eax,esi", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 41, 0, 0, 1, 0, 0, 10, 6, 0.027636054421768707, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 41, 0, 0, 4, 1, 1, 15, 6, 0.05357142857142857, ["mov     eax, esi", "not     eax", "test    eax, r15d", "jnz     loc_33D8"], ["mov~eax,esi", "not~eax", "test~eax,r15d", "jnz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 14, 3, 0.00510204081632653, ["mov     rdi, dir; name", "call    quote", "mov     edx, 5", "mov     x, rax", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "jmp     short loc_3499"], ["mov~rdi,dir", "call~FOO", "mov~edx,0", "mov~x,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 41, 1, 0, 3, 0, 1, 11, 5, 0.03018707482993197, ["add     slash_0, 1", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_3158"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 41, 0, 0, 1, 0, 1, 12, 4, 0.03273809523809524, ["jmp     loc_30E0"], ["jmp~FOO"]], [1, 0, 41, 0, 0, 4, 1, 0, 10, 5, 0.09056122448979592, ["mov     r15d, eax", "and     r15d, 3Fh", "mov     esi, r15d", "not     esi"], ["mov~r15d,eax", "and~r15d,0", "mov~esi,r15d", "not~esi"]], [0, 1, 41, 0, 0, 5, 1, 1, 11, 5, 0.0, ["mov     r15d, eax", "and     r15d, 12h", "mov     esi, r15d", "not     esi", "jmp     loc_3268"], ["mov~r15d,eax", "and~r15d,<STR>", "mov~esi,r15d", "not~esi", "jmp~FOO"]], [0, 0, 41, 0, 0, 1, 0, 1, 17, 6, 0.007227891156462584, ["jmp     loc_32DB"], ["jmp~FOO"]], [0, 0, 41, 0, 1, 9, 2, 2, 16, 7, 0.02147108843537415, ["call    cached_umask", "mov     esi, [rbp+stats.st_mode]", "not     eax", "and     r15d, eax", "mov     edx, esi", "mov     eax, esi", "not     edx", "test    edx, r15d", "jnz     loc_32F1"], ["call~FOO", "mov~esi,[rbp+0]", "not~eax", "and~r15d,eax", "mov~edx,esi", "mov~eax,esi", "not~edx", "test~edx,r15d", "jnz~FOO"]]], "func_feature": [28, 47, 64, 2, 50, 74, 1, 296, 0.07468, 5, 8], "succs": [[28, 4], [0, 19], [6, 47], [2, 46], [25], [29, 22], [16, 5], [8, 1], [1, 15], [38, 23], [9, 41], [9], [17, 36], [33, 12], [26], [18, 14], [27], [20], [38], [25, 28], [24], [20, 7], [29], [34, 38], [43, 35], [24], [24], [24], [3, 15], [10, 42], [21], [30], [32, 30], [37, 31], [27], [], [26], [32], [40, 21], [11, 38], [44], [49, 39], [27], [], [44, 45], [21], [6], [6], [39], [48, 11]], "fname": "make_dir_parents_private", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 21, 0, 0, 2, 0, 1, 0, 0, 0.13095238095238096, ["cmp     byte ptr [p+90h], 0", "jnz     loc_36A8"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [1, 0, 21, 0, 1, 7, 1, 2, 6, 5, 0.05411255411255411, ["mov     edx, [p+20h]; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "movzx   r14d, byte ptr [x+1Dh]", "test    r14b, r14b", "jz      loc_3579"], ["mov~edx,[p+0]", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 4, 4, 0.15043290043290045, ["movzx   r14d, byte ptr [x+1Dh]", "test    r14b, r14b", "jnz     loc_3680"], ["movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r14d", "jnz     short loc_3738"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r14d", "jnz~FOO"]], [1, 0, 3, 0, 4, 17, 4, 5, 4, 2, 0.01948051948051948, ["mov     rdi, dst_name; name", "xor     r14d, r14d", "call    quote", "lea     rsi, aFailedToPreser; \"failed to preserve times for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_36FE"], ["mov~rdi,dst_name", "xor~r14d,r14d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 2, 0.032467532467532464, ["xor     r14d, r14d", "jmp     short loc_36FE"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 3, 0, 3, 11, 3, 4, 7, 2, 0.025974025974025976, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_36FE"], ["xor~edi,edi", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.025974025974025976, ["mov     r14d, 1"], ["mov~r14d,0"]], [1, 0, 21, 0, 1, 8, 1, 2, 5, 3, 0.11904761904761904, ["mov     r8d, [p+18h]; mode", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, dst_name; dst_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jz      loc_3586"], ["mov~r8d,[p+0]", "mov~rdi,[rbp+0]", "mov~ecx,0", "mov~rdx,dst_name", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 7, 4, 0.011904761904761904, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 21, 0, 0, 5, 1, 1, 6, 3, 0.21861471861471862, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 2Fh ; '/'", "mov     p, [p+0A0h]", "test    p, p", "jz      loc_36F8"], ["mov~rax,[p+0]", "mov~<TAG>,0", "mov~p,[p+0]", "test~p,p", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 6, 4, 0.03463203463203463, ["mov     esi, [p+18h]; mode", "mov     rdi, dst_name; file", "call    _chmod", "test    eax, eax", "jz      loc_3586"], ["mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 21, 0, 0, 4, 0, 1, 2, 4, 0.2683982683982684, ["cmp     byte ptr [x+1Eh], 0", "mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 0", "jz      short loc_3560"], ["cmp~[yte ptr [x+0],0", "mov~rax,[p+0]", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.0367965367965368, ["lea     r15, [rbp+timespec]", "jmp     short loc_35A2"], ["lea~r15,[rbp+0]", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 6, 3, 0.031385281385281384, ["mov     rdi, dst_name; name", "call    quote", "mov     edx, 5", "mov     dst_name, rax", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "jmp     short loc_36D2"], ["mov~rdi,dst_name", "call~FOO", "mov~edx,0", "mov~dst_name,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 5, 4, 0.10064935064935066, ["mov     rdi, x; x", "call    chown_failure_ok", "test    al, al", "mov     r14d, eax", "jz      loc_371F"], ["mov~rdi,x", "call~FOO", "test~al,al", "mov~r14d,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 21, 0, 1, 6, 1, 2, 4, 5, 0.11471861471861472, ["mov     edx, [p+20h]; group", "mov     esi, [p+1Ch]; owner", "mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jz      loc_356B"], ["mov~edx,[p+0]", "mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.24891774891774893, ["cmp     byte ptr [x+1Ch], 0", "jnz     loc_3630"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 21, 0, 1, 13, 1, 2, 3, 3, 0.04112554112554113, ["mov     rax, [p+50h]", "mov     rdx, [p+48h]", "mov     rsi, r15; timespec", "mov     rdi, dst_name; file", "mov     [rbp+timespec.tv_sec], rdx", "mov     [rbp+timespec.tv_nsec], rax", "mov     rdx, [p+58h]", "mov     rax, [p+60h]", "mov     [rbp+timespec.tv_sec+10h], rdx", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_3560"], ["mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~rsi,r15", "mov~rdi,dst_name", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rdx,[p+0]", "mov~rax,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 22, 4, 2, 29, 4, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, const_dst_name", "mov     rbx, attr_list", "mov     r13, x", "sub     rsp, 48h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+70h+src_name+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     __old, rax", "add     dst_name, src_offset", "test    attr_list, attr_list", "mov     [rbp+src_name], rax", "jz      loc_36F8"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,const_dst_name", "mov~rbx,attr_list", "mov~r13,x", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~__old,rax", "add~dst_name,src_offset", "test~attr_list,attr_list", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 7, 3, 0.011904761904761904, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aFailedToPreser_0; \"failed to preserve permissions for %s\"", "mov     dst_name, rax", "mov     edx, 5; category"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,rax", "mov~edx,0"]]], "func_feature": [18, 21, 36, 1, 23, 34, 1, 147, 0.0767, 4, 4], "succs": [[10, 11], [0, 9], [0, 8], [17, 12], [3], [3], [3], [3], [10, 5], [8], [13, 7], [10, 22], [], [19, 20], [13], [6], [1, 15], [], [16, 2], [18, 2], [19, 4], [14, 7], [6]], "fname": "re_protect", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [21, 0, 1, 0, 40, 164, 22, 41, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOptionTS; \"Usage: %s [OPTION]... [-T] SOURCE DEST\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopySourceToDe; \"Copy SOURCE to DEST, or multiple SOURCE\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aMandatoryArgum; \"Mandatory arguments to long options are\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAArchiveSameAs; \"  -a, --archive                same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFForceIfAnExis; \"  -f, --force                  if an ex\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aLLinkLinkFiles; \"  -l, --link                   link fil\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aPNoDereference; \"  -P, --no-dereference         never fo\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aPSameAsPreserv; \"  -p                           same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoPreserveAttr; \"      --no-preserve=ATTR_LIST  don't pr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRRRecursiveCop; \"  -R, -r, --recursive          copy dir\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSparseWhenCont; \"      --sparse=WHEN            control \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSSymbolicLinkM; \"  -s, --symbolic-link          make sym\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUUpdateCopyOnl; \"  -u, --update                 copy onl\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aByDefaultSpars; \"\\nBy default, sparse SOURCE files are d\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheBackupSuffi; \"The backup suffix is `~', unless set wi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoneOffNeverMa; \"  none, off       never make backups (e\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsASpecialCase; \"\\nAs a special case, cp makes a backup \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_377F"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_3786"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [43, 25, 45, 0, 4, 4, 4, 183, 0.04167, 25, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 18, 0, 1, 3, 0, 1, 0, 0, 0.00272133526850508, ["mov     rdi, [rbp+target_directory]; string", "call    xstrdup", "mov     r13, rax"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~r13,rax"]], [3, 0, 18, 1, 3, 18, 2, 4, 7, -1, 0.018867924528301886, ["sub     rsp, rax", "mov     rsi, __old; src", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, tmp_abns_; name", "call    last_component", "mov     rdi, rax; file", "mov     r13, rax", "call    strip_trailing_slashes", "lea     rdi, asc_1242A; \"..\"", "mov     ecx, 3", "mov     rsi, arg_base", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_3EB0"], ["sub~rsp,rax", "mov~rsi,__old", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,tmp_abns_", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,arg_base", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 11, -1, 0.0, ["mov     rax, [p+0A0h]", "mov     [rbp+attr_list], rax", "call    free"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "call~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 10, -1, 0.024310595065312045, ["mov     rdi, [rbp+attr_list]; ptr", "test    rdi, rdi", "jnz     short loc_3E78"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jnz~FOO"]], [3, 0, 24, 0, 2, 11, 3, 3, 3, -1, 0.007801161103047896, ["lea     rsi, aCannotCombineT; \"Cannot combine --target-directory (-t) \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "cmp     r12d, 2", "jg      loc_3EE7"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12d,0", "jg~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 2, -1, 0.007438316400580552, ["cmp     [rbp+target_directory], 0", "jz      loc_3EDE"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 4, 3, 3, -1, 0.005805515239477504, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3F17"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.0010885341074020319, ["mov     edx, 5", "lea     rsi, aMissingFileOpe; \"missing file operand\"", "jmp     short loc_3F82"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.010522496371552975, ["lea     rsi, aWithParentsThe; \"with --parents, the destination must be\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [1, 0, 13, 0, 0, 4, 0, 1, 4, -1, 0.07365747460087083, ["cmp     cs:parents_option, 0", "mov     r12, [file]", "mov     file, [file+8]", "jnz     loc_3F76"], ["cmp~<TAG>,0", "mov~r12,<TAG>", "mov~file,[file+0]", "jnz~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 3, -1, 0.020500725689404933, ["cmp     edi, 1", "jz      loc_3DB4"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.034107402031930335, ["cmp     r12d, 2", "jz      short loc_3DB4"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 3, -1, 0.010522496371552975, ["cmp     edi, 2", "jle     loc_3DB4"], ["cmp~edi,0", "jle~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 7, -1, 0.0050798258345428155, ["jmp     loc_3DB4"], ["jmp~FOO"]], [2, 0, 14, 0, 3, 13, 3, 3, 7, -1, 0.0, ["mov     rdi, [r13+0]; name", "call    quote", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     n_files, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rdi,[r13+0]", "call~FOO", "lea~rsi,<TAG>", "mov~n_files,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, -1, 0.01451378809869376, ["cmp     [rbp+new_dst], 0", "jnz     short loc_3E31"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 7, -1, 0.020682148040638608, ["mov     rsi, dest; s2", "mov     rdi, source; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_3E31"], ["mov~rsi,dest", "mov~rdi,source", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 3, -1, 0.0627721335268505, ["cmp     r12d, 1", "jnz     loc_3EC9"], ["cmp~r12d,0", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.02558055152394775, ["cmp     [rbp+target_directory], 0", "jnz     loc_3B0E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 33, 1, 0, 6, 1, 1, 6, -1, 0.028664731494920173, ["sub     r12d, 1", "movsxd  rax, r12d", "mov     rax, [file+rax*8]", "test    rax, rax", "mov     [rbp+target_directory], rax", "jnz     loc_3B0E"], ["sub~r12d,0", "movsxd~rax,r12d", "mov~rax,<TAG>", "test~rax,rax", "mov~[rbp+0],rax", "jnz~FOO"]], [1, 0, 41, 0, 1, 9, 1, 2, 4, -1, 0.019593613933236574, ["movsxd  rax, edi", "lea     target_directory_0, [rbp+sb]; stat_buf", "mov     edi, 1; ver", "lea     r13, [file+rax*8-8]", "mov     r15, [r13+0]", "mov     rsi, r15; filename", "call    ___xstat", "test    eax, eax", "jz      loc_3F21"], ["movsxd~rax,edi", "lea~target_directory_0,[rbp+0]", "mov~edi,0", "lea~r13,[file+0]", "mov~r15,[r13+0]", "mov~rsi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.01088534107402032, ["jmp     loc_3BDA"], ["jmp~FOO"]], [0, 0, 1, 0, 2, 8, 4, 2, 3, -1, 0.0025399129172714078, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 1, 6, 0, 2, 2, -1, 0.0010885341074020319, ["mov     rdi, [file]; name", "call    quote", "mov     edx, 5", "mov     file, rax", "lea     rsi, aMissingDestina; \"missing destination file operand after \"...", "jmp     short loc_3EFF"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~file,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, -1, 0.002902757619738752, ["mov     rdi, [file+10h]; name", "call    quote", "lea     rsi, aExtraOperandS; \"extra operand %s\"", "mov     file, rax", "mov     edx, 5; category"], ["mov~rdi,[file+0]", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 40, 0, 1, 4, 1, 2, 5, -1, 0.00544267053701016, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jz      loc_3F21"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 2, 6, -1, 0.0, ["mov     rdi, arg; file", "call    strip_trailing_slashes", "jmp     loc_3C0E"], ["mov~rdi,arg", "call~FOO", "jmp~FOO"]], [2, 0, 18, 0, 0, 4, 0, 1, 5, -1, 0.10631349782293179, ["cmp     cs:remove_trailing_slashes, 0", "mov     [rbp+unused], 0", "mov     r12, [rbx]", "jnz     loc_3EA0"], ["cmp~<TAG>,0", "mov~[rbp+0],0", "mov~r12,<TAG>", "jnz~FOO"]], [3, 0, 18, 1, 1, 7, 1, 2, 6, -1, 0.09905660377358491, ["mov     rdi, arg; s", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "and     rax, 0FFFFFFFFFFFFFFF0h", "cmp     cs:parents_option, 0", "jnz     loc_3B50"], ["mov~rdi,arg", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "and~rax,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 18, 0, 1, 10, 2, 2, 8, -1, 0.043178519593613934, ["movzx   edx, [rbp+new_dst]; nonexistent_dst", "mov     r8, [rbp+var_110]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "mov     rsi, dst_name; dst_name", "mov     rdi, arg; src_name", "call    copy", "and     r15d, eax", "cmp     cs:parents_option, 0", "jz      loc_3BDA"], ["movzx~edx,[rbp+0]", "mov~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "mov~rsi,dst_name", "mov~rdi,arg", "call~FOO", "and~r15d,eax", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 18, 2, 4, 26, 2, 5, 7, -1, 0.06676342525399129, ["sub     rsp, rax", "mov     rsi, __old; src", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r13, rax", "call    strip_trailing_slashes", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_no_trailing_slash; abase", "call    file_name_concat", "cmp     byte ptr [x+27h], 0", "mov     rsi, [rbp+unused]", "mov     arg_no_trailing_slash, rax", "lea     dst_name, verbose_fmt_string; \"%s -> %s\\n\"", "mov     edx, 0", "lea     rcx, [rbp+attr_list]; attr_list", "lea     r8, [rbp+new_dst]; new_dst", "mov     r9, x; x", "mov     rdi, dst_name; const_dir", "cmovnz  rdx, rax; verbose_fmt_string", "sub     rsi, dst_name; src_offset", "call    make_dir_parents_private", "test    al, al", "jnz     loc_3C83"], ["sub~rsp,rax", "mov~rsi,__old", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r13,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,arg_no_trailing_slash", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rsi,[rbp+0]", "mov~arg_no_trailing_slash,rax", "lea~dst_name,<TAG>", "mov~edx,0", "lea~rcx,[rbp+0]", "lea~r8,[rbp+0]", "mov~r9,x", "mov~rdi,dst_name", "cmovnz~rdx,rax", "sub~rsi,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 8, -1, 0.00272133526850508, ["mov     rdi, [rbp+target_directory]; dir", "mov     rsi, r13; abase", "xor     edx, edx; base_in_result", "call    file_name_concat", "mov     r13, rax", "jmp     loc_3C83"], ["mov~rdi,[rbp+0]", "mov~rsi,r13", "xor~edx,edx", "call~FOO", "mov~r13,rax", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, -1, 0.0043541364296081275, ["cmp     r8d, 2", "jz      short loc_3D74"], ["cmp~r8d,0", "jz~FOO"]], [1, 0, 18, 0, 0, 9, 0, 1, 4, -1, 0.068577648766328, ["lea     eax, [n_files-1]", "mov     r15d, 1", "lea     rax, [file+rax*8+8]", "mov     [rbp+var_100], rax", "lea     rax, [rbp+copy_into_self]", "mov     [rbp+var_110], rax", "lea     rax, [rbp+unused]", "mov     [rbp+base_in_result], rax", "jmp     loc_3BF3"], ["lea~eax,[n_files-1]+0]", "mov~r15d,0", "lea~rax,[file+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 18, 1, 1, 5, 0, 2, 9, -1, 0.05551523947750363, ["mov     rdi, dst_name; ptr", "add     rbx, 8", "call    free", "cmp     [rbp+var_100], rbx", "jz      loc_3E4E"], ["mov~rdi,dst_name", "add~rbx,0", "call~FOO", "cmp~[rbp+0],rbx", "jz~FOO"]], [1, 0, 5, 1, 0, 2, 0, 1, 1, 1, 0.00181422351233672, ["sub     r12d, 1", "jnz     short loc_3FA1"], ["sub~r12d,0", "jnz~FOO"]], [2, 0, 36, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3D7B"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 53, 1, 0, 20, 3, 1, 0, 2, 0.0, ["push    rbp", "xor     eax, eax", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, edi", "push    rbx", "mov     rbx, file", "sub     rsp, 0E8h", "mov     [rbp+target_directory], target_directory_0", "mov     [rbp+new_dst], 0", "mov     file, fs:28h", "mov     [rbp+var_38], file", "xor     esi, esi", "test    target_directory_0, target_directory_0", "setz    al", "cmp     eax, edi", "jge     loc_3F57"], ["push~rbp", "xor~eax,eax", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,edi", "push~rbx", "mov~rbx,file", "sub~rsp,0", "mov~[rbp+0],target_directory_0", "mov~[rbp+0],0", "mov~file,<TAG>", "mov~[rbp+0],file", "xor~esi,esi", "test~target_directory_0,target_directory_0", "setz~al", "cmp~eax,edi", "jge~FOO"]], [0, 0, 3, 0, 1, 8, 2, 1, 6, -1, 0.025036284470246733, ["lea     r8, [rbp+unused]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "xor     edx, edx; nonexistent_dst", "mov     rsi, new_dest; dst_name", "mov     rdi, source; src_name", "call    copy", "mov     r15d, eax"], ["lea~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "xor~edx,edx", "mov~rsi,new_dest", "mov~rdi,source", "call~FOO", "mov~r15d,eax"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.05551523947750363, ["cmp     byte ptr [x+16h], 0", "jz      short loc_3E31"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 6, -1, 0.026124818577648767, ["mov     r13d, [x]", "test    r13d, r13d", "jz      short loc_3E31"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 9, -1, 0.007619738751814224, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_3E31"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 4, 0, 1, 10, 0, 1, 10, -1, 0.0, ["mov     rdi, dest; file", "mov     esi, r13d; backup_type", "call    find_backup_file_name", "mov     rsi, x", "lea     x, x_tmp_6693", "lea     rdi, x_tmp_6693", "mov     ecx, 10h", "mov     dest, rax", "rep movsd", "mov     cs:x_tmp_6693.backup_type, 0"], ["mov~rdi,dest", "mov~esi,r13d", "call~FOO", "mov~rsi,x", "lea~x,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "mov~dest,rax", "movsd~<TAG>,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, -1, 0.031204644412191583, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_3F9C"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [0, 0, 19, 0, 2, 5, 0, 3, 4, -1, 0.0, ["mov     rdi, x; x", "call    dest_info_init", "mov     rdi, x; x", "call    src_info_init", "jmp     loc_3B18"], ["mov~rdi,x", "call~FOO", "mov~rdi,x", "call~FOO", "jmp~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 1, -1, 0.016690856313497822, ["test    cl, cl", "mov     r14, x", "jz      loc_3CDD"], ["test~cl,cl", "mov~r14,x", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 0, 8, -1, 0.027939042089985485, ["movzx   eax, cs:parents_option", "xor     r15d, r15d"], ["movzx~eax,<TAG>", "xor~r15d,r15d"]], [0, 0, 18, 0, 0, 2, 1, 1, 9, -1, 0.036284470246734396, ["test    al, al", "jnz     loc_3E8B"], ["test~al,al", "jnz~FOO"]], [0, 0, 18, 1, 1, 9, 1, 2, 9, -1, 0.005805515239477504, ["mov     rsi, [rbp+unused]", "mov     rdx, [rbp+attr_list]; attr_list", "mov     rcx, x; x", "mov     rdi, dst_name; const_dst_name", "sub     rsi, dst_name; src_offset", "call    re_protect", "and     r15d, eax", "movzx   eax, cs:parents_option", "jmp     loc_3BD2"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,x", "mov~rdi,dst_name", "sub~rsi,dst_name", "call~FOO", "and~r15d,eax", "movzx~eax,<TAG>", "jmp~FOO"]], [2, 0, 17, 0, 3, 15, 2, 3, 7, -1, 0.0, ["mov     rdi, r15; name", "mov     dword ptr [rbp+target_directory], r8d", "call    quote", "lea     rsi, aAccessingS; \"accessing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r15, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+target_directory]", "mov     rdx, rax; format", "mov     rcx, r15", "mov     edi, 1; status", "xor     eax, eax", "mov     esi, r8d; errnum", "call    _error"], ["mov~rdi,r15", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r15,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r15", "mov~edi,0", "xor~eax,eax", "mov~esi,r8d", "call~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     x", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~x", "pop~r15", "pop~rbp", "retn"]], [1, 0, 16, 0, 0, 1, 0, 0, 7, -1, 0.011611030478955007, ["mov     [rbp+new_dst], 1"], ["mov~[rbp+0],0"]]], "func_feature": [38, 42, 78, 3, 54, 81, 1, 304, 0.02125, 13, 9], "succs": [[30], [0, 32], [3], [2, 21], [24, 17], [12, 4], [25], [6], [6], [40, 8], [9, 20], [9, 14], [24, 9], [9], [9], [42, 39], [39, 15], [34, 46], [17, 10], [17, 13], [26, 37], [35], [25], [22], [22], [], [33, 37], [29], [27, 29], [1, 31], [50, 35], [48, 30], [30], [51, 53], [28], [28, 45], [7, 23], [11, 19], [36, 47], [45], [41, 39], [16, 39], [43, 39], [39], [], [52, 44], [34], [18, 5], [49], [3, 35], [49], [53], [], [11]], "fname": "do_copy", "n_num": 54}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [3, 0, 1, 0, 2, 14, 2, 3, 0, 0, 0.0, ["push    rbx", "call    ___errno_location", "lea     rsi, aFailedToRestor; \"failed to restore the default file crea\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dword ptr [rax], 5Fh ; '_'", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "pop     rbx", "xor     eax, eax", "jmp     _error"], ["push~rbx", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~edi,0", "pop~rbx", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [2, 2, 3, 0, 2, 1, 2, 14, 0.0, 1, 0], "succs": [[], [0]], "fname": "restore_default_fscreatecon_or_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 5, 1, 2, 0, 0, 0.16666666666666666, ["push    rbx", "mov     rbx, file", "call    can_write_any_file", "test    al, al", "jz      short loc_4020"], ["push~rbx", "mov~rbx,file", "call~FOO", "test~al,al", "jz~FOO"]], [1, 1, 4, 0, 0, 3, 1, 1, 0, 2, 0.0, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      short loc_4018"], ["and~esi,0", "cmp~esi,<STR>", "jz~FOO"]], [1, 0, 0, 0, 1, 7, 1, 1, 2, 0, 0.0, ["mov     rdi, file; name", "mov     esi, 2; type", "call    _euidaccess", "test    eax, eax", "setz    al", "pop     file", "retn"], ["mov~rdi,file", "mov~esi,0", "call~FOO", "test~eax,eax", "setz~al", "pop~file", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 3, 0, 0, 2, -1, 0.0, ["mov     eax, 1", "pop     file", "retn"], ["mov~eax,0", "pop~file", "retn"]]], "func_feature": [2, 3, 4, 0, 5, 4, 2, 20, 0.03333, 0, 0], "succs": [[2, 4], [0, 3], [], [], []], "fname": "writable_destination", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 4, 0, 3, 12, 2, 3, 0, 0, 0.0, ["mov     rdi, backup_dst_name; name", "call    quote", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     backup_dst_name, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdi,backup_dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~backup_dst_name,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 5, 0, 3, 19, 3, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, src", "push    rbx", "mov     edi, 1; n", "mov     rbx, backup_dst_name", "call    quote_n", "xor     edi, edi; n", "mov     rsi, src; name", "mov     rbp, rax", "call    quote_n", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     rdx, rax", "mov     rcx, rbp", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "test    backup_dst_name, backup_dst_name", "jz      short loc_40AF"], ["push~r12", "push~rbp", "mov~r12,src", "push~rbx", "mov~edi,0", "mov~rbx,backup_dst_name", "call~FOO", "xor~edi,edi", "mov~rsi,src", "mov~rbp,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "mov~edi,0", "call~FOO", "test~backup_dst_name,backup_dst_name", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 1, 0, 0, 5, 0, 1, 2, 0, 0.15000000000000002, ["pop     rbx", "pop     rbp", "pop     src", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~src", "mov~esi,0", "jmp~FOO"]], [1, 0, 0, 0, 0, 7, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "pop     rbx", "pop     rbp", "pop     src", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~src", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.30000000000000004, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_40D0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]]], "func_feature": [6, 5, 8, 0, 6, 6, 3, 47, 0.075, 3, 0], "succs": [[5], [0, 5], [], [2], [], [3, 4]], "fname": "emit_verbose", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 0, 0.30000000000000004, ["mov     rax, [rsp+48h+var_30]", "xor     rax, fs:28h", "jnz     loc_41E3"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 3, 15, 2, 3, 1, 0, 0.07500000000000001, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aSOverwriteS; \"%s: overwrite %s? \"", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 5, 1, 1, 14, 2, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, rsi", "mov     rbx, dst_name", "sub     rsp, 28h", "mov     esi, [rsi]; mode", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "call    writable_destination", "test    al, al", "jz      short loc_4170"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,rsi", "mov~rbx,dst_name", "sub~rsp,0", "mov~esi,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [5, 1, 3, 2, 4, 29, 3, 5, 1, 0, 0.07500000000000001, ["lea     r12, [rsp+48h+perms]", "mov     edi, [rbp+0]; mode", "mov     rsi, r12; str", "add     r12, 1", "call    strmode", "mov     rdi, dst_name; name", "mov     [rsp+48h+perms+0Ah], 0", "mov     ebp, [rbp+0]", "call    quote", "lea     rsi, aSTryToOverwrit; \"%s: try to overwrite %s, overriding mod\"...", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, rax", "and     ebp, 0FFFh", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r12", "mov     r9, rbp", "mov     r8, r13", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_414C"], ["lea~r12,[rsp+0]", "mov~edi,[rbp+0]", "mov~rsi,r12", "add~r12,0", "call~FOO", "mov~rdi,dst_name", "mov~[rsp+0],0", "mov~ebp,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r13,rax", "and~ebp,<STR>", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r12", "mov~r9,rbp", "mov~r8,r13", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]]], "func_feature": [9, 8, 12, 1, 6, 6, 2, 68, 0.075, 5, 4], "succs": [[], [0, 4], [1], [2, 5], [], [1]], "fname": "overwrite_prompt", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+30h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "dest_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash_no_name; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+38h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "src_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 14, 1, 1, 0, 0, 0.0, ["pxor    xmm0, xmm0", "push    rbx", "mov     rbx, x", "movups  xmmword ptr [x], xmm0", "movups  xmmword ptr [x+10h], xmm0", "movups  xmmword ptr [x+20h], xmm0", "movups  xmmword ptr [x+30h], xmm0", "call    _geteuid", "test    eax, eax", "setz    al", "mov     [x+1Ah], al", "mov     [x+19h], al", "pop     x", "retn"], ["pxor~xmm0,xmm0", "push~rbx", "mov~rbx,x", "movups~<TAG>,xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "call~FOO", "test~eax,eax", "setz~al", "mov~[x+0],al", "mov~[x+0],al", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 14, 0.0, 0, 0], "succs": [[]], "fname": "cp_options_default", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 2, 0, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 1", "setz    al", "cmp     edx, 16h", "setz    dl", "or      al, dl", "jz      short loc_42A2"], ["push~rbx", "mov~rbx,x", "call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~al,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     x", "retn"], ["pop~x", "retn"]], [1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.0, ["movzx   eax, byte ptr [x+19h]", "xor     eax, 1"], ["movzx~eax,[yte ptr [x+0]", "xor~eax,0"]]], "func_feature": [1, 2, 2, 0, 3, 3, 3, 14, 0.0, 0, 0], "succs": [[1, 2], [], [1]], "fname": "chown_failure_ok", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.009999999999999998, ["cmp     eax, 16h", "jz      loc_44B0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 6, 2, 0.055, ["call    ___errno_location", "mov     gid, rax", "mov     eax, [rax]", "cmp     eax, 1", "jz      loc_44B0"], ["call~FOO", "mov~gid,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 1, 20, 0, 0, 7, 3, 1, 4, 4, 0.12000000000000001, ["mov     eax, edx", "mov     ecx, esi", "not     eax", "and     ecx, 0FFFh", "or      ah, 0Eh", "test    eax, ecx", "jnz     loc_43D0"], ["mov~eax,edx", "mov~ecx,esi", "not~eax", "and~ecx,<STR>", "or~ah,0", "test~eax,ecx", "jnz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.029166666666666667, ["mov     edx, [src_sb+18h]", "jmp     loc_42F2"], ["mov~edx,[src_sb+0]", "jmp~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 3, 5, 0.029166666666666667, ["mov     edx, [x+10h]"], ["mov~edx,[x+0]"]], [2, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     x", "pop     gid", "pop     dst_name", "pop     dest_desc", "pop     uid", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~x", "pop~gid", "pop~dst_name", "pop~dest_desc", "pop~uid", "pop~r15", "retn"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, -1, 0.06916666666666667, ["mov     edi, r13d; fd", "call    _fchown", "test    eax, eax", "jz      short loc_4374"], ["mov~edi,r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, -1, 0.06916666666666667, ["mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jnz     short loc_43A0"], ["mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 1, -1, 0.14333333333333334, ["cmp     r13d, 0FFFFFFFFh", "mov     edx, ebp; group", "mov     esi, r14d; owner", "jz      short loc_4368"], ["cmp~r13d,0", "mov~edx,ebp", "mov~esi,r14d", "jz~FOO"]], [1, 0, 25, 1, 0, 17, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13d, edx", "push    rbp", "push    rbx", "mov     rbx, x", "mov     r12, dst_name", "sub     rsp, 8", "movzx   eax, byte ptr [x+1Dh]", "mov     r14d, [src_sb+1Ch]", "or      al, [x+18h]", "mov     ebp, [src_sb+20h]", "mov     edi, eax", "or      dil, [x+24h]", "jz      short loc_4309"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13d,edx", "push~rbp", "push~rbx", "mov~rbx,x", "mov~r12,dst_name", "sub~rsp,0", "movzx~eax,[yte ptr [x+0]", "mov~r14d,[src_sb+0]", "or~al,[x+0]", "mov~ebp,[src_sb+0]", "mov~edi,eax", "or~dil,[x+0]", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 1, 7, 0.016666666666666666, ["cmp     r8b, 1", "jz      short loc_4309"], ["cmp~r8b,0", "jz~FOO"]], [1, 0, 19, 0, 1, 7, 3, 2, 5, 3, 0.05666666666666667, ["and     esi, 1C0h", "mov     rdi, dst_name; name", "and     edx, esi; mode", "mov     esi, r13d; desc", "call    qset_acl", "test    eax, eax", "jz      loc_4309"], ["and~esi,0", "mov~rdi,dst_name", "and~edx,esi", "mov~esi,r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 2, 6, 0.030000000000000002, ["test    al, al", "mov     esi, [dst_sb+18h]", "jnz     loc_4390"], ["test~al,al", "mov~esi,[dst_sb+0]", "jnz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, -1, 0.05916666666666667, ["call    ___errno_location", "mov     r14d, [rax]", "mov     r15, rax", "cmp     r14d, 1", "jz      loc_4490"], ["call~FOO", "mov~r14d,<TAG>", "mov~r15,rax", "cmp~r14d,0", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 0.017916666666666668, ["mov     edx, ebp; group", "mov     esi, 0FFFFFFFFh; owner", "mov     edi, r13d; fd", "call    _fchown", "mov     [r15], r14d", "jmp     loc_433F"], ["mov~edx,ebp", "mov~esi,0", "mov~edi,r13d", "call~FOO", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.017916666666666668, ["cmp     r14d, 16h", "jz      loc_4490"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 1, 0, 4, 16, 3, 5, 6, -1, 0.02, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     dst_name, rax", "call    _dcgettext", "mov     gid, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4437"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~dst_name,rax", "call~FOO", "mov~gid,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 2, 2, 5, -1, 0.07166666666666667, ["mov     rdi, x; x", "call    chown_failure_ok", "mov     edx, eax", "xor     eax, eax", "test    dl, dl", "jz      loc_4450"], ["mov~rdi,x", "call~FOO", "mov~edx,eax", "xor~eax,eax", "test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, -1, 0.05916666666666667, ["call    ___errno_location", "mov     r13d, [rax]", "mov     uid, rax", "cmp     r13d, 1", "jz      short loc_43B7"], ["call~FOO", "mov~r13d,<TAG>", "mov~uid,rax", "cmp~r13d,0", "jz~FOO"]], [1, 0, 1, 0, 3, 13, 3, 3, 8, -1, 0.009166666666666667, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aClearingPermis; \"clearing permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 1, 0.028333333333333335, ["cmp     byte ptr [x+1Ah], 0", "jnz     loc_4407"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.017916666666666668, ["cmp     r13d, 16h", "jnz     short loc_433F"], ["cmp~r13d,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, 0, 0.004166666666666667, ["jmp     loc_4437"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 8", "pop     x", "pop     gid", "pop     dst_name", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~x", "pop~gid", "pop~dst_name", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 0.017916666666666668, ["mov     edx, ebp; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     [r14], r13d", "jmp     loc_433F"], ["mov~edx,ebp", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 7, -1, 0.0, ["movzx   eax, byte ptr [x+20h]", "add     rsp, 8", "pop     x", "pop     rbp", "pop     r12", "neg     eax", "pop     r13", "pop     r14", "pop     r15", "retn"], ["movzx~eax,[yte ptr [x+0]", "add~rsp,0", "pop~x", "pop~rbp", "pop~r12", "neg~eax", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [16, 19, 37, 0, 26, 39, 2, 149, 0.0366, 2, 4], "succs": [[19, 20], [0, 20], [8, 11], [2], [2], [], [5, 13], [18, 5], [6, 7], [8, 10], [8, 12], [8, 1], [3, 4], [14, 15], [17], [17, 14], [25], [16, 23], [24, 21], [25], [19, 22], [24, 17], [25], [], [17], []], "fname": "set_owner", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 2, 9, 1, 2, 0, 0, 0.0, ["xor     edi, edi; mask", "call    _umask", "mov     ebx, eax", "mov     edi, eax; mask", "mov     cs:mask_6844, eax", "call    _umask", "mov     eax, ebx", "pop     rbx", "retn"], ["xor~edi,edi", "call~FOO", "mov~ebx,eax", "mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "mov~eax,ebx", "pop~rbx", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     ebx, cs:mask_6844", "cmp     ebx, 0FFFFFFFFh", "jz      short loc_44D0"], ["push~rbx", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "retn"], ["mov~eax,ebx", "pop~rbx", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 16, 0.0, 1, 0], "succs": [[], [0, 2], []], "fname": "cached_umask", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 1, 20, 0, 0, 6, 2, 0, 0, 0, 0.00015627183209418965, ["mov     ecx, [rbp+mode]", "mov     edx, ecx", "and     dh, 0F1h", "test    eax, eax", "cmovnz  edx, ecx", "mov     [rbp+mode], edx"], ["mov~ecx,[rbp+0]", "mov~edx,ecx", "and~dh,<STR>", "test~eax,eax", "cmovnz~edx,ecx", "mov~[rbp+0],edx"]], [2, 0, 21, 0, 1, 9, 0, 2, 27, -1, 0.0013393415256543193, ["mov     rcx, [rbp+stats]; src_sb", "mov     rsi, [rbp+dst_name]; dst_name", "lea     r9, [rbp+dst_mode]; dst_sb", "movzx   r8d, r12b; new_dst", "mov     edx, 0FFFFFFFFh; dest_desc", "mov     rdi, r15; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_48EB"], ["mov~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "lea~r9,[rbp+0]", "movzx~r8d,r12b", "mov~edx,0", "mov~rdi,r15", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 401, 0, 0, 4, 1, 0, 16, 36, 0.0, ["xor     ecx, ecx", "mov     rax, [rbp+src_mode]", "cmp     [rbp+dst_mode], rax", "setnz   cl; options"], ["xor~ecx,ecx", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setnz~cl"]], [2, 0, 402, 0, 0, 3, 0, 1, 15, 36, 0.0003750523970260551, ["cmp     byte ptr [x_0+18h], 0", "mov     ecx, 1", "jz      short loc_480D"], ["cmp~[yte ptr [x_0+0],0", "mov~ecx,0", "jz~FOO"]], [0, 0, 319, 0, 1, 4, 1, 2, 20, 25, 0.0056362040775304375, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jz      loc_6AD0"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 325, 0, 0, 3, 1, 1, 19, 26, 0.008303856175985372, ["movzx   r12d, byte ptr [x_0+15h]", "test    r12b, r12b", "jnz     short loc_5802"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [2, 0, 321, 0, 0, 4, 1, 1, 22, 25, 0.0006361182812304661, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_5802"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 323, 0, 0, 2, 0, 0, 21, 25, 4.780079569939918e-05, ["cmp     [rbp+var_1E0], 1", "jbe     loc_6A9C"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 19, 0, 0, 3, 1, 1, 26, -1, 0.016586876107691516, ["mov     rax, 0FF00000000FFh", "test    [r15+18h], rax", "jnz     loc_6156"], ["mov~rax,0", "test~[r15+0],rax", "jnz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 25, -1, 0.023561196049448084, ["cmp     byte ptr [r15+1Ch], 0", "jz      short loc_5007"], ["cmp~[yte ptr [r15+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 29, -1, 9.376309925651378e-05, ["jmp     loc_5007"], ["jmp~FOO"]], [1, 0, 12, 0, 3, 14, 3, 4, 28, -1, 0.00038056787345290885, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotCreateSy_0; \"cannot create symbolic link %s\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,r13d", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 2, 4, 0, 3, 32, -1, 4.228531927254543e-05, ["call    free", "mov     rdi, r14; ptr", "call    free", "jmp     loc_67E5"], ["call~FOO", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 27, -1, 0.0011766349710621337, ["mov     rdi, r14; ptr", "call    free"], ["mov~rdi,r14", "call~FOO"]], [1, 0, 30, 0, 0, 9, 1, 1, 29, -1, 0.003794647781675381, ["or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, r12d", "mov     rdi, src_link_val", "repne scasb", "mov     rsi, [rbp+var_1C0]; size", "not     rcx", "lea     rax, [rcx-1]", "cmp     rsi, rax", "jnz     loc_67DD"], ["or~rcx,0", "mov~eax,r12d", "mov~rdi,src_link_val", "scasb~<TAG>,", "mov~rsi,[rbp+0]", "not~rcx", "lea~rax,[rcx-1]+0]", "cmp~rsi,rax", "jnz~FOO"]], [1, 1, 31, 0, 0, 4, 1, 1, 28, -1, 0.004647708135695428, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7001"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 27, -1, 0.01236937513329068, ["cmp     byte ptr [r15+24h], 0", "jnz     loc_6234"], ["cmp~[yte ptr [r15+0],0", "jnz~FOO"]], [1, 0, 318, 0, 1, 4, 0, 2, 21, 25, 0.0009572415754161738, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r12, rax", "jz      loc_6AD0"], ["call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 28, -1, 0.010269817106801686, ["mov     eax, dword ptr [rbp+omitted_permissions]", "test    eax, eax", "jnz     loc_6580"], ["mov~eax,[word ptr [rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 29, 0, 1, 5, 1, 2, 30, -1, 0.0029342334590861958, ["mov     rdi, [rbp+dst_name]; file", "call    areadlink_with_size", "test    rax, rax", "mov     r12, rax", "jz      loc_67DD"], ["mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 29, -1, 0.0021933211257455084, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jnz     loc_65BF"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 14, 0, 1, 4, 1, 2, 29, -1, 0.006004515336701451, ["call    cached_umask", "not     eax", "and     dword ptr [rbp+omitted_permissions], eax", "jz      loc_5034"], ["call~FOO", "not~eax", "and~[word ptr [rbp+0],eax", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 22, -1, 0.0003762780584542446, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 3, 0, 0, 2, 0, 1, 28, -1, 9.927857568336753e-05, ["movzx   ebx, byte ptr [rbp+delayed_ok]", "jmp     loc_48EB"], ["movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 5, 0, 1, 8, 1, 2, 27, -1, 0.0021547127907575324, ["mov     r8d, [rbp+mode]; mode", "mov     rdx, [rbp+dst_name]; dst_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     esi, ecx; source_desc", "mov     rdi, r13; src_name", "call    copy_acl", "test    eax, eax", "jz      loc_5041"], ["mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,0", "mov~esi,ecx", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 5, 1, 1, 32, -1, 4.5962303557114596e-05, ["mov     eax, [rbp+var_1D8]", "mov     dword ptr [rbp+length], eax", "not     eax", "test    dword ptr [rbp+omitted_permissions], eax", "jz      loc_5041"], ["mov~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax", "not~eax", "test~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 2, 2, 30, -1, 0.0011398651282164421, ["mov     esi, dword ptr [rbp+length]", "or      esi, dword ptr [rbp+omitted_permissions]; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "test    eax, eax", "jz      loc_5041"], ["mov~esi,[word ptr [rbp+0]", "or~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 15, -1, 0.00033472813603861317, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotOverwrit_0; \"cannot overwrite non-directory %s with \"...", "jmp     loc_46B8"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 370, 0, 0, 2, 0, 1, 14, 30, 0.005730089742929771, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_681E"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 369, 0, 0, 3, 1, 1, 15, 29, 0.0058292457524703216, ["mov     edx, [x_0]", "test    edx, edx", "jz      loc_681E"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [0, 0, 29, 0, 1, 13, 1, 2, 25, -1, 0.0022089483089549277, ["mov     rax, [rbp+var_238]", "mov     rdi, [rbp+dst_name]; file", "lea     rsi, [rbp+timespec]; timespec", "mov     [rbp+timespec.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+timespec.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+timespec.tv_sec+10h], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_4FA4"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "lea~rsi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 24, -1, 0.02754980475213449, ["cmp     byte ptr [r15+1Eh], 0", "jnz     loc_5FFF"], ["cmp~[yte ptr [r15+0],0", "jnz~FOO"]], [0, 0, 400, 0, 1, 12, 1, 2, 15, 35, 0.008285471254562525, ["mov     rdx, [rbp+stats]; src_stat", "mov     rdi, [rbp+dst_name]; dst_name", "mov     rsi, r12; dst_stat", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    utimecmp", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "js      loc_56E8"], ["mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,r12", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "js~FOO"]], [1, 0, 403, 0, 0, 3, 1, 1, 14, 36, 0.004987216351303981, ["xor     ecx, ecx", "cmp     byte ptr [x_0+1Eh], 0", "jz      short loc_480D"], ["xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 3, 0, 2, 10, 4, 3, 23, -1, 0.00015443333995190505, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error", "jmp     loc_48EB"], ["xor~edi,edi", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbx", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 22, -1, 0.0003738267355978655, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotBackupS; \"cannot backup %s\"", "jmp     loc_5842"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0004957800477027427, ["cmp     [rbp+omitted_permissions], 0", "jz      loc_4E10"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 22, 0, 0, 3, 0, 1, 28, -1, 0.00023348850207014217, ["mov     rax, [rbp+device]", "mov     r8d, [rax]", "jmp     loc_6A4A"], ["mov~rax,[rbp+0]", "mov~r8d,<TAG>", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 27, 2, 0.005745287944639325, ["cmp     byte ptr [x_0+16h], 0", "jnz     loc_74DF"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 23, 0, 1, 4, 0, 2, 26, -1, 0.005002537119156353, ["mov     rdi, r14; ptr", "call    free", "cmp     byte ptr [x_0+21h], 0", "jz      short loc_706B"], ["mov~rdi,r14", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 25, -1, 0.014527764908332783, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, src_link_val; from", "call    _symlink", "test    eax, eax", "jz      loc_7057"], ["mov~rsi,[rbp+0]", "mov~rdi,src_link_val", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 1, 1, 0, 1, 32, -1, 0.00027025834491583385, ["call    free"], ["call~FOO"]], [0, 0, 22, 0, 1, 1, 0, 1, 27, -1, 0.0, ["call    restore_default_fscreatecon_or_die"], ["call~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 0.0001029555599679367, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 62, 0, 1, 8, 2, 2, 23, -1, 0.0021234584243386943, ["mov     rdi, [rbp+dst_name]; file", "mov     esi, r14d", "or      esi, 1C0h; mode", "call    _chmod", "test    eax, eax", "mov     dword ptr [rbp+length], r14d", "mov     byte ptr [rbp+restore_dst_mode], 1", "jnz     loc_6850"], ["mov~rdi,[rbp+0]", "mov~esi,r14d", "or~esi,0", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],r14d", "mov~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 264, 0, 1, 7, 1, 2, 13, 19, 0.010530882991006097, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, src_name_0; source", "mov     byte ptr [rbp+delayed_ok], r8b", "call    same_name", "test    al, al", "movzx   r8d, byte ptr [rbp+delayed_ok]", "jnz     loc_5350"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 12, 20, 0.018242009300318916, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_5050"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 17, -1, 4.688154962825689e-05, ["mov     rax, [rbp+omitted_permissions]", "mov     ebx, 1", "mov     byte ptr [rax], 1", "jmp     short loc_48EB"], ["mov~rax,[rbp+0]", "mov~ebx,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 262, 0, 0, 2, 0, 1, 14, 18, 0.002632720747751524, ["cmp     dword ptr [x_0+4], 4", "jz      loc_4C72"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 501, 0, 0, 2, 1, 1, 5, 24, 0.010944911421448586, ["test    r14b, r14b", "jnz     loc_4910"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 507, 0, 0, 2, 0, 1, 4, 25, 0.009606121443436949, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4880"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 19, -1, 0.00043020716129459264, ["mov     rdi, src_name_0; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "jmp     loc_48C9"], ["mov~rdi,src_name_0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 18, -1, 0.0013549687088637383, ["mov     rdi, src_name_0; name", "call    _unlink", "test    eax, eax", "jnz     loc_6870"], ["mov~rdi,src_name_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 17, 12, 0.16223406211161853, ["cmp     byte ptr [x_0+25h], 0", "jz      loc_4EE0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 234, 0, 0, 3, 1, 1, 16, 13, 0.0800485607057848, ["test    al, al", "mov     dword ptr [rbp+omitted_permissions], 0", "jz      loc_4D68"], ["test~al,al", "mov~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 232, 0, 0, 2, 0, 1, 16, 13, 0.11027275869422934, ["cmp     dword ptr [rbp+ptr], 4000h", "jnz     short loc_4D68"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 20, 0, 1, 6, 1, 2, 28, -1, 0.0020554342150741647, ["mov     edx, [rbp+group]; group", "mov     esi, [rbp+owner]; owner", "mov     rdi, [rbp+dst_name]; file", "call    _lchown", "test    eax, eax", "jz      loc_4DC9"], ["mov~edx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 27, -1, 0.003296416411116259, ["cmp     byte ptr [x_0+1Ch], 0", "jz      loc_4DC9"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 67, 0, 1, 6, 1, 2, 41, -1, 0.002787154087703429, ["mov     edi, [rbp+mode]; fd", "mov     edx, 1; whence", "mov     rsi, rcx; offset", "call    _lseek", "test    rax, rax", "js      loc_7735"], ["mov~edi,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 67, 0, 0, 2, 0, 0, 40, -1, 0.004125576367286606, ["cmp     rdx, rax", "jb      loc_72BF"], ["cmp~rdx,rax", "jb~FOO"]], [1, 0, 497, 0, 0, 2, 0, 1, 6, 28, 0.005995200309847209, ["cmp     dword ptr [rbp+ptr], 8000h", "jnz     loc_4714"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 498, 0, 1, 5, 1, 2, 6, 25, 0.005809267471190829, ["mov     rdx, [rbp+stats]; stats", "mov     rsi, src_name_0; file", "call    record_file", "test    r14b, r14b", "jz      loc_4889"], ["mov~rdx,[rbp+0]", "mov~rsi,src_name_0", "call~FOO", "test~r14b,r14b", "jz~FOO"]], [0, 0, 493, 0, 0, 1, 0, 1, 7, 28, 0.0003088666799038101, ["jmp     loc_473B"], ["jmp~FOO"]], [1, 0, 3, 0, 3, 15, 4, 4, 7, -1, 3.3092858561122513e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aWarningSourceF; \"warning: source file %s specified more \"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     ebx, r12d", "call    _error", "jmp     loc_48EB"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "mov~ebx,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 501, 0, 1, 6, 1, 2, 6, 27, 8.824762282966004e-05, ["mov     rdx, [rbp+stats]; stats", "mov     rsi, src_name_0; file", "call    seen_file", "test    al, al", "mov     r12d, eax", "jnz     loc_5868"], ["mov~rdx,[rbp+0]", "mov~rsi,src_name_0", "call~FOO", "test~al,al", "mov~r12d,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 27, -1, 0.0001718990153036086, ["jmp     loc_48EB"], ["jmp~FOO"]], [2, 0, 28, 0, 4, 17, 3, 5, 26, -1, 0.0011941006464138372, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r14", "call    _error", "cmp     byte ptr [r15+20h], 0", "jz      loc_4FA4"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r14", "call~FOO", "cmp~[yte ptr [r15+0],0", "jz~FOO"]], [1, 0, 457, 0, 0, 2, 0, 1, 14, 33, 0.011631526953520469, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5F78"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 464, 0, 0, 3, 1, 1, 13, 34, 0.015443946825904598, ["mov     esi, [x_0]", "test    esi, esi", "jz      loc_58A0"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [0, 0, 517, 0, 1, 5, 2, 2, 2, 27, 0.0038020017502445195, ["call    ___lxstat", "test    eax, eax", "setnz   bl", "test    bl, bl", "jz      loc_45A2"], ["call~FOO", "test~eax,eax", "setnz~bl", "test~bl,bl", "jz~FOO"]], [3, 0, 519, 0, 0, 9, 0, 1, 1, 28, 0.005725064531074194, ["mov     rax, qword ptr [rbp+fildes]", "cmp     dword ptr [r15+4], 2", "mov     dst_name_0, r13; filename", "mov     edi, 1; ver", "mov     byte ptr [rax], 0", "lea     rax, [rbp+src_mode]", "mov     [rbp+stats], rax", "mov     new_dst, rax; stat_buf", "jz      loc_48A0"], ["mov~rax,[word ptr [rbp+0]", "cmp~[word ptr [r15+0],0", "mov~dst_name_0,r13", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~new_dst,rax", "jz~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 23, -1, 0.01802457696295806, ["cmp     dword ptr [rbp+ptr], 0A000h", "jz      loc_6781"], ["cmp~[word ptr [rbp+0],<STR>", "jz~FOO"]], [3, 0, 75, 0, 0, 10, 2, 1, 22, -1, 0.020565373103595356, ["mov     esi, [rbp+mode]", "mov     eax, esi", "and     eax, 0B000h", "cmp     eax, 2000h", "setz    dl", "cmp     dword ptr [rbp+ptr], 0C000h", "setz    al", "or      dl, al", "mov     byte ptr [rbp+delayed_ok], dl", "jz      loc_60A5"], ["mov~esi,[rbp+0]", "mov~eax,esi", "and~eax,0", "cmp~eax,0", "setz~dl", "cmp~[word ptr [rbp+0],0", "setz~al", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 0, 456, 0, 0, 2, 0, 1, 15, 33, 0.003349732683242512, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_5F78"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 16, 0, 3, 13, 2, 4, 17, -1, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_5427"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 16, -1, 0.0024543870099499195, ["cmp     byte ptr [x_0+27h], 0", "jnz     loc_688C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 433, 0, 0, 4, 1, 1, 16, 34, 0.0032688390289819904, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_652E"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 3, -1, 8.824762282966004e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     new_dst, rax", "mov     edx, 5; category"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~new_dst,rax", "mov~edx,0"]], [0, 0, 517, 0, 1, 5, 2, 2, 2, 27, 0.0038020017502445195, ["call    ___xstat", "test    eax, eax", "setnz   bl", "test    bl, bl", "jnz     loc_48B2"], ["call~FOO", "test~eax,eax", "setnz~bl", "test~bl,bl", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 1, 1, 41, -1, 0.001161927033923857, ["test    eax, eax", "jnz     short loc_742D"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 37, 0, 1, 9, 0, 2, 40, -1, 0.00238636280068539, ["mov     r9, [rbp+delayed_ok]; dst_sb", "mov     rcx, [rbp+stats]; src_sb", "movzx   r8d, r12b; new_dst", "mov     edx, [rbp+mode]; dest_desc", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, x_0; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_7673"], ["mov~r9,[rbp+0]", "mov~rcx,[rbp+0]", "movzx~r8d,r12b", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,x_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 2, 8, 1, 3, 30, -1, 0.00024635794706613423, ["lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+dst_name]", "jmp     loc_5163"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 19, 0, 1, 4, 1, 2, 29, -1, 0.0011545730653547187, ["mov     rdi, x_0; x", "call    chown_failure_ok", "test    al, al", "jnz     loc_4DC9"], ["mov~rdi,x_0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 41, -1, 0.0011398651282164421, ["jmp     loc_74C5"], ["jmp~FOO"]], [1, 0, 26, 0, 1, 9, 1, 2, 40, -1, 0.002787154087703429, ["mov     r8d, dword ptr [rbp+ancestors]; mode", "mov     ecx, [rbp+mode]; dest_desc", "mov     rdi, src_name_0; src_name", "mov     rdx, [rbp+dst_name]; dst_name", "mov     esi, [rbp+fildes]; source_desc", "mov     r12d, 1", "call    copy_acl", "test    eax, eax", "jz      loc_6EBC"], ["mov~r8d,[word ptr [rbp+0]", "mov~ecx,[rbp+0]", "mov~rdi,src_name_0", "mov~rdx,[rbp+0]", "mov~esi,[rbp+0]", "mov~r12d,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 24, -1, 0.00013604841852905922, ["mov     dst_mode_bits_0, src_name_0; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSHasUnknownFil; \"%s has unknown file type\"", "jmp     loc_4D47"], ["mov~dst_mode_bits_0,src_name_0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 12, 0, 4, 20, 5, 5, 15, -1, 4.412381141483002e-05, ["mov     rsi, [rbp+earlier_file]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aWillNotCreateH; \"will not create hard link %s to directo\"...", "mov     src_name_0, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4A17"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~src_name_0,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 34, 0, 0, 1, 1, 0, 42, -1, 0.0, ["and     dword ptr [rbp+ancestors], 0FFFFF1FFh"], ["and~[word ptr [rbp+0],0"]], [1, 0, 407, 0, 0, 2, 0, 1, 20, 30, 0.005293018877637317, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_526B"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 412, 0, 0, 3, 1, 1, 19, 31, 0.005009891087725492, ["movzx   r11d, byte ptr [x_0+18h]", "test    r11b, r11b", "jz      loc_70CD"], ["movzx~r11d,[yte ptr [x_0+0]", "test~r11b,r11b", "jz~FOO"]], [1, 1, 431, 0, 0, 5, 1, 1, 17, 33, 0.0018090762680080307, ["mov     esi, [r14+18h]", "mov     ecx, esi", "and     ecx, 0F000h", "cmp     ecx, 0A000h", "jnz     loc_5FB0"], ["mov~esi,[r14+0]", "mov~ecx,esi", "and~ecx,0", "cmp~ecx,<STR>", "jnz~FOO"]], [0, 0, 482, 0, 0, 3, 0, 1, 9, 33, 0.019235775586295144, ["mov     rax, [rbp+var_1E8]", "cmp     [rbp+ino], rax", "jz      loc_5480"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 486, 0, 1, 10, 3, 2, 8, 26, 0.030038755414359356, ["lea     r12, [rbp+dst_mode]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "setnz   r8b", "xor     r9d, r9d", "test    r8b, r8b", "jz      loc_47A2"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,r12", "call~FOO", "test~eax,eax", "setnz~r8b", "xor~r9d,r9d", "test~r8b,r8b", "jz~FOO"]], [2, 0, 486, 0, 1, 10, 2, 2, 13, 26, 0.0008935071811503078, ["lea     r12, [rbp+dst_mode]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, r12; stat_buf", "call    ___xstat", "test    eax, eax", "mov     r9d, 1", "setnz   r8b", "test    r8b, r8b", "jnz     loc_4BDD"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,r12", "call~FOO", "test~eax,eax", "mov~r9d,0", "setnz~r8b", "test~r8b,r8b", "jnz~FOO"]], [1, 0, 405, 0, 0, 3, 1, 1, 21, 35, 0.0005589016112545135, ["xor     r14d, r14d", "cmp     byte ptr [x_0+26h], 0", "jnz     loc_47E5"], ["xor~r14d,r14d", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 3, 0, 3, 11, 4, 3, 4, -1, 0.00011582500496392879, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 33, -1, 0.0006563416947955964, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_48C9"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 380, 0, 0, 2, 0, 1, 22, 34, 0.001571910781653319, ["mov     eax, [x_0+8]", "jmp     loc_56F7"], ["mov~eax,[x_0+0]", "jmp~FOO"]], [0, 1, 425, 0, 0, 2, 0, 1, 19, 33, 0.004890389098476993, ["cmp     eax, 0A000h", "jz      loc_6539"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 426, 0, 0, 2, 0, 1, 18, 34, 0.003686176745280591, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_55E0"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.0038240636559519346, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_7221"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 3, 0, 2, 11, 5, 3, 16, -1, 0.000887991704723454, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     r8, r12", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     ebx, ebx", "jmp     loc_48EB"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~r8,r12", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.0067114155654098735, ["mov     rdi, [rbp+dst_backup]; old", "test    rdi, rdi", "jz      loc_48EB"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 18, -1, 0.0015388179230921967, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_48EB"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [3, 0, 3, 0, 4, 19, 3, 5, 19, -1, 0.0, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_backup]; name", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aSSUnbackup; \"%s -> %s (unbackup)\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r13", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_48EB"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r13", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 3, 14, 4, 4, 5, -1, 2.206190570741501e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aOmittingDirect; \"omitting directory %s\"", "mov     new_dst, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_48EB"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~new_dst,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 3, 14, 3, 4, 10, -1, 0.00022061905707415006, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     src_name_0, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, r13", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_48EB"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~src_name_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, -1, 0.002426809627815651, ["mov     ebx, 1", "jmp     loc_48EB"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 17, -1, 3.3092858561122513e-05, ["mov     rdi, [x_0+30h]; ht", "mov     rdx, [rbp+stats]; stats", "mov     rsi, [rbp+dst_name]; file", "call    record_file", "movzx   ebx, byte ptr [rbp+format]", "jmp     loc_48EB"], ["mov~rdi,[x_0+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 3, 0, 2, 8, 2, 3, 17, -1, 5.5154764268537516e-05, ["mov     esi, [r9]; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_48EB"], ["mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 4, 16, 3, 5, 18, -1, 5.515476426853752e-06, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotUnBackup; \"cannot un-backup %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_48EB"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 3, 13, 2, 4, 19, -1, 1.1030952853707504e-05, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_48EB"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 28, -1, 2.206190570741501e-05, ["movzx   ebx, byte ptr [rbp+format]", "jmp     loc_48EB"], ["movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [3, 0, 3, 0, 4, 23, 5, 5, 15, -1, 8.824762282966004e-05, ["mov     rsi, cs:top_level_dst_name; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, cs:top_level_src_name; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotMoveSToA; \"cannot move %s to a subdirectory of its\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     r8, r12", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+fildes]", "mov     ebx, r14d", "mov     byte ptr [rax], 1", "jmp     loc_48EB"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~r8,r12", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~ebx,r14d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 28, -1, 2.7577382134268758e-05, ["cmp     byte ptr [r15+20h], 0", "movzx   eax, byte ptr [rbp+delayed_ok]", "cmovnz  eax, ebx", "mov     ebx, eax", "jmp     loc_48EB"], ["cmp~[yte ptr [r15+0],0", "movzx~eax,[yte ptr [rbp+0]", "cmovnz~eax,ebx", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 1, 2, 28, -1, 2.206190570741501e-05, ["mov     edx, [r15+10h]; mode", "mov     rdi, [rbp+dst_name]; name", "mov     esi, 0FFFFFFFFh; desc", "call    set_acl", "test    eax, eax", "movzx   eax, byte ptr [rbp+delayed_ok]", "cmovnz  eax, ebx", "mov     ebx, eax", "jmp     loc_48EB"], ["mov~edx,[r15+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "test~eax,eax", "movzx~eax,[yte ptr [rbp+0]", "cmovnz~eax,ebx", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 4, 18, 5, 5, 22, -1, 0.00015443333995190505, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "mov     src_name_0, rax", "xor     edi, edi; n", "call    quote_n", "mov     rdx, fmt; format", "mov     rcx, rax", "mov     r8, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, tmp_backup; ptr", "xor     ebx, ebx", "call    free", "jmp     loc_48EB"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "mov~src_name_0,rax", "xor~edi,edi", "call~FOO", "mov~rdx,fmt", "mov~rcx,rax", "mov~r8,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,tmp_backup", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 3, 15, 5, 4, 20, -1, 6.618571712224503e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotOverwrit; \"cannot overwrite directory %s with non-\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "xor     ebx, ebx", "call    _error", "jmp     loc_48EB"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 2, 11, 2, 3, 20, -1, 0.0001139865128216442, ["mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotMoveDire; \"cannot move directory onto non-director\"...", "jmp     loc_46B8"], ["mov~rsi,[rbp+0]", "xor~edi,edi", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 16, -1, 0.0006655341555070194, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aSAndSAreTheSam; \"%s and %s are the same file\"", "jmp     loc_46B8"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 3, 19, -1, 5.8831748553106686e-05, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aWillNotOverwri; \"will not overwrite just-created %s with\"...", "jmp     loc_46B8"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 2, 11, 1, 2, 15, -1, 0.0003510294330335367, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aWillNotCopySTh; \"will not copy %s through just-created s\"...", "mov     rbx, rax", "mov     edx, 5; category", "nop     dword ptr [rax]"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "nop~<TAG>"]], [2, 0, 71, 1, 0, 10, 2, 1, 19, -1, 0.02319441686706231, ["sub     rsp, 30h", "mov     rsi, [rbp+ancestors]", "lea     r14, [rsp+3C0h+var_3B1]", "and     r14, 0FFFFFFFFFFFFFFF0h", "test    r12b, r12b", "mov     [rbp+ptr], r14", "mov     [r14], rsi", "mov     [r14+8], rdx", "mov     [r14+10h], rcx", "jnz     short loc_5119"], ["sub~rsp,0", "mov~rsi,[rbp+0]", "lea~r14,[rsp+0]", "and~r14,0", "test~r12b,r12b", "mov~[rbp+0],r14", "mov~<TAG>,rsi", "mov~[r14+0],rdx", "mov~[r14+0],rcx", "jnz~FOO"]], [0, 0, 72, 0, 0, 1, 0, 1, 18, -1, 0.02316132400850119, ["jmp     loc_50D8"], ["jmp~FOO"]], [0, 0, 77, 0, 0, 3, 1, 1, 19, -1, 0.0004449150984328693, ["mov     rax, [rax]", "test    rax, rax", "jz      loc_50D8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 35, 0, 4, 17, 3, 5, 24, -1, 0.00025738889991984177, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     qword ptr [rbp+fildes], rax", "call    ___errno_location", "mov     rdx, qword ptr [rbp+fildes]; format", "mov     esi, [rax]; errnum", "mov     rcx, r14", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     byte ptr [rbp+delayed_ok], 0", "jmp     loc_4F8C"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~[word ptr [rbp+0],rax", "call~FOO", "mov~rdx,[word ptr [rbp+0]", "mov~esi,<TAG>", "mov~rcx,r14", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 44, 0, 1, 13, 1, 2, 23, -1, 0.008600466241607284, ["movdqu  xmm0, xmmword ptr [x_0]", "mov     rdi, src_name_0; dir", "movaps  xmmword ptr [rbp+dev], xmm0", "movdqu  xmm0, xmmword ptr [x_0+10h]", "movaps  [rbp+var_2D0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+20h]", "movaps  [rbp+var_2C0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+30h]", "movaps  [rbp+var_2B0], xmm0", "call    savedir", "test    rax, rax", "mov     [rbp+abase], rax", "jz      loc_68C5"], ["movdqu~xmm0,<TAG>", "mov~rdi,src_name_0", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 6, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 107, 0, 1, 7, 1, 2, 25, 4, 0.01356807201006023, ["mov     rdi, [rbp+dst_name]; file", "xor     eax, eax", "mov     esi, 201h; flags", "call    open_safer", "cmp     byte ptr [x_0+21h], 0", "mov     [rbp+mode], eax", "jnz     loc_722E"], ["mov~rdi,[rbp+0]", "xor~eax,eax", "mov~esi,0", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],eax", "jnz~FOO"]], [1, 0, 108, 0, 1, 7, 2, 2, 24, 5, 0.07837492002559181, ["mov     eax, [rbp+mode]", "and     eax, 1FFh", "mov     dword ptr [rbp+x], eax", "call    ___errno_location", "test    r12b, r12b", "mov     [rbp+device], rax", "jz      loc_70F4"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~[word ptr [rbp+0],eax", "call~FOO", "test~r12b,r12b", "mov~[rbp+0],rax", "jz~FOO"]], [2, 0, 70, 0, 0, 4, 1, 1, 20, -1, 0.013443054544384879, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_5FE0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 429, 0, 0, 2, 0, 1, 18, 34, 0.0007997440818937941, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_652E"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 437, 0, 0, 4, 1, 1, 17, 33, 0.002182290172891801, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6910"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 1, 440, 0, 0, 4, 1, 1, 19, 34, 0.0007298813804869799, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6910"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 292, 0, 0, 3, 1, 1, 6, 23, 0.009512848608751715, ["mov     r8d, 1", "and     r8b, [x_0+27h]", "jnz     loc_5460"], ["mov~r8d,0", "and~r8b,[x_0+0]", "jnz~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 26, 3, 0.004348953162574183, ["cmp     [rbp+mode], 0", "js      loc_7236"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 289, 0, 0, 1, 0, 0, 7, 22, 0.009451933235770682, ["mov     [rbp+dst_backup], 0"], ["mov~[rbp+0],0"]], [0, 0, 290, 0, 0, 2, 1, 1, 7, 23, 0.0031438215633066385, ["xor     r8d, r8d", "jmp     loc_4920"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 1, 428, 0, 0, 4, 1, 1, 19, 34, 0.0002647428684889801, ["mov     eax, [r14+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_652E"], ["mov~eax,[r14+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 250, 0, 1, 5, 0, 2, 14, 19, 0.006695788382200455, ["call    ___errno_location", "mov     r9, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_60D1"], ["call~FOO", "mov~r9,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 27, -1, 0.0012207587824769638, ["mov     dword ptr [rbp+omitted_permissions], 0", "jmp     loc_6C0B"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 86, 0, 0, 1, 0, 1, 28, -1, 0.0004559460512865768, ["jmp     loc_7125"], ["jmp~FOO"]], [1, 0, 288, 0, 0, 2, 0, 1, 8, 21, 0.19558700602780288, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4B5C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 9, 22, 0.1781088289295318, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_492B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 2, 0, 1, 10, 22, 0.0013273913267294697, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_492B"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 289, 0, 0, 1, 0, 1, 24, 22, 0.0006980141833540471, ["jmp     loc_492B"], ["jmp~FOO"]], [2, 0, 289, 0, 0, 3, 0, 1, 23, 22, 0.004743309727094226, ["mov     r12d, 1", "mov     [rbp+dst_backup], 0", "jmp     loc_492B"], ["mov~r12d,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 68, 0, 1, 8, 2, 2, 20, -1, 0.008302630514557182, ["mov     esi, dword ptr [rbp+omitted_permissions]", "mov     r14, [rbp+dst_name]", "not     esi", "and     esi, edi; mode", "mov     dst_mode_bits_0, r14; path", "call    _mkdir", "test    eax, eax", "jz      loc_5C00"], ["mov~esi,[word ptr [rbp+0]", "mov~r14,[rbp+0]", "not~esi", "and~esi,edi", "mov~dst_mode_bits_0,r14", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 413, 0, 0, 4, 0, 1, 20, 34, 0.0015994881637875881, ["mov     rax, [rdx]", "cmp     [r14], rax", "setz    al", "jmp     loc_56D8"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "jmp~FOO"]], [1, 0, 431, 0, 0, 2, 0, 1, 21, 35, 0.00031622064847294844, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_692F"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 285, 0, 0, 2, 0, 1, 9, 20, 0.10006116050526667, ["cmp     byte ptr [x_0+1Fh], 0", "jz      loc_4C50"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 288, 0, 1, 7, 0, 2, 8, 21, 0.009470318157193527, ["mov     rsi, [rbp+dst_name]; dst", "mov     rdi, src_name_0; src", "mov     byte ptr [rbp+earlier_file], r8b", "call    emit_verbose", "cmp     byte ptr [x_0+18h], 0", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_4936"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~[yte ptr [x_0+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 287, 0, 0, 2, 0, 1, 9, 20, 0.11274847221302979, ["cmp     [rbp+var_270], 1", "jnz     loc_4936"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 12, 21, 0.002412101690677374, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_4936"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 2, 0, 1, 13, 21, 0.0006986270140681419, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_4936"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 26, -1, 0.0013420992638677463, ["mov     byte ptr [rbp+delayed_ok], 1", "jmp     loc_5E28"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 40, 0, 0, 3, 0, 1, 25, -1, 0.0050190835484369145, ["mov     rax, [rbp+abase]", "cmp     byte ptr [rax], 0", "jz      loc_693D"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 284, 0, 0, 2, 0, 0, 10, 20, 0.004189923592266566, ["cmp     [rbp+var_270], 1", "jbe     loc_4C30"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 14, 0, 1, 5, 0, 1, 21, -1, 0.00024635794706613423, ["mov     rdi, r14; name", "call    quote", "lea     rsi, aCannotCreateDi; \"cannot create directory %s\"", "mov     src_name_0, rax", "mov     edx, 5; category"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "mov~src_name_0,rax", "mov~edx,0"]], [1, 0, 10, 0, 1, 6, 1, 2, 32, -1, 0.0017318595980320782, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_mode]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_65A5"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 31, -1, 0.0038865723887896103, ["test    r12b, r12b", "jnz     loc_7134"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 16, -1, 0.0, ["test    r8b, r8b", "mov     eax, 0", "cmovnz  rax, [rbp+dst_backup]", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, src_name_0; src", "mov     rdx, rax; backup_dst_name", "call    emit_verbose", "jmp     loc_4E7D"], ["test~r8b,r8b", "mov~eax,0", "cmovnz~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~rdx,rax", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 15, -1, 0.0008236444797434936, ["cmp     dword ptr [rbp+ptr], 4000h", "movzx   r8d, byte ptr [rbp+delayed_ok]", "jz      loc_612F"], ["cmp~[word ptr [rbp+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 422, 0, 0, 18, 0, 0, 20, 35, 0.0003125436641883793, ["movdqa  xmm0, xmmword ptr [rdx]", "movaps  xmmword ptr [rbp+timespec.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr [rdx+10h]", "movaps  xmmword ptr [rbp+timespec.tv_sec+10h], xmm0", "movdqa  xmm0, xmmword ptr [rdx+20h]", "movaps  [rbp+var_B0], xmm0", "movdqa  xmm0, xmmword ptr [rdx+30h]", "movaps  [rbp+var_A0], xmm0", "movdqa  xmm0, xmmword ptr [rdx+40h]", "movaps  [rbp+var_90], xmm0", "movdqa  xmm0, xmmword ptr [rdx+50h]", "movaps  [rbp+var_80], xmm0", "movdqa  xmm0, xmmword ptr [rdx+60h]", "movaps  [rbp+var_70], xmm0", "movdqa  xmm0, xmmword ptr [rdx+70h]", "movaps  [rbp+var_60], xmm0", "movdqa  xmm0, xmmword ptr [rdx+80h]", "movaps  [rbp+var_50], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [rdx+0]", "movaps~[rbp+0],xmm0"]], [0, 0, 46, 0, 1, 5, 1, 1, 37, -1, 0.0012501746567535172, ["mov     rsi, [rbp+length]; length", "mov     edi, [rbp+mode]; fd", "call    _ftruncate", "test    eax, eax", "jns     loc_73C1"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 47, 0, 0, 5, 1, 1, 36, -1, 0.023348850207014216, ["mov     r9d, ebx", "movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "test    r9b, r9b", "jnz     loc_76D1"], ["mov~r9d,ebx", "movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 13, 0, 2, 5, 1, 2, 21, -1, 0.0019662673461733624, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13"], ["xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13"]], [1, 0, 14, 0, 1, 6, 0, 2, 20, -1, 0.0018274611894308764, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotCreateLi; \"cannot create link %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 21, -1, 0.00013512917245791692, ["mov     rdi, src_name_0; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotOpenSFor; \"cannot open %s for reading\"", "jmp     loc_5151"], ["mov~rdi,src_name_0", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 22, -1, 5.147777998396835e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 8.457063854509087e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotCreateFi; \"cannot create fifo %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 24, -1, 5.147777998396835e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotCreateSp; \"cannot create special file %s\"", "jmp     loc_5151"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 14, 0, 1, 6, 0, 2, 25, -1, 4.780079569939918e-05, ["mov     rdi, src_name_0; name", "call    quote", "mov     edx, 5", "mov     src_name_0, rax", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "jmp     loc_5151"], ["mov~rdi,src_name_0", "call~FOO", "mov~edx,0", "mov~src_name_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 33, 0, 0, 3, 1, 1, 39, -1, 0.010619130613835757, ["mov     rax, 0FF00000000FFh", "test    [x_0+18h], rax", "jnz     loc_769C"], ["mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 38, -1, 0.016774402306204545, ["cmp     byte ptr [x_0+1Ch], 0", "jz      short loc_742D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 38, 0, 0, 3, 0, 1, 40, -1, 3.676984284569168e-05, ["mov     eax, dword ptr [rbp+var_B0]", "cmp     [rbp+group], eax", "jz      short loc_742D"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [1, 1, 421, 0, 0, 3, 1, 1, 20, 34, 0.00499334465844493, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      loc_71CD"], ["and~esi,0", "cmp~esi,<STR>", "jz~FOO"]], [0, 0, 422, 0, 0, 2, 0, 1, 19, 35, 0.0018421691265691532, ["mov     esi, [r14+18h]", "jmp     loc_5959"], ["mov~esi,[r14+0]", "jmp~FOO"]], [0, 0, 12, 0, 1, 5, 2, 1, 22, -1, 0.0012602863635360823, ["mov     esi, [rax]; errnum", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~esi,<TAG>", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 21, -1, 0.0003548289834609247, ["lea     rsi, aBackingUpSWoul_0; \"backing up %s would destroy source;  %s\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     loc_6411"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 20, -1, 0.0018421691265691532, ["cmp     byte ptr [x_0+18h], 0", "mov     edx, 5; category", "jz      loc_6ED7"], ["cmp~[yte ptr [x_0+0],0", "mov~edx,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 21, -1, 0.005724145285003052, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_5450"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 12, 0, 2, 9, 4, 3, 21, -1, 0.0005828020091042131, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 12, 0, 5, 22, 4, 6, 20, -1, 0.0016031651480721571, ["mov     rsi, src_name_0; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCreateSy; \"cannot create symbolic link %s to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     src_name_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     r8, r12", "mov     rcx, r14", "mov     rdx, r13; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rsi,src_name_0", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~src_name_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~r8,r12", "mov~rcx,r14", "mov~rdx,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 1, 4, 1, 2, 24, -1, 0.00914006368536781, ["mov     rdi, [rbp+ptr]; ptr", "call    free", "test    r14b, r14b", "jz      un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "test~r14b,r14b", "jz~FOO"]], [1, 0, 12, 0, 5, 18, 3, 6, 24, -1, 0.001555364352372758, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aClosingS; \"closing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     src_name_0, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "mov     rcx, r13", "mov     rdx, r12; format", "xor     eax, eax", "call    _error", "mov     rdi, [rbp+ptr]; ptr", "call    free", "jmp     un_backup"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~src_name_0,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "mov~rcx,r13", "mov~rdx,r12", "xor~eax,eax", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 276, 0, 1, 7, 0, 1, 11, 19, 0.0047249248056713804, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+delayed_ok], r8b", "call    remember_copied", "movzx   r8d, byte ptr [rbp+delayed_ok]", "mov     [rbp+earlier_file], rax"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 282, 0, 0, 2, 0, 1, 12, 20, 0.0005092623234128297, ["cmp     eax, 3", "jz      loc_494F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 20, 0.0013145218817334776, ["cmp     eax, 4", "jz      loc_494F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 278, 0, 0, 2, 0, 1, 11, 19, 0.00019120318279759673, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_494F"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 17, -1, 0.005327030982269582, ["cmp     [rbp+earlier_file], 0", "jnz     loc_4A22"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 1, 2, 0, 2, 16, -1, 0.001706120708040094, ["call    restore_default_fscreatecon_or_die", "jmp     loc_517C"], ["call~FOO", "jmp~FOO"]], [0, 0, 449, 0, 1, 11, 1, 2, 18, 32, 0.0044859208271743846, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, src_name_0; source", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "mov     [rbp+earlier_file], rdx", "call    same_name", "test    al, al", "mov     rdx, [rbp+earlier_file]", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jz      loc_6B57"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],rdx", "call~FOO", "test~al,al", "mov~rdx,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 451, 0, 0, 2, 0, 1, 17, 33, 0.003186106882579184, ["cmp     qword ptr [r14+10h], 1", "ja      loc_6949"], ["cmp~[word ptr [r14+0],0", "ja~FOO"]], [1, 0, 275, 0, 0, 2, 0, 1, 11, 18, 0.11887800501540659, ["cmp     [rbp+earlier_file], 0", "jz      loc_4C72"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 276, 0, 1, 7, 0, 2, 10, 19, 0.11291761349011997, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "mov     byte ptr [rbp+delayed_ok], r8b", "call    src_to_dest_lookup", "movzx   r8d, byte ptr [rbp+delayed_ok]", "mov     [rbp+earlier_file], rax", "jmp     loc_497F"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 4, 16, 3, 5, 31, -1, 3.3092858561122513e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_617B"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 2, 18, -1, 0.0, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_4A22"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 40, -1, 0.005680940719659364, ["cmp     byte ptr [x_0+24h], 0", "jnz     loc_767B"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 117, 1, 1, 12, 3, 2, 20, 9, 0.0904924217353895, ["xor     esi, esi", "cmp     dword ptr [x_0+4], 2", "mov     eax, [rbp+var_268]", "mov     dst_mode_bits_0, src_name_0; file", "mov     dword ptr [rbp+ancestors], eax", "setz    sil", "xor     eax, eax", "shl     esi, 11h; flags", "call    open_safer", "test    eax, eax", "mov     [rbp+fildes], eax", "js      loc_6191"], ["xor~esi,esi", "cmp~[word ptr [x_0+0],0", "mov~eax,[rbp+0]", "mov~dst_mode_bits_0,src_name_0", "mov~[word ptr [rbp+0],eax", "setz~sil", "xor~eax,eax", "shl~esi,0", "call~FOO", "test~eax,eax", "mov~[rbp+0],eax", "js~FOO"]], [1, 0, 501, 0, 0, 2, 0, 1, 5, 25, 0.005278310940499039, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4BA0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 503, 0, 0, 2, 0, 1, 4, 26, 0.00350968149962127, ["cmp     byte ptr [x_0+23h], 0", "jz      loc_4AD0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 436, 0, 0, 5, 1, 1, 20, 33, 0.002002117942947912, ["mov     esi, [r14+18h]", "mov     ecx, esi", "and     ecx, 0F000h", "cmp     ecx, 0A000h", "jnz     loc_5FB0"], ["mov~esi,[r14+0]", "mov~ecx,esi", "and~ecx,0", "cmp~ecx,<STR>", "jnz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 13, -1, 0.007115454855212617, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, [rbp+earlier_file]; from", "call    _link", "test    eax, eax", "jz      loc_4E10"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 258, 0, 1, 6, 1, 2, 13, 20, 0.012325251321875851, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, src_name_0; old", "mov     byte ptr [rbp+delayed_ok], r8b", "call    _rename", "test    eax, eax", "jnz     loc_51A8"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 46, 0, 0, 3, 0, 1, 23, -1, 0.0030482199719078402, ["mov     rax, [rbp+device]", "cmp     [rbp+src_mode], rax", "jnz     loc_4F8C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 47, 0, 0, 5, 1, 1, 22, -1, 0.013148895801619345, ["cmp     [rbp+device], 0", "setnz   al", "and     al, [x_0+1Bh]", "mov     byte ptr [rbp+delayed_ok], al", "jnz     loc_61AD"], ["cmp~[rbp+0],0", "setnz~al", "and~al,[x_0+0]", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 1, 248, 0, 0, 2, 0, 1, 15, 18, 0.005879497871026099, ["cmp     eax, 12h", "jz      loc_5E40"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 45, 0, 0, 1, 0, 1, 24, -1, 3.676984284569168e-05, ["jmp     loc_5CA5"], ["jmp~FOO"]], [0, 0, 427, 0, 0, 1, 0, 1, 22, 35, 0.0001470793713827667, ["jmp     loc_58E1"], ["jmp~FOO"]], [1, 0, 20, 0, 1, 4, 0, 2, 14, -1, 0.005669909766805657, ["call    ___errno_location", "cmp     dword ptr [rax], 11h", "mov     src_name_0, rax", "jz      loc_5408"], ["call~FOO", "cmp~<TAG>,0", "mov~src_name_0,rax", "jz~FOO"]], [3, 0, 310, 0, 3, 18, 3, 4, 22, 24, 6.618571712224503e-05, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+earlier_file], r8b", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "movzx   r8d, byte ptr [rbp+earlier_file]", "mov     [rbp+dst_backup], 0", "mov     r12d, r8d", "xor     r8d, r8d", "jmp     loc_4610"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[rbp+0],0", "mov~r12d,r8d", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 315, 0, 0, 3, 1, 1, 21, 24, 0.005807796677477, ["movzx   r8d, byte ptr [x_0+27h]", "test    r8b, r8b", "jnz     loc_7174"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 27, 0, 1, 6, 1, 2, 31, -1, 0.0020664651679278725, ["mov     rdi, dest_link_val; s1", "mov     rsi, r14; s2", "call    _strcmp", "test    eax, eax", "mov     rdi, dest_link_val; ptr", "jnz     loc_770B"], ["mov~rdi,dest_link_val", "mov~rsi,r14", "call~FOO", "test~eax,eax", "mov~rdi,dest_link_val", "jnz~FOO"]], [0, 0, 418, 0, 0, 18, 0, 0, 21, 33, 0.00212161993219641, ["movdqa  xmm0, xmmword ptr [r14]", "movaps  xmmword ptr [rbp+dot_sb.st_dev], xmm0", "movdqa  xmm0, xmmword ptr [r14+10h]", "movaps  xmmword ptr [rbp+dot_sb.st_nlink], xmm0", "movdqa  xmm0, xmmword ptr [r14+20h]", "movaps  xmmword ptr [rbp+dot_sb.st_gid], xmm0", "movdqa  xmm0, xmmword ptr [r14+30h]", "movaps  xmmword ptr [rbp+dot_sb.st_size], xmm0", "movdqa  xmm0, xmmword ptr [r14+40h]", "movaps  xmmword ptr [rbp+dot_sb.st_blocks], xmm0", "movdqa  xmm0, xmmword ptr [r14+50h]", "movaps  xmmword ptr [rbp+dot_sb.st_atim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r14+60h]", "movaps  xmmword ptr [rbp+dot_sb.st_mtim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r14+70h]", "movaps  xmmword ptr [rbp+dot_sb.st_ctim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r14+80h]", "movaps  xmmword ptr [rbp+dot_sb.__glibc_reserved+8], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r14+0]", "movaps~[mmword ptr [rbp+0],xmm0"]], [1, 0, 66, 0, 1, 6, 1, 2, 21, -1, 0.006497231230833719, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_mode]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_61C6"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 18, 28, 0.0025858391981232656, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_637C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 17, 29, 0.0038893301270030356, ["cmp     edx, 3", "jz      loc_61E6"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 417, 0, 0, 3, 0, 1, 22, 32, 0.006294997095182415, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     loc_47C1"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 419, 0, 1, 10, 1, 2, 21, 33, 0.0038828954045050414, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_59E2"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 67, 2, 1, 18, 2, 1, 33, -1, 0.045594605128657685, ["lea     rdi, [r9+rcx]; n", "mov     [rbp+nbytes], rcx", "call    xmalloc", "mov     rcx, [rbp+abase]", "mov     [rbp+ptr], rax", "xor     edx, edx", "xor     r9d, r9d", "mov     byte ptr [rbp+abase], r14b", "mov     [rbp+length], 0", "lea     rsi, [rax+rcx-1]", "mov     rax, rsi", "div     rcx", "mov     rcx, [rbp+nbytes]", "mov     byte ptr [rbp+nbytes], bl", "mov     ebx, r9d", "mov     r14, rcx", "sub     rsi, rdx", "mov     [rbp+buf], rsi"], ["lea~rdi,<TAG>", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "mov~[rbp+0],rax", "xor~edx,edx", "xor~r9d,r9d", "mov~[yte ptr [rbp+0],r14b", "mov~[rbp+0],0", "lea~rsi,[rax+0]", "mov~rax,rsi", "div~,rcx", "mov~rcx,[rbp+0]", "mov~[yte ptr [rbp+0],bl", "mov~ebx,r9d", "mov~r14,rcx", "sub~rsi,rdx", "mov~[rbp+0],rsi"]], [0, 0, 69, 2, 0, 11, 2, 1, 32, -1, 0.024080570079643482, ["lea     rcx, [rsi+rax-1]", "xor     edx, edx", "mov     rax, rcx", "div     rsi", "sub     rcx, rdx", "setz    dl", "cmp     r8, rcx", "setb    al", "or      dl, al", "mov     byte ptr [rbp+restore_dst_mode], dl", "jz      short loc_6D52"], ["lea~rcx,[rsi+0]", "xor~edx,edx", "mov~rax,rcx", "div~,rsi", "sub~rcx,rdx", "setz~dl", "cmp~r8,rcx", "setb~al", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 0, 74, 1, 0, 6, 0, 1, 34, -1, 0.0013751921224288688, ["mov     rax, [rbp+dot_sb.st_size]", "mov     byte ptr [rbp+restore_dst_mode], 1", "cqo", "idiv    rsi", "cmp     [rbp+dot_sb.st_blocks], rax", "jl      loc_6D52"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rbp+0],0", "cqo~,", "idiv~,rsi", "cmp~[rbp+0],rax", "jl~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 32, -1, 0.02218692317309036, ["mov     byte ptr [rbp+restore_dst_mode], 1", "jmp     loc_6D52"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 2, 0, 0, 33, -1, 0.0, ["mov     byte ptr [rbp+restore_dst_mode], 0", "mov     rcx, rsi"], ["mov~[yte ptr [rbp+0],0", "mov~rcx,rsi"]], [1, 0, 279, 0, 0, 2, 0, 1, 10, 19, 0.09645220042996203, ["cmp     byte ptr [x_0+23h], 0", "jz      short loc_4C67"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 280, 0, 0, 1, 0, 0, 13, 20, 4.412381141483002e-05, ["nop"], ["nop"]], [2, 0, 348, 0, 0, 4, 1, 1, 19, 27, 0.004539543514657682, ["mov     ecx, [rbp+var_268]", "and     ecx, 0F000h", "cmp     ecx, 4000h", "jnz     loc_637C"], ["mov~ecx,[rbp+0]", "and~ecx,0", "cmp~ecx,0", "jnz~FOO"]], [0, 0, 350, 0, 0, 3, 1, 1, 20, 28, 0.0022849393175026897, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_61F1"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 416, 0, 0, 3, 0, 1, 23, 32, 0.0008309984483126319, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "jnz     loc_47C1"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 22, 32, 0.0022392834293026233, ["jmp     loc_47C1"], ["jmp~FOO"]], [2, 0, 4, 0, 3, 17, 2, 3, 16, -1, 0.0008383524168817703, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "mov     [rbp+format], r9", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aCannotMoveSToS; \"cannot move %s to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r9, [rbp+format]", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rax; format"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[rbp+0],r9", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r9,[rbp+0]", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rax"]], [1, 0, 412, 0, 0, 2, 0, 1, 24, 38, 0.0005864789933887822, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_55E0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 12, 0, 4, 19, 4, 4, 15, -1, 0.00022061905707415006, ["mov     rsi, [rbp+earlier_file]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, [rbp+dst_name]; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCreateHa; \"cannot create hard link %s to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     rdx, rax; format", "mov     r8, r12", "mov     rcx, r14", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,r14", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 18, -1, 0.0001139865128216442, ["jmp     loc_49C9"], ["jmp~FOO"]], [2, 0, 347, 0, 0, 3, 1, 1, 20, 26, 0.00430636142794459, ["and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_637C"], ["and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 0, 25, 37, 0.0016601584044829791, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 346, 0, 0, 2, 1, 1, 19, 25, 0.012186751580490412, ["test    edx, edx", "jnz     loc_637C"], ["test~edx,edx", "jnz~FOO"]], [2, 0, 349, 0, 0, 3, 1, 1, 18, 26, 0.0072736877455919086, ["and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6219"], ["and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 15, -1, 0.006888830057140336, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_5450"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [3, 0, 12, 0, 4, 22, 5, 5, 14, -1, 0.007258366977739537, ["mov     rsi, cs:top_level_dst_name; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, cs:top_level_src_name; name", "xor     edi, edi; n", "mov     r12, rax", "call    quote_n", "lea     rsi, aCannotCopyADir; \"cannot copy a directory, %s, into itsel\"...", "mov     src_name_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; format", "mov     rcx, r13", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+fildes]", "mov     byte ptr [rax], 1", "jmp     loc_4A17"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~src_name_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,r13", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 3, 14, 3, 4, 16, -1, 3.860833498797626e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_4A17"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 25, 0, 1, 6, 0, 2, 38, -1, 0.0005515476426853752, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aWritingS; \"writing %s\"", "jmp     loc_6E9A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 38, -1, 0.00020958810422044258, ["movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "jmp     loc_76EB"], ["movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [2, 0, 409, 0, 0, 3, 0, 1, 12, 36, 0.005571979418693296, ["cmp     dword ptr [rbp+ptr], 4000h", "mov     r11d, 1", "jnz     loc_47D4"], ["cmp~[word ptr [rbp+0],0", "mov~r11d,0", "jnz~FOO"]], [0, 0, 478, 0, 0, 3, 1, 1, 11, 34, 0.0018324864012864545, ["movzx   ecx, byte ptr [x_0+17h]", "test    cl, cl", "jnz     loc_5A18"], ["movzx~ecx,[yte ptr [x_0+0]", "test~cl,cl", "jnz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 21, 37, 0.00047616946485170723, ["jmp     loc_5A18"], ["jmp~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 39, -1, 0.0, ["mov     rax, rsi", "jmp     loc_6DF4"], ["mov~rax,rsi", "jmp~FOO"]], [1, 0, 67, 0, 0, 3, 0, 1, 38, -1, 0.00689434553356719, ["lea     rsi, [rax+8]", "cmp     qword ptr [rsi-8], 0", "jz      loc_7226"], ["lea~rsi,[rax+0]", "cmp~[word ptr [rsi-8]+0],0", "jz~FOO"]], [2, 0, 4, 0, 3, 17, 2, 4, 18, -1, 2.9415874276553343e-05, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, 1; n", "call    quote_n", "mov     rsi, src_name_0; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aInterDeviceMov; \"inter-device move failed: %s to %s; una\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rax", "mov     r9, [rbp+omitted_permissions]", "jmp     loc_520F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rsi,src_name_0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rax", "mov~r9,[rbp+0]", "jmp~FOO"]], [1, 0, 310, 0, 0, 3, 1, 1, 18, 24, 0.13870197552108995, ["xor     r12d, r12d", "mov     [rbp+dst_backup], 0", "jmp     loc_4610"], ["xor~r12d,r12d", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 328, 0, 0, 4, 1, 1, 17, 25, 0.13312399036139855, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6221"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 327, 0, 0, 2, 0, 1, 18, 25, 0.00880760302297135, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6221"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 105, 0, 0, 2, 1, 0, 26, 3, 0.007796125929357778, ["test    eax, eax", "jns     loc_7537"], ["test~eax,eax", "jns~FOO"]], [0, 0, 395, 0, 0, 3, 1, 1, 13, 38, 0.0005142875352684075, ["movzx   r11d, byte ptr [x_0+18h]", "test    r11b, r11b", "jz      loc_4E10"], ["movzx~r11d,[yte ptr [x_0+0]", "test~r11b,r11b", "jz~FOO"]], [2, 0, 309, 0, 0, 4, 0, 1, 23, 23, 0.0008806377361543158, ["cmp     qword ptr [x_0+30h], 0", "movzx   r12d, byte ptr [rbp+format]", "mov     [rbp+dst_backup], 0", "jnz     loc_4628"], ["cmp~[word ptr [x_0+0],0", "movzx~r12d,[yte ptr [rbp+0]", "mov~[rbp+0],0", "jnz~FOO"]], [1, 0, 94, 0, 0, 2, 0, 1, 26, -1, 0.00561475500253712, ["cmp     r8d, 11h", "jnz     loc_6BF8"], ["cmp~r8d,0", "jnz~FOO"]], [1, 0, 95, 0, 1, 13, 3, 1, 25, -1, 0.06471492340841735, ["mov     r12d, dword ptr [rbp+omitted_permissions]", "mov     rdi, [rbp+dst_name]; file", "xor     eax, eax", "mov     esi, 0C1h; flags", "not     r12d", "and     r12d, dword ptr [rbp+x]", "mov     edx, r12d", "call    open_safer", "mov     rcx, [rbp+device]", "test    eax, eax", "mov     [rbp+mode], eax", "mov     r8d, [rcx]", "jns     loc_6BF8"], ["mov~r12d,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "xor~eax,eax", "mov~esi,0", "not~r12d", "and~r12d,[word ptr [rbp+0]", "mov~edx,r12d", "call~FOO", "mov~rcx,[rbp+0]", "test~eax,eax", "mov~[rbp+0],eax", "mov~r8d,<TAG>", "jns~FOO"]], [0, 0, 490, 0, 0, 2, 1, 1, 6, 24, 0.004346072858217937, ["test    r14b, r14b", "jnz     loc_5238"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 394, 0, 0, 1, 0, 0, 14, 37, 0.0014560857766893903, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 6, 0, 1, 4, 1, 2, 17, -1, 0.004588876387142321, ["mov     rsi, [rbp+dst_name]; new", "call    _rename", "test    eax, eax", "jnz     loc_5630"], ["mov~rsi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 393, 0, 0, 2, 1, 0, 13, 36, 0.005748964928923894, ["mov     eax, [x_0+8]", "xor     r14d, r14d"], ["mov~eax,[x_0+0]", "xor~r14d,r14d"]], [1, 0, 395, 0, 0, 2, 0, 1, 12, 30, 0.0851388551831996, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5A40"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 303, 0, 0, 3, 1, 1, 11, 22, 0.006329805879743005, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_5240"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 391, 0, 0, 2, 0, 1, 15, 34, 0.013669189077885882, ["cmp     eax, 3", "jz      loc_64A4"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 392, 0, 0, 2, 0, 1, 14, 35, 0.015181042449557902, ["cmp     eax, 2", "jz      loc_5FEC"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 290, 0, 0, 1, 0, 1, 14, 23, 3.676984284569168e-05, ["jmp     loc_4B23"], ["jmp~FOO"]], [1, 0, 390, 0, 0, 2, 0, 1, 16, 33, 0.013840781677832443, ["cmp     eax, 4", "jz      loc_6452"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 311, 0, 0, 2, 0, 1, 22, 23, 0.005693810164655357, ["cmp     byte ptr [rbp+format], 0", "jz      loc_7250"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 409, 0, 0, 3, 1, 1, 11, 31, 0.09362901189626979, ["xor     r11d, r11d", "cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_5260"], ["xor~r11d,r11d", "cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 383, 0, 0, 2, 1, 1, 17, 32, 0.019599551898181855, ["test    r14b, r14b", "jz      loc_5709"], ["test~r14b,r14b", "jz~FOO"]], [2, 0, 75, 0, 0, 4, 1, 1, 33, -1, 0.002117942947911841, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_6CA6"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 32, -1, 0.002996742191923872, ["cmp     eax, 2", "jnz     loc_6CA6"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 19, -1, 8.273214640280628e-05, ["cmp     [rbp+omitted_permissions], 0", "jz      short loc_5A98"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 371, 0, 0, 7, 2, 1, 13, 29, 0.08908058233625774, ["mov     eax, [rbp+var_1D8]", "xor     r9d, 1", "mov     r14d, r9d", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_57A8"], ["mov~eax,[rbp+0]", "xor~r9d,0", "mov~r14d,r9d", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 16, -1, 0.0007032232444238533, ["mov     rax, [rbp+omitted_permissions]", "mov     byte ptr [rax], 1"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 9, 0, 0, 2, 0, 1, 15, -1, 0.002196385279315983, ["cmp     [rbp+omitted_permissions], 0", "jnz     loc_5A85"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 372, 0, 0, 2, 0, 1, 18, 29, 0.023038145034968118, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_528C"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 17, -1, 0.0009823676346940625, ["test    r14b, r14b", "jz      loc_4E10"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 16, -1, 0.0006836126615728179, ["jmp     loc_5A8F"], ["jmp~FOO"]], [2, 0, 21, 0, 3, 17, 3, 4, 27, -1, 0.0010681639346673433, ["mov     rdi, [rbp+dst_name]; name", "mov     dword ptr [rbp+ptr], r8d", "call    quote", "lea     rsi, aCannotCreateRe; \"cannot create regular file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+ptr]", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, r8d; errnum", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_5B8F"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "mov~esi,r8d", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 86, 0, 0, 3, 0, 1, 26, -1, 0.05928034063582412, ["cmp     [rbp+mode], 0", "mov     r12d, 1", "js      loc_6A4A"], ["cmp~[rbp+0],0", "mov~r12d,0", "js~FOO"]], [1, 0, 93, 0, 0, 2, 0, 1, 27, -1, 0.004743309727094226, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6B8B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 48, 0, 1, 13, 3, 2, 22, -1, 0.029778057228583406, ["mov     eax, dword ptr [rbp+omitted_permissions]", "mov     rsi, [rbp+dst_name]; path", "lea     rcx, [rbp+var_2E8]; dev", "xor     edi, edi; ver", "mov     [rbp+var_2E8], 0", "not     eax", "and     eax, [rbp+mode]", "mov     edx, eax; mode", "mov     r14d, eax", "call    ___xmknod", "test    eax, eax", "mov     byte ptr [rbp+delayed_ok], 1", "jz      loc_4F8C"], ["mov~eax,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "mov~[rbp+0],0", "not~eax", "and~eax,[rbp+0]", "mov~edx,eax", "mov~r14d,eax", "call~FOO", "test~eax,eax", "mov~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 1, 79, 0, 0, 2, 0, 1, 21, -1, 0.05183260896742928, ["cmp     dword ptr [rbp+ptr], 1000h", "jz      loc_625C"], ["cmp~[word ptr [rbp+0],<STR>", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 18, -1, 0.00047800795699399183, ["movzx   ebx, byte ptr [x_0+27h]", "test    bl, bl", "jz      loc_4E10"], ["movzx~ebx,[yte ptr [x_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 367, 0, 0, 2, 0, 1, 16, 28, 0.006693337059344075, ["cmp     byte ptr [rbp+format], 0", "jnz     loc_574F"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 24, 0, 3, 17, 4, 4, 28, -1, 0.0004081452555871776, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "xor     r12d, r12d", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_6EBC"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "xor~r12d,r12d", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 84, 0, 1, 8, 1, 2, 27, -1, 0.05856332870033314, ["lea     rax, [rbp+timespec]", "mov     esi, [rbp+mode]; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rbp+delayed_ok], rax", "call    ___fxstat", "test    eax, eax", "jnz     loc_7266"], ["lea~rax,[rbp+0]", "mov~esi,[rbp+0]", "mov~edi,0", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 322, 0, 0, 4, 1, 1, 21, 24, 0.004002397393753539, ["xor     r8d, r8d", "cmp     dword ptr [x_0+4], 2", "mov     [rbp+dst_backup], 0", "jnz     loc_4610"], ["xor~r8d,r8d", "cmp~[word ptr [x_0+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [1, 0, 324, 0, 0, 2, 0, 1, 20, 25, 0.0028845941712445124, ["cmp     byte ptr [x_0+1Fh], 0", "jz      loc_6A9C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 47, 0, 1, 6, 2, 2, 23, -1, 0.0009376309925651378, ["mov     rdi, [rbp+dst_name]; path", "mov     esi, r14d", "and     esi, 0FFFFEFFFh; mode", "call    _mkfifo", "test    eax, eax", "jz      loc_4F8C"], ["mov~rdi,[rbp+0]", "mov~esi,r14d", "and~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 393, 0, 0, 3, 0, 1, 21, 36, 0.003089279629752195, ["mov     eax, [x_0+8]", "mov     r14d, r11d", "jmp     loc_5A47"], ["mov~eax,[x_0+0]", "mov~r14d,r11d", "jmp~FOO"]], [1, 0, 407, 0, 0, 2, 0, 1, 20, 37, 0.0008273214640280627, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_72B3"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 406, 0, 0, 3, 1, 1, 21, 37, 0.0002530990849211777, ["movzx   r14d, byte ptr [x_0+26h]", "test    r14b, r14b", "jz      loc_72B3"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 502, 0, 0, 4, 1, 1, 5, 26, 0.0004666093057118275, ["mov     r8d, [x_0]", "mov     rdi, [x_0+38h]; ht", "test    r8d, r8d", "jz      loc_4AA8"], ["mov~r8d,<TAG>", "mov~rdi,[x_0+0]", "test~r8d,r8d", "jz~FOO"]], [2, 0, 350, 0, 0, 4, 1, 1, 17, 27, 0.004628710383558488, ["mov     ecx, [rbp+var_268]", "and     ecx, 0F000h", "cmp     ecx, 4000h", "jnz     loc_637C"], ["mov~ecx,[rbp+0]", "and~ecx,0", "cmp~ecx,0", "jnz~FOO"]], [0, 0, 499, 0, 0, 2, 0, 1, 7, 26, 0.0018237842051463072, ["mov     rdi, [x_0+38h]", "jmp     loc_45E1"], ["mov~rdi,[x_0+0]", "jmp~FOO"]], [0, 0, 310, 0, 0, 1, 0, 1, 23, 24, 0.0011288341753627345, ["jmp     loc_4610"], ["jmp~FOO"]], [0, 0, 350, 0, 0, 2, 0, 1, 17, 27, 0.0011043209467989402, ["mov     eax, [rbp+var_1D8]", "jmp     loc_52C7"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 347, 0, 0, 2, 1, 1, 19, 28, 0.0007501047940521102, ["test    edx, edx", "jnz     loc_637C"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 67, 0, 0, 1, 0, 1, 35, -1, 0.04018576124605643, ["jz      loc_73A6"], ["jz~FOO"]], [0, 0, 67, 0, 1, 7, 1, 2, 34, -1, 0.04604319721137512, ["mov     rsi, [rbp+buf]; buf", "mov     edi, [rbp+fildes]; fd", "mov     rdx, r14; nbytes", "call    _read", "test    rax, rax", "mov     rcx, rax", "js      loc_6E64"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "mov~rdx,r14", "call~FOO", "test~rax,rax", "mov~rcx,rax", "js~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 42, -1, 0.00030518969561924096, ["movzx   ebx, byte ptr [rbp+restore_dst_mode]", "jmp     loc_6DAF"], ["movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 71, 0, 0, 3, 0, 0, 32, -1, 0.001011170678256521, ["mov     rdx, [rbp+dot_sb.st_size]", "cmp     rax, rdx", "jbe     loc_6D25"], ["mov~rdx,[rbp+0]", "cmp~rax,rdx", "jbe~FOO"]], [6, 1, 72, 1, 1, 23, 1, 2, 31, -1, 0.02634191541465352, ["mov     rdi, [rbp+dot_sb.st_blksize]", "mov     rax, 1FFFFFFFFFFFFFFFh", "mov     r8, 7FFFFFFFFFFFFFFFh", "sub     r8, r9", "mov     rsi, rcx; b", "mov     [rbp+restore_dst_mode], r9", "mov     [rbp+ptr], r8", "lea     rdx, [rdi-1]", "cmp     rdx, rax", "mov     eax, 200h", "mov     rdx, r8; lcm_max", "cmova   rdi, rax; a", "call    buffer_lcm", "mov     edx, [rbp+dot_sb.st_mode]", "cmp     rax, 2000h", "mov     rsi, rax", "mov     eax, 2000h", "mov     r8, [rbp+ptr]", "mov     r9, [rbp+restore_dst_mode]", "cmovnb  rax, rsi", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      loc_72E7"], ["mov~rdi,[rbp+0]", "mov~rax,0", "mov~r8,0", "sub~r8,r9", "mov~rsi,rcx", "mov~[rbp+0],r9", "mov~[rbp+0],r8", "lea~rdx,[rdi-1]+0]", "cmp~rdx,rax", "mov~eax,<STR>", "mov~rdx,r8", "cmova~rdi,rax", "call~FOO", "mov~edx,[rbp+0]", "cmp~rax,0", "mov~rsi,rax", "mov~eax,0", "mov~r8,[rbp+0]", "mov~r9,[rbp+0]", "cmovnb~rax,rsi", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 70, 0, 0, 2, 0, 1, 33, -1, 0.0, ["lea     rax, [rdx+1]", "jmp     loc_6D25"], ["lea~rax,[rdx+0]", "jmp~FOO"]], [1, 0, 113, 0, 1, 6, 1, 2, 21, 8, 0.0890078393304947, ["mov     esi, [rbp+fildes]; fildes", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_62DB"], ["mov~esi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 78, 0, 0, 3, 0, 1, 31, -1, 0.026882432104485186, ["mov     eax, [x_0+0Ch]", "cmp     eax, 3", "jz      loc_74D3"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [4, 1, 79, 2, 0, 16, 2, 1, 30, -1, 0.054463491223038514, ["xor     edx, edx", "mov     eax, 8", "div     rcx", "mov     rcx, qword ptr [rbp+var_A0+8]", "lea     rdx, [rcx-1]", "imul    rax, rsi", "mov     esi, 200h", "mov     [rbp+abase], rax", "lea     r9, [rax+7]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "cmova   rcx, rsi", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_7300"], ["xor~edx,edx", "mov~eax,0", "div~,rcx", "mov~rcx,[word ptr [rbp+0]", "lea~rdx,[rcx-1]+0]", "imul~rax,rsi", "mov~esi,<STR>", "mov~[rbp+0],rax", "lea~r9,[rax+0]", "mov~rax,0", "cmp~rdx,rax", "mov~eax,[word ptr [rbp+0]", "cmova~rcx,rsi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 19, 10, 0.14363036012384084, ["mov     eax, dword ptr [rbp+ptr]", "cmp     eax, 8000h", "jz      loc_5AE0"], ["mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 1, 183, 0, 0, 5, 1, 1, 20, 10, 0.05247424272508659, ["cmp     eax, 0A000h", "setnz   al", "and     al, [x_0+14h]", "mov     byte ptr [rbp+restore_dst_mode], al", "jnz     loc_5AE0"], ["cmp~eax,<STR>", "setnz~al", "and~al,[x_0+0]", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [1, 0, 309, 0, 0, 2, 0, 1, 8, 23, 0.1814038971130771, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4B08"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 308, 0, 0, 2, 0, 1, 9, 23, 0.009173953223857256, ["cmp     qword ptr [x_0+30h], 0", "jz      loc_4B08"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 1, 296, 0, 0, 4, 1, 1, 13, 23, 0.0033110017821117166, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_4B08"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 295, 0, 1, 7, 1, 2, 14, 23, 0.0010239175571096944, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     byte ptr [rbp+earlier_file], r8b", "call    seen_file", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_4B08"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 298, 0, 1, 9, 1, 2, 13, 23, 0.0012317897353306712, ["lea     r14, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r8b", "mov     rdx, r14; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "jnz     loc_4B08"], ["lea~r14,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,r14", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 344, 0, 0, 6, 2, 1, 18, 26, 0.003937437338059483, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      loc_57BE"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 345, 0, 1, 6, 0, 2, 17, 27, 0.012714398825326084, ["mov     rdi, src_name_0; name", "mov     byte ptr [rbp+earlier_file], r8b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_6B0E"], ["mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~<TAG>,0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 19, -1, 0.004533721622873784, ["mov     rsi, [rbp+dst_name]; to", "mov     dst_mode_bits_0, src_name_0; from", "call    _link", "test    eax, eax", "jz      loc_4DC9"], ["mov~rsi,[rbp+0]", "mov~dst_mode_bits_0,src_name_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 187, 0, 0, 3, 1, 1, 18, 11, 0.14923408417352424, ["movzx   r14d, byte ptr [x_0+17h]", "test    r14b, r14b", "jnz     loc_5310"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jnz~FOO"]], [2, 0, 21, 0, 4, 17, 3, 5, 22, -1, 0.007220677888822704, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+ptr], rax", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+ptr]", "mov     esi, [rax]; errnum", "mov     rdx, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_5B8F"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~rdx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 343, 0, 0, 2, 0, 1, 19, 27, 0.0006195718519499048, ["cmp     al, 2Fh ; '/'", "jnz     loc_639C"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 289, 0, 0, 3, 1, 0, 11, 22, 0.0028202469462645517, ["test    r8b, r8b", "mov     edx, 0", "cmovnz  rdx, [rbp+dst_backup]; backup_dst_name"], ["test~r8b,r8b", "mov~edx,0", "cmovnz~rdx,[rbp+0]"]], [0, 0, 290, 0, 0, 1, 0, 1, 13, 23, 3.676984284569168e-05, ["jmp     loc_4B23"], ["jmp~FOO"]], [0, 0, 329, 0, 0, 1, 0, 1, 20, 26, 0.0006306028048036123, ["jmp     loc_57BE"], ["jmp~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 24, -1, 0.0020296953250821806, ["cmp     qword ptr [r15+30h], 0", "jz      loc_4F99"], ["cmp~[word ptr [r15+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 23, -1, 0.031153249351012276, ["cmp     byte ptr [rbp+format], 0", "jnz     loc_632A"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 111, 0, 0, 3, 0, 1, 22, 7, 0.0804156463035277, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+ino], rax", "jnz     short loc_5B55"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 1, 467, 0, 0, 4, 1, 1, 17, 34, 0.005293018877637317, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5590"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 469, 0, 0, 5, 1, 1, 16, 35, 0.004382965267206448, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "mov     rdx, [rbp+delayed_ok]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6B31"], ["mov~eax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 466, 0, 0, 2, 0, 1, 18, 33, 0.006118501849523095, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_5590"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 110, 0, 0, 3, 0, 1, 23, 6, 0.07895220655826918, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jz      loc_69D0"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 32, 0, 1, 7, 1, 2, 25, -1, 0.0010185246468256595, ["lea     r14, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, r14; stat_buf", "call    ___lxstat", "test    eax, eax", "jnz     loc_4F99"], ["lea~r14,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 289, 0, 0, 5, 2, 1, 7, 22, 0.005256494167077264, ["mov     r12d, r8d", "mov     [rbp+dst_backup], 0", "xor     r8d, r8d", "xor     edx, edx", "jmp     loc_4B33"], ["mov~r12d,r8d", "mov~[rbp+0],0", "xor~r8d,r8d", "xor~edx,edx", "jmp~FOO"]], [2, 0, 310, 0, 0, 3, 0, 1, 22, 24, 0.0011288341753627345, ["mov     r12d, 1", "mov     [rbp+dst_backup], 0", "jmp     loc_4610"], ["mov~r12d,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 313, 0, 1, 5, 0, 2, 21, 25, 0.001513691863814308, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     __old, rax", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_7351"], ["call~FOO", "cmp~<TAG>,0", "mov~__old,rax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 292, 0, 0, 2, 0, 1, 11, 21, 0.0030972464290354293, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_4B5C"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 291, 0, 0, 2, 0, 1, 12, 21, 0.0007023039983527111, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_4B5C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 31, 0, 1, 5, 0, 2, 26, -1, 0.0, ["mov     rdi, [r15+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r14; stats", "call    record_file", "jmp     loc_4F99"], ["mov~rdi,[r15+0]", "mov~rsi,[rbp+0]", "mov~rdx,r14", "call~FOO", "jmp~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 23, -1, 0.0011600885417815724, ["mov     byte ptr [rbp+restore_dst_mode], 0", "jmp     loc_5C65"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 64, 0, 0, 5, 1, 1, 22, -1, 0.0048720041770541475, ["mov     r14d, [rbp+var_1D8]", "mov     eax, r14d", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      loc_6370"], ["mov~r14d,[rbp+0]", "mov~eax,r14d", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 21, 0, 3, 14, 4, 3, 23, -1, 0.00015443333995190505, ["mov     rdi, src_name_0; name", "call    quote", "lea     rsi, aSkippingFileSA; \"skipping file %s, as it was replaced wh\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rbp+ptr], 0"], ["mov~rdi,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 404, 0, 0, 2, 0, 1, 22, 37, 0.00010234272925384183, ["mov     r11d, r14d", "jmp     loc_47E5"], ["mov~r11d,r14d", "jmp~FOO"]], [1, 0, 13, 0, 2, 8, 0, 3, 23, -1, 0.0001250174656753517, ["mov     rdi, r12; ptr", "call    free", "mov     rdi, [rbp+dst_name]; name", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSCanMakeRelati; \"%s: can make relative symbolic links on\"...", "jmp     loc_4D47"], ["mov~rdi,r12", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 13, 0, 1, 5, 0, 1, 20, -1, 0.00112699568322045, ["mov     dst_mode_bits_0, src_name_0; name", "call    quote", "lea     rsi, aCannotCopyCycl; \"cannot copy cyclic symbolic link %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~dst_mode_bits_0,src_name_0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 346, 0, 0, 2, 1, 1, 16, 26, 0.13413699953179734, ["test    edx, edx", "jnz     loc_637C"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 20, 0, 1, 4, 1, 2, 23, -1, 0.013092821791279664, ["mov     edi, [rbp+fildes]; fd", "call    _close", "test    eax, eax", "js      loc_6722"], ["mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 29, -1, 0.0025545848317044292, ["mov     r14d, r12d", "jmp     loc_5B8F"], ["mov~r14d,r12d", "jmp~FOO"]], [1, 0, 21, 0, 3, 15, 3, 4, 29, -1, 0.0025545848317044292, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aClosingS; \"closing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_5B8F"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 21, 0, 1, 6, 3, 2, 30, -1, 0.0003088666799038101, ["xor     edi, edi; status", "xor     eax, eax", "xor     r14d, r14d", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_5B8F"], ["xor~edi,edi", "xor~eax,eax", "xor~r14d,r14d", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 323, 0, 0, 3, 1, 1, 18, 26, 0.009615313904148368, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     short loc_63BC"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 487, 0, 0, 1, 0, 0, 7, 27, 0.0029304339086588067, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 92, 0, 1, 8, 1, 2, 28, -1, 0.00402262080731867, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     dword ptr [rbp+ptr], r8d", "call    ___lxstat", "test    eax, eax", "mov     r8d, dword ptr [rbp+ptr]", "jnz     short loc_6BF8"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "test~eax,eax", "mov~r8d,[word ptr [rbp+0]", "jnz~FOO"]], [2, 0, 322, 0, 0, 4, 1, 1, 19, 25, 0.004137832981568504, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6FEE"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 235, 0, 0, 5, 2, 1, 15, 14, 0.1089128873396525, ["mov     ecx, edi", "and     ecx, 3Fh", "test    al, al", "mov     dword ptr [rbp+omitted_permissions], ecx", "jz      loc_4CE6"], ["mov~ecx,edi", "and~ecx,0", "test~al,al", "mov~[word ptr [rbp+0],ecx", "jz~FOO"]], [1, 0, 240, 0, 0, 3, 0, 1, 14, 15, 0.19185400901596547, ["cmp     byte ptr [x_0+1Ch], 0", "movzx   eax, byte ptr [x_0+21h]", "jnz     loc_4E20"], ["cmp~[yte ptr [x_0+0],0", "movzx~eax,[yte ptr [x_0+0]", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 25, -1, 0.006378648487656364, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4E10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 1, 91, 0, 0, 4, 1, 1, 29, -1, 0.0028570167891102433, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_6BF8"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 37, -1, 0.02103602709202021, ["cmp     byte ptr [x_0+1Eh], 0", "jnz     loc_75CD"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 44, 0, 0, 3, 0, 1, 40, -1, 0.0007206889197755569, ["movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "jmp     loc_73C1"], ["movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 26, -1, 0.0037284620645531364, ["cmp     qword ptr [x_0+30h], 0", "jz      loc_4E10"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 30, -1, 0.0019230627808296747, ["cmp     byte ptr [x_0+29h], 0", "jz      loc_7587"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 42, 0, 1, 14, 1, 2, 38, -1, 0.002323854067847714, ["mov     rax, [rbp+var_238]", "mov     rsi, [rbp+dst_name]; file", "lea     rdx, [rbp+var_2A0]; timespec", "mov     edi, [rbp+mode]; fd", "mov     [rbp+var_2A0.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+var_2A0.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+var_290], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+var_288], rax", "call    gl_futimens", "test    eax, eax", "jz      loc_73CC"], ["mov~rax,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 41, 0, 3, 16, 3, 4, 39, -1, 0.001312683389591193, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+restore_dst_mode], rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, [rbp+restore_dst_mode]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+20h], 0", "jz      loc_73CC"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 495, 0, 0, 2, 0, 1, 7, 27, 0.010389073963764544, ["cmp     byte ptr [x_0+14h], 0", "jz      loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 494, 0, 0, 3, 0, 1, 8, 27, 0.00015443333995190505, ["mov     eax, dword ptr [rbp+ptr]", "cmp     eax, 4000h", "jz      loc_4BB0"], ["mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 1, 493, 0, 0, 2, 0, 1, 9, 27, 0.00011030952853707503, ["cmp     eax, 0A000h", "jz      loc_4BB0"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 492, 0, 0, 2, 0, 1, 8, 27, 0.0021767746964649476, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 491, 0, 0, 2, 0, 1, 9, 27, 0.0003235746170420868, ["cmp     byte ptr [x_0+25h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 490, 0, 0, 2, 0, 1, 10, 27, 0.00025371191563527257, ["cmp     byte ptr [x_0+17h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 489, 0, 0, 3, 1, 1, 11, 27, 0.00017649524565932007, ["mov     edi, [x_0]", "test    edi, edi", "jnz     loc_4BB0"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 488, 0, 0, 2, 0, 1, 12, 27, 9.192460711422919e-05, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_4BB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 39, 0, 0, 3, 0, 1, 39, -1, 0.004460181937182401, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+14h]", "cmp     [rbp+owner], eax", "jnz     short loc_73EF"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 312, 0, 1, 4, 0, 2, 9, 25, 0.015049896676741604, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r12, rax", "jz      loc_45F9"], ["call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "jz~FOO"]], [0, 0, 320, 0, 2, 11, 1, 3, 19, 26, 0.005580436482547808, ["mov     esi, [x_0]; backup_type", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+earlier_file], r8b", "call    find_backup_file_name", "mov     rsi, src_name_0; s2", "mov     rdi, rax; s1", "mov     r12, rax", "call    _strcmp", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "jnz     loc_6EED"], ["mov~esi,<TAG>", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "mov~rsi,src_name_0", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 5, 0, 1, 7, 1, 2, 27, -1, 0.002492995344937896, ["lea     rbx, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, rbx; stat_buf", "call    ___lxstat", "test    eax, eax", "jz      loc_771D"], ["lea~rbx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 19, 32, 0.007469793574102265, ["jmp     loc_47C1"], ["jmp~FOO"]], [1, 0, 87, 0, 1, 8, 1, 1, 31, -1, 0.00024268096278156509, ["mov     rdi, [rbp+dst_name]; file", "mov     edx, r12d", "mov     esi, 41h ; 'A'; flags", "xor     eax, eax", "call    open_safer", "mov     [rbp+mode], eax", "mov     rax, [rbp+device]", "mov     r8d, [rax]"], ["mov~rdi,[rbp+0]", "mov~edx,r12d", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8d,<TAG>"]], [0, 0, 4, 0, 1, 5, 0, 2, 28, -1, 0.0, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, rbx; stats", "call    record_file", "jmp     loc_5BF2"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~rdx,rbx", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 1, 5, 1, 2, 19, -1, 0.004531883130731499, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, src_name_0; from", "call    _symlink", "test    eax, eax", "jnz     loc_53B0"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 21, -1, 0.0003548289834609247, ["lea     rsi, aBackingUpSWoul; \"backing up %s would destroy source;  %s\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [0, 0, 19, 0, 1, 4, 1, 2, 15, -1, 0.004048359697310654, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_64F4"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 283, 0, 0, 3, 0, 1, 11, 21, 0.0023054691464248684, ["cmp     byte ptr [rbp+format], 0", "mov     eax, [x_0+4]", "jz      short loc_4C46"], ["cmp~[yte ptr [rbp+0],0", "mov~eax,[x_0+0]", "jz~FOO"]], [0, 0, 15, 0, 1, 5, 1, 2, 17, -1, 0.0009394694847074224, ["mov     rsi, [rbp+dst_name]; to", "mov     rdi, [rbp+earlier_file]; from", "call    _link", "test    eax, eax", "jz      loc_4E10"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 67, 1, 0, 3, 0, 1, 39, -1, 0.004967605768452946, ["add     rax, 1", "cmp     byte ptr [rax-1], 0", "jz      short loc_6E03"], ["add~rax,0", "cmp~[yte ptr [rax-1]+0],0", "jz~FOO"]], [1, 0, 82, 0, 1, 5, 0, 2, 28, -1, 0.05651524845382811, ["call    _getpagesize", "movsxd  rsi, eax", "mov     ecx, 8", "mov     rax, rsi", "jmp     short loc_6C49"], ["call~FOO", "movsxd~rsi,eax", "mov~ecx,0", "mov~rax,rsi", "jmp~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 30, -1, 0.0, ["mov     rcx, rdx"], ["mov~rcx,rdx"]], [0, 0, 82, 1, 0, 5, 2, 1, 29, -1, 0.056132842088232916, ["xor     edx, edx", "div     rcx", "mov     rax, rcx", "test    rdx, rdx", "jnz     short loc_6C46"], ["xor~edx,edx", "div~,rcx", "mov~rax,rcx", "test~rdx,rdx", "jnz~FOO"]], [3, 0, 315, 1, 3, 23, 5, 4, 20, 25, 0.003767683230255207, ["or      rdx, 0FFFFFFFFFFFFFFFFh", "mov     byte ptr [rbp+earlier_file], r8b", "xor     eax, eax", "mov     rcx, rdx", "mov     rdi, __old", "mov     rsi, __old; src", "repne scasb", "mov     rdx, rcx", "not     rdx; n", "lea     rax, [__len+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+390h+var_388+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, __old; ptr", "mov     [rbp+dst_backup], rax", "call    free", "mov     rsi, [rbp+dst_backup]; new", "mov     rdi, [rbp+dst_name]; old", "call    _rename", "test    eax, eax", "jz      loc_7210"], ["or~rdx,0", "mov~[yte ptr [rbp+0],r8b", "xor~eax,eax", "mov~rcx,rdx", "mov~rdi,__old", "mov~rsi,__old", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rax,[__len+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,__old", "mov~[rbp+0],rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 389, 0, 0, 2, 0, 1, 17, 33, 0.0004338841455791618, ["cmp     byte ptr [x_0+28h], 0", "jz      loc_5A62"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 28, 0, 0, 3, 0, 1, 41, -1, 0.0034673961803487253, ["cmp     dword ptr [rbp+omitted_permissions], 0", "mov     r12d, 1", "jz      loc_6EBC"], ["cmp~[word ptr [rbp+0],0", "mov~r12d,0", "jz~FOO"]], [1, 0, 260, 0, 0, 1, 0, 0, 11, 18, 0.09663788813633277, ["mov     [rbp+earlier_file], 0"], ["mov~[rbp+0],0"]], [1, 0, 473, 0, 1, 13, 1, 2, 13, 32, 0.0038461255616593494, ["lea     r14, [rbp+dot_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "mov     rdx, r14; stat_buf", "mov     byte ptr [rbp+earlier_file], cl", "call    ___lxstat", "test    eax, eax", "movzx   ecx, byte ptr [rbp+earlier_file]", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jnz     loc_47C1"], ["lea~r14,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,r14", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 472, 0, 1, 13, 1, 2, 14, 32, 0.0011030952853707504, ["lea     rax, [rbp+timespec]", "mov     rsi, src_name_0; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "mov     rdx, rax; stat_buf", "mov     byte ptr [rbp+restore_dst_mode], cl", "mov     [rbp+delayed_ok], rax", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_47C1"], ["lea~rax,[rbp+0]", "mov~rsi,src_name_0", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,rax", "mov~[yte ptr [rbp+0],cl", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 414, 0, 0, 2, 0, 1, 15, 32, 0.006263129898049483, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_47C1"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 413, 0, 0, 2, 0, 1, 16, 32, 0.00038056787345290885, ["cmp     dword ptr [x_0+4], 2", "jz      loc_47C1"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 1, 412, 0, 0, 4, 1, 1, 17, 32, 0.0002187805649318655, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_47C1"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 411, 0, 0, 4, 1, 1, 18, 32, 4.963928784168377e-05, ["mov     eax, [r14+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_47C1"], ["mov~eax,[r14+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 410, 0, 0, 1, 0, 1, 16, 32, 0.006469041017985356, ["jmp     loc_47C1"], ["jmp~FOO"]], [1, 1, 453, 0, 0, 5, 1, 1, 15, 32, 0.011171903917949323, ["mov     esi, [r14+18h]", "mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_47C1"], ["mov~esi,[r14+0]", "mov~eax,esi", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 430, 0, 0, 3, 0, 1, 18, 32, 0.008558180922334738, ["mov     rcx, [r14+8]", "cmp     [rdx+8], rcx", "jnz     loc_47C1"], ["mov~rcx,[r14+0]", "cmp~[rdx+0],rcx", "jnz~FOO"]], [0, 0, 429, 0, 0, 3, 0, 1, 19, 32, 0.000843867893308624, ["mov     rcx, [r14]", "cmp     [rdx], rcx", "jnz     loc_47C1"], ["mov~rcx,<TAG>", "cmp~<TAG>,rcx", "jnz~FOO"]], [1, 0, 423, 0, 1, 10, 1, 2, 18, 32, 0.013108448974489083, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, src_name_0; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_47C1"], ["lea~rdx,[rbp+0]", "mov~rsi,src_name_0", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 468, 0, 0, 2, 0, 1, 10, 32, 0.020594911544014733, ["cmp     dword ptr [x_0+4], 2", "jz      loc_5670"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 27, 0, 1, 4, 1, 2, 42, -1, 0.0022944381935711606, ["call    cached_umask", "not     eax", "test    dword ptr [rbp+omitted_permissions], eax", "jz      loc_6EBC"], ["call~FOO", "not~eax", "test~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 259, 0, 0, 3, 1, 1, 12, 17, 0.20037358160331223, ["movzx   r14d, byte ptr [x_0+18h]", "test    r14b, r14b", "jnz     loc_4E40"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jnz~FOO"]], [1, 0, 49, 0, 1, 6, 0, 2, 24, -1, 0.0017575984880240623, ["mov     rdx, [rbp+dst_mode]; dev", "mov     rsi, [rbp+var_1E8]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "cmp     byte ptr [x_0+27h], 0", "jnz     loc_670C"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 43, -1, 0.001158250049639288, ["mov     esi, dword ptr [rbp+x]; mode", "mov     edi, [rbp+mode]; fd", "call    _fchmod", "test    eax, eax", "jz      loc_6EBC"], ["mov~esi,[word ptr [rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 481, 0, 0, 3, 0, 1, 10, 33, 0.0018196169562904624, ["mov     rax, [rbp+dst_mode]", "cmp     [rbp+src_mode], rax", "jnz     loc_47B6"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 1, 242, 0, 0, 4, 1, 1, 13, 16, 0.19175840742456668, ["mov     edi, [rbp+mode]", "and     edi, 0FFFh", "cmp     byte ptr [x_0+24h], 0", "jz      short loc_4C9D"], ["mov~edi,[rbp+0]", "and~edi,<STR>", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 246, 0, 1, 6, 1, 2, 16, 17, 0.004298394628661357, ["mov     rdi, [rbp+dst_name]; name", "mov     [rbp+omitted_permissions], r9", "mov     r12d, r14d", "call    _unlink", "test    eax, eax", "jz      loc_4C80"], ["mov~rdi,[rbp+0]", "mov~[rbp+0],r9", "mov~r12d,r14d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 245, 0, 0, 3, 0, 1, 17, 17, 0.0008457063854509086, ["mov     r9, [rbp+omitted_permissions]", "cmp     dword ptr [r9], 2", "jz      loc_4C80"], ["mov~r9,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 1, 241, 0, 0, 2, 1, 0, 14, 16, 0.0, ["mov     edi, [x_0+10h]", "and     edi, 0FFFh"], ["mov~edi,[x_0+0]", "and~edi,<STR>"]], [0, 0, 388, 0, 1, 11, 1, 2, 18, 33, 3.370568927521737e-05, ["mov     esi, [rbp+var_1D8]; mode", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    writable_destination", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jnz     loc_5A62"], ["mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 21, -1, 0.012711334671755614, ["mov     byte ptr [rbp+restore_dst_mode], 0", "jmp     loc_5C8A"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 48, 0, 1, 5, 1, 2, 25, -1, 0.0, ["mov     rsi, [rbp+dst_name]; dst", "xor     edx, edx; backup_dst_name", "mov     rdi, src_name_0; src", "call    emit_verbose", "jmp     loc_5C8A"], ["mov~rsi,[rbp+0]", "xor~edx,edx", "mov~rdi,src_name_0", "call~FOO", "jmp~FOO"]], [1, 0, 477, 0, 0, 2, 0, 1, 12, 33, 0.0027540612291423066, ["cmp     dword ptr [x_0+4], 2", "jz      loc_778C"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 310, 0, 0, 3, 0, 1, 21, 24, 0.002257668350725469, ["mov     r12d, 1", "mov     r8d, 1", "jmp     loc_4610"], ["mov~r12d,0", "mov~r8d,0", "jmp~FOO"]], [1, 0, 237, 0, 0, 2, 0, 1, 15, 14, 0.08213218513370754, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_5618"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 25, 0, 3, 14, 3, 3, 44, -1, 1.4707937138276672e-05, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 24, 0, 0, 3, 1, 1, 42, -1, 0.00017649524565932007, ["movzx   r12d, byte ptr [x_0+20h]", "xor     r12d, 1", "jmp     loc_6EBC"], ["movzx~r12d,[yte ptr [x_0+0]", "xor~r12d,0", "jmp~FOO"]], [0, 0, 387, 0, 2, 9, 1, 3, 16, 34, 0.00047984644913627643, ["mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [r12+18h]; dst_sb", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    overwrite_prompt", "call    yesno", "test    al, al", "jz      loc_5FEC"], ["mov~rdi,[rbp+0]", "lea~rsi,[r12+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 233, 0, 1, 4, 0, 1, 17, 14, 0.0016417734830601334, ["mov     dword ptr [rbp+delayed_ok], edi", "call    ___errno_location", "mov     edi, dword ptr [rbp+delayed_ok]", "mov     dword ptr [rax], 5Fh ; '_'"], ["mov~[word ptr [rbp+0],edi", "call~FOO", "mov~edi,[word ptr [rbp+0]", "mov~<TAG>,0"]], [0, 0, 234, 0, 0, 1, 0, 1, 16, 15, 0.0002855791127682053, ["jmp     loc_4CCF"], ["jmp~FOO"]], [0, 1, 235, 0, 0, 5, 2, 1, 16, 15, 0.001256302963894465, ["mov     ecx, edi", "and     ecx, 12h", "test    al, al", "mov     dword ptr [rbp+omitted_permissions], ecx", "jnz     loc_4CCF"], ["mov~ecx,edi", "and~ecx,<STR>", "test~al,al", "mov~[word ptr [rbp+0],ecx", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 28, -1, 0.0010791948875210507, ["mov     eax, [rbp+var_1D0]", "cmp     [rbp+group], eax", "jnz     loc_4FC2"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 24, 0, 2, 10, 4, 2, 37, -1, 0.0032063302961443142, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "mov     rcx, r12", "xor     edi, edi; status", "xor     r12d, r12d", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "xor~edi,edi", "xor~r12d,r12d", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 25, 0, 1, 8, 0, 2, 42, -1, 0.0005515476426853752, ["mov     rdi, [rbp+dst_name]; name", "movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "call    quote", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "jmp     loc_6E9A"], ["mov~rdi,[rbp+0]", "movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 25, 0, 1, 7, 0, 1, 36, -1, 0.002937910443370765, ["mov     rdi, src_name_0; name", "movzx   r14d, byte ptr [rbp+abase]", "movzx   ebx, byte ptr [rbp+nbytes]", "call    quote", "lea     rsi, aReadingS; \"reading %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rdi,src_name_0", "movzx~r14d,[yte ptr [rbp+0]", "movzx~ebx,[yte ptr [rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 384, 0, 0, 4, 0, 1, 17, 33, 0.0013874487367107656, ["movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jmp     loc_5A62"], ["movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 24, -1, 0.006614894727939933, ["cmp     dword ptr [x_0+4], 3", "jnz     short loc_5D01"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 41, 0, 0, 1, 0, 0, 25, -1, 0.0, ["mov     dword ptr [rbp+dev+4], 2"], ["mov~[word ptr [rbp+0],0"]], [1, 0, 97, 0, 0, 2, 0, 1, 29, -1, 0.0015627183209418964, ["cmp     byte ptr [x_0+27h], 0", "jz      loc_69F6"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 99, 0, 1, 4, 1, 2, 28, 1, 0.004044682713026084, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_7796"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 78, 0, 0, 6, 1, 1, 17, -1, 0.0282521087504872, ["mov     rsi, [rbp+ancestors]", "mov     rdx, [rbp+ino]", "mov     rcx, [rbp+src_mode]", "test    rsi, rsi", "mov     rax, rsi", "jnz     short loc_4D24"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "test~rsi,rsi", "mov~rax,rsi", "jnz~FOO"]], [0, 0, 79, 0, 0, 1, 0, 1, 17, -1, 0.0003217361248998022, ["jmp     loc_4CF2"], ["jmp~FOO"]], [2, 0, 96, 0, 3, 13, 2, 4, 30, -1, 0.0, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_69F6"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 77, 0, 0, 2, 0, 1, 18, -1, 0.003675145792426883, ["cmp     [rax+8], rdx", "jnz     short loc_4D18"], ["cmp~[rax+0],rdx", "jnz~FOO"]], [0, 0, 77, 0, 0, 2, 0, 1, 19, -1, 0.0019653481001022204, ["cmp     [rax+10h], rcx", "jnz     short loc_4D18"], ["cmp~[rax+0],rcx", "jnz~FOO"]], [0, 0, 73, 0, 0, 1, 0, 1, 35, -1, 1.838492142284584e-05, ["jmp     loc_6CA6"], ["jmp~FOO"]], [1, 0, 424, 0, 0, 2, 0, 1, 17, 33, 0.006112986373096241, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_55E0"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 522, 1, 0, 26, 1, 1, 0, 29, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, src_name_0", "push    rbx", "mov     r14d, edx", "mov     r15, x_0", "mov     r12d, edx", "sub     rsp, 368h", "mov     eax, [rbp+command_line_arg]", "mov     [rbp+device], device_0", "mov     device_0, fs:28h", "mov     [rbp+var_38], device_0", "xor     ecx, ecx", "cmp     byte ptr [x_0+18h], 0", "mov     [rbp+dst_name], dst_name_0", "mov     dword ptr [rbp+format], eax", "mov     rax, [rbp+copy_into_self]", "mov     [rbp+ancestors], ancestors_0", "mov     qword ptr [rbp+fildes], rax", "mov     rax, [rbp+rename_succeeded]", "mov     [rbp+omitted_permissions], rax", "jz      short loc_4562"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,src_name_0", "push~rbx", "mov~r14d,edx", "mov~r15,x_0", "mov~r12d,edx", "sub~rsp,0", "mov~eax,[rbp+0]", "mov~[rbp+0],device_0", "mov~device_0,<TAG>", "mov~[rbp+0],device_0", "xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],dst_name_0", "mov~[word ptr [rbp+0],eax", "mov~rax,[rbp+0]", "mov~[rbp+0],ancestors_0", "mov~[word ptr [rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 471, 0, 0, 4, 0, 1, 15, 36, 0.0011986968767695486, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "movzx   ecx, byte ptr [rbp+restore_dst_mode]", "jnz     short loc_556C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 521, 0, 0, 2, 1, 1, 1, 29, 3.676984284569168e-06, ["test    rax, rax", "jz      short loc_4562"], ["test~rax,rax", "jz~FOO"]], [1, 0, 520, 0, 0, 1, 0, 0, 2, 29, 0.0, ["mov     byte ptr [rax], 0"], ["mov~<TAG>,0"]], [1, 0, 428, 0, 0, 2, 0, 1, 20, 35, 0.0007059809826372803, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_58E1"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 38, 0, 0, 15, 0, 0, 26, -1, 0.0019120318279759673, ["movzx   eax, r12b", "mov     [rbp+x], x_0", "mov     r14, [rbp+abase]", "mov     dword ptr [rbp+device], eax", "lea     rax, [rbp+dev]", "mov     x_0, qword ptr [rbp+fildes]", "mov     ecx, 1", "mov     byte ptr [rbp+buf], r12b", "mov     byte ptr [rbp+nbytes], bl", "mov     [rbp+dst_backup], rax", "lea     rax, [rbp+var_2E8]", "mov     [rbp+ancestors], src_name_0", "mov     r12d, ecx", "mov     [rbp+earlier_file], rax", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~eax,r12b", "mov~[rbp+0],x_0", "mov~r14,[rbp+0]", "mov~[word ptr [rbp+0],eax", "lea~rax,[rbp+0]", "mov~x_0,[word ptr [rbp+0]", "mov~ecx,0", "mov~[yte ptr [rbp+0],r12b", "mov~[yte ptr [rbp+0],bl", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],src_name_0", "mov~r12d,ecx", "mov~[rbp+0],rax", "nop~[word ptr [rax+0]"]], [0, 0, 470, 0, 0, 3, 0, 0, 16, 36, 0.0, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "setz    cl"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setz~cl"]], [1, 0, 28, 0, 0, 2, 0, 1, 18, -1, 0.011981453291268634, ["cmp     byte ptr [src_name_0+0], 2Fh ; '/'", "jz      short loc_4DB2"], ["cmp~[yte ptr [src_name_0+0],0", "jz~FOO"]], [4, 0, 87, 0, 2, 15, 3, 3, 27, -1, 0.003965627550907847, ["mov     rax, [rbp+device]", "lea     rsi, aFailedToGetFil; \"failed to get file system create contex\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     dword ptr [rax], 5Fh ; '_'", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rbp+device]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+22h], 0", "mov     [rbp+ptr], 0", "jnz     loc_6EBC"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~<TAG>,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [0, 0, 465, 0, 0, 1, 0, 0, 17, 35, 0.0005276472448356756, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 1, 466, 0, 0, 6, 1, 1, 12, 35, 0.010273494091086256, ["mov     eax, [rbp+var_268]", "mov     r14, r12", "mov     rdx, [rbp+stats]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5590"], ["mov~eax,[rbp+0]", "mov~r14,r12", "mov~rdx,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 465, 0, 0, 4, 1, 1, 13, 35, 0.0006067024069539127, ["mov     eax, [rbp+var_1D8]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_5590"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 30, -1, 0.0049547363234569534, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jnz     short loc_65BF"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 418, 0, 0, 2, 1, 1, 14, 33, 0.005165550089105586, ["test    cl, cl", "jnz     loc_56A8"], ["test~cl,cl", "jnz~FOO"]], [2, 0, 27, 0, 1, 12, 1, 2, 19, -1, 0.006158948676653356, ["mov     dst_mode_bits_0, [rbp+dst_name]; file", "call    dir_name", "lea     r8, asc_1242A+1; \".\"", "mov     rdi, rax", "mov     ecx, 2", "mov     r12, rax", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_5EC0"], ["mov~dst_mode_bits_0,[rbp+0]", "call~FOO", "lea~r8,<TAG>", "mov~rdi,rax", "mov~ecx,0", "mov~r12,rax", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 19, 0, 1, 2, 0, 1, 20, -1, 0.0003198976327575176, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [1, 0, 26, 0, 1, 6, 1, 2, 20, -1, 0.004423412094336709, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     rsi, r8; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_4DAA"], ["lea~rdx,[rbp+0]", "mov~rsi,r8", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 25, 0, 1, 6, 1, 2, 21, -1, 0.0035593207874629546, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_4DAA"], ["lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 24, -1, 6.434722497996044e-05, ["jmp     loc_4DAA"], ["jmp~FOO"]], [1, 0, 22, 0, 2, 10, 2, 2, 31, -1, 0.00010663254425250587, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aNotWritingThro; \"not writing through dangling symlink %s\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi"]], [1, 0, 397, 0, 0, 3, 0, 1, 13, 34, 0.02320177083563145, ["cmp     byte ptr [x_0+18h], 0", "mov     eax, [x_0+8]", "jnz     loc_5A47"], ["cmp~[yte ptr [x_0+0],0", "mov~eax,[x_0+0]", "jnz~FOO"]], [2, 0, 515, 0, 0, 6, 1, 1, 3, 26, 0.011273633816489067, ["mov     eax, [rbp+var_268]", "mov     [rbp+mode], eax", "and     eax, 0F000h", "cmp     eax, 4000h", "mov     dword ptr [rbp+ptr], eax", "jz      loc_46E0"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "and~eax,0", "cmp~eax,0", "mov~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 28, -1, 0.007421992778402865, ["mov     edi, [rbp+mode]; fd", "call    _close", "test    eax, eax", "js      loc_7367"], ["mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 22, 0, 2, 12, 1, 3, 29, 0, 0.0010001397254028137, ["mov     rdi, [rbp+dst_name]; name", "call    quote", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax", "mov     rax, [rbp+device]", "mov     rcx, r12", "mov     esi, [rax]", "jmp     loc_75B1"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 67, 0, 0, 2, 1, 1, 39, -1, 0.00034931350703407095, ["xor     ebx, ebx", "jmp     loc_6DAF"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 67, 0, 0, 3, 0, 1, 35, -1, 0.003930696200204441, ["mov     rax, [rbp+device]", "cmp     dword ptr [rax], 4", "jz      loc_6DAF"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 20, -1, 0.0034343033217876027, ["cmp     byte ptr [rbp+format], 0", "jz      short loc_4E10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 21, -1, 0.0019782175450982122, ["cmp     qword ptr [x_0+30h], 0", "jz      short loc_4E10"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 67, 1, 0, 3, 0, 1, 36, -1, 0.014906494289643406, ["add     [rbp+length], rax", "cmp     byte ptr [rbp+restore_dst_mode], 0", "jz      short loc_6E16"], ["add~[rbp+0],rax", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 67, 0, 0, 3, 0, 0, 37, -1, 0.007493693971951964, ["mov     rax, [rbp+buf]", "lea     rdx, [rax+rcx]", "mov     byte ptr [rdx], 1"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~<TAG>,0"]], [1, 0, 5, 0, 1, 7, 1, 2, 22, -1, 0.0009927857568336753, ["lea     rbx, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     rdx, rbx; stat_buf", "call    ___lxstat", "test    eax, eax", "jnz     short loc_4E10"], ["lea~rbx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 1, 38, 2, 6, 34, 4, 7, 27, -1, 0.0010920643325170428, ["mov     rdi, [rbp+ancestors]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r14; abase", "call    file_name_concat", "mov     rdi, [rbp+dst_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r14; abase", "mov     rbx, rax", "call    file_name_concat", "sub     rsp, 8", "mov     r9, [rbp+dst_backup]; x", "mov     r8, [rbp+ptr]; ancestors", "mov     rcx, [rbp+src_mode]; device", "mov     edx, dword ptr [rbp+device]; new_dst", "mov     rsi, rax; dst_name", "push    0; rename_succeeded", "push    [rbp+earlier_file]; copy_into_self", "mov     rdi, rbx; src_name", "push    0; command_line_arg", "mov     r13, rax", "call    copy_internal", "and     r12d, eax", "movzx   eax, byte ptr [rbp+var_2E8]", "add     rsp, 20h", "or      [r15], al", "mov     rdi, r13; ptr", "call    free", "mov     rdi, rbx; ptr", "call    free", "mov     rdi, r14; s", "call    _strlen", "lea     r14, [r14+rax+1]", "cmp     byte ptr [r14], 0", "jnz     loc_5D70"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r14", "call~FOO", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r14", "mov~rbx,rax", "call~FOO", "sub~rsp,0", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "mov~rsi,rax", "push~0", "push~[rbp+0]", "mov~rdi,rbx", "push~0", "mov~r13,rax", "call~FOO", "and~r12d,eax", "movzx~eax,[yte ptr [rbp+0]", "add~rsp,<STR>", "or~<TAG>,al", "mov~rdi,r13", "call~FOO", "mov~rdi,rbx", "call~FOO", "mov~rdi,r14", "call~FOO", "lea~r14,[r14+0]", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 310, 0, 0, 4, 2, 0, 7, 24, 0.022129807350536712, ["xor     r14d, r14d", "xor     r8d, r8d", "mov     r12d, 1", "mov     [rbp+dst_backup], 0"], ["xor~r14d,r14d", "xor~r8d,r8d", "mov~r12d,0", "mov~[rbp+0],0"]], [0, 0, 496, 0, 1, 6, 1, 2, 6, 25, 0.002708221491728011, ["mov     rdi, [x_0+38h]; ht", "mov     rdx, [rbp+stats]; stats", "mov     rsi, src_name_0; file", "call    record_file", "test    r14b, r14b", "jnz     loc_45F9"], ["mov~rdi,[x_0+0]", "mov~rdx,[rbp+0]", "mov~rsi,src_name_0", "call~FOO", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 0, 1, 23, -1, 0.0, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, rbx; stats", "call    record_file", "nop     dword ptr [rax+rax+00h]"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~rdx,rbx", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 412, 0, 0, 2, 1, 1, 15, 33, 0.0056178191561075935, ["test    al, al", "jz      loc_55E0"], ["test~al,al", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 16, -1, 0.0009302770239959995, ["cmp     byte ptr [rbp+format], 0", "jz      loc_4E10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 379, 0, 0, 2, 0, 1, 14, 33, 0.02337642758914848, ["cmp     eax, 2", "jz      loc_4E10"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 375, 0, 0, 2, 1, 1, 16, 31, 0.04467106924251673, ["test    r11b, r11b", "jnz     loc_4E10"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 17, -1, 7.353968569138336e-06, ["jmp     loc_4E10"], ["jmp~FOO"]], [1, 0, 310, 0, 0, 3, 1, 1, 20, 24, 0.004700411577107586, ["xor     r8d, r8d", "mov     [rbp+dst_backup], 0", "jmp     loc_4610"], ["xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 36, 0, 0, 5, 0, 0, 28, -1, 0.0002647428684889801, ["mov     byte ptr [rbp+delayed_ok], r12b", "movzx   ebx, byte ptr [rbp+nbytes]", "movzx   r12d, byte ptr [rbp+buf]", "mov     r13, [rbp+ancestors]", "mov     r15, [rbp+x]"], ["mov~[yte ptr [rbp+0],r12b", "movzx~ebx,[yte ptr [rbp+0]", "movzx~r12d,[yte ptr [rbp+0]", "mov~r13,[rbp+0]", "mov~r15,[rbp+0]"]], [2, 0, 352, 0, 0, 4, 1, 1, 16, 27, 0.001582328903792932, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_57B6"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 307, 0, 0, 2, 0, 1, 10, 22, 0.009636640412998877, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_4EC0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 35, 0, 1, 3, 0, 2, 27, -1, 0.0009008611497194461, ["mov     rdi, [rbp+abase]; ptr", "call    free", "jmp     loc_4F8C"], ["mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 47, 0, 1, 11, 3, 2, 23, -1, 0.001029555599679367, ["mov     edx, dword ptr [rbp+omitted_permissions]", "mov     rax, [rbp+var_258]", "lea     rcx, [rbp+dev]; dev", "xor     edi, edi; ver", "not     edx", "mov     [rbp+dev], rax", "and     edx, esi; mode", "mov     rsi, [rbp+dst_name]; path", "call    ___xmknod", "test    eax, eax", "jnz     loc_661F"], ["mov~edx,[word ptr [rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "not~edx", "mov~[rbp+0],rax", "and~edx,esi", "mov~rsi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 38, -1, 0.0038424485773747804, ["cmp     rcx, r14", "jz      short loc_6E5D"], ["cmp~rcx,r14", "jz~FOO"]], [2, 0, 67, 0, 0, 4, 1, 1, 39, -1, 0.0016730278494789714, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_7778"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 67, 0, 1, 8, 0, 2, 37, -1, 0.005982453430994036, ["mov     rsi, [rbp+buf]; buf", "mov     edi, [rbp+mode]; fd", "mov     rdx, rcx; count", "mov     [rbp+var_388], rcx", "call    full_write", "mov     rcx, [rbp+var_388]", "cmp     rcx, rax", "jnz     loc_7764"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "mov~rdx,rcx", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 299, 0, 0, 3, 1, 1, 12, 24, 0.0036860541791377717, ["test    r14b, r14b", "lea     rdx, [rbp+dst_mode]; stats", "jz      loc_5F38"], ["test~r14b,r14b", "lea~rdx,[rbp+0]", "jz~FOO"]], [1, 0, 353, 0, 0, 2, 0, 1, 15, 27, 0.1341786720203558, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_663F"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 297, 0, 0, 2, 0, 1, 14, 24, 2.5738889991984176e-05, ["mov     rdx, r14", "jmp     loc_464E"], ["mov~rdx,r14", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.004938189894176393, ["cmp     byte ptr [x_0+27h], 0", "jz      short loc_4E7D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 467, 0, 0, 1, 1, 0, 11, 36, 0.0065634169479559645, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 24, 0, 0, 2, 1, 1, 40, -1, 0.0005147777998396835, ["xor     r12d, r12d", "jmp     loc_6EBC"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 15, -1, 0.0025555040777755717, ["mov     rax, [rbp+omitted_permissions]", "test    rax, rax", "jz      short loc_4E8C"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rax], 1"], ["mov~<TAG>,0"]], [1, 0, 467, 0, 0, 2, 0, 1, 13, 36, 0.0004118222398717468, ["mov     ecx, 1", "jmp     loc_5672"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 24, 0, 1, 7, 1, 2, 41, -1, 4.412381141483002e-05, ["mov     edx, [x_0+10h]; mode", "mov     esi, [rbp+mode]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    r12b", "jmp     loc_6EBC"], ["mov~edx,[x_0+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~r12b", "jmp~FOO"]], [0, 0, 377, 0, 2, 12, 1, 3, 16, 32, 0.0004007912870180393, ["mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [r12+18h]; dst_sb", "mov     byte ptr [rbp+delayed_ok], r9b", "mov     byte ptr [rbp+dst_backup], r11b", "mov     byte ptr [rbp+earlier_file], r8b", "call    overwrite_prompt", "call    yesno", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r11d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+delayed_ok]", "jnz     loc_5709"], ["mov~rdi,[rbp+0]", "lea~rsi,[r12+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r11b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r11d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 32, 0.023944521661114417, ["cmp     eax, 3", "jz      loc_6660"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 18, 29, 0.02288187320287393, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      loc_57A8"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [3, 0, 374, 0, 0, 7, 2, 1, 17, 30, 0.04546407218655547, ["mov     eax, [rbp+var_1D8]", "xor     r9d, 1", "mov     r14d, r9d", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_66B0"], ["mov~eax,[rbp+0]", "xor~r9d,0", "mov~r14d,r9d", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 351, 0, 0, 2, 0, 1, 19, 29, 0.0020569662918594024, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_66D2"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 360, 0, 0, 5, 1, 1, 20, 29, 0.00013420992638677463, ["mov     eax, [rbp+var_1D8]", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_66C0"], ["mov~eax,[rbp+0]", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 413, 0, 1, 8, 1, 1, 14, 34, 0.0012127919831937306, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, src_name_0; source", "mov     byte ptr [rbp+dst_backup], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "call    same_name", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+dst_backup]", "xor     eax, 1"], ["mov~rsi,[rbp+0]", "mov~rdi,src_name_0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "xor~eax,0"]], [0, 0, 405, 0, 0, 3, 1, 1, 12, 35, 0.015588574874430987, ["movzx   r14d, byte ptr [x_0+26h]", "test    r14b, r14b", "jz      loc_56E8"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 22, -1, 0.0027044219413006228, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+dot_sb.st_ino], rax", "jz      loc_6F87"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 23, -1, 0.0009229230554268611, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+dot_sb.st_dev], rax", "jnz     loc_5F0C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 366, 0, 0, 3, 0, 1, 19, 28, 0.02305714278710506, ["cmp     byte ptr [rbp+format], 0", "mov     edx, [x_0]", "jz      short loc_57AB"], ["cmp~[yte ptr [rbp+0],0", "mov~edx,<TAG>", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 27, -1, 0.0020885270736352873, ["mov     eax, [rbp+var_1D4]", "cmp     [rbp+owner], eax", "jz      loc_676A"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 363, 0, 1, 8, 1, 2, 18, 30, 0.001674866341621256, ["mov     rdi, [x_0+30h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r12; stats", "mov     byte ptr [rbp+earlier_file], r8b", "call    seen_file", "test    al, al", "movzx   r8d, byte ptr [rbp+earlier_file]", "jnz     loc_6FBC"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "mov~rdx,r12", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 361, 0, 0, 2, 0, 1, 19, 29, 0.0019727020686713588, ["cmp     dword ptr [rbp+ptr], 4000h", "jz      short loc_57A8"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 452, 0, 0, 2, 1, 1, 16, 34, 0.003928857708062156, ["test    cl, cl", "jz      short loc_5F9D"], ["test~cl,cl", "jz~FOO"]], [0, 0, 37, 0, 1, 6, 1, 2, 24, -1, 0.016241239584942016, ["mov     rsi, [rbp+size]; size", "mov     dst_mode_bits_0, src_name_0; file", "call    areadlink_with_size", "test    rax, rax", "mov     r14, rax", "jz      loc_6FA0"], ["mov~rsi,[rbp+0]", "mov~dst_mode_bits_0,src_name_0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 354, 0, 0, 1, 0, 0, 14, 28, 0.11041279051240001, ["mov     edx, [x_0]"], ["mov~edx,<TAG>"]], [0, 0, 25, 0, 0, 2, 1, 1, 26, -1, 0.005363800825115274, ["test    r12b, r12b", "jnz     short loc_4FC2"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 33, 0, 1, 4, 0, 2, 26, -1, 0.00817393606459726, ["call    ___errno_location", "cmp     byte ptr [x_0+26h], 0", "mov     r13d, [rax]", "jz      short loc_67DD"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r13d,<TAG>", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 27, -1, 0.0054934145211463364, ["test    r12b, r12b", "jnz     short loc_67DD"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 404, 0, 0, 1, 1, 0, 13, 37, 0.002018664372228473, ["xor     r14d, r14d"], ["xor~r14d,r14d"]]], "func_feature": [289, 383, 748, 30, 523, 862, 2, 2630, 0.01271, 51, 17], "succs": [[8], [0, 100], [32], [32, 2], [17, 212], [291, 4], [299, 4], [290, 4], [16, 24], [8, 519], [8], [181], [11], [11], [19, 13], [13, 14], [18, 115], [212, 22], [20, 21], [213, 13], [26, 23], [20, 455], [34], [100], [114, 23], [26, 23], [196, 23], [101], [27, 29], [27, 287], [9, 66], [9, 30], [36, 463], [32, 3], [100], [34], [107, 47], [281], [435, 37], [57, 42], [520, 39], [39], [57], [166], [408, 43], [48, 240], [203, 45], [100], [86, 407], [60, 134], [296, 49], [95], [274, 51], [321, 450], [424, 53], [436, 53], [82, 469], [56, 469], [304, 429], [58, 491], [366, 62], [475, 60], [369], [100], [298, 63], [100], [65, 9], [73, 401], [456, 67], [464, 77], [69, 78], [85, 517], [488, 71], [401, 76], [385], [385, 74], [90, 442], [95], [464, 77], [173, 87], [497, 79], [178], [81, 469], [422], [465, 83], [182], [239], [173], [275, 94], [88, 294], [402, 99], [410, 405], [91, 375], [91, 375], [97, 33], [100], [95], [480], [163, 404], [98, 119], [242, 127], [100], [100, 261], [104, 100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [100], [101], [101], [101], [101], [130, 147], [122], [122, 439], [328], [432, 125], [], [254, 135], [128, 258], [416, 147], [138, 442], [402, 131], [202, 131], [136, 335], [140, 38], [142], [136], [442, 148], [113, 207], [289], [140], [152, 150], [144, 142], [324, 142], [142], [142], [158, 215], [478], [209, 148], [225, 157], [152, 150], [195, 150], [154, 150], [267, 150], [487], [448, 155], [384, 186], [166], [96, 25], [25, 159], [498], [161, 498], [176], [360, 243], [360, 164], [178], [166], [166], [166], [166], [166], [166], [84, 198], [173, 374], [80, 173], [219, 214], [176], [181], [116], [179, 382], [190, 191], [181], [181], [181, 358], [181], [194], [186, 188], [186, 226], [393, 186], [197, 102], [190], [89, 133], [192, 132], [46, 407], [194], [114], [102], [392, 501], [168, 308], [259, 476], [200, 105], [402, 149], [210, 107], [139, 495], [208, 328], [205, 126], [412, 231], [126], [99], [233, 383], [313], [211, 269], [41, 12], [218], [169, 342], [227, 319], [216, 514], [229, 270], [218, 230], [303], [224, 220], [441, 220], [220], [220], [393, 189], [225], [235, 319], [227, 117], [232, 270], [270], [109], [236, 119], [239], [233], [237, 319], [245], [251, 319], [237, 301], [102, 191], [239], [239], [], [428], [243], [509, 255], [418, 245], [245], [249], [248, 386], [109], [313], [251, 253], [251, 5], [451, 38], [107, 260], [145, 486], [282, 283], [257, 282], [137, 353], [262], [110, 103], [266], [275, 262], [153, 492], [268, 423], [265, 277], [324], [271, 391], [256, 146], [509, 263], [481, 52], [306, 222], [272, 306], [276, 286], [28, 518], [279], [280, 276], [512, 28], [107, 286], [279], [348], [281, 289], [281, 354], [328, 292], [72, 284], [107, 111], [297, 217], [465], [288, 387], [313, 6], [290, 7], [328, 170], [266], [293, 295], [344, 293], [64, 61], [238, 319], [61], [313], [238], [118, 319], [165, 471], [468, 302], [303], [307, 221], [305, 221], [221], [329, 322], [273, 223], [306, 309], [312, 199], [285, 199], [314, 143], [486, 143], [316, 143], [121, 143], [494, 143], [323, 252], [352, 318], [469, 167], [320, 311], [348], [352, 326], [151], [324], [252], [334, 31], [31, 327], [333, 343], [68, 332], [330, 452], [378, 68], [129, 343], [340, 31], [151], [313], [336, 35], [152, 339], [152, 325], [31], [408], [44, 341], [348], [33], [182], [182], [252, 319], [184, 185], [348], [348], [348], [376, 355], [92], [282, 359], [376, 483], [425, 55], [420, 356], [362, 107], [282, 363], [364, 174], [360], [377, 107], [379, 462], [365, 174], [497, 174], [92, 367], [368, 92], [369, 92], [370, 92], [371, 92], [372, 92], [92, 373], [92, 93], [80, 175], [106, 475], [180, 390], [112, 380], [270], [282], [112], [469, 183], [116], [241, 75], [187, 188], [234, 107], [386, 59], [389], [389], [388, 310], [337, 419], [271, 415], [465, 406], [407], [395, 270], [444, 270], [397, 270], [398, 270], [270, 399], [270, 119], [270], [516, 270], [403, 270], [270, 447], [177, 270], [496, 270], [409, 465], [411, 204], [417, 206], [465, 421], [405, 246], [357, 414], [411, 413], [250, 411], [357], [271, 423], [206], [206], [394, 500], [313], [426, 54], [422], [465], [277, 431], [55], [424], [424, 437], [1, 10], [465], [428], [428], [271], [433, 156], [156], [258, 438], [434, 466], [123, 439], [436], [258], [440, 124], [346, 124], [306], [404, 119], [445, 70], [449, 331], [70, 446], [70], [99, 247], [474], [331], [457, 381], [465, 141], [68], [68, 454], [508, 68], [160, 26], [508, 396], [458, 459], [381], [458, 460], [458, 510], [458], [351], [480, 266], [201, 50], [349, 350], [351], [303], [430, 303], [107, 470], [473, 107], [472, 491], [249], [107, 477], [474, 484], [313], [475, 366], [107], [400, 119], [107, 108], [107, 503], [505, 107], [107], [313], [487], [347, 300], [264, 338], [328], [328, 171], [490, 467], [361, 467], [489, 244], [315, 317], [347, 485], [315], [162, 498], [453], [465], [499, 479], [479], [453], [465], [481, 482], [481, 502], [506, 518], [504, 278], [228, 117], [506, 518], [478], [522, 463], [345, 511], [345, 461], [217, 493], [1, 427], [120, 515], [507, 518], [193, 132], [40, 172], [493], [513, 1], [521, 13], [13, 15], [33]], "fname": "copy_internal", "n_num": 523}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoHardLinkCoSy; \"!(co->hard_link && co->symbolic_link)\"", "mov     edx, 816h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 4, 0, 0.05555555555555555, ["cmp     byte ptr [options+25h], 0", "jnz     loc_7887"], ["cmp~[yte ptr [options+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidBackupTyp; \"VALID_BACKUP_TYPE (co->backup_type)\"", "mov     edx, 814h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 0, 0.09722222222222221, ["cmp     dword ptr [options], 3", "ja      loc_7868"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aValidSparseMod; \"VALID_SPARSE_MODE (co->sparse_mode)\"", "mov     edx, 815h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 5, 1, 0, 4, 0, 1, 2, 0, 0.1388888888888889, ["mov     eax, [options+0Ch]", "sub     eax, 1", "cmp     eax, 2", "ja      short loc_7849"], ["mov~eax,[options+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___6822; \"valid_options\"", "lea     dst_name, aCopyC; \"copy.c\"", "lea     src_name, aCoNull; \"co != NULL\"", "mov     edx, 813h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 9, 1, 0, 3, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    options, options", "jz      short loc_782A"], ["sub~rsp,0", "test~options,options", "jz~FOO"]], [3, 0, 0, 2, 1, 13, 2, 1, 4, 0, 0.0, ["sub     rsp, 8", "movzx   edx, dl; new_dst", "mov     cs:top_level_src_name, src_name", "push    rename_succeeded_0; rename_succeeded", "push    copy_into_self_0; copy_into_self", "mov     rename_succeeded_0, options; x", "push    1; command_line_arg", "xor     r8d, r8d; ancestors", "xor     ecx, ecx; device", "mov     cs:top_level_dst_name, dst_name", "call    copy_internal", "add     rsp, 28h", "retn"], ["sub~rsp,0", "movzx~edx,dl", "mov~<TAG>,src_name", "push~rename_succeeded_0", "push~copy_into_self_0", "mov~rename_succeeded_0,options", "push~0", "xor~r8d,r8d", "xor~ecx,ecx", "mov~<TAG>,dst_name", "call~FOO", "add~rsp,0", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 0, 0.125, ["cmp     byte ptr [options+17h], 0", "jz      short loc_77FD"], ["cmp~[yte ptr [options+0],0", "jz~FOO"]]], "func_feature": [5, 3, 10, 0, 10, 10, 2, 46, 0.04167, 8, 4], "succs": [[], [0, 8], [], [2, 5], [], [9, 4], [], [3, 6], [], [8, 1]], "fname": "copy", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "src_to_dest_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_78D0"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "src_to_dest_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a+10h]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,[a+0]", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "src_to_dest_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 1, 4, 1, 1, 13, 2, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     [rsp+28h+var_18], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_delete", "test    ent, ent", "jz      short loc_794F"], ["push~rbx", "sub~rsp,<STR>", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 3, 0, 2, 5, 0, 2, 0, 2, 0.0, ["mov     rdi, [ent+10h]; ptr", "mov     rbx, ent", "call    free", "mov     rdi, ent; ptr", "call    free"], ["mov~rdi,[ent+0]", "mov~rbx,ent", "call~FOO", "mov~rdi,ent", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_7965"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 6, 3, 5, 5, 2, 25, 0.06667, 2, 2], "succs": [[1, 3], [3], [], [2, 4], []], "fname": "forget_created", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     e, [e+10h]"], ["mov~e,[e+0]"]], [1, 0, 5, 1, 1, 11, 2, 2, 0, 3, 0.0, ["sub     rsp, 28h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_lookup", "test    e, e", "jz      short loc_79C0"], ["sub~rsp,0", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~e,e", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_79A5"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.30000000000000004, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_79C4"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 2, 6, 6, 1, 20, 0.075, 2, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "src_to_dest_lookup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.05, ["xor     eax, eax", "jmp     short loc_7A34"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 1, -1, 0.15000000000000002, ["cmp     ent, ent_from_table", "mov     dev, ent_from_table", "jz      short loc_7A40"], ["cmp~ent,ent_from_table", "mov~dev,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 1, 3, 21, 1, 4, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, name", "push    rbp", "push    rbx", "mov     edi, 18h; n", "mov     r12, ino", "mov     rbp, dev", "sub     rsp, 8", "call    xmalloc", "mov     rdi, name; string", "mov     rbx, rax", "call    xstrdup", "mov     rdi, cs:src_to_dest; table", "mov     rsi, ent; entry", "mov     [ent+10h], rax", "mov     [ent], ino", "mov     [ent+8], dev", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_7A44"], ["push~r13", "push~r12", "mov~r13,name", "push~rbp", "push~rbx", "mov~edi,0", "mov~r12,ino", "mov~rbp,dev", "sub~rsp,0", "call~FOO", "mov~rdi,name", "mov~rbx,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rsi,ent", "mov~[ent+0],rax", "mov~<TAG>,ino", "mov~[ent+0],dev", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 1, 0, 2, 5, 0, 2, 2, -1, 0.05, ["mov     rdi, [ent+10h]; ptr", "call    free", "mov     rdi, ent; ptr", "call    free", "mov     rax, [ent_from_table+10h]"], ["mov~rdi,[ent+0]", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~rax,[ent_from_table+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     ent_from_table", "pop     ino", "pop     name", "retn"], ["add~rsp,0", "pop~ent", "pop~ent_from_table", "pop~ino", "pop~name", "retn"]]], "func_feature": [6, 2, 9, 0, 6, 6, 3, 38, 0.04167, 1, 2], "succs": [[5], [0, 4], [], [1, 2], [5], []], "fname": "remember_copied", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 5, 1, 1, 12, 2, 2, 0, 0, 0.0, ["push    rbx", "mov     rsi, file; filename", "mov     rbx, file", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___xstat", "test    eax, eax", "js      short loc_7AB8"], ["push~rbx", "mov~rsi,file", "mov~rbx,file", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_7AE1"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 3, 12, 3, 4, 0, 2, 0.07500000000000001, ["mov     rdi, file; name", "call    quote", "mov     file, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     eax, eax", "mov     rcx, rbx", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_7A98"], ["mov~rdi,file", "call~FOO", "mov~file,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 0, 2, 0.07500000000000001, ["mov     rdx, [rsp+0A8h+sb.st_dev]; dev", "mov     rsi, [rsp+0A8h+sb.st_ino]; ino", "mov     rdi, file; name", "call    remember_copied", "mov     eax, 1"], ["mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,file", "call~FOO", "mov~eax,0"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]]], "func_feature": [6, 6, 9, 1, 6, 6, 0, 36, 0.075, 2, 2], "succs": [[3, 4], [], [1, 5], [2], [2], []], "fname": "remember_created", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 10, 2, 2, 0, 1, 0.0, ["lea     r8, src_to_dest_free; data_freer", "lea     rcx, src_to_dest_compare; comparator", "lea     rdx, src_to_dest_hash; hasher", "sub     rsp, 8", "xor     esi, esi; tuning", "mov     edi, 67h ; 'g'; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:src_to_dest, rax", "jz      short loc_7B26"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "sub~rsp,0", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 13, 0.0, 4, 2], "succs": [[], [0, 2], []], "fname": "hash_init", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     rdi, cs:src_to_dest; table", "jmp     hash_free"], ["mov~rdi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "forget_all", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _chmod"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, esi", "mov     esi, edx; mode", "cmp     eax, 0FFFFFFFFh", "jz      short loc_7B50"], ["mov~eax,esi", "mov~esi,edx", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edi, eax; file", "jmp     _fchmod"], ["mov~edi,eax", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 5, 4, 2, 7, 0.03333, 0, 0], "succs": [[2], [0, 4], [], [], [3]], "fname": "chmod_or_fchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     short chmod_or_fchmod"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "qset_acl", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, name", "push    rbx", "call    chmod_or_fchmod", "test    eax, eax", "mov     ebx, eax", "jz      short loc_7BB9"], ["push~r12", "push~rbp", "mov~rbp,name", "push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, name; name", "call    quote", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 2, 28, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 11, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, dst_name", "push    rbx", "mov     edx, r8d; mode", "mov     esi, ecx; desc", "mov     src_name, dst_name; name", "call    qset_acl", "test    eax, eax", "mov     ebx, eax", "jz      short loc_7C11"], ["push~r12", "push~rbp", "mov~rbp,dst_name", "push~rbx", "mov~edx,r8d", "mov~esi,ecx", "mov~src_name,dst_name", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, dst_name; name", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 3, 31, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "copy_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 12, 0, 1, 3, 0, 2, 0, 0, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_7C86"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_7CD8"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_7D00"], ["cmp~buf_size,r15", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_7CC0"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_7C70"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_7CAB"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_7CAB"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_7CF0"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_7CAB"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_7CAB"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_7C60"], ["mov~buf_size,0", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [7, 5, 18, 0, 13, 19, 2, 65, 0.12121, 0, 3], "succs": [[8, 7], [0, 7], [9, 10], [2, 4], [1, 12], [1, 12], [12], [3, 6], [12], [12], [5], [5], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     ent, ent_from_table", "jz      short loc_7D80"], ["cmp~ent,ent_from_table", "jz~FOO"]], [2, 0, 5, 1, 3, 23, 1, 4, 1, 1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13, ht", "push    rbp", "push    rbx", "mov     r12, file", "mov     edi, 18h; n", "mov     rbp, stats", "sub     rsp, 8", "call    xmalloc", "mov     rdi, file; string", "mov     rbx, rax", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     rsi, ent; entry", "mov     rdi, ht; table", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_7D92"], ["push~r13", "push~r12", "mov~r13,ht", "push~rbp", "push~rbx", "mov~r12,file", "mov~edi,0", "mov~rbp,stats", "sub~rsp,0", "call~FOO", "mov~rdi,file", "mov~rbx,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~rsi,ent", "mov~rdi,ht", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     stats", "pop     file", "pop     ht", "retn"], ["add~rsp,0", "pop~ent", "pop~stats", "pop~file", "pop~ht", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    ht, ht", "jz      short locret_7D90"], ["test~ht,ht", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, -1, 0.07142857142857142, ["add     rsp, 8", "mov     rdi, ent; x", "pop     ent", "pop     stats", "pop     file", "pop     ht", "jmp     triple_free"], ["add~rsp,0", "mov~rdi,ent", "pop~ent", "pop~stats", "pop~file", "pop~ht", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [4, 2, 8, 0, 8, 7, 6, 42, 0.04167, 0, 3], "succs": [[2, 6], [0, 3], [], [], [], [1, 4], [7], []], "fname": "record_file", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_7DF1"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 2, 0.0, ["mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.name], file", "mov     file, rsp; entry", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[stats+0]", "mov~<TAG>,file", "mov~file,rsp", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "setnz~al"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_7DDC"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 4, 1, 5, 5, 3, 21, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 5, 0, 1, 6, 0, 2, 0, 0, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_7E20"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_7E30"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_7E44"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_7E58"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_7E71"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_7E44"], ["xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 1, 42, 0.06845, 0, 6], "succs": [[3, 6], [0], [0, 6], [2, 5], [1, 7], [], [], [6]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 0, 3, 1, 15, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     rbx, table_size", "sub     rsp, 8", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "xor     edx, edx", "add     rsp, 8", "div     table_size", "pop     table_size", "pop     p", "mov     rax, rdx", "retn"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~rbx,table_size", "sub~rsp,0", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "xor~edx,edx", "add~rsp,0", "div~,table_size", "pop~table_size", "pop~p", "mov~rax,rdx", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_7ECC"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_7ED0"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 14, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_7EFC"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_7F00"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 16, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "triple_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[3, 0, 119, 0, 2, 12, 3, 3, 0, 0, 0.03058681099558462, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [tsub_in_string-1]", "mov     rax, [rax]", "mov     rdi, [rsp+0D8h+tsub]; s", "movzx   r15d, word ptr [rax+rdx*2]", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "shr     r15w, 3", "xor     r15d, 1", "and     r15d, 1", "test    dl, dl", "jnz     loc_862C"], ["call~FOO", "movzx~edx,[yte ptr [tsub_in_string-1]+0]", "mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~r15d,<TAG>", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "shr~r15w,0", "xor~r15d,0", "and~r15d,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 0, 4, 13, 0.05376726961971229, ["cmp     string, tsub_in_string", "jnb     loc_8610"], ["cmp~string,tsub_in_string", "jnb~FOO"]], [0, 0, 119, 0, 1, 4, 0, 2, 20, 11, 0.007691212078051559, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_84A9"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 3, 0.056331006979062806, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_87F4"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 1, 9, 11, 0.031405782652043863, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_815A"], ["mov~edx,[rsp+0]", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 2, 0.052200541233442525, ["test    rax, rax", "jnz     loc_8200"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 6, 7, 0.31231306081754734, ["mov     r15d, 1", "jmp     loc_8225"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 5, 8, 0.2433414043583535, ["jmp     loc_8600"], ["jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 9, 8, 0.13502350092579404, ["test    cl, cl", "jz      loc_8600"], ["test~cl,cl", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 6, 11, 0.020260646631533992, ["test    r15b, r15b", "jnz     short loc_801E"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 7, 12, 0.0002492522432701894, ["jmp     loc_8006"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 14, 7, 0.02617148554336989, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_8664"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 5, 0.11305369605469305, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_867A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 10, 0.05536960546930637, ["cmp     byte ptr [tsub_in_string+0], 0", "jz      short loc_801B"], ["cmp~[yte ptr [tsub_in_string+0],0", "jz~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 6, 11, 0.03510895883777229, ["mov     byte ptr [rsp+0D8h+var_CC], dl", "call    ___ctype_b_loc", "movzx   edx, byte ptr [rsp+0D8h+var_CC]", "mov     rax, [rax]", "test    byte ptr [rax+rdx*2], 8", "jnz     loc_800B"], ["mov~[yte ptr [rsp+0],dl", "call~FOO", "movzx~edx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "test~<TAG>,0", "jnz~FOO"]], [1, 0, 119, 1, 0, 7, 0, 0, 8, 6, 0.15239994302805868, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "movzx   ecx, [rsp+0D8h+string_iter.cur.wc_valid]", "mov     [rsp+0D8h+string_iter.next_done], 0", "add     rax, r15", "cmp     rax, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], rax", "jnb     loc_8210"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[rsp+0],0", "add~rax,r15", "cmp~rax,tsub_in_string", "mov~[rsp+0],rax", "jnb~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_80BA"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 10, 10, 0.048426150121065374, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      short loc_81F0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 8, 9, 0.05497792337273892, ["lea     r15, [tsub_in_string+1]", "cmp     byte ptr [string], 0", "jnz     short loc_7FA6"], ["lea~r15,[tsub_in_string+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, -1, 0.004379717988890471, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [1, 0, 119, 0, 0, 2, 0, 1, 1, 9, 0.3899729383278735, ["cmp     byte ptr [string], 0", "jz      short loc_801B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 119, 0, 1, 6, 1, 2, 2, 8, 0.4512889901723401, ["mov     rsi, [rsp+0D8h+tsub]; needle", "mov     rdi, string; haystack", "call    mbsstr", "test    rax, rax", "mov     rbp, rax", "jz      short loc_801B"], ["mov~rsi,<TAG>", "mov~rdi,string", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.3496652898447514, ["mov     eax, [rsp+0D8h+string_iter.cur.wc]", "test    eax, eax", "jz      loc_801B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 1, 10, 7, 0.06704885343968095, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "setz    r15b"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "setz~r15b"]], [2, 0, 119, 0, 1, 7, 0, 2, 16, 9, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8432"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 15, 3, 0.06281156530408773, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_8808"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 5, 12, 0.01577410625267053, ["mov     rdi, [rsp+0D8h+tsub]; s", "mov     r15d, 1", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "test    dl, dl", "jz      loc_801E"], ["mov~rdi,<TAG>", "mov~r15d,0", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 11, 0.014955134596211365, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "jmp     loc_84A9"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 3, 13, 0, 4, 18, 4, 0.07869249394673124, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "mov     rcx, r15; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_87A8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rcx,r15", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 15, 9, 0.00961401509756445, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 8, 0.08282295969235151, ["test    edx, edx", "jz      short loc_8444"], ["test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 14, 9, 0.006836632958268052, ["jmp     loc_842E"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_842E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_842E"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 8, 0.31398661159379004, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_8444"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 13, 9, 0.275388121350235, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jz      loc_8432"], ["cmp~[rsp+0],0", "mov~edx,[rsp+0]", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 1, 15, 9, 0.02684802734653183, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_8432"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, -1, 0.016094573422589374, ["mov     rdi, [rsp+0D8h+tsub]; ptr", "call    free", "mov     rbx, [rsp+0D8h+var_40]", "xor     rbx, fs:28h", "mov     eax, r15d", "jnz     loc_884E"], ["mov~rdi,<TAG>", "call~FOO", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 7, 0.25042728955989174, ["test    r15b, r15b", "jnz     loc_801E"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 7, 0.1460974220196553, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "jnz     short loc_844D"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 7, 6, 0.011892892750320466, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_882F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 10, 6, 0.01039737929069933, ["lea     rdi, [r12+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_882F"], ["lea~rdi,[r12+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 14, 6, 0.009720837487537387, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_882F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 6, 0.009151118074348383, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_882F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 17, 5, 0.07968950291981199, ["mov     rdi, r15; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_882F"], ["mov~rdi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     found", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~found", "retn"]], [6, 0, 119, 0, 0, 10, 0, 1, 7, 6, 0.3882637800883065, ["mov     rax, [rsp+0D8h+tsub]", "mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     qword ptr [r12+4], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0", "jmp     short loc_82CD"], ["mov~rax,<TAG>", "mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[word ptr [r12+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 6, 0.3958481697763851, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jnz     loc_8650"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 5, 0.10700042728955989, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_84D6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 6, 0.16639367611451358, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jz      loc_8260"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 16, 2, 0.04778521578122774, ["test    rax, rax", "jz      loc_87B6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5825; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 9, 1, 0.013388406209941603, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_8853"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 12, 1, 0.01103831363053696, ["mov     rax, [rsp+0D8h+tsub_iter.cur.ptr]", "mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_8853"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 16, 1, 0.009827659877510326, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_8853"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 21, 1, 0.010468594217347955, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_8853"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 17, 1, 0.009329155390969946, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_8853"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 119, 0, 0, 6, 0, 0, 4, 6, 0.3903290129611166, ["cmp     string, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "jb      short loc_80E7"], ["cmp~string,tsub_in_string", "mov~[rsp+0],string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "jb~FOO"]], [1, 0, 119, 0, 1, 3, 0, 2, 3, 7, 0.451502634952286, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_8058"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 16, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [5, 0, 119, 0, 0, 12, 1, 0, 16, 6, 0.38698191140863125, ["mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "lea     r15, [rbx+4]", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "movzx   edx, byte ptr [tsub_in_string+0]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_86F8"], ["mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "lea~r15,[rbx+0]", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "movzx~edx,[yte ptr [tsub_in_string+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 13, 7, 0.0245335422304515, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_84C0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 17, 11, 0.031049708018800738, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]"], ["mov~edx,[rsp+0]"]], [3, 0, 119, 0, 0, 5, 0, 0, 17, 12, 0.2998860561173622, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [tsub_in_string+0]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,[yte ptr [tsub_in_string+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 119, 0, 0, 5, 0, 0, 14, 8, 0.007406352371457057, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [2, 0, 119, 0, 0, 3, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_849D"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_849D"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 14, 7, 0.0747044580544082, ["mov     edi, [rsp+0D8h+string_iter.cur.wc]", "test    edi, edi", "jz      loc_882A"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 13, 8, 0.008759435977780942, ["jmp     loc_82A3"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_82A3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_82A3"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 1, 0, 3, 0, 1, 19, 10, 0.3809998575701467, ["mov     r15, [rsp+0D8h+string_iter.cur.bytes]", "add     r15, tsub_in_string", "jmp     loc_7FA0"], ["mov~r15,[rsp+0]", "add~r15,tsub_in_string", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 14, 4, 0.09706594502207662, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; iter", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_878C"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 7, 9, 0.025352513886910694, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [r15]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [2, 0, 119, 0, 0, 8, 1, 0, 6, 7, 0.044651759008688216, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [r15]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_8188"], ["mov~r15,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 8, 0.08367753881213502, ["test    edx, edx", "jz      loc_882A"], ["test~edx,edx", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_80BA"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 9, 7, 0.07911978350662298, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]"], ["mov~r15,[rsp+0]"]], [2, 0, 119, 2, 0, 6, 0, 0, 13, 6, 0.16963395527702604, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "add     [rsp+0D8h+string_iter.cur.ptr], rax", "mov     rax, [rsp+0D8h+tsub_iter.cur.bytes]", "add     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 7, 0.05198689645349665, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_82AF"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 14, 7, 0.029198119925936475, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jmp     loc_82AF"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 0, 2, 15, 7, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_82AF"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 15, 5, 0.00911551061102407, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.5667996011964107, ["cmp     [rsp+0D8h+tsub_iter.in_shift], 0", "jnz     short loc_8347"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 18, 10, 0.048070075487822245, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      loc_87EA"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.009008688221051131, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jz      loc_86C6"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [2, 0, 119, 0, 0, 5, 0, 1, 7, 7, 0.048497365047714, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "jmp     loc_80C7"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 0, 2, 8, 7, 0.007477567298105683, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     rdi, r15; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_80C7"], ["mov~r15,[rsp+0]", "mov~rdi,r15", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 2, 0.04094858282295969, ["test    rax, rax", "jnz     short loc_853B"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 9, 7, 0.35493519441674976, ["mov     rcx, [rsp+0D8h+tsub_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_8330"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 10, 8, 0.3371314627545933, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 119, 0, 3, 12, 0, 4, 13, 4, 0.09257940464321321, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_8580"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 3, 0.05597493234581968, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_85D0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 11, 7, 0.3688221051132317, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "test    ecx, ecx", "jz      loc_83E0"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 8, 0.022788776527560176, ["mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_8308"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 0, 5, 1, 1, 13, 7, 0.03952428428998718, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "test    ecx, ecx", "jnz     loc_8314"], ["mov~ecx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 119, 0, 0, 4, 0, 1, 10, 7, 0.1335279874661729, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_8314"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 1, 6, 0, 2, 11, 7, 0.0020652328728101407, ["mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_8314"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 6, 4, 0.12298817832217632, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_81A8"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "jmp     loc_80EE"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 5, 5, 0.15745620282011108, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jz      short loc_8080"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 3, 0.06708446090300527, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_81C8"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 17, 10, 0.009222333000997009, ["mov     r8d, [rsp+0D8h+string_iter.cur.wc]", "test    r8d, r8d", "jnz     loc_87D9"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 11, 5, 0.009186725537672696, ["mov     [rsp+0D8h+tsub_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 119, 0, 0, 2, 1, 1, 20, 2, 0.041233442529554194, ["test    rax, rax", "jnz     short loc_876B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 16, 9, 0.04023643355647343, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_85F0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 10, 11, 0.010967098703888335, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     loc_87D9"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 21, 13, 0.03988035892323031, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_87E0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 22, 14, 0.009542800170915824, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     short loc_87D9"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 9, 4, 0.22204814129041445, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "lea     rcx, [r12+4]; p", "lea     rdi, [r12+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "jz      loc_8560"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r12+0]", "lea~rdi,[r12+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 10, 3, 0.0811138014527845, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_8598"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 11, 2, 0.0716422162085173, ["test    rax, rax", "jnz     short loc_83B1"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 119, 1, 1, 20, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r15, string", "push    r13", "push    r12", "mov     string, sub; s", "push    rbp", "push    rbx", "mov     esi, 2; how", "lea     r13, is_basic_table", "sub     rsp, 0A8h", "lea     rbx, [rsp+0D8h+string_iter]", "lea     r12, [rsp+0D8h+tsub_iter]", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "lea     r14, [rbx+24h]", "call    trim2", "mov     [rsp+0D8h+tsub], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "mov~r15,string", "push~r13", "push~r12", "mov~string,sub", "push~rbp", "push~rbx", "mov~esi,0", "lea~r13,<TAG>", "sub~rsp,0", "lea~rbx,[rsp+0]", "lea~r12,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r14,[rbx+0]", "call~FOO", "mov~<TAG>,rax", "nop~<TAG>"]], [0, 0, 119, 0, 0, 3, 1, 1, 13, 9, 0.009827659877510326, ["mov     esi, [rsp+0D8h+tsub_iter.cur.wc]", "test    esi, esi", "jnz     loc_87D9"], ["mov~esi,[rsp+0]", "test~esi,esi", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 12, 8, 0.06971941318900442, ["lea     rdi, [r12+4]; ps", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_85C0"], ["lea~rdi,[r12+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    mbuiter_multi_next"], ["call~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 14, 7, 0.027773821392963964, ["xchg    ax, ax"], ["xchg~ax,ax"]]], "func_feature": [45, 45, 136, 2, 120, 185, 4, 493, 0.09347, 6, 6], "succs": [[9, 14], [0, 26], [73], [2, 107], [17], [4, 54], [48], [6], [6, 23], [13, 37], [9], [44, 29], [74, 11], [18, 19], [10, 13], [8, 103], [77], [16, 78], [19, 21], [37], [19, 21], [19, 60], [73, 19], [48], [34], [24, 52], [37, 14], [73], [3, 27], [30], [34, 38], [30], [30], [30], [38, 39], [34, 31], [34], [46, 47], [37, 62], [62, 38], [], [40, 102], [40, 106], [40, 84], [40, 61], [40, 28], [], [], [85], [35, 12], [94, 63], [81, 50], [64, 58], [], [53, 109], [116, 53], [105, 53], [53, 111], [53, 87], [103, 7], [1, 59], [74], [65, 45], [66, 43], [86], [22], [69], [22], [22], [80, 92], [69], [69], [69], [20], [25, 36], [77], [41, 75], [92, 79], [77], [15], [85], [80, 70], [80], [80], [94], [112, 91], [32, 33], [118, 86], [15], [15], [56, 108], [42, 93], [], [96], [82, 95], [90, 83], [49, 51], [96], [51, 119], [51], [51], [104, 88], [101], [76, 101], [89, 5], [108, 118], [112], [57, 110], [72, 71], [17, 118], [67, 68], [118, 110], [113, 99], [114, 100], [117, 55], [20], [117, 118], [97, 98], [], [49]], "fname": "mbsstr_trimmed_wordbounded", "n_num": 120}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, translation", "pop     translation", "pop     name", "pop     r12", "retn"], ["mov~rax,translation", "pop~translation", "pop~name", "pop~r12", "retn"]], [1, 0, 3, 0, 1, 11, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rsi, name; msgid", "push    rbx", "mov     rbp, name", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "cmp     name, rax", "mov     rbx, rax", "jz      short loc_88AD"], ["push~r12", "push~rbp", "mov~rsi,name", "push~rbx", "mov~rbp,name", "mov~edx,0", "xor~edi,edi", "call~FOO", "cmp~name,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     rsi, name; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      short loc_88B8"], ["mov~rsi,name", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 0, 0, 4, 22, 1, 4, 2, 0, 0.0, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     r12, rax", "call    _strlen", "lea     rdi, [r12+rax+4]; n", "call    xmalloc", "lea     rcx, aSS_1; \"%s (%s)\"", "mov     r12, rax", "mov     r9, name", "mov     r8, translation", "mov     rdi, result", "mov     translation, r12", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, result", "pop     result", "pop     name", "pop     r12", "retn"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~r12,rax", "call~FOO", "lea~rdi,[r12+0]", "call~FOO", "lea~rcx,<TAG>", "mov~r12,rax", "mov~r9,name", "mov~r8,translation", "mov~rdi,result", "mov~translation,r12", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rax,result", "pop~result", "pop~name", "pop~r12", "retn"]]], "func_feature": [6, 3, 8, 0, 4, 4, 0, 43, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "proper_name", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 13, 0, 1, 6, 1, 2, 0, 0, 0.10416666666666667, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "mov     rdx, [rsp+48h+sub]", "jz      short loc_89C0"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "mov~rdx,<TAG>", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 2, 3, 0.14492753623188406, ["cmp     name_ascii, translation", "mov     [rsp+48h+sub], name_converted_translit", "jz      loc_8A58"], ["cmp~name_ascii,translation", "mov~<TAG>,name_converted_translit", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.05404589371980676, ["test    alloc_name_converted, alloc_name_converted", "jz      short loc_8997"], ["test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [0, 0, 11, 0, 1, 7, 1, 2, 5, -1, 0.008152173913043478, ["mov     rsi, name_converted; sub", "mov     rdi, translation; string", "mov     [rsp+48h+sub], rdx", "call    mbsstr_trimmed_wordbounded", "test    al, al", "mov     rdx, [rsp+48h+sub]", "jnz     short loc_898A"], ["mov~rsi,name_converted", "mov~rdi,translation", "mov~<TAG>,rdx", "call~FOO", "test~al,al", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 6, -1, 0.006038647342995169, ["mov     rsi, rdx; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_898A"], ["mov~rsi,rdx", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [3, 0, 22, 1, 6, 36, 1, 7, 1, 4, 0.01992753623188406, ["lea     rsi, from_codeset; \"UTF-8\"", "mov     rdx, locale_code; to_codeset", "mov     rdi, name_utf8; src", "call    xstr_iconv", "mov     rdi, locale_code; s", "mov     r14, rax", "call    _strlen", "lea     rdi, [rax+0Bh]; n", "mov     r15, rax", "call    xmalloc", "mov     rdx, len; n", "mov     rsi, locale_code; src", "mov     rdi, locale_code_translit; dest", "call    _memcpy", "add     len, rax", "mov     rcx, rax", "mov     rax, 4C534E4152542F2Fh", "mov     [r15], rax", "lea     rsi, from_codeset; \"UTF-8\"", "mov     eax, 5449h", "mov     rdx, rcx; to_codeset", "mov     rdi, name_utf8; src", "mov     [r15+8], ax", "mov     byte ptr [r15+0Ah], 0", "mov     [rsp+48h+ptr], rcx", "mov     name_utf8, name_converted", "call    xstr_iconv", "mov     rcx, [rsp+48h+ptr]", "mov     [rsp+48h+sub], rax", "mov     locale_code, rbx", "mov     rdi, rcx; ptr", "call    free", "mov     rdx, [rsp+48h+sub]", "test    rbx, rbx", "mov     r15, rdx", "jnz     loc_896A"], ["lea~rsi,<TAG>", "mov~rdx,locale_code", "mov~rdi,name_utf8", "call~FOO", "mov~rdi,locale_code", "mov~r14,rax", "call~FOO", "lea~rdi,[rax+0]", "mov~r15,rax", "call~FOO", "mov~rdx,len", "mov~rsi,locale_code", "mov~rdi,locale_code_translit", "call~FOO", "add~len,rax", "mov~rcx,rax", "mov~rax,0", "mov~<TAG>,rax", "lea~rsi,<TAG>", "mov~eax,0", "mov~rdx,rcx", "mov~rdi,name_utf8", "mov~[r15+0],ax", "mov~[yte ptr [r15+0],0", "mov~[rsp+0],rcx", "mov~name_utf8,name_converted", "call~FOO", "mov~rcx,[rsp+0]", "mov~<TAG>,rax", "mov~locale_code,rbx", "mov~rdi,rcx", "call~FOO", "mov~rdx,<TAG>", "test~rbx,rbx", "mov~r15,rdx", "jnz~FOO"]], [2, 0, 24, 1, 3, 21, 2, 4, 0, 5, 0.0, ["push    r15", "push    r14", "mov     edx, 5; category", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, name_ascii", "mov     rbx, name_utf8", "mov     name_utf8, name_ascii; msgid", "xor     edi, edi; domainname", "sub     rsp, 18h", "call    _dcgettext", "mov     r13, rax", "call    locale_charset", "lea     rsi, from_codeset; \"UTF-8\"", "mov     rdi, rax; s1", "mov     r12, rax", "call    c_strcasecmp", "test    eax, eax", "jnz     loc_8A80"], ["push~r15", "push~r14", "mov~edx,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,name_ascii", "mov~rbx,name_utf8", "mov~name_utf8,name_ascii", "xor~edi,edi", "sub~rsp,0", "call~FOO", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    free"], ["mov~rdi,alloc_name_converted", "call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, -1, 0.025060386473429952, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "mov     name, translation", "jz      short loc_89A7"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "mov~name,translation", "jz~FOO"]], [0, 0, 21, 0, 0, 4, 1, 1, 2, 4, 0.0, ["test    name_converted_translit, name_converted_translit", "mov     r12, name_ascii", "cmovnz  r12, name_converted_translit", "jmp     loc_896A"], ["test~name_converted_translit,name_converted_translit", "mov~r12,name_ascii", "cmovnz~r12,name_converted_translit", "jmp~FOO"]], [0, 0, 22, 0, 0, 6, 3, 1, 1, 4, 0.01992753623188406, ["xor     r15d, r15d", "xor     r14d, r14d", "test    name_utf8, name_utf8", "mov     rdx, name_utf8", "mov     locale_code, name_converted_translit", "jz      loc_8B17"], ["xor~r15d,r15d", "xor~r14d,r14d", "test~name_utf8,name_utf8", "mov~rdx,name_utf8", "mov~locale_code,name_converted_translit", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.004227053140096618, ["mov     rdi, alloc_name_converted_translit; ptr", "call    free"], ["mov~rdi,alloc_name_converted_translit", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, -1, 0.033816425120772944, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "mov     name, result", "jnz     loc_899F"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "mov~name,result", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.028079710144927536, ["cmp     alloc_name_converted_translit, name", "jnz     loc_899F"], ["cmp~alloc_name_converted_translit,name", "jnz~FOO"]], [2, 0, 5, 0, 4, 18, 2, 5, 6, -1, 0.059178743961352656, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     name_converted, rax", "call    _strlen", "lea     rdi, [rbx+rax+4]; n", "call    xmalloc", "lea     rcx, aSS_1; \"%s (%s)\"", "mov     rdi, rax", "mov     rbx, rax", "mov     r9, name", "xor     eax, eax", "mov     r8, translation", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "call    ___sprintf_chk", "test    alloc_name_converted, alloc_name_converted", "jz      short loc_8A40"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~name_converted,rax", "call~FOO", "lea~rdi,[rbx+0]", "call~FOO", "lea~rcx,<TAG>", "mov~rdi,rax", "mov~rbx,rax", "mov~r9,name", "xor~eax,eax", "mov~r8,translation", "mov~rdx,0", "mov~esi,0", "call~FOO", "test~alloc_name_converted,alloc_name_converted", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 5, -1, 0.07336956521739131, ["test    rdx, rdx", "jz      short loc_89F0"], ["test~rdx,rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     name_ascii", "pop     r12", "pop     translation", "pop     alloc_name_converted", "pop     alloc_name_converted_translit", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~name_ascii", "pop~r12", "pop~translation", "pop~alloc_name_converted", "pop~alloc_name_converted_translit", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.003321256038647343, ["jmp     loc_89A7"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.05344202898550725, ["test    alloc_name_converted_translit, alloc_name_converted_translit", "jz      loc_89A7"], ["test~alloc_name_converted_translit,alloc_name_converted_translit", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0009057971014492754, ["jmp     loc_89A7"], ["jmp~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    free"], ["mov~rdi,alloc_name_converted", "call~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 4, -1, 0.07608695652173914, ["test    name_converted, name_converted", "jz      short loc_89DC"], ["test~name_converted,name_converted", "jz~FOO"]], [0, 0, 5, 0, 1, 3, 0, 2, 5, 0, 0.0, ["mov     rdi, alloc_name_converted; ptr", "call    free", "jmp     loc_8A66"], ["mov~rdi,alloc_name_converted", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 4, 1, 0.010869565217391304, ["cmp     alloc_name_converted, name", "jnz     loc_8B30"], ["cmp~alloc_name_converted,name", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 3, 2, 0.058876811594202896, ["test    alloc_name_converted, alloc_name_converted", "jz      short loc_8A66"], ["test~alloc_name_converted,alloc_name_converted", "jz~FOO"]]], "func_feature": [20, 19, 41, 0, 25, 41, 1, 146, 0.03138, 2, 3], "succs": [[2, 21], [0, 24], [8, 7], [2, 15], [2, 14], [9, 1], [10, 5], [8], [16, 11], [1], [9, 1], [16], [17, 11], [19, 11], [12, 20], [4, 14], [], [16], [16, 13], [16], [12], [3, 15], [18], [18, 22], [18, 23]], "fname": "proper_name_utf8", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[3, 0, 0, 4, 1, 18, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, maxlen; n", "mov     rbx, maxlen", "xor     esi, esi; c", "mov     rbp, string", "sub     rsp, 8", "call    _memchr", "mov     rdx, end", "sub     rdx, string", "add     rdx, 1", "test    end, end", "mov     end, maxlen", "cmovnz  rax, rdx", "add     rsp, 8", "pop     maxlen", "pop     string", "retn"], ["push~rbp", "push~rbx", "mov~rdx,maxlen", "mov~rbx,maxlen", "xor~esi,esi", "mov~rbp,string", "sub~rsp,0", "call~FOO", "mov~rdx,end", "sub~rdx,string", "add~rdx,0", "test~end,end", "mov~end,maxlen", "cmovnz~rax,rdx", "add~rsp,0", "pop~maxlen", "pop~string", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 17, 18, 0.0, 0, 4], "succs": [[]], "fname": "strnlen1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 34, 0, 0, 3, 1, 1, 0, 0, 0.01073926073926074, ["mov     eax, [rsp+0A8h+i.cur.wc]", "test    eax, eax", "jnz     loc_918B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 1, 0.020313020313020312, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r12], 0", "jnz     loc_9190"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 1, 6, 0, 0, 3, 1, 1, 7, -1, 0.004995004995004995, ["movzx   eax, byte ptr [p+0]", "test    byte ptr [rdx+rax*2+1], 20h", "jnz     short loc_8F68"], ["movzx~eax,[yte ptr [p+0]", "test~[yte ptr [rdx+0],<STR>", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005994005994005994, ["call    ___ctype_b_loc", "mov     rdx, [rax]", "jmp     short loc_8F79"], ["call~FOO", "mov~rdx,<TAG>", "jmp~FOO"]], [2, 0, 6, 1, 0, 4, 0, 1, 8, -1, 0.0004995004995004995, ["mov     byte ptr [p+0], 0", "sub     p, 1", "cmp     d, p", "ja      loc_8E90"], ["mov~[yte ptr [p+0],0", "sub~p,0", "cmp~d,p", "ja~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 5, 0.2078754578754579, ["cmp     [rsp+0A8h+i.in_shift], 0", "jnz     loc_8FB1"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 6, 6, 0.13944388944388944, ["lea     rbp, [rsp+0A8h+i]", "lea     rax, [rbp+0Ch]", "mov     [rsp+0A8h+ps], rax", "jmp     short loc_8C7E"], ["lea~rbp,[rsp+0]", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 34, 0, 0, 5, 0, 0, 12, 6, 0.09856809856809856, ["lea     rsi, [r12+r13]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     rsi, r14", "mov     [rsp+0A8h+i.cur.ptr], rsi", "jnb     loc_8E80"], ["lea~rsi,<TAG>", "mov~[rsp+0],0", "cmp~rsi,r14", "mov~[rsp+0],rsi", "jnb~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.022810522810522812, ["cmp     r15d, 2", "jnz     short loc_8E90"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 7, 0.007575757575757576, ["mov     r15d, 1", "jmp     loc_8C67"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 8, 0.02664002664002664, ["cmp     r15d, 2", "jnz     loc_9100"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 8, 0.008991008991008992, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_9100"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 10, 5, 0.010989010989010988, ["mov     [rsp+0A8h+i.in_shift], 1", "jmp     loc_8DFE"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 57, 0, 1, 6, 1, 2, 9, 6, 0.008574758574758574, ["mov     rdi, r13; ps", "mov     [rsp+0A8h+var_98], rdx", "call    _mbsinit", "test    eax, eax", "mov     rdx, [rsp+0A8h+var_98]", "jz      loc_916C"], ["mov~rdi,r13", "mov~[rsp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 0, 1, 6, 6, 0.019230769230769232, ["lea     rbp, [rsp+0A8h+i]", "lea     r14, is_basic_table", "lea     r13, [rbp+0Ch]", "jmp     short loc_8DF7"], ["lea~rbp,[rsp+0]", "lea~r14,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [5, 1, 58, 1, 0, 16, 1, 0, 5, 7, 0.030053280053280052, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     r15, d", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "cmp     rdx, d", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_90D0"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,<STR>", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~r15,d", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "cmp~rdx,d", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 34, 1, 1, 8, 0, 2, 8, 4, 0.13478188478188477, ["lea     rcx, [rbp+0Ch]; p", "mov     rdx, r14", "lea     rdi, [rbp+2Ch]; pwc", "sub     rdx, rsi; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_9090"], ["lea~rcx,[rbp+0]", "mov~rdx,r14", "lea~rdi,[rbp+0]", "sub~rdx,rsi", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 10, 5, 0.00715950715950716, ["mov     rsi, [rsp+0A8h+var_98]; s", "mov     [rsp+0A8h+i.in_shift], 1"], ["mov~rsi,[rsp+0]", "mov~[rsp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    mbiter_multi_next"], ["call~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 12, 10, 0.012071262071262072, ["mov     edx, [rsp+0A8h+i.cur.wc]", "test    edx, edx", "jnz     loc_918B"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 14, 7, 0.002580752580752581, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "mov     eax, 1", "cmovz   r15d, eax", "jmp     loc_8C67"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~r15d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0A8h+r]", "mov     byte ptr [rax], 0", "xchg    ax, ax"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "xchg~ax,ax"]], [1, 0, 10, 0, 2, 8, 0, 3, 5, -1, 0.008907758907758908, ["mov     rdi, p; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, p; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_8E90"], ["mov~rdi,p", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,p", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 6, -1, 0.0, ["add     p, 1", "movzx   ebp, byte ptr [p+0]", "test    bpl, bpl", "jz      short loc_8EF5"], ["add~p,0", "movzx~ebp,[yte ptr [p+0]", "test~bpl,bpl", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.002913752913752914, ["mov     r13, p", "jmp     loc_8EF5"], ["mov~r13,p", "jmp~FOO"]], [0, 1, 13, 0, 0, 2, 1, 1, 5, -1, 0.002664002664002664, ["test    byte ptr [rax+rbp*2+1], 20h", "jnz     short loc_8EE0"], ["test~[yte ptr [rax+0],<STR>", "jnz~FOO"]], [1, 0, 57, 0, 1, 5, 1, 2, 11, 9, 0.0367965367965368, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_9150"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 57, 0, 0, 2, 1, 1, 10, 2, 0.02614052614052614, ["test    rax, rax", "jnz     short loc_8E53"], ["test~rax,rax", "jnz~FOO"]], [3, 0, 34, 0, 0, 6, 0, 1, 9, 9, 0.050865800865800864, ["mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "jmp     loc_8CCC"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.009573759573759574, ["mov     rdx, d"], ["mov~rdx,d"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, -1, 0.004995004995004995, ["test    r12d, r12d", "jz      short loc_8F16"], ["test~r12d,r12d", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, -1, 0.0004995004995004995, ["jmp     loc_8E90"], ["jmp~FOO"]], [1, 0, 57, 1, 1, 8, 0, 2, 8, 4, 0.058774558774558776, ["lea     rcx, [rbp+0Ch]; p", "lea     rdi, [rbp+2Ch]; iter", "sub     rdx, r15; n", "mov     rsi, r15; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_90B8"], ["lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "sub~rdx,r15", "mov~rsi,r15", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 7, 5, 0.051864801864801864, ["cmp     [rsp+0A8h+i.in_shift], 0", "jz      short loc_8D90"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 1, 7, 1, 0, 12, 1, 1, 5, -1, 0.008907758907758908, ["mov     ecx, eax", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "lea     rbp, [rdx-1]", "cmp     d, p", "ja      loc_8E90"], ["mov~ecx,eax", "shr~ecx,0", "test~eax,<STR>", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "lea~rbp,[rdx-1]+0]", "cmp~d,p", "ja~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 11, 10, 0.03146853146853147, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     r14, [rsp+0A8h+i.limit]", "jz      short loc_9023"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~r14,[rsp+0]", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 10, 2, 0.05427905427905428, ["test    rax, rax", "jnz     short loc_9007"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 60, 0, 0, 2, 0, 0, 3, 9, 0.011738261738261738, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [0, 0, 61, 0, 0, 2, 1, 1, 2, 10, 0.019647019647019648, ["test    r12d, r12d", "jnz     loc_8D18"], ["test~r12d,r12d", "jnz~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 12, 10, 0.0, ["mov     [rsp+0A8h+i.in_shift], 0"], ["mov~[rsp+0],0"]], [2, 0, 34, 0, 0, 8, 1, 0, 8, 7, 0.07292707292707293, ["movzx   ecx, byte ptr [rsi]", "lea     rdi, is_basic_table", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [rdi+rax*4]", "bt      eax, ecx", "jnb     loc_8F90"], ["movzx~ecx,<TAG>", "lea~rdi,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [2, 0, 57, 0, 0, 7, 1, 0, 8, 7, 0.015734265734265736, ["movzx   ecx, byte ptr [r15]", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [r14+rax*4]", "bt      eax, ecx", "jnb     loc_9068"], ["movzx~ecx,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [1, 0, 34, 1, 0, 6, 0, 1, 10, 9, 0.003996003996003996, ["mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13, r14", "sub     r13, r12", "mov     [rsp+0A8h+i.cur.bytes], r13", "jmp     loc_8CCC"], ["mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~r13,r14", "sub~r13,r12", "mov~[rsp+0],r13", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 9, 3, 0.07109557109557109, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r12, [rsp+0A8h+i.cur.ptr]", "jz      loc_9110"], ["cmp~rax,0", "mov~r12,[rsp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 78, 1, 1, 14, 2, 2, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, esi", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_40], rax", "xor     eax, eax", "call    _strdup", "test    d, d", "jz      loc_9167"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,esi", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~d,d", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 10, 0.11871461871461872, ["jmp     loc_8BCA"], ["jmp~FOO"]], [1, 0, 39, 0, 2, 8, 0, 3, 6, 11, 0.12737262737262736, ["mov     rdi, r15; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, r15; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_8E90"], ["mov~rdi,r15", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,r15", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 12, 9, 0.024142524142524144, ["mov     r13, [rsp+0A8h+i.cur.bytes]", "jmp     loc_8CCC"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0A1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 11, 1, 0.009657009657009656, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_9190"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [5, 1, 35, 1, 0, 18, 2, 0, 5, 7, 0.14127539127539127, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "mov     rsi, d", "sbb     rdx, 3", "xor     r15d, r15d", "cmp     rdx, d", "mov     r14, rdx", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_8E90"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,<STR>", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "mov~rsi,d", "sbb~rdx,0", "xor~r15d,r15d", "cmp~rdx,d", "mov~r14,rdx", "mov~[rsp+0],rdx", "jbe~FOO"]], [2, 0, 37, 1, 0, 7, 2, 1, 4, 8, 0.13994338994338995, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_8BD2"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 9, 6, 0.016733266733266732, ["mov     rdi, [rsp+0A8h+ps]; ps", "mov     [rsp+0A8h+var_98], rsi", "call    _mbsinit", "test    eax, eax", "jz      loc_916C"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 9, 1, 0, 7, 2, 1, 4, -1, 0.009407259407259408, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_8F19"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 3, -1, 0.00308025308025308, ["movzx   ebp, byte ptr [p]", "test    bpl, bpl", "jz      loc_915A"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 6, -1, 0.023976023976023976, ["mov     rax, d", "mov     d, [rsp+0A8h+var_40]", "xor     d, fs:28h", "jnz     loc_9162"], ["mov~rax,d", "mov~d,[rsp+0]", "xor~d,<TAG>", "jnz~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 9, 3, 0.030136530136530136, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r15, [rsp+0A8h+i.cur.ptr]", "jz      loc_9130"], ["cmp~rax,0", "mov~r15,[rsp+0]", "jz~FOO"]], [2, 0, 60, 1, 0, 7, 2, 1, 4, 8, 0.021062271062271064, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_8D20"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.in_shift], 0", "mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_8DC9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 4, 0, 1, 1, 11, 0.012654012654012654, ["mov     rbx, d", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_8EC0"], ["mov~rbx,d", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 7, 0.013486513486513486, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_8C67"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 8, 0.052947052947052944, ["cmp     r15d, 1", "jz      loc_9030"], ["cmp~r15d,0", "jz~FOO"]], [3, 0, 57, 0, 0, 6, 0, 0, 9, 8, 0.00949050949050949, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [r15]", "mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.next_done], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5806; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 86h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [3, 0, 34, 0, 0, 7, 0, 0, 9, 9, 0.043373293373293376, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [rsi]", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 37, 0, 0, 2, 0, 0, 3, 9, 0.1382783882783883, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [1, 0, 57, 0, 0, 2, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_8DC9"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 7, 0.06943056943056942, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r15d, 1", "jz      short loc_8C67"], ["cmp~[rsp+0],0", "mov~r15d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 8, 0.1351981351981352, ["test    r15d, r15d", "mov     [rsp+0A8h+i.next_done], 1", "jz      loc_8C48"], ["test~r15d,r15d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, -1, 0.001332001332001332, ["call    ___ctype_b_loc", "mov     r13, p", "mov     rax, [rax]", "jmp     short loc_8EEE"], ["call~FOO", "mov~r13,p", "mov~rax,<TAG>", "jmp~FOO"]], [3, 0, 40, 0, 0, 4, 0, 0, 9, 12, 0.030802530802530804, ["mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 34, 0, 1, 9, 1, 2, 13, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "mov     rsi, [rsp+0A8h+r]", "test    eax, eax", "mov     eax, 2", "cmovnz  r15d, eax", "cmovnz  rsi, r12", "mov     [rsp+0A8h+r], rsi", "jmp     loc_8C67"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovnz~r15d,eax", "cmovnz~rsi,r12", "mov~[rsp+0],rsi", "jmp~FOO"]], [2, 0, 40, 1, 0, 6, 0, 1, 10, 12, 0.00616050616050616, ["mov     rax, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1", "sub     rax, r15", "mov     [rsp+0A8h+i.cur.bytes], rax", "jmp     short loc_90D0"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "sub~rax,r15", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 34, 0, 1, 5, 2, 1, 12, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "xor     r15d, r15d", "call    _iswspace", "test    eax, eax", "setz    r15b"], ["mov~edi,[rsp+0]", "xor~r15d,r15d", "call~FOO", "test~eax,eax", "setz~r15b"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 57, 0, 1, 4, 1, 2, 10, 7, 0.07309357309357309, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "jz      loc_90D0"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 11, 6, 0.023476523476523476, ["add     r15, [rsp+0A8h+i.cur.bytes]", "mov     rdx, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     r15, rdx", "mov     [rsp+0A8h+i.cur.ptr], r15", "jnb     loc_90D0"], ["add~r15,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsp+0],0", "cmp~r15,rdx", "mov~[rsp+0],r15", "jnb~FOO"]]], "func_feature": [23, 35, 79, 2, 79, 119, 1, 352, 0.03339, 6, 15], "succs": [[18, 35], [0, 49], [4, 31], [2], [57, 2], [16, 40], [5], [8, 5], [57, 21], [7], [9, 11], [9, 20], [32], [65, 12], [33], [14, 47], [43, 28], [16], [], [18, 26], [7], [57], [57, 29], [25, 22], [22], [22, 23], [68, 60], [26, 50], [70], [54], [29, 55], [57], [72, 58], [32, 41], [57, 3], [48, 39], [1, 35], [59], [67, 37], [48], [66, 53], [64, 13], [70], [42, 36], [], [44, 61], [67], [57, 46], [70], [], [49, 19], [57, 6], [51, 52], [17, 65], [34, 54], [24, 71], [], [56, 76], [74, 27], [59, 15], [77], [38, 30], [73, 7], [10, 62], [77], [], [70], [52], [77], [75, 7], [69, 63], [25], [47], [7], [47], [7], [], [78, 47], [33, 47]], "fname": "trim2", "n_num": 79}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 24, 0, 0, 2, 0, 1, 0, 0, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_9210"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_91FF"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_14584", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_91E8"], ["add~n_authors,0", "jmp~FOO"]], [5, 0, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_93C0; jumptable 00000000000092A0 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 5, -1, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_9238"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_93D6"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_92A8"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 00000000000092A0 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 00000000000092A0 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort; jumptable 00000000000092A0 case 0"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_93DB"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 00000000000092A0 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_92E0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]]], "func_feature": [10, 10, 28, 1, 25, 36, 1, 119, 0.05442, 17, 6], "succs": [[11, 5], [0], [0], [10], [3, 12, 13, 14, 15, 16, 17, 19, 21, 24], [23], [18, 4], [6], [6], [], [9, 20], [8, 7], [10], [10], [10], [10], [10], [10], [10], [], [], [10], [23], [1, 2], [10]], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_9492"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_943C"], ["sub~rsp,0", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 16, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_94EC"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    mem_cd_iconv", "test    eax, eax", "mov     ebx, eax", "js      short loc_94F0"], ["push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     eax, ebx", "pop     retval", "retn"], ["mov~eax,ebx", "pop~retval", "retn"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmem_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_950E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_cd_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_9518"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_953E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_9548"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 2, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, r8", "retn"], ["mov~rax,r8", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.005555555555555556, ["jmp     short loc_957E"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.08333333333333334, ["cmp     size, lcm_max", "cmovbe  lcm_max, size", "mov     r8, rcx"], ["cmp~size,lcm_max", "cmovbe~lcm_max,size", "mov~r8,rcx"]], [0, 0, 7, 1, 0, 4, 2, 1, 3, 1, 0.2111111111111111, ["xor     edx, edx", "div     n", "test    r, r", "jnz     short loc_95C8"], ["xor~edx,edx", "div~,n", "test~r,r", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     rax, n", "mov     n, r", "jmp     short loc_9593"], ["mov~rax,n", "mov~n,r", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.11111111111111112, ["mov     r8, b", "mov     rax, a"], ["mov~r8,b", "mov~rax,a"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 4, 0.0, ["test    a, a", "mov     rcx, lcm_max", "jnz     short loc_9588"], ["test~a,a", "mov~rcx,lcm_max", "jnz~FOO"]], [0, 0, 3, 1, 0, 5, 1, 1, 5, -1, 0.06666666666666667, ["xor     edx, edx", "mov     q, lcm", "div     b", "cmp     rax, q", "jnz     short loc_9574"], ["xor~edx,edx", "mov~q,lcm", "div~,b", "cmp~rax,q", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.07777777777777778, ["test    b, b", "jz      short loc_9574"], ["test~b,b", "jz~FOO"]], [0, 0, 4, 2, 0, 8, 1, 1, 4, -1, 0.17777777777777778, ["xor     edx, edx", "mov     rax, a", "div     n", "mov     n, b", "imul    r8, rax", "mov     r9, rax", "cmp     lcm, lcm_max", "ja      short loc_9574"], ["xor~edx,edx", "mov~rax,a", "div~,n", "mov~n,b", "imul~r8,rax", "mov~r9,rax", "cmp~lcm,lcm_max", "ja~FOO"]], [1, 0, 2, 0, 0, 3, 1, 0, 1, -1, 0.011111111111111112, ["test    b, b", "mov     edi, 2000h", "cmovnz  rdi, b"], ["test~b,b", "mov~edi,0", "cmovnz~rdi,b"]]], "func_feature": [0, 7, 7, 0, 11, 15, 1, 36, 0.06768, 0, 4], "succs": [[], [0], [0], [9, 4], [3], [3], [8, 10], [1, 2], [2, 5], [2, 7], [2]], "fname": "buffer_lcm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     edi, 1; status", "xor     eax, eax", "jmp     usage"], ["mov~edi,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 12, 2, 1, 11, 1, 1, 0, 0, 0.03311965811965811, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_96E0"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_9677"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_96CD"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965811, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_9667"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_9667"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 2, 0, 6, 1, 1, 5, 3, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_9677"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_96B8"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_9630"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_96F0"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_96CD"], ["mov~<TAG>,i", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]]], "func_feature": [4, 7, 14, 1, 14, 20, 1, 76, 0.11538, 0, 8], "succs": [[7], [0, 4], [5], [2, 13], [7], [10, 7], [9, 5], [11, 5], [1, 6], [11], [8, 12], [13], [13], []], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_9726"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_9760"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [3, 0, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_9850"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_97D8"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_97D8"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_9801"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, aS; \", `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_9801"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS_0; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_9850"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_9880"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[], [0], [9, 5], [6, 7], [3, 7], [4], [8, 4], [9, 4], [9], [1, 10], []], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_98D6"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_98E5"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 4, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_9930"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_993F"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_9951"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_9951"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[3, 0, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 10, 0.0, 3, 2], "succs": [[]], "fname": "get_version_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.04692192192192192, ["mov     ecx, [r13+0]", "mov     edx, 0FFh", "test    ecx, ecx", "jnz     short loc_9CAF"], ["mov~ecx,[r13+0]", "mov~edx,0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 6, 0, 2, 11, 1, 3, 3, -1, 0.11261261261261261, ["mov     esi, 2Eh ; '.'", "movzx   r14d, word ptr [rbx]", "mov     [rbx], si", "call    ___errno_location", "mov     esi, 3; name", "mov     dword ptr [rax], 0", "mov     rdi, s; path", "mov     r13, rax", "call    _pathconf", "test    rax, rax", "js      short loc_9CE0"], ["mov~esi,0", "movzx~r14d,<TAG>", "mov~<TAG>,si", "call~FOO", "mov~esi,0", "mov~<TAG>,0", "mov~rdi,s", "mov~r13,rax", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 35, 1, 1, 6, 1, 2, 14, 11, 0.1478978978978979, ["add     edx, 1", "mov     rdi, r12; dirp", "mov     [rax], dl", "call    _readdir", "test    rax, rax", "jnz     loc_9A91"], ["add~edx,0", "mov~rdi,r12", "mov~<TAG>,dl", "call~FOO", "test~rax,rax", "jnz~FOO"]], [2, 1, 35, 2, 1, 15, 0, 2, 13, 12, 0.12087087087087087, ["mov     rax, [rsp+78h+filelen]", "lea     rdx, [r15+2]; n", "mov     edi, 7E2Eh", "mov     rsi, rbx; src", "add     rax, rbp", "lea     rcx, [rax+r9+2]", "mov     [rax], di", "mov     byte ptr [rax+2], 30h ; '0'", "mov     rdi, rcx; dest", "call    _memcpy", "add     r15, rax", "movzx   edx, byte ptr [r15-1]", "lea     rax, [r15-1]", "cmp     dl, 39h ; '9'", "jnz     short loc_9BF7"], ["mov~rax,[rsp+0]", "lea~rdx,[r15+0]", "mov~edi,<STR>", "mov~rsi,rbx", "add~rax,rbp", "lea~rcx,[rax+0]", "mov~<TAG>,di", "mov~[yte ptr [rax+0],0", "mov~rdi,rcx", "call~FOO", "add~r15,rax", "movzx~edx,[yte ptr [r15-1]+0]", "lea~rax,[r15-1]+0]", "cmp~dl,0", "jnz~FOO"]], [3, 0, 35, 1, 0, 5, 0, 1, 15, 12, 0.024774774774774775, ["mov     byte ptr [rax], 30h ; '0'", "sub     rax, 1", "movzx   edx, byte ptr [rax]", "cmp     dl, 39h ; '9'", "jz      short loc_9BE8"], ["mov~<TAG>,0", "sub~rax,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 35, 1, 0, 4, 0, 0, 13, 1, 0.03228228228228228, ["mov     eax, 2", "mov     [rsp+78h+var_40], r9", "mul     rcx", "jo      loc_9CEF"], ["mov~eax,0", "mov~[rsp+0],r9", "mul~,rcx", "jo~FOO"]], [0, 0, 35, 0, 0, 9, 0, 0, 12, 2, 0.1111111111111111, ["movzx   esi, r8b", "movzx   r9d, r8b", "mov     [rsp+78h+var_48], esi", "mov     rsi, [rsp+78h+filelen]", "lea     rax, [r15+r9]", "mov     [rsp+78h+var_50], rax", "lea     rcx, [rax+rsi+3]", "cmp     rcx, [rsp+78h+ssize]", "jb      short loc_9BAB"], ["movzx~esi,r8b", "movzx~r9d,r8b", "mov~[rsp+0],esi", "mov~rsi,[rsp+0]", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,[rax+0]", "cmp~rcx,[rsp+0]", "jb~FOO"]], [4, 0, 35, 2, 0, 9, 1, 0, 10, 6, 0.024774774774774775, ["cmp     cl, 39h ; '9'", "setz    al", "add     r15, 1", "and     r8d, eax", "movsx   eax, byte ptr [rbx+r15]", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_9AF0"], ["cmp~cl,0", "setz~al", "add~r15,0", "and~r8d,eax", "movsx~eax,<TAG>", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 9, 7, 0.015765765765765764, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 35, 0, 1, 4, 1, 2, 3, 11, 0.22672672672672672, ["mov     rdi, r12; dirp", "call    _readdir", "test    rax, rax", "jz      loc_9C10"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 4, 10, 0.18393393393393392, ["cmp     qword ptr [rax], 0", "jz      short loc_9A80"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 35, 0, 1, 5, 0, 1, 5, 9, 0.17717717717717718, ["lea     rbx, [rax+13h]", "mov     rdi, rbx; s", "call    _strlen", "cmp     rax, r13", "jb      short loc_9A80"], ["lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "cmp~rax,r13", "jb~FOO"]], [0, 0, 35, 0, 1, 8, 1, 2, 6, 8, 0.17492492492492492, ["mov     rax, [rsp+78h+var_70]", "lea     r15, [r14+2]", "mov     rsi, rbx; s2", "mov     rdx, r15; n", "lea     rdi, [rbp+rax+0]; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_9A80"], ["mov~rax,[rsp+0]", "lea~r15,[r14+0]", "mov~rsi,rbx", "mov~rdx,r15", "lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 35, 1, 0, 5, 0, 1, 7, 7, 0.17192192192192193, ["add     rbx, r15", "movzx   eax, byte ptr [rbx]", "lea     edx, [rax-31h]", "cmp     dl, 8", "ja      short loc_9A80"], ["add~rbx,r15", "movzx~eax,<TAG>", "lea~edx,[rax-31h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 9, 5, 0.19519519519519518, ["cmp     cl, 7Eh ; '~'", "jnz     loc_9A80"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 10, 4, 0.14564564564564564, ["cmp     byte ptr [rbx+r15+1], 0", "jnz     loc_9A80"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 4, 0.03303303303303303, ["mov     byte ptr [rsp+78h+var_40], r8b", "jnz     loc_9A80"], ["mov~[yte ptr [rsp+0],r8b", "jnz~FOO"]], [0, 0, 35, 0, 1, 8, 1, 2, 13, 3, 0.006756756756756757, ["mov     rax, [rsp+78h+filelen]", "mov     rdx, r15; n", "mov     rsi, rbx; s2", "lea     rdi, [rbp+rax+2]; s1", "call    _memcmp", "test    eax, eax", "movzx   r8d, byte ptr [rsp+78h+var_40]", "jg      loc_9A80"], ["mov~rax,[rsp+0]", "mov~rdx,r15", "mov~rsi,rbx", "lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rsp+0]", "jg~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 2, 12, 0.036036036036036036, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 13, 0, 0, 1, 0, 0, 15, -1, 0.06831831831831832, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [4, 0, 35, 1, 0, 8, 0, 1, 8, 6, 0.16816816816816815, ["cmp     al, 39h ; '9'", "movsx   eax, byte ptr [rbx+1]", "mov     r15d, 1", "setz    r8b", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_9B0C"], ["cmp~al,0", "movsx~eax,[yte ptr [rbx+0]", "mov~r15d,0", "setz~r8b", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [3, 1, 37, 2, 4, 32, 0, 5, 0, 14, 0.0, ["push    r15", "push    r14", "mov     r15d, esi", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, file", "sub     rsp, 48h", "mov     [rsp+78h+backup_type], esi", "call    _strlen", "mov     rdi, cs:simple_backup_suffix; s", "mov     r14, rax", "mov     [rsp+78h+filelen], rax", "lea     r12, [r14+1]", "call    _strlen", "lea     rdx, [rax+1]", "mov     eax, 9", "cmp     rdx, 9", "mov     [rsp+78h+simple_backup_suffix_size], rdx", "cmovnb  rax, simple_backup_suffix_size_0", "add     rax, r12", "mov     rdi, rax; n", "mov     [rsp+78h+ssize], rax", "call    xmalloc", "mov     rdx, r12; n", "mov     rsi, file; src", "mov     rdi, rax; dest", "mov     rbp, rax", "call    _memcpy", "cmp     r15d, 1", "jz      loc_9C30"], ["push~r15", "push~r14", "mov~r15d,esi", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,file", "sub~rsp,<STR>", "mov~[rsp+0],esi", "call~FOO", "mov~rdi,<TAG>", "mov~r14,rax", "mov~[rsp+0],rax", "lea~r12,[r14+0]", "call~FOO", "lea~rdx,[rax+0]", "mov~eax,0", "cmp~rdx,0", "mov~[rsp+0],rdx", "cmovnb~rax,simple_backup_suffix_size_0", "add~rax,r12", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,r12", "mov~rsi,file", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "cmp~r15d,0", "jz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 4, -1, 0.1996996996996997, ["mov     rdi, r12; dirp", "call    _closedir", "cmp     [rsp+78h+var_48], 1", "jz      short loc_9C4B"], ["mov~rdi,r12", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 5, -1, 0.06043543543543543, ["cmp     [rsp+78h+var_48], 2", "jnz     short loc_9C67"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 11, 3, 0.13813813813813813, ["cmp     r15, [rsp+78h+var_50]", "ja      short loc_9B56"], ["cmp~r15,[rsp+0]", "ja~FOO"]], [0, 0, 35, 0, 1, 7, 0, 1, 14, 13, 0.024024024024024024, ["lea     rax, [rcx+rcx]", "mov     rdi, rbp; p", "mov     rsi, rax; n", "mov     [rsp+78h+ssize], rax", "call    xrealloc", "mov     r9, [rsp+78h+var_40]", "mov     rbp, rax"], ["lea~rax,<TAG>", "mov~rdi,rbp", "mov~rsi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rbp,rax"]], [1, 0, 7, 0, 2, 8, 0, 3, 2, -1, 0.14301801801801803, ["mov     rdi, s; name", "call    last_component", "mov     rdi, rax; name", "mov     rbx, rax", "call    base_len", "cmp     rax, 0Eh", "mov     r12, rax", "ja      short loc_9C80"], ["mov~rdi,s", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "cmp~rax,0", "mov~r12,rax", "ja~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, -1, 0.04954954954954955, ["cmp     [rsp+78h+backup_type], 2", "jnz     short loc_9C4B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [5, 0, 36, 2, 3, 23, 1, 4, 1, 13, 0.02027027027027027, ["mov     rdi, s; name", "call    last_component", "mov     file, rax", "sub     rax, s", "mov     rdi, rbx; name", "mov     [rsp+78h+var_70], rax", "call    base_len", "movzx   r13d, word ptr [rbx]", "mov     r8d, 2Eh ; '.'", "mov     filelen_0, rax", "mov     [rbx], r8w", "mov     rdi, s; name", "call    _opendir", "mov     [rsp+78h+var_50], 1", "mov     r12, rax", "mov     [rsp+78h+var_48], 2", "mov     [rbx], r13w", "add     rbx, r14", "test    rax, rax", "mov     dword ptr [rbx], 7E317E2Eh", "mov     byte ptr [rbx+4], 0", "lea     r13, [r14+4]", "jz      loc_9C26"], ["mov~rdi,s", "call~FOO", "mov~file,rax", "sub~rax,s", "mov~rdi,rbx", "mov~[rsp+0],rax", "call~FOO", "movzx~r13d,<TAG>", "mov~r8d,0", "mov~filelen_0,rax", "mov~<TAG>,r8w", "mov~rdi,s", "call~FOO", "mov~[rsp+0],0", "mov~r12,rax", "mov~[rsp+0],0", "mov~<TAG>,r13w", "add~rbx,r14", "test~rax,rax", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "lea~r13,[r14+0]", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0259009009009009, ["mov     rdx, rax"], ["mov~rdx,rax"]], [0, 0, 4, 0, 0, 1, 0, 1, 5, -1, 0.0007507507507507507, ["jmp     short loc_9CAC"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.01951951951951952, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 2, 0, 0, 3, 0, 0, 5, -1, 0.028528528528528527, ["cmp     r12, rdx", "mov     [rbx], r14w", "jbe     short loc_9C67"], ["cmp~r12,rdx", "mov~<TAG>,r14w", "jbe~FOO"]], [0, 0, 8, 0, 1, 5, 0, 1, 1, -1, 0.012012012012012012, ["mov     rax, [rsp+78h+filelen]", "mov     rdx, [rsp+78h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax+0]; dest", "call    _memcpy"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,[s+0]", "call~FOO"]], [2, 0, 1, 2, 0, 9, 0, 1, 6, -1, 0.0, ["mov     rax, [rsp+78h+filelen]", "lea     rcx, [rdx-1]", "add     rax, s", "sub     rax, rbx", "cmp     rax, rdx", "cmovnb  rax, rcx", "mov     byte ptr [rbx+rax], 7Eh ; '~'", "mov     byte ptr [rbx+rax+1], 0", "jmp     short loc_9C67"], ["mov~rax,[rsp+0]", "lea~rcx,[rdx-1]+0]", "add~rax,s", "sub~rax,rbx", "cmp~rax,rdx", "cmovnb~rax,rcx", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 14, 13, 0.015765765765765764, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [21, 8, 44, 4, 38, 62, 2, 223, 0.07796, 1, 16], "succs": [[32, 30], [0, 29], [10, 19], [2, 35], [2, 4], [25, 36], [3, 5], [14, 7], [7], [10, 22], [9, 11], [9, 12], [9, 13], [9, 20], [9, 15], [24, 9], [9, 17], [9, 6], [9], [22], [8, 14], [33, 28], [26, 23], [27, 37], [16, 6], [3], [1, 37], [26, 31], [18, 27], [32], [29], [33], [34, 37], [26], [37], [4], [], []], "fname": "find_backup_file_name", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [version], 0", "jz      short loc_9D10"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    version, version", "jz      short loc_9D10"], ["test~version,version", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.16666666666666666, ["jmp     get_version_0"], ["jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 2", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 5, 0, 7, 0.06667, 0, 0], "succs": [[2, 3], [0, 3], [4], [], []], "fname": "get_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.11904761904761904, ["cmp     byte ptr [rax], 0", "jz      short loc_9D60"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 1, 1, 5, 1, 2, 1, 1, 0.14285714285714285, ["lea     context, aVersionControl; \"VERSION_CONTROL\"", "sub     rsp, 8", "call    _getenv", "test    rax, rax", "jz      short loc_9D60"], ["lea~context,<TAG>", "sub~rsp,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    version, version", "jz      short loc_9D2A"], ["test~version,version", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.047619047619047616, ["cmp     byte ptr [version], 0", "jnz     short loc_9D52"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, 2", "add     rsp, 8", "retn"], ["mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.09523809523809523, ["lea     rdi, asc_1465E; \"$\"", "mov     rsi, rax; version", "add     rsp, 8"], ["lea~rdi,<TAG>", "mov~rsi,rax", "add~rsp,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.11904761904761904, ["jmp     get_version_0"], ["jmp~FOO"]]], "func_feature": [1, 2, 6, 0, 8, 10, 1, 18, 0.06548, 2, 3], "succs": [[4, 5], [0, 4], [1, 3], [1, 7], [], [7], [], [6]], "fname": "xget_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_9DAA"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_9DA0"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_9D80"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_9DCA"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_9D8C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_9DB5"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_9DCA"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_9DB5"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 9, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 19, 0, 0, 2, 1, 1, 0, 0, 0.029644268774703556, ["test    cl, cl", "jz      short loc_9E09"], ["test~cl,cl", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 3, 7, 0.14031620553359683, ["cmp     al, 2Fh ; '/'", "jnz     short loc_9E00"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 0, 5, 7, 0.0, ["mov     rbx, rdx", "xor     ecx, ecx"], ["mov~rbx,rdx", "xor~ecx,ecx"]], [1, 0, 1, 1, 0, 6, 0, 1, 3, -1, 0.024703557312252964, ["add     rsp, 8", "mov     rdi, name; string", "mov     rsi, rax; n", "pop     rbx", "pop     name", "jmp     xstrndup"], ["add~rsp,0", "mov~rdi,name", "mov~rsi,rax", "pop~rbx", "pop~name", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 2, -1, 0.12351778656126482, ["mov     name, rbp; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_9E81"], ["mov~name,rbp", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 4, -1, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_9E81"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 5, -1, 0.02766798418972332, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_9E81"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, -1, 0.07114624505928853, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_9E98"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [1, 0, 19, 1, 0, 4, 1, 1, 5, 6, 0.06521739130434782, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_9E28"], ["add~rdx,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 8, 0.09486166007905138, ["mov     rdx, rbx", "xor     ecx, ecx", "jmp     short loc_9E14"], ["mov~rdx,rbx", "xor~ecx,ecx", "jmp~FOO"]], [2, 0, 19, 1, 0, 5, 1, 1, 4, 6, 0.11067193675889328, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "mov     ecx, 1", "test    al, al", "jnz     short loc_9E14"], ["add~rdx,0", "movzx~eax,<TAG>", "mov~ecx,0", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 10, 0, 0.001976284584980237, ["jmp     short loc_9EB0"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 9, 1, 0.02766798418972332, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_9E46"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 6, -1, 0.001976284584980237, ["jmp     short loc_9E98"], ["jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.20158102766798416, ["cmp     byte ptr [rbx], 0", "jz      short loc_9E68"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 8, 2, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_9E46"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 7, 3, 0.07114624505928853, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_9EB0"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 6, 4, 0.11561264822134387, ["mov     name, rbx; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_9E46"], ["mov~name,rbx", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [2, 0, 1, 2, 0, 10, 1, 1, 7, -1, 0.016798418972332016, ["xor     edx, edx", "cmp     byte ptr [rbx+rax], 2Fh ; '/'", "mov     rdi, rbx; string", "setz    dl", "add     rsp, 8", "pop     rbx", "pop     name", "add     rax, rdx", "mov     rsi, length; n", "jmp     xstrndup"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rdi,rbx", "setz~dl", "add~rsp,0", "pop~rbx", "pop~name", "add~rax,rdx", "mov~rsi,length", "jmp~FOO"]], [2, 0, 23, 1, 0, 8, 0, 1, 0, 10, 0.0, ["push    rbp", "push    rbx", "mov     rbp, name", "mov     rbx, name", "sub     rsp, 8", "movzx   eax, byte ptr [name]", "cmp     al, 2Fh ; '/'", "jnz     short loc_9DF3"], ["push~rbp", "push~rbx", "mov~rbp,name", "mov~rbx,name", "sub~rsp,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 11, 0.001976284584980237, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 22, 1, 0, 4, 0, 1, 2, 10, 0.04150197628458498, ["add     rbx, 1", "movzx   eax, byte ptr [rbx]", "cmp     al, 2Fh ; '/'", "jz      short loc_9DE8"], ["add~rbx,0", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 9, 0.11857707509881422, ["test    al, al", "jz      short loc_9E68"], ["test~al,al", "jz~FOO"]]], "func_feature": [2, 7, 21, 0, 24, 39, 0, 79, 0.05838, 0, 7], "succs": [[8, 2], [0, 10], [8], [18], [3, 7], [3, 6], [3, 13], [3, 5], [1, 14], [1], [1, 14], [15], [19, 11], [5], [17, 4], [19, 12], [19, 15], [16, 19], [], [18], [21, 23], [22], [22, 23], [9, 4]], "fname": "base_name", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_9EF0"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_9F10"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_9EF8"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_9EEA"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 6, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 4, 0, 1, 2, 0, 1, 0, 0, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    _fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_A00A"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 0, 3, 0.0, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; fp", "push    r12", "push    rbp", "push    rbx", "call    freadahead", "test    rax, rax", "jnz     loc_9FE8"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 1, 3, 0.030303030303030304, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "xor     esi, esi; off", "mov     edx, 1; whence", "call    _fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_9F68"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 2, 1, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_A020"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_9F88"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_9F88"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_9FD3"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 64, 0.03205, 6, 0], "succs": [[8], [0, 10], [9, 3], [1, 10], [], [4], [4], [12], [11, 7], [8, 5], [8, 6], [12], []], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.06666666666666667, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name_0", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_A0CE"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_A079"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_A0C3"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_A0C3"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [8, 8, 12, 0, 7, 8, 3, 43, 0.02381, 7, 0], "succs": [[2, 5], [0, 4], [3], [], [3, 6], [3], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["cmp     byte ptr [file+length-1], 2Fh ; '/'", "lea     rax, [length-1]", "jnz     short loc_A133"], ["cmp~[yte ptr [file+0],0", "lea~rax,[length-1]+0]", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.19047619047619047, ["cmp     prefix_length, length", "jnz     short loc_A120"], ["cmp~prefix_length,length", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 4, -1, 0.023809523809523808, ["mov     length, rax"], ["mov~length,rax"]], [1, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     rdx, length", "mov     rax, rdx", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rdx,length", "mov~rax,rdx", "pop~file", "pop~prefix_length", "retn"]], [2, 0, 7, 2, 1, 12, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "xor     ebp, ebp", "mov     rbx, file", "sub     rsp, 8", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_A140"], ["push~rbp", "push~rbx", "xor~ebp,ebp", "mov~rbx,file", "sub~rsp,0", "cmp~<TAG>,0", "setz~bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 1, 0.023809523809523808, ["jmp     short loc_A140"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rdx, [length-1]", "jz      short loc_A12E"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rdx,[length-1]+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     rax, length", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rax,length", "pop~file", "pop~prefix_length", "retn"]]], "func_feature": [1, 1, 5, 0, 8, 10, 2, 33, 0.05357, 0, 4], "succs": [[2, 7], [0, 7], [1], [], [3, 6], [3], [1, 5], []], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 2, 1, 3, 18, 2, 4, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    dir_len", "test    rax, rax", "mov     rbx, rax", "setz    al", "movzx   eax, al", "lea     rdi, [length+rax+1]; n", "call    xmalloc", "mov     rdx, length; n", "mov     rsi, file; src", "mov     rdi, dir; dest", "call    _memcpy", "test    length, length", "mov     rcx, rax", "jnz     short loc_A192"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "setz~al", "movzx~eax,al", "lea~rdi,[length+0]", "call~FOO", "mov~rdx,length", "mov~rsi,file", "mov~rdi,dir", "call~FOO", "test~length,length", "mov~rcx,rax", "jnz~FOO"]], [2, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     byte ptr [rax], 2Eh ; '.'", "mov     ebx, 1"], ["mov~<TAG>,0", "mov~ebx,0"]], [2, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     byte ptr [rcx+length], 0", "add     rsp, 8", "mov     rax, rcx", "pop     length", "pop     file", "retn"], ["mov~<TAG>,0", "add~rsp,0", "mov~rax,rcx", "pop~length", "pop~file", "retn"]]], "func_feature": [3, 2, 4, 0, 3, 3, 3, 26, 0.0, 0, 2], "succs": [[1, 2], [2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 14, 0, 0, 3, 0, 1, 0, 0, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_A210"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_A210"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_A258"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_A2F0"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [1, 1, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_A210"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_A210"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [1, 1, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_A210"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_A300"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_A210"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_A318"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_A29D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]]], "func_feature": [0, 25, 11, 0, 16, 23, 2, 110, 0.07381, 0, 12], "succs": [[10, 3], [0, 3], [11], [2, 12], [3, 7], [3, 4], [3], [3, 6], [], [8, 13], [3, 5], [14, 15], [11], [], [9], [9]], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "jmp     strmode"], ["mov~edi,[statp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "filemodestring", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     byte ptr [dirbase+dirbaselen-1], 2Fh ; '/'", "setnz   bl", "movzx   ebx, bl"], ["cmp~[yte ptr [dirbase+0],0", "setnz~bl", "movzx~ebx,bl"]], [1, 0, 9, 3, 2, 20, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r14, dir", "push    rbp", "push    rbx", "mov     r12, abase", "sub     rsp, 18h", "call    last_component", "mov     r13, rax", "mov     rdi, dirbase; name", "mov     rbp, r13", "sub     rbp, dir", "call    base_len", "add     rbp, rax", "test    rax, rax", "mov     rbx, rax", "jz      short loc_A384"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r14,dir", "push~rbp", "push~rbx", "mov~r12,abase", "sub~rsp,0", "call~FOO", "mov~r13,rax", "mov~rdi,dirbase", "mov~rbp,r13", "sub~rbp,dir", "call~FOO", "add~rbp,rax", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, 0, 0.0, ["jmp     short loc_A400"], ["jmp~FOO"]], [2, 0, 7, 1, 0, 3, 0, 1, 2, 1, 0.1111111111111111, ["add     r12, 1", "cmp     byte ptr [r12], 2Fh ; '/'", "jnz     short loc_A391"], ["add~r12,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 1, 2, 0.19444444444444442, ["movzx   eax, byte ptr [abase]", "cmp     al, 2Fh ; '/'", "mov     [rsp+48h+var_39], al", "jz      short loc_A400"], ["movzx~eax,<TAG>", "cmp~al,0", "mov~[rsp+0],al", "jz~FOO"]], [1, 0, 3, 0, 1, 8, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "test    base_in_result, base_in_result", "mov     byte ptr [rax], 2Fh ; '/'", "lea     rdi, [rax+rbx]; dest", "jz      short loc_A3DF"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "test~base_in_result,base_in_result", "mov~<TAG>,0", "lea~rdi,<TAG>", "jz~FOO"]], [0, 0, 4, 1, 2, 9, 1, 3, 2, -1, 0.2777777777777778, ["mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rbx+dirlen+1]", "mov     [rsp+48h+baselen], rax", "add     rdi, baselen_0; size", "call    _malloc", "test    rax, rax", "mov     dirbase, rax", "jz      short loc_A3EE"], ["mov~rdi,r12", "call~FOO", "lea~rdi,[rbx+0]", "mov~<TAG>,rax", "add~rdi,baselen_0", "call~FOO", "test~rax,rax", "mov~dirbase,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, -1, 0.027777777777777776, ["mov     rdx, [rsp+48h+baselen]; n", "mov     rsi, r12; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,<TAG>", "mov~rsi,r12", "call~FOO", "mov~<TAG>,0"]], [1, 0, 2, 1, 0, 6, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "cmp     [rsp+48h+var_39], 2Fh ; '/'", "mov     rcx, p", "setz    al", "sub     rcx, rax", "mov     [base_in_result], rcx"], ["xor~eax,eax", "cmp~[rsp+0],0", "mov~rcx,p", "setz~al", "sub~rcx,rax", "mov~<TAG>,rcx"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     rbx", "pop     dirlen", "pop     r12", "pop     p_concat", "pop     dir", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~rbx", "pop~dirlen", "pop~r12", "pop~p_concat", "pop~dir", "pop~base_in_result", "retn"]]], "func_feature": [6, 4, 12, 0, 10, 14, 1, 67, 0.07778, 0, 7], "succs": [[4], [0, 4], [3], [2, 6], [3, 6], [8, 7], [9, 5], [9], [7], []], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_A423"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 4, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 7, 0, 1, 5, 1, 2, 0, 0, 0.07692307692307693, ["mov     rsi, [rax]", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_A4E0"], ["mov~rsi,<TAG>", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.1043956043956044, ["mov     rax, [cursor+8]", "test    rax, rax", "jnz     short loc_A4B8"], ["mov~rax,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.01098901098901099, ["mov     cursor, [cursor+8]"], ["mov~cursor,[cursor+0]"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.04395604395604396, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      loc_A510"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.05494505494505495, ["test    r12b, r12b", "mov     rax, [bucket]", "jz      short loc_A4D5"], ["test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     rdx, [cursor+8]", "test    r12b, r12b", "mov     rax, [rdx]", "jz      short loc_A4D5"], ["mov~rdx,[cursor+0]", "test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.005494505494505495, ["mov     qword ptr [bucket], 0", "jmp     short loc_A4D5"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 1, -1, 0.06593406593406594, ["mov     [bucket_head], bucket", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_A4D3"], ["mov~<TAG>,bucket", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 14, 2, 1, 17, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     rbx, [table]", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [table+8], bucket", "jbe     loc_A519"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~rbx,<TAG>", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.02197802197802198, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 0, 0, 0, 12, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     bucket", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~bucket", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 11, 0, 1, 4, 1, 2, 2, -1, 0.09890109890109891, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_A4CA"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 0, 0, 12, 0, 0, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     cursor", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~cursor", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]]], "func_feature": [4, 8, 12, 0, 15, 19, 2, 78, 0.0348, 0, 2], "succs": [[2, 5], [0, 10], [1], [11, 6], [9, 3], [9, 14], [9], [10, 12], [13, 7], [], [9], [], [1, 4], [], []], "fname": "hash_find_entry", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.09027777777777778, ["ucomiss xmm0, xmm1", "mov     eax, 1", "ja      short locret_A594"], ["ucomiss~xmm0,xmm1", "mov~eax,0", "ja~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 2, 0.1388888888888889, ["movss   xmm3, cs:dword_14784", "ucomiss xmm3, xmm2", "jb      short loc_A588"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.013888888888888888, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 4, 0, 0, 4, 2, 0.16666666666666666, ["addss   xmm1, cs:dword_14774", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_A588"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 2, 0.16666666666666666, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_14780", "jb      short loc_A588"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 2, 2, 0.1388888888888889, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_1477C", "jbe     short loc_A588"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 1, 2, 0.08333333333333333, ["movss   xmm1, cs:dword_14778", "ucomiss xmm1, xmm0", "jbe     short loc_A588"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 2, 0.0, ["mov     rax, [rdi]", "movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_14774", "jbe     short loc_A588"], ["mov~rax,<TAG>", "movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 1, 0, 0, 3, 1, 0, 1, 1, 0.09027777777777778, ["lea     rax, default_tuning", "mov     [rdi], rax", "xor     eax, eax"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "xor~eax,eax"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 10, 16, 4, 28, 0.08889, 6, 0], "succs": [[9, 2], [0, 8], [8], [8, 1], [8, 3], [8, 4], [8, 5], [8, 6], [9], []], "fname": "check_tuning", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 7, 1, 0, 4, 1, 1, 0, 0, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_A5F8"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_A60C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_A5E0"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [1, 0, 7, 0, 0, 4, 1, 1, 3, -1, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_A605"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_A617"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[0, 5], [0], [3, 6], [2, 7], [2], [3], [1, 5], [], [], [8, 4]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_A630"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_A65D"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_A65D"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_A650"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_A670"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_A666"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 5], [0, 2], [0, 4], [0, 3], [3], [8, 7], [1, 5], [], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 2, 0, 0, 8, 2, 1, 0, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_A738"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 0, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_14798", "js      short loc_A7A9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 0, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_14798", "jns     short loc_A72F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 0, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_A6D5"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 0, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_A6DC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 0, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_A6B0"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 0, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 0, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_A6E5"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 0, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 0, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_A780"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 5, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_A6C8"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, 0, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, 0, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[12], [0, 13], [0, 13], [6, 7], [3, 5], [10, 4], [5], [11], [9, 10], [4], [1, 2], [11, 6], [14], [12], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.03571428571428571, ["jmp     short loc_A821"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 1, -1, 0.10714285714285714, ["mov     rsi, [bucket+0]", "test    rsi, rsi", "jnz     short loc_A80C"], ["mov~rsi,[bucket+0]", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 2, 1, 13, 0, 1, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, entry", "push    rbp", "mov     rbp, [table]", "mov     r12, table", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     short loc_A83A"], ["push~r13", "push~r12", "mov~r13,entry", "push~rbp", "mov~rbp,<TAG>", "mov~r12,table", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, -1, 0.03571428571428571, ["mov     rsi, [cursor+0]"], ["mov~rsi,[cursor+0]"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.08928571428571427, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_A808"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbp", "xor     eax, eax", "pop     table", "pop     entry", "retn"], ["pop~rbp", "xor~eax,eax", "pop~table", "pop~entry", "retn"]], [0, 0, 5, 0, 1, 4, 1, 2, 2, -1, 0.17857142857142855, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_A830"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, [cursor+0]", "pop     cursor", "pop     table", "pop     entry", "retn"], ["mov~rax,[cursor+0]", "pop~cursor", "pop~table", "pop~entry", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 4, 7, 0, 9, 10, 2, 36, 0.0496, 0, 2], "succs": [[5], [0, 6], [8, 1], [6], [3, 5], [], [4, 7], [], []], "fname": "hash_lookup", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_A873"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 0, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_A878"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_A860"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 4, 0, 0, 0, 1, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_A878"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 0, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_A876"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[5, 6], [9, 2], [1, 4], [1], [], [8, 9], [], [], [3, 7], []], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 9, 0, 0, 3, 1, 1, 0, 0, 0.08181818181818182, ["test    cursor, cursor", "mov     rax, cursor", "jz      short loc_A8F8"], ["test~cursor,cursor", "mov~rax,cursor", "jz~FOO"]], [1, 0, 11, 1, 1, 14, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbx, [table]", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rsi, [table+8]", "shl     rax, 4", "lea     rdx, [rbx+rax]", "cmp     rsi, bucket", "jbe     short loc_A908"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbx,<TAG>", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rsi,[table+0]", "shl~rax,0", "lea~rdx,<TAG>", "cmp~rsi,bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.09090909090909091, ["test    rax, rax", "jz      short loc_A8F8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, -1, 0.07272727272727272, ["mov     rcx, [rax]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_A8E0"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 4, -1, 0.01818181818181818, ["mov     rcx, [cursor]", "mov     cursor, [cursor+8]", "cmp     rcx, entry", "jnz     short loc_A8CF"], ["mov~rcx,<TAG>", "mov~cursor,[cursor+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.02727272727272727, ["mov     rax, [rax]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [1, 0, 4, 1, 0, 3, 0, 1, 2, -1, 0.14545454545454545, ["add     bucket, 10h", "cmp     rsi, bucket", "ja      short loc_A8F0"], ["add~bucket,0", "cmp~rsi,bucket", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.03636363636363636, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_A8E8"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, -1, 0.05454545454545454, ["test    rax, rax", "jz      short loc_A8F8"], ["test~rax,rax", "jz~FOO"]]], "func_feature": [2, 5, 9, 0, 12, 17, 0, 46, 0.04394, 0, 2], "succs": [[3, 7], [0, 8], [5, 7], [2, 11], [2, 11], [9], [], [10, 6], [], [], [9, 7], [4, 7]], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_A95D"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_A91C"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_A970"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_A940"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_A967"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_A972"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_A95A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[1, 7], [0, 8], [0], [9, 4], [3, 6], [3], [1], [8, 12], [], [], [], [10, 2], [5, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 0, 0, 0, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_A9E6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_A9D4"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_A9D4"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_A9A2"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_A9CA"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_A9B3"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 6, -1, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_A9B0"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[6], [0, 2], [3], [], [9, 3], [3, 6], [5, 7], [4], [4], [8, 5]], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_AA1D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_AA00"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 18, 0, 0, 3, 0, 0, 0, 0, 0.12931034482758622, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_1478C", "jnb     short fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 19, 0, 0, 8, 2, 1, 6, 0, 0.04802955665024631, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_ABFF"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 6, -1, 0.04802955665024631, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [2, 0, 13, 2, 0, 10, 0, 0, 8, -1, 0.2210591133004926, ["mov     rax, rbx", "mov     rcx, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     rbx, 9", "mov     rax, rcx", "jbe     short loc_AB48"], ["mov~rax,rbx", "mov~rcx,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~rbx,0", "mov~rax,rcx", "jbe~FOO"]], [1, 0, 13, 1, 0, 2, 0, 1, 10, -1, 0.021551724137931036, ["add     rbx, 2", "jmp     short loc_AAF0"], ["add~rbx,0", "jmp~FOO"]], [4, 0, 13, 0, 0, 6, 1, 0, 7, -1, 0.19704433497536947, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      rbx, 1", "nop     dword ptr [rax+00h]"], ["cmp~candidate,0", "mov~eax,0", "mov~r8,0", "cmovb~candidate,rax", "or~rbx,0", "nop~[word ptr [rax+0]"]], [0, 1, 27, 0, 1, 9, 1, 2, 2, 4, 0.06157635467980296, ["mov     rbx, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "mov     rbp, hasher", "mov     r13, data_freer", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_ABD0"], ["mov~rbx,candidate", "mov~edi,<STR>", "mov~r15,tuning", "mov~rbp,hasher", "mov~r13,data_freer", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 1, 5, 0.03201970443349754, ["test    comparator, comparator", "mov     r12, comparator", "jz      loc_ABD0"], ["test~comparator,comparator", "mov~r12,comparator", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.0874384236453202, ["test    rcx, rcx", "jz      short loc_AB4D"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, -1, 0.11822660098522167, ["ucomiss xmm0, cs:dword_14790", "jb      short loc_AC34"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 15, 0, 0, 5, 1, 1, 9, -1, 0.053571428571428575, ["subss   xmm0, cs:dword_14790", "mov     rax, 8000000000000000h", "cvttss2si rbx, xmm0", "xor     rbx, rax", "jmp     loc_AABE"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbx,xmm0", "xor~rbx,rax", "jmp~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 3, 3, 0.08866995073891626, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_ABD5"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [3, 0, 13, 0, 0, 4, 0, 1, 10, -1, 0.05603448275862069, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_AB31"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 12, -1, 0.0067733990147783255, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [1, 0, 4, 0, 1, 6, 1, 2, 11, -1, 0.03633004926108374, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 3, 0.07266009852216748, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 5, -1, 0.049876847290640396, ["mov     rdi, table; ptr", "call    free"], ["mov~rdi,table", "call~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 6, -1, 0.21798029556650247, ["mov     rax, 0FFFFFFFFFFFFFFFh", "cmp     candidate, rax", "ja      fail"], ["mov~rax,0", "cmp~candidate,rax", "ja~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 10, -1, 0.08866995073891626, ["mov     rax, 0FFFFFFFFFFFFFFFh", "mov     [table+10h], rbx", "cmp     rbx, rax", "ja      short fail"], ["mov~rax,0", "mov~[table+0],rbx", "cmp~rbx,rax", "ja~FOO"]], [0, 0, 22, 0, 1, 6, 1, 2, 4, 2, 0.038177339901477834, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_14788", "jz      short fail"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 1, 1, 12, -1, 0.004310344827586207, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_AB4D"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 13, 3, 0, 8, 1, 1, 11, -1, 0.05233990147783251, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rbx, rsi", "mov     rax, rdx", "ja      short loc_AB28"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rbx,rsi", "mov~rax,rdx", "ja~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 2, 0.0874384236453202, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_AC3E"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.053571428571428575, ["cvttss2si rbx, xmm0", "jmp     loc_AABE"], ["cvttss2si~rbx,xmm0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.02647783251231527, ["xor     r14d, r14d", "jmp     short loc_ABAF"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 1, 0, 6, 1, 0.014778325123152709, ["test    candidate, candidate", "movss   xmm1, dword ptr [tuning+8]", "jns     short loc_ABF6"], ["test~candidate,candidate", "movss~xmm1,[word ptr [tuning+0]", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.12623152709359606, ["test    rax, rax", "jnz     short loc_AB58"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 29, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    hasher, hasher", "jz      loc_ABD0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~hasher,hasher", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 5, 1, 0.05172413793103448, ["test    candidate, candidate", "js      short loc_AC49"], ["test~candidate,candidate", "js~FOO"]]], "func_feature": [5, 18, 26, 0, 30, 48, 5, 135, 0.06966, 4, 11], "succs": [[16, 9], [0], [0], [8, 27], [3], [3], [25, 11], [25, 6], [4, 12], [10, 23], [17], [19, 15], [21], [24], [16, 13], [16, 22], [25], [16, 5], [16, 14], [16, 29], [4, 21], [27, 20], [17, 26], [17], [], [24], [1, 2], [18, 4], [25, 7], [1, 2]], "fname": "hash_initialize", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 11, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_ACA6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_AC98"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_ACE1"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_AC80"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_ACEB"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_ACD0"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 4, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_ACC5"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2], [0, 2], [1, 6], [4, 7], [11, 3], [11, 3], [8, 9], [10, 6], [4], [8], [1], []], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 9, 0, 1, 5, 1, 2, 0, 0, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_AD80"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 4, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 21, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_AD63"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_AD63"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 4, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_AD70"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_AD91"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_AD9C"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 3, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_ADC1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 1, 2, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_AD9C"], ["cmp~rbp,rax", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_AD56"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 5, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_AD28"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 5, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_AD43"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_ADB0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 18, 0, 1, 4, 1, 2, 6, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_AD40"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 5, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 1, 0, 0, 6, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[0, 4], [0], [9, 3], [9, 6], [8, 5], [1, 4], [8, 7], [13], [10, 12], [8, 21], [16], [], [11], [14, 15], [20, 13], [18], [16, 12], [18], [17, 19], [14], [9], [5]], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 20, 2, 1, 8, 0, 1, 0, 0, 0.44155844155844154, ["mov     rbx, [new_table]", "mov     rsi, [new_table+10h]", "mov     rdi, r15", "call    qword ptr [new_table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [new_table+8], new_bucket", "jbe     loc_AF90"], ["mov~rbx,<TAG>", "mov~rsi,[new_table+0]", "mov~rdi,r15", "call~[word ptr [new_table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[new_table+0],new_bucket", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.19047619047619047, ["mov     r13, bucket", "jmp     short loc_AE71"], ["mov~r13,bucket", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 2, 0.2077922077922078, ["mov     r15, [next+0]", "mov     r13, next"], ["mov~r15,[next+0]", "mov~r13,next"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 22, 1, 1, 17, 1, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     rax, table_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rcx, [rax+38h]; comparator", "mov     rdx, [rax+30h]; hasher", "mov     [rsp+48h+table], table_0", "mov     r8, [rax+40h]; data_freer", "mov     table_0, candidate; candidate", "mov     candidate, [table_0+28h]; tuning", "call    hash_initialize", "test    new_table, new_table", "jz      loc_AF7F"], ["push~r15", "push~r14", "mov~rax,table_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rcx,[rax+0]", "mov~rdx,[rax+0]", "mov~[rsp+0],table_0", "mov~r8,[rax+0]", "mov~table_0,candidate", "mov~candidate,[table_0+0]", "call~FOO", "test~new_table,new_table", "jz~FOO"]], [1, 0, 20, 0, 1, 4, 1, 2, 9, 5, 0.07034632034632035, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_AF53"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 6, 5, 0.4025974025974026, ["cmp     qword ptr [new_bucket], 0", "mov     rbp, [cursor+8]", "jnz     short loc_AE50"], ["cmp~<TAG>,0", "mov~rbp,[cursor+0]", "jnz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 7, 4, 0.16017316017316016, ["mov     [new_bucket], r15", "add     qword ptr [new_table+18h], 1", "cmp     bucket, cursor", "jz      short loc_AE65"], ["mov~<TAG>,r15", "add~[word ptr [new_table+0],0", "cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 9, 5, 0.010822510822510822, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 20, 0, 0, 6, 1, 1, 8, 3, 0.06060606060606061, ["mov     qword ptr [cursor+0], 0", "mov     rax, [new_table+48h]", "test    next, next", "mov     [cursor+8], rax", "mov     [new_table+48h], cursor", "jnz     short loc_AE6A"], ["mov~[word ptr [cursor+0],0", "mov~rax,[new_table+0]", "test~next,next", "mov~[cursor+0],rax", "mov~[new_table+0],cursor", "jnz~FOO"]], [0, 0, 21, 0, 0, 7, 0, 0, 1, 5, 0.04329004329004329, ["mov     rcx, [rsp+48h+table]", "mov     r12, new_table", "mov     r14, [rcx]", "cmp     [rcx+8], bucket", "mov     new_table, [rcx+48h]", "mov     [new_table+48h], rax", "jbe     loc_AEE6"], ["mov~rcx,[rsp+0]", "mov~r12,new_table", "mov~r14,<TAG>", "cmp~[rcx+0],bucket", "mov~new_table,[rcx+0]", "mov~[new_table+0],rax", "jbe~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 2, 4, 0.08008658008658008, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 1, 2, 24, 0, 2, 2, -1, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rax, [new_table]", "mov     rdx, [rsp+48h+table]", "mov     rdi, new_table; ptr", "mov     [rdx], rax", "mov     rax, [new_table+8]", "mov     [rdx+8], rax", "mov     rax, [new_table+10h]", "mov     [rdx+10h], rax", "mov     rax, [new_table+18h]", "mov     [rdx+18h], rax", "mov     rax, [new_table+48h]", "mov     [rdx+48h], rax", "call    free", "add     rsp, 18h", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     new_table", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,new_table", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~new_table", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.0367965367965368, ["mov     bucket, [rax]"], ["mov~bucket,<TAG>"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 3, 0.20995670995670995, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_AED0"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 4, 4, 0.16233766233766234, ["mov     rax, [rsp+48h+table]", "add     bucket, 10h", "cmp     [rax+8], bucket", "ja      loc_AE38"], ["mov~rax,[rsp+0]", "add~bucket,0", "cmp~[rax+0],bucket", "ja~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 8, 6, 0.1406926406926407, ["mov     rax, [new_table+48h]", "test    rax, rax", "jz      short loc_AF70"], ["mov~rax,[new_table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 7, 5, 0.20562770562770563, ["cmp     bucket, cursor", "jz      loc_AF40"], ["cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 5, 0.03354978354978355, ["mov     rcx, [rax+8]", "mov     [new_table+48h], rcx"], ["mov~rcx,[rax+0]", "mov~[new_table+0],rcx"]], [0, 0, 20, 0, 0, 2, 1, 1, 8, 3, 0.2813852813852814, ["test    next, next", "jz      short loc_AED0"], ["test~next,next", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 8, 4, 0.02813852813852814, ["mov     rax, [new_bucket+8]", "mov     [cursor+8], rax", "mov     [new_bucket+8], cursor"], ["mov~rax,[new_bucket+0]", "mov~[cursor+0],rax", "mov~[new_bucket+0],cursor"]], [0, 0, 20, 0, 0, 5, 0, 1, 10, 4, 0.10822510822510822, ["mov     rdx, [new_bucket+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax", "jmp     loc_AE65"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax", "jmp~FOO"]]], "func_feature": [6, 7, 18, 0, 23, 32, 2, 114, 0.12498, 0, 7], "succs": [[6, 7], [0], [0], [], [11, 3], [3, 22], [], [8, 18], [10, 20], [16], [9, 2], [12, 13], [15], [], [13], [16, 1], [14, 15], [19, 5], [17, 21], [22], [16, 2], [20], [20]], "fname": "hash_rehash", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 31, 0, 0, 3, 0, 1, 0, 0, 0.049910873440285206, ["mov     r12, [rsp+28h+bucket]", "cmp     qword ptr [r12], 0", "jz      short loc_B030"], ["mov~r12,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 32, 0, 1, 7, 2, 2, 1, -1, 0.0285204991087344, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rbp, table", "mov     rbx, entry", "call    hash_find_entry", "test    data, data", "jz      short loc_AFF8"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "test~data,data", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 14, -1, 0.10606060606060605, ["ucomiss xmm0, cs:dword_1478C", "jnb     short loc_B09B"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 13, -1, 0.11853832442067735, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jnz     short loc_B101"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mulss   xmm0, xmm2"], ["mulss~xmm0,xmm2"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.013368983957219251, ["mov     data, [table+48h]", "test    rax, rax", "jz      short loc_B088"], ["mov~data,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 4, -1, 0.0035650623885918, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.07397504456327986, ["ucomiss xmm0, cs:dword_14790", "jnb     loc_B1BE"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 4, -1, 0.0089126559714795, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_B014"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.021836007130124777, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 14, 0, 0, 8, 2, 1, 11, -1, 0.06818181818181818, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_B0E6"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 10, -1, 0.14705882352941177, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_B180"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 5, -1, 0.011140819964349376, ["xor     eax, eax", "jmp     loc_AFD6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.0338680926916221, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_B07B"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.021836007130124777, ["subss   xmm0, cs:dword_14790", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_B11C"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [1, 0, 3, 1, 0, 7, 0, 1, 5, -1, 0.007575757575757575, ["mov     rdx, [r12+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [r12+8], rax", "mov     rax, entry", "add     qword ptr [table+20h], 1", "jmp     short loc_AFD6"], ["mov~rdx,[r12+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[r12+0],rax", "mov~rax,entry", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 18, -1, 0.0053475935828877, ["xor     eax, eax", "jmp     loc_AFD6"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 9, -1, 0.0641711229946524, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_B0D0"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 1, 7, 1, 2, 8, -1, 0.13101604278074866, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_B1A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [1, 0, 34, 1, 0, 9, 2, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_B1E2"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [2, 0, 24, 0, 0, 8, 2, 1, 4, -1, 0.0374331550802139, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_B057"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [2, 0, 26, 2, 0, 7, 1, 1, 3, -1, 0.058823529411764705, ["mov     data, [table+18h]", "mov     [r12], entry", "add     qword ptr [table+20h], 1", "add     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_B160"], ["mov~data,[table+0]", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 7, -1, 0.1497326203208556, ["mulss   xmm1, dword ptr [rdx+8]", "ucomiss xmm0, xmm1", "ja      short loc_B0A8"], ["mulss~xmm1,[word ptr [rdx+0]", "ucomiss~xmm0,xmm1", "ja~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 9, -1, 0.0641711229946524, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 21, 0, 0, 8, 2, 1, 6, -1, 0.06016042780748663, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_B071"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 5, -1, 0.1122994652406417, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_B138"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 4, -1, 0.0374331550802139, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.0552584670231729, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_B1DD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 11, -1, 0.06818181818181818, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0427807486631016, ["mov     rax, entry", "jmp     loc_AFD6"], ["mov~rax,entry", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 6, -1, 0.06016042780748663, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 13, 0, 0, 4, 0, 0, 12, -1, 0.14705882352941177, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     short loc_B07B"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]]], "func_feature": [6, 23, 28, 1, 35, 48, 3, 137, 0.05167, 3, 5], "succs": [[5, 21], [0, 29], [12, 7], [2, 4], [2], [8, 6], [15], [9, 14], [12, 15], [13], [33], [10, 30], [29], [16, 31], [13], [29], [29], [11], [17, 23], [24, 1], [26], [27, 20], [18, 31], [11], [], [22], [32, 25], [26], [], [34, 28], [33], [29], [22], [3, 31], []], "fname": "hash_insert", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.02717391304347826, ["mov     rdi, table; table", "call    hash_rehash", "jmp     loc_B22D"], ["mov~rdi,table", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 5, 1, 1, 14, 3, 0.025362318840579712, ["subss   xmm0, cs:dword_14790", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     short loc_B2F8"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.025362318840579712, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 17, 0, 0, 2, 0, 0, 5, 3, 0.08695652173913043, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 19, 0, 0, 4, 1, 1, 4, 4, 0.161231884057971, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_B308"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 2, 0.2210144927536232, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_B22D"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 5, 3, 0.08695652173913043, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_B288"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [2, 0, 10, 0, 0, 8, 2, 1, 10, 3, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_B2CA"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, 4, 0.21195652173913043, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_B380"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 24, 1, 1, 13, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ecx, 1; delete", "mov     rbx, table", "sub     rsp, 18h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_B22D"], ["push~rbp", "push~rbx", "mov~ecx,0", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 7, 6, 0.1956521739130435, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_B3A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 23, 1, 0, 4, 0, 1, 1, 2, 0.036231884057971016, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_B250"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 8, 5, 0.09329710144927536, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 13, 0, 0, 8, 2, 1, 8, 5, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_B2B4"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.07971014492753624, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_B3BE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 11, 2, 0.1956521739130435, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_B22D"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 10, 3, 0.09329710144927536, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 20, 0, 0, 8, 2, 1, 3, 5, 0.04891304347826087, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_B26E"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 22, 1, 0, 5, 1, 1, 2, 6, 0.06884057971014493, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_B330"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     rbp", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "retn"]], [1, 0, 8, 0, 0, 3, 0, 1, 12, 5, 0.14492753623188406, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_B370"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 3, 5, 0.04891304347826087, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 6, 0, 0, 2, 0, 0, 13, 4, 0.10869565217391304, ["ucomiss xmm0, cs:dword_14790", "jnb     short loc_B350"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_B2EA"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]]], "func_feature": [4, 16, 19, 1, 25, 34, 1, 107, 0.08587, 2, 4], "succs": [[14], [0], [0], [5], [3, 6], [10, 14], [5], [15], [16, 7], [11, 14], [12, 13], [18, 14], [8], [8], [19, 21], [20, 14], [15], [4], [17, 22], [], [24, 23], [], [4], [1, 2], [23]], "fname": "hash_delete", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_B3F1"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 2, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_B418"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 1, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_B439"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 4, 25, 0.06667, 1, 2], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 31, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 65, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 159, 0, 0, 1, 0, 0, 0, 0, 0.0022455283840483054, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381079, ["test    r11b, r11b; jumptable 000000000000B5C8 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_B75D"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0008369590912285401, ["mov     ebp, 66h ; 'f'; jumptable 000000000000BB88 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.036911995166264665, ["lea     rcx, off_149FC", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.05586701933950511, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573209, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.010489461343351275, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.04659710413979866, ["test    r11b, r11b", "jnz     loc_B808"], ["test~r11b,r11b", "jnz~FOO"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_BDE0"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_BD1D"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.005754892377283269, ["test    r11b, r11b; jumptable 000000000000BB88 case 92", "jz      short loc_BC78"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.05155444386943438, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_BC6B"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_B943"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_BE11"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_BE11"], ["mov~r12d,r11d", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262012, ["mov     ebp, 7; jumptable 000000000000B5C8 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.3274287557968777, ["lea     rcx, off_14800", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_B937"], ["jmp~FOO"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099303, ["lea     rsi, aIterCurPtr0+15h; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, aIterCurPtr0+15h; \"'\"", "cmp     rsi, rax", "jnz     short loc_BA36"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_147A2; jumptable 000000000000B4D8 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_147A2; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_B9FD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, unk_147A0", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_BC1C"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_BC78"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.047126866386828434, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_BC6B"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262012, ["mov     ebp, 0Ch; jumptable 000000000000B5C8 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_BE40"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_BE20"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, unk_147A0", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.0427280394073563, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.002300040250704387, ["lea     rax, unk_147A0; jumptable 000000000000B4D8 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_147E0", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262012, ["mov     ebp, 0Bh; jumptable 000000000000B5C8 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_BE74"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_B646"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_BD88"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_BDAE"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_BE8A"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 000000000000B5C8 case 92", "jz      loc_BC78"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0008369590912285401, ["mov     ebp, 62h ; 'b'; jumptable 000000000000BB88 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_BA65"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_B658"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_BC78"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_BE74"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_BE74"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 19, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084871, ["cmp     buffersize, rbx", "jbe     short loc_BA58"], ["cmp~buffersize,rbx", "jbe~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_B66A"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.0468729036091465, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_B85D"], ["jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.03371954842543079, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_B85D"], ["test~sil,sil", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.04326471546585399, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 000000000000BB88 case 0", "mov     rdx, rbx", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625936, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_B85D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_BC6B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_BC6B"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_B67C"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_BE60"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_BE68"], ["cmp~r14,len", "jbe~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_B958"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_B9B8"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572588, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.046000805014087744, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_B4F8"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.01943534011845207, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_BA65"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.01391524351676154, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_BA50"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_B892"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_B892"], ["cmp~rbx,r14", "jnb~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.17992671816201244, ["test    r11b, r11b; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122", "jz      loc_B75D"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 000000000000B5C8 cases 35,126", "jnz     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 000000000000B5C8 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117053, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 000000000000B5C8 case 39", "mov     ebp, 27h ; '''", "jnz     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_B688; jumptable 000000000000B5C8 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250468, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_B6D3"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_B691"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_B691"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_B691"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_B691"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.002300040250704387, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 000000000000B4D8 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_B4F8"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408774, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 000000000000B4D8 case 2", "jnz     loc_BF54"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_BDB7"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_BDB7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_BF97"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_BCE3"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 000000000000B5C8 default case", "jnz     loc_BC90"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450202, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_B6D3"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.002300040250704387, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_BE9C"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0008369590912285401, ["mov     ebp, 76h ; 'v'; jumptable 000000000000BB88 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0008369590912285401, ["mov     ebp, 61h ; 'a'; jumptable 000000000000BB88 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_BF9C; jumptable 000000000000B4D8 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.002300040250704387, ["lea     rax, aIterCurPtr0+15h; jumptable 000000000000B4D8 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.06287255860310889, ["test    r11b, r11b; jumptable 000000000000B5C8 case 0", "jnz     loc_BB90; jumptable 000000000000BB88 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_B6CF"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 159, 0, 0, 3, 2, 1, 10, -1, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_B75D"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.30266612999060816, ["add     i_0, 1"], ["add~i_0,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.13253981944684032, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_B6D3"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_B510"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_B6E4"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.506084382270341, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_B8E0; jumptable 000000000000B5C8 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03972954447337754, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_B8E0; jumptable 000000000000B5C8 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_B510"], ["add~rbx,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437793, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 000000000000B5C8 case 63", "cmp     eax, 2", "jz      loc_BC60"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_BEBF"], ["cmp~bytes,0", "jz~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.002300040250704387, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 000000000000B4D8 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_BEF1"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_BF4C"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.002300040250704387, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 000000000000B5C8 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_B705"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 000000000000B4D8 case 3", "jnz     loc_BF74"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_BB12"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342416, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.009200161002817548, ["lea     rax, unk_147A0", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408774, ["lea     rax, unk_147A0", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_B4F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_B7DC"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_B526"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_BDB7"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_BF3F"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_BF4C"], ["jmp~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_B5A8"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169705, ["test    r11b, r11b", "jz      short loc_B5A8"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.003104369802662029, ["mov     ebp, 9; jumptable 000000000000B5C8 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453127, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_BB68"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Dh; jumptable 000000000000B5C8 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Ah; jumptable 000000000000B5C8 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_BF4C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_BF38"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_B96A"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_B961"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254326, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_B981"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_B5A8"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_B996"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_B59F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 000000000000B4D8 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_B9AE"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_BBAB"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951642, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_B7B8"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_B7CA"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_BBDF"], ["cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_BBF1"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[6], [0, 119], [55], [2, 133, 104, 42, 11, 108, 109, 81, 83, 84, 86, 154, 127, 60, 158, 159], [81, 12], [81, 4], [55], [6, 119], [13], [8, 128], [8, 9], [24, 77], [25, 63], [18, 162], [13], [13], [7], [33, 113, 133, 1, 104, 41, 16, 81, 83, 84, 86, 26, 127, 154, 158, 159], [88], [75, 29], [19, 21], [19], [123], [53, 22], [77, 22], [30, 63], [7], [48, 90], [152, 27], [75], [36, 53], [137], [97, 99, 134, 129, 112, 20, 31], [7], [68], [80, 34], [40, 45], [10, 38], [37, 39], [91, 37], [45], [77, 46], [55], [51], [74, 43], [49, 52], [77, 23], [80, 35], [80, 47], [52], [76], [50, 76], [66, 62], [89], [171, 53], [114, 53], [53], [53, 7], [180, 53], [53, 166], [176, 53], [53, 63], [66], [81], [65, 63], [5, 63], [78, 70], [80, 68], [67, 69], [67], [78], [145, 163], [59, 71], [71], [137], [74, 44], [74, 51], [157], [81], [102], [102, 79], [92, 119], [81, 83], [81, 84], [81, 85], [56, 81], [81, 58], [81], [81, 155], [102], [48, 89], [89], [105, 118], [92], [92, 95], [184, 92], [92], [137], [137], [98, 107], [10, 147], [10, 100], [172, 110], [121, 143], [151, 103], [118, 55], [137], [106, 132], [55], [55], [], [32, 174], [137], [60, 117], [115, 116], [116], [118], [120, 119], [123], [93, 118], [144], [143], [126], [122, 126], [104, 17], [104, 3], [144], [64, 61], [130, 14], [137], [131, 101], [149, 15], [137], [82, 135], [136, 139], [82], [138, 142], [144], [137], [137], [87], [140, 87], [138], [9], [28, 148], [123], [38], [146, 10], [28], [161, 150], [15], [88], [153, 124], [124, 156], [157], [162], [168, 125], [57, 7], [157], [157], [161, 15], [160, 15], [72], [164, 165], [165], [72], [169, 167], [169], [124, 54], [170, 175], [175], [177, 173], [], [177], [], [73, 179], [178, 94], [124], [94], [73], [181, 182], [182], [141, 183], [141], [185, 186], [186], [96, 187], [96]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 11, 1, 1, 18, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_C143"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, 0, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, 0, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_C118"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, 0, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, 0, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_C02D"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_C04F"], ["cmp~<TAG>,r15d", "ja~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, 0, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_C0C1"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, 0, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_C0FB"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, 0, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, 0, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, 0, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[], [0, 6], [4], [2, 5], [8], [4], [8, 3], [10, 11], [9, 7], [], [9], [10]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[3, 0, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_C35B"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_C3E9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_C3C1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_C3B0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_C404"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_C507"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 4, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_C583"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 1, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_C636"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 0, 0, 0, 0.2, ["cmp     count, 7FFFE000h", "jbe     short loc_C6D0"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_C6D0"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 1, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_C6D0"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 2, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_C698"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_C698"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 9, 0, 0, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[4, 6], [0, 6], [3, 6], [1, 2], [2], [2], []], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 138h", "pop     rbx", "pop     rbp", "pop     r12", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.16363636363636364, ["mov     rcx, [rsp+168h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_C842"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 9, 0, 3, 12, 1, 4, 2, 5, 0.10909090909090909, ["mov     rdi, source; file", "call    dir_name", "mov     rdi, dest; file", "mov     source, rax", "call    dir_name", "mov     rdx, rsp; stat_buf", "mov     rsi, source_dirname; filename", "mov     edi, 1; ver", "mov     dest, rax", "call    ___xstat", "test    eax, eax", "jnz     short loc_C820"], ["mov~rdi,source", "call~FOO", "mov~rdi,dest", "mov~source,rax", "call~FOO", "mov~rdx,rsp", "mov~rsi,source_dirname", "mov~edi,0", "mov~dest,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 10, 0, 1, 6, 1, 2, 1, 2, 0.06363636363636363, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_C737"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 2, 5, 0, 3, 5, 2, 0.16363636363636364, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest_dirname; ptr", "call    free", "jmp     loc_C737"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest_dirname", "call~FOO", "jmp~FOO"]], [1, 0, 11, 1, 4, 25, 2, 5, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, source", "push    rbp", "push    rbx", "mov     rbp, dest", "xor     ebx, ebx", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+168h+var_40], rax", "xor     eax, eax", "call    last_component", "mov     rdi, dest; name", "mov     r13, rax", "call    last_component", "mov     rdi, source_basename; name", "mov     r14, rax", "call    base_len", "mov     rdi, dest_basename; name", "mov     r15, rax", "call    base_len", "cmp     source_baselen, dest_baselen", "jz      short loc_C768"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,source", "push~rbp", "push~rbx", "mov~rbp,dest", "xor~ebx,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,dest", "mov~r13,rax", "call~FOO", "mov~rdi,source_basename", "mov~r14,rax", "call~FOO", "mov~rdi,dest_basename", "mov~r15,rax", "call~FOO", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 4, 3, 0.21818181818181817, ["xor     ebx, ebx", "mov     rax, [rsp+168h+dest_dir_stats.st_ino]", "cmp     [rsp+168h+source_dir_stats.st_ino], rax", "jnz     short loc_C7DD"], ["xor~ebx,ebx", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 6, 0, 2, 8, 1, 3, 4, 4, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, dest_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     short loc_C7BD"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,dest_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 3, 4, 0.19999999999999998, ["lea     rdx, [rsp+168h+dest_dir_stats]; stat_buf", "mov     rsi, dest_dirname; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_C7F8"], ["lea~rdx,[rsp+0]", "mov~rsi,dest_dirname", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 3, 0.0, ["mov     rax, [rsp+168h+dest_dir_stats.st_dev]", "cmp     [rsp+168h+source_dir_stats.st_dev], rax", "setz    bl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "setz~bl"]], [1, 0, 8, 0, 2, 8, 1, 3, 3, 5, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, source_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_C7A4"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,source_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [16, 9, 25, 1, 12, 16, 4, 90, 0.07652, 2, 2], "succs": [[], [0, 4], [9, 11], [1, 2], [], [1], [1, 3], [10, 5], [7], [8, 7], [5], [9]], "fname": "same_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.002380952380952381, ["xor     r14d, r14d", "jmp     short loc_C971"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 1, 0, 1, 5, 1, 2, 5, -1, 0.0, ["mov     rdi, name_space; ptr", "xor     r14d, r14d", "call    free", "mov     [r12], ebx", "jmp     short loc_C971"], ["mov~rdi,name_space", "xor~r14d,r14d", "call~FOO", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, -1, 0.07857142857142858, ["test    ebx, ebx", "jnz     short loc_C993"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 0, 9, 2, 0.1, ["cmp     r8, allocated", "mov     rbx, allocated", "jnb     short loc_C8F0"], ["cmp~r8,allocated", "mov~rbx,allocated", "jnb~FOO"]], [0, 0, 19, 0, 0, 3, 0, 0, 8, 1, 0.1, ["lea     rcx, [allocated+allocated]", "cmp     rcx, allocated", "jb      loc_C9A4"], ["lea~rcx,<TAG>", "cmp~rcx,allocated", "jb~FOO"]], [0, 2, 19, 0, 2, 9, 1, 3, 1, 5, 0.04285714285714286, ["mov     rbp, dirp", "mov     edi, 200h; n", "xor     r13d, r13d", "call    xmalloc", "mov     ebx, 200h", "mov     r14, rax", "call    ___errno_location", "mov     r12, rax", "jmp     short loc_C894"], ["mov~rbp,dirp", "mov~edi,<STR>", "xor~r13d,r13d", "call~FOO", "mov~ebx,<STR>", "mov~r14,rax", "call~FOO", "mov~r12,rax", "jmp~FOO"]], [1, 0, 21, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "test    dirp, dirp", "jz      loc_C98E"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~dirp,dirp", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0, ["mov     ebx, [r12]", "jmp     short loc_C96D"], ["mov~ebx,<TAG>", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 3, -1, 0.14047619047619048, ["mov     byte ptr [name_space+used], 0", "mov     rdi, dirp; dirp", "mov     ebx, [r12]", "call    _closedir", "test    eax, eax", "jnz     short loc_C988"], ["mov~<TAG>,0", "mov~rdi,dirp", "mov~ebx,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 4, 2, 0.18333333333333335, ["test    dl, dl", "jnz     short loc_C8CC"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 19, 0, 0, 4, 0, 1, 3, 3, 0.22380952380952382, ["movzx   edx, byte ptr [dp+13h]", "lea     r15, [dp+13h]", "cmp     dl, 2Eh ; '.'", "jnz     short loc_C890"], ["movzx~edx,[yte ptr [dp+0]", "lea~r15,[dp+0]", "cmp~dl,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 3, 0.002380952380952381, ["movzx   edx, byte ptr [dp+15h]", "jmp     loc_C890"], ["movzx~edx,[yte ptr [dp+0]", "jmp~FOO"]], [0, 0, 19, 0, 1, 8, 0, 1, 10, 6, 0.10476190476190478, ["mov     rdi, name_space; p", "mov     rsi, allocated; n", "mov     [rsp+48h+var_40], r8", "mov     [rsp+48h+n], entry_size", "call    xrealloc", "mov     r8, [rsp+48h+var_40]", "mov     rdx, [rsp+48h+n]; n", "mov     name_space, rax"], ["mov~rdi,name_space", "mov~rsi,allocated", "mov~[rsp+0],r8", "mov~<TAG>,entry_size", "call~FOO", "mov~r8,[rsp+0]", "mov~rdx,<TAG>", "mov~name_space,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 19, 1, 1, 6, 0, 1, 5, 1, 0.17142857142857143, ["mov     rdi, entry; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     r8, used", "add     r8, entry_size", "jb      loc_C9A4"], ["mov~rdi,entry", "call~FOO", "lea~rdx,[rax+0]", "mov~r8,used", "add~r8,entry_size", "jb~FOO"]], [1, 0, 19, 0, 1, 5, 1, 2, 2, 4, 0.39047619047619053, ["mov     dword ptr [r12], 0", "mov     rdi, dirp; dirp", "call    _readdir", "test    dp, dp", "jz      loc_C958"], ["mov~<TAG>,0", "mov~rdi,dirp", "call~FOO", "test~dp,dp", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 5, 2, 0.03571428571428572, ["movzx   edx, byte ptr [dp+14h]", "test    dl, dl", "jz      short loc_C894"], ["movzx~edx,[yte ptr [dp+0]", "test~dl,dl", "jz~FOO"]], [0, 0, 19, 0, 1, 7, 0, 2, 7, 5, 0.19285714285714287, ["lea     rdi, [name_space+used]; dest", "mov     rsi, entry; src", "mov     [rsp+48h+n], r8", "call    _memcpy", "mov     r8, [rsp+48h+n]", "mov     r13, r8", "jmp     loc_C894"], ["lea~rdi,<TAG>", "mov~rsi,entry", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~r13,r8", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 6, 3, 0.15476190476190477, ["cmp     allocated, r8", "ja      short loc_C925"], ["cmp~allocated,r8", "ja~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 3, 0.06190476190476191, ["cmp     byte ptr [dp+14h], 2Eh ; '.'", "jz      loc_C948"], ["cmp~[yte ptr [dp+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 2, 0.08571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [9, 9, 24, 1, 22, 32, 2, 93, 0.09416, 0, 3], "succs": [[], [0], [0], [0, 2], [13, 5], [4, 14], [16], [1, 6], [3], [8, 3], [16, 15], [10, 20], [10], [18], [], [19, 14], [9, 11], [16, 15], [16], [18, 21], [17, 12], [5]], "fname": "savedirstream", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 1, 2, 1, 5, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    _opendir", "add     rsp, 8", "mov     rdi, rax; dirp", "jmp     savedirstream"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 5, 0.0, 0, 2], "succs": [[1], []], "fname": "savedir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 1, 2, 1, 5, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    _fdopendir", "add     rsp, 8", "mov     rdi, rax; dirp", "jmp     savedirstream"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 5, 0.0, 0, 2], "succs": [[1], []], "fname": "fdsavedir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[5, 0, 0, 3, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    last_component", "cmp     byte ptr [had_slash], 0", "mov     rbx, had_slash", "cmovz   rbx, file", "mov     rdi, base; name", "call    base_len", "add     base, had_slash", "cmp     byte ptr [base_lim], 0", "mov     byte ptr [base_lim], 0", "setnz   al", "add     rsp, 8", "pop     base_lim", "pop     file", "retn"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "cmp~<TAG>,0", "mov~rbx,had_slash", "cmovz~rbx,file", "mov~rdi,base", "call~FOO", "add~base,had_slash", "cmp~<TAG>,0", "mov~<TAG>,0", "setnz~al", "add~rsp,0", "pop~base_lim", "pop~file", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 18, 0.0, 0, 3], "succs": [[]], "fname": "strip_trailing_slashes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_info_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b]", "cmp     [a], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_info_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.0042293233082706765, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_CB36"], ["mov~ebx,0", "jmp~FOO"]], [3, 1, 25, 1, 0, 18, 2, 1, 13, 4, 0.17152255639097744, ["mov     rax, [rsp+138h+dst_a_s_0]", "mov     edx, 38E38E39h", "mov     [rsp+138h+timespec.tv_sec], rax", "movsxd  rax, dword ptr [rsp+138h+var_110]", "mov     [rsp+138h+timespec.tv_nsec], rax", "movzx   eax, [rsp+138h+var_111]", "or      rax, dst_m_s", "mov     [rsp+138h+timespec.tv_sec+10h], rax", "mov     eax, r10d", "mul     edx", "shr     edx, 1", "lea     eax, [rdx+dst_m_ns]", "cdqe", "mov     [rsp+138h+timespec.tv_nsec+10h], rax", "mov     eax, [dst_stat+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_CDFB"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "or~rax,dst_m_s", "mov~[rsp+0],rax", "mov~eax,r10d", "mul~,edx", "shr~edx,0", "lea~eax,<TAG>", "cdqe~", "mov~[rsp+0],rax", "mov~eax,[dst_stat+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 22, 0, 1, 9, 1, 2, 16, 3, 0.010964912280701754, ["mov     rdi, [rsp+138h+dst_name]; file", "mov     [rsp+138h+timespec.tv_nsec+10h], rsi", "mov     rsi, rbx; timespec", "mov     [rsp+138h+timespec.tv_sec+10h], dst_m_s", "call    utimens", "test    ebp, ebp", "mov     r9, [rsp+138h+res]", "mov     r10d, dword ptr [rsp+138h+src_ns]", "jnz     loc_CDFB"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "mov~rsi,rbx", "mov~[rsp+0],dst_m_s", "call~FOO", "test~ebp,ebp", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "jnz~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 14, 3, 0.15977443609022557, ["lea     rbx, [rsp+138h+timespec]", "mov     c_0, [rsp+138h+dst_name]; file", "mov     dword ptr [rsp+138h+src_ns], r10d", "mov     [rsp+138h+res], r9", "mov     rsi, rbx; timespec", "call    utimens", "test    eax, eax", "jz      loc_CF2A"], ["lea~rbx,[rsp+0]", "mov~c_0,[rsp+0]", "mov~[word ptr [rsp+0],r10d", "mov~[rsp+0],r9", "mov~rsi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [6, 0, 40, 12, 0, 33, 2, 1, 11, 10, 0.017543859649122806, ["mov     eax, esi", "mov     ecx, esi", "imul    r11d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "mov     eax, edi", "imul    r11d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, edi", "add     eax, eax", "sub     edx, eax", "mov     eax, r8d", "or      ecx, edx", "imul    r11d", "mov     eax, r8d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, r8d", "add     eax, eax", "sub     edx, eax", "or      ecx, edx", "jnz     loc_CEB0"], ["mov~eax,esi", "mov~ecx,esi", "imul~,r11d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "mov~eax,edi", "imul~,r11d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,edi", "add~eax,eax", "sub~edx,eax", "mov~eax,r8d", "or~ecx,edx", "imul~,r11d", "mov~eax,r8d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,r8d", "add~eax,eax", "sub~edx,eax", "or~ecx,edx", "jnz~FOO"]], [6, 0, 40, 7, 0, 23, 0, 1, 10, 10, 0.03884711779448621, ["mov     eax, esi", "sar     esi, 1Fh", "lea     r12d, [res_0+res_0*4]", "imul    r11d", "mov     eax, edi", "sar     edi, 1Fh", "add     r12d, r12d", "mov     r10d, r12d", "sar     edx, 2", "sub     edx, esi", "mov     esi, edx", "imul    r11d", "mov     eax, r8d", "sar     r8d, 1Fh", "sar     edx, 2", "sub     edx, edi", "mov     edi, edx", "imul    r11d", "sar     edx, 2", "sub     edx, r8d", "cmp     dword ptr [rsp+138h+res], r12d", "mov     r8d, edx", "jle     loc_CEB0"], ["mov~eax,esi", "sar~esi,0", "lea~r12d,<TAG>", "imul~,r11d", "mov~eax,edi", "sar~edi,0", "add~r12d,r12d", "mov~r10d,r12d", "sar~edx,0", "sub~edx,esi", "mov~esi,edx", "imul~,r11d", "mov~eax,r8d", "sar~r8d,0", "sar~edx,0", "sub~edx,edi", "mov~edi,edx", "imul~,r11d", "sar~edx,0", "sub~edx,r8d", "cmp~[word ptr [rsp+0],r12d", "mov~r8d,edx", "jle~FOO"]], [1, 0, 29, 0, 0, 3, 0, 1, 11, 6, 0.18217418546365913, ["cmp     dst_m_s, rcx", "mov     ebx, 0FFFFFFFFh", "jl      loc_CB36"], ["cmp~dst_m_s,rcx", "mov~ebx,0", "jl~FOO"]], [4, 0, 31, 3, 0, 11, 0, 1, 10, 7, 0.17982456140350878, ["mov     a_0, [rsp+138h+src_ns]", "mov     edx, 10624DD3h", "mov     eax, esi", "imul    edx", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 6", "sub     edx, eax", "imul    r12d, edx, 3E8h", "cmp     dst_m_s, src_s", "jnz     short loc_CD7C"], ["mov~a_0,[rsp+0]", "mov~edx,0", "mov~eax,esi", "imul~,edx", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "imul~r12d,edx,0", "cmp~dst_m_s,src_s", "jnz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 11, 7, 0.00046992481203007516, ["cmp     r12d, r14d", "jle     loc_CB36"], ["cmp~r12d,r14d", "jle~FOO"]], [1, 0, 10, 0, 0, 8, 2, 1, 18, -1, 0.07957393483709273, ["xor     eax, eax", "cmp     r10d, 77359400h", "mov     dword ptr [rsp+138h+res], r10d", "setz    al", "not     eax", "cdqe", "and     src_s, rax", "jmp     loc_CE10"], ["xor~eax,eax", "cmp~r10d,0", "mov~[word ptr [rsp+0],r10d", "setz~al", "not~eax", "cdqe~", "and~src_s,rax", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 17, -1, 0.09649122807017543, ["cmp     r10d, 2710h", "jz      short loc_CFED"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 21, -1, 0.0017230576441102756, ["mov     r10d, 77359400h", "jmp     short loc_CFED"], ["mov~r10d,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 20, -1, 0.006892230576441102, ["mov     r10d, esi", "jmp     short loc_CFED"], ["mov~r10d,esi", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 17, 0, 0.03258145363408521, ["mov     r10d, 3E8h", "jmp     short loc_CFED"], ["mov~r10d,0", "jmp~FOO"]], [0, 0, 16, 1, 0, 4, 0, 1, 21, -1, 0.002349624060150376, ["lea     esi, [res_0+res_0*4]", "add     esi, esi", "cmp     esi, r10d", "jnz     short loc_CFB6"], ["lea~esi,<TAG>", "add~esi,esi", "cmp~esi,r10d", "jnz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 7, -1, 0.005012531328320802, ["mov     dword ptr [rsp+138h+res], 3E8h"], ["mov~[word ptr [rsp+0],0"]], [10, 0, 46, 12, 0, 35, 2, 1, 6, 11, 0.10682957393483708, ["mov     res_0, [dst_stat+50h]", "mov     ecx, 68DB8BADh", "mov     rsi, [dst_stat+70h]", "mov     eax, edi", "mov     [rsp+138h+var_110], rdi", "imul    ecx", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 0Ch", "sub     edx, eax", "imul    eax, edx, 2710h", "mov     r11d, edx", "sub     edi, eax", "mov     eax, esi", "imul    ecx", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 0Ch", "sub     edx, eax", "imul    eax, edx, 2710h", "mov     r10d, edx", "sub     esi, eax", "mov     eax, r14d", "imul    ecx", "mov     eax, r14d", "or      esi, edi", "sar     eax, 1Fh", "mov     edi, r14d", "mov     ecx, edx", "sar     ecx, 0Ch", "sub     ecx, eax", "imul    eax, ecx, 2710h", "sub     edi, eax", "or      esi, edi", "jnz     loc_CE08"], ["mov~res_0,[dst_stat+0]", "mov~ecx,0", "mov~rsi,[dst_stat+0]", "mov~eax,edi", "mov~[rsp+0],rdi", "imul~,ecx", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "imul~eax,edx,0", "mov~r11d,edx", "sub~edi,eax", "mov~eax,esi", "imul~,ecx", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "imul~eax,edx,0", "mov~r10d,edx", "sub~esi,eax", "mov~eax,r14d", "imul~,ecx", "mov~eax,r14d", "or~esi,edi", "sar~eax,0", "mov~edi,r14d", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,eax", "imul~eax,ecx,0", "sub~edi,eax", "or~esi,edi", "jnz~FOO"]], [1, 0, 9, 0, 0, 6, 2, 0, 6, -1, 0.020363408521303257, ["xor     eax, eax", "cmp     edi, 77359400h", "setz    al", "not     eax", "cdqe", "and     src_s, rax"], ["xor~eax,eax", "cmp~edi,0", "setz~al", "not~eax", "cdqe~", "and~src_s,rax"]], [0, 0, 48, 0, 0, 6, 1, 1, 5, 12, 0.11779448621553884, ["movzx   eax, byte ptr [r9+0Ch]", "mov     edi, [dst_res_0+8]", "mov     dword ptr [rsp+138h+res], edi", "test    al, al", "mov     [rsp+138h+var_111], al", "jz      short loc_CB68"], ["movzx~eax,[yte ptr [r9+0]", "mov~edi,[dst_res_0+0]", "mov~[word ptr [rsp+0],edi", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 12, 5, 0.18170426065162906, ["jz      loc_CF10"], ["jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 13, 0.0, ["mov     cs:new_dst_res_4900, 0", "jmp     loc_CAE5"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 50, 0, 0, 2, 0, 1, 4, 13, 0.09147869674185463, ["cmp     cs:new_dst_res_4900, dst_res_0", "jz      loc_CE80"], ["cmp~<TAG>,dst_res_0", "jz~FOO"]], [1, 0, 40, 1, 0, 2, 0, 1, 12, 11, 0.014411027568922305, ["sub     r9d, 1", "jnz     loc_CC6E"], ["sub~r9d,0", "jnz~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 20, -1, 0.023496240601503758, ["sub     r8d, 1", "jz      short loc_D04D"], ["sub~r8d,0", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 17, 2, 0.005325814536340852, ["mov     rax, [rsp+138h+dst_status.st_mtim.tv_sec]", "mov     rcx, [rsp+138h+dst_status.st_mtim.tv_nsec]", "jmp     loc_CF78"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [0, 0, 8, 2, 0, 4, 0, 0, 7, -1, 0.08865914786967419, ["mov     eax, r12d", "cdq", "idiv    dword ptr [rsp+138h+res]", "sub     r12d, edx"], ["mov~eax,r12d", "cdq~,", "idiv~,[word ptr [rsp+0]", "sub~r12d,edx"]], [1, 0, 9, 0, 0, 4, 0, 1, 8, -1, 0.07706766917293233, ["mov     eax, dword ptr [rsp+138h+res]", "mov     byte ptr [r9+0Ch], 1", "mov     [r9+8], eax", "jmp     loc_CB0C"], ["mov~eax,[word ptr [rsp+0]", "mov~[yte ptr [r9+0],0", "mov~[r9+0],eax", "jmp~FOO"]], [2, 0, 57, 1, 0, 20, 2, 1, 0, 17, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, ecx", "sub     rsp, 108h", "mov     r15, [dst_stat+58h]", "mov     r13, [src_stat+58h]", "mov     rax, fs:28h", "mov     [rsp+138h+var_40], rax", "xor     eax, eax", "mov     rax, [src_stat+60h]", "and     ebx, 1", "mov     [rsp+138h+dst_name], dst_name_0", "mov     r14, [dst_stat+60h]", "mov     [rsp+138h+src_ns], rax", "mov     r12d, eax", "jz      short loc_CB17"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,ecx", "sub~rsp,0", "mov~r15,[dst_stat+0]", "mov~r13,[src_stat+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,[src_stat+0]", "and~ebx,0", "mov~[rsp+0],dst_name_0", "mov~r14,[dst_stat+0]", "mov~[rsp+0],rax", "mov~r12d,eax", "jz~FOO"]], [4, 0, 19, 4, 0, 12, 2, 1, 16, 1, 0.1444235588972431, ["and     eax, 1", "mov     esi, 0Ah", "imul    eax, 3B9ACA00h", "add     eax, ecx", "mov     ecx, 3E8h", "cdq", "idiv    ecx", "cdq", "mov     ecx, eax", "idiv    esi", "test    edx, edx", "jz      loc_D05A"], ["and~eax,0", "mov~esi,0", "imul~eax,,0", "add~eax,ecx", "mov~ecx,0", "cdq~,", "idiv~,ecx", "cdq~,", "mov~ecx,eax", "idiv~,esi", "test~edx,edx", "jz~FOO"]], [1, 0, 23, 0, 1, 18, 4, 2, 15, 2, 0.15664160401002505, ["mov     rsi, [rsp+138h+dst_name]; filename", "lea     rdx, [rsp+138h+dst_status]; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "mov     ebp, eax", "mov     rax, [rsp+138h+dst_status.st_mtim.tv_sec]", "mov     rcx, [rsp+138h+dst_status.st_mtim.tv_nsec]", "movsxd  rsi, r14d", "mov     r9, [rsp+138h+res]", "mov     r10d, dword ptr [rsp+138h+src_ns]", "mov     rdi, rsi", "mov     rdx, rax", "xor     rdi, rcx", "xor     rdx, dst_m_s", "or      rdx, rdi", "movsxd  rdi, ebp", "or      rdx, rdi", "jnz     loc_D00A"], ["mov~rsi,[rsp+0]", "lea~rdx,[rsp+0]", "mov~edi,0", "call~FOO", "mov~ebp,eax", "mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "movsxd~rsi,r14d", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~rdi,rsi", "mov~rdx,rax", "xor~rdi,rcx", "xor~rdx,dst_m_s", "or~rdx,rdi", "movsxd~rdi,ebp", "or~rdx,rdi", "jnz~FOO"]], [1, 0, 33, 0, 0, 9, 1, 1, 11, 9, 0.03446115288220551, ["cmp     r12d, 77359400h", "mov     r9, [rsp+138h+dst_res]", "setz    [rsp+138h+var_111]", "movzx   ecx, [rsp+138h+var_111]", "mov     [r9+8], r12d", "not     ecx", "movsxd  rcx, ecx", "and     rcx, src_s", "jmp     loc_CD46"], ["cmp~r12d,0", "mov~r9,[rsp+0]", "setz~[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[r9+0],r12d", "not~ecx", "movsxd~rcx,ecx", "and~rcx,src_s", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 1, -1, 0.07894736842105263, ["cmp     src_s, dst_s", "jg      loc_CEE0"], ["cmp~src_s,dst_s", "jg~FOO"]], [0, 0, 27, 2, 0, 7, 0, 1, 13, 5, 0.008928571428571428, ["mov     eax, r12d", "cdq", "idiv    r10d", "mov     eax, r12d", "sub     eax, edx", "cmp     eax, r14d", "jle     loc_CD90"], ["mov~eax,r12d", "cdq~,", "idiv~,r10d", "mov~eax,r12d", "sub~eax,edx", "cmp~eax,r14d", "jle~FOO"]], [2, 0, 33, 0, 0, 4, 0, 1, 14, 9, 0.008615288220551378, ["mov     dword ptr [r9+8], 3B9ACA00h", "mov     rcx, src_s", "mov     r10d, 3B9ACA00h", "jmp     loc_CD46"], ["mov~[word ptr [r9+0],0", "mov~rcx,src_s", "mov~r10d,0", "jmp~FOO"]], [1, 0, 35, 0, 0, 6, 3, 1, 13, 10, 0.016917293233082706, ["mov     rax, [rsp+138h+dst_a_s_0]", "mov     r9, [rsp+138h+dst_res]", "or      rax, dst_m_s", "or      rax, [dst_stat+68h]", "test    al, 1", "jnz     loc_CE90"], ["mov~rax,[rsp+0]", "mov~r9,[rsp+0]", "or~rax,dst_m_s", "or~rax,[dst_stat+0]", "test~al,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 1, 16, 0.015037593984962405, ["cmp     cs:ht_4899, 0", "mov     rbp, dst_stat", "jz      loc_CE28"], ["cmp~<TAG>,0", "mov~rbp,dst_stat", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.04057017543859649, ["mov     ebx, 1", "jl      short loc_CB36"], ["mov~ebx,0", "jl~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.015664160401002505, ["cmp     r12d, r14d", "jg      loc_CEE0"], ["cmp~r12d,r14d", "jg~FOO"]], [0, 0, 40, 0, 0, 2, 0, 0, 9, 11, 0.02631578947368421, ["mov     [rsp+138h+dst_res], dst_res_0", "mov     r9d, edx"], ["mov~[rsp+0],dst_res_0", "mov~r9d,edx"]], [3, 0, 16, 0, 0, 3, 0, 0, 18, -1, 0.05482456140350877, ["mov     r8d, 6", "mov     esi, 2710h", "mov     edi, 66666667h"], ["mov~r8d,0", "mov~esi,0", "mov~edi,0"]], [0, 0, 54, 0, 0, 3, 1, 1, 2, 15, 0.04824561403508772, ["mov     rsi, cs:new_dst_res_4900; entry", "test    rsi, rsi", "jz      loc_CE58"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 55, 0, 1, 8, 1, 2, 2, 16, 0.0, ["mov     r8, cs:data_freer; data_freer", "lea     options, dev_info_compare; comparator", "lea     src_stat, dev_info_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 10h; candidate", "call    hash_initialize", "mov     cs:ht_4899, rax", "jmp     loc_CAA9"], ["mov~r8,<TAG>", "lea~options,<TAG>", "lea~src_stat,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 9, 8, 0.19266917293233082, ["cmp     dst_m_s, src_s", "jg      loc_CB36"], ["cmp~dst_m_s,src_s", "jg~FOO"]], [2, 0, 33, 0, 0, 4, 0, 1, 8, 9, 0.08583959899749373, ["mov     dword ptr [dst_res_0+8], 2710h", "mov     m, src_s", "mov     r10d, 2710h", "jmp     loc_CD46"], ["mov~[word ptr [dst_res_0+0],0", "mov~m,src_s", "mov~r10d,0", "jmp~FOO"]], [1, 0, 33, 0, 0, 3, 0, 1, 9, 9, 0.010338345864661654, ["mov     dword ptr [dst_res_0+8], 2710h", "mov     rcx, src_s", "jmp     loc_CD46"], ["mov~[word ptr [dst_res_0+0],0", "mov~rcx,src_s", "jmp~FOO"]], [4, 0, 33, 0, 0, 5, 1, 0, 14, 9, 0.008615288220551378, ["mov     rcx, src_s", "mov     dword ptr [r9+8], 77359400h", "mov     [rsp+138h+var_111], 1", "and     rcx, 0FFFFFFFFFFFFFFFEh", "mov     r10d, 77359400h"], ["mov~rcx,src_s", "mov~[word ptr [r9+0],0", "mov~[rsp+0],0", "and~rcx,0", "mov~r10d,0"]], [10, 0, 42, 12, 0, 36, 2, 1, 8, 10, 0.03101503759398496, ["mov     r12d, 66666667h", "mov     eax, r11d", "imul    r12d", "mov     eax, r11d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r11d, eax", "mov     eax, r10d", "imul    r12d", "mov     eax, r10d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r10d, eax", "mov     eax, ecx", "imul    r12d", "mov     eax, ecx", "or      r11d, r10d", "sar     eax, 1Fh", "mov     dword ptr [rsp+138h+dst_res], r11d", "mov     r10d, 2710h", "mov     r11d, 66666667h", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, 5", "add     eax, eax", "sub     ecx, eax", "mov     eax, dword ptr [rsp+138h+dst_res]", "or      eax, ecx", "jnz     loc_CF00"], ["mov~r12d,0", "mov~eax,r11d", "imul~,r12d", "mov~eax,r11d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r11d,eax", "mov~eax,r10d", "imul~,r12d", "mov~eax,r10d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r10d,eax", "mov~eax,ecx", "imul~,r12d", "mov~eax,ecx", "or~r11d,r10d", "sar~eax,0", "mov~[word ptr [rsp+0],r11d", "mov~r10d,0", "mov~r11d,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,0", "add~eax,eax", "sub~ecx,eax", "mov~eax,[word ptr [rsp+0]", "or~eax,ecx", "jnz~FOO"]], [1, 0, 44, 0, 0, 7, 0, 1, 7, 10, 0.1099624060150376, ["cmp     dword ptr [rsp+138h+res], 2710h", "mov     rax, [dst_stat+48h]", "mov     esi, r11d", "mov     edi, r10d", "mov     r8d, ecx", "mov     [rsp+138h+dst_a_s_0], rax", "jle     loc_CEEA"], ["cmp~[word ptr [rsp+0],0", "mov~rax,[dst_stat+0]", "mov~esi,r11d", "mov~edi,r10d", "mov~r8d,ecx", "mov~[rsp+0],rax", "jle~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.03383458646616541, ["mov     eax, ebx", "mov     rbx, [rsp+138h+var_40]", "xor     rbx, fs:28h", "jnz     loc_D048"], ["mov~eax,ebx", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.010964912280701754, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_CB36"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 14, -1, 0.0014097744360902255, ["jmp     loc_CB36"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.00046992481203007516, ["setl    bl", "movzx   ebx, bl"], ["setl~bl", "movzx~ebx,bl"]], [0, 0, 52, 0, 1, 7, 1, 2, 3, 14, 0.07894736842105263, ["mov     rax, [dst_stat+0]", "mov     rdi, cs:ht_4899; table", "mov     [rsi], rax", "call    hash_insert", "test    rax, rax", "mov     r9, rax", "jz      loc_CEA6"], ["mov~rax,[dst_stat+0]", "mov~rdi,<TAG>", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~r9,rax", "jz~FOO"]], [3, 0, 53, 0, 1, 7, 0, 2, 3, 15, 0.0, ["mov     edi, 10h; n", "call    xmalloc", "mov     rsi, rax", "mov     cs:new_dst_res_4900, rax", "mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "jmp     loc_CAB9"], ["mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~<TAG>,rax", "mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [4, 0, 16, 5, 0, 17, 0, 1, 19, -1, 0.04981203007518797, ["mov     eax, ecx", "sar     ecx, 1Fh", "imul    edi", "sar     edx, 2", "sub     edx, ecx", "mov     eax, edx", "mov     ecx, edx", "imul    edi", "mov     eax, edx", "mov     edx, ecx", "sar     eax, 2", "sar     edx, 1Fh", "sub     eax, edx", "lea     eax, [rax+rax*4]", "add     eax, eax", "cmp     ecx, eax", "jz      short loc_D055"], ["mov~eax,ecx", "sar~ecx,0", "imul~,edi", "sar~edx,0", "sub~edx,ecx", "mov~eax,edx", "mov~ecx,edx", "imul~,edi", "mov~eax,edx", "mov~edx,ecx", "sar~eax,0", "sar~edx,0", "sub~eax,edx", "lea~eax,<TAG>", "add~eax,eax", "cmp~ecx,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 108h", "pop     rbx", "pop     rbp", "pop     r12", "pop     src_s", "pop     dst_ns", "pop     dst_s", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~src_s", "pop~dst_ns", "pop~dst_s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [8, 32, 56, 2, 58, 87, 1, 405, 0.05139, 6, 65], "succs": [[49], [0, 3], [0, 24], [0, 29], [30, 22], [4, 30], [49, 19], [8, 6], [49, 6], [26], [9, 39], [9], [9], [9], [9, 55], [26], [47, 15], [25], [16, 17], [32, 1], [18], [18, 20], [34, 5], [11, 14], [28], [31], [25], [35, 31], [10, 13], [2, 28], [42], [50, 36], [1, 51], [42], [33, 45], [40, 41], [49, 37], [50, 52], [5], [55], [53, 54], [40], [49, 7], [42], [42], [42], [44, 38], [43, 46], [], [48, 56], [49], [49], [49], [57, 21], [53], [12, 23], [], []], "fname": "utimecmp", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 1, 0, 0.08333333333333333, ["xor     ecx, ecx; flags", "mov     edi, 0FFFFFF9Ch; fd", "jmp     _utimensat"], ["xor~ecx,ecx", "mov~edi,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    edi, edi", "js      short loc_D080"], ["test~edi,edi", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.08333333333333333, ["mov     file, timespec; path", "jmp     _futimens"], ["mov~file,timespec", "jmp~FOO"]]], "func_feature": [0, 2, 3, 0, 5, 4, 1, 7, 0.03333, 0, 0], "succs": [[], [0], [1, 4], [], [3]], "fname": "gl_futimens", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rdx, timespec; times", "xor     ecx, ecx; flags", "mov     timespec, file; path", "mov     edi, 0FFFFFF9Ch; fd", "jmp     _utimensat"], ["mov~rdx,timespec", "xor~ecx,ecx", "mov~timespec,file", "mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 4, 5, 0.0, 0, 0], "succs": [[], [0]], "fname": "utimens", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 1, 2, 0, 1, 0, 0, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_D173"], ["cmp~len,0", "ja~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_D150"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_D18D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_D125"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [2, 0, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_D17E"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,0", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 3, 2, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    free", "mov     [r12], r13d", "jmp     short loc_D125"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_D125"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[5], [0, 4], [1, 9], [], [3, 7], [4], [2, 5], [], [4], [8, 4]], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3583", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3582, 0", "jz      short loc_D1B8"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3582, 1", "setz    al", "mov     cs:can_write_3583, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_D1F5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_D1F3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 15, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_D215"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_D213"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 6, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_D250"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_D264"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[5], [0, 3], [5], [2, 4], [], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_D2A3"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 5, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 1, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 1, 0.3333333333333333, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_D384"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 6, 1, 1, 1, 2, 0.0, ["mov     rdx, [rsp+28h+response]", "mov     byte ptr [rdx+rax-1], 0", "mov     rdi, [rsp+28h+response]; response", "call    _rpmatch", "test    eax, eax", "setnle  bl"], ["mov~rdx,[rsp+0]", "mov~[yte ptr [rdx+0],0", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnle~bl"]], [3, 1, 4, 1, 1, 15, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_D362"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]]], "func_feature": [4, 5, 6, 1, 5, 5, 2, 31, 0.06667, 2, 2], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "yesno", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 4, 2, 0, 4, 0, 1, 0, 0, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jnz     short loc_D3D2"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jnz~FOO"]], [2, 0, 4, 0, 0, 12, 1, 1, 1, 2, 0.1, ["movzx   eax, byte ptr [p1]", "lea     ecx, [__c-41h]", "lea     edx, [__c+20h]", "cmp     ecx, 1Ah", "cmovb   eax, edx", "movzx   edx, byte ptr [p2]", "lea     r9d, [__c-41h]", "lea     r8d, [__c+20h]", "cmp     r9d, 1Ah", "cmovb   edx, r8d", "test    al, al", "jnz     short loc_D3A0"], ["movzx~eax,<TAG>", "lea~ecx,[__c-41h]+0]", "lea~edx,[__c+0]", "cmp~ecx,0", "cmovb~eax,edx", "movzx~edx,<TAG>", "lea~r9d,[__c-41h]+0]", "lea~r8d,[__c+0]", "cmp~r9d,0", "cmovb~edx,r8d", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "cmp     p1, p2", "jnz     short loc_D3AC"], ["xor~eax,eax", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0.05, ["jmp     short locret_D3DA"], ["jmp~FOO"]], [0, 0, 1, 1, 0, 3, 0, 0, 2, 1, 0.1, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 4, 0, 6, 8, 2, 24, 0.04167, 0, 3], "succs": [[1, 4], [0, 4], [1, 3], [5], [5], []], "fname": "c_strcasecmp", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_D407"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_D407"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_D430"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_D450"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 1, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 44, 0, 1, 4, 1, 2, 0, 0, 0.051461038961038964, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jnz     loc_D7F8"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [0, 0, 45, 0, 0, 2, 0, 1, 6, -1, 0.00762987012987013, ["lea     rdi, [rax+0Eh]", "jmp     loc_D575"], ["lea~rdi,[rax+0]", "jmp~FOO"]], [1, 0, 45, 0, 0, 1, 0, 0, 5, -1, 0.017207792207792207, ["mov     edi, 0Eh; size"], ["mov~edi,0"]], [0, 0, 40, 1, 1, 9, 0, 2, 19, -1, 0.054707792207792205, ["add     rax, [rsp+0D8h+var_D8]", "mov     rdi, r15; ptr", "lea     rcx, [rax+2]", "lea     rsi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _realloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax", "jmp     loc_D747"], ["add~rax,<TAG>", "mov~rdi,r15", "lea~rcx,[rax+0]", "lea~rsi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax", "jmp~FOO"]], [3, 1, 40, 2, 0, 14, 1, 1, 18, -1, 0.12077922077922078, ["mov     esi, eax", "mov     [rsp+0D8h+var_C0], rdx", "shr     esi, 10h", "test    eax, 8080h", "cmovz   eax, esi", "lea     rsi, [r13+2]", "mov     ecx, eax", "cmovz   r13, rsi", "add     cl, al", "sbb     r13, 3", "sub     r13, [rsp+0D8h+var_D0]", "cmp     [rsp+0D8h+var_D8], 0", "lea     rax, [rdx+r13]", "jnz     loc_D80B"], ["mov~esi,eax", "mov~[rsp+0],rdx", "shr~esi,0", "test~eax,<STR>", "cmovz~eax,esi", "lea~rsi,[r13+0]", "mov~ecx,eax", "cmovz~r13,rsi", "add~cl,al", "sbb~r13,0", "sub~r13,[rsp+0]", "cmp~<TAG>,0", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.03603896103896104, ["lea     r15, aSSUnbackup+14h; \"\""], ["lea~r15,<TAG>"]], [0, 0, 44, 0, 1, 4, 1, 2, 4, -1, 0.09042207792207792, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_D586"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, -1, 0.03506493506493506, ["cmp     byte ptr [codeset], 0", "lea     rax, aAscii; \"ASCII\"", "cmovz   codeset, rax", "mov     rcx, [rsp+0D8h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbx", "jnz     loc_D888"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "cmovz~codeset,rax", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 40, 5, 2, 15, 0, 3, 21, -1, 0.05779220779220779, ["mov     r15, [rsp+0D8h+var_D8]", "mov     rdi, 0FFFFFFFFFFFFFFFEh", "mov     rsi, [rsp+0D8h+src]; src", "sub     rdi, rdx", "add     rdx, 1; n", "sub     r15, r13", "add     rdi, r15", "add     rdi, r12; dest", "call    _memcpy", "mov     rsi, [rsp+0D8h+var_D0]; src", "lea     rdi, [r12+r15-1]; dest", "lea     rdx, [r13+1]; n", "mov     r15, r12", "call    _memcpy", "jmp     loc_D640"], ["mov~r15,<TAG>", "mov~rdi,0", "mov~rsi,[rsp+0]", "sub~rdi,rdx", "add~rdx,0", "sub~r15,r13", "add~rdi,r15", "add~rdi,r12", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[r12+0]", "lea~rdx,[r13+0]", "mov~r15,r12", "call~FOO", "jmp~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 20, -1, 0.12272727272727273, ["test    r12, r12", "jz      loc_D845"], ["test~r12,r12", "jz~FOO"]], [3, 0, 41, 1, 1, 12, 1, 2, 6, -1, 0.1474025974025974, ["add     r12, rbp", "mov     rax, 2E74657372616863h", "lea     rsi, aNever+4; modes", "mov     [r12], rax", "mov     eax, 73h ; 's'", "mov     dword ptr [r12+8], 61696C61h", "mov     [r12+0Ch], ax", "mov     rdi, rbp; filename", "call    _fopen", "test    rax, rax", "mov     r14, rax", "jz      loc_D7E4"], ["add~r12,rbp", "mov~rax,0", "lea~rsi,<TAG>", "mov~<TAG>,rax", "mov~eax,0", "mov~[word ptr [r12+0],0", "mov~[r12+0],ax", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 42, 0, 1, 5, 0, 2, 7, -1, 0.046753246753246755, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "jmp     loc_D5D9"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 42, 0, 1, 5, 0, 1, 5, -1, 0.07792207792207792, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "mov     byte ptr [rbp+r14+0], 2Fh ; '/'"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[yte ptr [rbp+0],0"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, -1, 0.1344155844155844, ["mov     cs:charset_aliases, r15", "jmp     loc_D4CA"], ["mov~<TAG>,r15", "jmp~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 8, -1, 0.10714285714285714, ["mov     rdi, rbp; ptr", "call    free", "jmp     loc_D58D"], ["mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 45, 1, 0, 3, 0, 1, 6, 0, 0.008279220779220779, ["lea     rdi, [rax+0Fh]", "add     r12, 1", "jmp     loc_D5B8"], ["lea~rdi,[rax+0]", "add~r12,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 5, 1, 0.003896103896103896, ["cmp     byte ptr [r13+rax-1], 2Fh ; '/'", "jnz     short loc_D88D"], ["cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [1, 0, 40, 0, 2, 11, 1, 3, 13, -1, 0.1357142857142857, ["mov     rsi, r14; stream", "call    _ungetc", "mov     r13, [rsp+0D8h+src]", "mov     rcx, [rsp+0D8h+var_D0]", "lea     rsi, a50s50s; \"%50s %50s\"", "xor     eax, eax", "mov     rdi, r14; stream", "mov     rdx, r13", "call    _fscanf", "cmp     eax, 1", "jle     loc_D7CC"], ["mov~rsi,r14", "call~FOO", "mov~r13,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "xor~eax,eax", "mov~rdi,r14", "mov~rdx,r13", "call~FOO", "cmp~eax,0", "jle~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 12, -1, 0.20097402597402597, ["cmp     edi, 23h ; '#'", "jz      loc_D7A9"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 40, 0, 0, 4, 0, 0, 14, -1, 0.023051948051948053, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   eax, byte ptr [rax]", "mov     edx, 1"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~eax,<TAG>", "mov~edx,0"]], [0, 0, 40, 0, 0, 3, 0, 0, 13, -1, 0.057467532467532466, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      short loc_D790"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, -1, 0.12840909090909092, ["movzx   ebp, byte ptr [aliases]", "test    bpl, bpl", "jz      short loc_D4FC"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 3, -1, 0.002435064935064935, ["mov     rdi, aliases; s", "call    _strlen", "lea     codeset, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~codeset,[aliases+0]"]], [0, 0, 14, 0, 0, 1, 0, 1, 10, -1, 0.04025974025974026, ["jmp     short loc_D7CC"], ["jmp~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 9, -1, 0.14788961038961038, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "mov     edi, eax", "jnz     loc_D659"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "mov~edi,eax", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 15, -1, 0.059415584415584415, ["cmp     eax, 0Ah", "jz      short loc_D7C3"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 14, -1, 0.023051948051948053, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "setnz   dl", "jmp     short loc_D7A0"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "setnz~dl", "jmp~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 16, -1, 0.0022727272727272726, ["test    dl, dl", "jz      short loc_D7C3"], ["test~dl,dl", "jz~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 17, -1, 0.12012987012987013, ["mov     esi, [r13+0]", "add     r13, 4", "lea     eax, [rsi-1010101h]", "not     esi", "and     eax, esi", "and     eax, 80808080h", "jz      short loc_D6DF"], ["mov~esi,[r13+0]", "add~r13,0", "lea~eax,[rsi-1010101h]+0]", "not~esi", "and~eax,esi", "and~eax,0", "jz~FOO"]], [2, 0, 56, 1, 1, 19, 3, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     edi, 0Eh; item", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    _nl_langinfo", "mov     r15, cs:charset_aliases", "test    rax, rax", "mov     rbx, rax", "lea     codeset, aSSUnbackup+14h; \"\"", "cmovz   codeset, rax", "test    r15, r15", "jnz     short loc_D4CA"], ["push~r15", "push~r14", "mov~edi,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~rax,rax", "mov~rbx,rax", "lea~codeset,<TAG>", "cmovz~codeset,rax", "test~r15,r15", "jnz~FOO"]], [0, 0, 55, 0, 0, 1, 0, 1, 1, 5, 0.014935064935064935, ["jmp     loc_D540"], ["jmp~FOO"]], [3, 0, 45, 0, 0, 4, 0, 0, 3, -1, 0.05551948051948052, ["lea     r13, aUsrLocalLib; \"/usr/local/lib\"", "mov     edi, 1Dh; size", "mov     r12d, 0Fh", "mov     r14d, 0Eh"], ["lea~r13,<TAG>", "mov~edi,0", "mov~r12d,0", "mov~r14d,0"]], [0, 0, 54, 0, 1, 5, 1, 2, 2, 4, 0.03214285714285714, ["lea     rdi, aCharsetaliasdi; \"CHARSETALIASDIR\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      short loc_D5A0"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 3, 3, 0.006818181818181818, ["cmp     byte ptr [rax], 0", "jz      short loc_D5A0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     aliases", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~aliases", "retn"]], [2, 0, 40, 1, 0, 7, 2, 1, 15, -1, 0.11883116883116883, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_D6A1"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 14, -1, 0.11818181818181818, ["mov     rdx, r13"], ["mov~rdx,r13"]], [1, 0, 40, 0, 0, 7, 1, 0, 7, -1, 0.13636363636363635, ["lea     rax, [rsp+0D8h+var_78]", "mov     [rsp+0D8h+var_D8], 0", "xor     r15d, r15d", "mov     [rsp+0D8h+var_D0], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+src], rax", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [0, 0, 40, 0, 0, 3, 0, 0, 8, -1, 0.25941558441558443, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jnb     loc_D830"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jnb~FOO"]], [0, 0, 40, 0, 1, 6, 0, 1, 19, -1, 0.054707792207792205, ["lea     rcx, [rax+2]", "lea     rdi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _malloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax"], ["lea~rcx,[rax+0]", "lea~rdi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax"]], [0, 0, 9, 0, 2, 6, 0, 2, 4, -1, 0.002435064935064935, ["mov     rdi, aliases; s", "call    _strlen", "lea     rbp, [aliases+rax+1]", "mov     rdi, aliases; s", "call    _strlen", "lea     r15, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~rbp,[aliases+0]", "mov~rdi,aliases", "call~FOO", "lea~r15,[aliases+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, -1, 0.033116883116883114, ["cmp     bpl, 2Ah ; '*'", "jnz     short loc_D4B0"], ["cmp~bpl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, -1, 0.0008116883116883117, ["cmp     byte ptr [aliases+1], 0", "jnz     short loc_D4B0"], ["cmp~[yte ptr [aliases+0],0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 16, -1, 0.05714285714285714, ["cmp     eax, 0FFFFFFFFh", "jnz     loc_D640"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 40, 0, 0, 3, 0, 0, 10, -1, 0.20876623376623377, ["lea     eax, [rdi-9]", "cmp     eax, 1", "jbe     short loc_D640"], ["lea~eax,[rdi-9]+0]", "cmp~eax,0", "jbe~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 11, -1, 0.20194805194805196, ["cmp     edi, 20h ; ' '", "jz      short loc_D640"], ["cmp~edi,<STR>", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 21, -1, 0.053246753246753244, ["test    r15, r15", "jz      short loc_D863"], ["test~r15,r15", "jz~FOO"]], [0, 0, 40, 0, 0, 3, 0, 0, 9, -1, 0.10016233766233766, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   edi, byte ptr [rax]; c"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~edi,<TAG>"]], [0, 0, 11, 0, 0, 1, 0, 0, 7, -1, 0.04496753246753247, ["lea     r15, aSSUnbackup+14h; \"\""], ["lea~r15,<TAG>"]], [0, 0, 13, 0, 1, 5, 1, 2, 11, -1, 0.0775974025974026, ["mov     rdi, r14; stream", "call    _fclose", "mov     rax, [rsp+0D8h+var_D8]", "test    rax, rax", "jz      short loc_D7E4"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 1, 40, 2, 0, 11, 1, 0, 16, -1, 0.11948051948051948, ["mov     ecx, eax", "mov     r13, [rsp+0D8h+var_D0]", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "cmovz   rdx, rcx", "mov     ecx, eax", "add     cl, al", "sbb     rdx, 3", "sub     rdx, [rsp+0D8h+src]"], ["mov~ecx,eax", "mov~r13,[rsp+0]", "shr~ecx,0", "test~eax,<STR>", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "cmovz~rdx,rcx", "mov~ecx,eax", "add~cl,al", "sbb~rdx,0", "sub~rdx,[rsp+0]"]], [0, 0, 9, 0, 1, 5, 1, 2, 2, -1, 0.06493506493506493, ["mov     rsi, aliases; s2", "mov     rdi, codeset; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_D4EF"], ["mov~rsi,aliases", "mov~rdi,codeset", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 2, 6, 0, 3, 22, -1, 0.01607142857142857, ["mov     rdi, r15; ptr", "lea     r15, aSSUnbackup+14h; \"\"", "call    free", "mov     rdi, r14; stream", "call    _fclose", "jmp     short loc_D7EB"], ["mov~rdi,r15", "lea~r15,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, -1, 0.030357142857142857, ["mov     byte ptr [r15+rax], 0", "jmp     short loc_D7EB"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 51, 0, 1, 6, 1, 2, 4, 2, 0.007792207792207792, ["mov     rdi, rax; s", "call    _strlen", "test    rax, rax", "mov     r12, rax", "mov     r14, rax", "jnz     loc_D877"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~r14,rax", "jnz~FOO"]], [0, 0, 11, 0, 1, 4, 0, 2, 22, -1, 0.01607142857142857, ["mov     rdi, r14; stream", "lea     r15, aSSUnbackup+14h; \"\"", "call    _fclose", "jmp     loc_D7EB"], ["mov~rdi,r14", "lea~r15,<TAG>", "call~FOO", "jmp~FOO"]]], "func_feature": [26, 23, 65, 5, 57, 84, 1, 265, 0.06829, 8, 16], "succs": [[12, 5], [0], [0], [10], [40, 3], [14], [5, 13], [], [35, 7], [39], [9, 47], [49, 38], [11], [11], [22], [14], [6], [16, 1], [50, 37], [18, 21], [26], [27, 20], [8, 52], [8], [50], [24, 45], [44, 28], [26], [44, 21], [4, 29], [22, 31], [33], [6], [32, 34], [32, 55], [], [51, 36], [36], [39], [48, 25], [10], [22], [41, 43], [41, 23], [50, 39], [46, 39], [19, 39], [56, 53], [45], [15], [49, 54], [29], [42, 23], [15], [15], [17, 2], [15]], "fname": "locale_charset", "n_num": 57}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 12, 0, 0, 2, 1, 1, 0, 0, 0.06125356125356125, ["test    j, j", "jz      short loc_D9E0"], ["test~j,j", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.16809116809116809, ["cmp     [needle+j], dl", "jz      short loc_D9C0"], ["cmp~<TAG>,dl", "jz~FOO"]], [4, 0, 24, 3, 0, 6, 2, 0, 2, 4, 0.03133903133903134, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     rdi, [rsp+30h+var_28+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "add     rdi, 10h; p"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~rdi,[rsp+0]", "and~rdi,0", "add~rdi,0"]], [1, 0, 26, 0, 0, 3, 0, 1, 1, 5, 0.03133903133903134, ["lea     rdi, ds:0[m*8]; n", "cmp     rdi, 0FAFh", "ja      loc_DA08"], ["lea~rdi,<TAG>", "cmp~rdi,0", "ja~FOO"]], [0, 0, 24, 0, 1, 3, 0, 2, 2, 4, 0.03133903133903134, ["call    mmalloca", "mov     rdi, rax", "jmp     loc_D912"], ["call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 12, 2, 0, 5, 1, 1, 9, 3, 0.014245014245014245, ["mov     rsi, [table+j*8]", "add     rhaystack, rsi", "sub     j, rsi", "test    dl, dl", "jnz     short loc_D97C"], ["mov~rsi,<TAG>", "add~rhaystack,rsi", "sub~j,rsi", "test~dl,dl", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 3, 3, 0.12535612535612536, ["test    table, table", "jz      loc_D9A0"], ["test~table,table", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 3, 0.008547008547008548, ["mov     [resultp], rhaystack", "jmp     loc_D994"], ["mov~<TAG>,rhaystack", "jmp~FOO"]], [1, 0, 12, 1, 0, 4, 0, 1, 8, 4, 0.06267806267806268, ["add     j, 1", "lea     rsi, [phaystack+1]", "cmp     m, j", "jz      short loc_DA15"], ["add~j,0", "lea~rsi,[phaystack+0]", "cmp~m,j", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.07692307692307693, ["call    freea", "mov     eax, 1", "jmp     short loc_D9A2"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 6, 3, 0.24786324786324787, ["test    dl, dl", "jz      short loc_D994"], ["test~dl,dl", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 0.021367521367521368, ["xor     eax, eax"], ["xor~eax,eax"]], [2, 0, 27, 1, 1, 19, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     r13, haystack", "mov     haystack, needle; s", "mov     rbx, needle", "mov     r12, resultp", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "call    _strlen", "mov     r14, rax", "mov     m, 1FFFFFFFFFFFFFFFh", "cmp     m, rax", "ja      loc_D9A0"], ["push~rbp", "mov~rbp,rsp", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~r13,haystack", "mov~haystack,needle", "mov~rbx,needle", "mov~r12,resultp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,rax", "mov~m,0", "cmp~m,rax", "ja~FOO"]], [2, 0, 21, 0, 0, 3, 0, 0, 4, 5, 0.12820512820512822, ["cmp     m, 2", "mov     qword ptr [table+8], 1", "jbe     short loc_D961"], ["cmp~m,0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [1, 0, 20, 0, 0, 2, 1, 0, 5, 9, 0.05982905982905983, ["xor     edx, edx", "mov     ecx, 2"], ["xor~edx,edx", "mov~ecx,0"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.07122507122507123, ["mov     rsi, [rbp+var_28]", "xor     rsi, fs:28h", "jnz     short loc_DA1E"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 6, 8, 0.10398860398860399, ["movzx   eax, byte ptr [needle+i-1]", "cmp     al, [needle+j]", "jnz     short loc_D94D"], ["movzx~eax,[yte ptr [needle+0]", "cmp~al,<TAG>", "jnz~FOO"]], [1, 0, 20, 1, 0, 3, 0, 1, 9, 5, 0.15527065527065528, ["add     i, 1", "cmp     m, i", "jnz     short loc_D930"], ["add~i,0", "cmp~m,i", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 7, 7, 0.038461538461538464, ["jmp     loc_D9F0"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-20h]", "pop     needle", "pop     resultp", "pop     r13", "pop     m", "pop     rbp", "retn"], ["lea~rsp,[rbp-20h]+0]", "pop~needle", "pop~resultp", "pop~r13", "pop~m", "pop~rbp", "retn"]], [0, 0, 20, 1, 0, 3, 0, 1, 8, 7, 0.0014245014245014246, ["sub     j, [table+j*8]", "cmp     al, [needle+j]", "jz      loc_D9F0"], ["sub~j,<TAG>", "cmp~al,<TAG>", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 7, 7, 0.05840455840455841, ["test    j, j", "jnz     short loc_D940"], ["test~j,j", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 9, 4, 0.008547008547008548, ["movzx   edx, byte ptr [rcx+1]", "mov     rcx, phaystack", "jmp     short loc_D978"], ["movzx~edx,[yte ptr [rcx+0]", "mov~rcx,phaystack", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 0, 8, 6, 0.04700854700854701, ["mov     [table+i*8], i", "xor     edx, edx"], ["mov~<TAG>,i", "xor~edx,edx"]], [1, 0, 20, 2, 0, 5, 0, 1, 8, 6, 0.07264957264957266, ["add     j, 1", "mov     b, i", "sub     rax, j", "mov     [table+i*8], rax", "jmp     loc_D958"], ["add~j,0", "mov~b,i", "sub~rax,j", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 12, 2, 0, 4, 0, 1, 9, 4, 0.002849002849002849, ["movzx   edx, byte ptr [phaystack+1]", "add     rhaystack, 1", "add     rcx, 1", "jmp     short loc_D978"], ["movzx~edx,[yte ptr [phaystack+0]", "add~rhaystack,0", "add~rcx,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 5, 1, 0, 5, 4, 0.21794871794871795, ["mov     qword ptr [resultp], 0", "movzx   edx, byte ptr [phaystack+0]", "mov     rcx, phaystack", "xor     eax, eax", "nop     dword ptr [j+j+00h]"], ["mov~<TAG>,0", "movzx~edx,[yte ptr [phaystack+0]", "mov~rcx,phaystack", "xor~eax,eax", "nop~[word ptr [j+0]"]]], "func_feature": [4, 13, 24, 1, 28, 40, 1, 101, 0.06593, 1, 13], "succs": [[26, 5], [0, 8], [6], [2, 4], [6], [9, 1], [11, 13], [9], [23, 7], [15], [9, 1], [15], [3, 11], [27, 14], [17], [16, 20], [], [19, 22], [17, 27], [25], [], [25, 22], [24, 21], [10], [18], [18], [10], [10]], "fname": "knuth_morris_pratt_unibyte", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 76, 0, 0, 2, 0, 1, 0, 0, 0.060784313725490195, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_E340"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 3, 13, 0, 4, 13, 5, 0.15014005602240896, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+phaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+ps]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rbp+phaystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+phaystack.cur.bytes], rax", "jz      loc_E250"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rbp+0]", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 8, 0.02584033613445378, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jnz     short loc_DE7C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 7, 0.1262955182072829, ["cmp     [rbp+rhaystack.next_done], 0", "jz      short loc_DE28"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04726890756302521, ["mov     edx, [rbp+rhaystack.cur.wc]", "test    edx, edx", "jz      loc_DE86"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 76, 0, 0, 1, 0, 1, 18, 9, 0.009453781512605041, ["jmp     short loc_E201"], ["jmp~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_E201"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_E201"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 19, 9, 0.004271708683473389, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 3, 0, 1, 7, 0, 2, 17, -1, 0.0018907563025210082, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     rbx, [rbp+resultp]", "mov     rdi, memory; p", "mov     [rbx], rax", "call    freea", "mov     eax, 1", "jmp     loc_DE92"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "mov~rdi,memory", "mov~<TAG>,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [2, 0, 76, 2, 0, 6, 0, 1, 16, 7, 0.030753968253968252, ["add     j_0, 1", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "cmp     [rbp+m], j_0", "mov     [rbp+phaystack.next_done], 0", "jz      loc_E3EC"], ["add~j_0,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "cmp~[rbp+0],j_0", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 114, 0, 3, 12, 0, 4, 6, 5, 0.0376750700280112, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+needle]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+needle]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; iter", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+n], rax", "jz      loc_DF08"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 8, 6, 0.008683473389355741, ["mov     [rbp+var_100], r14b", "jmp     loc_DBD6"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 5, 6, 0.1226890756302521, ["cmp     [rbp+var_100], 0", "jz      loc_DB20"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 3, 0.04673202614379085, ["test    rax, rax", "jnz     short loc_E031"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 7, 4, 0.035364145658263305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_E369"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 1, 1, 8, 3, 0.03837535014005602, ["test    rax, rax", "jnz     short loc_DC4C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 16, 2, 0.014775910364145658, ["mov     rax, [rbp+phaystack.cur.ptr]", "mov     [rbp+phaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_E433"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 19, 7, 0.08928571428571427, ["mov     rax, [rbp+rhaystack.cur.bytes]", "add     [rbp+rhaystack.cur.ptr], rax", "sub     r14, 1", "mov     [rbp+rhaystack.next_done], 0", "jz      loc_E238"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "sub~r14,0", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04236694677871148, ["mov     esi, [rbp+rhaystack.cur.wc]", "test    esi, esi", "jnz     short loc_DE09"], ["mov~esi,[rbp+0]", "test~esi,esi", "jnz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_DE09"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 21, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_DE09"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 114, 0, 1, 4, 1, 2, 7, 7, 0.004201680672268907, ["mov     rdi, [rbp+ps]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_E40F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 14, 7, 0.012499999999999999, ["mov     rdi, [rbp+var_120]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_E40F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 20, 7, 0.00976890756302521, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_E40F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 19, 7, 0.009313725490196078, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_E40F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 17, 1, 0.008578431372549019, ["mov     eax, [rbp+phaystack.cur.wc]", "test    eax, eax", "jnz     loc_E452"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.015966386554621848, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_E42E"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 6, 0.1054971988795518, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_E090"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 76, 2, 0, 7, 0, 1, 18, 7, 0.08781512605042016, ["mov     rax, [rbp+rhaystack.cur.bytes]", "mov     [rbp+rhaystack.next_done], 0", "add     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.next_done], 0", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "jmp     loc_DF8C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "add~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 8, 0.02703081232492997, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jz      short loc_E20F"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 19, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_E20F"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 20, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_E20F"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 114, 0, 0, 4, 0, 1, 9, 2, 0.004971988795518207, ["mov     rax, [rbp+needle]", "mov     [rbp+n], 1", "cmp     byte ptr [rax], 0", "jnz     loc_E433"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 6, 0.10406162464985994, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_E2A0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 16, 7, 0.14124649859943977, ["cmp     [rbp+rhaystack.next_done], 0", "jnz     loc_E268"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.07163865546218487, ["movzx   eax, [rbp+phaystack.next_done]", "mov     r15, [rbp+haystack]", "jmp     loc_DDA8"], ["movzx~eax,[rbp+0]", "mov~r15,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 10, 1, 0.009313725490196078, ["mov     r9d, [rbp+var_DC]", "test    r9d, r9d", "jnz     loc_E452"], ["mov~r9d,[rbp+0]", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 76, 0, 1, 6, 1, 2, 16, 11, 0.03202614379084967, ["mov     rax, [rbp+ps]", "mov     [rbp+phaystack.cur.wc_valid], 1", "lea     rdi, [rax+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_E360"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 22, 2, 0.010154061624649859, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_E433"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 21, 2, 0.009593837535014004, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_E433"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 23, 1, 0.006337535014005601, ["mov     edi, [rbp+rhaystack.cur.wc]", "test    edi, edi", "jnz     loc_E452"], ["mov~edi,[rbp+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 22, 1, 0.006092436974789915, ["mov     ecx, [rbp+rhaystack.cur.wc]", "test    ecx, ecx", "jnz     loc_E452"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "jnz~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 19, 8, 0.02461484593837535, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_E078"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 11, 0.0005602240896358543, ["mov     [rbp+phaystack.next_done], 1", "jmp     loc_DF46"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 76, 0, 0, 5, 1, 1, 17, 10, 0.021311858076563956, ["mov     edx, [rbp+phaystack.cur.wc]", "mov     [rbp+phaystack.in_shift], 0", "mov     [rbp+phaystack.next_done], 1", "test    edx, edx", "jnz     loc_DF51"], ["mov~edx,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "test~edx,edx", "jnz~FOO"]], [0, 0, 114, 0, 1, 5, 1, 2, 9, 12, 0.052941176470588235, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+var_E0], r14b", "call    _mbsinit", "test    eax, eax", "jz      loc_E391"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],r14b", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 76, 0, 0, 4, 0, 1, 14, 11, 0.07920168067226892, ["mov     [rbp+phaystack.cur.bytes], 1", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_DDBA"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 14, -1, 0.0203781512605042, ["mov     rdi, memory; p", "call    freea", "mov     eax, 1", "jmp     loc_DE92"], ["mov~rdi,memory", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 13, 10, 0.06600140056022409, ["mov     edx, [rbp+phaystack.cur.wc]", "test    edx, edx", "jz      loc_E060"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 20, 9, 0.00469187675070028, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 114, 0, 0, 5, 1, 1, 10, 11, 0.03175770308123249, ["mov     r8d, [rbp+var_DC]", "mov     [rbp+var_100], 0", "mov     [rbp+var_F4], r14b", "test    r8d, r8d", "jnz     loc_DB77"], ["mov~r8d,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],r14b", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 15, 10, 0.016351540616246503, ["mov     [table+i*8+0], i", "jmp     loc_DD21"], ["mov~[table+0],i", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 1, 1, 14, 11, 0.017401960784313733, ["test    j, j", "jz      loc_E278"], ["test~j,j", "jz~FOO"]], [0, 0, 90, 0, 0, 1, 0, 0, 11, 10, 0.03091736694677871, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 120, 1, 1, 21, 1, 2, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 108h", "mov     [rbp+haystack], haystack_0", "mov     haystack_0, needle_0; string", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+resultp], resultp_0", "call    mbslen", "mov     rsi, rax", "mov     [rbp+m], rax", "mov     m_0, 492492492492492h", "cmp     m_0, rax", "ja      loc_DE90"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~[rbp+0],haystack_0", "mov~haystack_0,needle_0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],resultp_0", "call~FOO", "mov~rsi,rax", "mov~[rbp+0],rax", "mov~m_0,0", "cmp~m_0,rax", "ja~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_DE7C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_DE7C"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 21, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [2, 0, 114, 2, 0, 4, 0, 0, 11, 7, 0.06988795518207283, ["mov     rax, [rbp+n]", "add     [rbp+needle], rax", "add     r15, 30h", "mov     [rbp+var_F4], 0"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "add~r15,0", "mov~[rbp+0],0"]], [0, 0, 114, 0, 0, 4, 1, 1, 10, 8, 0.05798319327731092, ["test    al, al", "mov     [r15+8], rdx", "mov     [r15+10h], al", "jz      short loc_DBB0"], ["test~al,al", "mov~[r15+0],rdx", "mov~[r15+0],al", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 0, 11, 8, 0.0, ["mov     eax, [rbp+var_DC]", "mov     [r15+14h], eax"], ["mov~eax,[rbp+0]", "mov~[r15+0],eax"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.0010504201680672268, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 116, 0, 0, 2, 1, 1, 3, 8, 0.03221288515406162, ["test    memory, memory", "jz      loc_DE90"], ["test~memory,memory", "jz~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 18, 8, 0.023739495798319327, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_E288"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [2, 0, 89, 0, 0, 3, 0, 0, 9, 9, 0.1811624649859944, ["cmp     [rbp+m], 2", "mov     qword ptr [table+8], 1", "jbe     loc_DD36"], ["cmp~[rbp+0],0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 8, 10, 0.14443277310924368, ["mov     r8d, [rbp+var_DC]", "test    r8d, r8d", "jz      loc_DC88"], ["mov~r8d,[rbp+0]", "test~r8d,r8d", "jz~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 20, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 76, 0, 3, 12, 0, 4, 19, 5, 0.0819327731092437, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      short loc_E130"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [2, 0, 119, 2, 0, 6, 0, 1, 1, 10, 0.008053221288515405, ["mov     rax, [rbp+m]", "lea     rdi, ds:0[rax*8]", "sub     rdi, rax", "shl     rdi, 3; n", "cmp     rdi, 0FAFh", "ja      loc_E3B4"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rdi,rax", "shl~rdi,0", "cmp~rdi,0", "ja~FOO"]], [1, 0, 88, 0, 0, 4, 1, 0, 10, 15, 0.02387955182072829, ["lea     r14, [memory+30h]", "xor     ebx, ebx", "mov     r15d, 2", "nop     dword ptr [rax+rax+00h]"], ["lea~r14,[memory+0]", "xor~ebx,ebx", "mov~r15d,0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 88, 0, 0, 2, 0, 1, 11, 14, 0.029551820728291316, ["movzx   ecx, byte ptr [b+10h]", "jmp     short loc_DCDD"], ["movzx~ecx,[yte ptr [b+0]", "jmp~FOO"]], [2, 0, 88, 2, 0, 4, 0, 1, 16, 9, 0.06106442577030812, ["add     i, 1", "add     b, 30h", "cmp     [rbp+m], i", "jnz     loc_DCB0"], ["add~i,0", "add~b,0", "cmp~[rbp+0],i", "jnz~FOO"]], [4, 0, 117, 3, 0, 6, 2, 0, 2, 9, 0.008053221288515405, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     r12, [rsp+130h+resultp+7]", "and     r12, 0FFFFFFFFFFFFFFF0h", "add     r12, 10h"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~r12,[rsp+0]", "and~r12,0", "add~r12,0"]], [1, 0, 88, 0, 0, 2, 0, 1, 13, 12, 0.012254901960784319, ["cmp     byte ptr [rax+10h], 0", "jz      short loc_DCEC"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 88, 2, 0, 5, 1, 1, 12, 13, 0.04005602240896358, ["lea     rax, [j+j*2]", "shl     rax, 4", "add     rax, memory", "test    cl, cl", "jnz     short loc_DCC0"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "test~cl,cl", "jnz~FOO"]], [2, 0, 114, 0, 0, 9, 1, 0, 6, 8, 0.10560224089635854, ["mov     rcx, [rbp+needle]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_DEB8"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [0, 0, 117, 0, 1, 3, 0, 2, 2, 9, 0.008053221288515405, ["call    mmalloca", "mov     r12, rax", "jmp     loc_DAC4"], ["call~FOO", "mov~r12,rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 20, 4, 0.05511204481792717, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_E170"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 14, 11, 0.015126050420168076, ["mov     eax, [rax+14h]", "cmp     [b+14h], eax", "jz      short loc_DD12"], ["mov~eax,[rax+0]", "cmp~[b+0],eax", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 13, 12, 0.028291316526610658, ["mov     rdx, [b+8]; n", "cmp     rdx, [rax+8]", "jnz     short loc_DCCF"], ["mov~rdx,[b+0]", "cmp~rdx,[rax+0]", "jnz~FOO"]], [0, 0, 88, 0, 1, 7, 1, 2, 14, 11, 0.012219887955182078, ["mov     rsi, [rax]; s2", "mov     rdi, [b]; s1", "mov     byte ptr [rbp+ps], cl", "call    _memcmp", "test    eax, eax", "movzx   ecx, byte ptr [rbp+ps]", "jnz     short loc_DCCF"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 21, 3, 0.04047619047619047, ["test    rax, rax", "jnz     short loc_E100"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 18, 5, 0.08137254901960783, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      loc_E39D"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 88, 1, 0, 1, 0, 0, 15, 14, 0.0012605042016806721, ["sub     j, [table+j*8+0]"], ["sub~j,[table+0]"]], [1, 0, 76, 0, 0, 2, 0, 1, 19, 4, 0.05455182072829131, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_E3CD"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 20, 3, 0.03991596638655462, ["test    rax, rax", "jnz     short loc_E314"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 114, 0, 1, 7, 0, 2, 9, 9, 0.022058823529411763, ["lea     rcx, [r15+18h]", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rdx, [rbp+n]", "mov     [r15], rax", "movzx   eax, [rbp+var_E0]", "jmp     loc_DB9A"], ["lea~rcx,[r15+0]", "mov~rdi,rcx", "call~FOO", "mov~rdx,[rbp+0]", "mov~<TAG>,rax", "movzx~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 5, 0, 1, 8, 10, 0.04012605042016806, ["mov     rsi, [rbp+needle]; src", "lea     rcx, [rbx+28h]", "mov     rdx, [rbp+n]; n", "cmp     rsi, rcx", "jz      loc_DEE0"], ["mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "mov~rdx,[rbp+0]", "cmp~rsi,rcx", "jz~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 22, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_E190"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [5, 0, 114, 2, 0, 14, 0, 1, 4, 7, 0.038865546218487396, ["mov     rax, [rbp+m]", "mov     [rbp+needle], needle_0", "lea     needle_0, [rbp+var_100]", "mov     [rbp+var_100], 0", "mov     [rbp+var_FC], 0", "mov     r15, memory", "mov     [rbp+var_F4], 0", "mov     r14d, 1", "lea     r13, [rax+rax*2]", "lea     rax, [rbx+4]", "shl     r13, 4", "mov     [rbp+ps], rax", "add     r13, memory", "jmp     loc_DBC9"], ["mov~rax,[rbp+0]", "mov~[rbp+0],needle_0", "lea~needle_0,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~r15,memory", "mov~[rbp+0],0", "mov~r14d,0", "lea~r13,<TAG>", "lea~rax,[rbx+0]", "shl~r13,0", "mov~[rbp+0],rax", "add~r13,memory", "jmp~FOO"]], [1, 0, 88, 2, 0, 4, 0, 0, 15, 10, 0.035469187675070034, ["add     j, 1", "mov     rax, i", "sub     rax, j", "mov     [table+i*8+0], rax"], ["add~j,0", "mov~rax,i", "sub~rax,j", "mov~[table+0],rax"]], [2, 0, 114, 0, 0, 5, 1, 1, 7, 11, 0.006302521008403361, ["mov     [rbp+n], 1", "mov     [rbp+var_E0], 0", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_DB7C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 21, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_E3C1"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 14, 11, 0.01803221288515406, ["mov     [rbp+phaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+phaystack.cur.wc_valid], 1", "mov     [rbp+phaystack.next_done], 1", "mov     [rbp+phaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [2, 0, 76, 0, 0, 9, 1, 0, 13, 8, 0.04068627450980391, ["mov     rcx, [rbp+phaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jb      short loc_DF30"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jb~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 11, 0.23399859943977586, ["cmp     [rbp+phaystack.cur.wc_valid], 0", "jnz     loc_DF46"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 76, 0, 1, 6, 0, 2, 15, 11, 0.0038982259570494865, ["mov     rdi, [rbp+phaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.cur.bytes], rax", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_DDBA"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 76, 0, 1, 5, 1, 2, 15, 9, 0.012138188608776844, ["mov     rsi, [rbp+phaystack.cur.ptr]; s2", "mov     rdi, [rax]; s1", "call    _memcmp", "test    eax, eax", "jnz     loc_DDD3"], ["mov~rsi,[rbp+0]", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 14, 9, 0.29623015873015873, ["mov     rdx, [rax+8]; n", "cmp     rdx, [rbp+phaystack.cur.bytes]", "jz      loc_E150"], ["mov~rdx,[rax+0]", "cmp~rdx,[rbp+0]", "jz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 14, 9, 0.061963118580765635, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory", "cmp     byte ptr [rax+10h], 0", "jz      loc_DDC5"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 114, 0, 0, 5, 0, 0, 7, 11, 0.10539215686274508, ["mov     [rbp+n], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+var_E0], r14b", "mov     [rbp+var_F4], r14b", "mov     [rbp+var_DC], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],r14b", "mov~[rbp+0],r14b", "mov~[rbp+0],eax"]], [0, 0, 76, 0, 0, 1, 0, 1, 16, 8, 0.0060107376283846875, ["jmp     loc_DF6F"], ["jmp~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 15, 8, 0.041374883286648, ["cmp     [rax+14h], edx", "jnz     loc_DDD3"], ["cmp~[rax+0],edx", "jnz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 10, 11, 0.025175070028011202, ["mov     [rbp+var_F4], r14b", "jmp     loc_DB67"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 9, 11, 0.011064425770308122, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 114, 0, 1, 7, 1, 2, 8, 11, 0.000980392156862745, ["mov     rdi, [rbp+needle]; s", "call    _strlen", "mov     [rbp+var_E0], 0", "mov     [rbp+n], rax", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_DB7C"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 6, 0.18970588235294117, ["cmp     [rbp+phaystack.in_shift], 0", "jnz     short loc_DFC8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 11, 7, 0.31444911297852474, ["test    al, al", "jz      loc_DF8C"], ["test~al,al", "jz~FOO"]], [0, 0, 114, 0, 0, 1, 0, 0, 9, 9, 0.022058823529411763, ["mov     [r15], rsi"], ["mov~<TAG>,rsi"]], [8, 0, 76, 1, 0, 19, 2, 0, 10, 8, 0.2230392156862745, ["mov     rax, [rbp+resultp]", "lea     rbx, [rbp+phaystack]", "mov     [rbp+rhaystack.in_shift], 0", "mov     qword ptr [rbp+rhaystack.state.__count], 0", "mov     [rbp+rhaystack.next_done], 0", "xor     r15d, r15d", "mov     [rbp+ps], rbx", "add     rbx, 4", "mov     [rbp+phaystack.in_shift], 0", "mov     qword ptr [rax], 0", "mov     rax, [rbp+haystack]", "mov     [rbp+var_120], rbx", "lea     rbx, [rbp+rhaystack]", "mov     qword ptr [rbp+phaystack.state.__count], 0", "mov     [rbp+phaystack.next_done], 0", "mov     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.cur.ptr], rax", "xor     eax, eax", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rbp+0]", "lea~rbx,[rbp+0]", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "xor~r15d,r15d", "mov~[rbp+0],rbx", "add~rbx,0", "mov~[rbp+0],0", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rbx", "lea~rbx,[rbp+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],rax", "xor~eax,eax", "nop~[word ptr [rax+0]"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 8, 0.297047152194211, ["test    j_0, j_0", "jz      loc_E1A0"], ["test~j_0,j_0", "jz~FOO"]], [0, 0, 76, 1, 0, 7, 1, 1, 16, 8, 0.14564659197012136, ["mov     r14, [table+j_0*8+0]", "mov     rax, j_0", "sub     rax, count", "test    count, count", "mov     [rbp+haystack], rax", "movzx   eax, [rbp+phaystack.next_done]", "jz      short loc_DDA8"], ["mov~r14,[table+0]", "mov~rax,j_0", "sub~rax,count", "test~count,count", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "jz~FOO"]], [1, 0, 76, 2, 0, 3, 0, 0, 13, 10, 0.2805438842203548, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory"]], [1, 0, 76, 0, 0, 1, 0, 0, 15, 6, 0.006022408963585434, ["mov     [rbp+phaystack.in_shift], 1"], ["mov~[rbp+0],0"]]], "func_feature": [36, 45, 127, 5, 121, 185, 1, 509, 0.04782, 6, 29], "succs": [[14, 103], [0, 51], [18, 19], [2, 30], [62, 31], [4], [4], [4], [4], [29], [9, 113], [98, 15], [11], [82, 11], [40, 17], [16, 112], [50, 35], [41, 27], [38, 30], [18, 62], [18], [18], [], [12, 22], [120, 22], [22, 63], [72, 22], [40, 44], [], [76, 28], [73, 47], [113], [5, 31], [31], [31], [41, 39], [89, 69], [32, 36], [114], [50, 44], [48, 49], [], [41, 45], [41, 46], [], [44, 95], [99, 44], [25, 54], [53], [106, 52], [110, 55], [119], [29], [106, 52], [19], [58, 111], [78], [56, 90], [70], [74, 67], [19], [19], [], [73], [13], [64, 66], [64], [29], [96, 67], [8, 26], [75, 116], [70, 111], [89], [20, 84], [83, 79], [77], [], [81], [116, 77], [68], [85, 86], [80, 86], [107, 23], [68], [88, 21], [57, 97], [57, 87], [57, 97], [42, 95], [33, 91], [81], [34, 92], [99, 43], [65], [115, 93], [60, 61], [13], [78], [94], [6, 7], [53], [24, 100], [53, 119], [119], [108, 117], [104, 117], [105, 109], [71], [10], [10, 117], [71], [94], [94], [1, 101], [113, 102], [65], [114], [37, 118], [114, 3], [105], [1]], "fname": "knuth_morris_pratt_multibyte", "n_num": 121}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 145, 0, 0, 2, 0, 0, 0, 0, 0.05658139674533117, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.08978112051882543, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_F2F8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 12, 0.023794511499429533, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_F058"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 13, 0.02528323225044536, ["test    rax, rax", "jnz     short loc_EFEB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 13, 0.0047288776796973525, ["mov     r11d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r11d, r11d", "jnz     loc_F1F4"], ["mov~r11d,[rsp+0]", "test~r11d,r11d", "jnz~FOO"]], [1, 0, 24, 1, 0, 3, 0, 1, 11, -1, 0.001411157148862067, ["add     rbx, 1", "cmp     sil, dil", "jnz     loc_E502"], ["add~rbx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 10, -1, 0.0017414279709361677, ["movzx   edi, byte ptr [rdx+rbx]", "test    dil, dil", "jz      loc_EC48"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 26, 17, 0.004713865369603075, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jnz     loc_F1F4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 25, 18, 0.005374407013751276, ["mov     rax, [rsp+1C8h+rhaystack.cur.ptr]", "mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 198h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.010628715546748334, ["mov     rbx, [rsp+1C8h+var_40]", "xor     rbx, fs:28h", "jnz     loc_F508"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 8, -1, 0.001125923257070798, ["mov     eax, edx"], ["mov~eax,edx"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0031525851197982345, ["lea     try_kmp, [outer_loop_count+outer_loop_count*4+0]", "cmp     rax, rbx", "ja      loc_E610"], ["lea~try_kmp,[outer_loop_count+0]", "cmp~rax,rbx", "ja~FOO"]], [1, 0, 24, 2, 1, 9, 0, 2, 9, -1, 0.0002552092716027142, ["mov     rsi, rbx", "mov     rdi, needle_last_ccount_0; string", "sub     rsi, rcx; maxlen", "call    _strnlen", "add     needle_last_ccount_0, rax", "mov     rcx, rbx", "movzx   edx, byte ptr [rsp+1C8h+count]", "cmp     byte ptr [needle_last_ccount_0+0], 0", "jnz     loc_E610"], ["mov~rsi,rbx", "mov~rdi,needle_last_ccount_0", "sub~rsi,rcx", "call~FOO", "add~needle_last_ccount_0,rax", "mov~rcx,rbx", "movzx~edx,[yte ptr [rsp+0]", "cmp~[yte ptr [needle_last_ccount_0+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 9, -1, 0.002642166576592806, ["movzx   esi, byte ptr [r9+rbx]", "test    sil, sil", "jnz     short loc_EDF0"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 24, 1, 0, 4, 0, 1, 8, -1, 0.0022218218939530415, ["neg     rdx", "lea     r9, [r8+rdx]", "add     rdx, r12", "jmp     short loc_EE0A"], ["neg~rdx", "lea~r9,<TAG>", "add~rdx,r12", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 18, 3, 0.02152765267519366, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_F3E8"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 17, 4, 0.02294631597910286, ["test    rax, rax", "jnz     short loc_F200"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 19, 4, 0.004693848956144039, ["mov     edi, [rsp+1C8h+rneedle.cur.wc]; iter", "test    edi, edi", "jz      short loc_F200"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0003602954422626554, ["jmp     loc_E5E3"], ["jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_EEEE"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 0, 14, 2, 0.14132588722752656, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc], edx", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [6, 0, 145, 1, 0, 24, 1, 0, 13, 3, 0.1911992834123982, ["movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.in_shift]", "lea     rcx, [rbp+4]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     qword ptr [rbp+4], 0", "movaps  xmmword ptr [rsp+1C8h+rhaystack.in_shift], xmm0", "mov     [rsp+1C8h+rneedle.next_done], 0", "mov     [rsp+1C8h+rhaystack.next_done], 0", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.ptr]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.ptr], xmm0", "mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rax, [rsp+1C8h+needle_last_ccount]", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.wc_valid]", "movsx   edx, byte ptr [rax]", "mov     [rsp+1C8h+rneedle.cur.ptr], rax", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.wc_valid], xmm0", "mov     eax, edx", "shr     al, 5", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.buf+8]", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.buf+8], xmm0", "bt      eax, edx", "jnb     loc_F160"], ["movdqa~xmm0,[mmword ptr [rsp+0]", "lea~rcx,[rbp+0]", "mov~[rsp+0],0", "mov~[word ptr [rbp+0],0", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "movdqa~xmm0,[mmword ptr [rsp+0]", "movsx~edx,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~eax,edx", "shr~al,0", "movdqa~xmm0,[mmword ptr [rsp+0]", "and~eax,0", "mov~eax,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "bt~eax,edx", "jnb~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 7, -1, 0.004773914609980183, ["movzx   esi, byte ptr [haystack]", "mov     r12, haystack", "mov     rdx, rbx", "jmp     loc_E4E0"], ["movzx~esi,<TAG>", "mov~r12,haystack", "mov~rdx,rbx", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 1, 1, 6, -1, 0.005164234672431394, ["cmp     outer_loop_count, 9", "setnbe  dl", "and     dl, al", "jz      loc_E612"], ["cmp~outer_loop_count,0", "setnbe~dl", "and~dl,al", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 10, -1, 0.0007656278148081427, ["xor     ebp, ebp", "jmp     loc_E612"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 6, 10, 0.1787490742408775, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "jz      loc_EC70"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 8, 11, 0.005224283912808503, ["mov     [rsp+1C8h+iter_haystack.in_shift], 1", "jmp     loc_E9E0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 5, 11, 0.1693513681218599, ["lea     rax, [rsp+1C8h+iter_haystack]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [0, 0, 145, 0, 1, 6, 1, 2, 7, 12, 0.006795572369342861, ["lea     rax, [rsp+1C8h+iter_haystack]", "lea     rdi, [rsp+1C8h+iter_haystack.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 10, 0.03478102043675816, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_F130"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_E821"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 15, 1, 0.16672671590704377, ["mov     esi, [rsp+1C8h+rneedle.cur.wc]", "test    esi, esi", "jz      loc_F52C"], ["mov~esi,[rsp+0]", "test~esi,esi", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_E821"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 13, 15, 0.04335805360395525, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax", "jmp     loc_EF6A"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 13, 0.06534608378870675, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_F020"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0042935206869633095, ["mov     rax, [rsp+1C8h+result]", "jmp     loc_E5E6"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.0016963910406533357, ["mov     rdx, [rsp+1C8h+resultp]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "mov     [rsp+1C8h+count], rcx", "call    knuth_morris_pratt_unibyte", "test    al, al", "mov     rcx, [rsp+1C8h+count]", "jnz     loc_F429"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "mov~[rsp+0],rcx", "call~FOO", "test~al,al", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 7, 1, 2, 15, 8, 0.05327868852459016, ["mov     rdx, [rsp+1C8h+var_1A0]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "call    knuth_morris_pratt_multibyte", "test    al, al", "mov     byte ptr [rsp+1C8h+count], al", "jnz     loc_F429"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "call~FOO", "test~al,al", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 8, 11, 0.02646420064452852, ["test    rax, rax", "jnz     short loc_EA5F"], ["test~rax,rax", "jnz~FOO"]], [3, 0, 147, 0, 0, 3, 0, 0, 4, 13, 0.008496967513360956, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 158, 0, 3, 13, 0, 4, 3, 14, 0.005374407013751276, ["mov     [rsp+1C8h+iter_needle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s", "lea     rdi, [rbx+24h]; pwc", "mov     rcx, rbp; p", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "jz      loc_E628"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rbx+0]", "mov~rcx,rbp", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 159, 0, 1, 4, 1, 2, 2, 15, 0.00078064012490242, ["mov     rdi, rbp; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [5, 0, 161, 0, 0, 15, 1, 0, 1, 15, 0.00468384074941452, ["mov     rax, needle_0", "lea     r13, is_basic_table", "mov     [rsp+1C8h+iter_needle.cur.ptr], needle_0", "movsx   edx, byte ptr [rax]", "lea     needle_0, [rsp+1C8h+iter_needle]", "mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle.state.__count], 0", "mov     [rsp+1C8h+iter_needle.next_done], 0", "lea     rbp, [rbx+4]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_F230"], ["mov~rax,needle_0", "lea~r13,<TAG>", "mov~[rsp+0],needle_0", "movsx~edx,<TAG>", "lea~needle_0,[rsp+0]", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rbx+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 6, 10, 0.1540212974639204, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_EE20"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 26, 15, 0.02119738185311956, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "mov     [rsp+1C8h+rhaystack.in_shift], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "test    eax, eax", "jnz     loc_E8BC"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~eax,eax", "jnz~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 25, 16, 0.02654176424668228, ["lea     rdi, [r15+4]; ps", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_EDA0"], ["lea~rdi,[r15+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 10, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1", "jmp     loc_F305"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 11, 0.00523929622290278, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_EEEE"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 27, -1, 0.0006004924037710923, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.006695490302047679, ["xor     eax, eax", "jmp     loc_E5E6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, -1, 0.0012910586681078484, ["movzx   esi, byte ptr [haystack]", "test    sil, sil", "jz      loc_EC48"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, -1, 0.0028973758481955205, ["cmp     byte ptr [r12+1], 0", "jz      loc_EC48"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 8, 8, 0.1696240917552393, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jz      loc_EC48"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 15, 0.022818711343301507, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jz      loc_EC48"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.003272683600552453, ["movzx   edi, byte ptr [r14]", "test    dil, dil", "jz      loc_EC48"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 16, 19, 0.1825196661262235, ["mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "mov     [rsp+1C8h+rneedle.next_done], 0", "add     comparison_count, 1", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "jmp     loc_E913"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "add~comparison_count,0", "add~[rsp+0],rax", "jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 16, 20, 0.0078064012490242, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jmp     loc_E830"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 17, 20, 0.003993274485077764, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jmp     loc_E830"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 16, 5, 0.031563381973218035, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_F433"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 10, 11, 0.00561460397525971, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jnz     loc_F1F4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 9, 12, 0.007218419103665007, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 14, 0.005391921375527933, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 16, 0.06539362277067196, ["cmp     [rsp+1C8h+rhaystack.in_shift], 0", "jnz     loc_EB91"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 20, 15, 0.1978021978021978, ["cmp     [rsp+1C8h+rhaystack.next_done], 0", "jz      loc_E858"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 1, 0, 5, 0, 1, 10, 10, 0.17691006625432856, ["mov     rsi, comparison_count", "sub     rsi, [rsp+1C8h+last_ccount]", "movzx   eax, [rsp+1C8h+iter_needle_last_ccount.next_done]", "mov     [rsp+1C8h+count], count_0", "jz      loc_F4A1"], ["mov~rsi,comparison_count", "sub~rsi,[rsp+0]", "movzx~eax,[rsp+0]", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 10, 7, 0.0841439980784243, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_EE50"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 9, 8, 0.10286434876598811, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_EE50"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 23, 14, 0.02152765267519366, ["mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s1", "call    _memcmp", "test    eax, eax", "setnz   al", "jmp     loc_E8D4"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 22, 13, 0.1706149042214616, ["mov     rdx, [rsp+1C8h+rhaystack.cur.bytes]; n", "cmp     rdx, [rsp+1C8h+rneedle.cur.bytes]", "jz      loc_EC50"], ["mov~rdx,[rsp+0]", "cmp~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 12, 0.08386126623831543, ["test    al, al", "jz      short loc_EE9D"], ["test~al,al", "jz~FOO"]], [2, 0, 147, 0, 1, 6, 0, 2, 5, 13, 0.004263496066774755, ["mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_E63B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 156, 0, 0, 2, 0, 1, 4, 14, 0.0013811325286735123, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_F455"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 5, -1, 0.003948237554794932, ["mov     r8, [rsp+1C8h+needle_last_ccount]", "movzx   esi, byte ptr [r8+1]", "test    sil, sil", "jz      loc_E5E3"], ["mov~r8,[rsp+0]", "movzx~esi,[yte ptr [r8+0]", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 1, 0, 5, 0, 1, 4, -1, 0.007356031946195881, ["add     r13, 1", "cmp     sil, r15b", "lea     rbx, [rdx+1]", "lea     r14, [r12+1]", "jz      loc_EDB0"], ["add~r13,0", "cmp~sil,r15b", "lea~rbx,[rdx+0]", "lea~r14,[r12+0]", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_E70F"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 9, 10, 0.023148982165375608, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_F068"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 22, 17, 0.013961448387677896, ["mov     rcx, [rsp+1C8h+rhaystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_EB78"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 145, 0, 0, 3, 0, 0, 7, 9, 0.13934426229508196, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 154, 0, 0, 2, 1, 1, 5, 16, 0.0015012310094277307, ["test    rax, rax", "jnz     short loc_F2AC"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_E70F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 15, 8, 0.028230649132288475, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_F106"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 9, 0.06537861046057768, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_F473"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 16, 13, 0.0023269080646129824, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jmp     loc_EE79"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 14, 0.03223393182409576, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_F078"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 8, 8, 0.14721071278448328, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jnz     loc_F4C0"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jnz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 8, 9, 0.0036930282831922176, ["mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_EC8C"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 183, 1, 1, 16, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, haystack", "push    rbp", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 198h", "mov     rax, fs:28h", "mov     [rsp+1C8h+var_40], rax", "xor     eax, eax", "mov     [rsp+1C8h+needle_last_ccount], needle_0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_E580"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,haystack", "push~rbp", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],needle_0", "call~FOO", "cmp~rax,0", "ja~FOO"]], [2, 0, 153, 0, 0, 4, 0, 1, 6, 17, 0.0005404431633939831, ["mov     rax, [rsp+1C8h+iter_needle.cur.ptr]", "mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 12, 0.0055620608899297425, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 11, 0.024057226926079384, ["test    rax, rax", "jnz     short loc_F386"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_F0F5"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 10, 0.022398366660661743, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_F494"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 1, 0, 1, 0, 0, 9, 7, 0.03972257250945776, ["add     comparison_count, 1"], ["add~comparison_count,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 19, 19, 0.005359394703656999, ["lea     rdi, [rbp+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 18, 18, 0.023809523809523808, ["mov     rcx, [rsp+1C8h+rneedle.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_EA98"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 13, 12, 0.03396284953662003, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.bytes]", "add     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "sub     [rsp+1C8h+count], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_F0A0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "sub~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 23, 16, 0.004023299105266318, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "mov     [rsp+1C8h+rhaystack.next_done], 1", "mov     [rsp+1C8h+rhaystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 1, 14, 9, 0.047764166616625636, ["cmp     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_F0A0"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 9, 0.08842500850697572, ["test    al, al", "jz      loc_F0A0"], ["test~al,al", "jz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 20, 18, 0.004653816129225965, ["mov     [rsp+1C8h+rneedle.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 26, 0, 0, 5, 1, 1, 1, -1, 0.0007506155047138654, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "movzx   r15d, byte ptr [rax]", "mov     rax, haystack", "test    r15b, r15b", "jz      loc_E5E6"], ["mov~rax,[rsp+0]", "movzx~r15d,<TAG>", "mov~rax,haystack", "test~r15b,r15b", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 10, 6, 0.1366795772533478, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]", "cmp     rcx, [rsp+1C8h+iter_needle.cur.bytes]", "jnz     loc_E9B1"], ["mov~rcx,[rsp+0]", "cmp~rcx,[rsp+0]", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 11, 5, 0.20338177305390417, ["cmp     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "jz      loc_ECA1"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 15, 7, 0.035849396505134204, ["jmp     loc_ECA1"], ["jmp~FOO"]], [1, 0, 145, 1, 0, 3, 0, 1, 10, 7, 0.002642166576592806, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al", "jmp     loc_ECA1"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 8, 0.02915390620308653, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jz      loc_F106"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 24, 17, 0.028012970635921456, ["test    rax, rax", "jnz     short loc_EC0B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 14, 0.12778478352248845, ["cmp     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "jnz     loc_E8AD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 26, 16, 0.0007205908845253108, ["mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_E8AD"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 13, 9, 0.008827238335435056, ["jmp     loc_F0F5"], ["jmp~FOO"]], [1, 0, 151, 0, 1, 5, 1, 2, 6, 15, 0.014201645349186333, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_F3F5"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 152, 0, 0, 3, 1, 1, 7, 16, 0.004713865369603075, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     loc_F1F4"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [9, 0, 146, 0, 0, 19, 2, 1, 4, 12, 0.06398246562180988, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "mov     [rsp+1C8h+iter_haystack.in_shift], 0", "xor     r14d, r14d", "xor     ebx, ebx", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle_last_ccount.state.__count], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "lea     rbp, [rsp+1C8h+rneedle]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "lea     rax, [rsp+1C8h+result]", "mov     [rsp+1C8h+iter_haystack.cur.ptr], haystack", "mov     qword ptr [rsp+1C8h+iter_haystack.state.__count], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "lea     r15, [rsp+1C8h+rhaystack]", "mov     [rsp+1C8h+last_ccount], 0", "mov     byte ptr [rsp+1C8h+count], 1", "mov     [rsp+1C8h+var_1A0], rax", "jnz     loc_E9D3"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "xor~r14d,r14d", "xor~ebx,ebx", "cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],haystack", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 148, 0, 0, 3, 1, 1, 3, 13, 0.03987269561040053, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     short loc_E63B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 5, 11, 0.021047258752176785, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 14, 0.040293040293040296, ["cmp     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jz      loc_E993"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 12, 0.017364238675714082, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_EF40"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 10, 0.028575932264456854, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_F3B9"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.020476790968594248, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jnz     short loc_EEEE"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 149, 0, 0, 3, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_E5DB"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 24, 14, 0.01043355551552273, ["cmp     [rsp+1C8h+rneedle.cur.wc], eax", "setnz   al"], ["cmp~[rsp+0],eax", "setnz~al"]], [0, 0, 145, 0, 1, 8, 1, 2, 11, 5, 0.041644148201525254, ["mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s1", "mov     rdx, rcx; n", "mov     [rsp+1C8h+resultp], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+1C8h+resultp]", "jnz     loc_E9B1"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 16, 8, 0.0038431513841349907, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_F106"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 9, 0.03252416981925178, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_F3FF"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 24, 13, 0.03613463039692548, ["test    al, al", "lea     rdx, [rbx+1]", "jnz     loc_E9A9"], ["test~al,al", "lea~rdx,[rbx+0]", "jnz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 12, 4, 0.038986969314838166, ["jmp     loc_E760"], ["jmp~FOO"]], [1, 0, 24, 0, 0, 8, 3, 0, 3, -1, 0.0017714525911247223, ["lea     rbx, [rsp+1C8h+result]", "mov     rbp, [rsp+1C8h+needle_last_ccount]", "xor     r13d, r13d", "xor     edx, edx", "xor     ecx, ecx", "mov     eax, 1", "mov     [rsp+1C8h+resultp], rbx", "nop     dword ptr [try_kmp+00h]"], ["lea~rbx,[rsp+0]", "mov~rbp,[rsp+0]", "xor~r13d,r13d", "xor~edx,edx", "xor~ecx,ecx", "mov~eax,0", "mov~[rsp+0],rbx", "nop~[word ptr [try_kmp+0]"]], [0, 0, 145, 0, 0, 3, 1, 1, 14, 8, 0.05813517084008887, ["mov     r8d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r8d, r8d", "jz      loc_EF0D"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jz~FOO"]], [3, 0, 145, 2, 0, 5, 0, 1, 11, 11, 0.25575722092115527, ["add     [rsp+1C8h+iter_haystack.cur.ptr], rcx", "add     r14, 1", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "jz      loc_E6C8"], ["add~[rsp+0],rcx", "add~r14,0", "cmp~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 11, 0.007611241217798595, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 3, 12, 0, 4, 18, 17, 0.19439440341079686, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_ECE0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 17, 18, 0.21385035729298024, ["cmp     [rsp+1C8h+rneedle.in_shift], 0", "jnz     loc_EAB1"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 21, 19, 0.005809764006485318, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 18, 5, 0.005321863928421306, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_F50D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 3, 13, 0, 4, 15, 6, 0.04399357473127964, ["mov     [rsp+1C8h+rneedle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rcx, [rsp+1C8h+resultp]; p", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_F2D8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 9, 0.018712844532516662, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 17, 0.036434876598811027, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_ED30"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 13, 10, 0.05446466102203807, ["mov     r10d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r10d, r10d", "jnz     loc_EE79"], ["mov~r10d,[rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5704; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 23, 17, 0.005314357773374167, ["lea     rdi, [r15+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 16, 0.0051292059488780815, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 5, 1, 2, 14, 7, 0.045249604675834186, ["mov     rdi, rcx; ps", "mov     [rsp+1C8h+resultp], rcx", "call    _mbsinit", "test    eax, eax", "jz      loc_F4E0"], ["mov~rdi,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 20, 18, 0.027907884465261514, ["test    rax, rax", "jnz     short loc_EB2B"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_F0F5"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 10, 6, 0.07381552873356152, ["add     comparison_count, 1", "jmp     loc_E744"], ["add~comparison_count,0", "jmp~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 9, 7, 0.16258331832102324, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jz      loc_F4FF"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 7, 9, 0.14260193358554013, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0032126343601753438, ["cmp     sil, dil", "lea     rbx, [rdx+2]", "jnz     loc_E502"], ["cmp~sil,dil", "lea~rbx,[rdx+0]", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 0, 13, 7, 0.10978502371944995, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "mov     byte ptr [rsp+1C8h+count], 1"], ["movzx~edx,[rsp+0]", "mov~[yte ptr [rsp+0],0"]], [2, 0, 145, 2, 0, 7, 0, 0, 25, 19, 0.02715726896054765, ["mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rbx, rdx", "mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "mov     [rsp+1C8h+rhaystack.next_done], 0", "mov     [rsp+1C8h+rneedle.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rbx,rdx", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 5, 1, 1, 14, 6, 0.1587101423166997, ["lea     rax, [last_ccount_0+1]", "test    dl, dl", "mov     [rsp+1C8h+last_ccount], last_ccount_0", "mov     last_ccount_0, comparison_count", "jnz     loc_E744"], ["lea~rax,[last_ccount_0+0]", "test~dl,dl", "mov~[rsp+0],last_ccount_0", "mov~last_ccount_0,comparison_count", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 16, 7, 0.04475169639104065, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "jmp     loc_F113"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 23, 14, 0.014712063892391762, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_E993"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 22, 15, 0.05578574431033447, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rhaystack.cur.ptr]; s", "lea     rcx, [r15+4]; p", "lea     rdi, [r15+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "jz      loc_ED08"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r15+0]", "lea~rdi,[r15+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 18, 0.004924037710922957, ["mov     ecx, [rsp+1C8h+rneedle.cur.wc]", "test    ecx, ecx", "jnz     loc_F1F4"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 8, -1, 0.0022818711343301507, ["test    needle_last_ccount_0, needle_last_ccount_0", "mov     byte ptr [rsp+1C8h+count], dl", "jz      short loc_E54B"], ["test~needle_last_ccount_0,needle_last_ccount_0", "mov~[yte ptr [rsp+0],dl", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 21, 17, 0.026001321083288297, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_ED60"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 0, 11, 6, 0.0026821994035108794, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al"]], [2, 0, 145, 0, 1, 6, 0, 2, 20, 16, 0.0039032006245121, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_E977"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 12, 4, 0.15326317580415938, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "cmp     [rsp+1C8h+iter_haystack.cur.wc], eax", "jnz     loc_E9A9"], ["mov~eax,[rsp+0]", "cmp~[rsp+0],eax", "jnz~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 22, 16, 0.02080706179066835, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "test    edx, edx", "jnz     loc_E977"], ["mov~edx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~edx,edx", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 19, 17, 0.0138263375968294, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1", "mov     [rsp+1C8h+rneedle.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 1, 0, 0, 15, 15, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 4, 0, 0, 1, 0, 0, 23, -1, 0.0004503693028283192, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 22, 17, 0.0005704677835825377, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_E968"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 21, -1, 0.002717228127064193, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "jmp     loc_E5E6"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 20, 16, 0.018570227586621028, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "test    edx, edx", "jz      loc_EB68"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 19, 16, 0.15333573530294842, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_E977"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 11, 0.004808943333533497, ["mov     r9d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r9d, r9d", "jnz     loc_F1F4"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 24, 16, 0.004653816129225965, ["mov     [rsp+1C8h+rhaystack.in_shift], 1"], ["mov~[rsp+0],0"]], [2, 0, 145, 0, 0, 3, 0, 1, 15, 13, 0.015297543986068576, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jmp     loc_EE79"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 24, 14, 0.003813126763946436, ["mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_E993"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 15, 0.036449888908905305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_ED70"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 13, 12, 0.1585149822854741, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]"], ["mov~rcx,[rsp+0]"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 14, 0.05215526731920175, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_F038"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [3, 0, 149, 0, 0, 4, 0, 0, 2, 14, 0.008617065994115174, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc], edx", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 149, 0, 0, 2, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_E5DB"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0016963910406533357, ["mov     rax, r12"], ["mov~rax,r12"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]]], "func_feature": [53, 71, 196, 2, 184, 288, 1, 762, 0.0396, 6, 24], "succs": [[83], [0, 120], [49, 20], [2, 63], [2, 183], [24, 14], [51, 5], [46, 183], [135, 7], [], [9, 95], [23], [11, 159], [11, 37], [19, 6], [14], [33, 31], [16, 137], [16, 183], [182], [141], [32], [145, 21], [75], [12, 23], [23], [30, 79], [26], [26], [27, 142], [87, 39], [32], [160, 57], [32], [179], [34, 119], [10], [25, 36], [155, 36], [77, 62], [115], [40, 73], [41, 142], [42, 180], [29, 150], [50, 118], [45, 111], [83], [142, 47], [141], [51], [10], [129, 51], [24, 51], [51, 149], [51, 118], [51, 151], [134], [57], [57], [17, 59], [77, 183], [61, 135], [4, 135], [157, 78], [64, 110], [101, 71], [66, 162], [66, 107], [127], [178, 69], [121, 35], [115], [72, 80], [56, 182], [74, 53], [54], [81, 76], [99, 143], [86], [89, 113], [54], [152], [82, 126], [98], [3, 84], [68, 94], [86], [43, 103], [114, 135], [173, 135], [90, 93], [130], [147, 92], [104], [], [142, 102], [96, 166], [1, 35], [55], [1, 38], [1, 108], [133], [10, 52], [131, 124], [104, 164], [104], [104], [112, 152], [8, 46], [70, 55], [55], [130], [122, 181], [113, 183], [28, 117], [115, 182], [44], [123, 70], [144, 132], [48, 139], [98, 141], [116], [127], [128, 131], [152], [91, 125], [153, 178], [22], [75], [152, 38], [28, 44], [141], [172, 140], [97, 133], [], [158, 135], [18, 135], [58, 60], [130], [146, 163], [98, 100], [], [174, 142], [142, 167], [138, 142], [136, 161], [130], [105], [67, 148], [54], [24, 15], [154], [134], [105, 106], [154], [70], [177, 156], [161, 183], [13, 37], [], [169, 165], [105], [65], [178, 22], [168, 65], [171], [179], [170], [171], [10], [65, 170], [65], [93, 183], [157], [98], [70], [176, 109], [131], [85, 175], [116], [116], [10], []], "fname": "mbsstr", "n_num": 184}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 13, 0, 1, 8, 0, 2, 0, 0, 0.03835978835978836, ["mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r15; inbytesleft", "mov     rsi, r14; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_F7A0"], ["mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r15", "mov~rsi,r14", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 6, 4, 0.17328042328042326, ["test    r13, r13", "jnz     short loc_F6E8"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 4, 0.05291005291005291, ["mov     r13, [rsp+1098h+result]", "jmp     loc_F62B"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 27, 2, 0, 5, 0, 1, 3, 5, 0.03042328042328042, ["mov     rax, [rsp+1098h+outptr]", "sub     rax, r14", "add     count_0, rax", "cmp     [rsp+1098h+insize], 0", "jz      loc_F780"], ["mov~rax,[rsp+0]", "sub~rax,r14", "add~count_0,rax", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, 5, 0.0013227513227513227, ["mov     r13, [rsp+1098h+insize]"], ["mov~r13,[rsp+0]"]], [0, 0, 17, 0, 0, 4, 0, 0, 4, 5, 0.07275132275132275, ["mov     rax, [rsp+1098h+lengthp]", "mov     rcx, [rsp+1098h+count]", "cmp     [rax], rcx", "jnb     short loc_F6A4"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~<TAG>,rcx", "jnb~FOO"]], [0, 0, 18, 0, 0, 5, 1, 1, 3, 5, 0.16798941798941797, ["mov     count_0, [rsp+1098h+resultp]", "mov     rax, [rax]", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      short loc_F68C"], ["mov~count_0,[rsp+0]", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 13, 0, 1, 16, 4, 2, 5, 5, 0.15873015873015872, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "lea     r15, [rsp+1098h+insize]", "call    _iconv", "mov     rax, [rsp+1098h+src]", "mov     [rsp+1098h+insize], r13", "lea     r14, [rsp+1098h+inptr]", "mov     [rsp+1098h+inptr], rax", "mov     rax, [rsp+1098h+result]", "mov     [rsp+1098h+outptr], rax", "mov     rax, [rsp+1098h+count]", "mov     [rsp+1098h+outsize], rax", "jmp     short loc_F70B"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "lea~r15,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[rsp+0],r13", "lea~r14,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 27, 0, 1, 10, 0, 2, 2, 5, 0.042328042328042326, ["mov     rsi, [rsp+1098h+count]; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r13; inbytesleft", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_F5D0"], ["mov~rsi,[rsp+0]", "mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r13", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],<STR>", "call~FOO", "cmp~res,0", "jnz~FOO"]], [0, 0, 27, 0, 0, 6, 0, 1, 1, 6, 0.006613756613756613, ["lea     rax, [rsp+1098h+insize]", "lea     rsi, [rsp+1098h+inptr]", "mov     [rsp+1098h+result], srclen_0", "mov     [rsp+1098h+count], rsi", "mov     srclen_0, rax", "jmp     short loc_F5E7"], ["lea~rax,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],srclen_0", "mov~[rsp+0],rsi", "mov~srclen_0,rax", "jmp~FOO"]], [1, 0, 27, 0, 1, 4, 0, 2, 3, 4, 0.03968253968253968, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 7", "jz      short loc_F5D0"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.003968253968253968, ["mov     count_0, [rsp+1098h+lengthp]", "xor     ebx, ebx", "mov     qword ptr [rax], 0", "jmp     short loc_F754"], ["mov~count_0,[rsp+0]", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 2, 0, 5, 0, 1, 2, 3, 0.1693121693121693, ["mov     res, [rsp+1098h+outptr]", "sub     rax, r14", "add     rax, r15", "mov     [rsp+1098h+count], count_0", "jz      loc_F790"], ["mov~res,[rsp+0]", "sub~rax,r14", "add~rax,r15", "mov~[rsp+0],count_0", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 0, 1, 4, 3, 0.06349206349206349, ["cmp     eax, 16h", "mov     r13, [rsp+1098h+result]", "jnz     loc_F7E9"], ["cmp~eax,0", "mov~r13,[rsp+0]", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 2, 2, 7, 3, 0.11904761904761904, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 8, 3, 0.011904761904761904, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      loc_F710"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 28, 1, 1, 30, 7, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, src_0", "push    r13", "push    r12", "mov     r13, srclen_0", "push    rbp", "push    rbx", "mov     rbx, cd", "xor     esi, esi; inbuf", "xor     edx, edx; inbytesleft", "sub     rsp, 1068h", "mov     [rsp+1098h+src], src_0", "mov     [rsp+1098h+resultp], resultp_0", "mov     src_0, cd; cd", "mov     [rsp+1098h+lengthp], lengthp_0", "xor     ecx, ecx; outbuf", "xor     r8d, r8d; outbytesleft", "mov     rax, fs:28h", "mov     [rsp+1098h+var_40], rax", "xor     eax, eax", "call    _iconv", "mov     [rsp+1098h+inptr], src_0", "xor     r15d, r15d", "test    srclen_0, srclen_0", "mov     [rsp+1098h+insize], srclen_0", "lea     r14, [rsp+1098h+tmp]", "lea     r12, [rsp+1098h+outsize]", "lea     rbp, [rsp+1098h+outptr]", "jz      short loc_F62B"], ["push~r15", "push~r14", "mov~r15,src_0", "push~r13", "push~r12", "mov~r13,srclen_0", "push~rbp", "push~rbx", "mov~rbx,cd", "xor~esi,esi", "xor~edx,edx", "sub~rsp,0", "mov~[rsp+0],src_0", "mov~[rsp+0],resultp_0", "mov~src_0,cd", "mov~[rsp+0],lengthp_0", "xor~ecx,ecx", "xor~r8d,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],src_0", "xor~r15d,r15d", "test~srclen_0,srclen_0", "mov~[rsp+0],srclen_0", "lea~r14,[rsp+0]", "lea~r12,[rsp+0]", "lea~rbp,[rsp+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, 3, 0.047619047619047616, ["cmp     [rsp+1098h+outsize], 0", "jnz     loc_F7F3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 4, 4, 0.0992063492063492, ["mov     rdi, [rsp+1098h+count]; size", "call    _malloc", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      loc_F7DE"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 0, 1, 8, 2, 0.047619047619047616, ["mov     rax, [rsp+1098h+resultp]", "mov     r15, [rsp+1098h+result]", "mov     ebx, 0FFFFFFFFh", "cmp     [rax], r15", "jz      short loc_F754"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "mov~ebx,0", "cmp~<TAG>,r15", "jz~FOO"]], [1, 1, 21, 0, 1, 10, 2, 2, 1, 3, 0.17328042328042326, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_F7E9"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],<STR>", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 3, 0, 0, 7, 1, 0, 9, 2, 0.003968253968253968, ["mov     res, [rsp+1098h+resultp]", "mov     rsi, [rsp+1098h+result]", "xor     ebx, ebx", "mov     rdi, [rsp+1098h+count]", "mov     [rax], rsi", "mov     rax, [rsp+1098h+lengthp]", "mov     [rax], rdi"], ["mov~res,[rsp+0]", "mov~rsi,[rsp+0]", "xor~ebx,ebx", "mov~rdi,[rsp+0]", "mov~<TAG>,rsi", "mov~rax,[rsp+0]", "mov~<TAG>,rdi"]], [0, 0, 3, 0, 2, 7, 0, 3, 9, 2, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     rdi, r15; ptr", "call    free", "mov     [rbp+0], r12d", "jmp     loc_F754"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~rdi,r15", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 5, 3, 0.017195767195767195, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.06613756613756613, ["mov     rdx, [rsp+1098h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_F7F8"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.047619047619047616, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_F754"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1068h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [14, 21, 36, 1, 29, 43, 1, 170, 0.05706, 1, 6], "succs": [[4, 15], [0, 14], [20], [8, 2], [1], [18, 7], [18, 5], [1], [10, 3], [8], [3, 13], [24], [11, 6], [25, 20], [17, 19], [19, 14], [9, 20], [26, 21], [23, 7], [24, 22], [25, 12], [24], [24], [25], [27, 28], [24], [], [], []], "fname": "mem_cd_iconv", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.08658008658008658, ["mov     rdi, [rsp+88h+var_40]", "xor     rdi, fs:28h", "mov     rax, rbx", "jnz     short loc_FA3D"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [1, 0, 4, 1, 0, 8, 0, 0, 5, 2, 0.06601731601731602, ["mov     res, [rsp+88h+outptr]", "lea     rdx, [rax+1]", "mov     [rsp+88h+outptr], rdx", "mov     byte ptr [rax], 0", "mov     rsi, [rsp+88h+outptr]", "sub     rsi, result; size", "cmp     result_size, length", "jbe     short loc_F9F8"], ["mov~res,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "mov~<TAG>,0", "mov~rsi,[rsp+0]", "sub~rsi,result", "cmp~result_size,length", "jbe~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 6, 2, 0.0, ["mov     rdi, result; ptr", "call    _realloc", "test    smaller_result, smaller_result", "cmovnz  result, smaller_result", "jmp     short loc_F9F8"], ["mov~rdi,result", "call~FOO", "test~smaller_result,smaller_result", "cmovnz~result,smaller_result", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 1, 2, 0.006493506493506494, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     short loc_F9F8"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 5, 2, 0.06168831168831169, ["mov     rdi, result; ptr", "xor     ebx, ebx", "call    free"], ["mov~rdi,result", "xor~ebx,ebx", "call~FOO"]], [0, 0, 12, 1, 0, 7, 0, 0, 8, 4, 0.025974025974025976, ["lea     rcx, [newresult+used]", "mov     rbp, result_size", "mov     rbx, newresult", "mov     [rsp+88h+outptr], rcx", "lea     rcx, [result_size-1]", "sub     rcx, used", "mov     [rsp+88h+outbytes_remaining], rcx"], ["lea~rcx,<TAG>", "mov~rbp,result_size", "mov~rbx,newresult", "mov~[rsp+0],rcx", "lea~rcx,[result_size-1]+0]", "sub~rcx,used", "mov~[rsp+0],rcx"]], [0, 0, 12, 0, 1, 9, 1, 2, 7, 4, 0.04112554112554113, ["mov     rsi, newsize_0; size", "mov     rdi, result; ptr", "mov     [rsp+88h+inbuf], newsize_0", "mov     [rsp+88h+inbytesleft], rax", "call    _realloc", "test    newresult, newresult", "mov     rdx, [rsp+88h+inbuf]", "mov     rcx, [rsp+88h+inbytesleft]", "jz      short loc_F9E8"], ["mov~rsi,newsize_0", "mov~rdi,result", "mov~[rsp+0],newsize_0", "mov~[rsp+0],rax", "call~FOO", "test~newresult,newresult", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     result_size", "pop     cd", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~result_size", "pop~cd", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 20, 0, 1, 17, 4, 2, 1, 6, 0.0367965367965368, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "lea     rax, [rsp+88h+outbytes_remaining]", "mov     [rsp+88h+outptr], result", "mov     [rsp+88h+outbytes_remaining], r13", "mov     [rsp+88h+outbytesleft], rax", "lea     rax, [rsp+88h+outptr]", "mov     [rsp+88h+outbuf], rax", "lea     rax, [rsp+88h+inbytes_remaining]", "mov     [rsp+88h+inbytesleft], rax", "lea     rax, [rsp+88h+inptr]", "mov     [rsp+88h+inbuf], rax", "jmp     short loc_F904"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],result", "mov~[rsp+0],r13", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 1, 22, 2, 2, 24, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, cd", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     [rsp+88h+inptr], src", "call    _strlen", "mov     r13, rax", "mov     [rsp+88h+inbytes_remaining], rax", "shl     r13, 4", "cmp     result_size, 10000000h", "cmovnb  r13, result_size", "lea     rbp, [result_size+1]", "mov     rdi, result_size; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_FA30"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,cd", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],src", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "shl~r13,0", "cmp~result_size,0", "cmovnb~r13,result_size", "lea~rbp,[result_size+0]", "mov~rdi,result_size", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 20, 0, 1, 8, 0, 2, 2, 5, 0.18831168831168832, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "mov     rdi, cd; cd", "mov     rdx, [rsp+88h+inbytesleft]; inbytesleft", "mov     rsi, [rsp+88h+inbuf]; inbuf", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_F8A0"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "mov~rdi,cd", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 20, 1, 0, 8, 0, 0, 7, 6, 0.08225108225108226, ["lea     rsi, [newresult+used]", "mov     rbx, newresult", "mov     rbp, newsize", "mov     [rsp+88h+outptr], rsi", "lea     rsi, [newsize-1]", "mov     rdx, rsi", "sub     rdx, used", "mov     [rsp+88h+outbytes_remaining], rdx"], ["lea~rsi,<TAG>", "mov~rbx,newresult", "mov~rbp,newsize", "mov~[rsp+0],rsi", "lea~rsi,[newsize-1]+0]", "mov~rdx,rsi", "sub~rdx,used", "mov~[rsp+0],rdx"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.017316017316017316, ["mov     dword ptr [r15], 0Ch", "jmp     short failed"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 1, 0, 5, 0, 0, 5, 4, 0.06493506493506493, ["mov     r14, [rsp+88h+outptr]", "lea     r13, [result_size+result_size+0]", "sub     r14, result", "cmp     result_size, newsize", "jnb     loc_FA20"], ["mov~r14,[rsp+0]", "lea~r13,[result_size+0]", "sub~r14,result", "cmp~result_size,newsize", "jnb~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 6, 4, 0.0670995670995671, ["mov     rsi, newsize; size", "mov     rdi, result; ptr", "call    _realloc", "test    newresult, newresult", "jz      loc_FA20"], ["mov~rsi,newsize", "mov~rdi,result", "call~FOO", "test~newresult,newresult", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 3, 4, 0.0670995670995671, ["jmp     short loc_F996"], ["jmp~FOO"]], [1, 0, 20, 0, 1, 5, 0, 2, 3, 4, 0.12987012987012986, ["call    ___errno_location", "mov     r15, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_F996"], ["call~FOO", "mov~r15,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 4, 3, 0.20238095238095238, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_F930"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.06818181818181818, ["cmp     eax, 7", "jnz     failed"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 5, 3, 0.10173160173160173, ["call    ___errno_location", "cmp     dword ptr [rax], 7", "mov     rcx, rax", "jnz     failed"], ["call~FOO", "cmp~<TAG>,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 12, 1, 0, 5, 0, 0, 6, 4, 0.08225108225108226, ["mov     r15, [rsp+88h+outptr]", "lea     rdx, [result_size+result_size+0]", "sub     r15, result", "cmp     result_size, newsize_0", "jnb     loc_F9E8"], ["mov~r15,[rsp+0]", "lea~rdx,[result_size+0]", "sub~r15,result", "cmp~result_size,newsize_0", "jnb~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 7, 3, 0.017316017316017316, ["mov     dword ptr [rcx], 0Ch"], ["mov~<TAG>,0"]]], "func_feature": [13, 13, 27, 1, 23, 33, 2, 143, 0.06145, 1, 8], "succs": [[20, 7], [0, 2], [0], [0], [0], [17], [5, 22], [], [10], [8, 3], [16, 15], [10], [4], [12, 14], [11, 12], [17], [17, 18], [1, 19], [4, 13], [4, 21], [], [6, 22], [4]], "fname": "str_cd_iconv", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 10, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, src", "sub     rsp, 8", "cmp     byte ptr [src], 0", "jz      short loc_FA77"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,src", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 0, -1, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     cd, rax", "mov     rdi, result; ptr", "call    free", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_FA87"], ["call~FOO", "mov~r12d,<TAG>", "mov~cd,rax", "mov~rdi,result", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 0, -1, 0.05, ["mov     rdi, cd; cd", "call    _iconv_close", "test    eax, eax", "jns     short loc_FA87"], ["mov~rdi,cd", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 0, -1, 0.044444444444444446, ["mov     rdi, src; s", "call    _strdup", "test    rax, rax", "mov     src, rax", "jz      short loc_FA98"], ["mov~rdi,src", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 0, 2, 0.06666666666666667, ["mov     r12, from_codeset", "mov     from_codeset, to_codeset; s2", "mov     rbp, to_codeset", "mov     src, from_codeset; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_FAB8"], ["mov~r12,from_codeset", "mov~from_codeset,to_codeset", "mov~rbp,to_codeset", "mov~src,from_codeset", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 7, 0, 3, 0, -1, 0.005555555555555556, ["call    ___errno_location", "mov     r13d, [rax]", "mov     from_codeset, rax", "mov     rdi, cd; cd", "call    _iconv_close", "mov     [r12], r13d", "jmp     loc_FA87"], ["call~FOO", "mov~r13d,<TAG>", "mov~from_codeset,rax", "mov~rdi,cd", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 0, -1, 0.1, ["mov     rdi, src; src", "mov     rsi, cd; cd", "call    str_cd_iconv", "test    rax, rax", "mov     src, rax", "jz      short loc_FB10"], ["mov~rdi,src", "mov~rsi,cd", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 0, 1, 0.11111111111111112, ["mov     rdi, to_codeset; tocode", "mov     rsi, from_codeset; fromcode", "call    _iconv_open", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     to_codeset, rax", "jz      short loc_FB30"], ["mov~rdi,to_codeset", "mov~rsi,from_codeset", "call~FOO", "cmp~rax,0", "mov~to_codeset,rax", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 0, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "add     rsp, 8", "mov     rax, result", "pop     result", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,result", "pop~result", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.011111111111111112, ["xor     ebx, ebx", "jmp     loc_FA87"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [10, 6, 18, 0, 11, 15, 1, 69, 0.03535, 0, 3], "succs": [[3, 4], [10], [1, 10], [8, 10], [3, 7], [10], [2, 5], [9, 6], [], [10], []], "fname": "str_iconv", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _strndup", "test    s, s", "jz      short loc_FB53"], ["sub~rsp,0", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 2, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xstrndup", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_FBB8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_FB8F"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_FB98"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_FBC8"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 5, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_FC12"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 1, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 344, 1, 0, 2, 0, 0, 0, 0, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445137, ["test    ah, 6", "jz      short loc_1000F"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824855, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_10006"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.023770897848876794, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_10196"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.025778336264089763, ["cmp     eax, 2", "jnz     loc_107E0"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_10B90"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_111A8"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_10768"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_1000F"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806069, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_1000F"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_11208"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_11021"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_10169"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.026925999699143704, ["cmp     eax, 2", "jnz     loc_10820"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_10D60; jumptable 000000000001012E default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_10838"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_100B0"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.00265324224646364, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746907, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_11056"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_1103A"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_10850"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_10850"], ["jns~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_10084"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_1004F"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215123, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_11094"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_10D60; jumptable 000000000001012E default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_11087"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_100C3"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_11071"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_11218"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.02774622243662564, ["jmp     loc_10A1B"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_100E2"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_1108A"], ["mov~rcx,digitp", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.03050450506528065, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_10880"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.027246956422506134, ["test    dl, dl", "jnz     loc_10880"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_10CF8"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_10CF8"], ["test~dl,dl", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 0, 1, 19, 41, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_110C4"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_110A8"], ["cmp~rdi,digitp", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318206, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_100E2"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_110F6"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_111A0"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_110FB"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_110D5"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_110E2"], ["mov~rax,digitp", "jmp~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_FEF3"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_10963"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000001070C case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_10634"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_14CDC", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199638, ["mov     result_0, rcx", "jmp     loc_100E2"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198768, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_100E2"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.027512799365089245, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_109E1"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_110E7"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000001070C case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_10634"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_111A0"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000001070C case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_10634"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_10D9F"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_11109"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_10D60; jumptable 000000000001012E default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.01554078938495614, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_100F0"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.01388089198736403, ["mov     result_0, memory", "jmp     loc_100F0"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_100F0"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.00132662112323182, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_100F0"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_100F0"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_100F0"], ["mov~result_0,rcx", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.00870927415799111, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_100F0"], ["cmp~allocated,0", "jz~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_10D9F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_10B50"], ["test~pad,pad", "jz~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_11125"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_10988"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_10910"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_14C94", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_1112E"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_10B50"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_10961"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_11140"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_11140"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.03118836982514024, ["mov     rax, [dp+50h]; jumptable 000000000001012E cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_105E8"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_11200"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708449, ["cmp     eax, 2", "jz      loc_105D0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_10988"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_11200"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_10E4A"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_1117C"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_10ED0"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_1118E"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_10ED0"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_10F23"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.12740490603424626, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_102DD"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [5, 0, 344, 3, 1, 17, 1, 2, 34, 30, 0.02376700746435119, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_10196"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.026447482402494032, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_10196"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166663, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_10196"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_11099"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_10D60; jumptable 000000000001012E default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.18268597334827175, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_101BB"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_10E4A"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_111B0"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.1830594502627299, ["cmp     ecx, eax", "jl      loc_105B0"], ["cmp~ecx,eax", "jl~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_10D60; jumptable 000000000001012E default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486227, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_105C5"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_111CE"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_111CE"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396357, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.1825031252755682, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_101CF"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_10D4D"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_10E16"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_111E9"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_104B0"], ["jmp~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105275, ["mov     rax, [dp+50h]; jumptable 000000000001012E case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_1028E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_10A38"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_109E1"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_109E1"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.018865771359507844, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_107B0"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_10E16"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.19359072117354825, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_101A5"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.010020333743120502, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_10A3E"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_11213"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_10228"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759968, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_10A3E"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_10A38"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.00257543455595151, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_FF18"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_FEF3"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.0025546858384816085, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_10A3E"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_10340"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434862, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.019044729047685737, ["test    r12b, r12b", "jnz     loc_10340"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_1023C"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.2163261283411919, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549111, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_10D08"], ["cmp~r12,<STR>", "ja~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.043046715737383286, ["mov     rax, [dp+50h]; jumptable 000000000001012E cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_104B0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042907, ["cmp     eax, 2", "jz      loc_104F8"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105275, ["mov     rax, [dp+50h]; jumptable 000000000001012E case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_1028E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105275, ["mov     rax, [dp+50h]; jumptable 000000000001012E case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_1028E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408187, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02367733410103582, ["cmp     eax, 2", "jnz     loc_10297"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_10B90"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_111A8"], ["test~length,length", "jz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_10D68"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_10A63"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [0, 1, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_10F60"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_102A1"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.1389787999979248, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_105F8"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_10B50"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_10ADD"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_10ADD"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.12736989257351491, ["test    eax, eax", "jns     loc_105B0"], ["test~eax,eax", "jns~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_10B50"], ["cmp~rdx,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_107B0"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_10B33"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_10B1C"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_10B50"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301048, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_10B3B"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.018488404060524006, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_10D60; jumptable 000000000001012E default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_10660"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_10660"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_10B90"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_10EAF"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.05227250328089117, ["mov     rax, [dp+50h]; jumptable 000000000001012E case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_10C40"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_10634"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_10B90"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_10B90"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    free", "jmp     loc_10634"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_10F47"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_10BD0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_10BD0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_10D00"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_10D00"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_1062F"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_FE7B"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_10C20"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_10C20"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.051214318689926194, ["mov     rax, [dp+50h]; jumptable 000000000001012E case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_10C30"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.023436324779674625, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_10445"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_10D60; jumptable 000000000001012E default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585673, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_1050B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_10C72"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_10D40"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_10CC0"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_10C86"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_10C72"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_10F71"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_10CA3"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    free"], ["call~FOO"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_FDB2"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.051237012599658516, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.046099889513079285, ["mov     rax, [dp+50h]; jumptable 000000000001012E case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_104B0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_104B0"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.022912743862269918, ["push    [rbp+var_388]", "push    arg", "jmp     loc_104B8"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_FDB2"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 1, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_FDE0"], ["cmp~rdi,<STR>", "jbe~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_10731"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_10CD0"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_10CE2"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_10731"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_10E4A"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_FD08"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_FCF2"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.004617108354989786, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_1062F"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547249, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_10504"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_108D0"], ["test~ah,0", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_10651"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.048406757857279936, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_FE10"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.5391320811482341, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_FD45"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020722, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_107A8"], ["cmp~allocated,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_10D5E"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 000000000001012E default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_10D60; jumptable 000000000001012E default case"], ["cmp~rdx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_10D60; jumptable 000000000001012E default case"], ["cmp~rdx,0", "jnz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_10D60; jumptable 000000000001012E default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_10D60; jumptable 000000000001012E default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_10D60; jumptable 000000000001012E default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_FD73"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 14, 26, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.0002632493528993739, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_107D0"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_FD73"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_FDA4"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_10D9F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_FDB2"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_FDB2"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [1, 1, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_10F34"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.23597775737487223, ["lea     r12, [rcx+length]", "jmp     short loc_10634"], ["lea~r12,<TAG>", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_10DD7"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_10DEA"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_10E4A"], ["cmp~allocated,r12", "jnb~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_10608"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_FE7B"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_10780"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_10710"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_10792"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_1062F"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_1062F"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_10670"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_FE2D"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_FE2D"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_10670"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000001070C cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_10634"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_10E6F"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_FE8A"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_10E6F"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_107D0"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_10E83"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_FE7B"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_FE7B"], ["mov~r14,allocated", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_10EA0"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_106F0"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_10FA1"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_FEE6"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_10FA1"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_107D0"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_FF25"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_FF32"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_FF3F"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_FF4C"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_FF59"], ["test~al,<STR>", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566827, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_FF96"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_10F8E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 22, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_FFD3"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[2], [0, 8], [8], [264, 2], [114], [4, 223], [207], [173, 6], [16, 29], [8, 3], [8], [147, 15], [224, 11], [109], [115, 13], [22], [273, 20], [19, 279], [17, 26], [21, 46], [28], [25], [24, 30], [42, 22], [30], [279, 31], [25, 49], [25, 267], [33, 41], [28], [32, 44], [35, 279], [34, 279], [273, 39], [40, 36], [38, 47], [37, 279], [40, 36], [45], [41], [23], [43, 70], [152], [18, 68], [23], [48, 279], [45, 47], [58, 45], [50, 69], [46], [69, 55], [56, 54], [72, 51], [51], [56], [68], [57, 62], [73, 59], [279, 71], [75, 61], [59], [52], [52], [156], [63], [63], [269], [66, 322, 76, 74], [79], [68], [155, 68], [68], [140], [72], [269], [73, 60], [269], [272, 87], [77, 295], [273, 92], [146, 79], [79], [163, 79], [79], [79], [79], [284, 79], [272], [93, 199], [88, 189], [113, 95], [90, 156], [99, 167, 169, 170, 139, 206, 239, 273, 221], [93, 94], [199], [65, 102], [100, 279], [96, 98], [96, 285], [242, 101], [254, 103], [104, 262], [64, 113], [105, 254], [109], [323], [108, 279], [106, 111], [338, 110], [114], [112, 279], [336, 110], [338], [142, 118], [120, 181], [114], [114], [114], [124, 53], [273, 123], [123, 119], [323, 126], [121, 305], [132, 127], [273, 133], [128, 279], [125, 279], [131, 300], [279, 135], [128, 307], [128], [226, 143], [131, 300], [140, 141], [97], [134, 279], [144, 279], [136, 129], [238], [168, 138], [161, 12], [140], [140], [80, 86], [97, 130], [120, 181], [150, 279], [164], [], [148, 302], [160, 151], [154, 279], [164, 158], [152, 161], [160], [27, 279], [342, 343], [91, 156], [279, 159], [164], [162, 198], [164], [165, 198], [162, 194], [166, 279], [81, 279], [177, 263], [168, 238], [258, 171], [168, 236], [168, 240], [145], [171, 255], [207], [173, 7], [178, 211], [265, 175], [175], [184, 180], [145], [182], [185, 84], [186, 199], [182], [182], [187, 132], [89, 199], [188, 86], [82, 279], [193, 190], [191], [192, 191], [193], [195, 199], [198], [196], [196, 197], [199], [200, 279], [273, 202], [201, 85], [83, 85], [203, 207], [208, 204], [205, 279], [207], [225, 14], [210, 269], [107, 207], [207], [269], [292, 78], [279, 215], [212, 214], [212, 341], [216, 259], [217, 259], [314], [331], [218, 220], [218, 332], [5, 222], [116], [116], [153, 273], [117], [227, 229], [229, 230], [232, 243], [233, 231], [229], [233], [355, 235], [234, 237], [237], [241, 293], [238], [149], [179], [172, 238], [238], [244, 293], [179], [149], [257, 245], [249, 293], [250, 213], [246, 279], [251, 247], [252, 293], [253, 279], [250, 346], [256], [213], [323], [258], [266, 260], [256], [261], [314], [266], [117], [261], [176, 279], [1, 10], [279], [324, 268], [279], [308, 270], [324, 268], [333, 279], [273], [277, 271], [], [273, 337], [273, 310], [273, 67], [273, 278], [273, 299], [288, 289], [313, 279], [219, 279], [318, 279], [319, 279], [279], [321, 279], [209, 279], [174, 279], [289, 290], [291, 293], [289], [293], [272], [296, 294], [296], [272], [149], [149], [149], [301, 303], [269], [183], [], [183], [122, 306], [137, 323], [274, 275], [97], [331, 309], [282, 311], [280, 315], [312, 283], [317], [314], [269], [248, 314], [314], [320, 281], [283, 317], [317], [281, 326], [323], [269], [329, 325], [304], [329, 327], [328, 290], [329], [331], [330, 334], [334], [304], [331], [331], [297, 335], [297], [338], [339, 276], [340, 287], [91, 157], [286, 287], [290, 316], [343], [344, 345], [345], [347, 348], [213], [348], [349, 350], [350], [352, 351], [352], [353, 354], [354], [357, 358], [298, 356], [298], [358], [9, 359], [9]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, rcx", "add     rsp, 8", "retn"], ["mov~rax,rcx", "add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 6, 2, 2, 1, -1, 0.16666666666666666, ["sub     rsp, 8", "call    _malloc", "xor     ecx, ecx", "test    rax, rax", "mov     rsi, rax", "jz      short loc_1129D"], ["sub~rsp,0", "call~FOO", "xor~ecx,ecx", "test~rax,rax", "mov~rsi,rax", "jz~FOO"]], [4, 0, 1, 4, 0, 16, 0, 0, 2, -1, 0.0, ["lea     rcx, [p+10h]", "mov     dword ptr [rax+0Ch], 1415FB4Ah", "mov     rdx, 0FF00FF00FF00FF01h", "mov     rax, p", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rdi, [rax+slot*8]", "mov     [rax+slot*8], p", "mov     [rsi], rdi"], ["lea~rcx,[p+0]", "mov~[word ptr [rax+0],0", "mov~rdx,0", "mov~rax,p", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rdi,<TAG>", "mov~<TAG>,p", "mov~<TAG>,rdi"]], [1, 0, 4, 1, 0, 2, 0, 0, 0, 1, 0.0, ["add     n, 10h; size", "jb      short loc_112A5"], ["add~n,0", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     ecx, ecx", "mov     rax, rcx", "retn"], ["xor~ecx,ecx", "mov~rax,rcx", "retn"]]], "func_feature": [1, 3, 2, 0, 5, 5, 2, 30, 0.03333, 1, 7], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "mmalloca", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.09615384615384615, ["cmp     p, rax", "jz      short loc_11318"], ["cmp~p,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, -1, 0.16025641025641024, ["mov     rax, [rcx-10h]", "test    rax, rax", "jnz     short loc_11300"], ["mov~rax,[rcx-10h]+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.019230769230769232, ["mov     rcx, rax"], ["mov~rcx,rax"]], [1, 0, 1, 1, 0, 4, 0, 1, 6, -1, 0.0641025641025641, ["mov     rax, [p-10h]", "sub     p, 10h; ptr", "mov     [rcx], rax", "jmp     free"], ["mov~rax,[p-10h]+0]", "sub~p,0", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 0, 0.0641025641025641, ["lea     rcx, [rax+slot*8]", "jmp     short loc_1131C"], ["lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 2, 1, 0, 1, 0, 0, 6, -1, 0.038461538461538464, ["sub     rcx, 10h"], ["sub~rcx,0"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 4, 0.07051282051282051, ["cmp     dword ptr [p-4], 1415FB4Ah", "jz      short loc_112C0"], ["cmp~[word ptr [p-4]+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    p, p", "jz      short locret_112BE"], ["test~p,p", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [0, 0, 10, 0, 0, 2, 0, 1, 3, 2, 0.17307692307692307, ["cmp     rcx, p", "jnz     short loc_11308"], ["cmp~rcx,p", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.02564102564102564, ["jmp     short locret_112BE"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 1, 0.07692307692307693, ["jmp     short loc_11330"], ["jmp~FOO"]], [3, 0, 11, 4, 0, 14, 1, 1, 2, 3, 0.1282051282051282, ["mov     rax, p", "mov     rdx, 0FF00FF00FF00FF01h", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rcx, [rax+slot*8]", "test    rcx, rcx", "jz      short locret_112BE"], ["mov~rax,p", "mov~rdx,0", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 10, 0, 14, 18, 3, 36, 0.06548, 1, 6], "succs": [[2, 5], [0, 10], [1], [8], [3], [3], [12, 13], [13, 6], [], [1, 11], [13], [4], [9, 13], []], "fname": "freea", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.06666666666666667, ["mov     rsi, [rsp+78h+var_30]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_11521"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 5, 8, 0.26666666666666666, ["mov     eax, [rsp+78h+var_54]", "test    eax, eax", "jz      loc_11373"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 1, -1, 0.005, ["mov     rdi, string_0; s", "call    _strlen", "mov     string_0, rax"], ["mov~rdi,string_0", "call~FOO", "mov~string_0,rax"]], [2, 0, 23, 0, 0, 3, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_6C], 1", "jmp     loc_113FF"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_6C], 1", "jmp     loc_113FF"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 23, 0, 0, 5, 0, 0, 4, 9, 0.045000000000000005, ["mov     [rsp+78h+var_60], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+78h+var_58], 1", "mov     [rsp+78h+var_6C], 1", "mov     [rsp+78h+var_54], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 23, 0, 1, 5, 1, 2, 6, 10, 0.165, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+78h+var_58], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_114F8"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 5, 3, 0.20833333333333334, ["test    rax, rax", "jnz     short loc_11484"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 7, 1, 0.06166666666666667, ["mov     edx, [rsp+78h+var_54]", "test    edx, edx", "jnz     loc_11545"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 23, 2, 0, 4, 0, 0, 5, 7, 0.305, ["mov     rax, [rsp+78h+var_60]", "add     [rsp+78h+string], rax", "add     count, 1", "mov     [rsp+78h+var_6C], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "add~count,0", "mov~[rsp+0],0"]], [2, 0, 23, 0, 0, 3, 0, 1, 4, 8, 0.03333333333333333, ["mov     [rsp+78h+var_60], 1", "mov     [rsp+78h+var_58], 0", "jmp     loc_1140B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 5, 8, 0.015000000000000001, ["mov     rdi, [rsp+78h+string]; s", "call    _strlen", "mov     [rsp+78h+var_58], 0", "mov     [rsp+78h+var_60], rax", "jmp     loc_1140B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 7, 0.07833333333333334, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_11502"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 2, 6, 0.38333333333333336, ["cmp     [rsp+78h+var_78], 0", "jz      short loc_113C8"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 23, 0, 0, 9, 1, 1, 1, 7, 0.03333333333333333, ["mov     rbp, rsp", "mov     [rsp+78h+string], string_0", "mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_74], 0", "mov     [rsp+78h+var_6C], 0", "xor     ebx, ebx", "lea     r12, is_basic_table", "lea     r13, [rbp+4]", "jmp     short loc_1141E"], ["mov~rbp,rsp", "mov~[rsp+0],string_0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,ebx", "lea~r12,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [2, 0, 23, 0, 0, 8, 1, 0, 3, 8, 0.14666666666666667, ["mov     rcx, [rsp+78h+string]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r12+rax*4]", "bt      eax, edx", "jnb     loc_114A8"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.05333333333333334, ["mov     [rsp+78h+var_78], 1", "jmp     loc_11424"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 25, 1, 1, 12, 1, 2, 0, 8, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, string_0", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+78h+var_30], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_11398"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,string_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 23, 0, 0, 4, 0, 1, 6, 2, 0.08666666666666667, ["mov     rax, [rsp+78h+string]", "mov     [rsp+78h+var_60], 1", "cmp     byte ptr [rax], 0", "jnz     loc_11526"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 23, 0, 3, 12, 0, 4, 3, 5, 0.30333333333333334, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+78h+string]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+78h+string]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+78h+var_60], rax", "jz      short loc_114C0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5693; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.24666666666666667, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      short loc_114D8"], ["cmp~rax,0", "jz~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [12, 9, 29, 5, 26, 33, 1, 119, 0.10173, 7, 4], "succs": [[25, 14], [0, 9], [0], [1], [1], [1], [3, 4], [21, 6], [6, 23], [15], [9], [9], [], [18, 12], [], [17, 22], [15], [13, 5], [22], [16, 2], [], [8, 20], [24, 10], [], [11, 7], []], "fname": "mbslen", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi; cmd", "xor     eax, eax", "jmp     _fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [2, 1, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_115B0"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_115B8"], ["xor~eax,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[1, 0, 34, 2, 0, 4, 0, 0, 0, 0, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011606 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_117AC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_11640; jumptable 0000000000011606 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_11747"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011606 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_1177C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_11630"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11685"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000011606 case 11", "cmp     r11d, 0AFh", "ja      loc_117BD"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011606 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_1179B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11661"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011606 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_1178A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_14D10", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_1163D"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000011606 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_11630"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11722"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_11630"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_116A7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011606 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_1175A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_115F8"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_11630"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_11630"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_11630"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_11630"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000011606 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_116C9"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011606 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_1176B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_116EF"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[6], [0, 7], [32, 1, 5, 8, 9, 11, 16, 21, 29], [2, 29], [26], [28, 4], [22], [6], [18, 12], [20, 13], [23], [33, 10], [17], [19], [3], [27, 14], [22], [22], [17], [22], [19], [30, 31], [3, 27], [22], [22], [22], [22], [], [26], [], [24], [24], [34, 35], [23], [25], [25]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 184, 0, 0, 3, 0, 0, 0, 0, 0.008578143360752053, ["mov     ecx, 10h; jumptable 00000000000119F5 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 5, 0, 1, 22, 22, 0.4343419506462985, ["lea     rsi, off_14D8C", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_11B25"], ["cmp~r11b,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_1205B"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 00000000000119F5 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_11A08"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_11A08"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_11A08"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 00000000000119F5 case 73", "mov     ecx, 16h", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_11A08"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_11A08"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_11A08"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752053, ["mov     ecx, 11h; jumptable 00000000000119F5 case 75", "jmp     loc_11A08"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752053, ["mov     ecx, 0Eh; jumptable 00000000000119F5 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_11A08"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752053, ["xor     ecx, ecx; jumptable 00000000000119F5 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_11A08"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752053, ["xor     ecx, ecx; jumptable 00000000000119F5 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_11A08"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 00000000000119F5 cases 63,68", "mov     ecx, 9", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_11A08"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_11A08"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_11A08"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.01351351351351347, ["cmp     eax, 0Fh; jumptable 00000000000119F5 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_11A08"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_11A08"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386606, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_1197F"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_1209F"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_11C57"], ["cmp~dil,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_12202"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_11DBE"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_11FE0"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_11A17"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_11DA4"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_11C17"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_120B5"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_11E27"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_11A57"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_11A24"], ["mov~[a+0],memory", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_1223E"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_12220"], ["cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_1184C"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    _malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_11BB4"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_12199"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_121BA"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.005141010575793185, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_11E2A"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_11880"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_11840"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_11849"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_11849"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_11FBC"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_120DA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_12049"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775559, ["cmp     r11b, 9", "jbe     short loc_11E05"], ["cmp~r11b,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_11A40"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_11A6B; jumptable 00000000000119F5 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_11FD1"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_1227D"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 0, 1, 24, 8, 0.005141010575793185, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_12241"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.044594594594594604, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_121D8"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_121FF"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.044594594594594604, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_11B4A"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_12120"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.005141010575793185, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_11C66"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.044594594594594604, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_11C66"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.044594594594594604, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_1186E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_1186E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_11F9D; jumptable 00000000000119F5 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["cmp~bl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 00000000000119F5 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_11AF5"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_11C9E"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.025440658049353703, ["mov     [a+8], memory", "jmp     loc_11C73"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_12082"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_120DA"], ["test~r9,r9", "js~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_11C88"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359578, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233846, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_1210E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_120DA"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210342, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_11976"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_12187"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_12293"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.1312573443008226, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_1197F"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_11CC1"], ["jmp~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_11CC8"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_11906"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_11906"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_120EB"], ["test~rax,rax", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_120DA"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_11930"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_11920"], ["cmp~bl,0", "jz~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_11940"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_11950"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_119B3"], ["or~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_119D0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_11960"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_11D07"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_11CE6"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.032961222091656875, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_11900"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_11900"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_11900"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_11900"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_11900"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_118E0"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_11906"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_11DDA"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_11D0A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.027438307873090484, ["test    memory, memory", "jz      loc_120DA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_120DA"], ["test~memory,memory", "jz~FOO"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_11DE5"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_11AFE"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_11F9D; jumptable 00000000000119F5 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_11BC1"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_11D77"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 0, 12, 8, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_11D4F"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_11D96"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 00000000000119F5 default case"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.43827849588719153, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_11F9D; jumptable 00000000000119F5 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_11F9D; jumptable 00000000000119F5 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.010634547591069332, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_11D70"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802588, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_11976"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_119B7"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 17, 31, 0.03025851938895418, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_1197F"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.461192714453584, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_11990"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.4472972972972973, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_119B0"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.4427144535840188, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_119B0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 15, -1, 0.024118683901292598, ["test    rax, rax", "jz      short loc_11FAE"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_119B0"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.443096357226792, ["cmp     bl, 74h ; 't'", "jnz     short loc_119D8"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371329, ["add     eax, 8"], ["add~eax,0"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975328, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_119B3"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824913, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_11DB0"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.025440658049353703, ["mov     [a+8], memory"], ["mov~[a+0],memory"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_11BEE"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.02382491186839013, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_11BD8"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359578, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_11DE8"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[4], [0, 5, 10, 15, 16, 17, 18, 19, 24, 90, 154], [41], [2, 147], [88, 28], [4, 6], [4, 7], [8, 4], [9, 4], [4], [11, 4], [12, 4], [4, 13], [4, 14], [4], [4], [4], [4], [4], [20, 4], [4, 21], [4, 22], [4, 23], [4], [25, 4], [4], [162, 36], [26, 99], [34], [33, 74], [29, 30], [177], [181, 31], [45], [43, 39], [34], [32, 75], [162, 36], [64, 65], [38, 111], [42], [40, 42], [54], [70, 47], [43], [50, 51], [84, 45], [67], [57], [48, 87], [71], [50], [143], [52, 173], [66, 83], [54], [58, 109], [56, 79], [57], [58], [58], [86], [61, 86], [114, 44], [63], [63], [73, 41], [67, 68], [70], [168, 90], [69, 77], [89, 46], [71], [154, 78], [80, 156], [74, 76], [30], [90], [150], [85], [113, 91], [80], [80], [154, 55], [82, 154], [], [85], [85], [154, 35], [72, 154], [96, 60], [100, 93], [91], [97], [154, 141], [128, 94], [114, 101], [97, 98], [100], [102, 167], [105, 140], [114, 115], [37], [144], [161, 103], [162], [108], [106], [108, 110], [138, 107], [138, 116], [117, 125], [53, 111], [104, 111], [111], [114, 59], [127], [125], [120, 133], [132, 118], [121, 134], [126, 135], [175], [122, 165], [87], [124, 87], [129, 146], [136, 137], [148, 127], [130], [138], [130], [130], [130], [130], [130], [137], [95], [131, 119], [138], [163, 142], [95], [167], [114, 178], [114, 92], [147, 182], [152, 145], [154, 149], [154, 139], [150], [112, 179], [153, 158], [37, 151], [160], [167], [1, 154], [81, 154], [160], [157, 159], [158], [37], [144], [164], [162], [176, 123], [174, 166], [169, 174], [170, 62], [167], [171, 174], [62], [155, 172], [174], [143], [175], [164], [175], [177, 181], [179], [27, 180], [183], [163], [185], [184, 183], [27], [185, 3]], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_12316"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_12300"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __uflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimensat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn pathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn symlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "symlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fscanf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strnlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strndup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkfifo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn umask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xmknod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswalnum:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ungetc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswspace:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn chmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rename:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimens:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn euidaccess:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn link:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "link", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strdup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
