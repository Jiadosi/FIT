{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_273A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_220C50", "jmp     cs:qword_220C58"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 109, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_2740", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimensat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 28, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 132, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__read_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__read_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fread_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fread_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:pathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rmdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rmdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 178, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 29, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 52, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:canonicalize_file_name_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "canonicalize_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rewinddir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strspn_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fallocate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fallocate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimes_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fpathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fpathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:syscall_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "syscall", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkfifo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:umask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xmknod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:linkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 23, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setvbuf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setvbuf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 82, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__explicit_bzero_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__explicit_bzero_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rename_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimens_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:renameat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "renameat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getppid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getppid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 45, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:symlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "symlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimesat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 80, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _fchmod"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 0, 1, 0.0, ["test    edi, edi", "mov     rax, name", "mov     esi, edx; mode", "js      short loc_2E3E"], ["test~edi,edi", "mov~rax,name", "mov~esi,edx", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     desc, name; file", "jmp     _chmod"], ["mov~desc,name", "jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 4, 3, 7, 0.03333, 0, 0], "succs": [[2], [0, 4], [], [], [3]], "fname": "fchmod_or_lchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [3, 2, 3, 0, 2, 1, 1, 13, 0.0, 1, 0], "succs": [[0]], "fname": "restore_default_fscreatecon_or_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5642; \"gen_tempname_len\"", "lea     rsi, file; \"lib/tempname.c\"", "lea     rdi, assertion; \"! \\\"invalid KIND in __gen_tempname\\\"\"", "sub     rsp, 8", "mov     edx, 147h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 3, 1], "succs": [[]], "fname": "gen_tempname_len_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 18, 0, 0, 2, 1, 1, 0, 0, 0.07003503742634176, ["test    al, al", "jnz     loc_34F3"], ["test~al,al", "jnz~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 8, -1, 0.13951266125179168, ["cmp     [rsp+158h+x.set_security_context], 0", "movzx   eax, [rsp+158h+x.require_preserve_context]", "jnz     short loc_3400"], ["cmp~[rsp+0],0", "movzx~eax,[rsp+0]", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 9, -1, 0.057294155120242045, ["cmp     [rsp+158h+scontext], 0", "jz      loc_351E"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 91, 0, 0, 3, 1, 1, 4, -1, 0.01051122790253225, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003028 case 264", "test    rsi, rsi", "jz      loc_336B"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 91, 1, 0, 3, 0, 1, 3, -1, 0.24402771141901575, ["movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [1, 0, 7, 0, 0, 1, 0, 0, 10, -1, 0.027273451186494647, ["mov     [rsp+158h+x.preserve_security_context], 0"], ["mov~[rsp+0],0"]], [1, 0, 91, 0, 1, 8, 1, 2, 1, -1, 0.46392737697085523, ["lea     rdx, shortopts; \"abdfHilLnprst:uvxPRS:TZ\"", "xor     r8d, r8d; longind", "mov     rcx, r13; longopts", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_3378"], ["lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rcx,r13", "mov~rsi,argv", "mov~edi,r12d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 91, 0, 0, 5, 0, 1, 4, -1, 0.005678651059085841, ["mov     [rsp+158h+x.preserve_ownership], r14b; jumptable 0000000000003028 case 243", "mov     [rsp+158h+x.preserve_mode], r14b", "mov     [rsp+158h+x.preserve_timestamps], r14b", "mov     [rsp+158h+x.require_preserve], r14b", "jmp     short loc_2FF0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.interactive], 2; jumptable 0000000000003028 case 241", "jmp     short loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.hard_link], r14b; jumptable 0000000000003028 case 239", "jmp     short loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.interactive], 3; jumptable 0000000000003028 case 236", "jmp     short loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.unlink_dest_after_failed_open], r14b; jumptable 0000000000003028 case 233", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 3, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.preserve_links], r14b; jumptable 0000000000003028 case 231", "mov     [rsp+158h+x.dereference], 2", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 6, 1, 1, 4, -1, 0.00042303710781971656, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003028 case 229", "mov     [rsp+158h+make_backups], 1", "test    rax, rax", "cmovz   rax, [rsp+158h+version_control_string]", "mov     [rsp+158h+version_control_string], rax", "jmp     loc_2FF0"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "test~rax,rax", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, -1, 0.021141901576684184, ["mov     [rsp+158h+x.preserve_xattr], r14b", "mov     [rsp+158h+x.reduce_diagnostics], r14b", "mov     [rsp+158h+x.recursive], r14b", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 6, -1, 0.005255613951266125, ["mov     [rsp+158h+scontext], rax", "jmp     loc_2FF0"], ["mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+no_target_directory], 1; jumptable 0000000000003028 case 215", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 4, 0, 1, 4, -1, 0.00042303710781971656, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003028 case 214", "mov     [rsp+158h+make_backups], 1", "mov     [rsp+158h+backup_suffix], rax", "jmp     loc_2FF0"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.recursive], r14b; jumptable 0000000000003028 cases 213,245", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.dereference], 2; jumptable 0000000000003028 case 211", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.dereference], 4; jumptable 0000000000003028 case 207", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.dereference], 3; jumptable 0000000000003028 case 203", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.unlink_dest_before_opening], r14b; jumptable 0000000000003028 case 267", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     cs:remove_trailing_slashes, r14b; jumptable 0000000000003028 case 266", "jmp     loc_2FF0"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 91, 0, 1, 11, 0, 2, 4, -1, 0.00042303710781971656, ["mov     r9, cs:argmatch_die; jumptable 0000000000003028 case 265", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, sparse_type_string; arglist", "lea     rcx, sparse_type; vallist", "lea     rdi, context; \"--sparse\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, sparse_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.sparse_mode], eax", "jmp     loc_2FF0"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 91, 0, 1, 10, 0, 2, 5, -1, 0.005255613951266125, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, reflink_type_string; arglist", "lea     rcx, reflink_type; vallist", "lea     rdi, aReflink; \"--reflink\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, reflink_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.reflink_mode], eax", "jmp     loc_2FF0"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     cs:parents_option, r14b; jumptable 0000000000003028 case 262", "jmp     loc_2FF0"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 91, 0, 1, 5, 1, 2, 4, -1, 0.00042303710781971656, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003028 case 261", "xor     edx, edx; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "jmp     loc_2FF0"], ["mov~rdi,<TAG>", "xor~edx,edx", "mov~rsi,r15", "call~FOO", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+copy_contents], 1; jumptable 0000000000003028 case 260", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.data_copy_required], 0; jumptable 0000000000003028 case 259", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.one_file_system], r14b; jumptable 0000000000003028 case 251", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.verbose], r14b; jumptable 0000000000003028 case 249", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.update], r14b; jumptable 0000000000003028 case 248", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 1, 91, 0, 0, 6, 1, 1, 6, -1, 0.025919732441471572, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     [rsp+158h+target_directory], rax", "mov     eax, [rsp+158h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_2FF0"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.011053710781971652, ["mov     [rsp+158h+x.symbolic_link], r14b; jumptable 0000000000003028 case 246", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 1, 5, 0, 2, 5, -1, 0.005255613951266125, ["mov     edx, 1; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "mov     [rsp+158h+x.require_preserve], r14b", "jmp     loc_2FF0"], ["mov~edx,0", "mov~rsi,r15", "call~FOO", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 1, 1, 5, -1, 0.01540850453893932, ["test    rax, rax", "jz      loc_2FF0"], ["test~rax,rax", "jz~FOO"]], [1, 0, 91, 0, 2, 10, 4, 3, 6, -1, 0.0, ["lea     rsi, aWarningIgnorin; \"warning: ignoring --context; it require\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2FF0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 5, -1, 0.005255613951266125, ["mov     [rsp+158h+x.reflink_mode], 2", "jmp     loc_2FF0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 6, -1, 0.005255613951266125, ["mov     [rsp+158h+x.set_security_context], r14b", "jmp     loc_2FF0"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [22, 0, 91, 1, 7, 62, 2, 7, 0, -1, 0.0, ["push    r15", "push    r14", "mov     r14d, 1", "push    r13", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "mov     rbp, argv", "lea     r13, long_opts", "lea     rbx, off_18C9C", "sub     rsp, 128h", "mov     argc, [argv]; argv0", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "lea     r15, [rsp+158h+x]", "call    set_program_name", "lea     rsi, aSSUnbackup+14h; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "mov     rdi, r15; x", "mov     cs:selinux_enabled, 0", "call    cp_options_default", "movdqa  xmm0, cs:xmmword_1A7D0", "lea     rdi, name; \"POSIXLY_CORRECT\"", "mov     [rsp+158h+x.copy_as_regular], 1", "mov     [rsp+158h+x.unlink_dest_before_opening], 0", "movups  xmmword ptr [rsp+158h+x.one_file_system], xmm0", "mov     [rsp+158h+x.unlink_dest_after_failed_open], 0", "mov     [rsp+158h+x.hard_link], 0", "movdqa  xmm0, cs:xmmword_1A7E0", "mov     [rsp+158h+x.move_mode], 0", "mov     [rsp+158h+x.install_mode], 0", "movups  xmmword ptr [rsp+158h+x.dereference], xmm0", "mov     [rsp+158h+x.reflink_mode], 0", "mov     [rsp+158h+x.symbolic_link], 0", "mov     [rsp+158h+x.stdin_tty], 0", "mov     [rsp+158h+x.update], 0", "mov     [rsp+158h+x.verbose], 0", "call    _getenv", "pxor    xmm0, xmm0", "test    rax, rax", "lea     rax, [rsp+158h+st]", "setnz   [rsp+158h+x.open_dangling_dest_symlink]", "mov     [rsp+158h+scontext], 0", "mov     [rsp+158h+no_target_directory], 0", "mov     [rsp+158h+target_directory], 0", "movaps  xmmword ptr [rsp+158h+x.dest_info], xmm0", "mov     [rsp+158h+copy_contents], 0", "mov     [rsp+158h+version_control_string], 0", "mov     [rsp+158h+backup_suffix], 0", "mov     [rsp+158h+make_backups], 0", "mov     [rsp+158h+stat_buf], rax", "nop     word ptr [rax+rax+00000000h]"], ["push~r15", "push~r14", "mov~r14d,0", "push~r13", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "mov~rbp,argv", "lea~r13,<TAG>", "lea~rbx,<TAG>", "sub~rsp,0", "mov~argc,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r15,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,r15", "mov~<TAG>,0", "call~FOO", "movdqa~xmm0,<TAG>", "lea~rdi,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "pxor~xmm0,xmm0", "test~rax,rax", "lea~rax,[rsp+0]", "setnz~[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~<TAG>,0", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [3, 0, 0, 0, 4, 16, 2, 4, 12, -1, 0.0, ["call    ___errno_location", "mov     rdi, [rsp+158h+scontext]; arg", "mov     dword ptr [rax], 5Fh ; '_'", "mov     rbx, rax", "call    quote", "lea     rsi, aFailedToSetDef; \"failed to set default file creation con\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     argv, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~<TAG>,0", "mov~rbx,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~argv,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 11, -1, 0.021679407548972754, ["cmp     [rsp+158h+scontext], 0", "jnz     loc_361B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 1, 0, 2, 9, 3, 2, 13, -1, 0.0005773212294951426, ["lea     rsi, aCannotPreserve_0; \"cannot preserve extended attributes, cp\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 11, -1, 0.015308966395922916, ["cmp     cs:selinux_enabled, 0", "jnz     loc_340D"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 12, -1, 0.030797101449275357, ["cmp     [rsp+158h+x.require_preserve_xattr], 0", "jnz     loc_35F7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 91, 1, 0, 3, 0, 1, 2, -1, 0.24402771141901575, ["add     eax, 83h", "cmp     eax, 10Bh; switch 268 cases", "ja      loc_35C4; jumptable 0000000000003028 default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 11, -1, 0.012800605191909549, ["test    al, al", "jz      loc_3419"], ["test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.025740563784042027, ["test    al, al", "jz      loc_3419"], ["test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 12, -1, 0.005852842809364548, ["cmp     cs:selinux_enabled, 0", "jnz     loc_3419"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 91, 0, 0, 3, 1, 1, 4, -1, 0.005255613951266125, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003028 case 263", "test    rdi, rdi", "jnz     loc_3325"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 4, -1, 0.0, ["xor     edi, edi; jumptable 0000000000003028 case 1", "call    usage"], ["xor~edi,edi", "call~FOO"]], [2, 0, 1, 0, 2, 9, 3, 2, 13, -1, 0.0033444816053511705, ["lea     rsi, aCannotPreserve; \"cannot preserve security context withou\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 1, 2, 14, 2, 3, 13, -1, 0.012661251791686574, ["call    hash_init", "movsxd  rdx, cs:optind@@GLIBC_2_2_5", "movzx   ecx, [rsp+158h+no_target_directory]; no_target_directory", "mov     edi, r12d", "mov     r8, r15; x", "sub     edi, edx; n_files", "lea     rsi, [argv+rdx*8+0]; file", "mov     rdx, [rsp+158h+target_directory]; target_directory", "call    do_copy", "xor     eax, 1", "mov     rcx, [rsp+158h+var_40]", "xor     rcx, fs:28h", "movzx   eax, al", "jnz     loc_35F2"], ["call~FOO", "movsxd~rdx,<TAG>", "movzx~ecx,[rsp+0]", "mov~edi,r12d", "mov~r8,r15", "sub~edi,edx", "lea~rsi,[argv+0]", "mov~rdx,<TAG>", "call~FOO", "xor~eax,0", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "movzx~eax,al", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 14, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     argv", "pop     argc", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argv", "pop~argc", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 2, 7, 4, 2, 5, -1, 0.0015527950310559005, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 4, -1, 0.005972288580984233, ["mov     edx, 5", "lea     rsi, aCannotMakeBoth; \"cannot make both hard and symbolic link\"...", "jmp     loc_35AF"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 7, -1, 0.001433349259436216, ["mov     edx, 5", "lea     rsi, aReflinkCanBeUs; \"--reflink can be used only with --spars\"...", "jmp     loc_35AF"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.00047778308647873863, ["lea     rsi, aOptionsBackupA; \"options --backup and --no-clobber are m\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [1, 0, 42, 0, 0, 2, 0, 1, 3, -1, 0.011347348303870042, ["cmp     [rsp+158h+x.symbolic_link], 0", "jz      loc_3383"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.21978021978021978, ["cmp     [rsp+158h+x.hard_link], 0", "jnz     loc_347A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.02615862398471094, ["cmp     [rsp+158h+target_directory], 0; jumptable 0000000000003028 case 247", "jnz     loc_35CE"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 4, -1, 0.09131629240324891, ["cmp     [rsp+158h+make_backups], 0", "mov     [rsp+158h+x.update], 0", "jnz     loc_35A3"], ["cmp~[rsp+0],0", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 3, -1, 0.20688007644529383, ["cmp     [rsp+158h+x.interactive], 2", "jz      loc_3496"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 32, 0, 0, 3, 1, 1, 5, -1, 0.17200191113234592, ["xor     eax, eax", "cmp     [rsp+158h+x.reflink_mode], 2", "jnz     loc_33C4"], ["xor~eax,eax", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, -1, 0.1086359292881032, ["cmp     [rsp+158h+make_backups], 0", "jz      loc_34A6"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 6, -1, 0.006688963210702341, ["cmp     [rsp+158h+x.sparse_mode], 2", "jz      loc_33C4"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 91, 0, 1, 6, 1, 2, 5, -1, 0.02054467271858576, ["mov     rdx, [rsp+158h+stat_buf]; stat_buf", "mov     rsi, cs:optarg@@GLIBC_2_2_5; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_365D"], ["mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, -1, 0.000716674629718108, ["jmp     loc_34BE"], ["jmp~FOO"]], [2, 0, 91, 0, 0, 8, 0, 1, 4, -1, 0.010391782130912566, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000003028 case 228", "mov     [rsp+158h+x.dereference], 2", "mov     [rsp+158h+x.preserve_links], r14b", "mov     [rsp+158h+x.preserve_ownership], r14b", "mov     [rsp+158h+x.preserve_mode], r14b", "mov     [rsp+158h+x.preserve_timestamps], r14b", "mov     [rsp+158h+x.require_preserve], r14b", "jz      short loc_30D5"], ["cmp~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jz~FOO"]], [0, 0, 91, 0, 0, 1, 0, 0, 5, -1, 0.0, ["mov     [rsp+158h+x.preserve_security_context], r14b"], ["mov~[rsp+0],r14b"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.020425226946966076, ["cmp     [rsp+158h+x.recursive], 0", "jz      short loc_353C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 27, 0, 1, 5, 0, 2, 6, -1, 0.16961299569995222, ["mov     rdi, [rsp+158h+backup_suffix]; s", "mov     [rsp+158h+x.backup_type], eax", "call    set_simple_backup_suffix", "cmp     [rsp+158h+x.dereference], 1", "jz      loc_34CF"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],eax", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 8, -1, 0.006987577639751552, ["cmp     [rsp+158h+x.hard_link], 0", "jnz     short loc_353C"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 9, -1, 0.001433349259436216, ["mov     [rsp+158h+x.dereference], 2"], ["mov~[rsp+0],0"]], [0, 0, 21, 0, 0, 3, 0, 1, 8, -1, 0.0037625418060200666, ["movzx   eax, [rsp+158h+copy_contents]", "mov     [rsp+158h+x.copy_as_regular], al", "jmp     loc_33E8"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.14524605828953654, ["cmp     [rsp+158h+x.recursive], 0", "jnz     loc_34E5"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 91, 0, 0, 3, 0, 1, 4, -1, 0.025919732441471572, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000003028 case 221", "mov     rax, cs:optarg@@GLIBC_2_2_5", "jz      loc_333C"], ["cmp~<TAG>,0", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 10, -1, 0.029144768275203056, ["cmp     [rsp+158h+x.preserve_security_context], 0", "jz      short loc_352D"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 91, 0, 0, 2, 1, 1, 5, -1, 0.01051122790253225, ["test    rax, rax", "jz      loc_3549"], ["test~rax,rax", "jz~FOO"]], [3, 0, 91, 0, 3, 14, 3, 3, 7, -1, 0.000358337314859054, ["mov     rsi, [rsp+158h+target_directory]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 15, 0, 2, 9, 3, 2, 11, -1, 0.0009555661729574773, ["lea     rsi, aCannotSetTarge; \"cannot set target context and preserve \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 10, -1, 0.05335244465679244, ["cmp     [rsp+158h+x.preserve_security_context], 0", "jz      short loc_3563"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 12, -1, 0.005852842809364548, ["jmp     short loc_3578"], ["jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 8, -1, 0.004061156235069278, ["mov     [rsp+158h+x.dereference], 4", "jmp     loc_33DD"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 6, -1, 0.006450071667462971, ["cmp     [rsp+158h+x.sparse_mode], 2", "jz      loc_33A4"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 5, -1, 0.0179168657429527, ["cmp     [rsp+158h+x.reflink_mode], 2", "jz      loc_3553"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 0, 2, 13, 2, 2, 4, -1, 0.0, ["lea     rax, aJimMeyering; jumptable 0000000000003028 case 0", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rcx, cs:Version; version", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aTorbjornGranlu; \"Torbjorn Granlund\"", "push    rax", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cp\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rax,<TAG>", "mov~rdi,<TAG>", "mov~rcx,<TAG>", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "push~rax", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 1, 0, 2, 9, 3, 2, 5, -1, 0.005494505494505494, ["lea     rsi, aMultipleTarget; \"multiple target directories specified\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 28, 0, 2, 7, 1, 2, 6, -1, 0.006688963210702341, ["lea     rsi, aBackupType; \"backup type\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, [rsp+158h+version_control_string]; version", "mov     rdi, rax; context", "call    xget_version"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     edi, 1; jumptable 0000000000003028 default case", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [46, 48, 120, 1, 94, 153, 0, 424, 0.03122, 42, 5], "succs": [[5, 79], [0, 2], [0, 83], [25, 38], [3, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 50, 51, 62, 70, 78, 88, 92], [42], [60, 46], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [6], [81, 6], [6], [6], [37, 6], [6], [6], [6], [6], [], [41, 45], [41], [42, 84], [43, 53], [92, 4], [44, 45], [49, 45], [52, 45], [35, 7], [], [51], [89, 54], [], [92], [55], [55], [55], [56, 64], [64, 59], [61], [90, 68], [65, 58], [66, 63], [73, 67], [65, 87], [57, 73], [33], [57], [14, 71], [14], [74, 85], [72, 77], [75, 85], [76], [1], [1, 76], [80, 36], [82, 44], [39, 15], [34], [83], [48, 47], [52], [77], [91, 69], [91, 86], [], [], [89], [73], []], "fname": "main", "n_num": 93}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3700"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_3700"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3750"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3750"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3783"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_3798"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 1, 0, 9, 0, 1, 6, -1, 0.05514705882352941, ["mov     rdi, [rsp+48h+arg_writable]; ptr", "add     rsp, 18h", "pop     on_off", "pop     x", "pop     r12", "pop     r13", "pop     comma", "pop     comma", "jmp     free"], ["mov~rdi,[rsp+0]", "add~rsp,0", "pop~on_off", "pop~x", "pop~r12", "pop~r13", "pop~comma", "pop~comma", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+22h], bl; jumptable 000000000000385B case 3", "jmp     short loc_3870"], ["mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 1, 0, 4, 0, 1, 3, 5, 0.4742647058823529, ["mov     eax, [r13+rax*4+0]", "movsxd  rax, dword ptr [r12+rax*4]", "add     rax, r12", "jmp     rax; switch jump"], ["mov~eax,[r13+0]", "movsxd~rax,<TAG>", "add~rax,r12", "jmp~rax"]], [0, 0, 17, 0, 0, 3, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+26h], bl; jumptable 000000000000385B case 4", "mov     [x+25h], bl", "jmp     short loc_3870"], ["mov~[x+0],bl", "mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 0, 0, 4, 4, 0.013480392156862744, ["mov     [x+27h], bl; jumptable 000000000000385B case 5", "mov     [x+28h], bl", "nop     word ptr [rax+rax+00000000h]"], ["mov~[x+0],bl", "mov~[x+0],bl", "nop~[ord ptr [rax+0]"]], [2, 0, 17, 0, 0, 9, 1, 1, 4, 5, 0.09191176470588235, ["mov     eax, ebx; jumptable 000000000000385B case 6", "mov     [x+1Eh], bl", "mov     [x+1Fh], bl", "xor     eax, 1", "cmp     cs:selinux_enabled, 0", "mov     [x+1Dh], bl", "mov     [x+22h], bl", "mov     [x+20h], al", "jz      short loc_38E8"], ["mov~eax,ebx", "mov~[x+0],bl", "mov~[x+0],bl", "xor~eax,0", "cmp~<TAG>,0", "mov~[x+0],bl", "mov~[x+0],bl", "mov~[x+0],al", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+1Fh], bl; jumptable 000000000000385B case 1", "jmp     short loc_3870"], ["mov~[x+0],bl", "jmp~FOO"]], [2, 0, 17, 0, 1, 9, 0, 2, 2, 1, 0.5220588235294118, ["mov     r9, cs:argmatch_die; exit_fn", "mov     rdi, [rsp+48h+context]; context", "lea     rcx, preserve_vals_7370; vallist", "lea     rdx, preserve_args_7371; arglist", "mov     r8d, 4; valsize", "mov     rsi, s; arg", "call    __xargmatch_internal", "cmp     dword ptr [r13+rax*4+0], 6; switch 7 cases", "ja      loc_38ED; jumptable 000000000000385B default case"], ["mov~r9,<TAG>", "mov~rdi,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~r8d,0", "mov~rsi,s", "call~FOO", "cmp~[word ptr [r13+0],0", "ja~FOO"]], [1, 0, 17, 0, 1, 6, 2, 2, 1, 2, 0.5073529411764706, ["mov     esi, 2Ch ; ','; c", "mov     rdi, s; s", "xor     r14d, r14d", "call    _strchr", "test    comma, comma", "jz      short loc_381C"], ["mov~esi,0", "mov~rdi,s", "xor~r14d,r14d", "call~FOO", "test~comma,comma", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 0, 2, 2, 0.0, ["lea     r14, [comma+1]", "mov     byte ptr [rax], 0"], ["lea~r14,[comma+0]", "mov~<TAG>,0"]], [0, 0, 17, 0, 0, 3, 1, 1, 5, 3, 0.5477941176470588, ["test    comma, comma", "mov     r15, comma", "jnz     short loc_3800"], ["test~comma,comma", "mov~r15,comma", "jnz~FOO"]], [1, 0, 17, 0, 0, 5, 1, 1, 4, 4, 0.013480392156862744, ["mov     eax, ebx; jumptable 000000000000385B case 0", "mov     [x+1Eh], bl", "xor     eax, 1", "mov     [x+20h], al", "jmp     short loc_3870"], ["mov~eax,ebx", "mov~[x+0],bl", "xor~eax,0", "mov~[x+0],al", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    _abort; jumptable 000000000000385B default case"], ["call~FOO"]], [1, 0, 17, 1, 1, 21, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "lea     r14, aPreserve; \"--preserve\"", "push    r13", "push    r12", "mov     r12d, edx", "push    rbp", "push    rbx", "mov     rbp, x", "mov     ebx, edx", "lea     r13, preserve_vals_7370", "sub     rsp, 18h", "call    xstrdup", "mov     r15, rax", "mov     [rsp+48h+arg_writable], rax", "lea     s, aNoPreserve; \"--no-preserve\"", "test    r12b, r12b", "lea     r12, off_18C80", "cmovnz  rax, r14", "mov     [rsp+48h+context], rax", "nop     word ptr [rax+rax+00h]"], ["push~r15", "push~r14", "lea~r14,<TAG>", "push~r13", "push~r12", "mov~r12d,edx", "push~rbp", "push~rbx", "mov~rbp,x", "mov~ebx,edx", "lea~r13,<TAG>", "sub~rsp,0", "call~FOO", "mov~r15,rax", "mov~[rsp+0],rax", "lea~s,<TAG>", "test~r12b,r12b", "lea~r12,<TAG>", "cmovnz~rax,r14", "mov~<TAG>,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862744, ["mov     [x+1Dh], bl; jumptable 000000000000385B case 2", "jmp     short loc_3870"], ["mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, 4, 0.10661764705882353, ["mov     [x+27h], bl", "jmp     short loc_3870"], ["mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 5, 5, 0.0, ["mov     [x+25h], bl"], ["mov~[x+0],bl"]]], "func_feature": [4, 6, 16, 0, 18, 26, 2, 84, 0.13256, 7, 3], "succs": [[], [0], [11], [2, 4, 5, 6, 7, 12, 15], [11], [11], [16, 17], [11], [3, 13], [8, 10], [8], [1, 9], [11], [], [9], [11], [11], [16]], "fname": "decode_preserve_arg", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.02727272727272727, ["test    r13b, r13b", "jz      short loc_398C"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.05909090909090909, ["cmp     r12d, 2", "jz      short loc_3984"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.00909090909090909, ["mov     eax, 1", "jmp     short loc_393C"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 1, -1, 0.02727272727272727, ["mov     edx, [st+18h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      short loc_397D"], ["mov~edx,[st+0]", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     st", "pop     file", "pop     r12", "pop     r13", "pop     new_dst", "retn"], ["pop~st", "pop~file", "pop~r12", "pop~r13", "pop~new_dst", "retn"]], [1, 0, 1, 0, 0, 3, 1, 1, 4, -1, 0.00909090909090909, ["mov     dword ptr [st+18h], 0", "xor     eax, eax", "jmp     short loc_393C"], ["mov~[word ptr [st+0],0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 3, -1, 0.013636363636363636, ["mov     byte ptr [new_dst], 1", "xor     eax, eax", "jmp     short loc_393C"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.022727272727272728, ["and     eax, 1"], ["and~eax,0"]], [1, 1, 2, 0, 0, 6, 1, 1, 2, -1, 0.013636363636363636, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    al", "movzx   eax, al", "jmp     short loc_3939"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,<STR>", "setz~al", "movzx~eax,al", "jmp~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 1, -1, 0.045454545454545456, ["call    ___errno_location", "mov     r12d, [rax]", "test    r12d, r12d", "jnz     short loc_3967"], ["call~FOO", "mov~r12d,<TAG>", "test~r12d,r12d", "jnz~FOO"]], [1, 0, 10, 0, 1, 15, 1, 2, 0, -1, 0.0, ["push    r14", "push    r13", "mov     r14, new_dst", "push    r12", "push    rbp", "mov     new_dst, st; stat_buf", "push    rbx", "mov     rbp, file", "mov     rbx, st", "mov     st, file; filename", "mov     edi, 1; ver", "mov     r13d, ecx", "call    ___xstat", "test    eax, eax", "jnz     short loc_3945"], ["push~r14", "push~r13", "mov~r14,new_dst", "push~r12", "push~rbp", "mov~new_dst,st", "push~rbx", "mov~rbp,file", "mov~rbx,st", "mov~st,file", "mov~edi,0", "mov~r13d,ecx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []]], "func_feature": [5, 10, 14, 0, 13, 15, 2, 64, 0.01894, 1, 0], "succs": [[5], [0, 6], [4], [2, 7], [], [4], [4], [4], [7], [8, 1], [9, 3], [11]], "fname": "target_directory_operand", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 50, 0, 0, 1, 0, 1, 0, 0, 0.02976190476190476, ["jmp     loc_3AD0"], ["jmp~FOO"]], [2, 0, 50, 1, 0, 3, 0, 1, 12, 5, 0.02725563909774436, ["add     slash, 1", "cmp     byte ptr [slash], 2Fh ; '/'", "jz      short loc_3B78"], ["add~slash,0", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 50, 0, 1, 8, 1, 2, 4, 5, 0.34868421052631576, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     byte ptr [rbx], 0", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "mov     r14d, eax", "jnz     loc_3B90"], ["mov~rdx,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "mov~r14d,eax", "jnz~FOO"]], [1, 0, 50, 0, 1, 5, 1, 2, 3, 3, 0.3726503759398496, ["mov     esi, 2Fh ; '/'; c", "call    _strchr", "test    rax, rax", "mov     rbx, rax", "jz      loc_3E6C"], ["mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 2, 50, 0, 0, 5, 2, 1, 11, 5, 0.0073621553884711775, ["mov     r14d, esi", "and     r14d, 12h", "mov     eax, r14d", "xor     eax, 0FFFh", "jmp     loc_3CAD"], ["mov~r14d,esi", "and~r14d,<STR>", "mov~eax,r14d", "xor~eax,<STR>", "jmp~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 10, 6, 0.02506265664160401, ["cmp     byte ptr [x+1Eh], 0", "jz      short loc_3E40"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 50, 0, 1, 6, 1, 2, 13, 4, 0.21459899749373432, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_3F40"], ["mov~rdx,[rbp+0]", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 12, 5, 0.20958646616541352, ["mov     rax, [rbp+verbose_fmt_string]", "test    rax, rax", "jz      short loc_3CF1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 50, 0, 1, 6, 1, 1, 13, 5, 0.0, ["mov     rdx, [rbp+src]", "mov     rsi, rax", "mov     rcx, dir", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rcx,dir", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.01550751879699248, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 4, 0, 0, 2, 0, 0, 2, 3, 0.0015664160401002505, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 50, 0, 0, 2, 1, 1, 5, 4, 0.08098370927318295, ["test    dword ptr [x+1Ch], 0FFFFFF00h", "jnz     short loc_3B90"], ["test~[word ptr [x+0],0", "jnz~FOO"]], [1, 0, 50, 0, 0, 3, 0, 1, 14, 6, 0.20018796992481203, ["cmp     byte ptr [x+1Eh], 0", "mov     esi, [rbp+stats.st_mode]", "jnz     short loc_3D44"], ["cmp~[yte ptr [x+0],0", "mov~esi,[rbp+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.03446115288220551, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_3F7C"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.0015664160401002505, ["mov     rsi, dst_dir; arg"], ["mov~rsi,dst_dir"]], [1, 1, 7, 0, 0, 4, 1, 1, 1, 4, 0.0021929824561403508, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_3E93"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [2, 0, 4, 0, 1, 6, 0, 1, 12, 3, 0.015350877192982455, ["mov     rsi, dir; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotMakeDire; \"cannot make directory %s\"", "mov     dir, rax", "mov     edx, 5; category"], ["mov~rsi,dir", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dir,rax", "mov~edx,0"]], [2, 0, 50, 0, 1, 8, 2, 2, 11, 4, 0.23558897243107768, ["cmp     byte ptr [x+20h], 0", "mov     edx, 1FFh", "mov     rdi, dir; path", "cmovnz  esi, edx", "and     esi, eax; mode", "call    _mkdir", "test    eax, eax", "jnz     loc_3EFD"], ["cmp~[yte ptr [x+0],0", "mov~edx,0", "mov~rdi,dir", "cmovnz~esi,edx", "and~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 7, 3, 0.0012531328320802004, ["mov     r8d, 14h"], ["mov~r8d,0"]], [1, 1, 50, 0, 0, 4, 1, 1, 6, 4, 0.12766290726817042, ["mov     eax, [rbp+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3BC1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 50, 0, 0, 5, 0, 1, 9, 6, 0.22305764411027568, ["mov     rax, [rbp+new_dst]", "mov     esi, [new+18h]", "mov     byte ptr [rax], 1", "cmp     byte ptr [x+1Dh], 0", "jz      loc_3DF0"], ["mov~rax,[rbp+0]", "mov~esi,[new+0]", "mov~<TAG>,0", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 50, 0, 1, 8, 1, 2, 8, 3, 0.22290100250626566, ["mov     edx, [new+18h]; mode", "mov     rdi, [rbp+src]; src_name", "mov     r8, x; x", "mov     ecx, 1; new_dst", "mov     rsi, dir; dst_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_3E35"], ["mov~edx,[new+0]", "mov~rdi,[rbp+0]", "mov~r8,x", "mov~ecx,0", "mov~rsi,dir", "call~FOO", "test~al,al", "jz~FOO"]], [9, 1, 57, 5, 5, 50, 6, 6, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, x", "push    rbx", "mov     r15, src_offset", "mov     rbx, const_dir", "sub     rsp, 168h", "mov     [rbp+attr_list], attr_list_0", "mov     [rbp+new_dst], new_dst_0", "mov     [rbp+verbose_fmt_string], verbose_fmt_string_0", "mov     verbose_fmt_string_0, fs:28h", "mov     [rbp+var_38], verbose_fmt_string_0", "xor     edx, edx", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+190h+var_181]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r12, rax", "call    dir_len", "mov     r14, rax", "add     dirlen, 1Fh", "mov     rsi, dir; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdx, dirlen; n", "sub     rsp, rax", "lea     __old, [rsp+190h+var_181]", "and     rbx, 0FFFFFFFFFFFFFFF0h", "mov     rdi, dst_dir; dest", "call    _memcpy", "mov     rax, [rbp+attr_list]", "mov     byte ptr [dst_dir+dirlen], 0", "mov     rsi, dst_dir; filename", "mov     edi, 1; ver", "mov     qword ptr [rax], 0", "lea     rax, [rbp+stats]", "mov     rdx, rax; stat_buf", "mov     [rbp+stat_buf], rax", "call    ___xstat", "test    eax, eax", "jz      loc_3E50"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,x", "push~rbx", "mov~r15,src_offset", "mov~rbx,const_dir", "sub~rsp,<STR>", "mov~[rbp+0],attr_list_0", "mov~[rbp+0],new_dst_0", "mov~[rbp+0],verbose_fmt_string_0", "mov~verbose_fmt_string_0,<TAG>", "mov~[rbp+0],verbose_fmt_string_0", "xor~edx,edx", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "mov~r14,rax", "add~dirlen,0", "mov~rsi,dir", "and~rax,0", "mov~rdx,dirlen", "sub~rsp,rax", "lea~__old,[rsp+0]", "and~rbx,0", "mov~rdi,dst_dir", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dst_dir", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 11, 3, 0.009555137844611528, ["cmp     byte ptr [x+26h], 0", "jz      loc_3B64"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 50, 0, 1, 7, 2, 2, 10, 4, 0.020833333333333332, ["movzx   esi, byte ptr [x+25h]; process_local", "xor     edx, edx; recurse", "mov     rcx, x; x", "mov     rdi, dir; dst_name", "call    set_file_security_ctx", "test    al, al", "jnz     loc_3B64"], ["movzx~esi,[yte ptr [x+0]", "xor~edx,edx", "mov~rcx,x", "mov~rdi,dir", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 3, 12, 4, 4, 13, 2, 0.015977443609022556, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     slash, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     loc_3E71"], ["xor~edi,edi", "call~FOO", "mov~slash,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 14, 3, 0.0037593984962406013, ["mov     rsi, dir; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dir, rax", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "jmp     short loc_3F19"], ["mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dir,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 17, 3, 0.0072055137844611525, ["mov     rsi, dir; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dir, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     short loc_3F19"], ["mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dir,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 50, 0, 0, 4, 1, 1, 15, 7, 0.04824561403508772, ["mov     eax, esi", "not     eax", "test    eax, r14d", "jnz     loc_3ED0"], ["mov~eax,esi", "not~eax", "test~eax,r14d", "jnz~FOO"]], [1, 0, 50, 0, 0, 3, 1, 1, 9, 5, 0.11027568922305764, ["mov     rax, 0FF000000FF00h", "test    [x+20h], rax", "jnz     loc_3E10"], ["mov~rax,0", "test~[x+0],rax", "jnz~FOO"]], [1, 1, 50, 0, 0, 4, 2, 0, 10, 5, 0.18765664160401002, ["mov     r14d, esi", "and     r14d, 3Fh", "mov     eax, r14d", "xor     eax, 0FFFh"], ["mov~r14d,esi", "and~r14d,0", "mov~eax,r14d", "xor~eax,<STR>"]], [0, 0, 50, 0, 1, 8, 3, 2, 6, 3, 0.09837092731829573, ["mov     rdi, [rbp+src]; src_name", "xor     ecx, ecx; new_dst", "xor     edx, edx; mode", "mov     r8, x; x", "mov     rsi, dir; dst_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_3E35"], ["mov~rdi,[rbp+0]", "xor~ecx,ecx", "xor~edx,edx", "mov~r8,x", "mov~rsi,dir", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 50, 1, 1, 31, 1, 2, 7, 4, 0.24467418546365913, ["mov     edi, 0A8h; n", "call    xmalloc", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_dev]", "mov     r15, rax", "mov     rcx, [rbp+attr_list]", "movups  xmmword ptr [new], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_nlink]", "movups  xmmword ptr [new+10h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_gid]", "movups  xmmword ptr [new+20h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_size]", "movups  xmmword ptr [new+30h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_blocks]", "movups  xmmword ptr [new+40h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_atim.tv_nsec]", "movups  xmmword ptr [new+50h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_mtim.tv_nsec]", "movups  xmmword ptr [new+60h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_ctim.tv_nsec]", "movups  xmmword ptr [new+70h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.__glibc_reserved+8]", "movups  xmmword ptr [new+80h], xmm0", "mov     new, slash", "mov     byte ptr [new+90h], 0", "sub     rax, dir", "test    r14d, r14d", "mov     [new+98h], rax", "mov     rax, [rcx]", "mov     [rcx], new", "mov     [new+0A0h], rax", "jz      loc_3B12"], ["mov~edi,0", "call~FOO", "movdqa~xmm0,[mmword ptr [rbp+0]", "mov~r15,rax", "mov~rcx,[rbp+0]", "movups~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "mov~new,slash", "mov~[yte ptr [new+0],0", "sub~rax,dir", "test~r14d,r14d", "mov~[new+0],rax", "mov~rax,<TAG>", "mov~<TAG>,new", "mov~[new+0],rax", "jz~FOO"]], [1, 0, 53, 0, 0, 4, 0, 1, 1, 5, 0.015037593984962405, ["lea     rdi, [dir+src_offset]", "mov     [rbp+src], src_0", "cmp     byte ptr [slash], 2Fh ; '/'", "jnz     short loc_3AB9"], ["lea~rdi,<TAG>", "mov~[rbp+0],src_0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 52, 0, 0, 1, 0, 0, 2, 6, 0.0006265664160401002, ["nop"], ["nop"]], [2, 0, 50, 0, 0, 4, 1, 1, 16, 6, 0.04057017543859649, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_3D68"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 50, 0, 0, 1, 0, 1, 17, 7, 0.006422305764411027, ["jmp     loc_3D27"], ["jmp~FOO"]], [2, 0, 52, 1, 0, 3, 0, 1, 3, 5, 0.015977443609022556, ["add     slash, 1; s", "cmp     byte ptr [slash], 2Fh ; '/'", "jz      short loc_3AB0"], ["add~slash,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 50, 0, 1, 4, 1, 2, 6, 3, 0.1287593984962406, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jnz     loc_3D9C"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 50, 0, 1, 6, 1, 2, 5, 4, 0.26676065162907264, ["mov     rdx, [rbp-188h]; stat_buf", "mov     rsi, [rbp+src]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_3D80"], ["mov~rdx,[rbp-188h]+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 50, 0, 0, 4, 1, 1, 7, 4, 0.09335839598997493, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3EF8"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 1, 50, 0, 0, 3, 1, 1, 11, 5, 0.0073621553884711775, ["xor     r14d, r14d", "mov     eax, 0FFFh", "jmp     loc_3CAD"], ["xor~r14d,r14d", "mov~eax,<STR>", "jmp~FOO"]], [0, 0, 50, 0, 0, 3, 0, 0, 2, 4, 0.06109022556390977, ["lea     rax, [rbp+src_st]", "mov     [rbp-188h], rax", "nop     word ptr [rax+rax+00000000h]"], ["lea~rax,[rbp+0]", "mov~[rbp-188h]+0],rax", "nop~[ord ptr [rax+0]"]], [2, 0, 3, 0, 3, 15, 5, 4, 3, 2, 0.0037593984962406013, ["mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_3E71"], ["mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 8, 3, 0.013784461152882205, ["mov     rsi, dir", "jmp     short loc_3E96"], ["mov~rsi,dir", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 7, 2, 0.007518796992481203, ["xor     eax, eax", "jmp     short loc_3E71"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 50, 0, 0, 2, 0, 0, 8, 6, 0.06892230576441102, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [2, 0, 50, 0, 0, 4, 1, 1, 15, 5, 0.16901629072681704, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_3D68"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 50, 0, 0, 3, 1, 0, 17, 6, 0.01206140350877193, ["or      r14d, esi", "mov     byte ptr [new+90h], 1", "mov     [new+18h], r14d"], ["or~r14d,esi", "mov~[yte ptr [new+0],0", "mov~[new+0],r14d"]], [0, 0, 50, 0, 0, 1, 0, 1, 17, 6, 0.023496240601503758, ["jmp     loc_3B50"], ["jmp~FOO"]], [2, 0, 50, 0, 0, 4, 0, 1, 10, 4, 0.2858709273182957, ["cmp     byte ptr [slash+1], 2Fh ; '/'", "lea     rdi, [slash+1]", "mov     byte ptr [rbx], 2Fh ; '/'", "jnz     loc_3AD0"], ["cmp~[yte ptr [slash+0],0", "lea~rdi,[slash+0]", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 50, 0, 1, 5, 2, 2, 16, 4, 0.018796992481203006, ["or      esi, 1C0h; mode", "mov     rdi, dir; file", "call    _chmod", "test    eax, eax", "jnz     loc_3F5E"], ["or~esi,0", "mov~rdi,dir", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 3, 18, 4, 4, 7, 2, 0.0042293233082706765, ["mov     rsi, [rbp+src]; arg", "mov     edi, 4; s", "mov     dword ptr [rbp+stat_buf], r8d", "call    quotearg_style", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     slash, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+stat_buf]", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     edi, edi; status", "mov     esi, r8d; errnum", "call    _error", "xor     eax, eax", "jmp     loc_3E71"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~slash,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~edi,edi", "mov~esi,r8d", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [0, 0, 50, 0, 1, 8, 2, 2, 16, 7, 0.019110275689223057, ["call    cached_umask", "mov     esi, [rbp+stats.st_mode]", "not     eax", "and     r14d, eax", "mov     eax, esi", "not     eax", "test    eax, r14d", "jnz     loc_3D35"], ["call~FOO", "mov~esi,[rbp+0]", "not~eax", "and~r14d,eax", "mov~eax,esi", "not~eax", "test~eax,r14d", "jnz~FOO"]], [1, 0, 50, 0, 0, 3, 0, 1, 16, 5, 0.19987468671679198, ["mov     rax, [rbp+new_dst]", "cmp     byte ptr [rax], 0", "jnz     loc_3B64"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 50, 0, 0, 1, 0, 0, 11, 6, 0.02474937343358396, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [31, 55, 75, 1, 58, 88, 1, 332, 0.07984, 5, 8], "succs": [[3], [0, 1], [40, 11], [9, 2], [18], [42, 4], [27, 12], [8, 6], [6], [14], [9], [32, 40], [48, 29], [], [57, 13], [44], [10, 15], [26], [17, 7], [53], [33, 19], [5, 31], [21, 46], [16, 34], [51, 46], [24, 51], [14], [26], [26], [36, 54], [25, 51], [18], [41, 46], [32, 22], [43, 35], [38], [49, 55], [36], [43, 38], [33, 53], [20, 39], [45, 47], [18], [3], [14], [44], [14], [30], [52, 55], [48], [30], [56, 3], [28, 55], [14], [49, 37], [50, 51], [1], []], "fname": "make_dir_parents_private", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 21, 0, 1, 13, 1, 2, 0, 0, 0.04112554112554113, ["mov     rax, [p+50h]", "mov     rdx, [p+48h]", "mov     rsi, r15; timespec", "mov     rdi, dst_name; file", "mov     [rbp+timespec.tv_sec], rdx", "mov     [rbp+timespec.tv_nsec], rax", "mov     rdx, [p+58h]", "mov     rax, [p+60h]", "mov     [rbp+timespec.tv_sec+10h], rdx", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_4000"], ["mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~rsi,r15", "mov~rdi,dst_name", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rdx,[p+0]", "mov~rax,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 21, 0, 0, 4, 0, 1, 2, 4, 0.2683982683982684, ["cmp     byte ptr [x+1Fh], 0", "mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 0", "jz      short loc_4000"], ["cmp~[yte ptr [x+0],0", "mov~rax,[p+0]", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.24891774891774893, ["cmp     byte ptr [x+1Dh], 0", "jnz     loc_40D0"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 7, 4, 0.011904761904761904, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 21, 0, 1, 7, 1, 2, 6, 5, 0.05411255411255411, ["mov     edx, [p+20h]; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "movzx   r14d, byte ptr [x+1Eh]", "test    r14b, r14b", "jz      loc_4019"], ["mov~edx,[p+0]", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 5, 4, 0.10064935064935066, ["mov     rdi, x; x", "call    chown_failure_ok", "test    al, al", "mov     r14d, eax", "jz      loc_41C7"], ["mov~rdi,x", "call~FOO", "test~al,al", "mov~r14d,eax", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 4, 4, 0.15043290043290045, ["movzx   r14d, byte ptr [x+1Eh]", "test    r14b, r14b", "jnz     loc_4120"], ["movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 21, 0, 1, 6, 1, 2, 4, 5, 0.11471861471861472, ["mov     edx, [p+20h]; group", "mov     esi, [p+1Ch]; owner", "mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jz      loc_400B"], ["mov~edx,[p+0]", "mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 3, 11, 3, 4, 7, 2, 0.025974025974025976, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_41A6"], ["xor~edi,edi", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 6, 3, 0.031385281385281384, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dst_name, rax", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "jmp     short loc_4177"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dst_name,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 1, 6, 0, 1, 7, 3, 0.011904761904761904, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToPreser_0; \"failed to preserve permissions for %s\"", "mov     dst_name, rax", "mov     edx, 5; category"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,rax", "mov~edx,0"]], [1, 0, 21, 0, 0, 2, 0, 1, 5, 4, 0.13095238095238096, ["cmp     byte ptr [p+90h], 0", "jnz     loc_4148"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r14d", "jnz     short loc_41E5"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r14d", "jnz~FOO"]], [2, 0, 3, 0, 4, 18, 4, 5, 4, 2, 0.01948051948051948, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "xor     r14d, r14d", "call    quotearg_style", "lea     rsi, aFailedToPreser; \"failed to preserve times for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_41A6"], ["mov~rsi,dst_name", "mov~edi,0", "xor~r14d,r14d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 2, 0.032467532467532464, ["xor     r14d, r14d", "jmp     short loc_41A6"], ["xor~r14d,r14d", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.025974025974025976, ["mov     r14d, 1"], ["mov~r14d,0"]], [1, 0, 21, 0, 1, 8, 1, 2, 5, 3, 0.11904761904761904, ["mov     r8d, [p+18h]; mode", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, dst_name; dst_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jz      loc_4026"], ["mov~r8d,[p+0]", "mov~rdi,[rbp+0]", "mov~ecx,0", "mov~rdx,dst_name", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 5, 1, 1, 6, 3, 0.21861471861471862, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 2Fh ; '/'", "mov     p, [p+0A0h]", "test    p, p", "jz      loc_41A0"], ["mov~rax,[p+0]", "mov~<TAG>,0", "mov~p,[p+0]", "test~p,p", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 6, 4, 0.03463203463203463, ["mov     esi, [p+18h]; mode", "mov     rdi, dst_name; file", "call    _chmod", "test    eax, eax", "jz      loc_4026"], ["mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 22, 4, 2, 29, 4, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, const_dst_name", "mov     rbx, attr_list", "mov     r13, x", "sub     rsp, 48h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+70h+src_name+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     __old, rax", "add     dst_name, src_offset", "test    attr_list, attr_list", "mov     [rbp+src_name], rax", "jz      loc_41A0"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,const_dst_name", "mov~rbx,attr_list", "mov~r13,x", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~__old,rax", "add~dst_name,src_offset", "test~attr_list,attr_list", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.0367965367965368, ["lea     r15, [rbp+timespec]", "jmp     short loc_4042"], ["lea~r15,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [18, 21, 36, 1, 23, 34, 1, 150, 0.0767, 4, 4], "succs": [[2, 13], [0, 2], [6, 7], [16], [11, 3], [9, 4], [16, 11], [5, 6], [12], [8], [8], [17, 18], [20, 22], [12], [12], [12], [17, 14], [1, 15], [17, 10], [21, 15], [], [1], []], "fname": "re_protect", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 15, 1, 0, 13, 2, 1, 0, 0, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 98h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_4250"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [2, 0, 5, 0, 3, 12, 3, 4, 0, 2, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_46C9"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 6, 2, 1, 0, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_473B"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 0, -1, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 1, 0.01904761904761905, ["lea     r12, command_name; \"cp\""], ["lea~r12,<TAG>"]], [1, 0, 6, 0, 1, 6, 1, 2, 0, 2, 0.0380952380952381, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_47C9"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 0, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_465F"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 0, 4, 0.0, ["mov     ecx, 3", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_4640"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [21, 0, 13, 0, 42, 209, 22, 42, 0, 5, 0.05714285714285715, ["lea     rsi, aUsageSOptionTS; \"Usage: %s [OPTION]... [-T] SOURCE DEST\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopySourceToDe; \"Copy SOURCE to DEST, or multiple SOURCE\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aMandatoryArgum; \"\\nMandatory arguments to long options a\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAArchiveSameAs; \"  -a, --archive                same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFForceIfAnExis; \"  -f, --force                  if an ex\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aLLinkHardLinkF; \"  -l, --link                   hard lin\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNNoClobberDoNo; \"  -n, --no-clobber             do not o\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aPSameAsPreserv; \"  -p                           same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoPreserveAttr; \"      --no-preserve=ATTR_LIST  don't pr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRRRecursiveCop; \"  -R, -r, --recursive          copy dir\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSparseWhenCont; \"      --sparse=WHEN            control \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSSymbolicLinkM; \"  -s, --symbolic-link          make sym\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUUpdateCopyOnl; \"  -u, --update                 copy onl\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aZSetSelinuxSec; \"  -Z                           set SELi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aByDefaultSpars; \"\\nBy default, sparse SOURCE files are d\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aWhenReflinkAlw; \"\\nWhen --reflink[=always] is specified,\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheBackupSuffi; \"\\nThe backup suffix is '~', unless set \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoneOffNeverMa; \"  none, off       never make backups (e\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsASpecialCase; \"\\nAs a special case, cp makes a backup \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "lea     rbx, command_name; \"cp\"", "call    _fputs_unlocked", "lea     rcx, asc_189D7; \"[\"", "lea     rax, aTestInvocation; \"test invocation\"", "lea     rdx, [rsp+0B8h+var_A8]", "mov     [rsp+0B8h+var_B0], rcx", "lea     rcx, domainname; \"coreutils\"", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rcx", "movaps  [rsp+0B8h+var_A8], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha224sum; \"sha224sum\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha256sum; \"sha256sum\"", "movaps  [rsp+0B8h+var_98], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_220960", "lea     rax, aSha384sum; \"sha384sum\"", "movaps  [rsp+0B8h+var_88], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_220960", "lea     rax, aSha512sum; \"sha512sum\"", "movaps  [rsp+0B8h+var_78], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_220960", "movaps  [rsp+0B8h+var_68], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "movhps  xmm0, cs:off_220960", "movaps  [rsp+0B8h+var_58], xmm0", "pxor    xmm0, xmm0", "movaps  [rsp+0B8h+var_48], xmm0", "nop     word ptr [rax+rax+00000000h]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rax,<TAG>", "lea~rdx,[rsp+0]", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rcx", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movaps~[rsp+0],xmm0", "nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]], [2, 0, 1, 0, 2, 11, 2, 3, 0, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4249"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 0, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_4786"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 0, 1, 0.028571428571428574, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_47D0"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 0, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aSSUnbackup+14h; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]], [1, 0, 3, 0, 2, 9, 1, 3, 0, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_46C9"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 0, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"cp\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_470E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [61, 45, 72, 9, 16, 23, 4, 334, 0.0506, 45, 2], "succs": [[8, 3], [12, 13], [1, 11], [9], [14], [4, 15], [2, 7], [2, 6], [6], [], [9], [5, 15], [13, 14], [10], [13], [10]], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 37, 0, 0, 2, 0, 1, 0, 0, 0.02274659863945578, ["cmp     r12d, 1", "jz      loc_4892"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 2, -1, 0.03082482993197279, ["cmp     [rbp+target_directory], 0", "jz      loc_4BBE"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 4, 2, 3, -1, 0.0027636054421768708, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 2, 0, 1, 7, 0, 2, 2, -1, 0.001913265306122449, ["mov     rsi, [rsi]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     file, rax", "lea     rsi, aMissingDestina; \"missing destination file operand after \"...", "jmp     short loc_4C6D"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~file,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 2, 0, 1, 6, 0, 1, 4, -1, 0.002551020408163265, ["mov     rsi, [rsi+10h]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aExtraOperandS; \"extra operand %s\"", "mov     file, rax", "mov     edx, 5; category"], ["mov~rsi,[rsi+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0"]], [3, 0, 34, 0, 3, 14, 3, 3, 6, -1, 0.008503401360544217, ["mov     rsi, [r13+0]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     file, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[r13+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 5, -1, 0.008078231292517007, ["cmp     r12d, 2", "jz      loc_4892"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 2, 6, -1, 0.0, ["mov     rdi, arg; file", "call    strip_trailing_slashes", "jmp     loc_4A7F"], ["mov~rdi,arg", "call~FOO", "jmp~FOO"]], [2, 0, 18, 0, 0, 4, 0, 1, 5, -1, 0.11139455782312925, ["cmp     cs:remove_trailing_slashes, 0", "mov     [rbp+unused], 0", "mov     r13, [rbx]", "jnz     loc_4B80"], ["cmp~<TAG>,0", "mov~[rbp+0],0", "mov~r13,<TAG>", "jnz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 6, -1, 0.10459183673469387, ["cmp     cs:parents_option, 0", "mov     rdi, arg; name", "jnz     loc_49B0"], ["cmp~<TAG>,0", "mov~rdi,arg", "jnz~FOO"]], [3, 0, 4, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rsi, dest; file", "mov     edi, 0FFFFFF9Ch; dir_fd", "mov     edx, r13d; backup_type", "call    find_backup_file_name", "mov     rsi, x", "lea     x, x_tmp_7353", "lea     rdi, x_tmp_7353", "mov     ecx, 14h", "mov     dest, rax", "rep movsd", "mov     cs:x_tmp_7353.backup_type, 0"], ["mov~rsi,dest", "mov~edi,0", "mov~edx,r13d", "call~FOO", "mov~rsi,x", "lea~x,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "mov~dest,rax", "movsd~<TAG>,<TAG>", "mov~<TAG>,0"]], [2, 0, 5, 0, 0, 4, 1, 1, 9, -1, 0.007227891156462584, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_4914"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.002551020408163265, ["mov     edx, 5", "lea     rsi, aMissingFileOpe; \"missing file operand\"", "jmp     short loc_4CE8"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 5, 1, 0, 2, 0, 1, 1, 1, 0.006590136054421768, ["sub     r12d, 1", "jnz     short loc_4CFF"], ["sub~r12d,0", "jnz~FOO"]], [0, 0, 14, 0, 1, 5, 0, 1, 4, -1, 0.010629251700680272, ["mov     n_files, [rbx+r12*8-8]; file", "lea     rdx, [rbp+new_dst]; new_dst", "lea     file, [rbp+sb]; st", "movzx   ecx, al; forcing", "call    target_directory_operand"], ["mov~n_files,[rbx+0]", "lea~rdx,[rbp+0]", "lea~file,[rbp+0]", "movzx~ecx,al", "call~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 3, -1, 0.00935374149659864, ["cmp     r12d, 2", "jg      loc_4C50"], ["cmp~r12d,0", "jg~FOO"]], [2, 0, 6, 0, 2, 9, 3, 2, 3, 2, 0.0031887755102040817, ["lea     rsi, aCannotCombineT; \"cannot combine --target-directory (-t) \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, 3, 0.005739795918367346, ["cmp     [rbp+target_directory], 0", "jnz     loc_4C8F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 18, 0, 1, 10, 2, 2, 8, -1, 0.047619047619047616, ["movzx   edx, [rbp+new_dst]; nonexistent_dst", "mov     r8, [rbp+var_110]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "mov     rsi, dst_name; dst_name", "mov     rdi, arg; src_name", "call    copy", "and     r15d, eax", "cmp     cs:parents_option, 0", "jz      loc_4A4B"], ["movzx~edx,[rbp+0]", "mov~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "mov~rsi,dst_name", "mov~rdi,arg", "call~FOO", "and~r15d,eax", "cmp~<TAG>,0", "jz~FOO"]], [5, 0, 18, 3, 5, 30, 3, 6, 7, -1, 0.07015306122448979, ["call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r12, rax", "call    strip_trailing_slashes", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_no_trailing_slash; base", "call    file_name_concat", "cmp     byte ptr [x+2Eh], 0", "mov     rsi, [rbp+unused]", "mov     arg_no_trailing_slash, rax", "lea     dst_name, verbose_fmt_string; \"%s -> %s\\n\"", "mov     edx, 0", "lea     rcx, [rbp+attr_list]; attr_list", "lea     r8, [rbp+new_dst]; new_dst", "mov     r9, x; x", "mov     rdi, dst_name; const_dir", "cmovnz  rdx, rax; verbose_fmt_string", "sub     rsi, dst_name; src_offset", "call    make_dir_parents_private", "test    al, al", "jnz     loc_4AF7"], ["call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,arg_no_trailing_slash", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rsi,[rbp+0]", "mov~arg_no_trailing_slash,rax", "lea~dst_name,<TAG>", "mov~edx,0", "lea~rcx,[rbp+0]", "lea~r8,[rbp+0]", "mov~r9,x", "mov~rdi,dst_name", "cmovnz~rdx,rax", "sub~rsi,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 8, -1, 0.0031887755102040817, ["mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_base; base", "xor     edx, edx; base_in_result", "call    file_name_concat", "mov     arg_base, rax", "jmp     loc_4AF7"], ["mov~rdi,[rbp+0]", "mov~rsi,arg_base", "xor~edx,edx", "call~FOO", "mov~arg_base,rax", "jmp~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 8, -1, 0.0031887755102040817, ["mov     rdi, [rbp+target_directory]; string", "call    xstrdup", "mov     arg_base, rax"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~arg_base,rax"]], [1, 0, 13, 0, 0, 4, 0, 1, 4, -1, 0.06356292517006802, ["cmp     cs:parents_option, 0", "mov     r12, [file]", "mov     file, [file+8]", "jnz     loc_4CDC"], ["cmp~<TAG>,0", "mov~r12,<TAG>", "mov~file,[file+0]", "jnz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 6, -1, 0.011904761904761904, ["jmp     loc_4892"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 9, 0, 1, 4, -1, 0.0663265306122449, ["lea     eax, [r12-1]", "mov     r15d, 1", "lea     rax, [file+rax*8+8]", "mov     [rbp+var_100], rax", "lea     rax, [rbp+copy_into_self]", "mov     [rbp+var_110], rax", "lea     rax, [rbp+unused]", "mov     [rbp+base_in_result], rax", "jmp     loc_4A64"], ["lea~eax,[r12-1]+0]", "mov~r15d,0", "lea~rax,[file+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 19, 0, 2, 5, 0, 3, 4, -1, 0.0, ["mov     rdi, x; x", "call    dest_info_init", "mov     rdi, x; x", "call    src_info_init", "jmp     loc_496E"], ["mov~rdi,x", "call~FOO", "mov~rdi,x", "call~FOO", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 3, -1, 0.057823129251700675, ["cmp     r12d, 1", "jnz     loc_4BA9"], ["cmp~r12d,0", "jnz~FOO"]], [5, 0, 18, 2, 4, 23, 3, 5, 7, -1, 0.02040816326530612, ["call    last_component", "mov     rdi, rax; s", "mov     r12, rax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     __old, rax", "call    strip_trailing_slashes", "lea     rdi, asc_18AB8; \"..\"", "mov     ecx, 3", "mov     rsi, arg_base", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_4B90"], ["call~FOO", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~__old,rax", "call~FOO", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,arg_base", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.04974489795918367, ["cmp     byte ptr [x+16h], 0", "jz      short loc_4914"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 1, 6, -1, 0.02423469387755102, ["lea     r8, [rbp+unused]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "xor     edx, edx; nonexistent_dst", "mov     rsi, new_dest; dst_name", "mov     rdi, source; src_name", "call    copy", "mov     r15d, eax"], ["lea~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "xor~edx,edx", "mov~rsi,new_dest", "mov~rdi,source", "call~FOO", "mov~r15d,eax"]], [0, 0, 8, 0, 0, 3, 1, 1, 6, -1, 0.023809523809523808, ["mov     r13d, [x]", "test    r13d, r13d", "jz      short loc_4914"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 7, -1, 0.01913265306122449, ["mov     rsi, dest; s2", "mov     rdi, source; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_4914"], ["mov~rsi,dest", "mov~rdi,source", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, -1, 0.013605442176870748, ["cmp     [rbp+new_dst], 0", "jnz     short loc_4914"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 1, 4, 0.017857142857142856, ["test    cl, cl", "mov     r14, x", "jz      loc_4956"], ["test~cl,cl", "mov~r14,x", "jz~FOO"]], [3, 0, 49, 1, 0, 22, 3, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "movsxd  r12, edi", "push    rbx", "mov     rbx, file", "sub     rsp, 0E8h", "mov     [rbp+target_directory], target_directory_0", "mov     [rbp+new_dst], 0", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "test    dword ptr [x+14h], 0FFFF00h", "setnz   al", "test    target_directory_0, target_directory_0", "setz    dl", "movzx   edx, dl", "cmp     edx, r12d", "jge     loc_4CB3"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "movsxd~r12,edi", "push~rbx", "mov~rbx,file", "sub~rsp,0", "mov~[rbp+0],target_directory_0", "mov~[rbp+0],0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "test~[word ptr [x+0],0", "setnz~al", "test~target_directory_0,target_directory_0", "setz~dl", "movzx~edx,dl", "cmp~edx,r12d", "jge~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 2, 8, 4, 3, 3, -1, 0.005314625850340136, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4C85"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 1, 0, 8, -1, 0.02933673469387755, ["movzx   eax, cs:parents_option", "xor     r15d, r15d"], ["movzx~eax,<TAG>", "xor~r15d,r15d"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, -1, 0.03231292517006803, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_4CD7"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [1, 0, 18, 1, 1, 5, 0, 2, 9, -1, 0.06377551020408163, ["mov     rdi, dst_name; ptr", "add     rbx, 8", "call    free", "cmp     [rbp+var_100], rbx", "jz      loc_4931"], ["mov~rdi,dst_name", "add~rbx,0", "call~FOO", "cmp~[rbp+0],rbx", "jz~FOO"]], [1, 0, 33, 1, 0, 6, 1, 1, 5, -1, 0.03954081632653061, ["sub     r12d, 1", "movsxd  rax, r12d", "mov     rax, [file+rax*8]", "test    rax, rax", "mov     [rbp+target_directory], rax", "jnz     loc_4964"], ["sub~r12d,0", "movsxd~rax,r12d", "mov~rax,<TAG>", "test~rax,rax", "mov~[rbp+0],rax", "jnz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 9, -1, 0.03996598639455782, ["test    al, al", "jnz     loc_4B6B"], ["test~al,al", "jnz~FOO"]], [0, 0, 18, 1, 1, 9, 1, 2, 9, -1, 0.006802721088435374, ["mov     rsi, [rbp+unused]", "mov     rdx, [rbp+attr_list]; attr_list", "mov     rcx, x; x", "mov     rdi, dst_name; const_dst_name", "sub     rsi, dst_name; src_offset", "call    re_protect", "and     r15d, eax", "movzx   eax, cs:parents_option", "jmp     loc_4A43"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,x", "mov~rdi,dst_name", "sub~rsi,dst_name", "call~FOO", "and~r15d,eax", "movzx~eax,<TAG>", "jmp~FOO"]], [0, 0, 36, 0, 1, 9, 1, 2, 4, -1, 0.014455782312925169, ["movsxd  rdx, r12d", "movzx   ecx, al; forcing", "lea     r13, [rsi+rdx*8-8]", "lea     rdx, [rbp+new_dst]; new_dst", "lea     rsi, [rbp+sb]; st", "mov     n_files, [r13+0]; file", "call    target_directory_operand", "test    al, al", "jnz     short loc_4C30"], ["movsxd~rdx,r12d", "movzx~ecx,al", "lea~r13,[rsi+0]", "lea~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "mov~n_files,[r13+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     x", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~x", "pop~r15", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.012755102040816327, ["jmp     loc_4A4B"], ["jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.008290816326530613, ["lea     rsi, aWithParentsThe; \"with --parents, the destination must be\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [0, 0, 18, 0, 1, 3, 0, 1, 11, -1, 0.0, ["mov     rax, [p+0A0h]", "mov     [rbp+attr_list], rax", "call    free"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "call~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 10, -1, 0.026785714285714284, ["mov     rdi, [rbp+attr_list]; ptr", "test    rdi, rdi", "jnz     short loc_4B58"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jnz~FOO"]]], "func_feature": [36, 39, 72, 3, 50, 73, 1, 292, 0.02221, 12, 10], "succs": [[43, 22], [0, 26], [35], [2], [2], [40], [5, 22], [9], [9, 7], [27, 19], [29], [10, 29], [36], [3, 12], [22], [4, 14], [13], [16, 15], [42, 39], [18, 37], [18], [18], [28, 47], [22], [8], [24], [24, 25], [20, 21], [29, 30], [38], [29, 31], [32, 29], [11, 29], [1, 17], [33, 13], [], [35], [41], [44, 45], [8, 38], [26, 23], [49, 39], [41], [40, 6], [], [], [39], [36], [49], [48, 46]], "fname": "do_copy", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[4, 0, 0, 1, 3, 20, 2, 3, 0, 0, 0.0, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     src_name", "retn"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~src_name", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 1, -1, 0.16666666666666666, ["shr     ebx, 1Fh", "and     bl, bpl", "jnz     short loc_4D70"], ["shr~ebx,0", "and~bl,bpl", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     ebx, 1", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     src_name", "retn"], ["add~rsp,0", "mov~ebx,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~src_name", "retn"]], [4, 0, 4, 2, 1, 24, 2, 2, 0, 1, 0.0, ["push    r13", "push    r12", "movzx   r9d, dl; force", "push    rbp", "push    rbx", "mov     edx, 0FFFFFF9Ch; dstdir", "mov     r13, src_name", "mov     r12, dst_name", "mov     ebp, ecx", "sub     rsp, 10h", "test    r8b, r8b", "mov     verbose, dst_name; dstname", "setnz   r8b", "push    0FFFFFFFFFFFFFFFFh; linkat_errno", "mov     dst_name, src_name; srcname", "movzx   r8d, r8b", "mov     edi, edx; srcdir", "shl     r8d, 0Ah; flags", "call    force_linkat", "test    eax, eax", "mov     ebx, eax", "pop     rdx", "pop     rcx", "jg      short loc_4DB8"], ["push~r13", "push~r12", "movzx~r9d,dl", "push~rbp", "push~rbx", "mov~edx,0", "mov~r13,src_name", "mov~r12,dst_name", "mov~ebp,ecx", "sub~rsp,0", "test~r8b,r8b", "mov~verbose,dst_name", "setnz~r8b", "push~0", "mov~dst_name,src_name", "movzx~r8d,r8b", "mov~edi,edx", "shl~r8d,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "pop~rdx", "pop~rcx", "jg~FOO"]], [5, 0, 0, 1, 4, 29, 5, 4, 1, 0, 0.0, ["mov     rdx, src_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, dst_name; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     src_name, rax", "call    quotearg_n_style", "lea     rsi, aCannotCreateHa; \"cannot create hard link %s to %s\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, ebx; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     ebx, ebx", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     r13", "retn"], ["mov~rdx,src_name", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,dst_name", "mov~esi,0", "xor~edi,edi", "mov~src_name,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,ebx", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~ebx,ebx", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~r13", "retn"]]], "func_feature": [8, 10, 10, 0, 5, 4, 3, 84, 0.03333, 2, 5], "succs": [[], [0, 2], [], [1, 4], []], "fname": "create_hard_link", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 4, 0, 1, 6, 1, 2, 0, 0, 0.01818181818181818, ["lea     rsi, aSUnwritableSMo; \"%s: unwritable %s (mode %04lo, %s); try\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax", "jmp     short loc_4F3F"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 1, 1, 4, 4, 0.03636363636363636, ["test    dword ptr [x+14h], 0FFFF00h", "jz      short loc_4F70"], ["test~[word ptr [x+0],0", "jz~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.16363636363636364, ["call    yesno", "mov     rcx, [rsp+48h+var_30]", "xor     rcx, fs:28h", "jnz     loc_4F88"], ["call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 11, 1, 0, 14, 2, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     rbp, dst_name", "push    rbx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "mov     eax, [rdx]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_4E5C"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~rbp,dst_name", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [3, 1, 7, 0, 2, 14, 1, 3, 3, 4, 0.10909090909090909, ["mov     edi, [rbx]; mode", "lea     r12, [rsp+48h+perms]", "mov     rsi, r12; str", "call    strmode", "mov     ebx, [rbx]", "mov     rsi, dst_name; arg", "mov     edi, 4; s", "mov     [rsp+48h+perms+0Ah], 0", "call    quotearg_style", "and     ebx, 0FFFh", "cmp     byte ptr [x+18h], 0", "mov     dst_name, rax", "mov     r14, cs:program_name", "jnz     short loc_4F29"], ["mov~edi,<TAG>", "lea~r12,[rsp+0]", "mov~rsi,r12", "call~FOO", "mov~ebx,<TAG>", "mov~rsi,dst_name", "mov~edi,0", "mov~[rsp+0],0", "call~FOO", "and~ebx,<STR>", "cmp~[yte ptr [x+0],0", "mov~dst_name,rax", "mov~r14,<TAG>", "jnz~FOO"]], [1, 0, 9, 0, 1, 5, 1, 2, 2, 3, 0.09090909090909091, ["mov     esi, 2; type", "mov     rdi, dst_name; name", "call    _euidaccess", "test    eax, eax", "jz      loc_4E5C"], ["mov~esi,0", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 3, 2, 1, 13, 1, 2, 5, 2, 0.10909090909090909, ["sub     rsp, 8", "add     r12, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "push    r12", "mov     r9, rbx", "mov     r8, rbp", "mov     rcx, r14", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_4EA2"], ["sub~rsp,0", "add~r12,0", "mov~rdi,<TAG>", "push~r12", "mov~r9,rbx", "mov~r8,rbp", "mov~rcx,r14", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 0, 4, 0, 1, 5, 1, 1, 4, 3, 0.08181818181818182, ["lea     rsi, aSReplaceSOverr; \"%s: replace %s, overriding mode %04lo (\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rax"]], [3, 0, 3, 0, 3, 16, 2, 3, 1, 2, 0.08181818181818182, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSOverwriteS; \"%s: overwrite %s? \"", "mov     rbx, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 10, 0, 1, 5, 1, 2, 1, 3, 0.05454545454545454, ["mov     r13, x", "mov     rbx, rdx", "call    can_write_any_file", "test    al, al", "jz      short loc_4ED0"], ["mov~r13,x", "mov~rbx,rdx", "call~FOO", "test~al,al", "jz~FOO"]]], "func_feature": [12, 12, 20, 1, 12, 16, 2, 92, 0.06212, 6, 4], "succs": [[8], [0, 9], [], [2, 4], [], [10, 11], [1, 9], [10, 6], [3], [8], [3], [10, 7]], "fname": "overwrite_ok", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     ebx, 1"], ["mov~ebx,0"]], [1, 0, 4, 1, 1, 8, 1, 1, 2, -1, 0.09523809523809523, ["sub     file_end, size", "mov     rcx, size; len", "mov     esi, 3; mode", "mov     rdx, rax; offset", "mov     edi, r12d; fd", "call    _fallocate", "test    eax, eax", "jns     short loc_4FC1"], ["sub~file_end,size", "mov~rcx,size", "mov~esi,0", "mov~rdx,rax", "mov~edi,r12d", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 3, 0, 1, 9, 1, 2, 3, -1, 0.07142857142857142, ["call    ___errno_location", "mov     fd, rax", "mov     eax, [rax]", "cmp     eax, 26h ; '&'", "setz    bl", "cmp     eax, 5Fh ; '_'", "setz    al", "or      bl, al", "jnz     short loc_4FC1"], ["call~FOO", "mov~fd,rax", "mov~eax,<TAG>", "cmp~eax,0", "setz~bl", "cmp~eax,0", "setz~al", "or~bl,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, -1, 0.11904761904761904, ["test    r13b, r13b", "jnz     short loc_4FD8"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 1, 0, 3, 15, 3, 4, 4, -1, 0.011904761904761904, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorDeallocat; \"error deallocating %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     name, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4FC6"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 0, 1, 4, 24, 4, 4, 1, 0, 0.0, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     name, rax", "call    _dcgettext", "mov     size, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "xor     eax, eax", "xor     edi, edi; status", "xor     ebx, ebx", "call    _error", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     fd", "pop     r13", "retn"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~name,rax", "call~FOO", "mov~size,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "xor~eax,eax", "xor~edi,edi", "xor~ebx,ebx", "call~FOO", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~fd", "pop~r13", "retn"]], [2, 0, 7, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13d, edx", "push    rbp", "push    rbx", "mov     rbp, name", "mov     edx, 1; whence", "mov     name, size; offset", "mov     r12d, edi", "sub     rsp, 8", "mov     rbx, size", "call    _lseek", "test    file_end, file_end", "js      loc_5048"], ["push~r13", "push~r12", "mov~r13d,edx", "push~rbp", "push~rbx", "mov~rbp,name", "mov~edx,0", "mov~name,size", "mov~r12d,edi", "sub~rsp,0", "mov~rbx,size", "call~FOO", "test~file_end,file_end", "js~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [10, 11, 14, 0, 8, 10, 3, 80, 0.04762, 2, 4], "succs": [[7], [0, 2], [0, 4], [0, 1], [7], [], [3, 5], []], "fname": "create_hole", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[3, 0, 47, 1, 0, 22, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, [rsp+0A8h+src_name]", "mov     rbx, [rsp+0A8h+total_n_read]", "mov     r10, [rsp+0A8h+last_write_made_hole]", "mov     [rsp+0A8h+punch_holes], r9b", "mov     [rsp+0A8h+arg], rax", "mov     rax, [rsp+0A8h+dst_name]", "mov     byte ptr [r10], 0", "mov     [rsp+0A8h+var_68], rbx", "mov     [rsp+0A8h+var_48], r10", "mov     qword ptr [rbx], 0", "mov     [rsp+0A8h+name], rax", "mov     rax, [rsp+0A8h+max_n_read]", "test    max_n_read_0, max_n_read_0", "mov     [rsp+0A8h+var_80], max_n_read_0", "jz      loc_5493"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r10,[rsp+0]", "mov~[rsp+0],r9b", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],rbx", "mov~[rsp+0],r10", "mov~<TAG>,0", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "test~max_n_read_0,max_n_read_0", "mov~[rsp+0],max_n_read_0", "jz~FOO"]], [0, 0, 46, 0, 0, 7, 2, 1, 0, 9, 0.4042553191489362, ["cmp     n_read, csize", "mov     rbx, csize", "cmovbe  rbx, n_read", "test    csize, csize", "setnz   r12b", "and     r12b, [rsp+0A8h+var_8B]", "jz      loc_5318"], ["cmp~n_read,csize", "mov~rbx,csize", "cmovbe~rbx,n_read", "test~csize,csize", "setnz~r12b", "and~r12b,[rsp+0]", "jz~FOO"]], [0, 0, 46, 1, 0, 2, 0, 1, 0, 4, 0.3368794326241136, ["sub     rbp, csize", "jnz     loc_51F0"], ["sub~rbp,csize", "jnz~FOO"]], [1, 0, 46, 1, 0, 11, 0, 0, 0, 10, 0.11655874190564293, ["mov     rbp, rax", "mov     rax, [rsp+0A8h+var_68]", "mov     r14, [rsp+0A8h+buf]", "mov     r10, [rsp+0A8h+var_60]", "mov     ecx, r15d", "add     [rax], rbp", "cmp     [rsp+0A8h+hole_size], 0", "mov     r11, r14", "mov     make_hole_0, r10", "setnz   [rsp+0A8h+var_8B]", "nop"], ["mov~rbp,rax", "mov~rax,[rsp+0]", "mov~r14,[rsp+0]", "mov~r10,[rsp+0]", "mov~ecx,r15d", "add~<TAG>,rbp", "cmp~[rsp+0],0", "mov~r11,r14", "mov~make_hole_0,r10", "setnz~[rsp+0]", "nop"]], [0, 0, 46, 0, 0, 3, 1, 1, 0, 6, 0.0883441258094357, ["test    cl, cl", "mov     [rsp+0A8h+prev_hole], cl", "jnz     loc_533A"], ["test~cl,cl", "mov~[rsp+0],cl", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 0, 7, 0.06359851988899168, ["xor     r15d, r15d", "jmp     loc_5283"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 46, 0, 0, 1, 0, 0, 0, 7, 0.0006938020351526365, ["mov     r15d, 1"], ["mov~r15d,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [1, 0, 1, 1, 0, 12, 0, 1, 0, -1, 0.018501387604070305, ["movzx   edx, byte ptr [rsp+0A8h+var_3C]; punch_holes", "mov     rsi, [rsp+0A8h+name]; name", "mov     rcx, psize; size", "mov     edi, [rsp+0A8h+dest_fd]; fd", "add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     psize", "pop     r14", "pop     make_hole_0", "jmp     create_hole"], ["movzx~edx,[yte ptr [rsp+0]", "mov~rsi,[rsp+0]", "mov~rcx,psize", "mov~edi,[rsp+0]", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~psize", "pop~r14", "pop~make_hole_0", "jmp~FOO"]], [0, 0, 46, 0, 0, 4, 1, 1, 0, 10, 0.104995374653099, ["mov     eax, r12d", "mov     edx, ecx", "xor     r12d, r12d", "jmp     loc_5259"], ["mov~eax,r12d", "mov~edx,ecx", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 0, 11, 0.20906567992599445, ["cmp     byte ptr [rsi], 0", "jnz     loc_5440"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 0, 12, 0.2030527289546716, ["mov     rsi, cbuf", "mov     rdx, csize"], ["mov~rsi,cbuf", "mov~rdx,csize"]], [1, 0, 46, 1, 0, 4, 0, 0, 0, 6, 0.17252543940795562, ["mov     rax, 7FFFFFFFFFFFFFFFh", "sub     rax, csize", "cmp     rax, psize", "jb      short loc_5400"], ["mov~rax,0", "sub~rax,csize", "cmp~rax,psize", "jb~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 0, 7, 0.0849522047486895, ["test    csize, csize", "jnz     short loc_5380"], ["test~csize,csize", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 0, 7, 0.08572309589885908, ["mov     ecx, r12d", "nop     dword ptr [rax]"], ["mov~ecx,r12d", "nop~<TAG>"]], [1, 0, 46, 0, 0, 2, 1, 1, 0, 11, 0.020351526364477335, ["test    dl, 0Fh", "jnz     short loc_5212"], ["test~dl,0", "jnz~FOO"]], [0, 0, 46, 2, 0, 3, 0, 0, 0, 5, 0.15047795251310517, ["add     psize, csize", "add     cbuf, csize", "mov     r15, csize"], ["add~psize,csize", "add~cbuf,csize", "mov~r15,csize"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.005550416281221092, ["mov     r15d, 1", "jmp     loc_51A5"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.058279370952821465, ["test    r15b, r15b", "jz      loc_5493"], ["test~r15b,r15b", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 0, 8, 0.1868640148011101, ["cmp     cl, 1", "jz      short loc_5370"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 46, 1, 0, 5, 0, 1, 0, 5, 0.10638297872340426, ["mov     r11, pbuf_0", "mov     ecx, r12d", "add     pbuf_0, csize", "mov     r15, csize", "jmp     short loc_539B"], ["mov~r11,pbuf_0", "mov~ecx,r12d", "add~pbuf_0,csize", "mov~r15,csize", "jmp~FOO"]], [0, 0, 46, 0, 0, 5, 2, 1, 0, 5, 0.03191489361702128, ["xor     r15d, r15d", "test    r9b, r9b", "mov     ecx, r12d", "mov     r11, pbuf_0", "jnz     short loc_539B"], ["xor~r15d,r15d", "test~r9b,r9b", "mov~ecx,r12d", "mov~r11,pbuf_0", "jnz~FOO"]], [0, 0, 46, 1, 0, 4, 1, 1, 0, 5, 0.0, ["add     r14, csize", "mov     r15, csize", "xor     r13d, r13d", "jmp     short loc_539B"], ["add~r14,csize", "mov~r15,csize", "xor~r13d,r13d", "jmp~FOO"]], [2, 0, 1, 0, 3, 16, 4, 3, 0, -1, 0.001387604070305273, ["mov     rsi, [rsp+0A8h+arg]; arg", "mov     edi, 4; s", "mov     rbx, rax", "xor     r15d, r15d", "call    quotearg_style", "lea     rsi, aErrorReadingS; \"error reading %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~rbx,rax", "xor~r15d,r15d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 46, 0, 1, 3, 0, 2, 0, 4, 0.018501387604070305, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_5136"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 46, 2, 0, 3, 0, 1, 0, 10, 0.08973172987974098, ["add     rsi, 1; s2", "sub     rdx, 1; n", "jz      loc_53B0"], ["add~rsi,0", "sub~rdx,0", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 0, 3, 0.055658341042244826, ["mov     r12d, ecx", "jmp     loc_52CC"], ["mov~r12d,ecx", "jmp~FOO"]], [0, 0, 46, 0, 1, 9, 1, 2, 0, 5, 0.1322849213691027, ["movzx   edx, [rsp+0A8h+punch_holes]; punch_holes", "mov     rsi, [rsp+0A8h+name]; name", "mov     prev_hole_0, psize; size", "mov     edi, [rsp+0A8h+dest_fd]; fd", "mov     [rsp+0A8h+prev_hole], r9b", "call    create_hole", "test    al, al", "movzx   r9d, [rsp+0A8h+prev_hole]", "jnz     loc_52B7"], ["movzx~edx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~prev_hole_0,psize", "mov~edi,[rsp+0]", "mov~[rsp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[rsp+0]", "jnz~FOO"]], [1, 0, 46, 1, 0, 6, 2, 1, 0, 6, 0.1697502312673451, ["add     psize, csize", "xor     r9d, r9d", "test    cl, cl", "mov     r15d, 1", "mov     [rsp+0A8h+prev_hole], cl", "jz      loc_528F"], ["add~psize,csize", "xor~r9d,r9d", "test~cl,cl", "mov~r15d,0", "mov~[rsp+0],cl", "jz~FOO"]], [0, 0, 46, 0, 1, 9, 0, 2, 0, 5, 0.1322849213691027, ["mov     edi, [rsp+0A8h+dest_fd]; fd", "mov     rdx, psize; count", "mov     rsi, pbuf_0; buf", "mov     byte ptr [rsp+0A8h+pbuf], r9b", "call    full_write", "cmp     psize, rax", "movzx   r9d, byte ptr [rsp+0A8h+pbuf]", "movzx   ecx, [rsp+0A8h+prev_hole]", "jnz     loc_544D"], ["mov~edi,[rsp+0]", "mov~rdx,psize", "mov~rsi,pbuf_0", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "cmp~psize,rax", "movzx~r9d,[yte ptr [rsp+0]", "movzx~ecx,[rsp+0]", "jnz~FOO"]], [0, 0, 46, 0, 0, 11, 3, 0, 0, 4, 0.020351526364477335, ["test    hole_size_0, hole_size_0", "mov     [rsp+0A8h+hole_size], hole_size_0", "mov     [rsp+0A8h+var_3C], r9d", "cmovz   hole_size_0, buf_size_0", "mov     [rsp+0A8h+buf_size], buf_size_0", "mov     [rsp+0A8h+buf], buf_0", "mov     [rsp+0A8h+dest_fd], esi", "mov     [rsp+0A8h+src_fd], edi", "xor     r13d, r13d", "mov     [rsp+0A8h+var_60], r8", "xor     r15d, r15d"], ["test~hole_size_0,hole_size_0", "mov~[rsp+0],hole_size_0", "mov~[rsp+0],r9d", "cmovz~hole_size_0,buf_size_0", "mov~[rsp+0],buf_size_0", "mov~[rsp+0],buf_0", "mov~[rsp+0],esi", "mov~[rsp+0],edi", "xor~r13d,r13d", "mov~[rsp+0],r8", "xor~r15d,r15d"]], [0, 0, 46, 0, 0, 2, 1, 1, 0, 7, 0.0509559050262103, ["test    r9b, r9b", "jz      loc_5322"], ["test~r9b,r9b", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 0, 7, 0.004625346901017576, ["mov     r12d, ecx", "jmp     short loc_5322"], ["mov~r12d,ecx", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 0, 7, 0.0988282454517422, ["cmp     n_read, r15", "ja      short loc_5370"], ["cmp~n_read,r15", "ja~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, -1, 0.0, ["add     rsp, 78h", "mov     eax, r15d", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,r15d", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.0021584952204748687, ["mov     r15d, eax", "jmp     loc_51A5"], ["mov~r15d,eax", "jmp~FOO"]], [2, 0, 1, 0, 3, 16, 5, 4, 0, -1, 0.007246376811594204, ["mov     rsi, [rsp+0A8h+arg]; arg", "mov     edi, 4; s", "xor     r15d, r15d", "call    quotearg_style", "lea     rsi, aOverflowReadin; \"overflow reading %s\"", "mov     csize, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_51A5"], ["mov~rsi,[rsp+0]", "mov~edi,0", "xor~r15d,r15d", "call~FOO", "lea~rsi,<TAG>", "mov~csize,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 4, 18, 3, 5, 0, -1, 0.0021584952204748687, ["mov     rsi, [rsp+0A8h+name]; arg", "mov     edi, 4; s", "mov     r15d, ecx", "call    quotearg_style", "lea     rsi, aErrorWritingS; \"error writing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     n_read, rax", "call    _dcgettext", "mov     csize, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_51A5"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~r15d,ecx", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~n_read,rax", "call~FOO", "mov~csize,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 46, 0, 0, 3, 1, 1, 0, 4, 0.24822695035460998, ["test    r15d, r15d", "mov     psize, csize", "jz      loc_53D0"], ["test~r15d,r15d", "mov~psize,csize", "jz~FOO"]], [0, 0, 46, 0, 0, 1, 0, 1, 0, 2, 0.12257169287696577, ["jz      loc_52E7"], ["jz~FOO"]], [0, 0, 46, 0, 1, 10, 1, 1, 0, 3, 0.15541165587419056, ["mov     rax, [rsp+0A8h+buf_size]", "mov     rdx, [rsp+0A8h+var_80]", "mov     rsi, [rsp+0A8h+buf]; buf", "mov     edi, [rsp+0A8h+src_fd]; fd", "cmp     rax, rdx", "cmovbe  rdx, rax; nbytes", "call    _read", "test    rax, rax", "mov     [rsp+0A8h+var_78], rax", "jns     short loc_51C0"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "cmp~rax,rdx", "cmovbe~rdx,rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jns~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 0, 8, 0.16366019118100525, ["test    r9b, r9b", "jz      short loc_537A"], ["test~r9b,r9b", "jz~FOO"]], [0, 0, 46, 0, 0, 5, 2, 1, 0, 9, 0.1498612395929695, ["test    psize, psize", "setnz   r9b", "and     r9d, edx", "cmp     n_read, r15", "ja      loc_53C0"], ["test~psize,psize", "setnz~r9b", "and~r9d,edx", "cmp~n_read,r15", "ja~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 0, 8, 0.057816836262719704, ["test    al, al", "jz      loc_53C0"], ["test~al,al", "jz~FOO"]], [1, 0, 46, 0, 0, 5, 3, 0, 0, 9, 0.05504162812210916, ["mov     r9d, ecx", "xor     r9d, 1", "test    psize, psize", "setnz   al", "and     r9d, eax"], ["mov~r9d,ecx", "xor~r9d,0", "test~psize,psize", "setnz~al", "and~r9d,eax"]], [0, 0, 46, 0, 0, 2, 1, 1, 0, 3, 0.1275053962380512, ["test    csize, csize", "jnz     loc_53E0"], ["test~csize,csize", "jnz~FOO"]], [0, 0, 46, 0, 1, 12, 3, 1, 0, 10, 0.020814061054579093, ["mov     rdi, cbuf; s1", "mov     [rsp+0A8h+pbuf], pbuf_0", "mov     [rsp+0A8h+prev_hole], cl", "call    _memcmp", "movzx   ecx, [rsp+0A8h+prev_hole]", "test    eax, eax", "mov     r11, [rsp+0A8h+pbuf]", "setz    r12b", "mov     edx, r12d", "xor     edx, ecx", "test    eax, eax", "setnz   al"], ["mov~rdi,cbuf", "mov~[rsp+0],pbuf_0", "mov~[rsp+0],cl", "call~FOO", "movzx~ecx,[rsp+0]", "test~eax,eax", "mov~r11,[rsp+0]", "setz~r12b", "mov~edx,r12d", "xor~edx,ecx", "test~eax,eax", "setnz~al"]], [0, 0, 46, 1, 0, 6, 0, 1, 0, 2, 0.15772432932469935, ["mov     rdi, [rsp+0A8h+var_78]", "sub     [rsp+0A8h+var_80], rdi", "mov     r15d, r12d", "mov     rax, [rsp+0A8h+var_48]", "mov     [rax], r12b", "jnz     loc_5136"], ["mov~rdi,[rsp+0]", "sub~[rsp+0],rdi", "mov~r15d,r12d", "mov~rax,[rsp+0]", "mov~<TAG>,r12b", "jnz~FOO"]]], "func_feature": [15, 44, 50, 6, 48, 72, 2, 259, 0.09362, 3, 14], "succs": [[17, 30], [19, 11], [1, 26], [1], [27, 29], [4], [4], [], [7], [42], [9, 25], [10], [16, 36], [32, 12], [12], [10, 46], [2], [34], [8, 17], [33, 13], [2], [2, 22], [2], [34], [40, 23], [44, 15], [47], [35, 38], [27, 29], [37, 38], [40], [28, 6], [28], [28, 13], [], [34], [34], [34], [20, 45], [18, 3], [24, 39], [5, 14], [41, 43], [41, 31], [41], [21, 47], [42], [40, 18]], "fname": "sparse_copy", "n_num": 48}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 8, 0, 1, 4, 1, 2, 0, 0, 0.0695, ["mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jnz     short loc_55C0"], ["mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 1, -1, 0.14400000000000002, ["cmp     ebx, 0FFFFFFFFh", "mov     edx, r12d; group", "mov     esi, r13d; owner", "jz      short loc_5578"], ["cmp~ebx,0", "mov~edx,r12d", "mov~esi,r13d", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 6, -1, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     rbx", "pop     x", "pop     gid", "pop     r13", "pop     dst_name", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~x", "pop~gid", "pop~r13", "pop~dst_name", "pop~r15", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.03333333333333333, ["cmp     byte ptr [x+1Ah], 0", "jnz     loc_552A"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, -1, 0.0695, ["mov     edi, ebx; fd", "call    _fchown", "test    eax, eax", "jz      short loc_5584"], ["mov~edi,ebx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, -1, 0.023333333333333334, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     edi, ebx; fd", "call    _fchown", "mov     [r13+0], r15d", "jmp     loc_55EC"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebx", "call~FOO", "mov~[r13+0],r15d", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, -1, 0.05950000000000001, ["call    ___errno_location", "mov     r15d, [rax]", "mov     uid, rax", "cmp     r15d, 1", "jz      loc_5680"], ["call~FOO", "mov~r15d,<TAG>", "mov~uid,rax", "cmp~r15d,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.016166666666666666, ["cmp     r15d, 16h", "jz      loc_5680"], ["cmp~r15d,0", "jz~FOO"]], [2, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     dest_desc", "pop     x", "pop     gid", "pop     uid", "pop     dst_name", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~dest_desc", "pop~x", "pop~gid", "pop~uid", "pop~dst_name", "pop~r15", "retn"]], [0, 0, 21, 0, 0, 2, 0, 0, 2, 5, 0.024333333333333335, ["mov     esi, [dst_sb+18h]", "mov     edx, [src_sb+18h]"], ["mov~esi,[dst_sb+0]", "mov~edx,[src_sb+0]"]], [1, 0, 24, 0, 0, 3, 1, 1, 1, 6, 0.016666666666666666, ["mov     rax, 0FF0000000000FFh", "test    [x+18h], rax", "jz      loc_55A0"], ["mov~rax,0", "test~[x+0],rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, 0, 0.003944444444444445, ["jmp     loc_5560"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 1, 0.027888888888888887, ["cmp     byte ptr [x+1Bh], 0", "jnz     short loc_563E"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 21, 0, 0, 3, 0, 1, 3, 5, 0.011666666666666667, ["mov     esi, [dst_sb+18h]", "mov     edx, [x+10h]", "jmp     loc_54DE"], ["mov~esi,[dst_sb+0]", "mov~edx,[x+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, 6, 0.025666666666666667, ["cmp     byte ptr [x+2Bh], 0", "jz      loc_54F5"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 5, 2, 0.05433333333333334, ["call    ___errno_location", "mov     dest_desc, rax", "mov     eax, [rax]", "cmp     eax, 1", "jz      short loc_56A0"], ["call~FOO", "mov~dest_desc,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 19, 0, 1, 7, 3, 2, 4, 3, 0.05600000000000001, ["and     edx, esi", "mov     x, dst_name; name", "mov     esi, ebx; desc", "and     edx, 1C0h; mode", "call    qset_acl", "test    eax, eax", "jz      loc_54F5"], ["and~edx,esi", "mov~x,dst_name", "mov~esi,ebx", "and~edx,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.009777777777777776, ["cmp     eax, 16h", "jz      short loc_56A0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 25, 1, 0, 14, 1, 1, 0, 7, 0.0, ["push    r15", "push    r14", "mov     r14, dst_name", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, x", "mov     ebx, edx", "sub     rsp, 8", "test    r8b, r8b", "mov     r13d, [src_sb+1Ch]", "mov     r12d, [src_sb+20h]", "jnz     short loc_54F5"], ["push~r15", "push~r14", "mov~r14,dst_name", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,x", "mov~ebx,edx", "sub~rsp,0", "test~r8b,r8b", "mov~r13d,[src_sb+0]", "mov~r12d,[src_sb+0]", "jnz~FOO"]], [1, 1, 20, 0, 0, 7, 3, 1, 3, 4, 0.09766666666666668, ["mov     eax, edx", "mov     ecx, esi", "not     eax", "and     ecx, 0FFFh", "or      ah, 0Eh", "test    eax, ecx", "jnz     loc_5610"], ["mov~eax,edx", "mov~ecx,esi", "not~eax", "and~ecx,<STR>", "or~ah,0", "test~eax,ecx", "jnz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, -1, 0.05950000000000001, ["call    ___errno_location", "mov     ebx, [rax]", "mov     uid, rax", "cmp     ebx, 1", "jz      short loc_55D8"], ["call~FOO", "mov~ebx,<TAG>", "mov~uid,rax", "cmp~ebx,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.016166666666666666, ["cmp     ebx, 16h", "jnz     loc_552A"], ["cmp~ebx,0", "jnz~FOO"]], [2, 0, 1, 0, 3, 14, 3, 3, 5, -1, 0.02066666666666667, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 0, 1, 5, 0, 1, 4, -1, 0.023333333333333334, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     [r13+0], ebx"], ["mov~edx,r12d", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "mov~[r13+0],ebx"]], [2, 0, 1, 0, 3, 15, 3, 4, 7, -1, 0.008722222222222223, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aClearingPermis; \"clearing permissions for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     gid, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_5560"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~gid,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 6, -1, 0.0, ["movzx   eax, byte ptr [x+24h]", "add     rsp, 8", "pop     rbx", "pop     x", "pop     r12", "neg     eax", "pop     r13", "pop     dst_name", "pop     r15", "retn"], ["movzx~eax,[yte ptr [x+0]", "add~rsp,0", "pop~rbx", "pop~x", "pop~r12", "neg~eax", "pop~r13", "pop~dst_name", "pop~r15", "retn"]]], "func_feature": [14, 17, 34, 0, 26, 39, 2, 144, 0.03353, 2, 4], "succs": [[8, 20], [0, 4], [], [2, 22], [8, 6], [3], [5, 7], [5, 22], [], [19], [9, 14], [25], [24, 11], [19], [1, 13], [17, 12], [1, 15], [24, 12], [1, 10], [16, 1], [21, 23], [22, 23], [25], [3], [25], []], "fname": "set_owner", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 8, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, x", "sub     rsp, 8", "cmp     byte ptr [x+25h], 0", "jz      short loc_5730"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,x", "sub~rsp,0", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.03571428571428571, ["mov     ebx, ecx", "and     bl, [r8+21h]", "jnz     short loc_5768"], ["mov~ebx,ecx", "and~bl,[r8+0]", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 1, 0, 0, -1, 0.0, ["add     rsp, 8", "xor     ebx, 1", "mov     eax, ebx", "pop     rbx", "pop     x", "pop     r12", "pop     src_name", "retn"], ["add~rsp,0", "xor~ebx,0", "mov~eax,ebx", "pop~rbx", "pop~x", "pop~r12", "pop~src_name", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.008928571428571428, ["mov     dword ptr [rax], 5Fh ; '_'", "jmp     short loc_5717"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 1, 0, 3, 16, 3, 3, 0, -1, 0.04464285714285714, ["mov     rsi, src_name; arg", "mov     edi, 4; s", "mov     dword ptr [r12], 5Fh ; '_'", "call    quotearg_style", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "movzx   ebx, byte ptr [x+26h]"], ["mov~rsi,src_name", "mov~edi,0", "mov~<TAG>,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbx", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "movzx~ebx,[yte ptr [x+0]"]], [2, 0, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     ebx, 1", "mov     eax, ebx", "pop     rbx", "pop     x", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~ebx,0", "mov~eax,ebx", "pop~rbx", "pop~x", "pop~r12", "pop~r13", "retn"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, -1, 0.03571428571428571, ["movzx   ebx, byte ptr [x+26h]", "test    bl, bl", "jnz     loc_56D5"], ["movzx~ebx,[yte ptr [x+0]", "test~bl,bl", "jnz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 0, -1, 0.07142857142857142, ["mov     r13, src_name", "call    ___errno_location", "cmp     byte ptr [x+23h], 0", "mov     r12, rax", "jnz     short loc_5750"], ["mov~r13,src_name", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~r12,rax", "jnz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     x", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~x", "pop~r12", "pop~r13", "retn"]]], "func_feature": [5, 6, 10, 0, 9, 10, 3, 62, 0.02183, 1, 4], "succs": [[1, 7], [8, 5], [], [2], [2], [], [3, 4], [4, 6], []], "fname": "set_process_security_ctx", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[3, 0, 0, 0, 3, 21, 5, 3, 0, 0, 0.0, ["mov     rdx, dst_name; arg", "mov     dword ptr [rbx], 5Fh ; '_'", "mov     esi, 4; s", "xor     edi, edi; n", "call    quotearg_n_style", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     x, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "pop     rbx", "xor     eax, eax", "pop     rbp", "pop     dst_name", "retn"], ["mov~rdx,dst_name", "mov~<TAG>,0", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~x,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "pop~rbx", "xor~eax,eax", "pop~rbp", "pop~dst_name", "retn"]], [1, 0, 3, 0, 1, 9, 0, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rbp, x", "push    rbx", "mov     r12, dst_name", "call    ___errno_location", "cmp     byte ptr [x+23h], 0", "mov     rbx, rax", "jz      short loc_579E"], ["push~r12", "push~rbp", "mov~rbp,x", "push~rbx", "mov~r12,dst_name", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rbx,rax", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0.16666666666666666, ["cmp     byte ptr [x+26h], 0", "jz      short loc_57E8"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 0, 0, 0, 6, 1, 0, 2, 0, 0.0, ["mov     dword ptr [rax], 5Fh ; '_'", "xor     eax, eax", "pop     rbx", "pop     x", "pop     dst_name", "retn"], ["mov~<TAG>,0", "xor~eax,eax", "pop~rbx", "pop~x", "pop~dst_name", "retn"]]], "func_feature": [4, 6, 6, 0, 4, 4, 1, 38, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "set_file_security_ctx", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+40h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "dest_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash_no_name; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+48h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "src_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 1, 16, 1, 1, 0, 0, 0.0, ["pxor    xmm0, xmm0", "push    rbx", "mov     rbx, x", "movups  xmmword ptr [x], xmm0", "movups  xmmword ptr [x+10h], xmm0", "movups  xmmword ptr [x+20h], xmm0", "movups  xmmword ptr [x+30h], xmm0", "movups  xmmword ptr [x+40h], xmm0", "call    _geteuid", "test    eax, eax", "mov     dword ptr [x+34h], 0FFFFFFFFh", "setz    al", "mov     [x+1Bh], al", "mov     [x+1Ah], al", "pop     x", "retn"], ["pxor~xmm0,xmm0", "push~rbx", "mov~rbx,x", "movups~<TAG>,xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "call~FOO", "test~eax,eax", "mov~[word ptr [x+0],0", "setz~al", "mov~[x+0],al", "mov~[x+0],al", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 16, 0.0, 0, 0], "succs": [[]], "fname": "cp_options_default", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 2, 0, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 1", "setz    al", "cmp     edx, 16h", "setz    dl", "or      al, dl", "jz      short loc_58C2"], ["push~rbx", "mov~rbx,x", "call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~al,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     x", "retn"], ["pop~x", "retn"]], [1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.0, ["movzx   eax, byte ptr [x+1Ah]", "xor     eax, 1"], ["movzx~eax,[yte ptr [x+0]", "xor~eax,0"]]], "func_feature": [1, 2, 2, 0, 3, 3, 2, 14, 0.0, 0, 0], "succs": [[1, 2], [], [1]], "fname": "chown_failure_ok", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 2, 9, 1, 2, 0, 0, 0.0, ["xor     edi, edi; mask", "call    _umask", "mov     ebx, eax", "mov     edi, eax; mask", "mov     cs:mask_7898, eax", "call    _umask", "mov     eax, ebx", "pop     rbx", "retn"], ["xor~edi,edi", "call~FOO", "mov~ebx,eax", "mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "mov~eax,ebx", "pop~rbx", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     ebx, cs:mask_7898", "cmp     ebx, 0FFFFFFFFh", "jz      short loc_58E0"], ["push~rbx", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "retn"], ["mov~eax,ebx", "pop~rbx", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 5, 16, 0.0, 1, 0], "succs": [[], [0, 2], []], "fname": "cached_umask", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[6, 0, 452, 2, 3, 19, 2, 4, 0, 0, 0.013453289152603323, ["mov     rdi, tmp_backup; s", "mov     byte ptr [rbp+earlier_file], r9b", "mov     r15d, 11h", "call    _strlen", "lea     dst_lstat_sb, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+3D0h+var_3C1]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, __old; ptr", "mov     [rbp+dst_backup], rax", "call    free", "mov     dword ptr [rbp+new_dst], 1", "mov     byte ptr [rbp+copied_as_regular], 1", "movzx   r9d, byte ptr [rbp+earlier_file]", "jmp     loc_5C98"], ["mov~rdi,tmp_backup", "mov~[yte ptr [rbp+0],r9b", "mov~r15d,0", "call~FOO", "lea~dst_lstat_sb,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,__old", "mov~[rbp+0],rax", "call~FOO", "mov~[word ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 456, 0, 1, 9, 1, 2, 21, 41, 0.014196056270495663, ["mov     rsi, [rbp+dst_name]; file", "mov     edx, r15d; backup_type", "mov     edi, 0FFFFFF9Ch; dir_fd", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    backup_file_rename", "test    rax, rax", "mov     r12, rax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "jz      loc_8272"], ["mov~rsi,[rbp+0]", "mov~edx,r15d", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~rax,rax", "mov~r12,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 17, 31, 0.0006079131454796091, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jnz     loc_6AE0"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 339, 0, 0, 2, 0, 1, 16, 31, 0.19907657136985948, ["cmp     byte ptr [x_0+21h], 0", "jz      short loc_6009"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 1, 92, 0, 0, 2, 1, 1, 35, -1, 0.0026457065063830876, ["test    byte ptr [rbp+timespec.tv_nsec+10h], 80h", "jz      loc_9F72"], ["test~[yte ptr [rbp+0],<STR>", "jz~FOO"]], [1, 0, 93, 0, 0, 2, 0, 1, 34, -1, 0.014790412667425841, ["cmp     byte ptr [rbx+27h], 0", "jz      short loc_939A"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [4, 0, 173, 1, 1, 19, 0, 2, 34, 15, 0.006234677306573739, ["mov     rdi, [rbp+dot_sb.st_blksize]", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     rsi, qword ptr [rbp+new_dst]; b", "sub     rax, r12", "mov     dword ptr [rbp+length], r9d", "mov     r8, rax", "mov     rax, 1FFFFFFFFFFE0000h", "lea     rdx, [rdi-20000h]", "mov     [rbp+restore_dst_mode_0], r8", "cmp     rdx, rax", "mov     eax, 20000h", "mov     rdx, r8; lcm_max", "cmova   rdi, rax; a", "call    buffer_lcm", "mov     r9d, dword ptr [rbp+length]", "mov     rcx, rax", "mov     r8, [rbp+restore_dst_mode_0]", "cmp     r9d, 8000h", "jz      loc_9C33"], ["mov~rdi,[rbp+0]", "mov~rax,0", "mov~rsi,[word ptr [rbp+0]", "sub~rax,r12", "mov~[word ptr [rbp+0],r9d", "mov~r8,rax", "mov~rax,0", "lea~rdx,[rdi-20000h]+0]", "mov~[rbp+0],r8", "cmp~rdx,rax", "mov~eax,0", "mov~rdx,r8", "cmova~rdi,rax", "call~FOO", "mov~r9d,[word ptr [rbp+0]", "mov~rcx,rax", "mov~r8,[rbp+0]", "cmp~r9d,0", "jz~FOO"]], [1, 0, 177, 0, 0, 2, 0, 1, 35, 14, 0.0014577072256042741, ["cmp     eax, 2", "jnz     loc_8F9F"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 176, 0, 0, 2, 1, 1, 36, 13, 0.0008433724623907254, ["test    byte ptr [rbp+parent], 1", "jz      loc_8F9F"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 181, 0, 0, 4, 1, 1, 33, 14, 0.054845610039414454, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_9C95"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 634, 0, 0, 2, 0, 1, 12, 42, 0.00018141070098379183, ["cmp     byte ptr [x_0+16h], 0", "jnz     loc_6B70"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 636, 0, 1, 5, 0, 2, 11, 42, 0.010110837122087796, ["call    ___errno_location", "mov     use_lstat, rax", "mov     eax, [rax]", "cmp     eax, 28h ; '('", "jz      loc_6808"], ["call~FOO", "mov~use_lstat,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 33, -1, 1.1772965845555811e-05, ["jmp     loc_6466"], ["jmp~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 32, -1, 0.0012629181543414416, ["mov     rdi, [rbp+dst_name]; name", "mov     esi, 0FFFFFFFFh; desc", "call    set_acl", "test    eax, eax", "jnz     loc_5F00"], ["mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 167, 2, 1, 12, 1, 2, 35, 12, 0.04555138863915931, ["mov     rax, qword ptr [rbp+new_dst]", "lea     rdi, [r12+rax]; n", "call    xmalloc", "lea     rcx, [rax+r12-1]", "xor     edx, edx", "mov     [rbp+restore_dst_mode_0], rax", "mov     rax, rcx", "div     r12", "sub     rcx, rdx", "cmp     dword ptr [rbp+parent], 0", "mov     [rbp+buf], rcx", "jnz     short loc_9CE5"], ["mov~rax,[word ptr [rbp+0]", "lea~rdi,<TAG>", "call~FOO", "lea~rcx,[rax+0]", "xor~edx,edx", "mov~[rbp+0],rax", "mov~rax,rcx", "div~,r12", "sub~rcx,rdx", "cmp~[word ptr [rbp+0],0", "mov~[rbp+0],rcx", "jnz~FOO"]], [1, 0, 180, 0, 0, 3, 0, 1, 34, 13, 0.04806224117312966, ["mov     eax, [x_0+0Ch]", "cmp     eax, 3", "jz      loc_9D24"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [3, 0, 68, 0, 3, 14, 2, 3, 28, -1, 0.00014555666863596276, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCreatedDirecto; \"created directory %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "nop     dword ptr [rax]"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "nop~<TAG>"]], [1, 0, 72, 0, 0, 2, 0, 1, 27, -1, 0.002628582192425916, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_86F6"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 336, 0, 0, 4, 1, 1, 17, 30, 0.20226811538362743, ["mov     r15d, [rbp+mode]", "and     r15d, 0F000h", "cmp     r15d, 4000h", "jz      loc_6CF0"], ["mov~r15d,[rbp+0]", "and~r15d,0", "cmp~r15d,<STR>", "jz~FOO"]], [4, 0, 337, 0, 3, 17, 3, 4, 17, 31, 0.0013904201620931218, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "mov     dword ptr [r13+0], 5Fh ; '_'", "call    quotearg_style", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r15, rax", "call    _dcgettext", "mov     esi, [r13+0]; errnum", "mov     dst_lstat_sb, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r15", "call    _error", "cmp     byte ptr [x_0+26h], 0", "jz      loc_6009"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[word ptr [r13+0],0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r15,rax", "call~FOO", "mov~esi,[r13+0]", "mov~dst_lstat_sb,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r15", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 337, 0, 1, 3, 0, 2, 18, 31, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     loc_6009"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 337, 0, 0, 2, 0, 1, 18, 31, 0.0003563997842336441, ["mov     dword ptr [rax], 5Fh ; '_'", "jmp     loc_6009"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 77, 0, 2, 11, 2, 3, 38, -1, 8.241076091889069e-05, ["call    cached_umask", "mov     esi, dword ptr [rbp+dest_link_val]; desc", "not     eax", "mov     rdi, [rbp+dst_name]; name", "mov     edx, eax", "and     edx, 1B6h; mode", "call    set_acl", "test    eax, eax", "mov     byte ptr [rbp+copied_as_regular], r12b", "setz    r8b", "jmp     loc_929C"], ["call~FOO", "mov~esi,[word ptr [rbp+0]", "not~eax", "mov~rdi,[rbp+0]", "mov~edx,eax", "and~edx,0", "call~FOO", "test~eax,eax", "mov~[yte ptr [rbp+0],r12b", "setz~r8b", "jmp~FOO"]], [0, 0, 83, 0, 0, 3, 1, 1, 37, -1, 0.004475867560555855, ["movzx   r12d, byte ptr [rbp+copied_as_regular]", "and     r12b, [rbx+20h]", "jnz     loc_9FF2"], ["movzx~r12d,[yte ptr [rbp+0]", "and~r12b,[rbx+0]", "jnz~FOO"]], [2, 0, 588, 0, 0, 4, 1, 1, 21, 53, 0.002127696009178632, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7BA7"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 589, 0, 0, 2, 0, 1, 20, 54, 0.002649131369174522, ["cmp     edi, 0A000h", "jnz     loc_854D"], ["cmp~edi,0", "jnz~FOO"]], [2, 0, 589, 0, 0, 4, 1, 1, 23, 54, 7.70594128072744e-05, ["mov     eax, [r10+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7BA7"], ["mov~eax,[r10+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 3, 0, 3, 15, 3, 4, 23, -1, 9.311345714212323e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     x_0, rax", "call    _dcgettext", "mov     esi, [r15]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6466"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~x_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 459, 0, 1, 5, 0, 2, 22, 42, 0.0004762699819338487, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r15, rax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "jz      loc_82D4"], ["call~FOO", "cmp~<TAG>,0", "mov~r15,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 286, 0, 0, 3, 1, 1, 18, 29, 0.17090814517993372, ["movzx   r13d, byte ptr [x_0+2Ch]", "test    r13b, r13b", "jnz     loc_6878"], ["movzx~r13d,[yte ptr [x_0+0]", "test~r13b,r13b", "jnz~FOO"]], [3, 0, 103, 1, 0, 10, 1, 1, 20, -1, 0.027470610396171, ["sub     rsp, 30h", "mov     rsi, [rbp+restore_dst_mode_0]", "lea     rax, [rsp+400h+var_3F1]", "and     rax, 0FFFFFFFFFFFFFFF0h", "cmp     byte ptr [rbp+copied_as_regular], 0", "mov     [rbp+dest_link_val], rax", "mov     [rax], rsi", "mov     [rax+8], dst_lstat_sb", "mov     [rax+10h], rcx", "jnz     short loc_7045"], ["sub~rsp,0", "mov~rsi,[rbp+0]", "lea~rax,[rsp+0]", "and~rax,0", "cmp~[yte ptr [rbp+0],0", "mov~[rbp+0],rax", "mov~<TAG>,rsi", "mov~[rax+0],dst_lstat_sb", "mov~[rax+0],rcx", "jnz~FOO"]], [0, 0, 104, 0, 0, 1, 0, 1, 19, -1, 0.02728866456037605, ["jmp     loc_7000"], ["jmp~FOO"]], [0, 0, 109, 0, 0, 3, 1, 1, 20, -1, 0.00038743760328101854, ["mov     rax, [rax]", "test    rax, rax", "jz      loc_7000"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 67, 0, 0, 5, 2, 1, 24, -1, 0.013821461902682523, ["mov     rax, [rbp+parent]", "test    rax, rax", "setnz   r12b", "and     r12b, [x_0+1Ch]", "jnz     loc_8072"], ["mov~rax,[rbp+0]", "test~rax,rax", "setnz~r12b", "and~r12b,[x_0+0]", "jnz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 26, -1, 0.004396667608503934, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_7820"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [3, 0, 68, 0, 0, 4, 0, 1, 23, -1, 0.011948490063616826, ["mov     byte ptr [rbp+restore_dst_mode_0], 0", "mov     byte ptr [rbp+var_370], 1", "mov     dword ptr [rbp+omitted_permissions], 0", "jmp     loc_7820"], ["mov~[yte ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 68, 0, 0, 3, 0, 1, 25, -1, 0.0002697079448254604, ["mov     dword ptr [r12], 5Fh ; '_'", "mov     dword ptr [rbp+omitted_permissions], 0", "jmp     loc_7820"], ["mov~<TAG>,0", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 68, 0, 0, 4, 0, 1, 29, -1, 7.277833431798138e-05, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     loc_7820"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 68, 0, 1, 3, 0, 2, 29, -1, 7.277833431798138e-05, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7820"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 169, 0, 0, 2, 0, 1, 36, 13, 0.002027804177761795, ["cmp     rsi, r8", "ja      loc_99F2"], ["cmp~rsi,r8", "ja~FOO"]], [0, 0, 170, 2, 0, 8, 1, 1, 35, 14, 0.005155845527271897, ["mov     rax, qword ptr [rbp+new_dst]", "xor     edx, edx", "lea     rsi, [rcx+rax-1]", "mov     rax, rsi", "div     rcx", "sub     rsi, rdx", "mov     qword ptr [rbp+new_dst], rsi", "jz      loc_99F2"], ["mov~rax,[word ptr [rbp+0]", "xor~edx,edx", "lea~rsi,[rcx+0]", "mov~rax,rsi", "div~,rcx", "sub~rsi,rdx", "mov~[word ptr [rbp+0],rsi", "jz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 19, 28, 0.1271769284118055, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_7348"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 31, -1, 0.001243653301139623, ["mov     eax, [rbp+dst_sb.st_gid]", "cmp     [rbp+group], eax", "jnz     loc_61DA"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 30, -1, 0.0024316525819184365, ["mov     eax, [rbp+dst_sb.st_uid]", "cmp     [rbp+owner], eax", "jz      loc_89D3"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [1, 0, 83, 0, 0, 3, 1, 1, 22, -1, 0.01537549339429589, ["mov     rax, 0FF000000FF00h", "test    [x_0+20h], rax", "jnz     loc_85E2"], ["mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [1, 1, 102, 0, 0, 4, 1, 1, 21, -1, 0.01584855256736277, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_802F"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 74, 0, 0, 3, 0, 1, 20, -1, 0.0032643223480859295, ["cmp     byte ptr [x_0+16h], 0", "mov     edx, 1", "jnz     short loc_6050"], ["cmp~[yte ptr [x_0+0],0", "mov~edx,0", "jnz~FOO"]], [2, 0, 89, 0, 1, 9, 1, 2, 27, -1, 0.011804003664603185, ["movzx   ecx, byte ptr [x_0+16h]; force", "mov     rdx, [rbp+dst_name]; dstname", "mov     r8d, 0FFFFFFFFh; symlinkat_errno", "mov     esi, 0FFFFFF9Ch; dstdir", "mov     rdi, src_link_val; srcname", "call    force_symlinkat", "test    eax, eax", "mov     r13d, eax", "jle     loc_8E66"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~rdx,[rbp+0]", "mov~r8d,0", "mov~esi,0", "mov~rdi,src_link_val", "call~FOO", "test~eax,eax", "mov~r13d,eax", "jle~FOO"]], [0, 0, 92, 0, 1, 6, 1, 2, 26, -1, 0.012924575959175634, ["mov     rsi, [rbp+size]; size", "mov     rdi, [rbp+src_name]; file", "call    areadlink_with_size", "test    rax, rax", "mov     dst_mode_bits, rax", "jz      loc_8D02"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "mov~dst_mode_bits,rax", "jz~FOO"]], [2, 0, 80, 0, 1, 10, 1, 1, 48, -1, 0.0009450480765114346, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "mov     r15d, dword ptr [rbp+x]", "mov     rbx, [rbp+var_390]", "mov     r14d, [rbp+var_394]", "call    quotearg_n_style_colon", "lea     rsi, aSWriteFailed; \"%s: write failed\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r15d,[word ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 164, 0, 1, 9, 0, 2, 47, 6, 0.0038347760567842247, ["cmp     cs:nz_7571, rbx", "mov     r12, rbx", "mov     rsi, cs:zeros_7570; buf", "cmovbe  r12, cs:nz_7571", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     rdx, r12; count", "call    full_write", "cmp     r12, rax", "jz      short loc_973A"], ["cmp~<TAG>,rbx", "mov~r12,rbx", "mov~rsi,<TAG>", "cmovbe~r12,<TAG>", "mov~edi,[word ptr [rbp+0]", "mov~rdx,r12", "call~FOO", "cmp~r12,rax", "jz~FOO"]], [1, 0, 73, 0, 0, 3, 1, 0, 21, -1, 0.0, ["xor     edx, edx", "cmp     dword ptr [x_0+8], 3", "setz    dl; replace"], ["xor~edx,edx", "cmp~[word ptr [x_0+0],0", "setz~dl"]], [0, 0, 99, 0, 0, 3, 0, 1, 34, -1, 0.004222570416606017, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+14h]", "cmp     [rbp+owner], eax", "jnz     short loc_9345"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 100, 0, 0, 2, 0, 1, 33, -1, 0.020036160842972894, ["cmp     byte ptr [rbx+1Dh], 0", "jz      short loc_9387"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 87, 0, 0, 2, 0, 1, 28, -1, 0.005182245511289204, ["cmp     byte ptr [x_0+2Dh], 1", "jnz     short loc_885F"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 29, -1, 0.004017792162201501, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jz      loc_947D"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 69, 0, 0, 1, 0, 1, 25, -1, 0.00014127559014666974, ["jmp     loc_8043"], ["jmp~FOO"]], [2, 0, 3, 0, 3, 18, 4, 4, 13, -1, 0.00011237831034394184, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     [rbp+copied_as_regular], use_lstat", "xor     r12d, r12d", "call    quotearg_style", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     x_0, rax", "call    _dcgettext", "mov     use_lstat, [rbp+copied_as_regular]", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [use_lstat]; errnum", "call    _error", "jmp     loc_6466"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[rbp+0],use_lstat", "xor~r12d,r12d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~x_0,rax", "call~FOO", "mov~use_lstat,[rbp+0]", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [3, 0, 633, 0, 0, 4, 0, 1, 12, 41, 0.011115285162638171, ["cmp     eax, 2", "mov     dword ptr [rbp+new_dst], 1", "mov     r8d, 1", "jnz     loc_6812"], ["cmp~eax,0", "mov~[word ptr [rbp+0],0", "mov~r8d,0", "jnz~FOO"]], [0, 0, 94, 0, 1, 8, 2, 2, 21, -1, 0.010622426001558312, ["mov     esi, dword ptr [rbp+omitted_permissions]", "mov     r13, [rbp+dst_name]", "not     esi", "mov     rdi, r13; path", "and     esi, r12d; mode", "call    _mkdir", "test    eax, eax", "jz      loc_7758"], ["mov~esi,[word ptr [rbp+0]", "mov~r13,[rbp+0]", "not~esi", "mov~rdi,r13", "and~esi,r12d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 72, 0, 3, 15, 4, 4, 33, -1, 0.0008112643737210278, ["lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+dst_name]", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, r12; format", "call    _error", "movzx   r8d, byte ptr [x_0+24h]", "test    r8b, r8b", "jnz     un_backup"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rdx,r12", "call~FOO", "movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 74, 0, 1, 5, 1, 2, 32, -1, 0.002114852773710753, ["mov     rdi, x_0; x", "call    chown_failure_ok", "test    al, al", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_A02F"], ["mov~rdi,x_0", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 51, 0, 0, 4, 2, 1, 27, -1, 0.0006443023126385998, ["mov     [rbp+restore_dst_mode], r12b", "xor     r8d, r8d", "xor     r13d, r13d", "jmp     loc_60A1"], ["mov~[rbp+0],r12b", "xor~r8d,r8d", "xor~r13d,r13d", "jmp~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 26, -1, 0.005850093755618915, ["test    r14b, r14b", "jnz     loc_8060"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 72, 0, 1, 7, 2, 2, 21, -1, 0.0023182040019521714, ["mov     r8d, dword ptr [rbp+dest_link_val]; dereference", "mov     rsi, [rbp+dst_name]; dst_name", "xor     ecx, ecx; verbose", "mov     rdi, [rbp+src_name]; src_name", "call    create_hard_link", "test    al, al", "jz      un_backup"], ["mov~r8d,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "xor~ecx,ecx", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 496, 0, 0, 2, 1, 1, 20, 44, 0.0006047023366126394, ["test    ecx, ecx", "jnz     loc_7A68"], ["test~ecx,ecx", "jnz~FOO"]], [1, 1, 499, 0, 0, 3, 1, 1, 19, 42, 0.007621389980563903, ["and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7D86"], ["and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 679, 0, 1, 3, 0, 2, 3, 48, 1.2843235467879067e-05, ["call    ___errno_location", "mov     r15d, [rax]", "jmp     loc_5987"], ["call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [2, 0, 682, 0, 1, 8, 1, 2, 2, 47, 0.0004834051127493371, ["mov     edx, 0FFFFFF9Ch; fd2", "mov     rcx, dst_name_0; dst", "mov     r8d, 1; flags", "mov     dst_name_0, src_name_0; src", "mov     edi, edx; fd1", "call    renameatu", "test    eax, eax", "jnz     loc_6868"], ["mov~edx,0", "mov~rcx,dst_name_0", "mov~r8d,0", "mov~dst_name_0,src_name_0", "mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 71, 0, 0, 1, 1, 0, 22, -1, 0.00048804294777940455, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 78, 0, 0, 1, 0, 1, 35, -1, 0.000995707505301402, ["jmp     loc_9299"], ["jmp~FOO"]], [3, 0, 102, 0, 4, 18, 3, 5, 34, -1, 0.0016935232990561648, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "call    _error", "cmp     byte ptr [rbx+24h], 0", "jz      loc_9323"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "call~FOO", "cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 66, 0, 0, 3, 0, 1, 25, -1, 0.005745207332631236, ["mov     rcx, [rbp+src_mode]", "cmp     [rax], rcx", "jnz     loc_7A0A"], ["mov~rcx,[rbp+0]", "cmp~<TAG>,rcx", "jnz~FOO"]], [2, 0, 165, 0, 0, 2, 0, 0, 38, 11, 0.0008241076091889068, ["mov     [rbp+var_31E], 0", "mov     [rbp+var_398], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 167, 2, 1, 12, 1, 2, 37, 12, 0.004038484041566418, ["mov     rax, qword ptr [rbp+new_dst]", "lea     rdi, [r12+rax]; n", "call    xmalloc", "lea     rcx, [rax+r12-1]", "xor     edx, edx", "mov     [rbp+restore_dst_mode_0], rax", "mov     rax, rcx", "div     r12", "sub     rcx, rdx", "cmp     dword ptr [rbp+parent], 0", "mov     [rbp+buf], rcx", "jz      loc_990B"], ["mov~rax,[word ptr [rbp+0]", "lea~rdi,<TAG>", "call~FOO", "lea~rcx,[rax+0]", "xor~edx,edx", "mov~[rbp+0],rax", "mov~rax,rcx", "div~,r12", "sub~rcx,rdx", "cmp~[word ptr [rbp+0],0", "mov~[rbp+0],rcx", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 21, -1, 0.059426720779498766, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jnz     short loc_608A"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 72, 0, 1, 10, 2, 2, 20, -1, 0.03862549553483513, ["movzx   ecx, byte ptr [x_0+16h]; force", "mov     dst_lstat_sb, [rbp+dst_name]; dstname", "mov     r8d, 0FFFFFFFFh; symlinkat_errno", "mov     rdi, [rbp+src_name]; srcname", "mov     esi, 0FFFFFF9Ch; dstdir", "call    force_symlinkat", "xor     r8d, r8d", "test    eax, eax", "mov     r12d, eax", "jle     loc_6077"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~r8d,0", "mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "xor~r8d,r8d", "test~eax,eax", "mov~r12d,eax", "jle~FOO"]], [0, 0, 72, 0, 1, 7, 2, 2, 26, -1, 0.020495663267490343, ["mov     rdi, [rbp+restore_dst_mode_0]; ptr", "mov     byte ptr [rbp+dest_link_val], r8b", "xor     r13d, r13d", "call    free", "movzx   r8d, byte ptr [rbp+dest_link_val]", "test    r8b, r8b", "jnz     loc_6077"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "xor~r13d,r13d", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 73, 0, 1, 14, 4, 2, 24, -1, 0.0009471886157560812, ["mov     edx, dword ptr [rbp+omitted_permissions]", "mov     rax, [rbp+var_258]", "lea     rcx, [rbp+dev]; dev", "mov     rsi, [rbp+dst_name]; path", "xor     edi, edi; ver", "mov     byte ptr [rbp+dest_link_val], r8b", "xor     r13d, r13d", "not     edx", "and     edx, [rbp+mode]; mode", "mov     [rbp+dev], rax", "call    ___xmknod", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_6077"], ["mov~edx,[word ptr [rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~[yte ptr [rbp+0],r8b", "xor~r13d,r13d", "not~edx", "and~edx,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 74, 0, 1, 14, 3, 2, 23, -1, 0.0016567773753563997, ["mov     r12d, dword ptr [rbp+omitted_permissions]", "mov     rsi, [rbp+dst_name]; path", "lea     rcx, [rbp+var_2F8]; dev", "xor     edi, edi; ver", "mov     byte ptr [rbp+dest_link_val], r8b", "mov     [rbp+var_2F8], 0", "not     r12d", "and     r12d, [rbp+mode]", "mov     edx, r12d; mode", "call    ___xmknod", "movzx   r8d, byte ptr [rbp+dest_link_val]", "test    eax, eax", "mov     r13d, r8d", "jz      loc_6077"], ["mov~r12d,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],0", "not~r12d", "and~r12d,[rbp+0]", "mov~edx,r12d", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "test~eax,eax", "mov~r13d,r8d", "jz~FOO"]], [1, 0, 73, 0, 1, 8, 2, 2, 24, -1, 0.0006742698620636511, ["mov     rdi, [rbp+dst_name]; path", "mov     esi, r12d", "and     esi, 0FFFFEFFFh; mode", "call    _mkfifo", "movzx   r8d, byte ptr [rbp+dest_link_val]", "test    eax, eax", "mov     r13d, r8d", "jz      loc_6077"], ["mov~rdi,[rbp+0]", "mov~esi,r12d", "and~esi,0", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "test~eax,eax", "mov~r13d,r8d", "jz~FOO"]], [1, 0, 71, 0, 0, 3, 0, 1, 31, -1, 0.0008059130256094114, ["mov     r8d, r13d", "mov     r13d, 1", "jmp     loc_6077"], ["mov~r8d,r13d", "mov~r13d,0", "jmp~FOO"]], [0, 0, 75, 0, 1, 8, 1, 2, 31, -1, 0.0035565059549801784, ["mov     edx, [rbp+group]; group", "mov     esi, [rbp+owner]; owner", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+dest_link_val], r8b", "call    _lchown", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_6077"], ["mov~edx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 71, 0, 0, 2, 0, 1, 33, -1, 0.00012201073694485114, ["mov     r13d, eax", "jmp     loc_6077"], ["mov~r13d,eax", "jmp~FOO"]], [0, 0, 71, 0, 0, 1, 0, 1, 34, -1, 0.00012201073694485114, ["jmp     loc_6077"], ["jmp~FOO"]], [1, 0, 82, 0, 0, 3, 0, 1, 19, -1, 0.04309333607322356, ["mov     rax, [rbp+src_name]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_68BC"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 587, 0, 0, 3, 0, 1, 22, 52, 0.0029986814278252978, ["mov     rax, [r10+8]", "mov     rcx, [r12+8]", "jmp     loc_7B80"], ["mov~rax,[r10+0]", "mov~rcx,[r12+0]", "jmp~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 22, -1, 0.006475131215055697, ["cmp     byte ptr [rbx+14h], 0", "jz      loc_7E28"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 462, 0, 0, 3, 0, 1, 26, 43, 0.0015711558055705392, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+src_mode], rax", "jnz     loc_8CFA"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 463, 0, 0, 3, 0, 1, 25, 43, 0.0019478907126283251, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+ino], rax", "jz      loc_987B"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 22, -1, 0.051740044351973144, ["test    r14b, r14b", "jz      loc_7450"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 68, 0, 0, 3, 1, 1, 23, -1, 0.0054498129168700175, ["mov     rax, 0FF000000FF00h", "test    [rbx+20h], rax", "jz      loc_608A"], ["mov~rax,0", "test~[rbx+0],rax", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 26, -1, 0.0001616107129708116, ["mov     dword ptr [r12], 5Fh ; '_'", "jmp     loc_608A"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 54, 0, 0, 1, 0, 1, 26, -1, 0.00015732963448151856, ["jmp     loc_608A"], ["jmp~FOO"]], [1, 0, 64, 0, 1, 16, 1, 2, 25, -1, 0.007008125486972678, ["movdqu  xmm0, xmmword ptr [x_0]", "mov     esi, 2; option", "mov     rdi, [rbp+src_name]; dir", "movaps  xmmword ptr [rbp+dev], xmm0", "movdqu  xmm0, xmmword ptr [x_0+10h]", "movaps  [rbp+var_2E0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+20h]", "movaps  xmmword ptr [rbp+var_2D0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+30h]", "movaps  [rbp+var_2C0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+40h]", "movaps  [rbp+var_2B0], xmm0", "call    savedir", "test    rax, rax", "mov     [rbp+ptr], rax", "jz      loc_88A5"], ["movdqu~xmm0,<TAG>", "mov~esi,0", "mov~rdi,[rbp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 65, 0, 0, 1, 0, 1, 26, -1, 2.3545931691111623e-05, ["jmp     loc_7838"], ["jmp~FOO"]], [1, 0, 431, 0, 1, 3, 0, 2, 14, 38, 0.0013838586216639694, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_5D68"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 433, 0, 0, 4, 0, 0, 13, 39, 0.0027912631750190505, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8087"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 27, -1, 0.0011922803592681068, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_98F3"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 500, 0, 0, 1, 0, 0, 19, 43, 5.832969441661743e-05, ["mov     eax, [rbp+dst_sb.st_mode]"], ["mov~eax,[rbp+0]"]], [1, 1, 501, 0, 0, 4, 1, 1, 18, 42, 0.05309125975015626, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_8096"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 26, -1, 0.005531153408166585, ["cmp     dword ptr [x_0+4], 3", "jnz     short loc_78A4"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 0, 23, -1, 0.00430676496022878, ["mov     byte ptr [rbp+var_370], r14b", "mov     byte ptr [rbp+restore_dst_mode_0], 0"], ["mov~[yte ptr [rbp+0],r14b", "mov~[yte ptr [rbp+0],0"]], [2, 0, 14, 0, 4, 17, 3, 5, 29, -1, 0.00023545931691111623, ["mov     rdi, r12; ptr", "call    free", "mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotCreateSy_0; \"cannot create symbolic link %s\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rdi,r12", "call~FOO", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,r13d", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 85, 0, 0, 4, 1, 1, 30, -1, 0.0035211870574435107, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_885F"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 84, 0, 0, 9, 1, 1, 31, -1, 0.003020300874196227, ["movzx   eax, byte ptr [rbp+copied_as_regular]", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, src_link_val", "mov     rsi, [rbp+dst_sb.st_size]; size", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "cmp     rsi, rax", "jnz     loc_885F"], ["movzx~eax,[yte ptr [rbp+0]", "or~rcx,0", "mov~rdi,src_link_val", "mov~rsi,[rbp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 83, 0, 1, 4, 1, 2, 32, -1, 0.002515133612459651, ["mov     rdi, [rbp+dst_name]; file", "call    areadlink_with_size", "test    dest_link_val_0, dest_link_val_0", "jz      loc_885F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~dest_link_val_0,dest_link_val_0", "jz~FOO"]], [0, 0, 15, 0, 1, 2, 0, 2, 34, -1, 2.9967549425051156e-05, ["call    free", "jmp     loc_885F"], ["call~FOO", "jmp~FOO"]], [0, 0, 14, 0, 3, 11, 3, 4, 23, -1, 0.0006635671658404184, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     dst_lstat_sb, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~dst_lstat_sb,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 25, -1, 7.812968242959766e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateSp; \"cannot create special file %s\"", "jmp     loc_7083"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 23, -1, 3.210808866969767e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_7083"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 22, -1, 0.00040777272610516036, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotOpenSFor; \"cannot open %s for reading\"", "jmp     loc_7083"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 25, -1, 6.421617733939534e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateFi; \"cannot create fifo %s\"", "jmp     loc_7083"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 25, -1, 6.421617733939534e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_7083"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 27, -1, 3.317835829202092e-05, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "jmp     loc_7083"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 15, 0, 1, 6, 0, 1, 22, -1, 0.0004484429717534441, ["mov     rsi, r13; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotCreateDi; \"cannot create directory %s\"", "mov     r13, rax", "mov     edx, 5; category"], ["mov~rsi,r13", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0"]], [1, 0, 50, 0, 0, 2, 0, 1, 24, -1, 0.003996386769755036, ["cmp     qword ptr [rbx+40h], 0", "jz      short loc_60DA"], ["cmp~[word ptr [rbx+0],0", "jz~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 27, -1, 0.00440522976548252, ["cmp     byte ptr [rax], 0", "jz      loc_8C30"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 61, 0, 0, 1, 0, 0, 27, -1, 0.0, ["mov     dword ptr [rbp+dev+4], 2"], ["mov~[word ptr [rbp+0],0"]], [1, 0, 4, 0, 1, 5, 1, 1, 28, -1, 0.00020656203710838833, ["lea     rsi, aBackingUpSMigh; \"backing up %s might destroy source;  %s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     x_0, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~x_0,rax"]], [2, 0, 81, 0, 1, 12, 1, 2, 20, -1, 0.004394527069259287, ["mov     rdi, [rbp+dst_name]; file", "call    dir_name", "lea     r8, asc_18AB8+1; \".\"", "mov     rdi, rax", "mov     ecx, 2", "mov     dst_mode_bits, rax", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_7D98"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~r8,<TAG>", "mov~rdi,rax", "mov~ecx,0", "mov~dst_mode_bits,rax", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 95, 0, 0, 2, 0, 1, 25, -1, 0.014057991489215962, ["cmp     r15d, 0A000h", "jz      loc_8804"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 103, 0, 1, 10, 1, 2, 33, -1, 0.0023870580143216347, ["movdqu  xmm0, [rbp+var_238]", "lea     rdx, [rbp+var_2A0]; timespec", "mov     rsi, [rbp+dst_name]; file", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "movaps  xmmword ptr [rbp+var_2A0.tv_sec], xmm0", "movdqu  xmm0, [rbp+var_228]", "movaps  [rbp+var_290], xmm0", "call    fdutimens", "test    eax, eax", "jz      loc_9323"], ["movdqu~xmm0,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[rbp+0]", "movaps~[rbp+0],xmm0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 32, -1, 0.023831693680271934, ["cmp     byte ptr [rbx+1Fh], 0", "jnz     loc_97E5"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 73, 0, 1, 2, 0, 1, 21, -1, 0.0008642427200260289, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [1, 0, 80, 0, 1, 6, 1, 2, 21, -1, 0.003153014307364311, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     rsi, r8; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_68B4"], ["lea~rdx,[rbp+0]", "mov~rsi,r8", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 79, 0, 1, 6, 1, 2, 22, -1, 0.0025343984656614692, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_68B4"], ["lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 25, -1, 0.00025686470935758134, ["jmp     loc_68B4"], ["jmp~FOO"]], [1, 0, 110, 0, 0, 6, 1, 1, 36, -1, 0.00479124034260044, ["xor     r9d, r9d", "cmp     dword ptr [x_0+0Ch], 3", "lea     rax, [rbp+dev]", "mov     [rbp+parent], rax", "setz    r9b", "jmp     loc_992F"], ["xor~r9d,r9d", "cmp~[word ptr [x_0+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "setz~r9b", "jmp~FOO"]], [3, 0, 212, 0, 3, 13, 2, 3, 31, 24, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 213, 0, 0, 2, 0, 1, 30, 24, 0.0024305823122961136, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_8D7A"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 408, 0, 1, 5, 0, 1, 16, 39, 0.0004953564568652801, ["mov     dst_lstat_sb, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     [rbp+earlier_file], rax"], ["mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 412, 0, 0, 2, 0, 1, 15, 39, 0.004394527069259287, ["cmp     [rbp+var_270], 1", "ja      loc_70B0"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 410, 0, 0, 2, 0, 1, 17, 38, 2.8540523261953482e-05, ["cmp     edx, 3", "jz      loc_70B0"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 409, 0, 0, 3, 0, 1, 17, 37, 0.004564521560938298, ["cmp     edx, 4", "mov     [rbp+earlier_file], 0", "jz      loc_70B0"], ["cmp~edx,0", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 49, 0, 1, 9, 1, 2, 25, -1, 0.0011751560453109346, ["lea     r12, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dest_link_val], r8b", "mov     dst_lstat_sb, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_8173"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 407, 0, 0, 2, 0, 1, 15, 38, 0.006279593881697591, ["cmp     [rbp+earlier_file], 0", "jz      short loc_7128"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 408, 0, 1, 5, 0, 2, 14, 39, 0.004559848976894521, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    src_to_dest_lookup", "mov     [rbp+earlier_file], rax", "jmp     loc_70D1"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 54, 0, 4, 18, 4, 5, 26, -1, 0.00023117823842182318, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, r13; format", "xor     edi, edi; status", "xor     eax, eax", "xor     r12d, r12d", "call    _error", "jmp     loc_7A0A"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,r13", "xor~edi,edi", "xor~eax,eax", "xor~r12d,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 47, 0, 0, 3, 0, 0, 25, -1, 0.00077915628505133, ["movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "movzx   r12d, [rbp+restore_dst_mode]", "mov     [rbp+restore_dst_mode], al"], ["movzx~eax,[yte ptr [rbp+0]", "movzx~r12d,[rbp+0]", "mov~[rbp+0],al"]], [0, 0, 48, 0, 1, 6, 0, 2, 26, -1, 0.0, ["mov     rdi, [rbx+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r12; stats", "call    record_file", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jmp     loc_60DA"], ["mov~rdi,[rbx+0]", "mov~rsi,[rbp+0]", "mov~rdx,r12", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 1, 406, 0, 0, 4, 1, 1, 16, 41, 0.0029382121208044033, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6A53"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [3, 0, 5, 0, 2, 13, 2, 3, 21, -1, 8.669183940818371e-05, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style_colon", "mov     edx, 5", "mov     x_0, rax", "lea     rsi, aCannotMoveDire; \"cannot move directory onto non-director\"...", "jmp     loc_6FDB"], ["mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~x_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [3, 0, 3, 0, 3, 18, 5, 4, 29, -1, 2.9967549425051156e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     r12, rax", "mov     esi, 4; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, r12", "mov     rcx, rax", "mov     rdx, fmt; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r12d, r12d", "jmp     loc_6466"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~r12,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rcx,rax", "mov~rdx,fmt", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 28, -1, 0.00020656203710838833, ["lea     rsi, aBackingUpSMigh_0; \"backing up %s might destroy source;  %s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     x_0, rax", "jmp     short loc_98AB"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~x_0,rax", "jmp~FOO"]], [1, 0, 528, 0, 1, 7, 1, 2, 18, 48, 3.424862791434418e-05, ["mov     rdi, [rbp+dst_name]; name", "mov     esi, 2; type", "call    _euidaccess", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jz      loc_6618"], ["mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 529, 0, 1, 7, 1, 2, 17, 48, 0.00033724195799405784, ["mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    can_write_any_file", "test    al, al", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jnz     loc_6618"], ["mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 24, -1, 0.04518999426335482, ["cmp     byte ptr [rbx+17h], 0", "jz      short loc_6102"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [2, 0, 47, 0, 0, 3, 0, 1, 23, -1, 0.04539334549159624, ["mov     byte ptr [rbp+var_370], 1", "mov     r12d, 1", "jmp     loc_60EF"], ["mov~[yte ptr [rbp+0],0", "mov~r12d,0", "jmp~FOO"]], [0, 1, 45, 0, 0, 2, 0, 1, 25, -1, 0.00012361614137833602, ["cmp     r15d, 4000h", "jnz     loc_6466"], ["cmp~r15d,<STR>", "jnz~FOO"]], [0, 0, 82, 0, 1, 8, 1, 2, 33, -1, 0.0020056852722337808, ["mov     rdi, dest_link_val_0; s1", "mov     rsi, r12; s2", "mov     [rbp+dest_link_val], dest_link_val_0", "call    _strcmp", "mov     rdx, [rbp+dest_link_val]", "test    eax, eax", "mov     rdi, rdx; ptr", "jnz     loc_A025"], ["mov~rdi,dest_link_val_0", "mov~rsi,r12", "mov~[rbp+0],dest_link_val_0", "call~FOO", "mov~rdx,[rbp+0]", "test~eax,eax", "mov~rdi,rdx", "jnz~FOO"]], [4, 0, 452, 0, 0, 5, 0, 1, 23, 40, 0.0009611021208462835, ["mov     [rbp+dst_backup], 0", "mov     dword ptr [rbp+new_dst], 1", "mov     r15d, 11h", "mov     byte ptr [rbp+copied_as_regular], 1", "jmp     loc_5C98"], ["mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~r15d,0", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 454, 0, 1, 6, 0, 2, 22, 41, 0.0009140102574640603, ["mov     byte ptr [rbp+copied_as_regular], r9b", "call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     tmp_backup, rax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "jz      loc_86B3"], ["mov~[yte ptr [rbp+0],r9b", "call~FOO", "cmp~<TAG>,0", "mov~tmp_backup,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 164, 0, 1, 4, 1, 2, 38, 9, 0.04226137982013762, ["mov     rdi, [rbp+parent]; scan", "call    extent_scan_read", "test    al, al", "jz      loc_9AF0"], ["mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [3, 0, 164, 0, 1, 6, 0, 2, 40, 10, 0.004507975649225553, ["mov     rdi, [rbp+var_2D0+8]; ptr", "call    free", "cmp     byte ptr [rbp+var_2D0+1], 0", "mov     [rbp+var_2D0+8], 0", "mov     qword ptr [rbp+var_2E0+8], 0", "jz      loc_90F2"], ["mov~rdi,[rbp+0]", "call~FOO", "cmp~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 164, 0, 1, 18, 2, 1, 37, 10, 0.041071240000114154, ["mov     rax, [rbp+dot_sb.st_size]", "mov     edi, r13d; src_fd", "xor     r12d, r12d", "mov     [rbp+length], rax", "lea     rax, [rbp+dev]", "mov     rsi, rax; scan", "mov     [rbp+parent], rax", "call    extent_scan_init", "lea     rax, [rbp+var_2F9]", "xor     edx, edx", "mov     [rbp+var_394], r14d", "mov     [rbp+var_3B8], 0", "mov     dword ptr [rbp+x], r15d", "mov     r14, rdx", "mov     [rbp+last_write_made_hole], rax", "lea     rax, [rbp+var_2F8]", "mov     [rbp+var_390], x_0", "mov     [rbp-3C8h], rax"], ["mov~rax,[rbp+0]", "mov~edi,r13d", "xor~r12d,r12d", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~[rbp+0],rax", "call~FOO", "lea~rax,[rbp+0]", "xor~edx,edx", "mov~[rbp+0],r14d", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],r15d", "mov~r14,rdx", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],x_0", "mov~[rbp-3C8h]+0],rax"]], [0, 0, 44, 0, 0, 2, 1, 1, 25, -1, 0.042880887553192394, ["test    r8b, r8b", "jnz     loc_6466"], ["test~r8b,r8b", "jnz~FOO"]], [0, 0, 683, 0, 0, 2, 1, 1, 1, 48, 1.2843235467879067e-05, ["test    r15d, r15d", "js      loc_5C20"], ["test~r15d,r15d", "js~FOO"]], [2, 0, 684, 1, 0, 29, 2, 1, 0, 47, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     rbx, x_0", "sub     rsp, 3A8h", "mov     rax, [rbp+first_dir_created_per_command_line_arg]", "mov     r14d, [rbp+command_line_arg]", "mov     [rbp+parent], parent_0", "mov     [rbp+src_name], src_name_0", "mov     parent_0, fs:28h", "mov     [rbp+var_38], parent_0", "xor     ecx, ecx", "mov     [rbp+format], rax", "mov     rax, [rbp+copy_into_self]", "mov     [rbp+dst_name], dst_name_0", "mov     [rbp+restore_dst_mode_0], ancestors_0", "mov     r13, [rbp+rename_succeeded]", "mov     byte ptr [rbp+copied_as_regular], dl", "mov     byte ptr [rax], 0", "movzx   r12d, byte ptr [x_0+18h]", "mov     qword ptr [rbp+var_340], rax", "mov     [rbp+restore_dst_mode], r14b", "mov     r15d, [x_0+34h]", "test    r12b, r12b", "jz      short loc_59A1"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~rbx,x_0", "sub~rsp,0", "mov~rax,[rbp+0]", "mov~r14d,[rbp+0]", "mov~[rbp+0],parent_0", "mov~[rbp+0],src_name_0", "mov~parent_0,<TAG>", "mov~[rbp+0],parent_0", "xor~ecx,ecx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],dst_name_0", "mov~[rbp+0],ancestors_0", "mov~r13,[rbp+0]", "mov~[yte ptr [rbp+0],dl", "mov~<TAG>,0", "movzx~r12d,[yte ptr [x_0+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],r14b", "mov~r15d,[x_0+0]", "test~r12b,r12b", "jz~FOO"]], [1, 0, 609, 0, 0, 2, 0, 1, 22, 52, 0.004889419742621561, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_6F45"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 610, 0, 0, 4, 1, 1, 21, 53, 0.0038170095810536593, ["mov     esi, [rbp+dot_sb.st_mode]", "and     esi, 0F000h", "cmp     esi, 0A000h", "jnz     loc_6F45"], ["mov~esi,[rbp+0]", "and~esi,0", "cmp~esi,0", "jnz~FOO"]], [1, 0, 164, 0, 0, 2, 0, 1, 39, 8, 0.021998321817232196, ["cmp     qword ptr [rbp+var_2E0+8], 0", "jz      loc_95F2"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 26, -1, 0.04563629669586362, ["cmp     byte ptr [rbx+1Fh], 0", "jz      loc_61B0"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 44, 0, 0, 4, 1, 1, 27, -1, 0.003889359807522711, ["movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "xor     r13d, r13d", "mov     [rbp+restore_dst_mode], al", "jmp     loc_610B"], ["movzx~eax,[yte ptr [rbp+0]", "xor~r13d,r13d", "mov~[rbp+0],al", "jmp~FOO"]], [2, 0, 58, 0, 0, 16, 0, 1, 28, -1, 0.002093447381264288, ["mov     r13, rax", "lea     rax, [rbp+dev]", "lea     r10, [rbp+src_mode]", "mov     dword ptr [rbp+var_390], r14d", "mov     [rbp+restore_dst_mode], 0", "mov     r12d, 1", "mov     [rbp+parent], rax", "lea     rax, [rbp+var_2F9]", "mov     r14, qword ptr [rbp+var_340]", "mov     dword ptr [rbp+length], r15d", "mov     [rbp+x], x_0", "mov     [rbp+dst_backup], rax", "lea     rax, [rbp+var_2F8]", "mov     qword ptr [rbp+var_340], r10", "mov     [rbp+earlier_file], rax", "jmp     short loc_793D"], ["mov~r13,rax", "lea~rax,[rbp+0]", "lea~r10,[rbp+0]", "mov~[word ptr [rbp+0],r14d", "mov~[rbp+0],0", "mov~r12d,0", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~r14,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],r15d", "mov~[rbp+0],x_0", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[word ptr [rbp+0],r10", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 14, 0, 1, 8, 1, 2, 17, -1, 0.0021141045116154934, ["movzx   ecx, byte ptr [x_0+2Eh]; verbose", "mov     r8d, dword ptr [rbp+dest_link_val]; dereference", "mov     edx, 1; replace", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+earlier_file]; src_name", "call    create_hard_link", "test    al, al", "jz      loc_6ACE"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,[word ptr [rbp+0]", "mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 18, -1, 8.337400357898161e-05, ["jmp     loc_6460"], ["jmp~FOO"]], [0, 0, 164, 0, 0, 5, 2, 1, 40, 7, 0.019752896149598007, ["mov     rsi, [rbp+var_3B8]", "mov     rcx, r12", "xor     r15d, r15d", "xor     eax, eax", "jmp     loc_91DF"], ["mov~rsi,[rbp+0]", "mov~rcx,r12", "xor~r15d,r15d", "xor~eax,eax", "jmp~FOO"]], [2, 0, 110, 0, 0, 6, 1, 0, 38, -1, 0.0020948744074273857, ["xor     r9d, r9d", "cmp     dword ptr [x_0+0Ch], 3", "lea     rax, [rbp+dev]", "mov     [rbp+hole_size], 0", "mov     [rbp+parent], rax", "setz    r9b; punch_holes"], ["xor~r9d,r9d", "cmp~[word ptr [x_0+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "setz~r9b"]], [0, 0, 391, 0, 0, 2, 0, 1, 16, 37, 0.012283484455404005, ["movzx   eax, byte ptr [x_0+18h]", "jmp     loc_6327"], ["movzx~eax,[yte ptr [x_0+0]", "jmp~FOO"]], [1, 0, 404, 0, 0, 2, 0, 1, 15, 38, 0.010934304422784024, ["cmp     [rbp+earlier_file], 0", "jz      loc_7128"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 396, 0, 0, 3, 0, 1, 18, 38, 0.004077727261051604, ["mov     eax, [x_0+4]", "cmp     eax, 4", "jz      loc_7128"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 394, 0, 0, 2, 1, 1, 20, 38, 0.0008155454522103207, ["test    r14b, r14b", "jnz     loc_7128"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 191, 0, 1, 9, 1, 2, 29, 18, 0.0811622914044506, ["lea     rax, [rbp+timespec]", "mov     esi, dword ptr [rbp+dest_link_val]; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rbp+var_370], rax", "call    ___fxstat", "test    eax, eax", "mov     dword ptr [rbp+parent], eax", "jnz     loc_99FE"], ["lea~rax,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~edi,0", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],eax", "jnz~FOO"]], [0, 0, 192, 0, 0, 1, 0, 1, 30, 19, 0.004507975649225553, ["jmp     loc_8EB4"], ["jmp~FOO"]], [2, 0, 192, 0, 0, 3, 0, 1, 30, 19, 0.0004923240262686975, ["mov     dword ptr [r12], 5Fh ; '_'", "mov     dword ptr [rbp+ptr], 0", "jmp     loc_8EB4"], ["mov~<TAG>,0", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 192, 0, 0, 1, 0, 0, 28, 19, 0.07562899745703937, ["mov     dword ptr [rbp+ptr], 0"], ["mov~[word ptr [rbp+0],0"]], [1, 0, 88, 0, 1, 6, 2, 2, 24, -1, 0.0013207127139468974, ["mov     rdi, [rbp+dst_name]; file", "mov     esi, r12d", "or      esi, 1C0h; mode", "call    _chmod", "test    eax, eax", "jnz     loc_8914"], ["mov~rdi,[rbp+0]", "mov~esi,r12d", "or~esi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 99, 0, 0, 4, 1, 1, 23, -1, 0.016494995419246015, ["mov     eax, [rbp+mode]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_80F1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 1, 98, 0, 0, 2, 0, 1, 24, -1, 0.01463272627640355, ["cmp     r15d, 0C000h", "jz      loc_80F1"], ["cmp~r15d,<STR>", "jz~FOO"]], [1, 0, 58, 0, 1, 7, 1, 2, 30, -1, 0.0, ["movzx   eax, byte ptr [rbp+var_2F8]", "mov     rdi, r13; s", "or      [rbp+restore_dst_mode], al", "call    _strlen", "lea     r13, [r13+rax+1]", "cmp     byte ptr [r13+0], 0", "jz      loc_79D9"], ["movzx~eax,[yte ptr [rbp+0]", "mov~rdi,r13", "or~[rbp+0],al", "call~FOO", "lea~r13,[r13+0]", "cmp~[yte ptr [r13+0],0", "jz~FOO"]], [3, 1, 58, 1, 5, 34, 4, 6, 29, -1, 0.0015176423244543764, ["mov     rdi, [rbp+src_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r13; base", "call    file_name_concat", "mov     rdi, [rbp+dst_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r13; base", "mov     rbx, rax", "call    file_name_concat", "mov     r15, rax", "mov     rax, [rbp+format]", "mov     r9, [rbp+parent]; x", "mov     r8, [rbp+dest_link_val]; ancestors", "mov     rcx, qword ptr [rbp+var_340]; parent", "mov     rsi, r15; dst_name", "mov     edx, dword ptr [rbp+new_dst]; new_dst", "mov     rdi, rbx; src_name", "movzx   eax, byte ptr [rax]", "push    0; rename_succeeded", "push    [rbp+dst_backup]; copy_into_self", "push    [rbp+earlier_file]; first_dir_created_per_command_line_arg", "push    0; command_line_arg", "mov     byte ptr [rbp+var_2F8], al", "call    copy_internal", "and     r12d, eax", "movzx   eax, [rbp+var_2F9]", "add     rsp, 20h", "or      [r14], al", "mov     rdi, r15; ptr", "call    free", "mov     rdi, rbx; ptr", "call    free", "cmp     [rbp+var_2F9], 0", "jz      loc_7918"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r13", "call~FOO", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r13", "mov~rbx,rax", "call~FOO", "mov~r15,rax", "mov~rax,[rbp+0]", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,[word ptr [rbp+0]", "mov~rsi,r15", "mov~edx,[word ptr [rbp+0]", "mov~rdi,rbx", "movzx~eax,<TAG>", "push~0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~[yte ptr [rbp+0],al", "call~FOO", "and~r12d,eax", "movzx~eax,[rbp+0]", "add~rsp,<STR>", "or~<TAG>,al", "mov~rdi,r15", "call~FOO", "mov~rdi,rbx", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 613, 0, 0, 2, 2, 0, 15, 55, 0.0058600829387606, ["xor     r15d, r15d", "xor     edx, edx"], ["xor~r15d,r15d", "xor~edx,edx"]], [1, 0, 614, 0, 0, 2, 0, 1, 14, 52, 0.006449801500660713, ["cmp     dword ptr [x_0+4], 2", "jz      loc_7138"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 164, 0, 0, 3, 0, 0, 43, 4, 0.008104081580231692, ["cmp     [rbp+var_398], 3", "mov     r8d, 0", "cmovz   r8, [rbp+hole_size]; hole_size"], ["cmp~[rbp+0],0", "mov~r8d,0", "cmovz~r8,[rbp+0]"]], [0, 0, 164, 2, 0, 7, 1, 1, 42, 5, 0.019296961290488298, ["mov     rax, r14", "xor     r10d, r10d", "sub     rax, rcx", "mov     rcx, rax", "sub     rcx, rsi", "mov     rbx, rcx", "jz      loc_9130"], ["mov~rax,r14", "xor~r10d,r10d", "sub~rax,rcx", "mov~rcx,rax", "sub~rcx,rsi", "mov~rbx,rcx", "jz~FOO"]], [0, 0, 164, 0, 1, 8, 1, 2, 45, 5, 0.000481621330045465, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "movzx   edx, dl; punch_holes", "mov     rcx, rbx; size", "call    create_hole", "test    al, al", "mov     r10d, eax", "jnz     loc_9130"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "movzx~edx,dl", "mov~rcx,rbx", "call~FOO", "test~al,al", "mov~r10d,eax", "jnz~FOO"]], [1, 0, 77, 0, 0, 3, 1, 1, 30, -1, 0.0012902100297106846, ["xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0", "jmp     loc_929C"], ["xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [4, 0, 194, 0, 3, 18, 4, 4, 29, 20, 0.0020286960691137308, ["mov     rdx, [rbp+dst_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     dword ptr [r12], 5Fh ; '_'", "call    quotearg_n_style", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+restore_dst_mode_0], rax", "call    _dcgettext", "mov     rcx, [rbp+restore_dst_mode_0]", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "cmp     byte ptr [x_0+26h], 0", "jz      loc_8EAA"], ["mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~<TAG>,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [4, 0, 14, 0, 4, 22, 4, 4, 21, -1, 0.0013983072615653335, ["mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aCannotCreateSy; \"cannot create symbolic link %s to %s\"", "mov     r14, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     dst_lstat_sb, rax; format", "mov     rcx, r14", "mov     esi, r12d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "nop     dword ptr [rax+rax+00h]"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~dst_lstat_sb,rax", "mov~rcx,r14", "mov~esi,r12d", "xor~edi,edi", "xor~eax,eax", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 42, 0, 0, 8, 1, 1, 27, -1, 0.0072278875160897175, ["movdqu  xmm0, [rbp+var_238]", "test    r13b, r13b", "lea     rsi, [rbp+timespec]; timespec", "mov     rdi, [rbp+dst_name]; file", "movaps  xmmword ptr [rbp+timespec.tv_sec], xmm0", "movdqu  xmm0, [rbp+var_228]", "movaps  xmmword ptr [rbp+timespec.tv_sec+10h], xmm0", "jz      loc_8161"], ["movdqu~xmm0,[rbp+0]", "test~r13b,r13b", "lea~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[rbp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 22, -1, 0.008345962514876747, ["cmp     byte ptr [rbx+25h], 0", "jnz     loc_6AD8"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 14, 0, 2, 9, 4, 3, 22, -1, 0.0003098430556625825, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 27, -1, 2.5686470935758134e-05, ["jmp     un_backup"], ["jmp~FOO"]], [3, 0, 64, 0, 3, 22, 5, 4, 25, -1, 0.0013410478367710393, ["mov     rdx, [rbp+dst_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     dword ptr [r12], 5Fh ; '_'", "mov     byte ptr [rbp+dest_link_val], r8b", "call    quotearg_n_style", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+copied_as_regular], rax", "call    _dcgettext", "mov     rcx, [rbp+copied_as_regular]", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "movzx   eax, byte ptr [rbx+26h]", "movzx   r8d, byte ptr [rbp+dest_link_val]", "test    al, al", "mov     byte ptr [rbp+copied_as_regular], al", "jnz     un_backup"], ["mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~<TAG>,0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "movzx~eax,[yte ptr [rbx+0]", "movzx~r8d,[yte ptr [rbp+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [4, 0, 79, 0, 3, 18, 4, 4, 24, -1, 0.0007534698141155719, ["mov     rdx, [rbp+dst_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     dword ptr [r12], 5Fh ; '_'", "call    quotearg_n_style", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r13", "call    _error", "cmp     byte ptr [x_0+26h], 0", "jnz     un_backup"], ["mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~<TAG>,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r13", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 14, 0, 5, 19, 3, 6, 26, -1, 0.004764840358583134, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToCloseS; \"failed to close %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "mov     rcx, r12", "mov     rdx, r13; format", "xor     eax, eax", "call    _error", "mov     rdi, [rbp+restore_dst_mode_0]; ptr", "call    free", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "mov~rcx,r12", "mov~rdx,r13", "xor~eax,eax", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [4, 0, 226, 1, 2, 14, 3, 3, 26, 21, 0.08551561309325044, ["cmp     byte ptr [x_0+23h], 1", "mov     rdi, [rbp+dst_name]; file", "sbb     esi, esi", "xor     eax, eax", "and     esi, 0FFFFFE00h", "add     esi, 201h; flags", "call    open_safer", "mov     dword ptr [rbp+dest_link_val], eax", "call    ___errno_location", "mov     r12, rax", "mov     r8d, [rax]", "mov     rax, 0FF000000FF00h", "test    [x_0+20h], rax", "jz      loc_8E9D"], ["cmp~[yte ptr [x_0+0],0", "mov~rdi,[rbp+0]", "sbb~esi,esi", "xor~eax,eax", "and~esi,0", "add~esi,0", "call~FOO", "mov~[word ptr [rbp+0],eax", "call~FOO", "mov~r12,rax", "mov~r8d,<TAG>", "mov~rax,0", "test~[x_0+0],rax", "jz~FOO"]], [2, 0, 227, 0, 0, 4, 1, 1, 25, 22, 0.09664320635654533, ["and     r12d, 1FFh", "cmp     byte ptr [rbp+copied_as_regular], 0", "mov     [rbp+var_3A4], r12d", "jnz     loc_8DCF"], ["and~r12d,0", "cmp~[yte ptr [rbp+0],0", "mov~[rbp+0],r12d", "jnz~FOO"]], [0, 0, 39, 0, 1, 3, 1, 2, 28, -1, 0.0024334363646223082, ["call    lutimens", "test    eax, eax", "jz      short loc_61B0"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 612, 0, 0, 5, 1, 1, 16, 54, 0.008606394789642074, ["mov     edi, [rbp+var_268]", "lea     r10, [rbp+src_mode]", "and     edi, 0F000h", "cmp     edi, 0A000h", "jnz     loc_6F50"], ["mov~edi,[rbp+0]", "lea~r10,[rbp+0]", "and~edi,0", "cmp~edi,0", "jnz~FOO"]], [2, 0, 613, 0, 0, 3, 0, 1, 17, 55, 0.00023974039540040925, ["mov     r15d, 1", "mov     edx, 1", "jmp     loc_713D"], ["mov~r15d,0", "mov~edx,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 23, -1, 0.006649585163494387, ["cmp     [rbp+earlier_file], 0", "jz      loc_7300"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 38, 0, 1, 3, 0, 2, 29, -1, 0.0012347343876202628, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jz      short loc_61B0"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [4, 0, 451, 0, 0, 6, 0, 1, 24, 39, 0.0018775401760683414, ["cmp     qword ptr [x_0+40h], 0", "mov     byte ptr [rbp+copied_as_regular], r14b", "mov     r15d, 11h", "mov     dword ptr [rbp+new_dst], 1", "mov     [rbp+dst_backup], 0", "jnz     loc_5CAC"], ["cmp~[word ptr [x_0+0],0", "mov~[yte ptr [rbp+0],r14b", "mov~r15d,0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [0, 0, 453, 0, 0, 2, 1, 1, 23, 40, 0.004070884021951295, ["test    r14b, r14b", "jnz     loc_8939"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 429, 0, 0, 1, 0, 1, 25, 39, 0.00014662693825828602, ["jmp     loc_5D71"], ["jmp~FOO"]], [0, 0, 39, 0, 1, 3, 1, 2, 28, -1, 0.002491230924227764, ["call    utimens", "test    eax, eax", "jz      loc_61B9"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 19, -1, 0.007790709414736539, ["mov     rax, [rbp+dst_backup]", "test    rax, rax", "jz      loc_5F00"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.003719403771418875, ["cmp     byte ptr [x_0+25h], 0", "jz      loc_6960"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 24, -1, 0.0, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_6960"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 29, -1, 0.001243296544598849, ["jmp     loc_615D"], ["jmp~FOO"]], [2, 0, 611, 0, 0, 5, 1, 1, 17, 53, 0.0024930147069316365, ["mov     esi, [rbp+dst_sb.st_mode]", "lea     r10, [rbp+src_mode]", "and     esi, 0F000h", "cmp     esi, 0A000h", "jnz     loc_6F50"], ["mov~esi,[rbp+0]", "lea~r10,[rbp+0]", "and~esi,0", "cmp~esi,0", "jnz~FOO"]], [3, 0, 109, 2, 1, 16, 1, 2, 37, -1, 0.008081605918162904, ["lea     rax, [rbp+var_2F8]", "sub     rsp, 8", "mov     r8, [rbp+hole_size]; hole_size", "mov     rcx, qword ptr [rbp+new_dst]; buf_size", "mov     rdx, [rbp+buf]; buf", "mov     edi, r13d; src_fd", "mov     esi, dword ptr [rbp+dest_link_val]; dest_fd", "push    rax; last_write_made_hole", "push    [rbp+parent]; total_n_read", "push    0FFFFFFFFFFFFFFFFh; max_n_read", "push    [rbp+dst_name]; dst_name", "push    [rbp+src_name]; src_name", "call    sparse_copy", "add     rsp, 30h", "test    al, al", "jz      loc_9299"], ["lea~rax,[rbp+0]", "sub~rsp,0", "mov~r8,[rbp+0]", "mov~rcx,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~edi,r13d", "mov~esi,[word ptr [rbp+0]", "push~rax", "push~[rbp+0]", "push~0", "push~[rbp+0]", "push~[rbp+0]", "call~FOO", "add~rsp,0", "test~al,al", "jz~FOO"]], [3, 0, 110, 0, 0, 8, 1, 1, 41, -1, 0.001302518130367402, ["xor     r9d, r9d", "cmp     dword ptr [rbx+0Ch], 3", "mov     eax, 0", "setz    r9b", "cmp     [rbp+var_31E], 0", "cmovnz  rax, [rbp+hole_size]", "mov     [rbp+hole_size], rax", "jmp     loc_992F"], ["xor~r9d,r9d", "cmp~[word ptr [rbx+0],0", "mov~eax,0", "setz~r9b", "cmp~[rbp+0],0", "cmovnz~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 20, -1, 0.004587175601277474, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, rax; old", "call    _rename", "test    eax, eax", "jnz     loc_7320"], ["mov~rsi,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 77, 0, 0, 2, 0, 1, 30, -1, 0.0002247566206878837, ["mov     byte ptr [rbp+copied_as_regular], al", "jmp     loc_8BED"], ["mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 209, 0, 0, 5, 1, 1, 29, 24, 0.002081674415418732, ["cmp     r8d, 2", "setnz   dl", "or      dl, al", "mov     byte ptr [rbp+copied_as_regular], dl", "jnz     loc_9AE5"], ["cmp~r8d,0", "setnz~dl", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jnz~FOO"]], [1, 0, 108, 0, 0, 2, 0, 1, 38, -1, 0.0034476952100439807, ["cmp     byte ptr [rbp+var_2F8], 0", "jz      loc_9319"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 21, -1, 0.0011665938883323485, ["cmp     byte ptr [rbx+2Eh], 0", "jz      loc_5F00"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [3, 0, 164, 2, 1, 16, 1, 2, 44, 3, 0.009094080980880702, ["sub     rsp, 8", "mov     rcx, qword ptr [rbp+new_dst]; buf_size", "mov     rdx, [rbp+buf]; buf", "mov     esi, dword ptr [rbp+dest_link_val]; dest_fd", "push    [rbp+last_write_made_hole]; last_write_made_hole", "mov     r9d, 1; punch_holes", "push    qword ptr [rbp-3C8h]; total_n_read", "push    r12; max_n_read", "mov     edi, r13d; src_fd", "push    [rbp+dst_name]; dst_name", "push    [rbp+src_name]; src_name", "mov     byte ptr [rbp+format], r10b", "call    sparse_copy", "add     rsp, 30h", "test    al, al", "jz      loc_9278"], ["sub~rsp,0", "mov~rcx,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "push~[rbp+0]", "mov~r9d,0", "push~[word ptr [rbp-3C8h]+0]", "push~r12", "mov~edi,r13d", "push~[rbp+0]", "push~[rbp+0]", "mov~[yte ptr [rbp+0],r10b", "call~FOO", "add~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 164, 0, 0, 4, 2, 1, 49, 4, 0.001092745284392044, ["mov     r12, [rbp+format]", "xor     r10d, r10d", "xor     r8d, r8d", "jmp     loc_9145"], ["mov~r12,[rbp+0]", "xor~r10d,r10d", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 678, 0, 0, 5, 2, 1, 2, 47, 0.0024448525739270903, ["test    r15d, r15d", "setz    byte ptr [rbp+copied_as_regular]", "test    r13, r13", "movzx   eax, byte ptr [rbp+copied_as_regular]", "jz      short loc_59A1"], ["test~r15d,r15d", "setz~[yte ptr [rbp+0]", "test~r13,r13", "movzx~eax,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 677, 0, 0, 1, 0, 0, 3, 47, 0.0, ["mov     [r13+0], al"], ["mov~[r13+0],al"]], [0, 0, 107, 0, 1, 5, 1, 1, 39, -1, 0.0016667665584980834, ["mov     rsi, [rbp+dev]; length", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "call    _ftruncate", "test    eax, eax", "jns     loc_9319"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [3, 0, 37, 0, 4, 18, 3, 5, 30, -1, 0.001360669446513632, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     r15, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r14", "mov     dst_lstat_sb, r15; format", "call    _error", "cmp     byte ptr [rbx+24h], 0", "jnz     loc_5F00"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r14", "mov~dst_lstat_sb,r15", "call~FOO", "cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 676, 0, 0, 2, 1, 1, 1, 46, 0.00677088238735769, ["test    r15d, r15d", "jz      loc_5C58"], ["test~r15d,r15d", "jz~FOO"]], [0, 0, 565, 0, 1, 9, 1, 2, 18, 52, 0.0035782681039674175, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     dword ptr [rbp+earlier_file], edx", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    same_name", "test    al, al", "mov     r15d, eax", "jnz     loc_6FA0"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],edx", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "mov~r15d,eax", "jnz~FOO"]], [0, 0, 164, 0, 0, 5, 1, 1, 45, 2, 0.006323152928685794, ["mov     rax, [rbp+var_2F8]", "movzx   r10d, byte ptr [rbp+format]", "test    rax, rax", "lea     rdx, [r14+rax]", "jz      short loc_91B8"], ["mov~rax,[rbp+0]", "movzx~r10d,[yte ptr [rbp+0]", "test~rax,rax", "lea~rdx,<TAG>", "jz~FOO"]], [0, 0, 172, 0, 0, 3, 0, 0, 35, 15, 0.0007256428039351673, ["mov     rax, [rbp+dot_sb.st_size]", "cmp     qword ptr [rbp+new_dst], rax", "jbe     loc_900E"], ["mov~rax,[rbp+0]", "cmp~[word ptr [rbp+0],rax", "jbe~FOO"]], [1, 0, 171, 1, 0, 3, 0, 1, 36, 15, 0.0, ["add     rax, 1", "mov     qword ptr [rbp+new_dst], rax", "jmp     loc_900E"], ["add~rax,0", "mov~[word ptr [rbp+0],rax", "jmp~FOO"]], [0, 0, 164, 0, 0, 1, 0, 0, 46, 2, 0.0, ["movzx   r10d, [rbp+var_2F9]"], ["movzx~r10d,[rbp+0]"]], [0, 0, 35, 0, 0, 2, 1, 1, 27, -1, 0.0364712211633688, ["test    r13b, r13b", "jnz     loc_6466"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 31, -1, 0.00013913505090202324, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 672, 0, 0, 3, 0, 1, 2, 45, 0.004195100162966388, ["cmp     r15d, 11h", "mov     r12, [rbp+src_name]", "jz      loc_5F60"], ["cmp~r15d,0", "mov~r12,[rbp+0]", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 28, -1, 0.03524255163694171, ["cmp     byte ptr [rbx+1Dh], 0", "jz      short loc_6223"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 1, 46, 1, 0.005419845367444966, ["cmp     [rbp+length], rdx", "jz      loc_A072"], ["cmp~[rbp+0],rdx", "jz~FOO"]], [2, 0, 79, 0, 1, 6, 0, 1, 40, -1, 0.0031564034945016682, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToExtend; \"failed to extend %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 113, 0, 1, 7, 1, 2, 42, -1, 0.005563083118565896, ["mov     rsi, [rbp+length]; length", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     [rbp+format], rdx", "call    _ftruncate", "test    eax, eax", "mov     rdx, [rbp+format]; offset", "jnz     loc_99A5"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "mov~[rbp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rbp+0]", "jnz~FOO"]], [0, 0, 80, 0, 0, 3, 0, 1, 46, -1, 0.0011987019770020463, ["mov     rbx, r14", "mov     r14d, dword ptr [rbp+format]", "jmp     loc_99A5"], ["mov~rbx,r14", "mov~r14d,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 564, 0, 0, 5, 1, 1, 19, 51, 0.004403089226237874, ["mov     edi, [x_0]", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "test    edi, edi", "jnz     loc_5B31"], ["mov~edi,<TAG>", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "test~edi,edi", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 29, -1, 0.0061087422476803705, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jnz     short loc_61DA"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 562, 0, 1, 10, 2, 2, 19, 53, 0.00036631761606717287, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "xor     r15d, r15d", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    same_name", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "xor     eax, 1", "movzx   r8d, byte ptr [rbp+dst_backup]", "jmp     loc_71E2"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "xor~r15d,r15d", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "movzx~r9d,[yte ptr [rbp+0]", "xor~eax,0", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 568, 0, 0, 2, 1, 1, 18, 52, 0.005347352438359604, ["test    r15b, r15b", "jnz     loc_8193"], ["test~r15b,r15b", "jnz~FOO"]], [6, 0, 452, 0, 3, 19, 2, 4, 23, 40, 0.001134874988616223, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     byte ptr [rbp+earlier_file], r9b", "mov     r15d, 11h", "call    quotearg_style", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     dword ptr [rbp+new_dst], 1", "mov     [rbp+dst_backup], 0", "movzx   r9d, byte ptr [rbp+earlier_file]", "jmp     loc_5C98"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~r15d,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 457, 0, 0, 4, 1, 1, 22, 41, 0.005015251017793978, ["movzx   eax, byte ptr [x_0+2Eh]", "test    al, al", "mov     byte ptr [rbp+copied_as_regular], al", "jnz     loc_896B"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 0, 563, 0, 0, 3, 1, 1, 20, 51, 0.00014127559014666974, ["mov     edx, dword ptr [rbp+earlier_file]", "test    edx, edx", "jz      loc_5B31"], ["mov~edx,[word ptr [rbp+0]", "test~edx,edx", "jz~FOO"]], [2, 0, 669, 0, 0, 6, 0, 1, 3, 46, 0.0032215115631929994, ["cmp     dword ptr [x_0+4], 2", "lea     r10, [rbp+src_mode]", "mov     rsi, name; filename", "mov     edi, 1; ver", "mov     rdx, r10; stat_buf", "jz      loc_5F70"], ["cmp~[word ptr [x_0+0],0", "lea~r10,[rbp+0]", "mov~rsi,name", "mov~edi,0", "mov~rdx,r10", "jz~FOO"]], [0, 0, 670, 0, 0, 3, 1, 1, 3, 47, 0.00012843235467879067, ["mov     r12, [rbp+dst_name]", "xor     r15d, r15d", "jmp     loc_59BB"], ["mov~r12,[rbp+0]", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 670, 0, 0, 1, 0, 1, 4, 47, 2.9967549425051156e-05, ["jmp     loc_59BB"], ["jmp~FOO"]], [0, 0, 164, 0, 0, 6, 0, 0, 47, 7, 0.0014791126180507392, ["lea     eax, [r15+1]", "cmp     rax, qword ptr [rbp+var_2E0+8]", "mov     rcx, r14", "mov     rsi, r12", "mov     r15, rax", "jnb     loc_95DE"], ["lea~eax,[r15+0]", "cmp~rax,[word ptr [rbp+0]", "mov~rcx,r14", "mov~rsi,r12", "mov~r15,rax", "jnb~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 24, -1, 0.00555898041834699, ["mov     byte ptr [rbp+var_370], 1", "mov     byte ptr [rbp+restore_dst_mode_0], 0", "jmp     loc_77C4"], ["mov~[yte ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 90, 0, 0, 5, 1, 1, 23, -1, 0.0079756492255529, ["mov     r12d, [rbp+dst_sb.st_mode]", "mov     eax, r12d", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      loc_81CF"], ["mov~r12d,[rbp+0]", "mov~eax,r12d", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 8, -1, 3.103781904737441e-05, ["lea     rsi, aRNotSpecifiedO; \"-r not specified; omitting directory %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     dst_lstat_sb, rax; format"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~dst_lstat_sb,rax"]], [3, 0, 6, 0, 1, 7, 0, 2, 7, -1, 0.0001348539724127302, ["mov     name, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "cmp     byte ptr [x_0+19h], 0", "mov     r13, rax", "mov     edx, 5; category", "jnz     loc_7468"], ["mov~name,[rbp+0]", "mov~edi,0", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r13,rax", "mov~edx,0", "jnz~FOO"]], [2, 0, 562, 0, 0, 3, 1, 0, 21, 53, 2.697079448254604e-05, ["movzx   eax, byte ptr [x_0+18h]", "mov     r15d, 1", "xor     eax, 1"], ["movzx~eax,[yte ptr [x_0+0]", "mov~r15d,0", "xor~eax,0"]], [0, 0, 561, 0, 0, 2, 1, 1, 20, 52, 0.006905879062386729, ["test    al, al", "jz      loc_6FA0"], ["test~al,al", "jz~FOO"]], [1, 0, 562, 0, 2, 13, 2, 3, 26, 53, 0.0006550050088618324, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, rax; source", "mov     byte ptr [rbp+dst_backup], r9b", "call    same_name", "mov     rdi, r15; ptr", "xor     eax, 1", "xor     r15d, r15d", "mov     byte ptr [rbp+copied_as_regular], al", "call    free", "movzx   eax, byte ptr [rbp+copied_as_regular]", "movzx   r9d, byte ptr [rbp+dst_backup]", "movzx   r8d, byte ptr [rbp+earlier_file]", "jmp     loc_71E2"], ["mov~rsi,[rbp+0]", "mov~rdi,rax", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "mov~rdi,r15", "xor~eax,0", "xor~r15d,r15d", "mov~[yte ptr [rbp+0],al", "call~FOO", "movzx~eax,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 562, 0, 0, 3, 1, 1, 23, 53, 0.0012447235707619463, ["movzx   eax, byte ptr [x_0+18h]", "xor     eax, 1", "jmp     loc_71E2"], ["movzx~eax,[yte ptr [x_0+0]", "xor~eax,0", "jmp~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 32, -1, 7.70594128072744e-05, ["jmp     loc_6223"], ["jmp~FOO"]], [0, 0, 667, 0, 1, 6, 2, 2, 4, 45, 0.0022946580702610598, ["call    ___xstat", "test    eax, eax", "mov     rsi, name", "setnz   al", "test    al, al", "jnz     loc_5F85"], ["call~FOO", "test~eax,eax", "mov~rsi,name", "setnz~al", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, -1, 0.00215338248011439, ["test    r14b, r14b", "jz      short loc_6460"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 14, -1, 0.0032964304367556273, ["test    r13, r13", "jz      short loc_644E"], ["test~r13,r13", "jz~FOO"]], [1, 0, 8, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r13+0], 1"], ["mov~[yte ptr [r13+0],0"]], [5, 0, 4, 0, 4, 21, 3, 5, 22, -1, 0.0, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+dst_backup]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSSUnbackup; \"%s -> %s (unbackup)\\n\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rsi, rax", "mov     dst_lstat_sb, rbx", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_5F00"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rsi,rax", "mov~dst_lstat_sb,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 559, 0, 0, 1, 0, 1, 21, 51, 0.007708081819972087, ["jmp     loc_5B31"], ["jmp~FOO"]], [0, 0, 78, 0, 3, 11, 3, 4, 41, -1, 0.0037568247526250146, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_9299"], ["xor~edi,edi", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 79, 0, 1, 8, 1, 2, 41, -1, 0.001114150676838509, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSFailedToGetEx; \"%s: failed to get extents info\"", "jmp     loc_99C5"], ["mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 55, 0, 0, 4, 0, 0, 30, -1, 0.0003531889753666743, ["mov     r15d, dword ptr [rbp+length]", "mov     rbx, [rbp+x]", "mov     r14d, dword ptr [rbp+var_390]", "mov     rdi, [rbp+ptr]; ptr"], ["mov~r15d,[word ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[word ptr [rbp+0]", "mov~rdi,[rbp+0]"]], [1, 0, 538, 0, 0, 2, 0, 1, 12, 48, 0.04548583462479199, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6618"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 555, 0, 0, 4, 1, 1, 11, 49, 0.04785291427283024, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_71F0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 17, 0, 1, 4, 1, 2, 33, -1, 0.008741962275136352, ["call    cached_umask", "not     eax", "and     dword ptr [rbp+omitted_permissions], eax", "jz      loc_625F"], ["call~FOO", "not~eax", "and~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 32, -1, 0.013673764694801914, ["mov     eax, dword ptr [rbp+omitted_permissions]", "test    eax, eax", "jnz     loc_89EA"], ["mov~eax,[word ptr [rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 168, 0, 0, 2, 0, 1, 36, 13, 0.002027804177761795, ["mov     qword ptr [rbp+new_dst], rcx", "jmp     loc_903B"], ["mov~[word ptr [rbp+0],rcx", "jmp~FOO"]], [0, 0, 537, 0, 0, 1, 0, 1, 13, 51, 5.565402036080929e-05, ["jmp     loc_6B98"], ["jmp~FOO"]], [1, 1, 666, 0, 0, 5, 1, 1, 5, 44, 0.007192211862012278, ["mov     eax, [rbp+var_268]", "mov     [rbp+mode], eax", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6550"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 667, 0, 1, 6, 2, 2, 4, 45, 0.0022946580702610598, ["call    ___lxstat", "test    eax, eax", "mov     rsi, name; arg", "setnz   al", "test    al, al", "jz      loc_59EC"], ["call~FOO", "test~eax,eax", "mov~rsi,name", "setnz~al", "test~al,al", "jz~FOO"]], [0, 0, 164, 0, 0, 9, 0, 1, 41, 6, 0.020200268851729125, ["lea     rdx, [rax+rax*2]", "mov     rax, [rbp+var_2D0+8]", "mov     rdi, [rbp+length]", "lea     rax, [rax+rdx*8]", "mov     r14, [rax]", "mov     r12, [rax+8]", "lea     rax, [r14+r12]", "cmp     rdi, rax", "jge     short loc_9212"], ["lea~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "lea~rax,<TAG>", "mov~r14,<TAG>", "mov~r12,[rax+0]", "lea~rax,<TAG>", "cmp~rdi,rax", "jge~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 34, -1, 0.00752185490568784, ["cmp     byte ptr [rbp+var_370], 0", "jz      loc_625F"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 29, 0, 1, 9, 0, 2, 30, -1, 0.0013631667422990537, ["movzx   r8d, byte ptr [rbp+copied_as_regular]; new_dst", "mov     rsi, [rbp+dst_name]; dst_name", "lea     rcx, [rbp+src_mode]; src_sb", "lea     use_lstat, [rbp+dst_sb]; dst_sb", "mov     edx, 0FFFFFFFFh; dest_desc", "mov     rdi, rbx; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_5F00"], ["movzx~r8d,[yte ptr [rbp+0]", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "lea~use_lstat,[rbp+0]", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 430, 0, 0, 3, 1, 1, 13, 35, 0.005137581445664977, ["test    r15d, r15d", "mov     [rbp+earlier_file], 0", "jz      loc_5E5D"], ["test~r15d,r15d", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 36, 0.0049299491389342654, ["cmp     byte ptr [x_0+2Eh], 0", "jnz     loc_6338"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 660, 0, 0, 2, 1, 1, 4, 43, 0.028026080330156772, ["test    r14b, r14b", "jz      short loc_5A4A"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 661, 0, 0, 2, 1, 1, 3, 44, 0.010048047970911498, ["xor     r15d, r15d", "jmp     loc_5A08"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 671, 0, 0, 2, 0, 1, 3, 44, 0.005391661600723787, ["cmp     dword ptr [x_0+8], 2", "jz      loc_5A08"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 665, 0, 0, 3, 1, 1, 6, 44, 0.00016054044334848832, ["movzx   r12d, byte ptr [x_0+2Ah]", "test    r12b, r12b", "jnz     loc_5A08"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 54, 0, 1, 4, 0, 1, 29, -1, 0.0009247129536872927, ["call    free", "movzx   ecx, [rbp+restore_dst_mode]", "mov     rax, [rbp+format]", "mov     [rax], cl"], ["call~FOO", "movzx~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,cl"]], [0, 0, 429, 0, 0, 1, 0, 1, 14, 39, 0.0003317835829202092, ["jmp     loc_5D71"], ["jmp~FOO"]], [0, 0, 164, 1, 0, 4, 0, 0, 42, 6, 0.0, ["cmp     r14, rdi", "cmovg   r14, rdi", "sub     rdi, r14", "mov     r12, rdi"], ["cmp~r14,rdi", "cmovg~r14,rdi", "sub~rdi,r14", "mov~r12,rdi"]], [1, 0, 15, 0, 1, 3, 0, 2, 15, -1, 4.81621330045465e-05, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_643A"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 17, 0, 0, 4, 0, 0, 14, -1, 0.0012029830554913393, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8207"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 659, 0, 0, 3, 1, 1, 5, 43, 0.000284691719537986, ["mov     rdi, [x_0+48h]; ht", "test    rdi, rdi", "jz      short loc_5A4A"], ["mov~rdi,[x_0+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 28, 0, 0, 6, 2, 0, 31, -1, 0.00012843235467879067, ["mov     ecx, [rbp+mode]", "mov     edx, ecx", "and     dh, 0F1h", "test    eax, eax", "cmovnz  edx, ecx", "mov     [rbp+mode], edx"], ["mov~ecx,[rbp+0]", "mov~edx,ecx", "and~dh,0", "test~eax,eax", "cmovnz~edx,ecx", "mov~[rbp+0],edx"]], [0, 0, 526, 0, 0, 3, 0, 1, 15, 48, 0.001113080407216186, ["movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jmp     loc_6618"], ["movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 527, 0, 1, 8, 1, 2, 14, 49, 0.0003189403474523302, ["mov     rsi, [rbp+dst_name]; dst_name", "lea     dst_lstat_sb, [rbp+dst_sb.st_mode]; dst_sb", "mov     rdi, x_0; x", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    overwrite_ok", "test    al, al", "jnz     loc_8216"], ["mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~rdi,x_0", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 407, 0, 0, 4, 1, 1, 13, 40, 0.0098233645548125, ["test    r14b, r14b", "mov     dst_lstat_sb, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "jz      loc_73D0"], ["test~r14b,r14b", "mov~dst_lstat_sb,[rbp+0]", "mov~rdi,[rbp+0]", "jz~FOO"]], [1, 1, 427, 0, 0, 4, 1, 1, 12, 38, 0.010258322129324666, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6A18"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 9, 0, 0, 5, 1, 1, 36, -1, 0.0012746911201869974, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     [rbp+dst_mode], eax", "not     eax", "test    dword ptr [rbp+omitted_permissions], eax", "jnz     loc_626C"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "not~eax", "test~[word ptr [rbp+0],eax", "jnz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 36, -1, 0.0025868416771553087, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_sb]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_8A17"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 35, -1, 0.006297466457750036, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jnz     loc_9514"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 1, 658, 0, 0, 5, 1, 1, 6, 44, 0.00025686470935758134, ["mov     eax, [rbp+mode]", "lea     r10, [rbp+src_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_5A3B"], ["mov~eax,[rbp+0]", "lea~r10,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 17, -1, 2.140539244646511e-06, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 6, 0, 0, 2, 0, 1, 16, -1, 0.001185858741534167, ["cmp     byte ptr [x_0+31h], 0", "jz      loc_6C70"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 27, 0, 0, 3, 1, 1, 29, -1, 0.02709173494986857, ["mov     rax, 0FF0000000000FFh", "test    [rbx+18h], rax", "jnz     loc_8360"], ["mov~rax,0", "test~[rbx+0],rax", "jnz~FOO"]], [1, 0, 520, 0, 0, 2, 0, 1, 16, 46, 0.00121789547889571, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_7F57"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 1, 522, 0, 0, 2, 0, 1, 15, 45, 0.058063447010237475, ["cmp     r12d, 4000h", "jz      loc_7A30"], ["cmp~r12d,<STR>", "jz~FOO"]], [0, 0, 657, 0, 0, 3, 1, 1, 7, 44, 0.00017552421806101392, ["mov     r11d, [x_0]", "test    r11d, r11d", "jz      loc_6490"], ["mov~r11d,<TAG>", "test~r11d,r11d", "jz~FOO"]], [0, 0, 164, 0, 1, 6, 2, 2, 43, 7, 0.010426566660673157, ["xor     edx, edx; whence", "mov     rsi, r14; offset", "mov     edi, r13d; fd", "call    _lseek", "test    rax, rax", "js      loc_9EE1"], ["xor~edx,edx", "mov~rsi,r14", "mov~edi,r13d", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 30, -1, 0.020977284597535808, ["cmp     byte ptr [rbx+2Bh], 0", "jnz     loc_8692"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 405, 0, 1, 4, 0, 1, 14, 39, 0.0048506769089338275, ["mov     rsi, rdi; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     [rbp+earlier_file], rax"], ["mov~rsi,rdi", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 519, 0, 0, 4, 1, 1, 17, 45, 0.0014711926228455471, ["mov     ecx, [x_0]", "test    ecx, ecx", "mov     r15d, ecx", "jz      loc_7F57"], ["mov~ecx,<TAG>", "test~ecx,ecx", "mov~r15d,ecx", "jz~FOO"]], [1, 0, 209, 0, 0, 2, 0, 1, 29, 25, 0.00021084311559768136, ["mov     dword ptr [rbp+ptr], 0", "jmp     short loc_8B1F"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 217, 0, 0, 3, 1, 1, 28, 26, 0.004951067272867381, ["movzx   eax, byte ptr [x_0+16h]", "test    al, al", "jnz     loc_8D27"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [3, 0, 10, 0, 3, 17, 4, 4, 15, -1, 3.210808866969767e-05, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "xor     edi, edi; n", "mov     dword ptr [r12], 5Fh ; '_'", "mov     esi, 4; s", "call    quotearg_n_style", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r15, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     dst_lstat_sb, rax; format", "mov     rcx, r15", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6444"], ["mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~<TAG>,0", "mov~esi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "mov~dst_lstat_sb,rax", "mov~rcx,r15", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 13, 0, 1, 4, 0, 2, 14, -1, 0.001733836788163674, ["call    ___errno_location", "cmp     byte ptr [x_0+23h], 0", "mov     r12, rax", "jz      loc_7200"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r12,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 15, -1, 0.0005800861352992045, ["cmp     byte ptr [x_0+26h], 0", "jnz     loc_7200"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 653, 0, 1, 3, 0, 1, 7, 43, 0.005571823653814869, ["mov     rsi, [rbp+src_name]; file", "mov     rdx, r10; stats", "call    record_file"], ["mov~rsi,[rbp+0]", "mov~rdx,r10", "call~FOO"]], [0, 0, 654, 0, 0, 3, 0, 1, 9, 44, 0.0013934910482648788, ["mov     rdi, [x_0+48h]", "mov     r10, [rbp+dest_link_val]", "jmp     loc_5A3B"], ["mov~rdi,[x_0+0]", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 517, 0, 0, 2, 1, 1, 18, 44, 0.002250348907896877, ["test    r14b, r14b", "jnz     loc_6664"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 31, -1, 0.016098995658986412, ["movzx   eax, byte ptr [rbp+copied_as_regular]", "test    [rbx+20h], al", "jnz     loc_8A36"], ["movzx~eax,[yte ptr [rbp+0]", "test~[rbx+0],al", "jnz~FOO"]], [0, 0, 405, 0, 1, 4, 0, 2, 14, 39, 0.0048506769089338275, ["mov     rsi, dst_lstat_sb; dev", "call    src_to_dest_lookup", "mov     [rbp+earlier_file], rax", "jmp     loc_6A45"], ["mov~rsi,dst_lstat_sb", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 164, 1, 0, 5, 0, 1, 44, 6, 0.007284255049532077, ["mov     eax, [rbp+var_398]", "cmp     eax, 3", "setz    dl", "sub     eax, 1", "jz      loc_9723"], ["mov~eax,[rbp+0]", "cmp~eax,0", "setz~dl", "sub~eax,0", "jz~FOO"]], [3, 0, 77, 0, 4, 19, 4, 5, 30, -1, 0.0015320909643557403, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+restore_dst_mode_0], rax", "call    ___errno_location", "mov     rdx, [rbp+restore_dst_mode_0]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0", "jmp     loc_929C"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 652, 0, 0, 4, 0, 1, 5, 42, 0.037412344917931724, ["mov     eax, [x_0+4]", "mov     dword ptr [rbp+dest_link_val], 1", "cmp     eax, 4", "jz      short loc_5A6E"], ["mov~eax,[x_0+0]", "mov~[word ptr [rbp+0],0", "cmp~eax,0", "jz~FOO"]], [1, 0, 197, 0, 0, 2, 0, 1, 28, 21, 0.0036298194241093213, ["cmp     byte ptr [x_0+23h], 0", "jz      short loc_9A7C"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 224, 0, 0, 2, 0, 0, 27, 22, 0.006596606817189386, ["cmp     dword ptr [rbp+dest_link_val], 0", "jns     loc_9A59"], ["cmp~[word ptr [rbp+0],0", "jns~FOO"]], [2, 2, 6, 0, 1, 11, 2, 2, 32, -1, 6.4216177339395335e-06, ["mov     eax, [rbp+mode]", "mov     edx, 1B6h", "mov     ebx, 1FFh", "and     eax, 7000h", "cmp     eax, 4000h", "cmovnz  ebx, edx", "call    cached_umask", "not     eax", "mov     edx, eax", "and     edx, ebx", "jmp     loc_8695"], ["mov~eax,[rbp+0]", "mov~edx,0", "mov~ebx,0", "and~eax,<STR>", "cmp~eax,<STR>", "cmovnz~ebx,edx", "call~FOO", "not~eax", "mov~edx,eax", "and~edx,ebx", "jmp~FOO"]], [1, 1, 500, 0, 0, 4, 1, 1, 18, 43, 0.013271842775965454, ["mov     edx, [rbp+var_268]", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_809C"], ["mov~edx,[rbp+0]", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [1, 0, 503, 0, 0, 2, 0, 1, 18, 43, 0.0017868508101227525, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_7A50"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 502, 0, 0, 4, 1, 1, 17, 44, 0.009143955545280967, ["mov     ecx, [x_0]", "test    ecx, ecx", "mov     r15d, ecx", "jnz     loc_7A50"], ["mov~ecx,<TAG>", "test~ecx,ecx", "mov~r15d,ecx", "jnz~FOO"]], [1, 0, 196, 0, 0, 2, 0, 1, 29, 20, 0.0008947454042622417, ["cmp     byte ptr [x_0+26h], 0", "jnz     short loc_9A7C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 33, -1, 0.0025343984656614692, ["cmp     [rbp+restore_dst_mode], 0", "jz      loc_6466"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 7, 0, 3, 16, 4, 4, 18, -1, 0.0010741225929636192, ["mov     rsi, cs:top_level_src_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWarningSourceD; \"warning: source directory %s specified \"...", "xor     edi, edi; domainname", "mov     r12, rax", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "call    _error", "cmp     byte ptr [x_0+18h], 0", "jnz     loc_6C5A"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 401, 0, 1, 5, 1, 2, 17, 39, 0.005372325396213814, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, [rbp+dst_name]; source", "call    same_name", "test    al, al", "jnz     loc_822B"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 651, 0, 0, 5, 1, 0, 6, 42, 0.0, ["cmp     eax, 3", "setz    al", "movzx   eax, al", "and     eax, r14d", "mov     dword ptr [rbp+dest_link_val], eax"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "and~eax,r14d", "mov~[word ptr [rbp+0],eax"]], [0, 0, 591, 0, 1, 12, 1, 2, 22, 54, 0.00036496194121223013, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+earlier_file], r8b", "mov     [rbp+dst_backup], r10", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    same_name", "test    al, al", "mov     r15d, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "mov     r10, [rbp+dst_backup]", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_8A63"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],r10", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "mov~r15d,eax", "movzx~r9d,[yte ptr [rbp+0]", "mov~r10,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 19, -1, 2.3331877766646972e-05, ["jmp     loc_6460"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 14, -1, 0.0, ["mov     byte ptr [r13+0], 1", "jmp     loc_6460"], ["mov~[yte ptr [r13+0],0", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 13, -1, 0.00073871793115455, ["test    r13, r13", "jz      loc_6460"], ["test~r13,r13", "jz~FOO"]], [1, 0, 650, 0, 0, 2, 0, 1, 6, 41, 0.040079456816761276, ["cmp     byte ptr [rbp+copied_as_regular], 0", "jnz     loc_5C80"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 648, 0, 0, 2, 0, 1, 7, 46, 0.01283645709360435, ["cmp     r15d, 11h", "jz      loc_6528"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 514, 0, 1, 10, 1, 2, 18, 46, 0.0011109398679715393, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "lea     dst_lstat_sb, [rbp+dst_sb]; stats", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    seen_file", "test    al, al", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jnz     loc_8652"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 516, 0, 0, 2, 0, 1, 17, 44, 0.0024439963582292314, ["cmp     ecx, 3", "jnz     loc_7249"], ["cmp~ecx,0", "jnz~FOO"]], [2, 0, 349, 0, 1, 4, 0, 2, 24, 35, 0.0011205722945724487, ["mov     esi, 0Ah; int", "call    ___overflow", "mov     dword ptr [rbp+new_dst], 1", "jmp     loc_5E5D"], ["mov~esi,0", "call~FOO", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 351, 0, 0, 4, 0, 0, 23, 36, 0.0026457065063830876, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8A6F"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 7, 0, 1, 6, 2, 2, 34, -1, 0.0013078694784790183, ["mov     esi, [rbp+dst_mode]", "or      esi, dword ptr [rbp+omitted_permissions]; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "test    eax, eax", "jz      loc_6466"], ["mov~esi,[rbp+0]", "or~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 89, 0, 1, 7, 1, 2, 38, -1, 0.0, ["mov     edx, dword ptr [rbp+ptr]", "mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; desc", "not     edx", "and     edx, [rbp+var_3A4]; mode", "call    fchmod_or_lchmod", "jmp     loc_939A"], ["mov~edx,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "not~edx", "and~edx,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 1, 90, 0, 1, 6, 1, 2, 37, -1, 0.0008861832472836556, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; desc", "mov     edx, 180h; mode", "call    fchmod_or_lchmod", "test    eax, eax", "jnz     loc_939A"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "mov~edx,<STR>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 512, 0, 0, 2, 0, 1, 19, 45, 0.0015133612459650833, ["cmp     r12d, 4000h", "jz      short loc_72A9"], ["cmp~r12d,<STR>", "jz~FOO"]], [0, 0, 78, 0, 1, 2, 0, 1, 46, -1, 0.003756646374354627, ["mov     rdi, [rbp+var_2D0+8]; ptr", "call    free"], ["mov~rdi,[rbp+0]", "call~FOO"]], [0, 0, 79, 0, 3, 11, 3, 4, 45, -1, 0.0023685066742013647, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_928D"], ["xor~edi,edi", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 79, 0, 0, 3, 0, 0, 45, -1, 0.0018611988732201415, ["mov     r15d, dword ptr [rbp+x]", "mov     rbx, [rbp+var_390]", "mov     r14d, [rbp+var_394]"], ["mov~r15d,[word ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]"]], [2, 0, 645, 0, 0, 4, 1, 1, 8, 45, 0.007833303365783908, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_64C8"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 647, 0, 0, 2, 0, 1, 8, 46, 0.007395206333712924, ["cmp     dword ptr [x_0+8], 2", "jnz     loc_5A85"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 77, 0, 0, 1, 1, 0, 36, -1, 0.014119710370769934, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 97, 0, 1, 9, 0, 2, 35, -1, 0.002826938829096492, ["movzx   r8d, byte ptr [rbp+copied_as_regular]; new_dst", "mov     r9, [rbp+var_370]; dst_sb", "lea     rcx, [rbp+src_mode]; src_sb", "mov     edx, dword ptr [rbp+dest_link_val]; dest_desc", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, rbx; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_9299"], ["movzx~r8d,[yte ptr [rbp+0]", "mov~r9,[rbp+0]", "lea~rcx,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,rbx", "call~FOO", "cmp~eax,0", "jz~FOO"]], [2, 0, 78, 0, 3, 15, 3, 4, 48, -1, 0.0005428050767882777, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorDeallocat; \"error deallocating %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     [rbp+format], rax", "call    _dcgettext", "mov     rcx, [rbp+format]", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_9299"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 229, 0, 0, 3, 0, 1, 24, 23, 0.09695786562550837, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jz      loc_8A88"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 1, 511, 0, 0, 5, 1, 1, 20, 45, 0.0001327134331680837, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_6C9D"], ["mov~eax,[rbp+0]", "mov~edx,eax", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [1, 0, 493, 0, 1, 11, 0, 2, 19, 43, 0.009610985532808758, ["mov     rdi, [rbp+src_name]; name", "mov     dword ptr [rbp+earlier_file], ecx", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "mov     r12, rax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "mov     ecx, dword ptr [rbp+earlier_file]", "jnz     loc_66F3"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],ecx", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "mov~ecx,[word ptr [rbp+0]", "jnz~FOO"]], [0, 0, 494, 0, 0, 1, 0, 1, 20, 44, 0.0001905079927735395, ["jmp     loc_7A68"], ["jmp~FOO"]], [0, 0, 506, 0, 0, 2, 0, 0, 16, 44, 0.05482616680794225, ["mov     ecx, [x_0]", "mov     r15d, ecx"], ["mov~ecx,<TAG>", "mov~r15d,ecx"]], [0, 1, 511, 0, 0, 2, 0, 1, 15, 45, 0.05979821136540717, ["cmp     r12d, 4000h", "jz      loc_72A9"], ["cmp~r12d,<STR>", "jz~FOO"]], [1, 0, 492, 0, 0, 2, 0, 1, 20, 43, 0.0007925346553303707, ["mov     eax, 1", "jmp     loc_66B7"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 505, 0, 0, 3, 1, 1, 17, 43, 0.11136612068645665, ["movzx   eax, byte ptr [x_0+18h]", "test    al, al", "jnz     loc_7D70"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [0, 0, 517, 0, 0, 4, 1, 1, 16, 44, 0.05733359447912118, ["mov     ecx, [x_0]", "test    r14b, r14b", "mov     r15d, ecx", "jz      loc_72AE"], ["mov~ecx,<TAG>", "test~r14b,r14b", "mov~r15d,ecx", "jz~FOO"]], [0, 0, 76, 0, 1, 6, 1, 1, 31, -1, 0.020828517120032877, ["mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     byte ptr [rbp+format], r8b", "call    _close", "test    eax, eax", "movzx   r8d, byte ptr [rbp+format]", "jns     loc_7D21"], ["mov~edi,[word ptr [rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jns~FOO"]], [2, 0, 81, 0, 0, 3, 0, 1, 38, -1, 0.002777349669928848, ["cmp     dword ptr [rbp+ptr], 0", "mov     r8d, 1", "jz      loc_929C"], ["cmp~[word ptr [rbp+0],0", "mov~r8d,0", "jz~FOO"]], [0, 0, 80, 0, 1, 6, 1, 2, 39, -1, 0.001804474583237009, ["mov     byte ptr [rbp+format], r8b", "call    cached_umask", "not     eax", "test    dword ptr [rbp+ptr], eax", "movzx   r8d, byte ptr [rbp+format]", "jz      loc_929C"], ["mov~[yte ptr [rbp+0],r8b", "call~FOO", "not~eax", "test~[word ptr [rbp+0],eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 79, 0, 1, 7, 1, 2, 40, -1, 0.0009097291789747673, ["mov     edx, [rbp+var_3A4]; mode", "mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; desc", "call    fchmod_or_lchmod", "test    eax, eax", "movzx   r8d, byte ptr [rbp+format]", "jz      loc_929C"], ["mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 77, 0, 0, 3, 1, 1, 38, -1, 0.00032964304367556275, ["movzx   r8d, byte ptr [rbx+24h]", "xor     r8d, 1", "jmp     loc_929C"], ["movzx~r8d,[yte ptr [rbx+0]", "xor~r8d,0", "jmp~FOO"]], [1, 0, 79, 0, 1, 9, 1, 2, 36, -1, 0.0034883654556922645, ["mov     r8d, [rbp+var_340]; mode", "mov     ecx, dword ptr [rbp+dest_link_val]; dest_desc", "mov     esi, r13d; source_desc", "mov     rdx, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    copy_acl", "test    eax, eax", "mov     r8d, 1", "jz      loc_929C"], ["mov~r8d,[rbp+0]", "mov~ecx,[word ptr [rbp+0]", "mov~esi,r13d", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "mov~r8d,0", "jz~FOO"]], [5, 0, 77, 0, 5, 26, 5, 6, 34, -1, 0.0006592860873511255, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aFailedToCloneS; \"failed to clone %s from %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+format], rax", "call    _dcgettext", "mov     [rbp+restore_dst_mode_0], rax", "call    ___errno_location", "mov     rcx, [rbp+format]", "mov     esi, [rax]; errnum", "mov     r8, r12", "mov     rdx, [rbp+restore_dst_mode_0]; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0", "jmp     loc_929C"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~r8,r12", "mov~rdx,[rbp+0]", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 77, 0, 1, 7, 1, 2, 37, -1, 0.00016482152183778137, ["mov     edx, [rbx+10h]; mode", "mov     esi, dword ptr [rbp+dest_link_val]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    r8b", "jmp     loc_929C"], ["mov~edx,[rbx+0]", "mov~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~r8b", "jmp~FOO"]], [0, 0, 494, 0, 0, 2, 1, 1, 18, 42, 0.058679422853538596, ["test    ecx, ecx", "jnz     loc_6677"], ["test~ecx,ecx", "jnz~FOO"]], [1, 0, 366, 0, 0, 2, 0, 1, 17, 39, 0.012965424583094307, ["cmp     r15d, 16h", "jz      loc_7480"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 386, 0, 1, 4, 1, 2, 18, 40, 0.0013421181063933624, ["call    ___errno_location", "mov     r15d, [rax]", "test    r15d, r15d", "jnz     loc_5DC6"], ["call~FOO", "mov~r15d,<TAG>", "test~r15d,r15d", "jnz~FOO"]], [1, 0, 388, 0, 0, 2, 0, 1, 16, 40, 0.01404104555352918, ["cmp     r15d, 11h", "jz      loc_6400"], ["cmp~r15d,0", "jz~FOO"]], [3, 1, 644, 0, 0, 10, 3, 1, 9, 44, 0.004395062204070449, ["cmp     eax, 4000h", "mov     r8d, 100h; flag", "setz    r9b", "cmp     eax, 0A000h", "setz    al", "or      eax, r9d", "movzx   r9d, byte ptr [x_0+14h]", "xor     r9d, 1", "or      r9b, al", "jz      loc_64C8"], ["cmp~eax,<STR>", "mov~r8d,0", "setz~r9b", "cmp~eax,0", "setz~al", "or~eax,r9d", "movzx~r9d,[yte ptr [x_0+0]", "xor~r9d,0", "or~r9b,al", "jz~FOO"]], [2, 0, 6, 0, 4, 16, 3, 4, 35, -1, 5.6724289983132546e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r14", "mov     dst_lstat_sb, r13; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r14", "mov~dst_lstat_sb,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [5, 0, 12, 0, 4, 23, 5, 4, 17, -1, 0.00259519163349016, ["mov     dst_lstat_sb, cs:top_level_dst_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, cs:top_level_src_name; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aCannotCopyADir; \"cannot copy a directory, %s, into itsel\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     dst_lstat_sb, rax; format", "mov     rcx, r12", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+var_340]", "mov     byte ptr [rax], 1"], ["mov~dst_lstat_sb,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,<TAG>", "mov~esi,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~dst_lstat_sb,rax", "mov~rcx,r12", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~<TAG>,0"]], [0, 0, 403, 0, 1, 5, 1, 2, 16, 40, 0.008179430414923977, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, [rbp+src_name]; source", "call    same_name", "test    al, al", "jz      loc_7AB8"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 3, 0, 3, 16, 4, 4, 23, -1, 0.0001155891192109116, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotBackupS; \"cannot backup %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     x_0, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "xor     r12d, r12d", "call    _error", "jmp     loc_6466"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~x_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "xor~r12d,r12d", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 31, -1, 0.00128539381641023, ["cmp     byte ptr [rbx+24h], 0", "jnz     loc_5F00"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 8, 1, 2, 30, -1, 0.00371490585908402, ["mov     r8d, [rbp+mode]; mode", "mov     rdx, [rbp+dst_name]; dst_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdi, [rbp+src_name]; src_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jnz     loc_62CC"], ["mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,0", "mov~rdi,[rbp+0]", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 0, 12, 0, 4, 22, 5, 5, 20, -1, 9.311345714212323e-05, ["mov     rdx, [rbp+earlier_file]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aWillNotCreateH; \"will not create hard link %s to directo\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r13", "mov     rdx, rax; format", "mov     rcx, r12", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6ACE"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r13", "mov~rdx,rax", "mov~rcx,r12", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 32, -1, 6.4216177339395335e-06, ["jmp     loc_6466"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    restore_default_fscreatecon_or_die"], ["call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 18, -1, 0.00021512419408697438, ["jmp     loc_6AD8"], ["jmp~FOO"]], [0, 0, 78, 0, 0, 3, 1, 1, 29, -1, 0.0060373909395254844, ["movzx   r8d, byte ptr [x_0+25h]", "test    r8b, r8b", "jnz     loc_6AD8"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [1, 1, 468, 0, 0, 6, 2, 1, 19, 41, 0.06252729187536923, ["mov     edx, [rbp+dst_sb.st_mode]", "and     edx, 0F000h", "cmp     edx, 4000h", "setz    r12b", "or      r12b, al", "jz      loc_7F97"], ["mov~edx,[rbp+0]", "and~edx,0", "cmp~edx,<STR>", "setz~r12b", "or~r12b,al", "jz~FOO"]], [1, 0, 491, 0, 0, 6, 2, 1, 21, 42, 0.0034098790167218923, ["xor     edx, edx", "cmp     byte ptr [srcbase+1], 2Eh ; '.'", "setz    dl", "movzx   edx, byte ptr [srcbase+dst_lstat_sb+1]", "test    dl, dl", "jz      loc_72C2"], ["xor~edx,edx", "cmp~[yte ptr [srcbase+0],0", "setz~dl", "movzx~edx,[yte ptr [srcbase+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 490, 0, 0, 2, 0, 1, 22, 42, 0.0005222915756937488, ["cmp     dl, 2Fh ; '/'", "jz      loc_72C2"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 76, 0, 2, 11, 2, 2, 24, -1, 0.0003253619651862697, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSkippingFileSA; \"skipping file %s, as it was replaced wh\"...", "mov     dst_mode_bits, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_mode_bits,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi"]], [0, 0, 230, 0, 0, 3, 0, 1, 23, 24, 0.09790398397164213, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+ino], rax", "jnz     short loc_7CDB"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 460, 0, 1, 6, 1, 2, 21, 42, 0.004314224415172246, ["mov     rdi, [rbp+dst_name]; name", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    _unlink", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "jz      loc_82D4"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 395, 0, 0, 2, 0, 1, 19, 39, 0.0011248533730617415, ["cmp     eax, 3", "jnz     short loc_7AED"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 415, 0, 0, 2, 0, 1, 13, 36, 0.008616171772140023, ["cmp     byte ptr [x_0+22h], 0", "jz      loc_5E52"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 422, 0, 0, 3, 1, 1, 12, 37, 0.026184077738751352, ["movzx   eax, byte ptr [x_0+18h]", "test    al, al", "jz      loc_62E0"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jz~FOO"]], [1, 0, 414, 0, 0, 2, 0, 1, 14, 36, 0.0026350038101598553, ["cmp     byte ptr [x_0+17h], 0", "jnz     loc_5E52"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 88, 0, 0, 3, 1, 1, 35, -1, 0.011333441787321727, ["mov     rax, 0FF0000000000FFh", "test    [rbx+18h], rax", "jnz     loc_95A8"], ["mov~rax,0", "test~[rbx+0],rax", "jnz~FOO"]], [2, 0, 452, 0, 0, 4, 0, 1, 20, 40, 0.12855653838739298, ["mov     byte ptr [rbp+copied_as_regular], r8b", "mov     r15d, 11h", "mov     [rbp+dst_backup], 0", "jmp     loc_5C98"], ["mov~[yte ptr [rbp+0],r8b", "mov~r15d,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 472, 0, 0, 4, 1, 1, 20, 41, 0.00420566015657331, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_72E1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 495, 0, 0, 2, 1, 1, 19, 41, 0.06114343325370527, ["test    ecx, ecx", "jz      loc_72E1"], ["test~ecx,ecx", "jz~FOO"]], [1, 0, 464, 0, 0, 2, 0, 1, 22, 41, 0.002678917297087906, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_72E1"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 453, 0, 0, 1, 0, 1, 24, 41, 0.0008059130256094114, ["jmp     loc_72E1"], ["jmp~FOO"]], [1, 0, 219, 0, 0, 2, 0, 1, 27, 20, 0.07811416352007397, ["cmp     dword ptr [rbp+dest_link_val], 0", "js      loc_8AF5"], ["cmp~[word ptr [rbp+0],0", "js~FOO"]], [0, 0, 413, 0, 0, 1, 0, 1, 16, 40, 0.0012297397960494207, ["jmp     loc_62F4"], ["jmp~FOO"]], [2, 0, 638, 0, 1, 11, 1, 2, 10, 43, 0.016913470841574407, ["lea     r12, [rbp+dst_sb]", "mov     rdx, [rbp+dst_name]; filename", "mov     esi, 0FFFFFF9Ch; fildes", "mov     edi, 1; ver", "mov     byte ptr [rbp+copied_as_regular], r9b", "mov     rcx, r12; stat_buf", "call    ___fxstatat", "test    eax, eax", "mov     dword ptr [rbp+new_dst], eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "jnz     loc_5F10"], ["lea~r12,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~rcx,r12", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],eax", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 643, 0, 0, 4, 1, 1, 9, 44, 0.0046861755413423745, ["movzx   r9d, byte ptr [x_0+18h]", "mov     r8d, 100h", "test    r9b, r9b", "jnz     loc_5AC7"], ["movzx~r9d,[yte ptr [x_0+0]", "mov~r8d,0", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 642, 0, 0, 3, 1, 1, 10, 44, 0.0002247566206878837, ["movzx   r9d, byte ptr [x_0+2Ch]", "test    r9b, r9b", "jnz     loc_5AC7"], ["movzx~r9d,[yte ptr [x_0+0]", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 641, 0, 0, 3, 1, 1, 11, 44, 0.0001541188256145488, ["movzx   r9d, byte ptr [x_0+17h]", "test    r9b, r9b", "jnz     loc_5AC7"], ["movzx~r9d,[yte ptr [x_0+0]", "test~r9b,r9b", "jnz~FOO"]], [1, 0, 640, 0, 0, 4, 1, 1, 12, 44, 7.919995205192091e-05, ["mov     r10d, [x_0]", "mov     r9d, 1", "test    r10d, r10d", "jnz     loc_5AC7"], ["mov~r10d,<TAG>", "mov~r9d,0", "test~r10d,r10d", "jnz~FOO"]], [1, 0, 639, 1, 0, 6, 2, 1, 13, 44, 0.0, ["movzx   r9d, byte ptr [x_0+15h]", "xor     r8d, r8d", "test    r9b, r9b", "setnz   r8b", "shl     r8d, 8", "jmp     loc_5AC7"], ["movzx~r9d,[yte ptr [x_0+0]", "xor~r8d,r8d", "test~r9b,r9b", "setnz~r8b", "shl~r8d,0", "jmp~FOO"]], [0, 0, 630, 0, 0, 1, 1, 0, 11, 53, 0.007997054617999365, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 411, 0, 0, 3, 1, 1, 16, 38, 0.003923073300625893, ["test    r14b, r14b", "mov     edx, [x_0+4]", "jz      short loc_6313"], ["test~r14b,r14b", "mov~edx,[x_0+0]", "jz~FOO"]], [2, 0, 75, 0, 4, 18, 4, 5, 32, -1, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToCloseS; \"failed to close %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+dest_link_val], rax", "call    ___errno_location", "mov     rdx, [rbp+dest_link_val]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "jmp     loc_7D21"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "jmp~FOO"]], [1, 0, 629, 0, 0, 2, 0, 1, 12, 52, 0.012544558891942725, ["cmp     dword ptr [x_0+8], 2", "jz      short loc_5B2E"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 630, 0, 0, 1, 0, 1, 14, 53, 0.00195103017018714, ["jmp     loc_5B07"], ["jmp~FOO"]], [1, 0, 105, 0, 0, 1, 0, 0, 31, -1, 0.01983780420630232, ["mov     [rbp+restore_dst_mode_0], 0"], ["mov~[rbp+0],0"]], [1, 0, 189, 0, 0, 2, 0, 1, 30, 17, 0.07863484969133423, ["cmp     byte ptr [rbp+format], 0", "jz      loc_930E"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 187, 0, 1, 7, 2, 2, 32, 17, 0.00180376107015546, ["mov     edi, dword ptr [rbp+dest_link_val]; fd", "xor     eax, eax", "mov     edx, r13d", "mov     esi, 40049409h; request", "call    _ioctl", "test    eax, eax", "jz      loc_930E"], ["mov~edi,[word ptr [rbp+0]", "xor~eax,eax", "mov~edx,r13d", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 132, 0, 0, 6, 0, 1, 39, -1, 0.019008702005542565, ["cmp     byte ptr [rbp+var_2D0+1], 0", "mov     rdx, r14", "mov     r15d, dword ptr [rbp+x]", "mov     rbx, [rbp+var_390]", "mov     r14d, [rbp+var_394]", "jnz     loc_9639"], ["cmp~[yte ptr [rbp+0],0", "mov~rdx,r14", "mov~r15d,[word ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "jnz~FOO"]], [4, 0, 429, 0, 0, 5, 0, 1, 24, 39, 0.0023710086031886136, ["mov     dword ptr [rbp+new_dst], 1", "mov     [rbp+dst_backup], 0", "mov     r15d, 11h", "mov     byte ptr [rbp+copied_as_regular], 1", "jmp     loc_5D71"], ["mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~r15d,0", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 209, 0, 0, 4, 1, 1, 28, 23, 0.005336364336903752, ["movzx   eax, byte ptr [x_0+18h]", "mov     r8d, 11h", "test    al, al", "jz      loc_9E21"], ["movzx~eax,[yte ptr [x_0+0]", "mov~r8d,0", "test~al,al", "jz~FOO"]], [3, 0, 209, 0, 2, 20, 3, 3, 27, 22, 0.012724435539801186, ["mov     eax, dword ptr [rbp+ptr]", "mov     rdi, [rbp+dst_name]; file", "mov     esi, 0C1h; flags", "not     eax", "and     eax, [rbp+var_3A4]", "mov     edx, eax", "mov     dword ptr [rbp+restore_dst_mode_0], eax", "xor     eax, eax", "call    open_safer", "mov     dword ptr [rbp+dest_link_val], eax", "call    ___errno_location", "mov     r8d, [rax]", "mov     r12, rax", "mov     eax, dword ptr [rbp+dest_link_val]", "shr     eax, 1Fh", "cmp     r8d, 11h", "setz    dl", "and     dl, al", "mov     byte ptr [rbp+copied_as_regular], dl", "jnz     loc_8B0D"], ["mov~eax,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "not~eax", "and~eax,[rbp+0]", "mov~edx,eax", "mov~[word ptr [rbp+0],eax", "xor~eax,eax", "call~FOO", "mov~[word ptr [rbp+0],eax", "call~FOO", "mov~r8d,<TAG>", "mov~r12,rax", "mov~eax,[word ptr [rbp+0]", "shr~eax,0", "cmp~r8d,0", "setz~dl", "and~dl,al", "mov~[yte ptr [rbp+0],dl", "jnz~FOO"]], [1, 0, 112, 0, 0, 2, 0, 1, 40, -1, 0.0037908950022689713, ["cmp     byte ptr [rbp+var_2D0], 0", "jz      loc_9BA5"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 124, 0, 0, 2, 0, 1, 41, -1, 0.0018686907605764043, ["cmp     byte ptr [rbp+format], 0", "jz      loc_9319"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 110, 0, 0, 2, 0, 1, 43, -1, 0.004193316380262516, ["cmp     [rbp+var_398], 3", "jnz     loc_9319"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 109, 0, 0, 2, 1, 1, 44, -1, 0.003270743965819869, ["test    r12b, r12b", "jz      loc_9319"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 108, 1, 1, 7, 1, 1, 45, -1, 0.002501398485639836, ["mov     rcx, [rbp+length]", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     esi, 3; mode", "sub     rcx, rdx; len", "call    _fallocate", "test    eax, eax", "jns     loc_9319"], ["mov~rcx,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "mov~esi,0", "sub~rcx,rdx", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 107, 0, 1, 5, 0, 2, 46, -1, 0.0018528150945119424, ["call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "cmp     eax, 26h ; '&'", "jz      loc_9319"], ["call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 106, 0, 0, 2, 0, 1, 47, -1, 0.0011999506248947568, ["cmp     eax, 5Fh ; '_'", "jz      loc_9319"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 105, 0, 0, 3, 0, 1, 45, -1, 0.0004045619172381906, ["mov     rbx, r14", "mov     r14d, dword ptr [rbp+format]", "jmp     loc_9319"], ["mov~rbx,r14", "mov~r14d,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 628, 0, 0, 4, 0, 1, 13, 53, 0.007048082219539413, ["mov     rax, [rbp+ino]", "mov     rcx, [rbp+dst_sb.st_ino]", "cmp     rax, rcx", "jz      loc_6E60"], ["mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "cmp~rax,rcx", "jz~FOO"]], [1, 0, 570, 0, 1, 10, 1, 2, 24, 53, 0.003338170952026234, ["mov     rsi, [rbp+src_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    ___xstat", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jz      loc_762F"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 572, 0, 0, 4, 1, 1, 23, 54, 0.0032600412695966367, ["mov     eax, [r10+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_8E23"], ["mov~eax,[r10+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 627, 0, 0, 3, 0, 1, 14, 52, 0.001854777255486202, ["mov     rsi, [rbp+dst_sb.st_dev]", "cmp     [rbp+src_mode], rsi", "jnz     loc_5B24"], ["mov~rsi,[rbp+0]", "cmp~[rbp+0],rsi", "jnz~FOO"]], [0, 0, 390, 0, 0, 2, 1, 1, 17, 36, 0.017927194552184916, ["test    al, al", "jnz     loc_5DBC"], ["test~al,al", "jnz~FOO"]], [0, 0, 559, 0, 0, 1, 1, 0, 13, 51, 0.02625949329155, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [2, 0, 574, 0, 0, 4, 1, 1, 22, 52, 0.007151541616363994, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_5B2E"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 595, 0, 0, 4, 1, 1, 19, 52, 0.0044510373053179555, ["mov     edx, [r12+18h]", "and     edx, 0F000h", "cmp     edx, 0A000h", "jz      loc_5B2E"], ["mov~edx,[r12+0]", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 560, 0, 0, 1, 0, 1, 27, 52, 6.4216177339395335e-06, ["jmp     loc_5B2E"], ["jmp~FOO"]], [0, 0, 560, 0, 0, 1, 0, 1, 25, 52, 0.00357684107780432, ["jmp     loc_5B2E"], ["jmp~FOO"]], [0, 0, 349, 0, 0, 1, 0, 1, 18, 35, 0.016308768504961768, ["jmp     loc_5E5D"], ["jmp~FOO"]], [1, 0, 558, 0, 0, 2, 0, 1, 10, 50, 0.09606097968200154, ["cmp     byte ptr [x_0+2Dh], 0", "jz      loc_65A8"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 559, 0, 0, 5, 3, 1, 9, 51, 0.007571800821396261, ["xor     r8d, r8d", "xor     r9d, r9d", "xor     r15d, r15d", "mov     dword ptr [rbp+new_dst], 0", "jmp     loc_5B31"], ["xor~r8d,r8d", "xor~r9d,r9d", "xor~r15d,r15d", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 624, 0, 0, 3, 1, 1, 15, 51, 0.002965717123457741, ["movzx   r15d, byte ptr [x_0+17h]", "test    r15b, r15b", "jnz     loc_5B31"], ["movzx~r15d,[yte ptr [x_0+0]", "test~r15b,r15b", "jnz~FOO"]], [1, 0, 615, 0, 1, 11, 1, 2, 17, 51, 0.0020827446850410552, ["lea     r12, [rbp+dot_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "mov     dst_lstat_sb, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jnz     loc_5B31"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 614, 0, 1, 10, 1, 2, 18, 51, 0.0008968859435068882, ["lea     rax, [rbp+timespec]", "mov     rsi, [rbp+src_name]; filename", "mov     edi, 1; ver", "mov     dst_lstat_sb, rax; stat_buf", "mov     [rbp+var_370], rax", "call    ___lxstat", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jnz     loc_5B31"], ["lea~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~dst_lstat_sb,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 564, 0, 0, 2, 0, 1, 19, 51, 0.005910028854469018, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_5B31"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 563, 0, 0, 2, 0, 1, 20, 51, 0.0004430916236418278, ["cmp     dword ptr [x_0+4], 2", "jz      loc_5B31"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 562, 0, 0, 2, 0, 1, 21, 51, 0.0003082376512290976, ["cmp     edi, 0A000h", "jnz     loc_5B31"], ["cmp~edi,0", "jnz~FOO"]], [2, 0, 561, 0, 0, 4, 1, 1, 22, 51, 0.00017038692387386228, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_5B31"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 563, 0, 0, 4, 1, 1, 27, 51, 0.0054112832104663815, ["xor     r15d, r15d", "mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     loc_5B31"], ["xor~r15d,r15d", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 562, 0, 0, 3, 0, 1, 28, 51, 0.0004580753983543533, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "jnz     loc_5B31"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 559, 0, 0, 5, 1, 1, 30, 51, 0.001185858741534167, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "setnz   r15b", "jmp     loc_5B31"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "setnz~r15b", "jmp~FOO"]], [0, 0, 586, 0, 0, 3, 1, 1, 22, 51, 0.008118637247095288, ["xor     r15d, r15d", "cmp     rax, rcx", "jnz     loc_5B31"], ["xor~r15d,r15d", "cmp~rax,rcx", "jnz~FOO"]], [0, 0, 585, 0, 0, 3, 0, 1, 23, 51, 0.0002825511802933395, ["mov     rax, [r12]", "cmp     [r10], rax", "jnz     loc_5B31"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 584, 0, 0, 3, 1, 1, 24, 51, 0.00017338367881636742, ["movzx   r15d, byte ptr [x_0+17h]", "test    r15b, r15b", "jnz     loc_5B31"], ["movzx~r15d,[yte ptr [x_0+0]", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 559, 0, 0, 1, 0, 1, 23, 51, 0.005957548825700171, ["jmp     loc_5B31"], ["jmp~FOO"]], [2, 0, 235, 1, 1, 14, 3, 2, 21, 26, 0.10330349421626295, ["mov     eax, [rbp+var_268]", "xor     esi, esi", "cmp     dword ptr [x_0+4], 2", "mov     rdi, [rbp+src_name]; file", "mov     [rbp+var_340], eax", "movzx   eax, byte ptr [x_0+23h]", "setz    sil", "shl     esi, 11h; flags", "mov     byte ptr [rbp+format], al", "xor     eax, eax", "call    open_safer", "test    eax, eax", "mov     r13d, eax", "js      loc_8316"], ["mov~eax,[rbp+0]", "xor~esi,esi", "cmp~[word ptr [x_0+0],0", "mov~rdi,[rbp+0]", "mov~[rbp+0],eax", "movzx~eax,[yte ptr [x_0+0]", "setz~sil", "shl~esi,0", "mov~[yte ptr [rbp+0],al", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~r13d,eax", "js~FOO"]], [4, 0, 5, 0, 3, 18, 2, 3, 19, -1, 0.0005925726142263092, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aCannotMoveSToS; \"cannot move %s to %s\"", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "mov     esi, r15d; errnum"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "mov~esi,r15d"]], [0, 1, 364, 0, 0, 2, 0, 1, 18, 38, 0.012487549196726974, ["cmp     r15d, 12h", "jnz     loc_6AF0"], ["cmp~r15d,<STR>", "jnz~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 17, -1, 6.4216177339395335e-06, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "lea     dst_lstat_sb, [rbp+src_mode]; stats", "mov     r12d, r14d", "call    record_file", "jmp     loc_6466"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~r12d,r14d", "call~FOO", "jmp~FOO"]], [2, 0, 209, 0, 0, 3, 0, 1, 30, 23, 0.0009557507727346673, ["cmp     byte ptr [x_0+18h], 0", "mov     r8d, 2", "jnz     loc_8BED"], ["cmp~[yte ptr [x_0+0],0", "mov~r8d,0", "jnz~FOO"]], [1, 0, 466, 0, 0, 2, 0, 1, 21, 42, 0.0017317286813318252, ["cmp     byte ptr [x_0+22h], 0", "jz      loc_833B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 465, 0, 0, 2, 0, 0, 22, 42, 9.846480525373951e-05, ["cmp     [rbp+dst_sb.st_nlink], 1", "jbe     loc_833B"], ["cmp~[rbp+0],0", "jbe~FOO"]], [2, 0, 5, 0, 1, 7, 0, 2, 21, -1, 0.0011216425641947718, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotUnBackup; \"cannot un-backup %s\"", "jmp     loc_5F9E"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 1, 436, 0, 0, 4, 1, 1, 11, 38, 0.002568647093575813, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_5D68"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 437, 0, 0, 2, 0, 1, 10, 38, 0.002742030772392181, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6338"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 269, 0, 0, 2, 0, 1, 20, 27, 0.12324475781938984, ["cmp     r15d, 8000h", "jz      loc_7C60"], ["cmp~r15d,0", "jz~FOO"]], [2, 0, 463, 0, 0, 4, 1, 1, 23, 42, 0.00041098353497213014, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_7FB5"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 552, 0, 0, 3, 1, 1, 12, 52, 0.0030456305885912115, ["xor     ecx, ecx", "cmp     byte ptr [x_0+1Fh], 0", "jz      short loc_5B77"], ["xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 4, 0, 2, 7, 2, 3, 20, -1, 8.954589173437904e-05, ["xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_5F00"], ["xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [4, 0, 5, 0, 3, 19, 2, 4, 22, -1, 5.351348111616278e-05, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aInterDeviceMov; \"inter-device move failed: %s to %s; una\"...", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     dst_lstat_sb, rax", "mov     esi, [r13+0]", "jmp     loc_6B3E"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "mov~esi,[r13+0]", "jmp~FOO"]], [1, 0, 164, 0, 0, 6, 0, 1, 47, 0, 0.002688517291276018, ["mov     [rbp+var_3B8], r12", "mov     byte ptr [rbp+format], r10b", "mov     r12, r14", "mov     byte ptr [rbp+var_2D0+1], 1", "mov     r14, rdx", "jmp     loc_95F2"], ["mov~[rbp+0],r12", "mov~[yte ptr [rbp+0],r10b", "mov~r12,r14", "mov~[yte ptr [rbp+0],0", "mov~r14,rdx", "jmp~FOO"]], [1, 0, 115, 1, 0, 4, 0, 1, 42, -1, 0.0065072393037253935, ["mov     r12, [rbp+length]", "sub     r12, rdx", "cmp     cs:zeros_7570, 0", "jz      loc_9BEA"], ["mov~r12,[rbp+0]", "sub~r12,rdx", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 123, 0, 0, 2, 0, 1, 41, -1, 0.013433845921131116, ["cmp     [rbp+var_398], 1", "jz      loc_9B4D"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 598, 0, 0, 3, 1, 1, 18, 53, 0.004976753743803138, ["movzx   esi, byte ptr [x_0+18h]", "test    sil, sil", "jnz     loc_7B50"], ["movzx~esi,[yte ptr [x_0+0]", "test~sil,sil", "jnz~FOO"]], [1, 0, 597, 0, 0, 2, 0, 1, 19, 53, 0.002732612399715736, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_7B50"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 551, 0, 0, 3, 0, 1, 13, 52, 0.00025686470935758134, ["cmp     byte ptr [x_0+18h], 0", "mov     ecx, 1", "jz      short loc_5B77"], ["cmp~[yte ptr [x_0+0],0", "mov~ecx,0", "jz~FOO"]], [1, 0, 268, 0, 0, 4, 1, 1, 21, 27, 0.01963516649114245, ["cmp     r15d, 0A000h", "setnz   r8b", "and     r8b, [x_0+14h]", "jnz     loc_7C60"], ["cmp~r15d,0", "setnz~r8b", "and~r8b,[x_0+0]", "jnz~FOO"]], [1, 0, 339, 0, 0, 2, 0, 1, 17, 32, 0.0006079131454796091, ["cmp     byte ptr [x_0+26h], 0", "jz      loc_6B60"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 594, 0, 0, 2, 1, 1, 20, 53, 0.00196929610507479, ["test    r15b, r15b", "jz      short loc_7B78"], ["test~r15b,r15b", "jz~FOO"]], [0, 0, 112, 0, 0, 2, 0, 0, 43, -1, 0.004426635157928985, ["mov     dword ptr [rbp+format], r14d", "mov     r14, rbx"], ["mov~[word ptr [rbp+0],r14d", "mov~r14,rbx"]], [1, 0, 114, 0, 1, 6, 1, 2, 43, -1, 0.0008155454522103207, ["mov     rdi, cs:nz_7571; nmemb", "mov     esi, 1; size", "call    _calloc", "test    rax, rax", "mov     cs:zeros_7570, rax", "jnz     loc_9B65"], ["mov~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jnz~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 22, -1, 0.01919849648523456, ["cmp     r15d, 1000h", "jz      loc_8410"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 593, 0, 0, 2, 0, 1, 21, 53, 0.0004869726781570813, ["cmp     qword ptr [r12+10h], 1", "ja      loc_84EF"], ["cmp~[word ptr [r12+0],0", "ja~FOO"]], [0, 0, 98, 0, 0, 3, 0, 1, 35, -1, 3.638916715899069e-05, ["mov     eax, dword ptr [rbp+var_B0]", "cmp     [rbp+group], eax", "jz      short loc_9387"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 550, 0, 0, 4, 1, 0, 14, 52, 0.0, ["xor     ecx, ecx", "mov     rax, [rbp+src_mode]", "cmp     [rbp+dst_sb.st_dev], rax", "setnz   cl; options"], ["xor~ecx,ecx", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setnz~cl"]], [0, 0, 95, 0, 0, 2, 1, 1, 36, -1, 0.0009118697182194138, ["test    eax, eax", "jnz     short loc_9387"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 632, 0, 0, 3, 1, 1, 13, 41, 0.0013463991848826555, ["xor     r8d, r8d", "mov     dword ptr [rbp+new_dst], 0", "jmp     loc_5F3C"], ["xor~r8d,r8d", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 587, 0, 0, 2, 0, 1, 21, 52, 0.0036913599273929085, ["cmp     edi, 0A000h", "jz      short loc_7BAB"], ["cmp~edi,0", "jz~FOO"]], [1, 0, 94, 0, 0, 1, 1, 0, 37, -1, 0.0, ["and     [rbp+var_340], 0FFFFF1FFh"], ["and~[rbp+0],0"]], [1, 0, 542, 0, 0, 2, 0, 1, 14, 50, 0.004869726781570813, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_65C4"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 549, 0, 1, 11, 1, 2, 13, 51, 0.005806926214185211, ["lea     r10, [rbp+src_mode]", "mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [rbp+dst_sb]; dst_stat", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "mov     rdx, r10; src_stat", "call    utimecmp", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "js      loc_6B88"], ["lea~r10,[rbp+0]", "mov~rdi,[rbp+0]", "lea~rsi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "mov~rdx,r10", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "js~FOO"]], [0, 0, 537, 0, 0, 1, 0, 0, 15, 51, 0.00013913505090202324, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 211, 0, 0, 6, 1, 1, 31, 23, 0.0020281609343025695, ["movzx   eax, byte ptr [x_0+21h]", "mov     ecx, dword ptr [rbp+omitted_permissions]", "mov     dword ptr [rbp+ptr], ecx", "test    al, al", "mov     byte ptr [rbp+copied_as_regular], al", "jz      loc_8B44"], ["movzx~eax,[yte ptr [x_0+0]", "mov~ecx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],ecx", "test~al,al", "mov~[yte ptr [rbp+0],al", "jz~FOO"]], [0, 0, 209, 0, 0, 3, 0, 1, 26, 23, 0.010616004383824372, ["mov     eax, dword ptr [rbp+omitted_permissions]", "mov     dword ptr [rbp+ptr], eax", "jmp     loc_8B44"], ["mov~eax,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [4, 0, 435, 0, 3, 18, 3, 4, 12, 40, 0.0018751123783103437, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     dst_lstat_sb, rax", "mov     rcx, r12", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "mov     rax, [rbp+dst_backup]", "test    rax, rax", "jz      short loc_63D4"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~dst_lstat_sb,rax", "mov~rcx,r12", "xor~eax,eax", "mov~edi,0", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 536, 0, 0, 3, 0, 1, 12, 50, 0.005666453326255282, ["mov     eax, [x_0+8]", "cmp     eax, 2", "jz      loc_6C5A"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 542, 0, 0, 2, 0, 1, 11, 49, 0.048897319045947366, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6B98"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 112, 1, 0, 2, 0, 1, 46, -1, 6.207563809474882e-05, ["sub     r12, rbx", "jmp     short loc_9B6F"], ["sub~r12,rbx", "jmp~FOO"]], [0, 0, 112, 0, 1, 9, 0, 2, 45, -1, 0.0026778145950527854, ["cmp     cs:nz_7571, r12", "mov     rbx, r12", "mov     rsi, cs:zeros_7570; buf", "cmovbe  rbx, cs:nz_7571", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     rdx, rbx; count", "call    full_write", "cmp     rbx, rax", "jnz     short loc_9BCC"], ["cmp~<TAG>,r12", "mov~rbx,r12", "mov~rsi,<TAG>", "cmovbe~rbx,<TAG>", "mov~edi,[word ptr [rbp+0]", "mov~rdx,rbx", "call~FOO", "cmp~rbx,rax", "jnz~FOO"]], [1, 0, 535, 0, 0, 2, 0, 1, 13, 49, 0.005824407284683157, ["cmp     eax, 3", "jz      loc_6C2E"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 91, 0, 1, 3, 1, 2, 36, -1, 0.0017680854160780181, ["call    _geteuid", "test    eax, eax", "jz      loc_939A"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 582, 0, 0, 2, 1, 1, 22, 54, 0.002398902331475345, ["test    sil, sil", "jz      loc_758B"], ["test~sil,sil", "jz~FOO"]], [0, 0, 583, 0, 0, 1, 0, 0, 22, 55, 0.00040477597116265524, ["movzx   esi, byte ptr [x_0+18h]"], ["movzx~esi,[yte ptr [x_0+0]"]], [1, 0, 534, 0, 0, 2, 0, 1, 14, 48, 0.006126223318178315, ["cmp     eax, 4", "jnz     loc_6618"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 36, -1, 0.0062482340551231665, ["cmp     byte ptr [rbx+2Bh], 0", "jnz     loc_9FC3"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 448, 0, 0, 3, 1, 1, 11, 37, 0.007207911003087082, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_69F0"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 533, 0, 0, 2, 0, 1, 15, 48, 0.0014106153622220508, ["cmp     byte ptr [x_0+2Fh], 0", "jz      loc_6618"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 14, -1, 0.0015857828237422905, ["test    r13, r13", "jz      short loc_5BC4"], ["test~r13,r13", "jz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r13+0], 1"], ["mov~[yte ptr [r13+0],0"]], [2, 0, 581, 0, 0, 4, 1, 1, 23, 54, 0.000569383439075972, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_758B"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 15, 0, 1, 7, 0, 2, 26, -1, 5.6724289983132546e-05, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dst_mode_bits, rax", "lea     rsi, aSHasUnknownFil; \"%s has unknown file type\"", "jmp     loc_6D48"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dst_mode_bits,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 78, 0, 0, 5, 0, 1, 29, -1, 0.001379042408363515, ["mov     rsi, [rbp+dst_name]", "mov     r8d, 15h", "cmp     byte ptr [rsi], 0", "mov     rdi, rsi", "jz      short loc_8BED"], ["mov~rsi,[rbp+0]", "mov~r8d,0", "cmp~<TAG>,0", "mov~rdi,rsi", "jz~FOO"]], [2, 0, 198, 0, 0, 7, 1, 1, 28, 21, 0.007961735720462697, ["mov     eax, dword ptr [rbp+dest_link_val]", "shr     eax, 1Fh", "cmp     r8d, 15h", "setz    dl", "and     dl, al", "mov     byte ptr [rbp+copied_as_regular], dl", "jz      loc_958F"], ["mov~eax,[word ptr [rbp+0]", "shr~eax,0", "cmp~r8d,0", "setz~dl", "and~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [3, 0, 434, 0, 3, 13, 2, 3, 13, 40, 0.0, ["mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     dst_lstat_sb, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,rax", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~dst_lstat_sb,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 580, 0, 0, 2, 0, 0, 24, 54, 0.0004024213779935441, ["cmp     qword ptr [r12+10h], 1", "jbe     loc_758B"], ["cmp~[word ptr [r12+0],0", "jbe~FOO"]], [2, 0, 532, 0, 0, 5, 1, 1, 16, 48, 0.0011473290351305299, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 0A000h", "jz      loc_86DA"], ["mov~eax,[rbp+0]", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 15, -1, 0.0010977398759628861, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "test    earlier_file_0, earlier_file_0", "jz      loc_6460"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~earlier_file_0,earlier_file_0", "jz~FOO"]], [3, 0, 77, 1, 0, 9, 3, 0, 30, -1, 0.0, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "xor     r8d, r8d", "repne scasb", "mov     rax, rcx", "not     rax", "cmp     byte ptr [rsi+rax-2], 2Fh ; '/'", "setnz   r8b", "add     r8d, 14h"], ["xor~eax,eax", "or~rcx,0", "xor~r8d,r8d", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "cmp~[yte ptr [rsi+0],0", "setnz~r8b", "add~r8d,0"]], [1, 0, 431, 0, 0, 4, 0, 1, 14, 38, 0.0013838586216639694, ["lea     dst_lstat_sb, [rax+1]", "mov     [rdi+28h], dst_lstat_sb", "mov     byte ptr [rax], 0Ah", "jmp     loc_5D68"], ["lea~dst_lstat_sb,[rax+0]", "mov~[rdi+0],dst_lstat_sb", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 16, -1, 0.0008044859994463138, ["movzx   ecx, byte ptr [x_0+2Eh]; verbose", "mov     r8d, dword ptr [rbp+dest_link_val]; dereference", "mov     edx, 1; replace", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, earlier_file_0; src_name", "call    create_hard_link", "test    al, al", "jnz     loc_6460"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,[word ptr [rbp+0]", "mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,earlier_file_0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 458, 0, 0, 2, 0, 1, 24, 43, 0.0004912537566463743, ["mov     ecx, dword ptr [rbp+dst_backup]", "jmp     loc_6771"], ["mov~ecx,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 467, 0, 1, 10, 1, 2, 23, 44, 0.003467673576327348, ["mov     rsi, [rbp+omitted_permissions]; s2", "lea     rdi, [srcbase+r15]; s1", "mov     qword ptr [rbp+new_dst], r8", "mov     byte ptr [rbp+copied_as_regular], r9b", "mov     dword ptr [rbp+dst_backup], ecx", "call    _strcmp", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "mov     r8, qword ptr [rbp+new_dst]", "jz      loc_8C5E"], ["mov~rsi,[rbp+0]", "lea~rdi,<TAG>", "mov~[word ptr [rbp+0],r8", "mov~[yte ptr [rbp+0],r9b", "mov~[word ptr [rbp+0],ecx", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jz~FOO"]], [1, 0, 92, 0, 1, 6, 1, 2, 22, -1, 0.009095151250503026, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_sb]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_81E2"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 17, -1, 0.0005411996723547928, ["cmp     byte ptr [x_0+25h], 0", "jz      loc_5F00"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 579, 0, 1, 11, 1, 2, 25, 54, 0.0002311782384218232, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+earlier_file], r8b", "mov     [rbp+dst_backup], r10", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    _canonicalize_file_name", "test    rax, rax", "mov     r15, rax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "mov     r10, [rbp+dst_backup]", "movzx   r8d, byte ptr [rbp+earlier_file]", "jz      loc_758B"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],r10", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~rax,rax", "mov~r15,rax", "movzx~r9d,[yte ptr [rbp+0]", "mov~r10,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 387, 0, 1, 5, 1, 2, 17, 41, 0.0023642255957120714, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, [rbp+src_name]; old", "call    _rename", "test    eax, eax", "jz      short loc_6430"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 3, 0, 3, 15, 4, 4, 9, -1, 4.067024564828371e-05, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWarningSourceF; \"warning: source file %s specified more \"...", "mov     x_0, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6466"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 656, 0, 1, 7, 1, 2, 8, 45, 0.00013699451165737671, ["mov     rsi, [rbp+src_name]; file", "mov     dst_lstat_sb, r10; stats", "mov     [rbp+dest_link_val], r10", "call    seen_file", "test    al, al", "mov     r12d, eax", "jnz     loc_73E8"], ["mov~rsi,[rbp+0]", "mov~dst_lstat_sb,r10", "mov~[rbp+0],r10", "call~FOO", "test~al,al", "mov~r12d,eax", "jnz~FOO"]], [4, 0, 70, 0, 3, 19, 2, 3, 28, -1, 0.001318572174702251, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+src_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     rdx, rax", "mov     edi, 1", "xor     eax, eax", "mov     rcx, r12", "call    ___printf_chk", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_9505"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "mov~rcx,r12", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 19, -1, 3.85297064036372e-05, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 76, 0, 2, 14, 1, 3, 30, -1, 0.001968225835452467, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     dword ptr [rbp+dest_link_val], r8d", "call    quotearg_style", "lea     rsi, aCannotCreateRe; \"cannot create regular file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+dest_link_val]", "mov     rcx, r12", "mov     rdx, rax", "mov     esi, r8d", "jmp     loc_7D0A"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,r8d", "jmp~FOO"]], [2, 0, 195, 0, 0, 3, 0, 1, 29, 20, 0.005636574965965426, ["cmp     dword ptr [rbp+dest_link_val], 0", "mov     byte ptr [rbp+copied_as_regular], 1", "js      loc_8BED"], ["cmp~[word ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0", "js~FOO"]], [1, 0, 112, 0, 0, 6, 0, 1, 44, -1, 0.00011987019770020463, ["lea     rax, fallback_7572", "mov     dword ptr [rbp+format], r14d", "mov     cs:nz_7571, 400h", "mov     r14, rbx", "mov     cs:zeros_7570, rax", "jmp     loc_9B6F"], ["lea~rax,<TAG>", "mov~[word ptr [rbp+0],r14d", "mov~<TAG>,0", "mov~r14,rbx", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 55, 0, 0, 4, 0, 1, 28, -1, 0.0010445831513874976, ["mov     [rbp+restore_dst_mode], 0", "mov     r12d, 1", "mov     rdi, rax", "jmp     loc_79F5"], ["mov~[rbp+0],0", "mov~r12d,0", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 12, -1, 0.009277097086297979, ["cmp     byte ptr [x_0+2Eh], 0", "jnz     loc_6D90"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 368, 0, 0, 2, 0, 1, 11, 36, 0.16598960761710244, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6430"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 13, -1, 0.006079131454796092, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_6D68"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 15, 0, 0, 4, 0, 1, 15, -1, 4.81621330045465e-05, ["lea     dst_lstat_sb, [rax+1]", "mov     [rdi+28h], dst_lstat_sb", "mov     byte ptr [rax], 0Ah", "jmp     loc_643A"], ["lea~dst_lstat_sb,[rax+0]", "mov~[rdi+0],dst_lstat_sb", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 418, 0, 0, 2, 0, 1, 13, 40, 0.017478003318336204, ["cmp     [rbp+var_270], 1", "jz      loc_7428"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 16, -1, 1.0702696223232556e-05, ["mov     dword ptr [rax], 5Fh ; '_'", "jmp     loc_6444"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 674, 0, 0, 3, 1, 1, 3, 46, 0.0019175664066624996, ["test    r13, r13", "mov     byte ptr [rbp+copied_as_regular], r12b", "jz      short loc_5C58"], ["test~r13,r13", "mov~[yte ptr [rbp+0],r12b", "jz~FOO"]], [1, 0, 673, 0, 0, 2, 0, 0, 4, 46, 0.0, ["mov     byte ptr [r13+0], 1", "nop     dword ptr [rax+00000000h]"], ["mov~[yte ptr [r13+0],0", "nop~[word ptr [rax+0]"]], [0, 0, 77, 0, 0, 3, 0, 1, 24, -1, 0.0007641725103388044, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+dot_sb.st_dev], rax", "jnz     loc_7DE4"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 78, 0, 0, 3, 0, 1, 23, -1, 0.0019248799157483751, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+dot_sb.st_ino], rax", "jz      loc_8C45"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 672, 0, 0, 2, 0, 1, 2, 45, 0.008780848738080764, ["cmp     byte ptr [x_0+31h], 0", "jnz     short loc_5C70"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 14, -1, 0.0007325995564802682, ["mov     r12d, 1"], ["mov~r12d,0"]], [1, 0, 529, 0, 0, 3, 0, 1, 13, 49, 0.006522669024113886, ["mov     eax, [x_0+8]", "cmp     eax, 2", "jz      loc_6460"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 527, 0, 1, 10, 1, 2, 15, 49, 0.0002782701018040465, ["mov     rsi, [rbp+dst_name]; dst_name", "lea     dst_lstat_sb, [rbp+dst_sb.st_mode]; dst_sb", "mov     rdi, x_0; x", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    overwrite_ok", "test    al, al", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jz      loc_6460"], ["mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~rdi,x_0", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 525, 0, 0, 2, 1, 1, 13, 47, 0.11358407610045118, ["test    r15b, r15b", "jnz     loc_6460"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 524, 0, 0, 2, 1, 1, 17, 47, 0.0013794705162124441, ["test    r15b, r15b", "jnz     loc_6460"], ["test~r15b,r15b", "jnz~FOO"]], [2, 0, 78, 0, 4, 16, 3, 4, 41, -1, 1.0702696223232556e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 8, -1, 0.0029111333727192554, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r12d", "jnz     loc_8E98"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [4, 0, 3, 0, 4, 22, 5, 5, 15, -1, 0.00011815776630448742, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aWillNotCopySTh; \"will not copy %s through just-created s\"...", "mov     x_0, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r13", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6466"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r13", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 7, -1, 0.0022128894711155637, ["xor     r12d, r12d", "jmp     loc_6466"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 3, 2, 9, -1, 3.210808866969767e-05, ["mov     rcx, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6466"], ["mov~rcx,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 3, 16, 5, 4, 17, -1, 3.85297064036372e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "xor     r12d, r12d", "call    quotearg_style", "lea     rsi, aCannotOverwrit; \"cannot overwrite directory %s with non-\"...", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6466"], ["mov~rsi,[rbp+0]", "mov~edi,0", "xor~r12d,r12d", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [6, 0, 3, 0, 4, 25, 5, 5, 18, -1, 0.00013967018571318484, ["mov     dst_lstat_sb, cs:top_level_dst_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, cs:top_level_src_name; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aCannotMoveSToA; \"cannot move %s to a subdirectory of its\"...", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+var_340]", "mov     r12d, 1", "mov     byte ptr [rax], 1", "jmp     loc_6466"], ["mov~dst_lstat_sb,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,<TAG>", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~r12d,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 31, -1, 2.88972798027279e-05, ["jmp     loc_6466"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 37, -1, 9.6324266009093e-06, ["jmp     loc_6466"], ["jmp~FOO"]], [0, 0, 78, 0, 0, 1, 0, 1, 37, -1, 0.0008947454042622417, ["jmp     loc_946F"], ["jmp~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 8, -1, 3.103781904737441e-05, ["lea     rsi, aOmittingDirect; \"omitting directory %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     dst_lstat_sb, rax", "jmp     loc_6592"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~dst_lstat_sb,rax", "jmp~FOO"]], [1, 0, 523, 0, 0, 3, 1, 1, 18, 46, 0.0021971565076674116, ["mov     r12d, [rbp+mode]", "and     r12d, 0F000h", "jmp     loc_6649"], ["mov~r12d,[rbp+0]", "and~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 9, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 452, 0, 0, 3, 1, 0, 7, 40, 0.028505917877498354, ["mov     dword ptr [rbp+new_dst], 1", "xor     r9d, r9d", "mov     [rbp+dst_backup], 0"], ["mov~[word ptr [rbp+0],0", "xor~r9d,r9d", "mov~[rbp+0],0"]], [3, 0, 75, 0, 3, 18, 4, 4, 32, -1, 0.0005351348111616278, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     byte ptr [rbp+dest_link_val], r8b", "call    quotearg_style", "lea     rsi, aNotWritingThro; \"not writing through dangling symlink %s\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rbp+restore_dst_mode_0], 0", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jmp     loc_7D21"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 201, 0, 0, 3, 1, 1, 31, 23, 0.0017316962489190276, ["movzx   r8d, byte ptr [x_0+30h]", "test    r8b, r8b", "jz      loc_9F1B"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jz~FOO"]], [2, 0, 76, 0, 2, 12, 1, 3, 30, -1, 0.0006271779986814277, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+dest_link_val], rax", "call    _dcgettext", "mov     rcx, [rbp+dest_link_val]", "mov     rdx, rax", "mov     esi, [r12]", "jmp     loc_7D0A"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,rax", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 215, 0, 1, 4, 1, 2, 29, 25, 0.003903273312612913, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_9C57"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 1, 524, 0, 0, 7, 2, 1, 14, 46, 0.11404411365977984, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     r12d, [rbp+mode]", "mov     edx, eax", "and     r12d, 0F000h", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_6C90"], ["mov~eax,[rbp+0]", "mov~r12d,[rbp+0]", "mov~edx,eax", "and~r12d,0", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [0, 0, 451, 0, 0, 2, 1, 1, 8, 39, 0.19128906905742848, ["test    r14b, r14b", "jz      loc_5D58"], ["test~r14b,r14b", "jz~FOO"]], [2, 0, 631, 0, 0, 5, 1, 1, 13, 40, 0.014973072016302345, ["xor     r9d, r9d", "cmp     r15d, 11h", "mov     byte ptr [rbp+copied_as_regular], r8b", "mov     [rbp+dst_backup], 0", "jnz     loc_5C98"], ["xor~r9d,r9d", "cmp~r15d,0", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],0", "jnz~FOO"]], [1, 0, 503, 0, 0, 2, 0, 1, 16, 45, 0.008771501716712473, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_6CB0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 164, 0, 0, 4, 0, 0, 48, 11, 0.00012843235467879067, ["mov     [rbp+var_3B8], r12", "mov     byte ptr [rbp+format], r10b", "mov     r12, r14", "mov     r14, rdx"], ["mov~[rbp+0],r12", "mov~[yte ptr [rbp+0],r10b", "mov~r12,r14", "mov~r14,rdx"]], [1, 0, 450, 0, 0, 2, 0, 1, 9, 39, 0.004756706309453477, ["cmp     qword ptr [x_0+40h], 0", "jz      loc_5D58"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 112, 0, 0, 2, 1, 1, 44, -1, 0.004499413492246966, ["test    r12, r12", "jz      short loc_9BDB"], ["test~r12,r12", "jz~FOO"]], [1, 0, 232, 0, 1, 6, 1, 2, 22, 25, 0.10213154897981899, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     esi, eax; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_84AB"], ["lea~rdx,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 449, 0, 0, 3, 1, 1, 10, 38, 0.007002419235601017, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     loc_5D58"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 79, 0, 1, 2, 0, 1, 28, -1, 0.005523661520810322, ["mov     rdi, src_link_val; ptr", "call    free"], ["mov~rdi,src_link_val", "call~FOO"]], [0, 0, 444, 0, 0, 3, 1, 1, 12, 40, 0.0023378969630029195, ["test    r9b, r9b", "lea     dst_lstat_sb, [rbp+dst_sb]; stats", "jz      loc_7718"], ["test~r9b,r9b", "lea~dst_lstat_sb,[rbp+0]", "jz~FOO"]], [0, 0, 166, 2, 1, 10, 1, 1, 37, 12, 0.0002639998401730697, ["mov     rax, qword ptr [rbp+new_dst]", "lea     rdi, [r12+rax]; n", "call    xmalloc", "lea     rcx, [rax+r12-1]", "mov     [rbp+restore_dst_mode_0], rax", "xor     edx, edx", "mov     rax, rcx", "div     r12", "sub     rcx, rdx", "mov     [rbp+buf], rcx"], ["mov~rax,[word ptr [rbp+0]", "lea~rdi,<TAG>", "call~FOO", "lea~rcx,[rax+0]", "mov~[rbp+0],rax", "xor~edx,edx", "mov~rax,rcx", "div~,r12", "sub~rcx,rdx", "mov~[rbp+0],rcx"]], [2, 0, 441, 0, 0, 4, 1, 1, 13, 39, 0.002419237454299487, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_5D58"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 442, 0, 0, 3, 0, 1, 14, 40, 1.2843235467879067e-05, ["mov     rcx, [rbp+earlier_file]", "mov     dst_lstat_sb, rcx", "jmp     loc_5CD4"], ["mov~rcx,[rbp+0]", "mov~dst_lstat_sb,rcx", "jmp~FOO"]], [2, 0, 76, 0, 3, 14, 1, 4, 23, -1, 0.0034526898016148224, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "mov     dst_mode_bits, rax", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rbp+dest_link_val], rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, [rbp+dest_link_val]", "mov     esi, [rax]", "jmp     loc_7D0A"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "mov~dst_mode_bits,rax", "xor~edi,edi", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,r12", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "jmp~FOO"]], [2, 0, 464, 0, 5, 30, 3, 6, 24, 43, 0.0032011764403688573, ["mov     rdi, [rbp+dst_name]", "mov     [rbp+new_dst], r9b", "xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rdx, [rax-1]", "lea     rdi, [rdx+r8+1]; n", "mov     [rbp+copied_as_regular], rdx", "call    xmalloc", "mov     r15, cs:simple_backup_suffix", "mov     rdx, [rbp+copied_as_regular]; n", "mov     rdi, rax; dest", "mov     rsi, [rbp+dst_name]; src", "mov     srcbase, rax", "call    _mempcpy", "mov     rsi, r15; src", "mov     rdi, rax; dest", "call    _strcpy", "lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     rdi, r12; ptr", "mov     r15d, eax", "call    free", "test    r15d, r15d", "movzx   r9d, [rbp+new_dst]", "jnz     short loc_8CFA"], ["mov~rdi,[rbp+0]", "mov~[rbp+0],r9b", "xor~eax,eax", "or~rcx,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rdx,[rax-1]+0]", "lea~rdi,[rdx+0]", "mov~[rbp+0],rdx", "call~FOO", "mov~r15,<TAG>", "mov~rdx,[rbp+0]", "mov~rdi,rax", "mov~rsi,[rbp+0]", "mov~srcbase,rax", "call~FOO", "mov~rsi,r15", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "mov~rdi,r12", "mov~r15d,eax", "call~FOO", "test~r15d,r15d", "movzx~r9d,[rbp+0]", "jnz~FOO"]], [0, 0, 440, 0, 1, 5, 1, 2, 14, 39, 0.0005698115469249012, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "call    seen_file", "test    al, al", "jz      short loc_5D58"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 353, 0, 1, 3, 1, 2, 20, 36, 0.006949260657744898, ["call    _rmdir", "test    eax, eax", "jz      loc_5E2F"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 362, 0, 0, 5, 1, 1, 19, 37, 0.011548209224867928, ["mov     r12d, [rbp+mode]", "mov     rdi, [rbp+dst_name]; path", "and     r12d, 0F000h", "cmp     r12d, 4000h", "jz      loc_74F0"], ["mov~r12d,[rbp+0]", "mov~rdi,[rbp+0]", "and~r12d,0", "cmp~r12d,<STR>", "jz~FOO"]], [0, 0, 165, 0, 0, 5, 0, 1, 36, 11, 0.040287802636573534, ["mov     eax, [x_0+0Ch]", "mov     [rbp+var_398], eax", "movzx   eax, byte ptr [rbp+format]", "mov     [rbp+var_31E], al", "jmp     loc_9087"], ["mov~eax,[x_0+0]", "mov~[rbp+0],eax", "movzx~eax,[yte ptr [rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 457, 0, 0, 2, 0, 1, 25, 42, 0.0034130898255888623, ["mov     r15d, [x_0]", "jmp     loc_6774"], ["mov~r15d,<TAG>", "jmp~FOO"]], [0, 0, 79, 0, 2, 4, 0, 3, 34, -1, 0.0008369508446567859, ["call    free", "mov     rdi, r12; ptr", "call    free", "jmp     loc_8E6E"], ["call~FOO", "mov~rdi,r12", "call~FOO", "jmp~FOO"]], [1, 0, 352, 0, 1, 4, 0, 2, 21, 36, 0.0003007457638728348, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r13, rax", "jz      loc_5E2F"], ["call~FOO", "cmp~<TAG>,0", "mov~r13,rax", "jz~FOO"]], [0, 0, 110, 0, 0, 5, 1, 1, 18, -1, 0.03083339754951067, ["mov     rax, [rbp+restore_dst_mode_0]", "mov     dst_lstat_sb, [rbp+ino]", "mov     rcx, [rbp+src_mode]", "test    rax, rax", "jnz     short loc_6D1C"], ["mov~rax,[rbp+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~rcx,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 109, 0, 0, 2, 0, 1, 19, -1, 0.0025515227796186414, ["cmp     [rax+8], dst_lstat_sb", "jnz     short loc_6D10"], ["cmp~[rax+0],dst_lstat_sb", "jnz~FOO"]], [0, 0, 109, 0, 0, 2, 0, 1, 20, -1, 0.0013335559494147766, ["cmp     [rax+10h], rcx", "jnz     short loc_6D10"], ["cmp~[rax+0],rcx", "jnz~FOO"]], [0, 0, 182, 1, 0, 8, 0, 1, 33, 15, 0.0, ["mov     rax, [rbp+dot_sb.st_size]", "cqo", "idiv    r8", "cmp     [rbp+dot_sb.st_blocks], rax", "setl    al", "movzx   eax, al", "mov     dword ptr [rbp+parent], eax", "jmp     loc_8F89"], ["mov~rax,[rbp+0]", "cqo~,", "idiv~,r8", "cmp~[rbp+0],rax", "setl~al", "movzx~eax,al", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [6, 1, 183, 0, 2, 26, 3, 3, 32, 15, 0.0554920528912977, ["call    _getpagesize", "mov     rcx, qword ptr [rbp+var_A0+8]", "movsxd  r12, eax", "mov     rax, 1FFFFFFFFFFE0000h", "mov     r8d, 200h", "mov     edi, r13d; fd", "mov     [rbp+restore_dst_mode_0], r8", "lea     rdx, [rcx-20000h]", "cmp     rdx, rax", "mov     eax, 20000h", "lea     rdx, [rcx-1]", "cmovbe  rax, rcx", "mov     qword ptr [rbp+new_dst], rax", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "cmova   rcx, r8", "xor     edx, edx; len", "xor     esi, esi; offset", "mov     [rbp+hole_size], rcx", "mov     ecx, 2; advice", "call    fdadvise", "mov     r9d, [rbp+dot_sb.st_mode]", "mov     r8, [rbp+restore_dst_mode_0]", "and     r9d, 0F000h", "cmp     r9d, 8000h", "jz      loc_9D00"], ["call~FOO", "mov~rcx,[word ptr [rbp+0]", "movsxd~r12,eax", "mov~rax,0", "mov~r8d,<STR>", "mov~edi,r13d", "mov~[rbp+0],r8", "lea~rdx,[rcx-20000h]+0]", "cmp~rdx,rax", "mov~eax,0", "lea~rdx,[rcx-1]+0]", "cmovbe~rax,rcx", "mov~[word ptr [rbp+0],rax", "mov~rax,0", "cmp~rdx,rax", "cmova~rcx,r8", "xor~edx,edx", "xor~esi,esi", "mov~[rbp+0],rcx", "mov~ecx,0", "call~FOO", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "and~r9d,0", "cmp~r9d,0", "jz~FOO"]], [0, 0, 74, 0, 1, 6, 1, 2, 25, -1, 0.027049994434597963, ["mov     edi, r13d; fd", "mov     byte ptr [rbp+dest_link_val], r8b", "call    _close", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "js      loc_87B3"], ["mov~edi,r13d", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "js~FOO"]], [2, 0, 210, 0, 1, 10, 1, 2, 32, 24, 0.0004987456440026371, ["mov     edx, [rbp+var_3A4]; mode", "mov     rsi, [rbp+dst_name]; dst_name", "mov     r8, x_0; x", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 1; new_dst", "call    set_process_security_ctx", "test    al, al", "mov     r8d, eax", "mov     [rbp+restore_dst_mode_0], 0", "jz      loc_7D21"], ["mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~r8,x_0", "mov~rdi,[rbp+0]", "mov~ecx,0", "call~FOO", "test~al,al", "mov~r8d,eax", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 75, 0, 1, 5, 3, 1, 24, -1, 0.006322082659063471, ["xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0"], ["xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0"]], [0, 0, 6, 0, 0, 2, 0, 1, 37, -1, 0.0013517505329942719, ["mov     rsi, [rbp+dst_name]", "jmp     loc_5F85"], ["mov~rsi,[rbp+0]", "jmp~FOO"]], [2, 0, 15, 0, 1, 6, 0, 1, 21, -1, 0.0007363455001583998, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotCopyCycl; \"cannot copy cyclic symbolic link %s\"", "mov     dst_mode_bits, rax", "mov     edx, 5; category"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_mode_bits,rax", "mov~edx,0"]], [1, 0, 438, 0, 0, 2, 0, 1, 9, 38, 0.19214806745630514, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_5D68"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 443, 0, 1, 8, 1, 2, 13, 39, 0.0009204318751979998, ["lea     rcx, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     dst_lstat_sb, rcx; stat_buf", "mov     [rbp+earlier_file], rcx", "call    ___lxstat", "test    eax, eax", "jnz     loc_5D58"], ["lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~dst_lstat_sb,rcx", "mov~[rbp+0],rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 358, 0, 1, 4, 0, 2, 21, 37, 0.0003007457638728348, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r13, rax", "jnz     loc_750E"], ["call~FOO", "cmp~<TAG>,0", "mov~r13,rax", "jnz~FOO"]], [2, 0, 15, 0, 2, 10, 1, 3, 24, -1, 8.829724384166859e-05, ["mov     rdi, r12; ptr", "call    free", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSCanMakeRelati; \"%s: can make relative symbolic links on\"...", "jmp     loc_6D48"], ["mov~rdi,r12", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 77, 0, 0, 3, 1, 1, 30, -1, 0.0055290128689219386, ["movzx   r13d, byte ptr [x_0+1Dh]", "test    r13b, r13b", "jnz     loc_9540"], ["movzx~r13d,[yte ptr [x_0+0]", "test~r13b,r13b", "jnz~FOO"]], [0, 0, 430, 0, 0, 2, 1, 1, 10, 37, 0.1960952218234333, ["test    r15d, r15d", "jz      loc_5E48"], ["test~r15d,r15d", "jz~FOO"]], [4, 0, 5, 0, 2, 13, 1, 3, 17, -1, 0.00023688634307421388, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "mov     edx, 5", "mov     x_0, rax", "lea     rsi, aCannotOverwrit_0; \"cannot overwrite non-directory %s with \"...", "jmp     loc_6FDB"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~x_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 606, 0, 0, 3, 1, 1, 17, 53, 0.009309490580200296, ["mov     esi, [x_0]", "test    esi, esi", "jz      loc_7568"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [1, 0, 428, 0, 0, 2, 0, 1, 11, 38, 0.035658534396686516, ["cmp     byte ptr [x_0+2Ah], 0", "jz      short loc_5D8D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 575, 0, 0, 2, 0, 1, 21, 53, 0.008661263945613177, ["cmp     byte ptr [x_0+2Ch], 0", "jz      short loc_75A6"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 188, 0, 0, 2, 0, 1, 31, 16, 0.05791228926391136, ["cmp     dword ptr [x_0+38h], 0", "jnz     loc_9D79"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 185, 0, 0, 2, 0, 1, 33, 16, 0.0013720856558184136, ["cmp     dword ptr [x_0+38h], 2", "jnz     loc_8EFA"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 573, 0, 0, 2, 0, 1, 22, 55, 0.002410889351245366, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_6FA0"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 416, 0, 0, 2, 0, 1, 14, 42, 0.012815408457698662, ["cmp     byte ptr [x_0+22h], 0", "jnz     loc_9FE3"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 389, 0, 0, 1, 0, 0, 15, 41, 0.01185751714571935, ["mov     [rbp+earlier_file], 0"], ["mov~[rbp+0],0"]], [1, 0, 415, 0, 0, 2, 0, 1, 15, 41, 0.0009396967283998184, ["cmp     byte ptr [x_0+17h], 0", "jnz     loc_5DB1"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 530, 0, 0, 4, 1, 1, 12, 48, 0.04635605301687603, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6618"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 125, 0, 0, 3, 0, 1, 40, -1, 0.01657276834513484, ["cmp     [rbp+length], rdx", "setnle  r12b", "jg      short loc_9653"], ["cmp~[rbp+0],rdx", "setnle~r12b", "jg~FOO"]], [1, 0, 528, 0, 0, 2, 0, 1, 14, 48, 0.007209336175969449, ["cmp     eax, 3", "jnz     short loc_6618"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 67, 0, 1, 6, 0, 2, 24, -1, 0.004420213540195046, ["mov     byte ptr [rbp+copied_as_regular], r8b", "call    ___errno_location", "cmp     byte ptr [rbx+23h], 0", "mov     r12, rax", "movzx   r8d, byte ptr [rbp+copied_as_regular]", "jz      loc_8570"], ["mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~[yte ptr [rbx+0],0", "mov~r12,rax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 66, 0, 0, 4, 1, 1, 25, -1, 0.001118431755327802, ["movzx   eax, byte ptr [rbx+26h]", "test    al, al", "mov     byte ptr [rbp+copied_as_regular], al", "jnz     loc_8570"], ["movzx~eax,[yte ptr [rbx+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 0, 82, 0, 1, 7, 1, 2, 23, -1, 0.002605036260734804, ["movzx   eax, byte ptr [x_0+23h]", "mov     r13d, eax", "mov     byte ptr [rbp+var_370], al", "call    ___errno_location", "test    r13b, r13b", "mov     dst_mode_bits, rax", "jz      loc_8760"], ["movzx~eax,[yte ptr [x_0+0]", "mov~r13d,eax", "mov~[yte ptr [rbp+0],al", "call~FOO", "test~r13b,r13b", "mov~dst_mode_bits,rax", "jz~FOO"]], [2, 0, 611, 0, 0, 4, 1, 1, 20, 54, 0.003284300714369297, ["mov     edi, dword ptr [rbp+timespec.tv_nsec+10h]", "and     edi, 0F000h", "cmp     edi, 0A000h", "jz      loc_88ED"], ["mov~edi,[word ptr [rbp+0]", "and~edi,0", "cmp~edi,0", "jz~FOO"]], [6, 0, 19, 0, 5, 26, 5, 6, 13, -1, 0.002260409442346716, ["lea     rsi, aRenamed; \"renamed \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, 1", "mov     rsi, rax", "xor     eax, eax", "call    ___printf_chk", "mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     dst_lstat_sb, rax", "mov     rcx, r12", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "mov     rax, [rbp+dst_backup]", "test    rax, rax", "jz      short loc_6E38"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,0", "mov~rsi,rax", "xor~eax,eax", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~dst_lstat_sb,rax", "mov~rcx,r12", "xor~eax,eax", "mov~edi,0", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 359, 0, 1, 3, 1, 2, 20, 37, 0.004243619052511708, ["call    _unlink", "test    eax, eax", "jz      short loc_5E16"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 81, 0, 0, 4, 1, 1, 24, -1, 0.0007770157458066836, ["movzx   eax, byte ptr [x_0+26h]", "test    al, al", "mov     byte ptr [rbp+restore_dst_mode_0], al", "jnz     loc_8760"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 0, 526, 0, 0, 1, 0, 0, 16, 48, 0.0011173614857054787, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 566, 0, 1, 10, 1, 2, 26, 52, 0.001800193504747716, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    ___xstat", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "jz      loc_76C4"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 568, 0, 0, 4, 1, 1, 25, 53, 0.0025772092505543993, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_8DE0"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 623, 0, 0, 2, 0, 1, 16, 52, 0.0012115452124699254, ["cmp     dword ptr [x_0+4], 2", "jz      loc_7E18"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 1, 355, 0, 0, 5, 1, 1, 21, 36, 0.004328170352675246, ["cmp     r12d, 4000h", "setnz   dl", "and     dl, [x_0+2Eh]", "mov     byte ptr [rbp+copied_as_regular], dl", "jnz     loc_7E80"], ["cmp~r12d,<STR>", "setnz~dl", "and~dl,[x_0+0]", "mov~[yte ptr [rbp+0],dl", "jnz~FOO"]], [0, 0, 569, 0, 0, 18, 0, 0, 24, 54, 0.0007652427799611278, ["movdqa  xmm0, xmmword ptr [r10]", "movaps  xmmword ptr [rbp+timespec.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr [r10+10h]", "movaps  xmmword ptr [rbp+timespec.tv_sec+10h], xmm0", "movdqa  xmm0, xmmword ptr [r10+20h]", "movaps  [rbp+var_B0], xmm0", "movdqa  xmm0, xmmword ptr [r10+30h]", "movaps  [rbp+var_A0], xmm0", "movdqa  xmm0, xmmword ptr [r10+40h]", "movaps  [rbp+var_90], xmm0", "movdqa  xmm0, xmmword ptr [r10+50h]", "movaps  [rbp+var_80], xmm0", "movdqa  xmm0, xmmword ptr [r10+60h]", "movaps  [rbp+var_70], xmm0", "movdqa  xmm0, xmmword ptr [r10+70h]", "movaps  [rbp+var_60], xmm0", "movdqa  xmm0, xmmword ptr [r10+80h]", "movaps  [rbp+var_50], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r10+0]", "movaps~[rbp+0],xmm0"]], [0, 0, 126, 0, 0, 4, 0, 0, 41, -1, 0.0024145282679612647, ["mov     rdx, r14", "mov     r15d, dword ptr [rbp+x]", "mov     rbx, [rbp+var_390]", "mov     r14d, [rbp+var_394]"], ["mov~rdx,r14", "mov~r15d,[word ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]"]], [3, 0, 18, 0, 3, 13, 2, 3, 14, -1, 0.0, ["mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     dst_lstat_sb, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,rax", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~dst_lstat_sb,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 203, 0, 1, 8, 1, 2, 29, 22, 0.003011738717217641, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     dword ptr [rbp+new_dst], r8d", "call    ___lxstat", "test    eax, eax", "mov     r8d, dword ptr [rbp+new_dst]", "jnz     loc_8B9C"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "test~eax,eax", "mov~r8d,[word ptr [rbp+0]", "jnz~FOO"]], [2, 0, 202, 0, 0, 4, 1, 1, 30, 22, 0.0022432851283895436, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_8B9C"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 199, 0, 1, 8, 1, 2, 32, 22, 0.0002654268663361674, ["mov     edx, dword ptr [rbp+restore_dst_mode_0]", "mov     rdi, [rbp+dst_name]; file", "mov     esi, 41h ; 'A'; flags", "xor     eax, eax", "call    open_safer", "mov     r8d, [r12]", "mov     dword ptr [rbp+dest_link_val], eax", "jmp     loc_8B9C"], ["mov~edx,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r8d,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [2, 0, 349, 0, 0, 3, 0, 1, 21, 35, 0.009232145762160403, ["mov     dword ptr [rbp+new_dst], 1", "mov     byte ptr [rbp+copied_as_regular], 1", "jmp     short loc_5E5D"], ["mov~[word ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 74, 0, 1, 7, 0, 2, 26, -1, 0.0, ["mov     rdx, [rbp+dst_sb.st_dev]; dev", "mov     rsi, [rbp+dst_sb.st_ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     rax, [rbp+format]", "mov     byte ptr [rax], 1", "jmp     loc_77D4"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 75, 0, 0, 3, 0, 1, 25, -1, 0.005385596739530622, ["mov     rax, [rbp+format]", "cmp     byte ptr [rax], 0", "jz      loc_8629"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 349, 0, 0, 1, 0, 0, 12, 35, 0.16491341768948303, ["mov     [rbp+earlier_file], 0"], ["mov~[rbp+0],0"]], [1, 1, 348, 0, 0, 4, 1, 1, 13, 34, 0.20110808303572425, ["mov     r12d, [rbp+mode]", "and     r12d, 0FFFh", "cmp     byte ptr [x_0+2Bh], 0", "jz      short loc_5E7C"], ["mov~r12d,[rbp+0]", "and~r12d,<STR>", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 349, 0, 0, 5, 0, 1, 24, 35, 0.0011205722945724487, ["lea     rdx, [rax+1]", "mov     dword ptr [rbp+new_dst], 1", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     loc_5E5D"], ["lea~rdx,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [0, 1, 347, 0, 0, 2, 1, 0, 14, 34, 0.0, ["mov     r12d, [x_0+10h]", "and     r12d, 0FFFh"], ["mov~r12d,[x_0+0]", "and~r12d,<STR>"]], [1, 0, 346, 0, 0, 2, 0, 1, 14, 33, 0.20139919637299616, ["cmp     byte ptr [x_0+1Dh], 0", "jz      loc_5FC8"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [4, 0, 5, 0, 2, 13, 1, 3, 19, -1, 4.2810784892930223e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "mov     edx, 5", "mov     x_0, rax", "lea     rsi, aWillNotOverwri; \"will not overwrite just-created %s with\"...", "jmp     loc_6FDB"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~x_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 31, -1, 0.0024680417490774275, ["mov     edx, [rbx+10h]; mode"], ["mov~edx,[rbx+0]"]], [2, 0, 344, 0, 0, 5, 1, 1, 15, 32, 0.10046841994807626, ["mov     eax, r12d", "and     eax, 3Fh", "cmp     byte ptr [x_0+25h], 0", "mov     dword ptr [rbp+omitted_permissions], eax", "jz      loc_5FF6"], ["mov~eax,r12d", "and~eax,0", "cmp~[yte ptr [x_0+0],0", "mov~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 468, 0, 1, 11, 1, 2, 22, 43, 0.003831565247917255, ["mov     rdx, r15; n", "mov     rdi, srcbase; s1", "mov     dword ptr [rbp+dst_backup], ecx", "mov     qword ptr [rbp+new_dst], r8", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    _memcmp", "test    eax, eax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "mov     r8, qword ptr [rbp+new_dst]", "mov     ecx, dword ptr [rbp+dst_backup]", "jnz     loc_6771"], ["mov~rdx,r15", "mov~rdi,srcbase", "mov~[word ptr [rbp+0],ecx", "mov~[word ptr [rbp+0],r8", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~ecx,[word ptr [rbp+0]", "jnz~FOO"]], [0, 0, 469, 0, 4, 21, 0, 5, 21, 43, 0.004572191826564948, ["mov     rdi, srcbase; s", "mov     byte ptr [rbp+earlier_file], r9b", "call    _strlen", "mov     rdi, [rbp+dst_name]; name", "mov     qword ptr [rbp+new_dst], rax", "call    last_component", "mov     rdi, rax; s", "mov     [rbp+dst_backup], rax", "call    _strlen", "mov     rcx, cs:simple_backup_suffix", "mov     r15, rax", "mov     rdi, rcx; s", "mov     [rbp+omitted_permissions], rcx", "call    _strlen", "mov     r8, rax", "lea     rax, [r15+rax]", "cmp     qword ptr [rbp+new_dst], rax", "mov     rsi, [rbp+dst_backup]; s2", "movzx   r9d, byte ptr [rbp+earlier_file]", "mov     ecx, dword ptr [rbp+copied_as_regular]", "jz      loc_838E"], ["mov~rdi,srcbase", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],rax", "call~FOO", "mov~rdi,rax", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,<TAG>", "mov~r15,rax", "mov~rdi,rcx", "mov~[rbp+0],rcx", "call~FOO", "mov~r8,rax", "lea~rax,<TAG>", "cmp~[word ptr [rbp+0],rax", "mov~rsi,[rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "mov~ecx,[word ptr [rbp+0]", "jz~FOO"]], [1, 0, 340, 0, 1, 4, 0, 2, 16, 32, 0.0021214143141399058, ["call    ___errno_location", "cmp     byte ptr [x_0+23h], 0", "mov     r13, rax", "jz      short loc_5EB4"], ["call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r13,rax", "jz~FOO"]], [3, 2, 344, 0, 0, 10, 2, 1, 15, 32, 0.10046841994807626, ["mov     eax, [rbp+mode]", "mov     edx, r12d", "and     edx, 12h", "and     eax, 0F000h", "cmp     eax, 4000h", "mov     eax, 0", "cmovz   eax, edx", "cmp     byte ptr [x_0+25h], 0", "mov     dword ptr [rbp+omitted_permissions], eax", "jnz     loc_5E9C"], ["mov~eax,[rbp+0]", "mov~edx,r12d", "and~edx,<STR>", "and~eax,0", "cmp~eax,<STR>", "mov~eax,0", "cmovz~eax,edx", "cmp~[yte ptr [x_0+0],0", "mov~[word ptr [rbp+0],eax", "jnz~FOO"]], [1, 0, 493, 0, 1, 11, 0, 2, 19, 42, 0.003757752319631028, ["mov     rdi, [rbp+src_name]; name", "mov     dword ptr [rbp+earlier_file], ecx", "mov     byte ptr [rbp+dst_backup], r8b", "mov     byte ptr [rbp+copied_as_regular], r9b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "mov     r12, rax", "movzx   r9d, byte ptr [rbp+copied_as_regular]", "movzx   r8d, byte ptr [rbp+dst_backup]", "mov     ecx, dword ptr [rbp+earlier_file]", "jnz     short loc_66DD"], ["mov~rdi,[rbp+0]", "mov~[word ptr [rbp+0],ecx", "mov~[yte ptr [rbp+0],r8b", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "cmp~<TAG>,0", "mov~r12,rax", "movzx~r9d,[yte ptr [rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "mov~ecx,[word ptr [rbp+0]", "jnz~FOO"]], [0, 0, 492, 0, 0, 1, 1, 0, 20, 43, 0.000881367033983201, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 164, 0, 1, 6, 1, 2, 46, 8, 0.0007984211382531486, ["mov     rdi, cs:nz_7571; nmemb", "mov     esi, 1; size", "call    _calloc", "test    rax, rax", "mov     cs:zeros_7570, rax", "jnz     loc_9731"], ["mov~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jnz~FOO"]], [1, 0, 164, 0, 0, 2, 0, 1, 45, 8, 0.005550418261368403, ["cmp     cs:zeros_7570, 0", "jz      loc_9E9B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 564, 0, 0, 18, 0, 0, 26, 52, 0.001598982815750944, ["movdqa  xmm0, xmmword ptr [r12]", "movaps  xmmword ptr [rbp+dot_sb.st_dev], xmm0", "movdqa  xmm0, xmmword ptr [r12+10h]", "movaps  xmmword ptr [rbp+dot_sb.st_nlink], xmm0", "movdqa  xmm0, xmmword ptr [r12+20h]", "movaps  xmmword ptr [rbp+dot_sb.st_gid], xmm0", "movdqa  xmm0, xmmword ptr [r12+30h]", "movaps  xmmword ptr [rbp+dot_sb.st_size], xmm0", "movdqa  xmm0, xmmword ptr [r12+40h]", "movaps  xmmword ptr [rbp+dot_sb.st_blocks], xmm0", "movdqa  xmm0, xmmword ptr [r12+50h]", "movaps  xmmword ptr [rbp+dot_sb.st_atim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r12+60h]", "movaps  xmmword ptr [rbp+dot_sb.st_mtim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r12+70h]", "movaps  xmmword ptr [rbp+dot_sb.st_ctim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r12+80h]", "movaps  xmmword ptr [rbp+dot_sb.__glibc_reserved+8], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0"]], [0, 0, 473, 0, 0, 2, 1, 1, 23, 42, 0.00019585934088515577, ["test    al, al", "jnz     short loc_66F3"], ["test~al,al", "jnz~FOO"]], [1, 0, 164, 0, 0, 5, 0, 1, 47, 7, 0.00017231340919404416, ["lea     rax, fallback_7572", "mov     cs:nz_7571, 400h", "mov     [rbp+format], r12", "mov     cs:zeros_7570, rax", "jmp     loc_9743"], ["lea~rax,<TAG>", "mov~<TAG>,0", "mov~[rbp+0],r12", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 80, 0, 1, 10, 0, 2, 44, -1, 0.0018879556137782229, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "mov     r15d, dword ptr [rbp+x]", "mov     rbx, [rbp+var_390]", "mov     r14d, [rbp+var_394]", "call    quotearg_style", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "jmp     loc_97A6"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~r15d,[word ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [6, 0, 353, 0, 5, 26, 5, 6, 22, 37, 0.002286095913282474, ["lea     rsi, aCopied; \"copied \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, 1", "mov     rsi, rax", "xor     eax, eax", "call    ___printf_chk", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+src_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     rdx, rax", "mov     rcx, r12", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "mov     rax, [rbp+dst_backup]", "test    rax, rax", "jz      short loc_7F28"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,0", "mov~rsi,rax", "xor~eax,eax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdx,rax", "mov~rcx,r12", "xor~eax,eax", "mov~edi,0", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 561, 0, 0, 2, 0, 1, 29, 52, 0.0002697079448254603, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_6FA0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 470, 0, 0, 3, 0, 1, 20, 42, 0.009750156259364859, ["cmp     ecx, 3", "mov     dword ptr [rbp+copied_as_regular], ecx", "jz      short loc_6774"], ["cmp~ecx,0", "mov~[word ptr [rbp+0],ecx", "jz~FOO"]], [0, 0, 4, 0, 3, 11, 3, 4, 6, -1, 0.00017231340919404416, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     dst_lstat_sb, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_5F00"], ["xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~dst_lstat_sb,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 2, 10, 4, 3, 18, -1, 0.0005757337055017566, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_5F00"], ["xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 613, 0, 0, 5, 1, 1, 19, 55, 0.0008997399958330835, ["mov     rax, [rbp+timespec.tv_nsec]", "mov     rcx, [rbp+dot_sb.st_ino]", "xor     edx, edx", "cmp     rax, rcx", "jnz     short loc_6F2D"], ["mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~edx,edx", "cmp~rax,rcx", "jnz~FOO"]], [3, 0, 352, 0, 3, 13, 2, 3, 23, 37, 0.0, ["mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,rax", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 612, 0, 0, 3, 0, 0, 20, 55, 0.0, ["mov     rsi, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rsi", "setz    dl"], ["mov~rsi,[rbp+0]", "cmp~[rbp+0],rsi", "setz~dl"]], [0, 0, 164, 0, 0, 2, 0, 1, 46, 7, 0.0036742356134357363, ["mov     [rbp+format], r12", "jmp     short loc_9743"], ["mov~[rbp+0],r12", "jmp~FOO"]], [0, 0, 164, 1, 0, 2, 0, 1, 48, 5, 0.0016353719829099345, ["sub     rbx, r12", "jz      loc_97D3"], ["sub~rbx,r12", "jz~FOO"]], [0, 0, 607, 0, 0, 3, 0, 0, 21, 54, 0.0007451930623696054, ["mov     r10, [rbp+var_370]", "mov     r15d, edx", "nop"], ["mov~r10,[rbp+0]", "mov~r15d,edx", "nop"]], [0, 0, 457, 0, 0, 1, 0, 0, 22, 42, 0.0034237925218120946, ["mov     r15d, ecx"], ["mov~r15d,ecx"]], [0, 0, 6, 0, 0, 1, 0, 0, 23, -1, 3.339241221648557e-05, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 5, 0, 1, 5, 0, 1, 5, -1, 0.000334994391787179, ["mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [1, 0, 467, 0, 0, 2, 0, 1, 20, 43, 0.00532245083181355, ["cmp     byte ptr [x_0+15h], 0", "jnz     short loc_7FB5"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 0, 25, -1, 0.00015197828636990228, ["mov     [rbp+dst_mode], r12d", "mov     byte ptr [rbp+var_370], 0", "mov     byte ptr [rbp+restore_dst_mode_0], 1"], ["mov~[rbp+0],r12d", "mov~[yte ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0"]], [4, 0, 5, 0, 2, 12, 1, 2, 19, -1, 0.0005325661640680518, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSAndSAreTheSam; \"%s and %s are the same file\"", "mov     x_0, rax", "mov     edx, 5; category"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0"]]], "func_feature": [376, 531, 964, 28, 685, 1118, 2, 3662, 0.01131, 65, 32], "succs": [[575], [0, 152], [18, 20], [2, 18], [400, 506], [400, 4], [40, 229], [8, 6], [585, 6], [6, 15], [57, 492], [10, 58], [557], [12, 559], [128, 593], [14, 7], [33], [16, 534], [29, 597], [18, 559], [18], [18], [366], [22, 367], [508, 86], [24, 616], [24, 508], [557], [27, 245], [41, 85], [59, 45], [30], [598, 30], [72, 94], [33, 17], [33], [33], [33], [33], [273, 74], [273, 39], [46, 471], [259, 279], [42, 279], [35, 628], [59, 44], [64, 51], [54, 583], [114, 47], [350], [49, 677], [64], [489, 355], [52, 5], [103, 55], [104, 103], [35], [557], [576, 57], [528, 115], [84, 191], [83, 60], [116], [163, 62], [69, 191], [142, 359], [65, 403], [222], [546, 67], [75], [354], [53, 70], [95, 63], [155], [168, 73], [90, 87], [75, 189], [193, 75], [75, 109], [80, 75], [112, 75], [75], [75, 61], [75], [75], [120, 76], [457], [90, 91], [98, 594], [88, 594], [148, 102], [90, 626], [90], [90], [138, 101], [94], [612], [96, 524], [144, 119], [66], [99, 403], [117, 118], [116], [191], [105, 103], [106, 103], [150, 103], [103], [191], [108], [108], [108], [108], [108], [108], [108], [139, 135], [539, 164], [117], [143], [124, 125], [48, 516], [53, 71], [122, 53], [76], [124, 126], [124, 549], [124], [213], [498], [129, 498], [136], [131, 415], [131, 134], [131, 438], [139, 140], [169, 141], [136], [63], [147], [139], [165, 381], [672], [557], [143], [554, 294], [145, 554], [156, 149], [147], [156, 557], [595, 107], [575], [382, 151], [161, 422], [153, 639], [153], [162, 557], [68, 222], [226, 157], [460, 678], [678, 159], [154, 167], [232, 190], [162], [181], [209, 166], [551], [277], [213], [438], [169, 381], [169, 396], [169, 385], [322, 420], [173], [173], [173], [113, 683], [179, 78], [121, 78], [268, 181], [268, 180], [200], [182, 439], [220], [184, 307], [184, 351], [366], [176, 187], [191], [207, 199], [202, 387], [191], [191], [93, 191], [56, 191], [191], [325, 406], [499, 197], [232, 203], [212, 614], [200], [208, 210], [232, 225], [582, 206], [204, 423], [615], [211, 235], [559, 215], [208, 387], [208], [225], [227, 614], [218, 354], [213], [219, 468], [536], [216, 465], [224, 123], [264, 559], [228, 351], [220], [226, 223], [226], [123, 237], [233, 559], [234, 550], [240, 684], [236, 231], [40, 230], [40], [236], [235, 557], [232], [284, 247], [241, 303], [250, 476], [266], [428, 237], [237], [445, 246], [43, 279], [256], [242, 450], [575], [244, 205], [445, 255], [276, 260], [247], [247], [578, 277], [646], [177, 251], [560], [253, 566], [256], [265, 684], [256], [256], [303], [681, 275], [302, 551], [261, 263], [261], [559], [445], [354], [266], [286], [274, 554], [473, 269], [331, 278], [331, 271], [74], [501], [282, 285], [681, 275], [288, 185], [299, 331], [292, 559], [648, 287], [280, 469], [323, 291], [282], [249, 282], [282, 254], [63], [615], [185], [542], [289, 543], [323, 300], [303], [554], [338, 293], [320, 309], [398, 295], [345, 564], [297, 605], [297, 298], [306, 316], [551], [464, 301], [384, 308], [613, 310], [304, 365], [316, 533], [321, 667], [653, 319], [170], [613, 318], [217], [573, 311], [262], [313, 315], [313, 545], [323], [316], [342, 327], [272, 326], [170], [186, 663], [366], [339, 334], [330, 188], [312, 324], [13], [66, 359], [660, 327], [561, 327], [188, 175], [345, 557], [336, 338], [171, 332], [339], [258, 26], [551], [551], [337, 551], [569, 340], [352, 353], [652, 348], [328, 341], [648], [649, 343], [379, 557], [400], [400, 346], [361, 358], [354], [349], [349], [409, 378], [352, 446], [366], [354, 491], [354], [393, 198], [361, 577], [363, 670], [359], [364], [361, 577], [391], [100, 374], [364, 342], [416, 602], [368, 366], [369, 366], [556, 366], [366], [565, 366], [366], [366], [660, 390], [562, 463], [535, 375], [531, 375], [408, 409], [383], [209], [380, 333], [557], [386, 559], [563, 383], [209], [557], [], [387], [611, 387], [401, 682], [392, 390], [665, 390], [604], [393, 357], [28, 245], [385, 172], [647, 399], [544, 397], [132, 647], [371, 510], [575], [401, 670], [360, 401], [472, 401], [401], [312, 176], [132], [11, 414], [408, 410], [408, 411], [408, 412], [408, 413], [408], [417], [133, 134], [602], [434, 439], [417], [123], [617, 419], [618, 419], [624, 426], [615], [217, 641], [424, 518], [267, 214], [123, 478], [123, 429], [123, 430], [123, 431], [432, 123], [123, 356], [123], [437, 183], [635, 443], [435, 638], [447, 183], [377, 444], [445], [619, 439], [484, 439], [439], [439], [648], [502, 270], [445], [636, 445], [449, 445], [673, 445], [451, 445], [452, 445], [445, 453], [680, 445], [445, 455], [445, 669], [445], [458, 445], [459, 445], [508, 445], [445], [581, 111], [474], [592, 462], [557], [536, 425], [467, 404], [395, 404], [671], [612, 500], [612, 469], [482, 461], [395, 405], [496, 481], [559], [474], [154], [485, 486], [477, 238], [480, 441], [441, 25], [496, 490], [461, 487], [19, 21], [488, 493], [580], [538, 485], [178, 79], [493, 335], [355, 5], [496], [5, 494], [576], [457, 507], [5], [552, 497], [513, 495], [501], [425, 603], [425], [97, 519], [505, 338], [501, 623], [580], [239, 503], [509, 294], [400, 347], [616, 515], [507], [512, 554], [373, 23], [584, 281], [521, 554], [514, 522], [522], [520, 616], [192], [536, 523], [537, 517], [97], [616, 530], [146, 555], [525, 551], [536], [612], [529, 551], [679], [589, 526], [252, 110], [388, 559], [616, 257], [376, 540], [557], [532, 317], [37, 38], [540], [604], [536, 174], [580], [286], [630, 542], [540, 647], [314, 262], [542], [137, 620], [262], [547, 550], [550], [610, 127], [610, 548], [248, 283], [557], [625, 551], [633, 551], [574, 551], [567, 551], [370], [568, 655], [557], [557], [557], [557], [557], [557], [557], [370], [560], [305], [], [575], [602], [570, 643], [604], [130, 572], [305, 362], [579, 607], [418, 575], [329, 561], [154], [582, 607], [504, 433], [394, 588], [607, 511], [389], [608, 586], [593], [590, 607], [586], [604], [89, 594], [558, 607], [644, 596], [631, 591], [155], [1], [389], [475, 644], [598, 31], [32, 599], [32, 606], [9], [600, 9], [196, 77], [602, 499], [602], [681], [192], [612, 470], [587, 607], [475, 637], [192], [81, 82], [541, 615], [672], [243, 479], [296, 398], [440, 619], [601, 421], [601, 372], [684, 436], [621, 622], [377], [621, 407], [552, 554], [427, 478], [553, 554], [194, 627], [194, 92], [632, 195], [160, 678], [640, 290], [609, 637], [195, 36], [554], [442, 454], [664, 634], [448, 201], [668, 644], [635], [624], [290], [642, 518], [571, 518], [518], [648], [34], [34, 645], [648], [650, 651], [648], [651], [659, 654], [672], [13], [658, 3], [], [527, 679], [656, 679], [19, 483], [658, 3], [402, 661], [391], [666, 676], [676, 662], [454], [402, 670], [50], [350], [344, 674], [456, 684], [657, 1], [559], [559], [675, 629], [344], [629], [50], [50, 221], [614], [1], [684], [671], [466, 395], [646], [672]], "fname": "copy_internal", "n_num": 685}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.058333333333333334, ["cmp     dword ptr [options], 3", "ja      loc_A1C7"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 16, 1, 0, 6, 2, 1, 0, 1, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "test    options, options", "jz      loc_A1E6"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~options,options", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, aSrcCopyC; \"src/copy.c\"", "lea     src_name, aCoHardLinkCoSy; \"!(co->hard_link && co->symbolic_link)\"", "mov     edx, 0B8Ah; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, -1, 0.020833333333333332, ["cmp     byte ptr [options+2Ch], 0", "jz      short loc_A0EB"], ["cmp~[yte ptr [options+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, aSrcCopyC; \"src/copy.c\"", "lea     src_name, aValidSparseMod; \"VALID_SPARSE_MODE (co->sparse_mode)\"", "mov     edx, 0B88h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 12, 0, 0, 4, 0, 1, 2, -1, 0.1, ["mov     eax, [options+0Ch]", "lea     r10d, [rax-1]", "cmp     r10d, 2", "ja      loc_A1A8"], ["mov~eax,[options+0]", "lea~r10d,[rax-1]+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, aSrcCopyC; \"src/copy.c\"", "lea     src_name, aValidReflinkMo; \"VALID_REFLINK_MODE (co->reflink_mode)\"", "mov     edx, 0B89h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.125, ["mov     r10d, [options+38h]", "cmp     r10d, 2", "ja      loc_A189"], ["mov~r10d,[options+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, -1, 0.13333333333333333, ["cmp     byte ptr [options+17h], 0", "jnz     short loc_A140"], ["cmp~[yte ptr [options+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, aSrcCopyC; \"src/copy.c\"", "lea     src_name, aValidBackupTyp; \"VALID_BACKUP_TYPE (co->backup_type)\"", "mov     edx, 0B87h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [2, 1, 2, 1, 1, 17, 3, 2, 6, -1, 0.06666666666666667, ["mov     [rsp+18h+first_dir_created_per_command_line_arg], 0", "push    rename_succeeded_0; rename_succeeded", "movzx   edx, dl; new_dst", "push    copy_into_self_0; copy_into_self", "mov     rename_succeeded_0, options; x", "xor     r8d, r8d; ancestors", "xor     ecx, ecx; parent", "mov     cs:top_level_dst_name, dst_name", "mov     cs:top_level_src_name, src_name", "lea     rax, [rsp+28h+first_dir_created_per_command_line_arg]", "push    rax; first_dir_created_per_command_line_arg", "push    1; command_line_arg", "call    copy_internal", "add     rsp, 20h", "mov     rsi, [rsp+18h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_A184"], ["mov~[rsp+0],0", "push~rename_succeeded_0", "movzx~edx,dl", "push~copy_into_self_0", "mov~rename_succeeded_0,options", "xor~r8d,r8d", "xor~ecx,ecx", "mov~<TAG>,dst_name", "mov~<TAG>,src_name", "lea~rax,[rsp+0]", "push~rax", "push~0", "call~FOO", "add~rsp,<STR>", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.125, ["cmp     eax, 2", "jz      short loc_A0F6"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.029166666666666667, ["cmp     r10d, 2", "jz      short loc_A165"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, aSrcCopyC; \"src/copy.c\"", "lea     src_name, aCoNull; \"co != NULL\"", "mov     edx, 0B86h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, aSrcCopyC; \"src/copy.c\"", "lea     src_name, aCoReflinkModeR; \"! (co->reflink_mode == REFLINK_ALWAYS &\"...", "mov     edx, 0B8Dh; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 7, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [8, 5, 17, 1, 17, 18, 2, 73, 0.03873, 11, 3], "succs": [[9, 5], [0, 13], [], [2, 11], [], [4, 7], [], [8, 6], [11, 3], [], [16, 14], [10, 12], [10, 15], [], [], [], []], "fname": "copy", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "src_to_dest_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_A230"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "src_to_dest_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a+10h]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,[a+0]", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "src_to_dest_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.3333333333333333, ["mov     rax, [rsp+38h+var_10]", "xor     rax, fs:28h", "jnz     short loc_A2D6"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 1, 16, 2, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 30h", "mov     [rsp+38h+ino], ino_0", "mov     [rsp+38h+dev], dev_0", "lea     dev_0, [rsp+38h+probe]; entry", "movq    xmm0, [rsp+38h+ino]", "mov     ino_0, cs:src_to_dest; table", "movhps  xmm0, [rsp+38h+dev]", "mov     [rsp+38h+probe.name], 0", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+38h+probe.st_ino], xmm0", "call    hash_delete", "test    ent, ent", "jz      short loc_A2C0"], ["push~rbx", "sub~rsp,0", "mov~[rsp+0],ino_0", "mov~<TAG>,dev_0", "lea~dev_0,[rsp+0]", "movq~xmm0,[rsp+0]", "mov~ino_0,<TAG>", "movhps~xmm0,<TAG>", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 3, 0, 2, 5, 0, 2, 1, 0, 0.0, ["mov     rdi, [ent+10h]; ptr", "mov     rbx, ent", "call    free", "mov     rdi, ent; ptr", "call    free"], ["mov~rdi,[ent+0]", "mov~rbx,ent", "call~FOO", "mov~rdi,ent", "call~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["add     rsp, 30h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]]], "func_feature": [4, 3, 6, 1, 5, 5, 2, 28, 0.06667, 2, 2], "succs": [[], [0, 4], [1, 3], [1], []], "fname": "forget_created", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 5, 1, 1, 14, 2, 2, 0, 0, 0.0, ["sub     rsp, 38h", "mov     [rsp+38h+ino], ino_0", "mov     [rsp+38h+dev], dev_0", "lea     dev_0, [rsp+38h+ent]; entry", "movq    xmm0, [rsp+38h+ino]", "mov     ino_0, cs:src_to_dest; table", "movhps  xmm0, [rsp+38h+dev]", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+38h+ent.st_ino], xmm0", "call    hash_lookup", "test    e, e", "jz      short loc_A340"], ["sub~rsp,0", "mov~[rsp+0],ino_0", "mov~<TAG>,dev_0", "lea~dev_0,[rsp+0]", "movq~xmm0,[rsp+0]", "mov~ino_0,<TAG>", "movhps~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~e,e", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.07500000000000001, ["mov     e, [e+10h]"], ["mov~e,[e+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rdx, [rsp+38h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_A344"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_A326"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 1, 6, 6, 2, 23, 0.075, 2, 2], "succs": [[1, 4], [3], [], [2, 5], [3], []], "fname": "src_to_dest_lookup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.05, ["xor     eax, eax", "jmp     short loc_A3B4"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 1, -1, 0.15000000000000002, ["cmp     ent, ent_from_table", "mov     dev, ent_from_table", "jz      short loc_A3C0"], ["cmp~ent,ent_from_table", "mov~dev,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 1, 3, 21, 1, 4, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, name", "push    rbp", "push    rbx", "mov     edi, 18h; n", "mov     r12, ino", "mov     rbp, dev", "sub     rsp, 8", "call    xmalloc", "mov     rdi, name; string", "mov     rbx, rax", "call    xstrdup", "mov     rdi, cs:src_to_dest; table", "mov     rsi, ent; entry", "mov     [ent+10h], rax", "mov     [ent], ino", "mov     [ent+8], dev", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_A3C4"], ["push~r13", "push~r12", "mov~r13,name", "push~rbp", "push~rbx", "mov~edi,0", "mov~r12,ino", "mov~rbp,dev", "sub~rsp,0", "call~FOO", "mov~rdi,name", "mov~rbx,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rsi,ent", "mov~[ent+0],rax", "mov~<TAG>,ino", "mov~[ent+0],dev", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 1, 0, 2, 5, 0, 2, 2, -1, 0.05, ["mov     rdi, [ent+10h]; ptr", "call    free", "mov     rdi, ent; ptr", "call    free", "mov     rax, [ent_from_table+10h]"], ["mov~rdi,[ent+0]", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~rax,[ent_from_table+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     ent_from_table", "pop     ino", "pop     name", "retn"], ["add~rsp,0", "pop~ent", "pop~ent_from_table", "pop~ino", "pop~name", "retn"]]], "func_feature": [6, 2, 9, 0, 6, 6, 4, 38, 0.04167, 1, 2], "succs": [[5], [0, 4], [], [1, 2], [5], []], "fname": "remember_copied", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 10, 2, 2, 0, 1, 0.0, ["lea     r8, src_to_dest_free; data_freer", "lea     rcx, src_to_dest_compare; comparator", "lea     rdx, src_to_dest_hash; hasher", "sub     rsp, 8", "xor     esi, esi; tuning", "mov     edi, 67h ; 'g'; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:src_to_dest, rax", "jz      short loc_A406"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "sub~rsp,0", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 13, 0.0, 4, 2], "succs": [[], [0, 2], []], "fname": "hash_init", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     rdi, cs:src_to_dest; table", "jmp     hash_free"], ["mov~rdi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "forget_all", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[6, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [scan], edi", "mov     qword ptr [scan+18h], 0", "mov     qword ptr [scan+28h], 0", "mov     qword ptr [scan+8], 0", "mov     byte ptr [scan+20h], 0", "mov     byte ptr [scan+21h], 0", "mov     dword ptr [scan+10h], 1", "retn"], ["mov~<TAG>,edi", "mov~[word ptr [scan+0],0", "mov~[word ptr [scan+0],0", "mov~[word ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "mov~[word ptr [scan+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "extent_scan_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 42, 0, 0, 2, 1, 1, 0, 0, 0.30023228803716606, ["test    byte ptr [rbx+10h], 1", "jnz     short loc_A6D0"], ["test~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 42, 2, 1, 8, 1, 2, 7, 6, 0.2229965156794425, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     r8d, [rsp+var_s14]", "add     rbx, rax", "mov     [scan+28h], rax", "test    r8d, r8d", "jz      loc_A680"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~r8d,[rsp+0]", "add~rbx,rax", "mov~[scan+0],rax", "test~r8d,r8d", "jz~FOO"]], [1, 0, 42, 1, 0, 3, 0, 0, 14, 6, 0.17087688734030199, ["add     ecx, 1", "cmp     ecx, r8d", "jnb     short loc_A680"], ["add~ecx,0", "cmp~ecx,r8d", "jnb~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 14, 6, 0.047473867595818814, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 42, 1, 0, 8, 1, 1, 11, 5, 0.10501355013550134, ["mov     r9d, [rsi+28h]", "mov     r10, [rbx+8]", "mov     rdi, [rbx]", "mov     r11d, r9d", "add     rdi, r10", "and     r11d, 0FFFFFFFEh", "cmp     [rbx+10h], r11d", "jz      loc_A660"], ["mov~r9d,[rsi+0]", "mov~r10,[rbx+0]", "mov~rdi,<TAG>", "mov~r11d,r9d", "add~rdi,r10", "and~r11d,0", "cmp~[rbx+0],r11d", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 10, 5, 0.21544715447154472, ["test    r15d, r15d", "jz      short loc_A5E0"], ["test~r15d,r15d", "jz~FOO"]], [1, 0, 42, 1, 0, 8, 0, 0, 13, 7, 0.09272164150212932, ["mov     esi, r15d", "add     r15d, 1", "lea     rdi, [rsi+rsi*2]", "mov     rsi, [scan+28h]", "lea     rbx, [rsi+rdi*8]", "mov     [last_ei], rdx", "mov     [last_ei+8], rax", "mov     [last_ei+10h], r9d"], ["mov~esi,r15d", "add~r15d,0", "lea~rdi,<TAG>", "mov~rsi,[scan+0]", "lea~rbx,<TAG>", "mov~<TAG>,rdx", "mov~[last_ei+0],rax", "mov~[last_ei+0],r9d"]], [0, 0, 42, 0, 0, 2, 0, 0, 12, 4, 0.04011807975222611, ["cmp     rdx, rdi", "jnb     short loc_A5ED"], ["cmp~rdx,rdi", "jnb~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 12, 8, 0.03285907859078592, ["mov     r9d, [rsi+28h]"], ["mov~r9d,[rsi+0]"]], [1, 0, 42, 1, 0, 5, 0, 0, 11, 4, 0.2183507549361208, ["mov     rax, [rbx+8]", "add     rax, [rbx]", "cmp     r15d, 47h ; 'G'", "mov     [scan+8], rax", "jbe     loc_A48F"], ["mov~rax,[rbx+0]", "add~rax,<TAG>", "cmp~r15d,0", "mov~[scan+0],rax", "jbe~FOO"]], [0, 0, 42, 0, 0, 4, 1, 1, 10, 3, 0.23315911730545877, ["mov     ecx, r15d", "test    al, al", "mov     [scan+18h], rcx", "jnz     short loc_A6DC"], ["mov~ecx,r15d", "test~al,al", "mov~[scan+0],rcx", "jnz~FOO"]], [1, 1, 42, 1, 0, 16, 2, 0, 0, 4, 0.0, ["push    r15", "push    r14", "xor     r15d, r15d", "push    r13", "push    r12", "mov     r14, scan", "push    rbp", "push    rbx", "mov     r13, 7FFFFFFFFFFFFFFFh", "sub     rsp, 1018h", "mov     rbx, [scan+28h]", "mov     rbp, rsp", "mov     rax, fs:28h", "mov     [rsp+var_s1008], rax", "xor     eax, eax", "lea     r12, [rbp+var_s20]"], ["push~r15", "push~r14", "xor~r15d,r15d", "push~r13", "push~r12", "mov~r14,scan", "push~rbp", "push~rbx", "mov~r13,0", "sub~rsp,<STR>", "mov~rbx,[scan+0]", "mov~rbp,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r12,[rbp+0]"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.02177700348432056, ["mov     eax, r15d", "mov     [scan+18h], rax"], ["mov~eax,r15d", "mov~[scan+0],rax"]], [0, 0, 6, 0, 0, 2, 1, 1, 10, 4, 0.01684088269454123, ["test    al, al", "jnz     short loc_A6D5"], ["test~al,al", "jnz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 9, 4, 0.03397212543554007, ["mov     byte ptr [scan+21h], 1"], ["mov~[yte ptr [scan+0],0"]], [0, 0, 42, 0, 0, 2, 0, 1, 12, 5, 0.06315331010452961, ["cmp     rdx, rdi", "jnz     loc_A58C"], ["cmp~rdx,rdi", "jnz~FOO"]], [1, 0, 42, 3, 0, 9, 1, 0, 4, 9, 0.2067363530778165, ["mov     rdi, [scan+28h]; p", "mov     edx, 18h", "add     rcx, rax", "mov     rax, rdx", "xor     esi, esi", "mov     [scan+18h], rcx", "sub     rbx, rdi", "mul     rcx", "jo      loc_A749"], ["mov~rdi,[scan+0]", "mov~edx,0", "add~rcx,rax", "mov~rax,rdx", "xor~esi,esi", "mov~[scan+0],rcx", "sub~rbx,rdi", "mul~,rcx", "jo~FOO"]], [0, 0, 42, 0, 0, 5, 0, 1, 3, 10, 0.2148664343786295, ["mov     rcx, [scan+18h]", "mov     rdx, rax", "not     rdx", "cmp     rcx, rdx", "ja      loc_A72A"], ["mov~rcx,[scan+0]", "mov~rdx,rax", "not~rdx", "cmp~rcx,rdx", "ja~FOO"]], [1, 0, 42, 2, 0, 5, 0, 1, 13, 7, 0.04621564072783585, ["sub     rax, length_adjust", "mov     [rsi], new_logical", "sub     ecx, 1", "mov     [rsi+10h], rax", "jmp     loc_A60B"], ["sub~rax,length_adjust", "mov~<TAG>,new_logical", "sub~ecx,0", "mov~[rsi+0],rax", "jmp~FOO"]], [0, 1, 42, 0, 0, 3, 0, 0, 9, 4, 0.258130081300813, ["cmp     r15d, 48h ; 'H'", "movzx   eax, byte ptr [scan+21h]", "jbe     short loc_A6F0"], ["cmp~r15d,<STR>", "movzx~eax,[yte ptr [scan+0]", "jbe~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 5, 8, 0.2229965156794425, ["test    rax, rax", "js      loc_A753"], ["test~rax,rax", "js~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 5, 9, 0.0, ["mov     esi, 1", "jmp     loc_A516"], ["mov~esi,0", "jmp~FOO"]], [0, 0, 42, 1, 0, 4, 0, 0, 12, 3, 0.07467092528068137, ["mov     r10, new_logical", "sub     r10, rdx", "cmp     length_adjust, rax", "jnb     loc_A6B8"], ["mov~r10,new_logical", "sub~r10,rdx", "cmp~length_adjust,rax", "jnb~FOO"]], [0, 0, 42, 0, 0, 3, 0, 1, 11, 4, 0.10288424312814556, ["mov     rdi, [scan+8]", "cmp     rdi, rdx", "ja      short loc_A591"], ["mov~rdi,[scan+0]", "cmp~rdi,rdx", "ja~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 12, 3, 0.0014518002322880372, ["jmp     short loc_A6DC"], ["jmp~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 6, 7, 0.21544715447154472, ["test    rsi, rsi", "jnz     loc_A753"], ["test~rsi,rsi", "jnz~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.0017421602787456446, ["cmp     qword ptr [scan+8], 0", "mov     byte ptr [scan+21h], 1", "setnz   al", "jmp     loc_A5B0"], ["cmp~[word ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "setnz~al", "jmp~FOO"]], [0, 0, 42, 0, 0, 3, 1, 1, 2, 3, 0.22473867595818817, ["mov     eax, [rsp+var_s14]", "test    eax, eax", "jz      loc_A718"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 2, 2, 0.036875725900116146, ["xor     eax, eax", "cmp     qword ptr [scan+8], 0", "jnz     short loc_A5B0"], ["xor~eax,eax", "cmp~[word ptr [scan+0],0", "jnz~FOO"]], [1, 2, 42, 0, 1, 18, 3, 2, 1, 3, 0.23315911730545877, ["xor     eax, eax", "mov     ecx, 200h", "mov     rdi, fiemap", "rep stosq", "mov     rax, [scan+8]", "mov     edx, [scan+10h]", "mov     esi, 0C020660Bh; request", "mov     edi, [scan]; fd", "mov     [rsp+var_s18], 48h ; 'H'", "mov     [rsp+var_s0], rax", "not     rax", "mov     [rsp+var_s10], edx", "mov     [rsp+var_s8], rax", "mov     rdx, fiemap", "xor     eax, eax", "call    _ioctl", "test    eax, eax", "js      loc_A5A0"], ["xor~eax,eax", "mov~ecx,<STR>", "mov~rdi,fiemap", "stosq~<TAG>,", "mov~rax,[scan+0]", "mov~edx,[scan+0]", "mov~esi,0", "mov~edi,<TAG>", "mov~[rsp+0],<STR>", "mov~<TAG>,rax", "not~rax", "mov~[rsp+0],edx", "mov~[rsp+0],rax", "mov~rdx,fiemap", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 3, 0, 0, 2, 1, 0, 3, 2, 0.0, ["mov     byte ptr [scan+20h], 1", "xor     eax, eax"], ["mov~[yte ptr [scan+0],0", "xor~eax,eax"]], [0, 0, 4, 1, 0, 8, 0, 1, 11, 3, 0.0011614401858304297, ["lea     eax, [r15-1]", "mov     rdx, [scan+28h]", "lea     rcx, [rax+rax*2]", "mov     [scan+18h], rax", "mov     rax, [rdx+rcx*8-18h]", "add     rax, [rdx+rcx*8-10h]", "mov     [scan+8], rax", "jmp     short loc_A6DC"], ["lea~eax,[r15-1]+0]", "mov~rdx,[scan+0]", "lea~rcx,<TAG>", "mov~[scan+0],rax", "mov~rax,[rdx+0]", "add~rax,[rdx+0]", "mov~[scan+0],rax", "jmp~FOO"]], [0, 0, 42, 2, 0, 10, 0, 0, 14, 6, 0.059233449477351915, ["mov     edx, ecx", "mov     rdi, r13", "lea     rax, ds:0[rdx*8]", "sub     rax, rdx", "lea     rsi, [r12+rax*8]", "mov     rax, [rsi+10h]", "mov     rdx, [rsi]", "sub     rdi, rax", "cmp     rdx, rdi", "jbe     loc_A568"], ["mov~edx,ecx", "mov~rdi,r13", "lea~rax,<TAG>", "sub~rax,rdx", "lea~rsi,<TAG>", "mov~rax,[rsi+0]", "mov~rdx,<TAG>", "sub~rdi,rax", "cmp~rdx,rdi", "jbe~FOO"]], [1, 0, 42, 2, 0, 6, 0, 0, 13, 7, 0.06547619047619048, ["add     ecx, 1", "add     rax, r10", "mov     [rbx+10h], r9d", "cmp     ecx, r8d", "mov     [rbx+8], rax", "jb      short loc_A613"], ["add~ecx,0", "add~rax,r10", "mov~[rbx+0],r9d", "cmp~ecx,r8d", "mov~[rbx+0],rax", "jb~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6956; \"extent_scan_read\"", "lea     rsi, aSrcExtentScanC; \"src/extent-scan.c\"", "lea     rdi, aScanEiCountSiz; \"scan->ei_count <= SIZE_MAX - fiemap->fm\"...", "mov     edx, 7Eh ; '~'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.0429732868757259, ["mov     rbx, [rsp+var_s1008]", "xor     rbx, fs:28h", "jnz     loc_A758"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, 2, 0.0351335656213705, ["mov     eax, 1", "jmp     loc_A5B0"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 9, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6956; \"extent_scan_read\"", "lea     rsi, aSrcExtentScanC; \"src/extent-scan.c\"", "lea     rdi, aFmExtentsIFeLo; \"fm_extents[i].fe_logical <= OFF_T_MAX -\"...", "mov     edx, 8Dh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 42, 1, 0, 6, 0, 1, 8, 7, 0.13240418118466898, ["mov     rax, [rsp+var_s30]", "mov     rdx, [rsp+var_s20]", "mov     rcx, r13", "sub     rcx, rax", "cmp     rdx, rcx", "ja      loc_A63A"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,r13", "sub~rcx,rax", "cmp~rdx,rcx", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1018h", "pop     rbx", "pop     fiemap", "pop     r12", "pop     r13", "pop     scan", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~fiemap", "pop~r12", "pop~r13", "pop~scan", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 42, 0, 0, 2, 1, 0, 9, 6, 0.13182346109175377, ["xor     ecx, ecx", "mov     rsi, r12"], ["xor~ecx,ecx", "mov~rsi,r12"]]], "func_feature": [6, 19, 28, 8, 43, 62, 1, 190, 0.09589, 5, 20], "succs": [[19, 14], [0, 39], [0, 32], [0], [15, 7], [4, 23], [2], [22, 6], [6], [24, 29], [9, 36], [29], [36], [12, 31], [12], [33, 7], [20, 21], [16, 34], [2], [10, 13], [25, 37], [20], [18, 28], [8, 22], [36], [1, 37], [35], [17, 26], [35, 30], [27, 28], [35], [36], [5, 38], [32, 3], [], [40, 41], [35], [], [], [42, 38], [], [], [5]], "fname": "extent_scan_read", "n_num": 43}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 7, 0, 1, 0, 0, 0.0, ["mov     rax, a", "mov     rcx, dest; to", "mov     edx, [a+10h]; tofd", "mov     r8d, [rax+14h]; flags", "mov     a, [a+8]; from", "mov     edi, [a]; fromfd", "jmp     _linkat"], ["mov~rax,a", "mov~rcx,dest", "mov~edx,[a+0]", "mov~r8d,[rax+0]", "mov~a,[a+0]", "mov~edi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_link", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     rax, a", "mov     rdx, dest; to", "mov     esi, [a+8]; tofd", "mov     dest, [a]; from", "jmp     _symlinkat"], ["mov~rax,a", "mov~rdx,dest", "mov~esi,[a+0]", "mov~dest,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_symlink", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 0, 0.09941520467836257, ["mov     rsi, [rsp+178h+var_40]", "xor     rsi, fs:28h; from", "mov     eax, ecx", "jnz     loc_A960"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,ecx", "jnz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 4, 0, 0.043859649122807015, ["mov     [rsp+178h+err], rax", "call    _malloc", "test    rax, rax", "mov     r12, rax", "jz      loc_A918"], ["mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 14, 1, 1, 7, 0, 1, 3, 0, 0.1608187134502924, ["mov     rdi, dstname; name", "call    last_component", "sub     rax, dstname", "lea     rdi, [rax+9]; size", "mov     rdx, rax", "cmp     rdi, 100h", "jbe     loc_A900"], ["mov~rdi,dstname", "call~FOO", "sub~rax,dstname", "lea~rdi,[rax+0]", "mov~rdx,rax", "cmp~rdi,0", "jbe~FOO"]], [3, 0, 9, 0, 2, 18, 2, 3, 5, 0, 0.17543859649122806, ["mov     rsi, dstname; src", "mov     rdi, r12; dest", "call    _mempcpy", "mov     rsi, 5858585858587543h", "lea     rdx, [rsp+178h+arg]; args", "lea     rcx, try_link; tryfunc", "mov     [rax], rsi", "mov     byte ptr [rax+8], 0", "xor     esi, esi; suffixlen", "mov     r8d, 6; x_suffix_len", "mov     rdi, r12; tmpl", "mov     [rsp+178h+arg.srcdir], r15d", "mov     [rsp+178h+arg.srcname], srcname", "mov     [rsp+178h+arg.dstdir], ebp", "mov     [rsp+178h+arg.flags], r13d", "call    try_tempname_len", "test    eax, eax", "jz      loc_A928"], ["mov~rsi,dstname", "mov~rdi,r12", "call~FOO", "mov~rsi,0", "lea~rdx,[rsp+0]", "lea~rcx,<TAG>", "mov~<TAG>,rsi", "mov~[yte ptr [rax+0],0", "xor~esi,esi", "mov~r8d,0", "mov~rdi,r12", "mov~[rsp+0],r15d", "mov~[rsp+0],srcname", "mov~[rsp+0],ebp", "mov~[rsp+0],r13d", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 0, 1, 4, 0, 0.12280701754385964, ["lea     rax, [rsp+178h+buf]", "mov     [rsp+178h+var_178], rax", "mov     r12, rax", "jmp     loc_A837"], ["lea~rax,[rsp+0]", "mov~<TAG>,rax", "mov~r12,rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 5, 0, 0.02046783625730994, ["lea     rax, [rsp+178h+buf]", "mov     rdx, [rsp+178h+err]; n", "mov     [rsp+178h+var_178], rax"], ["lea~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~<TAG>,rax"]], [1, 0, 16, 0, 0, 2, 0, 1, 1, 0, 0.12719298245614036, ["cmp     r9b, 1", "jnz     loc_A8A8"], ["cmp~r9b,0", "jnz~FOO"]], [0, 0, 17, 0, 1, 4, 0, 2, 2, 0, 0.04093567251461988, ["call    ___errno_location", "mov     r9d, dword ptr [rsp+178h+var_178]", "mov     ecx, [rax]", "jmp     loc_A7E1"], ["call~FOO", "mov~r9d,<TAG>", "mov~ecx,<TAG>", "jmp~FOO"]], [1, 0, 19, 1, 0, 18, 2, 1, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r15d, edi", "push    r13", "push    r12", "mov     r14, srcname", "push    rbp", "push    rbx", "mov     rbx, dstname", "mov     ebp, edx", "mov     r13d, r8d", "sub     rsp, 148h", "mov     ecx, [rsp+178h+linkat_errno]", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "test    ecx, ecx", "js      loc_A8D8"], ["push~r15", "push~r14", "mov~r15d,edi", "push~r13", "push~r12", "mov~r14,srcname", "push~rbp", "push~rbx", "mov~rbx,dstname", "mov~ebp,edx", "mov~r13d,r8d", "sub~rsp,0", "mov~ecx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ecx,ecx", "js~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 7, 0, 0.0, ["call    ___errno_location", "mov     ecx, [rax]"], ["call~FOO", "mov~ecx,<TAG>"]], [1, 0, 7, 0, 1, 8, 1, 2, 6, 0, 0.05847953216374269, ["mov     rcx, dstname; new", "mov     edx, ebp; newfd", "mov     rsi, r12; old", "mov     edi, ebp; oldfd", "call    _renameat", "test    eax, eax", "mov     ecx, 0FFFFFFFFh", "jz      short loc_A947"], ["mov~rcx,dstname", "mov~edx,ebp", "mov~rsi,r12", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ecx,0", "jz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 1, 0, 0.007309941520467836, ["mov     rcx, dstname; to", "mov     dword ptr [rsp+178h+var_178], r9d", "call    _linkat", "test    eax, eax", "mov     ecx, eax", "jz      short loc_A8A8"], ["mov~rcx,dstname", "mov~<TAG>,r9d", "call~FOO", "test~eax,eax", "mov~ecx,eax", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 2, 0, 0.14035087719298245, ["cmp     ecx, 11h", "jnz     loc_A8A8"], ["cmp~ecx,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 6, 0, 0.0847953216374269, ["call    ___errno_location", "mov     ecx, [rax]"], ["call~FOO", "mov~ecx,<TAG>"]], [0, 0, 3, 0, 1, 3, 0, 2, 5, 0, 0.017543859649122806, ["call    ___errno_location", "mov     ecx, [rax]", "jmp     short loc_A8A8"], ["call~FOO", "mov~ecx,<TAG>", "jmp~FOO"]], [0, 0, 5, 0, 1, 7, 1, 2, 7, 0, 0.029239766081871343, ["xor     edx, edx; flag", "mov     rsi, r12; name", "mov     edi, ebp; fd", "mov     dword ptr [rsp+178h+err], ecx", "call    _unlinkat", "mov     ecx, dword ptr [rsp+178h+err]", "jmp     loc_A891"], ["xor~edx,edx", "mov~rsi,r12", "mov~edi,ebp", "mov~[word ptr [rsp+0],ecx", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, 0, 0.0, ["add     rsp, 148h", "pop     dstname", "pop     dstdir", "pop     r12", "pop     flags", "pop     srcname", "pop     srcdir", "retn"], ["add~rsp,0", "pop~dstname", "pop~dstdir", "pop~r12", "pop~flags", "pop~srcname", "pop~srcdir", "retn"]], [0, 0, 4, 0, 0, 2, 0, 1, 7, 0, 0.1023391812865497, ["cmp     r12, [rsp+178h+var_178]", "jz      short loc_A8A8"], ["cmp~r12,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 1, 8, 0, 0.0, ["mov     rdi, r12; ptr", "mov     dword ptr [rsp+178h+var_178], ecx", "call    free", "mov     ecx, dword ptr [rsp+178h+var_178]", "nop     dword ptr [rax]"], ["mov~rdi,r12", "mov~<TAG>,ecx", "call~FOO", "mov~ecx,<TAG>", "nop~<TAG>"]]], "func_feature": [13, 9, 26, 2, 20, 28, 1, 111, 0.06155, 2, 3], "succs": [[], [0, 17], [6, 15], [2, 5], [11, 14], [4], [4], [1, 13], [7], [12, 7], [16], [16, 10], [8, 1], [1, 3], [18], [1], [18], [], [1, 19], [1]], "fname": "force_linkat", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 9, 0, 0, 3, 0, 1, 0, 0, 0.0661764705882353, ["lea     r14, [rsp+168h+buf]", "mov     r12, r14", "jmp     loc_A9ED"], ["lea~r14,[rsp+0]", "mov~r12,r14", "jmp~FOO"]], [1, 0, 12, 1, 1, 7, 0, 1, 3, 4, 0.16544117647058823, ["mov     rdi, dstname; name", "call    last_component", "sub     rax, dstname", "lea     rdi, [rax+9]; size", "mov     r15, rax", "cmp     rdi, 100h", "jbe     loc_AAB8"], ["mov~rdi,dstname", "call~FOO", "sub~rax,dstname", "lea~rdi,[rax+0]", "mov~r15,rax", "cmp~rdi,0", "jbe~FOO"]], [0, 0, 5, 0, 2, 9, 1, 3, 7, 3, 0.0, ["call    ___errno_location", "mov     r8d, [rax]", "xor     edx, edx; flag", "mov     rsi, r12; name", "mov     edi, ebp; fd", "mov     [rsp+168h+err], r8d", "call    _unlinkat", "mov     r8d, [rsp+168h+err]", "jmp     loc_AA41"], ["call~FOO", "mov~r8d,<TAG>", "xor~edx,edx", "mov~rsi,r12", "mov~edi,ebp", "mov~[rsp+0],r8d", "call~FOO", "mov~r8d,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 6, 3, 0.07720588235294118, ["mov     rcx, dstname; new", "mov     edx, ebp; newfd", "mov     rsi, r12; old", "mov     edi, ebp; oldfd", "call    _renameat", "test    eax, eax", "mov     r8d, 0FFFFFFFFh", "jz      loc_AA41"], ["mov~rcx,dstname", "mov~edx,ebp", "mov~rsi,r12", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~r8d,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 7, 2, 0.09926470588235294, ["cmp     r12, r14", "jz      short loc_AA60"], ["cmp~r12,r14", "jz~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 6, 3, 0.044117647058823525, ["call    ___errno_location", "mov     r8d, [rax]"], ["call~FOO", "mov~r8d,<TAG>"]], [0, 0, 10, 0, 1, 5, 1, 2, 4, 3, 0.09926470588235294, ["call    _malloc", "test    rax, rax", "mov     r12, rax", "lea     r14, [rsp+168h+buf]", "jz      loc_AAC8"], ["call~FOO", "test~rax,rax", "mov~r12,rax", "lea~r14,[rsp+0]", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 2, 0.13786764705882354, ["cmp     cl, 1", "jnz     loc_AA60"], ["cmp~cl,0", "jnz~FOO"]], [0, 0, 15, 0, 1, 4, 0, 2, 2, 3, 0.044117647058823525, ["call    ___errno_location", "mov     ecx, [rsp+168h+err]", "mov     r8d, [rax]", "jmp     loc_A9A5"], ["call~FOO", "mov~ecx,[rsp+0]", "mov~r8d,<TAG>", "jmp~FOO"]], [1, 0, 17, 1, 0, 15, 2, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, srcname", "push    rbp", "push    rbx", "mov     ebp, esi", "mov     rbx, dstname", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+168h+var_40], rax", "xor     eax, eax", "test    r8d, r8d", "js      loc_AA90"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,srcname", "push~rbp", "push~rbx", "mov~ebp,esi", "mov~rbx,dstname", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~r8d,r8d", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 138h", "pop     dstname", "pop     dstdir", "pop     r12", "pop     srcname", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~dstname", "pop~dstdir", "pop~r12", "pop~srcname", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.11029411764705882, ["mov     rsi, [rsp+168h+var_40]", "xor     rsi, fs:28h; tofd", "mov     eax, r8d", "jnz     loc_AB18"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,r8d", "jnz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 1, 2, 0.009191176470588236, ["mov     [rsp+168h+err], ecx", "call    _symlinkat", "test    eax, eax", "mov     r8d, eax", "jz      short loc_AA60"], ["mov~[rsp+0],ecx", "call~FOO", "test~eax,eax", "mov~r8d,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 8, 0, 2, 17, 2, 3, 5, 4, 0.15808823529411764, ["mov     rdx, r15; n", "mov     rsi, dstname; src", "mov     rdi, r12; dest", "call    _mempcpy", "mov     rdx, 5858585858587543h", "lea     rcx, try_symlink; tryfunc", "xor     esi, esi; suffixlen", "mov     [rax], rdx", "lea     rdx, [rsp+168h+arg]; args", "mov     byte ptr [rax+8], 0", "mov     r8d, 6; x_suffix_len", "mov     rdi, r12; tmpl", "mov     [rsp+168h+arg.srcname], srcname", "mov     [rsp+168h+arg.dstdir], ebp", "call    try_tempname_len", "test    eax, eax", "jz      loc_AAD8"], ["mov~rdx,r15", "mov~rsi,dstname", "mov~rdi,r12", "call~FOO", "mov~rdx,0", "lea~rcx,<TAG>", "xor~esi,esi", "mov~<TAG>,rdx", "lea~rdx,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~r8d,0", "mov~rdi,r12", "mov~[rsp+0],srcname", "mov~[rsp+0],ebp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 5, 2, 0.022058823529411763, ["call    ___errno_location", "mov     r8d, [rax]", "jmp     short loc_AA60"], ["call~FOO", "mov~r8d,<TAG>", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 2, 0.14705882352941177, ["cmp     r8d, 11h", "jnz     loc_AA60"], ["cmp~r8d,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 1, 8, 2, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+168h+err], r8d", "call    free", "mov     r8d, [rsp+168h+err]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdi,r12", "mov~[rsp+0],r8d", "call~FOO", "mov~r8d,[rsp+0]", "nop~[word ptr [rax+0]"]]], "func_feature": [13, 9, 26, 1, 18, 26, 2, 102, 0.06556, 2, 3], "succs": [[14], [0, 6], [4], [2, 4], [17, 11], [4], [14, 15], [16, 11], [7], [12, 7], [], [10, 13], [8, 11], [], [3, 5], [11], [1, 11], [11]], "fname": "force_symlinkat", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, -1, 0.16666666666666666, ["cmp     eax, 0FFFFFFFFh", "jnz     short loc_AB72"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 2, -1, 0.0, ["mov     rdi, dst_name; arg", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     src_name, rax", "call    _dcgettext", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~src_name,rax", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 0, 1, 9, 0, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, src_name", "push    rbx", "mov     rbp, dst_name", "call    qcopy_acl", "cmp     eax, 0FFFFFFFEh", "mov     ebx, eax", "jz      short loc_AB80"], ["push~r12", "push~rbp", "mov~r12,src_name", "push~rbx", "mov~rbp,dst_name", "call~FOO", "cmp~eax,0", "mov~ebx,eax", "jz~FOO"]], [0, 0, 0, 0, 3, 15, 2, 3, 1, 0, 0.0, ["mov     rdi, src_name; arg", "call    quote", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, rbp", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "mov     eax, ebx", "pop     ret", "pop     rbp", "pop     src_name", "retn"], ["mov~rdi,src_name", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rbp", "xor~eax,eax", "xor~edi,edi", "call~FOO", "mov~eax,ebx", "pop~ret", "pop~rbp", "pop~src_name", "retn"]]], "func_feature": [8, 5, 10, 0, 5, 5, 3, 46, 0.03333, 2, 0], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "copy_acl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, name", "push    rbx", "call    qset_acl", "test    eax, eax", "mov     ebx, eax", "jz      short loc_ABF9"], ["push~r12", "push~rbp", "mov~rbp,name", "push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, name; arg", "call    quote", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 3, 28, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 12, 0, 1, 3, 0, 2, 0, 0, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_AC66"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_ACB8"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_ACE0"], ["cmp~buf_size,r15", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_ACA0"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_AC50"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_AC8B"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_AC8B"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_ACD0"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_AC8B"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_AC8B"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_AC40"], ["mov~buf_size,0", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [7, 5, 18, 0, 13, 19, 2, 65, 0.12121, 0, 3], "succs": [[8, 7], [0, 7], [9, 10], [2, 4], [1, 12], [1, 12], [12], [3, 6], [12], [12], [5], [5], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 9, 0, 1, 6, 1, 2, 0, 0, 0.11029411764705882, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_AD7C"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 1, 3, 0.05514705882352941, ["xor     ebx, ebx", "test    vallist_0, vallist_0", "mov     rbp, arglen", "mov     [rsp+58h+ambiguous], 0", "jnz     short loc_AD92"], ["xor~ebx,ebx", "test~vallist_0,vallist_0", "mov~rbp,arglen", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 3, 3, 0.09191176470588235, ["add     i, 1", "add     r12, [rsp+58h+valsize]", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      loc_AE10"], ["add~i,0", "add~r12,[rsp+0]", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 0, 9, 0, 1, 4, 0, 2, 4, 1, 0.09558823529411764, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_AE38"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 2, 0.125, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_ADCD"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 17, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "mov     r12, vallist_0", "push    rbp", "push    rbx", "mov     r15, 0FFFFFFFFFFFFFFFFh", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "mov     [rsp+58h+valsize], valsize_0", "call    _strlen", "mov     r13, [arglist]", "test    r13, r13", "jz      loc_AE20"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "mov~r12,vallist_0", "push~rbp", "push~rbx", "mov~r15,0", "sub~rsp,0", "mov~<TAG>,arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "call~FOO", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 6, 4, 0.007352941176470588, ["mov     [rsp+58h+ambiguous], 1"], ["mov~[rsp+0],0"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.0625, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_ADC8"], ["cmp~matchind,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 2, 3, 0.044117647058823525, ["jmp     loc_ADDA"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 5, 1, 1, 6, 3, 0.025735294117647058, ["mov     matchind, i", "add     matchind, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jnz     short loc_ADDA"], ["mov~matchind,i", "add~matchind,0", "mov~r13,<TAG>", "test~r13,r13", "jnz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 4, 3, 0.03676470588235294, ["add     i, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      short loc_AE10"], ["add~i,0", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.016544117647058824, ["mov     matchind, i", "jmp     short loc_AD7C"], ["mov~matchind,i", "jmp~FOO"]], [1, 0, 9, 2, 1, 11, 1, 1, 5, 4, 0.016544117647058824, ["mov     rdx, [rsp+58h+valsize]; n", "mov     rsi, r12; s2", "mov     rdi, rdx", "imul    rdi, matchind", "add     rdi, [rsp+58h+vallist]; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdx,[rsp+0]", "mov~rsi,r12", "mov~rdi,rdx", "imul~rdi,matchind", "add~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 9, 0, 1, 4, 0, 2, 3, 1, 0.08823529411764705, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      loc_AE38"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 28h", "mov     rax, r15", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r15", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.014705882352941176, ["mov     matchind, i", "jmp     short loc_AE20"], ["mov~matchind,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 0, 4, -1, 0.03676470588235294, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovnz  matchind, rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovnz~matchind,rax"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.05514705882352941, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_AD50"], ["cmp~matchind,0", "jnz~FOO"]]], "func_feature": [6, 9, 20, 0, 18, 28, 0, 89, 0.04902, 0, 8], "succs": [[2, 13], [0, 8], [0, 16], [7, 15], [10, 3], [1, 14], [10], [9, 6], [4], [16, 4], [16, 4], [2], [2], [17, 15], [], [14], [14], [11, 12]], "fname": "argmatch", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_AE66"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_AEA0"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 0, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 0, 11, 0, 0, 0, 0, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_AFC8"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 10, 1, 2, 21, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 8", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "call    _dcgettext", "mov     rdi, rax; s", "mov     rsi, rbx; stream", "call    _fputs_unlocked", "mov     r15, [arglist]", "test    r15, r15", "jz      loc_AF98"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "mov~rbx,<TAG>", "call~FOO", "mov~rdi,rax", "mov~rsi,rbx", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 8", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [2, 0, 9, 2, 2, 14, 2, 3, 3, 2, 0.1388888888888889, ["mov     rdi, r15; arg", "add     i, 1", "mov     last_val, rbp", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "add     rbp, valsize", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jz      short loc_AF98"], ["mov~rdi,r15", "add~i,0", "mov~last_val,rbp", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "add~rbp,valsize", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "jz      short loc_AF10"], ["test~i,i", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_AF10"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_AF48"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 9, 2, 2, 13, 2, 3, 4, 3, 0.061111111111111116, ["mov     rdi, r15; arg", "add     i, 1", "add     rbp, valsize", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS; \", %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jnz     short loc_AF48"], ["mov~rdi,r15", "add~i,0", "add~rbp,valsize", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]]], "func_feature": [7, 10, 14, 0, 11, 15, 1, 84, 0.08182, 4, 7], "succs": [[], [0, 4], [1, 9], [], [3], [1, 6], [5, 7], [10, 5], [1], [6], [8, 6]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 13, 0, 1, 4, 0, 2, 0, 0, 0.05632411067193675, ["mov     rdi, r15; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_B0F0"], ["mov~rdi,r15", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 3, 4, 0.09189723320158102, ["mov     rdx, rbp; n", "mov     rsi, r12; s2", "mov     rdi, r15; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_B115"], ["mov~rdx,rbp", "mov~rsi,r12", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 14, 2, 0, 5, 1, 1, 4, 4, 0.10869565217391304, ["add     rbx, 1", "add     r12, valsize_0", "mov     r14, [arglist+rbx*8+0]", "test    r14, r14", "jz      short loc_B0C0"], ["add~rbx,0", "add~r12,valsize_0", "mov~r14,[arglist+0]", "test~r14,r14", "jz~FOO"]], [0, 0, 14, 0, 1, 6, 1, 2, 3, 5, 0.0859683794466403, ["mov     rsi, [rsp+78h+arg]; s2", "mov     rdx, rbp; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_B07A"], ["mov~rsi,[rsp+0]", "mov~rdx,rbp", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 6, 5, 0.018774703557312252, ["mov     [rsp+78h+var_60], rbx", "jmp     short loc_B07A"], ["mov~[rsp+0],rbx", "jmp~FOO"]], [1, 0, 14, 2, 1, 11, 1, 1, 6, 5, 0.018774703557312252, ["imul    rax, r15", "mov     rdi, [rsp+78h+vallist]", "mov     rdx, r15; n", "mov     rsi, r12; s2", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+78h+var_61]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+78h+var_61], al"], ["imul~rax,r15", "mov~rdi,[rsp+0]", "mov~rdx,r15", "mov~rsi,r12", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [2, 0, 13, 0, 0, 5, 1, 1, 2, 5, 0.042490118577075096, ["mov     [rsp+78h+var_61], 0", "xor     ebx, ebx", "mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, [rsp+78h+arg]", "jmp     short loc_B123"], ["mov~[rsp+0],0", "xor~ebx,ebx", "mov~r14,0", "mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 1, 6, 0.037549407114624504, ["test    vallist_0, vallist_0", "mov     rbp, rax", "jz      loc_B0F8"], ["test~vallist_0,vallist_0", "mov~rbp,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 6, 4, 0.016798418972332016, ["mov     [rsp+78h+var_61], 1"], ["mov~[rsp+0],0"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.04150197628458498, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_B110"], ["cmp~r14,0", "jnz~FOO"]], [0, 1, 23, 1, 1, 19, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arglist", "push    rbp", "push    rbx", "mov     rbx, vallist_0", "sub     rsp, 48h", "mov     [rsp+78h+context], context_0", "mov     context_0, arg_0; s", "mov     [rsp+78h+arg], arg_0", "mov     [rsp+78h+vallist], vallist_0", "mov     [rsp+78h+valsize], valsize_0", "mov     [rsp+78h+exit_fn], exit_fn_0", "call    _strlen", "mov     r15, [arglist+0]", "test    r15, r15", "jz      loc_B1C0"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arglist", "push~rbp", "push~rbx", "mov~rbx,vallist_0", "sub~rsp,<STR>", "mov~[rsp+0],context_0", "mov~context_0,arg_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "mov~[rsp+0],exit_fn_0", "call~FOO", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 2, 6, 0.030632411067193673, ["mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, vallist_0", "mov     [rsp+78h+var_61], 0", "mov     [rsp+78h+var_60], r14", "xor     ebx, ebx", "mov     r14, r15", "mov     r15, [rsp+78h+valsize]", "jmp     short loc_B08B"], ["mov~r14,0", "mov~r12,vallist_0", "mov~[rsp+0],0", "mov~[rsp+0],r14", "xor~ebx,ebx", "mov~r14,r15", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 4, 3, 0.10869565217391304, ["add     rbx, 1", "mov     r15, [arglist+rbx*8+0]", "test    r15, r15", "jz      short loc_B0C5"], ["add~rbx,0", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 6, 4, 0.016798418972332016, ["mov     r14, rbx", "jmp     short loc_B115"], ["mov~r14,rbx", "jmp~FOO"]], [0, 0, 14, 0, 1, 4, 0, 2, 4, 7, 0.06027667984189723, ["mov     rdi, r14; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_B0F0"], ["mov~rdi,r14", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 5, 6, 0.043478260869565216, ["mov     rax, [rsp+78h+var_60]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_B050"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jnz~FOO"]], [3, 0, 1, 0, 5, 23, 4, 6, 2, -1, 0.005928853754940711, ["mov     rsi, [rsp+78h+context]; arg", "mov     edi, 1; n", "mov     r14, 0FFFFFFFFFFFFFFFFh", "call    quote_n", "mov     rdx, [rsp+78h+arg]; arg", "mov     rbp, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, rbx; format", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rdx, [rsp+78h+valsize]; valsize", "mov     rsi, [rsp+78h+vallist]; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "mov     rax, [rsp+78h+exit_fn]", "call    rax", "jmp     loc_B0DA"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~r14,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rbp,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,rbx", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,arglist", "call~FOO", "mov~rax,[rsp+0]", "call~rax", "jmp~FOO"]], [1, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.005928853754940711, ["lea     rsi, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_B163"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 1, 1, 6, -1, 0.03359683794466403, ["lea     rsi, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [0, 0, 6, 0, 0, 1, 0, 0, 5, 3, 0.07312252964426877, ["mov     r14, [rsp+78h+var_60]"], ["mov~r14,[rsp+0]"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 2, 0.1442687747035573, ["cmp     [rsp+78h+var_61], 0", "jnz     loc_B14D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 1, 0.04940711462450593, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jz      loc_B1C0"], ["cmp~r14,0", "jz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     arglist", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~arglist", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.017786561264822132, ["mov     r14, rbx", "jmp     short loc_B0DA"], ["mov~r14,rbx", "jmp~FOO"]]], "func_feature": [13, 15, 32, 1, 24, 35, 6, 135, 0.0462, 2, 7], "succs": [[9, 23], [0, 12], [19, 3], [2, 14], [2], [2], [1], [11, 6], [12], [8, 13], [17, 7], [3], [1, 20], [12], [23, 15], [4, 5], [22], [16], [16], [20], [18, 21], [17, 22], [], [22]], "fname": "__xargmatch_internal", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_B200"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_B20F"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_B221"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_B221"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     cs:simple_backup_suffix, rbx", "pop     rbx", "retn"], ["mov~<TAG>,rbx", "pop~rbx", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 3, -1, 0.011904761904761904, ["jmp     short loc_B245"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.10714285714285714, ["lea     s, asc_1B210; \"~\""], ["lea~s,<TAG>"]], [0, 0, 6, 0, 1, 5, 1, 2, 1, 1, 0.047619047619047616, ["lea     rdi, aSimpleBackupSu; \"SIMPLE_BACKUP_SUFFIX\"", "call    _getenv", "test    rax, rax", "mov     s, rax", "jz      short loc_B23E"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~s,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 4, 1, 1, 0, 2, 0.0, ["test    s, s", "push    rbx", "mov     rbx, s", "jz      short loc_B260"], ["test~s,s", "push~rbx", "mov~rbx,s", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 2, 0, 0.07142857142857142, ["jmp     short loc_B239"], ["jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 2, -1, 0.09523809523809523, ["mov     rdi, s; name", "call    last_component", "cmp     rax, s", "jnz     short loc_B23E"], ["mov~rdi,s", "call~FOO", "cmp~rax,s", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, -1, 0.21428571428571427, ["cmp     byte ptr [s], 0", "jnz     short loc_B250"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 2, 8, 0, 8, 11, 1, 21, 0.06845, 3, 0], "succs": [[], [0], [0], [2, 5], [3, 7], [7], [1, 2], [2, 6]], "fname": "set_simple_backup_suffix", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 64, 0, 0, 2, 0, 1, 0, 0, 0.1067287784679089, ["cmp     eax, 3", "jz      loc_B780"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 64, 0, 0, 3, 0, 1, 7, 4, 0.3188405797101449, ["mov     eax, [rsp+0B8h+var_94]", "cmp     eax, 2", "jz      loc_B660"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 64, 0, 1, 2, 0, 1, 5, 7, 0.18944099378881987, ["mov     rdi, dirp; dirp", "call    _rewinddir"], ["mov~rdi,dirp", "call~FOO"]], [0, 0, 64, 0, 1, 6, 1, 2, 4, 7, 0.3122153209109731, ["lea     rbp, [s+base_offset]", "mov     rdi, rbp; name", "call    base_len", "test    dirp, dirp", "mov     r12, rax", "jz      loc_B720"], ["lea~rbp,<TAG>", "mov~rdi,rbp", "call~FOO", "test~dirp,dirp", "mov~r12,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 10, 2, 0.0018633540372670807, ["mov     rdi, s; ptr", "xor     r15d, r15d", "call    free", "mov     [rbx], ebp", "nop     dword ptr [rax+00000000h]"], ["mov~rdi,s", "xor~r15d,r15d", "call~FOO", "mov~<TAG>,ebp", "nop~[word ptr [rax+0]"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 3, 0.02629399585921325, ["test    dirp, dirp", "mov     rbx, rax", "jz      short loc_B5FC"], ["test~dirp,dirp", "mov~rbx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 10, 3, 0.0, ["mov     rdi, dirp; dirp", "call    _closedir"], ["mov~rdi,dirp", "call~FOO"]], [2, 0, 64, 0, 1, 8, 2, 2, 7, 3, 0.2971014492753623, ["xor     r8d, r8d", "cmp     [rsp+0B8h+backup_type], 1", "mov     rsi, [rsp+0B8h+file]; src", "mov     edi, 0FFFFFF9Ch; fd1", "setnz   r8b; flags", "call    renameatu", "test    eax, eax", "jz      loc_B84E"], ["xor~r8d,r8d", "cmp~[rsp+0],0", "mov~rsi,[rsp+0]", "mov~edi,0", "setnz~r8b", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 64, 0, 0, 4, 1, 0, 6, 4, 0.2962732919254658, ["mov     edx, [rsp+0B8h+sdir]", "lea     rcx, [s+base_offset]", "test    edx, edx", "jns     short loc_B5B9"], ["mov~edx,[rsp+0]", "lea~rcx,<TAG>", "test~edx,edx", "jns~FOO"]], [2, 0, 64, 0, 0, 4, 1, 0, 7, 4, 0.0, ["mov     [rsp+0B8h+sdir], 0FFFFFF9Ch", "mov     rcx, s; dst", "mov     edx, 0FFFFFF9Ch; fd2", "xor     r14d, r14d"], ["mov~[rsp+0],0", "mov~rcx,s", "mov~edx,0", "xor~r14d,r14d"]], [1, 0, 68, 0, 0, 2, 0, 1, 2, 4, 0.00041407867494824016, ["cmp     byte ptr [rax], 0", "jz      short loc_B89D"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 69, 0, 1, 6, 1, 2, 1, 4, 0.0006211180124223603, ["lea     rdi, aSimpleBackupSu; \"SIMPLE_BACKUP_SUFFIX\"", "call    _getenv", "test    rax, rax", "mov     file_0, rax", "lea     rdi, asc_1B210; \"~\"", "jz      short loc_B89D"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~file_0,rax", "lea~rdi,<TAG>", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 14, 5, 0.024844720496894408, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     loc_B8A9"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 0, 13, 5, 0.07308488612836439, ["test    rax, rax", "mov     [rsp+0B8h+base_max], rax", "jns     loc_B7A0"], ["test~rax,rax", "mov~[rsp+0],rax", "jns~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 9, 4, 0.07981366459627329, ["cmp     eax, 1", "jz      loc_B690"], ["cmp~eax,0", "jz~FOO"]], [4, 0, 64, 1, 1, 12, 0, 2, 6, 5, 0.0927536231884058, ["mov     qword ptr [rsp+0B8h+fd], rdx", "call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "mov     rdx, qword ptr [rsp+0B8h+fd]", "mov     [rbp+0], bx", "mov     dword ptr [rdx], 7E317E2Eh", "mov     byte ptr [rdx+4], 0", "setz    al", "movzx   eax, al", "add     eax, 2", "mov     [rsp+0B8h+var_94], eax", "jmp     loc_B570"], ["mov~[word ptr [rsp+0],rdx", "call~FOO", "cmp~<TAG>,0", "mov~rdx,[word ptr [rsp+0]", "mov~[rbp+0],bx", "mov~<TAG>,0", "mov~[yte ptr [rdx+0],0", "setz~al", "movzx~eax,al", "add~eax,0", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 64, 0, 1, 12, 2, 2, 5, 6, 0.11055900621118013, ["mov     rcx, [rsp+0B8h+pnew_fd]; pnew_fd", "mov     edi, [rsp+0B8h+dir_fd]; dir_fd", "mov     r9d, 2Eh ; '.'", "xor     edx, edx; extra_flags", "movzx   ebx, word ptr [rbp+0]", "mov     rsi, s; dir", "mov     [rbp+0], r9w", "call    opendirat", "test    rax, rax", "mov     dirp, rax", "lea     rdx, [rbp+r12+0]", "jz      loc_B7E0"], ["mov~rcx,[rsp+0]", "mov~edi,[rsp+0]", "mov~r9d,0", "xor~edx,edx", "movzx~ebx,[ord ptr [rbp+0]", "mov~rsi,s", "mov~[rbp+0],r9w", "call~FOO", "test~rax,rax", "mov~dirp,rax", "lea~rdx,[rbp+0]", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 10, 5, 0.10559006211180125, ["cmp     [rsp+0B8h+base_max], 0", "jnz     loc_B7A0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 64, 0, 2, 8, 0, 2, 9, 4, 0.20527950310559007, ["mov     rdi, s; name", "call    last_component", "mov     rdi, rax; name", "mov     rbx, rax", "call    base_len", "cmp     rax, 0Eh", "mov     rbp, rax", "jbe     loc_B58F"], ["mov~rdi,s", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [4, 0, 64, 1, 0, 8, 0, 1, 11, 7, 0.21904761904761905, ["cmp     al, 39h ; '9'", "movsx   eax, byte ptr [rbx+1]", "mov     ebp, 1", "setz    r8b", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_B433"], ["cmp~al,0", "movsx~eax,[yte ptr [rbx+0]", "mov~ebp,0", "setz~r8b", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 64, 1, 0, 5, 0, 1, 10, 6, 0.22712215320910972, ["add     rbx, rbp", "movzx   eax, byte ptr [rbx]", "lea     edx, [rax-31h]", "cmp     dl, 8", "ja      short loc_B3B0"], ["add~rbx,rbp", "movzx~eax,<TAG>", "lea~edx,[rax-31h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 12, 8, 0.012422360248447204, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 64, 0, 0, 2, 0, 1, 5, 3, 0.33146997929606625, ["cmp     [rsp+0B8h+rename], 0", "jz      loc_B84E"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 64, 0, 1, 6, 0, 2, 4, 4, 0.020289855072463767, ["mov     rax, [rsp+0B8h+filelen]", "mov     rdx, [rsp+0B8h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax]; dest", "call    _memcpy", "jmp     loc_B58F"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 15, 4, 0.012422360248447204, ["mov     [rsp+0B8h+base_max], 0FFFFFFFFFFFFFFFFh", "jmp     loc_B58F"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 0, 0, 11, 4, 0.07018633540372671, ["cmp     rbp, [rsp+0B8h+base_max]", "jbe     loc_B58F"], ["cmp~rbp,[rsp+0]", "jbe~FOO"]], [2, 0, 64, 2, 0, 10, 0, 1, 12, 4, 0.012836438923395446, ["mov     rax, [rsp+0B8h+filelen]", "mov     rsi, [rsp+0B8h+base_max]", "add     rax, s", "lea     rdx, [rsi-1]", "sub     rax, rbx", "cmp     rax, rsi", "cmovnb  rax, rdx", "mov     byte ptr [rbx+rax], 7Eh ; '~'", "mov     byte ptr [rbx+rax+1], 0", "jmp     loc_B58F"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "add~rax,s", "lea~rdx,[rsi-1]+0]", "sub~rax,rbx", "cmp~rax,rsi", "cmovnb~rax,rdx", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [1, 0, 3, 0, 2, 6, 1, 3, 9, 2, 0.02111801242236025, ["mov     rdi, r15; ptr", "xor     r15d, r15d", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     loc_B610"], ["mov~rdi,r15", "xor~r15d,r15d", "call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 64, 0, 1, 7, 1, 2, 19, 3, 0.07494824016563147, ["mov     rdi, r15; ptr", "mov     [rsp+0B8h+var_60], r9", "call    _realloc", "test    rax, rax", "mov     r8, rax", "mov     r9, [rsp+0B8h+var_60]", "jz      loc_B780"], ["mov~rdi,r15", "mov~[rsp+0],r9", "call~FOO", "test~rax,rax", "mov~r8,rax", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 67, 0, 1, 6, 0, 1, 3, 4, 0.0, ["mov     rdi, rax; name", "call    last_component", "mov     rdi, rax", "cmp     rbx, rax", "lea     rax, asc_1B210; \"~\"", "cmovnz  rdi, rax"], ["mov~rdi,rax", "call~FOO", "mov~rdi,rax", "cmp~rbx,rax", "lea~rax,<TAG>", "cmovnz~rdi,rax"]], [0, 0, 64, 0, 0, 9, 0, 0, 15, 7, 0.14699792960662525, ["movzx   esi, r8b", "movzx   r9d, r8b", "mov     [rsp+0B8h+var_94], esi", "mov     rsi, [rsp+0B8h+filelen]", "lea     rax, [r9+rbp]", "mov     [rsp+0B8h+var_90], rax", "lea     rcx, [rsi+rax+4]", "cmp     rcx, [rsp+0B8h+var_88]", "jbe     loc_B7D8"], ["movzx~esi,r8b", "movzx~r9d,r8b", "mov~[rsp+0],esi", "mov~rsi,[rsp+0]", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,[rsi+0]", "cmp~rcx,[rsp+0]", "jbe~FOO"]], [0, 0, 64, 0, 0, 3, 0, 0, 14, 7, 0.17556935817805383, ["mov     rdx, [rsp+0B8h+var_90]; n", "cmp     rdx, rbp", "jb      short loc_B47C"], ["mov~rdx,[rsp+0]", "cmp~rdx,rbp", "jb~FOO"]], [0, 0, 64, 0, 1, 7, 1, 2, 16, 6, 0.002898550724637681, ["mov     rax, [rsp+0B8h+filelen]", "mov     rsi, rbx; s2", "lea     rdi, [r15+rax+2]; s1", "call    _memcmp", "test    eax, eax", "movzx   r8d, byte ptr [rsp+0B8h+var_60]", "jg      loc_B3B0"], ["mov~rax,[rsp+0]", "mov~rsi,rbx", "lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rsp+0]", "jg~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.028157349896480333, ["mov     rsi, [rsp+0B8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_B8C1"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [3, 0, 65, 2, 2, 17, 1, 3, 1, 2, 0.06728778467908902, ["call    _strlen", "mov     rsi, [rsp+0B8h+filelen]", "add     rax, 1", "cmp     rax, 9", "mov     [rsp+0B8h+simple_backup_suffix_size], rax", "lea     rdx, [rsi+1]", "mov     rsi, simple_backup_suffix_size_0", "mov     eax, 9", "cmovnb  rax, simple_backup_suffix_size_0", "add     rax, rdx", "mov     [rsp+0B8h+n], rdx", "mov     rdi, rax; size", "mov     [rsp+0B8h+ssize], rax", "call    _malloc", "test    rax, rax", "mov     r15, rax", "jz      loc_B610"], ["call~FOO", "mov~rsi,[rsp+0]", "add~rax,0", "cmp~rax,0", "mov~[rsp+0],rax", "lea~rdx,[rsi+0]", "mov~rsi,simple_backup_suffix_size_0", "mov~eax,0", "cmovnb~rax,simple_backup_suffix_size_0", "add~rax,rdx", "mov~[rsp+0],rdx", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 6, 2, 0.025879917184265012, ["test    dirp, dirp", "jz      loc_B610"], ["test~dirp,dirp", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.0, ["mov     rdi, dirp; dirp", "call    _closedir", "jmp     loc_B610"], ["mov~rdi,dirp", "call~FOO", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 16, 8, 0.06231884057971014, ["mov     r8, r15", "jmp     loc_B4F5"], ["mov~r8,r15", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 2, 3, 0.040993788819875775, ["mov     cs:simple_backup_suffix, rdi", "jmp     loc_B2E3"], ["mov~<TAG>,rdi", "jmp~FOO"]], [0, 1, 70, 3, 2, 26, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, file_0", "sub     rsp, 88h", "mov     [rsp+0B8h+dir_fd], edi", "mov     dir_fd_0, file_0; name", "mov     [rsp+0B8h+file], file_0", "mov     [rsp+0B8h+backup_type], edx", "mov     [rsp+0B8h+rename], cl", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "call    last_component", "mov     rdi, rax; s", "mov     r14, rax", "call    _strlen", "mov     rdi, cs:simple_backup_suffix; s", "sub     r14, file_0", "add     rax, base_offset", "mov     [rsp+0B8h+filelen], rax", "test    rdi, rdi", "jz      loc_B864"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,file_0", "sub~rsp,<STR>", "mov~[rsp+0],edi", "mov~dir_fd_0,file_0", "mov~[rsp+0],file_0", "mov~[rsp+0],edx", "mov~[rsp+0],cl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "mov~rdi,<TAG>", "sub~r14,file_0", "add~rax,base_offset", "mov~[rsp+0],rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 5, 0.19989648033126295, ["cmp     [rsp+0B8h+backup_type], 2", "jnz     short loc_B690"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 64, 0, 1, 7, 0, 1, 9, 5, 0.0, ["mov     rax, [rsp+0B8h+filelen]", "mov     rdx, [rsp+0B8h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax]; dest", "call    _memcpy", "mov     [rsp+0B8h+backup_type], 1", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0", "nop~[word ptr [rax+0]"]], [2, 0, 64, 0, 0, 7, 0, 0, 6, 6, 0.20848861283643894, ["mov     rax, [rsp+0B8h+ssize]", "mov     [rsp+0B8h+var_90], 1", "mov     [rsp+0B8h+var_94], 2", "mov     [rsp+0B8h+var_88], rax", "lea     rax, [r12+4]", "mov     qword ptr [rsp+0B8h+fd], rax", "nop     dword ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[r12+0]", "mov~[word ptr [rsp+0],rax", "nop~[word ptr [rax+0]"]], [2, 0, 64, 0, 0, 4, 0, 1, 6, 7, 0.0055900621118012426, ["mov     [rbp+0], bx", "mov     dword ptr [rdx], 7E317E2Eh", "mov     byte ptr [rdx+4], 0", "jmp     loc_B386"], ["mov~[rbp+0],bx", "mov~<TAG>,0", "mov~[yte ptr [rdx+0],0", "jmp~FOO"]], [4, 0, 64, 2, 0, 9, 1, 0, 13, 7, 0.012836438923395446, ["cmp     cl, 39h ; '9'", "setz    al", "add     rbp, 1", "and     r8d, eax", "movsx   eax, byte ptr [rbx+rbp]", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_B418"], ["cmp~cl,0", "setz~al", "add~rbp,0", "and~r8d,eax", "movsx~eax,<TAG>", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 15, 5, 0.00020703933747412008, ["mov     [rsp+0B8h+base_max], 0Eh", "jmp     loc_B7AB"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 64, 1, 0, 5, 1, 0, 16, 6, 0.07246376811594203, ["mov     edx, 2", "xor     esi, esi", "mov     rax, rdx", "mul     rcx", "jo      loc_B8B7"], ["mov~edx,0", "xor~esi,esi", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 12, 6, 0.22028985507246376, ["cmp     cl, 7Eh ; '~'", "jnz     loc_B3B0"], ["cmp~cl,0", "jnz~FOO"]], [3, 0, 64, 2, 1, 17, 0, 2, 17, 7, 0.14409937888198757, ["mov     rax, [rsp+0B8h+filelen]", "lea     rdx, [rbp+2]; n", "mov     [rsp+0B8h+var_60], r8", "mov     rsi, rbx; src", "add     rax, r8", "mov     r8d, 7E2Eh", "lea     rcx, [rax+r9+2]", "mov     [rax], r8w", "mov     byte ptr [rax+2], 30h ; '0'", "mov     rdi, rcx; dest", "call    _memcpy", "add     rbp, rax", "mov     r8, [rsp+0B8h+var_60]", "movzx   edx, byte ptr [rbp-1]", "lea     rax, [rbp-1]", "cmp     dl, 39h ; '9'", "jnz     short loc_B54F"], ["mov~rax,[rsp+0]", "lea~rdx,[rbp+0]", "mov~[rsp+0],r8", "mov~rsi,rbx", "add~rax,r8", "mov~r8d,0", "lea~rcx,[rax+0]", "mov~<TAG>,r8w", "mov~[yte ptr [rax+0],0", "mov~rdi,rcx", "call~FOO", "add~rbp,rax", "mov~r8,[rsp+0]", "movzx~edx,[yte ptr [rbp-1]+0]", "lea~rax,[rbp-1]+0]", "cmp~dl,0", "jnz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 88h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     base_offset", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~base_offset", "pop~r15", "retn"]], [0, 0, 64, 0, 0, 1, 0, 0, 18, 8, 0.012422360248447204, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 64, 0, 1, 4, 1, 2, 7, 5, 0.31180124223602484, ["mov     rdi, dirp; dirp", "call    _readdir", "test    rax, rax", "jz      loc_B570"], ["mov~rdi,dirp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 64, 0, 1, 5, 0, 1, 8, 6, 0.2453416149068323, ["lea     rbx, [rax+13h]", "mov     rdi, rbx; s", "call    _strlen", "cmp     rax, qword ptr [rsp+0B8h+fd]", "jb      short loc_B3B0"], ["lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "cmp~rax,[word ptr [rsp+0]", "jb~FOO"]], [0, 0, 64, 0, 1, 7, 1, 2, 9, 6, 0.2349896480331263, ["lea     rbp, [r12+2]", "lea     rdi, [r15+base_offset]; s1", "mov     rsi, rbx; s2", "mov     rdx, rbp; n", "call    _memcmp", "test    eax, eax", "jnz     short loc_B3B0"], ["lea~rbp,[r12+0]", "lea~rdi,<TAG>", "mov~rsi,rbx", "mov~rdx,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 13, 6, 0.1846790890269151, ["cmp     byte ptr [rbx+rbp+1], 0", "jnz     loc_B3B0"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 15, 6, 0.02215320910973085, ["mov     byte ptr [rsp+0B8h+var_60], r8b", "jnz     loc_B3B0"], ["mov~[yte ptr [rsp+0],r8b", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 17, 5, 0.07329192546583851, ["test    rax, rax", "js      loc_B770"], ["test~rax,rax", "js~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 17, 6, 0.0, ["mov     esi, 1", "jmp     loc_B4B9"], ["mov~esi,0", "jmp~FOO"]], [0, 0, 64, 0, 0, 3, 0, 1, 18, 4, 0.055175983436853, ["mov     [rsp+0B8h+var_88], rcx", "mov     rsi, rcx", "jmp     loc_B4D7"], ["mov~[rsp+0],rcx", "mov~rsi,rcx", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 18, 5, 0.012422360248447204, ["test    rsi, rsi", "jnz     loc_B770"], ["test~rsi,rsi", "jnz~FOO"]], [2, 0, 64, 0, 0, 5, 1, 0, 2, 6, 0.07577639751552795, ["lea     s, [rsp+0B8h+sdir]", "mov     [rsp+0B8h+sdir], 0FFFFFFFFh", "mov     [rsp+0B8h+base_max], 0", "xor     r13d, r13d", "mov     [rsp+0B8h+pnew_fd], rax"], ["lea~s,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r13d,r13d", "mov~[rsp+0],rax"]], [3, 0, 64, 1, 1, 16, 2, 2, 12, 6, 0.02981366459627329, ["movzx   edx, word ptr [rbx]", "mov     esi, 2Eh ; '.'", "mov     rdi, s; path", "mov     [rbx], si", "mov     dword ptr [rax], 0", "mov     esi, 3; name", "mov     [rsp+0B8h+fd], edx", "call    _pathconf", "mov     edi, [r12]", "mov     edx, [rsp+0B8h+fd]", "xor     ecx, ecx", "test    edi, edi", "mov     [rbx], dx", "setz    cl", "sub     rax, rcx", "jmp     loc_B6F6"], ["movzx~edx,<TAG>", "mov~esi,0", "mov~rdi,s", "mov~<TAG>,si", "mov~<TAG>,0", "mov~esi,0", "mov~[rsp+0],edx", "call~FOO", "mov~edi,<TAG>", "mov~edx,[rsp+0]", "xor~ecx,ecx", "test~edi,edi", "mov~<TAG>,dx", "setz~cl", "sub~rax,rcx", "jmp~FOO"]], [0, 0, 64, 0, 1, 7, 1, 2, 11, 7, 0.07184265010351967, ["mov     edi, [rsp+0B8h+sdir]", "mov     [rsp+0B8h+fd], edi", "call    ___errno_location", "mov     edi, [rsp+0B8h+fd]; fd", "mov     r12, rax", "test    edi, edi", "js      loc_B812"], ["mov~edi,[rsp+0]", "mov~[rsp+0],edi", "call~FOO", "mov~edi,[rsp+0]", "mov~r12,rax", "test~edi,edi", "js~FOO"]], [3, 0, 64, 1, 0, 5, 0, 1, 19, 7, 0.012836438923395446, ["mov     byte ptr [rax], 30h ; '0'", "sub     rax, 1", "movzx   edx, byte ptr [rax]", "cmp     dl, 39h ; '9'", "jz      short loc_B540"], ["mov~<TAG>,0", "sub~rax,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 64, 0, 1, 6, 0, 2, 3, 5, 0.3447204968944099, ["mov     rdx, [rsp+0B8h+n]; n", "mov     rsi, [rsp+0B8h+file]; src", "mov     rdi, s; dest", "call    _memcpy", "cmp     [rsp+0B8h+backup_type], 1", "jz      loc_B640"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,s", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 64, 1, 1, 7, 1, 2, 18, 6, 0.14534161490683228, ["add     edx, 1", "mov     rdi, dirp; dirp", "mov     r15, r8", "mov     [rax], dl", "call    _readdir", "test    rax, rax", "jnz     loc_B3C1"], ["add~edx,0", "mov~rdi,dirp", "mov~r15,r8", "mov~<TAG>,dl", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 64, 0, 0, 3, 0, 0, 19, 4, 0.006314699792960662, ["lea     rax, [rcx+rcx]", "mov     [rsp+0B8h+var_88], rax", "mov     rsi, rax; size"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~rsi,rax"]], [1, 0, 64, 0, 1, 4, 0, 2, 8, 4, 0.29440993788819875, ["call    ___errno_location", "mov     ebp, [rax]", "cmp     ebp, 11h", "jz      loc_B349"], ["call~FOO", "mov~ebp,<TAG>", "cmp~ebp,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 19, 5, 0.09565217391304348, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 64, 1, 1, 8, 2, 1, 12, 6, 0.02981366459627329, ["mov     dword ptr [rax], 0", "mov     esi, 3; name", "call    _fpathconf", "mov     ecx, [r12]", "xor     edx, edx", "test    ecx, ecx", "setz    dl", "sub     rax, rdx"], ["mov~<TAG>,0", "mov~esi,0", "call~FOO", "mov~ecx,<TAG>", "xor~edx,edx", "test~ecx,ecx", "setz~dl", "sub~rax,rdx"]]], "func_feature": [33, 32, 80, 5, 71, 112, 2, 374, 0.09741, 4, 20], "succs": [[27, 14], [0, 40], [42], [16, 2], [33], [4, 6], [4], [35, 67], [9, 7], [7], [29, 38], [10, 38], [24, 45], [25, 12], [18, 22], [1], [43, 15], [25, 62], [17, 22], [21, 47], [51, 19], [44], [8, 35], [22], [22], [26, 22], [22], [33], [48, 27], [38], [37, 46], [30, 55], [51, 30], [49, 68], [33, 60], [33, 36], [33], [48], [34], [34, 11], [41, 18], [18], [51], [42], [44, 47], [26], [56, 57], [51, 54], [65, 50], [], [63], [1, 52], [51, 53], [51, 20], [51, 31], [32, 51], [58, 59], [56], [28], [58, 66], [64], [13], [61, 70], [65, 63], [3, 23], [52, 69], [28], [64, 5], [], [1], [13]], "fname": "backupfile_internal", "n_num": 71}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     ecx, 1", "jmp     backupfile_internal"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "backup_file_rename", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 5, 2, 2, 0, 1, 0.0, ["sub     rsp, 8", "xor     ecx, ecx; rename", "call    backupfile_internal", "test    result, result", "jz      short loc_B8F5"], ["sub~rsp,0", "xor~ecx,ecx", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 8, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "find_backup_file_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.0, ["test    version, version", "mov     eax, 2", "jz      short locret_B950"], ["test~version,version", "mov~eax,0", "jz~FOO"]], [3, 0, 0, 2, 1, 10, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, -1, 0.16666666666666666, ["cmp     byte ptr [version], 0", "jz      short locret_B948"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 1, 3, 0, 5, 4, 0, 17, 0.03333, 3, 2], "succs": [[2, 3], [], [1, 4], [], []], "fname": "get_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 3, 0, 1, 6, 1, 2, 1, -1, 0.2, ["lea     context, aVersionControl; \"VERSION_CONTROL\"", "call    _getenv", "mov     rsi, rax; arg", "mov     eax, 2", "test    rsi, rsi", "jz      short loc_B9BD"], ["lea~context,<TAG>", "call~FOO", "mov~rsi,rax", "mov~eax,0", "test~rsi,rsi", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, -1, 0.1, ["cmp     byte ptr [rsi], 0", "jz      short loc_B9BD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 1, 0, 1, 8, 0, 1, 3, -1, 0.0, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "lea     rdi, asc_1B227; \"$\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>"]], [1, 0, 6, 1, 0, 3, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "test    version, version", "jz      short loc_B96E"], ["sub~rsp,0", "test~version,version", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 1, 0.03333333333333333, ["cmp     byte ptr [version], 0", "jnz     short loc_B9C8"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 2, 0, 0.0, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]]], "func_feature": [3, 2, 7, 0, 7, 9, 1, 32, 0.04762, 5, 3], "succs": [[], [0, 2], [0, 3], [0], [1, 5], [1, 6], []], "fname": "xget_version", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, r8", "retn"], ["mov~rax,r8", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.005555555555555556, ["jmp     short loc_BA1E"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.08333333333333334, ["cmp     size, lcm_max", "cmovbe  lcm_max, size", "mov     r8, rcx"], ["cmp~size,lcm_max", "cmovbe~lcm_max,size", "mov~r8,rcx"]], [0, 0, 7, 1, 0, 4, 2, 1, 3, 1, 0.2111111111111111, ["xor     edx, edx", "div     n", "test    r, r", "jnz     short loc_BA68"], ["xor~edx,edx", "div~,n", "test~r,r", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     rax, n", "mov     n, r", "jmp     short loc_BA33"], ["mov~rax,n", "mov~n,r", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.11111111111111112, ["mov     r8, b", "mov     rax, a"], ["mov~r8,b", "mov~rax,a"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 4, 0.0, ["test    a, a", "mov     rcx, lcm_max", "jnz     short loc_BA28"], ["test~a,a", "mov~rcx,lcm_max", "jnz~FOO"]], [0, 0, 3, 1, 0, 5, 1, 1, 5, -1, 0.06666666666666667, ["xor     edx, edx", "mov     q, lcm", "div     b", "cmp     rax, q", "jnz     short loc_BA14"], ["xor~edx,edx", "mov~q,lcm", "div~,b", "cmp~rax,q", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.07777777777777778, ["test    b, b", "jz      short loc_BA14"], ["test~b,b", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 0, 1, -1, 0.011111111111111112, ["test    b, b", "mov     edi, 2000h", "cmovnz  rdi, b"], ["test~b,b", "mov~edi,0", "cmovnz~rdi,b"]], [0, 0, 4, 2, 0, 8, 1, 1, 4, -1, 0.17777777777777778, ["xor     edx, edx", "mov     rax, a", "div     n", "mov     n, b", "imul    r8, rax", "mov     r9, rax", "cmp     lcm, lcm_max", "ja      short loc_BA14"], ["xor~edx,edx", "mov~rax,a", "div~,n", "mov~n,b", "imul~r8,rax", "mov~r9,rax", "cmp~lcm,lcm_max", "ja~FOO"]]], "func_feature": [0, 7, 7, 0, 11, 15, 1, 36, 0.06768, 0, 4], "succs": [[], [0], [0], [10, 4], [3], [3], [8, 9], [1, 2], [2, 5], [2], [2, 7]], "fname": "buffer_lcm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_BB70"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, rbx; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_BAD8"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_BAD8"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 3, 2, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 12, 0, 1, 8, 1, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rbx; fp", "call    freadahead", "test    rax, rax", "jnz     loc_BB38"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    rpl_fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_BB56"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 1, 3, 0.030303030303030304, ["xor     esi, esi; offset", "mov     rdi, rbx; fp", "mov     edx, 1; whence", "call    rpl_fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_BAB8"], ["xor~esi,esi", "mov~rdi,rbx", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_BB23"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 65, 0.03205, 6, 0], "succs": [[11, 12], [0, 9], [0, 7], [0], [1, 6], [2, 3], [2, 5], [8], [], [8], [], [10], [10]], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 8, 1, 1, 7, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_BBDC"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 0, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_BC32"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 0, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_BBF3"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 0, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 0, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name_0; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_BC3D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 7, 0, 1, 4, 0, 2, 0, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_BBF3"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 0, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, aS+2; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_BC32"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 3, 46, 0.03968, 8, 2], "succs": [[1, 6], [8, 5], [1, 4], [8], [3, 7], [], [2, 4], [8], []], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mdir_name", "test    result, result", "jz      short loc_BC73"], ["sub~rsp,0", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 7, 2, 1, 12, 1, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "xor     ebp, ebp", "mov     rbx, file", "sub     rsp, 8", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_BCD0"], ["push~rbp", "push~rbx", "xor~ebp,ebp", "mov~rbx,file", "sub~rsp,0", "cmp~<TAG>,0", "setz~bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 0, -1, 0.19047619047619047, ["cmp     prefix_length, length", "jnz     short loc_BCB0"], ["cmp~prefix_length,length", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 0, 2, 0.11904761904761904, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rdx, [length-1]", "jz      short loc_BCBE"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rdx,[length-1]+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, -1, 0.023809523809523808, ["mov     length, rax"], ["mov~length,rax"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     rax, length", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rax,length", "pop~file", "pop~prefix_length", "retn"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, -1, 0.07142857142857142, ["cmp     byte ptr [file+length-1], 2Fh ; '/'", "lea     rax, [length-1]", "jnz     short loc_BCC3"], ["cmp~[yte ptr [file+0],0", "lea~rax,[length-1]+0]", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0.023809523809523808, ["jmp     short loc_BCD0"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rdx, length", "mov     rax, rdx", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rdx,length", "mov~rax,rdx", "pop~file", "pop~prefix_length", "retn"]]], "func_feature": [1, 1, 5, 0, 8, 10, 1, 33, 0.05357, 0, 4], "succs": [[2, 7], [4, 5], [1, 6], [1], [], [3, 4], [7], []], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 14, 0, 0, 3, 0, 1, 0, 0, 0.03376906318082788, ["cmp     byte ptr [file+rbx-1], 2Fh ; '/'", "lea     rax, [rbx-1]", "jnz     short loc_BD80"], ["cmp~[yte ptr [file+0],0", "lea~rax,[rbx-1]+0]", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, -1, 0.10675381263616557, ["cmp     rbx, r12", "jnz     short loc_BD18"], ["cmp~rbx,r12", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 3, -1, 0.032679738562091505, ["xor     ecx, ecx", "jmp     short loc_BDAF"], ["xor~ecx,ecx", "jmp~FOO"]], [2, 0, 8, 0, 1, 9, 3, 2, 2, -1, 0.14161220043572983, ["mov     rax, rbx", "xor     rax, 1", "lea     rdi, [rax+rbx+1]; size", "mov     r12d, eax", "and     r12d, 1", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      short loc_BDC0"], ["mov~rax,rbx", "xor~rax,0", "lea~rdi,[rax+0]", "mov~r12d,eax", "and~r12d,0", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 8, 3, 2, 4, -1, 0.057734204793028314, ["xor     eax, eax", "test    rbx, rbx", "setz    al", "lea     rdi, [rbx+rax+1]; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      short loc_BDC0"], ["xor~eax,eax", "test~rbx,rbx", "setz~al", "lea~rdi,[rbx+0]", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 4, -1, 0.022875816993464054, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.0664488017429194, ["test    r12b, r12b", "jz      short loc_BDAB"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 3, -1, 0.10566448801742918, ["test    ebx, ebx", "mov     esi, ebx", "jz      short loc_BD65"], ["test~ebx,ebx", "mov~esi,ebx", "jz~FOO"]], [1, 0, 5, 1, 0, 6, 0, 0, 5, -1, 0.013071895424836602, ["mov     edx, eax", "add     eax, 1", "movzx   edi, byte ptr [file+rdx+0]", "cmp     eax, esi", "mov     [dir+rdx], dil", "jb      short loc_BD53"], ["mov~edx,eax", "add~eax,0", "movzx~edi,[yte ptr [file+0]", "cmp~eax,esi", "mov~<TAG>,dil", "jb~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 1, -1, 0.022875816993464054, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rbx, [rdx-1]", "jz      short loc_BD26"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rbx,[rdx-1]+0]", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.0196078431372549, ["mov     byte ptr [rcx+length], 0"], ["mov~<TAG>,0"]], [2, 0, 2, 0, 0, 3, 0, 1, 5, -1, 0.0, ["mov     byte ptr [dir], 2Eh ; '.'", "mov     ebx, 1", "jmp     short loc_BDAB"], ["mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 0, 1, 5, -1, 0.018518518518518517, ["mov     rdi, rcx; dest", "mov     rdx, rbx; n", "mov     rsi, file; src", "call    _memcpy", "mov     rcx, rax"], ["mov~rdi,rcx", "mov~rdx,rbx", "mov~rsi,file", "call~FOO", "mov~rcx,rax"]], [1, 0, 18, 1, 1, 12, 1, 1, 0, 1, 0.0, ["push    r12", "xor     r12d, r12d", "push    rbp", "push    rbx", "cmp     byte ptr [file], 2Fh ; '/'", "mov     rbp, file", "setz    r12b", "call    last_component", "mov     rdx, rax", "sub     rdx, file", "cmp     rdx, r12", "jbe     loc_BDC8"], ["push~r12", "xor~r12d,r12d", "push~rbp", "push~rbx", "cmp~<TAG>,0", "mov~rbp,file", "setz~r12b", "call~FOO", "mov~rdx,rax", "sub~rdx,file", "cmp~rdx,r12", "jbe~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 2, -1, 0.014161220043572984, ["jmp     short loc_BD78"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 1, 0, 4, -1, 0.026143790849673203, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 5, 0, 0, 2, 0, 0, 3, -1, 0.023965141612200435, ["mov     rbx, rdx", "nop     dword ptr [rax+rax+00h]"], ["mov~rbx,rdx", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 5, 0, 0, 4, -1, 0.0, ["pop     rbx", "mov     rax, rcx", "pop     file", "pop     r12", "retn"], ["pop~rbx", "mov~rax,rcx", "pop~file", "pop~r12", "retn"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 0, 0.029411764705882353, ["mov     rbx, rdx", "jmp     loc_BD2B"], ["mov~rbx,rdx", "jmp~FOO"]]], "func_feature": [4, 11, 15, 0, 19, 27, 1, 71, 0.0387, 0, 2], "succs": [[4, 5], [0, 3], [17], [2, 7], [2, 12], [1], [10, 11], [6, 15], [8, 6], [1, 14], [17], [10], [10], [9, 18], [16], [8], [4], [], [3]], "fname": "mdir_name", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_BE0A"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_BE00"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_BDE0"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_BE2A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_BDEC"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_BE15"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_BE2A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_BE15"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 18, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_BE50"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_BE70"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_BE58"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_BE4A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 8, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[5, 0, 0, 3, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    last_component", "cmp     byte ptr [had_slash], 0", "mov     rbx, had_slash", "cmovz   rbx, file", "mov     rdi, base; name", "call    base_len", "add     base, had_slash", "cmp     byte ptr [base_lim], 0", "mov     byte ptr [base_lim], 0", "setnz   al", "add     rsp, 8", "pop     base_lim", "pop     file", "retn"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "cmp~<TAG>,0", "mov~rbx,had_slash", "cmovz~rbx,file", "mov~rdi,base", "call~FOO", "add~base,had_slash", "cmp~<TAG>,0", "mov~<TAG>,0", "setnz~al", "add~rsp,0", "pop~base_lim", "pop~file", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 18, 0.0, 0, 3], "succs": [[]], "fname": "strip_trailing_slashes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     _posix_fadvise"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "fdadvise", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.0, ["test    fp, fp", "jz      short locret_BEF0"], ["test~fp,fp", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 1, 9, 2, 2, 1, 0, 0.16666666666666666, ["push    rbx", "mov     ebx, esi", "call    _fileno", "mov     ecx, ebx; advise", "xor     edx, edx; len", "xor     esi, esi; offset", "pop     advice", "mov     edi, eax; fd", "jmp     _posix_fadvise"], ["push~rbx", "mov~ebx,esi", "call~FOO", "mov~ecx,ebx", "xor~edx,edx", "xor~esi,esi", "pop~advice", "mov~edi,eax", "jmp~FOO"]]], "func_feature": [1, 3, 3, 0, 4, 3, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 3], [], [2]], "fname": "fadvise", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_BF69"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_BF21"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_BF48"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 4, 25, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     ent, ent_from_table", "jz      short loc_BFE0"], ["cmp~ent,ent_from_table", "jz~FOO"]], [2, 0, 5, 1, 3, 23, 1, 4, 1, 1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13, ht", "push    rbp", "push    rbx", "mov     r12, file", "mov     edi, 18h; n", "mov     rbp, stats", "sub     rsp, 8", "call    xmalloc", "mov     rdi, file; string", "mov     rbx, rax", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     rsi, ent; entry", "mov     rdi, ht; table", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_BFF2"], ["push~r13", "push~r12", "mov~r13,ht", "push~rbp", "push~rbx", "mov~r12,file", "mov~edi,0", "mov~rbp,stats", "sub~rsp,0", "call~FOO", "mov~rdi,file", "mov~rbx,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~rsi,ent", "mov~rdi,ht", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     stats", "pop     file", "pop     ht", "retn"], ["add~rsp,0", "pop~ent", "pop~stats", "pop~file", "pop~ht", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    ht, ht", "jz      short locret_BFF0"], ["test~ht,ht", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, -1, 0.07142857142857142, ["add     rsp, 8", "mov     rdi, ent; x", "pop     ent", "pop     stats", "pop     file", "pop     ht", "jmp     triple_free"], ["add~rsp,0", "mov~rdi,ent", "pop~ent", "pop~stats", "pop~file", "pop~ht", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [4, 2, 8, 0, 8, 7, 3, 42, 0.04167, 0, 3], "succs": [[2, 6], [0, 3], [], [], [], [1, 4], [7], []], "fname": "record_file", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_C051"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 2, 0.0, ["mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.name], file", "mov     file, rsp; entry", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[stats+0]", "mov~<TAG>,file", "mov~file,rsp", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "setnz~al"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_C03C"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 4, 1, 5, 5, 3, 21, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 1, 14, 0, 0, 3, 0, 1, 0, 0, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_C0D0"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_C0D0"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_C118"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_C1B0"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_C0D0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_C0D0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 1, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,<STR>", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [2, 0, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_C0D0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_C1C0"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_C0D0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_C1D8"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_C15D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]]], "func_feature": [0, 25, 11, 0, 16, 23, 1, 110, 0.07381, 0, 12], "succs": [[10, 3], [0, 3], [11], [2, 12], [3, 7], [3, 4], [3], [3, 6], [], [8, 13], [3, 5], [14, 15], [11], [], [9], [9]], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 13, 0, 0, 3, 0, 1, 0, 0, 0.0380952380952381, ["cmp     ecx, 6000h", "mov     edx, 62h ; 'b'", "jz      short loc_C260"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [1, 1, 14, 0, 0, 3, 0, 1, 1, 4, 0.02380952380952381, ["cmp     ecx, 4000h", "mov     edx, 64h ; 'd'", "jz      short loc_C260"], ["cmp~ecx,<STR>", "mov~edx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     edx, 0FFFFFFE0h", "add     edx, 73h ; 's'"], ["and~edx,0", "add~edx,0"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], dl", "mov     edx, eax", "and     edx, 100h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFBBh", "add     edx, 72h ; 'r'", "mov     [str+1], dl", "mov     edx, eax", "and     edx, 80h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFB6h", "add     edx, 77h ; 'w'", "mov     [str+2], dl", "mov     edx, eax", "and     edx, 40h", "cmp     edx, 1", "sbb     edx, edx", "test    ah, 8", "jz      loc_C338"], ["mov~<TAG>,dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,<STR>", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "test~ah,0", "jz~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     edx, 0FFFFFFE0h", "add     edx, 73h ; 's'"], ["and~edx,0", "add~edx,0"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], dl", "mov     edx, eax", "and     edx, 20h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFBBh", "add     edx, 72h ; 'r'", "mov     [str+4], dl", "mov     edx, eax", "and     edx, 10h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFB6h", "add     edx, 77h ; 'w'", "mov     [str+5], dl", "mov     edx, eax", "and     edx, 8", "cmp     edx, 1", "sbb     edx, edx", "test    ah, 4", "jz      loc_C360"], ["mov~[str+0],dl", "mov~edx,eax", "and~edx,<STR>", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "test~ah,0", "jz~FOO"]], [3, 0, 15, 0, 0, 6, 1, 1, 0, 4, 0.0, ["mov     eax, [statp+18h]", "mov     edx, 2Dh ; '-'", "mov     ecx, eax", "and     ecx, 0F000h", "cmp     ecx, 8000h", "jz      short loc_C260"], ["mov~eax,[statp+0]", "mov~edx,0", "mov~ecx,eax", "and~ecx,0", "cmp~ecx,0", "jz~FOO"]], [2, 0, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     ecx, 1000h", "mov     edx, 70h ; 'p'", "jz      short loc_C260"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     ecx, 0A000h", "mov     edx, 6Ch ; 'l'", "jz      short loc_C260"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [10, 0, 2, 2, 0, 19, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], dl", "mov     edx, eax", "and     edx, 4", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFBBh", "add     edx, 72h ; 'r'", "mov     [str+7], dl", "mov     edx, eax", "and     edx, 2", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFB6h", "add     edx, 77h ; 'w'", "mov     [str+8], dl", "mov     edx, eax", "and     edx, 1", "test    ah, 2", "jz      short loc_C348"], ["mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "test~ah,0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     edx, 0FFFFFFB5h", "add     edx, 78h ; 'x'", "jmp     loc_C2E9"], ["and~edx,0", "add~edx,0", "jmp~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     ecx, 2000h", "mov     edx, 63h ; 'c'", "jz      short loc_C260"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [3, 1, 0, 1, 0, 8, 1, 0, 6, -1, 0.0, ["cmp     edx, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["cmp~edx,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [2, 1, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     ecx, 0C000h", "mov     edx, 73h ; 's'", "mov     ecx, 3Fh ; '?'", "cmovnz  edx, ecx", "nop     dword ptr [rax+00h]"], ["cmp~ecx,<STR>", "mov~edx,0", "mov~ecx,0", "cmovnz~edx,ecx", "nop~[word ptr [rax+0]"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     edx, 0FFFFFFB5h", "add     edx, 78h ; 'x'", "jmp     loc_C2A7"], ["and~edx,0", "add~edx,0", "jmp~FOO"]], [3, 1, 0, 1, 0, 8, 1, 0, 6, -1, 0.0, ["cmp     edx, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["cmp~edx,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]]], "func_feature": [0, 25, 11, 0, 16, 23, 0, 113, 0.07381, 0, 12], "succs": [[3, 11], [0, 3], [5], [2, 14], [9], [10, 4], [1, 3], [3, 13], [3, 7], [12, 15], [9], [8, 3], [], [3], [5], []], "fname": "filemodestring", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_C383"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 4, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 1, 4, 0, 1, 0, 0, 0.027777777777777776, ["mov     rdx, baselen; n", "mov     rsi, base; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,base", "call~FOO", "mov~<TAG>,0"]], [0, 0, 3, 1, 1, 10, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "movzx   ecx, [rsp+48h+sep]", "mov     rdi, [rsp+48h+var_48]", "add     rdi, rax; dest", "test    base_in_result, base_in_result", "mov     [rax], cl", "jz      short loc_C458"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "movzx~ecx,[rsp+0]", "mov~rdi,<TAG>", "add~rdi,rax", "test~base_in_result,base_in_result", "mov~<TAG>,cl", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.0, ["mov     [base_in_result], p"], ["mov~<TAG>,p"]], [2, 0, 5, 0, 0, 3, 0, 1, 2, 0, 0.034722222222222224, ["mov     [rsp+48h+var_48], 0", "mov     [rsp+48h+sep], 0", "jmp     short loc_C41E"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 1, 0.027777777777777776, ["cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      loc_C480"], ["cmp~[yte ptr [dir+0],0", "jz~FOO"]], [1, 0, 9, 3, 3, 22, 1, 4, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r12, dir", "push    rbp", "push    rbx", "mov     rbp, base", "sub     rsp, 18h", "call    last_component", "mov     rbx, rax", "mov     rdi, dirbase; name", "call    base_len", "sub     dirbase, dir", "mov     r13, rax", "mov     rdi, base; s", "add     rbx, dirbaselen", "call    _strlen", "test    dirbaselen, dirbaselen", "mov     r14, rax", "jz      short loc_C400"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r12,dir", "push~rbp", "push~rbx", "mov~rbp,base", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "mov~rdi,dirbase", "call~FOO", "sub~dirbase,dir", "mov~r13,rax", "mov~rdi,base", "add~rbx,dirbaselen", "call~FOO", "test~dirbaselen,dirbaselen", "mov~r14,rax", "jz~FOO"]], [0, 0, 4, 1, 1, 6, 1, 2, 2, -1, 0.2777777777777778, ["lea     rdi, [dirlen+baselen+1]", "add     rdi, [rsp+48h+var_48]; size", "call    _malloc", "test    rax, rax", "mov     dirbaselen, rax", "jz      short loc_C466"], ["lea~rdi,[dirlen+0]", "add~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~dirbaselen,rax", "jz~FOO"]], [3, 0, 5, 0, 0, 9, 1, 1, 2, -1, 0.034722222222222224, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setnz   al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Fh ; '/'", "cmovz   eax, edx", "mov     [rsp+48h+sep], al", "jmp     short loc_C41E"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setnz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [3, 0, 5, 0, 0, 8, 1, 0, 1, -1, 0.06944444444444445, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setz    al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Eh ; '.'", "cmovnz  eax, edx", "mov     [rsp+48h+sep], al"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovnz~eax,edx", "mov~[rsp+0],al"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     dirlen", "pop     base", "pop     dir", "pop     p_concat", "pop     baselen", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~dirlen", "pop~base", "pop~dir", "pop~p_concat", "pop~baselen", "pop~base_in_result", "retn"]]], "func_feature": [6, 5, 12, 1, 10, 13, 1, 74, 0.06389, 0, 6], "succs": [[9], [0, 2], [0], [6], [3, 7], [8, 4], [1, 9], [6], [6], []], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_C4E8"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_C4D4"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_C4D4"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 2, -1, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_C4B0"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_C501"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_C4C0"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 3, 42, 0.06845, 0, 6], "succs": [[], [0, 3], [], [2, 5], [2], [1, 2], [4, 7], [5]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 6, 1, 0, 0, 0, 0.0, ["mov     rax, data", "xor     edx, edx", "ror     rax, 3", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "xor~edx,edx", "ror~rax,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0.013157894736842105, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 16, 0, 1, 4, 1, 2, 3, -1, 0.08157894736842106, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_C600"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 6, -1, 0.060526315789473685, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_C5A0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 5, -1, 0.09473684210526316, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_C5B9"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 8, -1, 0.013157894736842105, ["mov     rsi, [rax]", "cmp     rsi, entry", "jz      short loc_C5CB"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 2, -1, 0.08421052631578947, ["cmp     rsi, entry", "jz      loc_C603"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.05263157894736842, ["test    r12b, r12b", "jz      short loc_C5EB"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 8, -1, 0.0, ["mov     rdx, [rax+8]", "mov     [cursor+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["mov~rdx,[rax+0]", "mov~[cursor+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 2, 0, 0, 2, 1, 1, 7, -1, 0.04736842105263158, ["test    r12b, r12b", "jz      short loc_C5EB"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 7, -1, 0.007894736842105263, ["mov     rax, [cursor+8]", "mov     rsi, [rax]"], ["mov~rax,[cursor+0]", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.002631578947368421, ["mov     qword ptr [rbx], 0", "jmp     short loc_C5EB"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.031578947368421054, ["mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_C640"], ["mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 7, -1, 0.02631578947368421, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_C650"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 0, 13, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [rbx], xmm0", "mov     qword ptr [next], 0", "mov     rdx, [table+48h]", "mov     [next+8], rdx", "mov     [table+48h], next", "mov     next, rsi", "pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[next+0],rdx", "mov~[table+0],next", "mov~next,rsi", "pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [1, 0, 18, 2, 0, 7, 1, 1, 1, -1, 0.04736842105263158, ["shl     rax, 4", "add     rax, [table+0]", "mov     [bucket_head], rax", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jz      loc_C650"], ["shl~rax,0", "add~rax,[table+0]", "mov~<TAG>,rax", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 20, 0, 1, 14, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_C65E"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 4, -1, 0.08947368421052632, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_C650"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 6, -1, 0.03684210526315789, ["jmp     short loc_C5CB"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     esi, esi", "pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["xor~esi,esi", "pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [4, 9, 17, 0, 21, 29, 2, 92, 0.03283, 0, 2], "succs": [[6], [0, 17], [9, 13], [2, 18], [8, 2], [1, 6], [10, 12], [10], [10, 7], [8], [], [10], [11, 14], [19, 4], [], [19, 5], [20, 15], [19, 3], [8], [], []], "fname": "hash_find_entry", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 22, 0, 0, 1, 0, 0, 0, 0, 0.3517786561264822, ["mov     rax, [src+8]"], ["mov~rax,[src+0]"]], [1, 0, 22, 0, 0, 3, 1, 1, 4, 2, 0.3942687747035573, ["test    r12b, r12b", "mov     qword ptr [bucket+8], 0", "jnz     short loc_C782"], ["test~r12b,r12b", "mov~[word ptr [bucket+0],0", "jnz~FOO"]], [2, 0, 22, 1, 0, 2, 0, 0, 8, 7, 0.2351778656126482, ["mov     qword ptr [bucket], 0", "sub     qword ptr [src+18h], 1"], ["mov~<TAG>,0", "sub~[word ptr [src+0],0"]], [1, 0, 23, 1, 0, 11, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [src]", "mov     rax, [src+8]", "cmp     bucket, rax", "jnb     loc_C793"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,[src+0]", "cmp~bucket,rax", "jnb~FOO"]], [1, 0, 22, 1, 0, 3, 0, 0, 3, 5, 0.3636363636363636, ["add     bucket, 10h", "cmp     bucket, rax", "jb      loc_C6A0"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 2, 4, 0.4110671936758893, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_C786"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 1, 5, 0.04150197628458498, ["mov     r14, dst", "mov     rbp, src", "mov     r12d, edx", "nop     word ptr [rax+rax+00000000h]"], ["mov~r14,dst", "mov~rbp,src", "mov~r12d,edx", "nop~[ord ptr [rax+0]"]], [2, 0, 22, 1, 0, 9, 1, 1, 7, 2, 0.06620553359683794, ["mov     [rax], data", "add     qword ptr [dst+18h], 1", "test    next, next", "mov     qword ptr [cursor+0], 0", "mov     rax, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor", "mov     r13, next", "jnz     short loc_C6D4"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "test~next,next", "mov~[word ptr [cursor+0],0", "mov~rax,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor", "mov~r13,next", "jnz~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 3, 0.16996047430830039, ["shl     rax, 4", "add     rax, [dst]", "mov     rdx, [cursor+8]", "cmp     qword ptr [rax], 0", "jnz     short loc_C6C0"], ["shl~rax,0", "add~rax,<TAG>", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 8, 3, 0.15612648221343872, ["mov     data, [bucket]"], ["mov~data,<TAG>"]], [0, 0, 22, 0, 0, 6, 1, 1, 7, 2, 0.06620553359683794, ["mov     rcx, [rax+8]", "test    next, next", "mov     [cursor+8], rcx", "mov     [rax+8], cursor", "mov     r13, next", "jz      short loc_C721"], ["mov~rcx,[rax+0]", "test~next,next", "mov~[cursor+0],rcx", "mov~[rax+0],cursor", "mov~r13,next", "jz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 3, 3, 0.40316205533596833, ["mov     r13, [bucket+8]", "test    cursor, cursor", "jz      short loc_C724"], ["mov~r13,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 22, 1, 0, 3, 0, 1, 7, 8, 0.08102766798418971, ["mov     [rax], r15", "add     qword ptr [dst+18h], 1", "jmp     short loc_C776"], ["mov~<TAG>,r15", "add~[word ptr [dst+0],0", "jmp~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 9, 0.26482213438735175, ["shl     rax, 4", "add     rax, [dst]", "cmp     qword ptr [rax], 0", "mov     cursor, rax", "jz      short loc_C7B0"], ["shl~rax,0", "add~rax,<TAG>", "cmp~<TAG>,0", "mov~cursor,rax", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 2, 0.16897233201581027, ["mov     rsi, [dst+10h]", "jmp     short loc_C6D4"], ["mov~rsi,[dst+0]", "jmp~FOO"]], [0, 0, 22, 0, 1, 5, 0, 1, 5, 1, 0.2816205533596838, ["mov     rsi, [dst+10h]", "mov     rdi, r15", "call    qword ptr [dst+30h]", "cmp     rax, [dst+10h]", "jnb     loc_C7E0"], ["mov~rsi,[dst+0]", "mov~rdi,r15", "call~[word ptr [dst+0]", "cmp~rax,[dst+0]", "jnb~FOO"]], [1, 0, 22, 0, 1, 4, 1, 2, 8, 9, 0.07411067193675888, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_C767"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 7, 10, 0.14624505928853754, ["mov     rax, [dst+48h]", "test    rax, rax", "jz      short loc_C7C0"], ["mov~rax,[dst+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 9, -1, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     bucket", "pop     src", "pop     safe", "pop     r13", "pop     dst", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~bucket", "pop~src", "pop~safe", "pop~r13", "pop~dst", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 22, 0, 1, 6, 0, 1, 5, 1, 0.19071146245059287, ["mov     r15, [cursor+0]", "mov     rdi, data", "call    qword ptr [dst+30h]", "mov     rsi, [dst+10h]", "cmp     rax, rsi", "jnb     loc_C7E0"], ["mov~r15,[cursor+0]", "mov~rdi,data", "call~[word ptr [dst+0]", "mov~rsi,[dst+0]", "cmp~rax,rsi", "jnb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 8, 9, 0.034584980237154145, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [2, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     bucket", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~bucket", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 22, 0, 0, 4, 0, 0, 9, 8, 0.11067193675889328, ["mov     rdx, [r13+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [r13+8], rax"], ["mov~rdx,[r13+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[r13+0],rax"]]], "func_feature": [4, 8, 15, 0, 24, 34, 3, 104, 0.16716, 0, 11], "succs": [[4], [0, 15], [0], [22, 6], [5, 22], [11, 4], [5], [9, 20], [10, 7], [1], [9, 20], [1, 14], [2], [17, 12], [20], [19, 13], [18, 23], [16, 21], [], [], [8, 19], [23], [], [2]], "fname": "transfer_entries", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_C855"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_C85C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_C830"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_C867"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_C848"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[3, 4], [0, 2], [1, 5], [2], [9], [], [], [8, 6], [1], [9, 3]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_C8AD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 2, 2, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_C880"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_C8B6"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_C8C0"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_C8A0"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_C8AD"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[8, 1], [0, 4], [0, 4], [], [3, 7], [1, 5], [5], [], [1, 6]], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 13, 1, 0, 4, 1, 1, 0, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_C918"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_C92C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_C900"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_C988"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_C9D0"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_C935"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_C925"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_1B338", "jns     short loc_C97F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_1B338", "js      short loc_C9F9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[0, 10], [0], [3, 11], [8, 2], [2], [14], [5], [5], [12, 13], [8, 4], [3], [1, 10], [6, 7], [6, 7], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.011111111111111112, ["mov     entry, [cursor]"], ["mov~entry,<TAG>"]], [0, 0, 7, 0, 1, 4, 1, 2, 3, -1, 0.15555555555555556, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_CA80"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.022222222222222223, ["jmp     short loc_CA75"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 4, -1, 0.08888888888888889, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_CA58"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.2, ["cmp     entry, rsi", "jz      short loc_CA83"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 10, 0, 1, 10, 0, 1, 0, 1, 0.0, ["push    r12", "mov     r12, table", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_CA8B"], ["push~r12", "mov~r12,table", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [1, 0, 8, 2, 0, 6, 1, 1, 1, -1, 0.08888888888888889, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jnz     short loc_CA5B"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.05555555555555556, ["mov     rsi, [cursor]"], ["mov~rsi,<TAG>"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, rbp", "pop     cursor", "pop     rbp", "pop     table", "retn"], ["mov~rax,rbp", "pop~cursor", "pop~rbp", "pop~table", "retn"]]], "func_feature": [3, 4, 8, 0, 11, 13, 4, 39, 0.05657, 0, 2], "succs": [[10], [0, 4], [], [2], [9, 2], [1, 10], [], [8, 6], [3, 5], [5], []], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 7, 0, 0, 4, 0, 0, 0, 0, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_CAC8"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_CAC3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_CAC6"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 6, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_CAB0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 4, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_CAC8"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[8, 4], [0, 2], [], [], [3, 7], [], [9, 5], [9], [], [8, 6]], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     cursor, [cursor]", "add     rsp, 8", "pop     entry", "pop     table", "retn"], ["mov~cursor,<TAG>", "add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.13257575757575757, ["test    cursor, cursor", "jnz     short loc_CB58"], ["test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 12, 1, 1, 10, 0, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     rbp, table", "mov     rbx, entry", "sub     rsp, 8", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_CB62"], ["push~rbp", "push~rbx", "mov~rbp,table", "mov~rbx,entry", "sub~rsp,0", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 4, -1, 0.030303030303030304, ["mov     rcx, [cursor]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jnz     short loc_CB18"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, -1, 0.0946969696969697, ["test    rax, rax", "jz      short loc_CB2E"], ["test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 5, -1, 0.030303030303030304, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 4, 1, 0, 3, 0, 1, 4, -1, 0.16666666666666669, ["add     bucket, 10h", "cmp     rcx, bucket", "ja      short loc_CB38"], ["add~bucket,0", "cmp~rcx,bucket", "ja~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.18181818181818182, ["mov     rcx, [table+8]", "jmp     short loc_CB40"], ["mov~rcx,[table+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, -1, 0.030303030303030304, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_CB4B"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 10, 2, 0, 7, 0, 1, 1, -1, 0.07575757575757576, ["shl     rax, 4", "add     rax, [table+0]", "mov     rcx, [rax]", "mov     rdx, rax", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_CB29"], ["shl~rax,0", "add~rax,[table+0]", "mov~rcx,<TAG>", "mov~rdx,rax", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, -1, 0.030303030303030304, ["nop     dword ptr [cursor+cursor+00h]"], ["nop~[word ptr [cursor+0]"]]], "func_feature": [2, 4, 9, 0, 13, 17, 0, 45, 0.05944, 0, 6], "succs": [[], [0, 8], [], [2, 10], [1, 5], [8, 4], [11], [9, 6], [7], [11, 7], [1, 12], [], [5]], "fname": "hash_get_next", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_CBD0"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_CBA0"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     dword ptr [counter]"], ["nop~<TAG>"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, -1, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_CBC1"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 0, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     bucket, r10", "jb      short loc_CB7F"], ["add~bucket,0", "cmp~bucket,r10", "jb~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 0, 5, -1, 0.17424242424242425, ["mov     r10, [table+8]", "mov     r8, counter"], ["mov~r10,[table+0]", "mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_CBCA"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     r10, [table+8]", "cmp     r10, bucket", "jbe     short loc_CBD2"], ["mov~bucket,<TAG>", "mov~r10,[table+0]", "cmp~r10,bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_CBBA"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 13, 17, 0, 34, 0.1317, 0, 2], "succs": [[9, 1], [0, 6], [0], [4, 7], [8, 3], [3], [4], [8, 12], [], [], [], [10, 5], [2, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 8, 1, 0, 4, 1, 1, 0, 0, 0.24444444444444446, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_CC18"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 4, -1, 0.29444444444444445, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_CC3F"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.011111111111111112, ["xor     ebp, ebp", "jmp     short loc_CC3F"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 10, 1, 0, 11, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "mov     rax, [table+8]", "cmp     rax, bucket", "jbe     short loc_CC51"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "mov~rax,[table+0]", "cmp~rax,bucket", "jbe~FOO"]], [0, 0, 8, 0, 0, 4, 1, 0, 1, -1, 0.07777777777777778, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, -1, 0.17222222222222222, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_CC05"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 2, -1, 0.2777777777777778, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_CC36"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 3, -1, 0.2111111111111111, ["mov     rbx, bucket", "jmp     short loc_CC1B"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.1277777777777778, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]]], "func_feature": [1, 5, 6, 0, 11, 15, 0, 44, 0.1303, 0, 4], "succs": [[9, 10], [0, 5], [5], [2, 4], [7], [], [5, 7], [8, 6], [1], [1], [6]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_CC8D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_CC70"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["movaps  xmm0, cs:xmmword_1B340", "mov     byte ptr [tuning+10h], 0", "movups  xmmword ptr [tuning], xmm0", "retn"], ["movaps~xmm0,<TAG>", "mov~[yte ptr [tuning+0],0", "movups~<TAG>,xmm0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 28, 0, 0, 4, 0, 0, 0, 0, 0.08708708708708708, ["addss   xmm0, cs:dword_1B354", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm0", "jbe     short fail"], ["addss~xmm0,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm0", "jbe~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 10, 0.07207207207207207, ["movss   xmm0, dword ptr [tuning]", "ucomiss xmm0, cs:dword_1B360", "jb      short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 15, -1, 0.024774774774774775, ["mov     [table+10h], rbx", "mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      fail"], ["mov~[table+0],rbx", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 14, -1, 0.04804804804804805, ["test    rcx, rcx", "jnz     fail"], ["test~rcx,rcx", "jnz~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 7, 6, 0.06081081081081081, ["cvttss2si r15, xmm0", "nop     dword ptr [rax+00h]"], ["cvttss2si~r15,xmm0", "nop~[word ptr [rax+0]"]], [0, 0, 20, 0, 0, 2, 0, 0, 6, 7, 0.13363363363363362, ["ucomiss xmm0, cs:dword_1B36C", "jnb     loc_CEA4"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 8, 8, 0.1006006006006006, ["movss   xmm3, cs:dword_1B364", "ucomiss xmm3, xmm2", "jb      short fail"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [1, 0, 16, 3, 0, 8, 1, 0, 13, 3, 0.03791291291291291, ["add     rsi, 2", "xor     edx, edx", "mov     rax, rbx", "div     rsi", "add     rdi, r8", "cmp     rdi, rbx", "mov     rax, rdx", "jb      short loc_CE70"], ["add~rsi,0", "xor~edx,edx", "mov~rax,rbx", "div~,rsi", "add~rdi,r8", "cmp~rdi,rbx", "mov~rax,rdx", "jb~FOO"]], [3, 0, 16, 0, 0, 4, 0, 1, 12, 4, 0.041666666666666664, ["mov     r8d, 10h", "mov     edi, 9", "mov     esi, 3", "jmp     short loc_CE79"], ["mov~r8d,0", "mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 16, 1, 0, 3, 1, 1, 14, 4, 0.004379379379379379, ["add     r8, 8", "test    rdx, rdx", "jz      short loc_CE95"], ["add~r8,0", "test~rdx,rdx", "jz~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 2, 11, 0.03303303303303303, ["mov     [table+28h], tuning", "lea     table, default_tuning", "cmp     tuning, rax", "jz      loc_CDCB"], ["mov~[table+0],tuning", "lea~table,<TAG>", "cmp~tuning,rax", "jz~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 1, 12, 0.026276276276276277, ["test    tuning, tuning", "jz      loc_CDC0"], ["test~tuning,tuning", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 2, 0.15077577577577578, ["test    rax, rax", "jnz     short loc_CEC8"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 16, 2, 0, 10, 0, 0, 10, 3, 0.23385885885885885, ["mov     rax, rbx", "mov     rsi, rbx", "mul     rcx", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rsi, rax", "cmp     rbx, 9", "mov     rax, rsi", "jbe     short loc_CE90"], ["mov~rax,rbx", "mov~rsi,rbx", "mul~,rcx", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rsi,rax", "cmp~rbx,0", "mov~rax,rsi", "jbe~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 10, 6, 0.12312312312312312, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_CE08"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 9, 7, 0.11261261261261261, ["ucomiss xmm1, xmm0", "jbe     short fail"], ["ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 24, 0, 0, 2, 1, 0, 11, 10, 0.036036036036036036, ["test    candidate, candidate", "jns     short loc_CDD8"], ["test~candidate,candidate", "jns~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 13, -1, 0.00925925925925926, ["jmp     fail"], ["jmp~FOO"]], [2, 0, 16, 1, 0, 3, 0, 1, 12, 4, 0.041916916916916916, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_CE30"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 3, 13, 0.02177177177177177, ["movss   xmm1, dword ptr [tuning+8]", "ucomiss xmm1, cs:dword_1B354", "ja      short loc_CD48"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "ja~FOO"]], [5, 0, 17, 0, 0, 7, 1, 1, 8, 5, 0.23123123123123124, ["cmp     r15, 0Ah", "mov     ebx, 0Ah", "mov     rcx, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, r15", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["cmp~r15,0", "mov~ebx,0", "mov~rcx,0", "cmovnb~rbx,r15", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [1, 0, 18, 0, 0, 5, 1, 1, 7, 6, 0.06081081081081081, ["subss   xmm0, cs:dword_1B36C", "mov     rax, 8000000000000000h", "cvttss2si r15, xmm0", "xor     r15, rax", "jmp     loc_CE08"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~r15,xmm0", "xor~r15,rax", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 4, -1, 0.02515015015015015, ["mov     rdi, table; ptr", "xor     r14d, r14d", "call    free"], ["mov~rdi,table", "xor~r14d,r14d", "call~FOO"]], [0, 0, 31, 0, 0, 3, 0, 0, 4, 12, 0.03753753753753754, ["movss   xmm0, cs:dword_1B358", "ucomiss xmm0, xmm1", "jbe     short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 30, 0, 0, 3, 0, 0, 5, 11, 0.05555555555555555, ["movss   xmm0, dword ptr [tuning+0Ch]", "ucomiss xmm0, cs:dword_1B35C", "jbe     short fail"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 5, 8, 0.13963963963963963, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_1B368", "jnb     fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 13, -1, 0.07557557557557558, ["test    rax, rax", "js      fail"], ["test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 9, 4, 0.22072072072072071, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 5, 0.07607607607607607, ["test    rsi, rsi", "jz      short loc_CE95"], ["test~rsi,rsi", "jz~FOO"]], [4, 0, 1, 2, 0, 10, 0, 1, 16, -1, 0.00037537537537537537, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0", "jmp     loc_CD31"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0", "jmp~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 4, 9, 0.05930930930930931, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     r15d, 1", "or      rax, r15", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_CDE1"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~r15d,0", "or~rax,r15", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 3, 10, 0.06756756756756757, ["test    candidate, candidate", "movss   xmm1, cs:dword_1B350", "js      short loc_CD9F"], ["test~candidate,candidate", "movss~xmm1,<TAG>", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 13, 0, 0.0, ["mov     ecx, 1", "jmp     short loc_CED7"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 7, 1, 0, 5, 1, 0, 12, 1, 0.11161161161161162, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_CF3A"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     data_freer", "pop     hasher", "pop     comparator", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~data_freer", "pop~hasher", "pop~comparator", "pop~r14", "pop~r15", "retn"]], [1, 1, 37, 1, 1, 23, 3, 2, 0, 13, 0.0, ["push    r15", "push    r14", "lea     rax, raw_hasher", "push    r13", "push    r12", "mov     r12, hasher", "push    rbp", "push    rbx", "mov     r13, comparator", "mov     r15, candidate", "mov     edi, 50h ; 'P'; size", "mov     rbx, tuning", "sub     rsp, 8", "test    hasher, hasher", "mov     rbp, data_freer", "cmovz   r12, rax", "lea     rax, raw_comparator", "test    comparator, comparator", "cmovz   r13, rax", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      short loc_CD31"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,hasher", "push~rbp", "push~rbx", "mov~r13,comparator", "mov~r15,candidate", "mov~edi,<STR>", "mov~rbx,tuning", "sub~rsp,0", "test~hasher,hasher", "mov~rbp,data_freer", "cmovz~r12,rax", "lea~rax,<TAG>", "test~comparator,comparator", "cmovz~r13,rax", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 2, 11, 0.017267267267267267, ["lea     table, default_tuning", "mov     [table+28h], rax"], ["lea~table,<TAG>", "mov~[table+0],rax"]], [0, 0, 22, 0, 0, 2, 0, 0, 4, 9, 0.05930930930930931, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]]], "func_feature": [3, 19, 23, 0, 38, 63, 5, 162, 0.0694, 11, 12], "succs": [[22, 6], [0, 22], [29, 22], [2, 22], [20], [4, 21], [22, 15], [9, 12], [7], [18, 7], [19, 31], [10, 36], [33, 18], [28, 12], [16, 20], [22, 14], [37, 30], [22], [17, 13], [22, 23], [27, 22], [20], [34], [24, 22], [1, 22], [5, 22], [3, 22], [13], [8, 18], [34], [25], [37, 30], [26], [32, 26], [], [34, 11], [31], [25]], "fname": "hash_initialize", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 14, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "mov     rax, [table+8]", "cmp     bucket, rax", "jnb     short loc_CFD6"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "mov~rax,[table+0]", "cmp~bucket,rax", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, 7, 0.06593406593406594, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 0, 0, 3, 0, 0, 0, 8, 0.37362637362637363, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0", "mov     rax, [table+8]"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0", "mov~rax,[table+0]"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 9, 0.20329670329670332, ["test    rax, rax", "jz      short loc_CFB8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 0, 0, 0.11538461538461539, ["jmp     short loc_CFB8"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 0, 9, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [2, 0, 0, 0, 0, 6, 0, 0, 0, -1, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 13, 1, 0, 3, 0, 1, 0, 7, 0.39560439560439564, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_CF68"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [1, 0, 13, 0, 1, 11, 1, 2, 0, 4, 0.08241758241758243, ["mov     rdi, [cursor]", "call    rax", "mov     rcx, [cursor+8]", "mov     rdx, [table+48h]", "mov     rax, [table+40h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_CF80"], ["mov~rdi,<TAG>", "call~rax", "mov~rcx,[cursor+0]", "mov~rdx,[table+0]", "mov~rax,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 3, 0.28571428571428575, ["test    rax, rax", "jz      short loc_CFEB"], ["test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 8, 1, 1, 0, 1, 0.1208791208791209, ["mov     rax, [cursor+8]", "mov     qword ptr [cursor], 0", "mov     [cursor+8], rdx", "mov     rdx, cursor", "mov     [table+48h], cursor", "test    next, next", "mov     rbx, next", "jnz     short loc_CFF0"], ["mov~rax,[cursor+0]", "mov~<TAG>,0", "mov~[cursor+0],rdx", "mov~rdx,cursor", "mov~[table+0],cursor", "test~next,next", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 0, 2, 0.1263736263736264, ["mov     rdx, [table+48h]", "nop"], ["mov~rdx,[table+0]", "nop"]], [1, 0, 13, 0, 0, 2, 0, 1, 0, 6, 0.4560439560439561, ["cmp     qword ptr [bucket], 0", "jz      short loc_CFCD"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 1, 1, 0, 5, 0.42307692307692313, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_CFAD"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 0, 4, 0.2692307692307693, ["nop     dword ptr [rax]"], ["nop~<TAG>"]]], "func_feature": [2, 5, 10, 0, 15, 22, 0, 56, 0.19451, 0, 1], "succs": [[1, 6], [12], [7], [2, 5], [2], [2], [], [12, 6], [9, 3], [8, 11], [10, 4], [10], [13, 7], [3, 14], [9]], "fname": "hash_clear", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.13636363636363635, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_D0A6"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.0670995670995671, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_D080"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 2, 4, 0.12987012987012986, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 5, 0.0670995670995671, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.045454545454545456, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 10, 0, 1, 5, 1, 2, 5, 4, 0.049783549783549784, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_D090"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 6, 3, 0.032467532467532464, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [1, 0, 22, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_D073"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 3, 0.01948051948051948, ["cmp     qword ptr [table+20h], 0", "jz      short loc_D073"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 2, 2, 0.04004329004329004, ["cmp     bucket, rax", "jnb     short loc_D0AF"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 3, 6, 0.06060606060606061, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.15584415584415584, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_D0D1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 1, 2, 0.24567099567099568, ["cmp     rax, bucket", "jbe     short loc_D0AF"], ["cmp~rax,bucket", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04112554112554113, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 19, 0, 0, 3, 1, 1, 4, 5, 0.11255411255411256, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_D066"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 19, 1, 0, 3, 0, 0, 5, 4, 0.20995670995670995, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_D038"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 7, 0.04329004329004329, ["mov     rbx, bucket", "jmp     short loc_D053"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004329004329004329, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_D0C0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 19, 0, 1, 4, 1, 2, 6, 6, 0.10173160173160173, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_D050"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 5, 0.10173160173160173, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 12, 0, 0, 1, 0, 0, 6, 3, 0.19696969696969696, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]]], "func_feature": [4, 6, 15, 0, 23, 34, 1, 60, 0.08093, 0, 2], "succs": [[1, 3], [0, 12], [0], [6], [], [4], [6, 7], [1], [9, 13], [10, 13], [11, 12], [15], [5, 14], [2, 12], [18], [16, 17], [22, 15], [20], [18, 5], [20], [19, 21], [16], [13]], "fname": "hash_free", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 16, 1, 0, 5, 1, 0, 0, 0, 0.2398989898989899, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      loc_D358"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [5, 0, 25, 0, 0, 7, 1, 1, 1, 5, 0.17171717171717174, ["cmp     rsi, 0Ah", "mov     ebx, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, rsi", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_D1F7"], ["cmp~rsi,0", "mov~ebx,0", "mov~r8,0", "cmovnb~rbx,rsi", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 5, 0.07291666666666667, ["test    rax, rax", "jnz     short loc_D1F7"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 24, 1, 0, 3, 0, 1, 5, 5, 0.045928030303030304, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_D190"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [2, 0, 30, 0, 0, 8, 2, 1, 2, 4, 0.017361111111111112, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     esi, 1", "or      rax, rsi", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_D129"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~esi,0", "or~rax,rsi", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 1, 5, 0.008207070707070706, ["test    candidate, candidate", "js      loc_D2FD"], ["test~candidate,candidate", "js~FOO"]], [2, 0, 33, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "sub     rsp, 60h", "mov     r12, [table+28h]", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "cmp     byte ptr [r12+10h], 0", "jnz     short loc_D168"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "sub~rsp,0", "mov~r12,[table+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 5, 6, 0.05397727272727273, ["cvttss2si rsi, xmm0", "jmp     loc_D168"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [1, 0, 26, 0, 0, 5, 1, 0, 5, 6, 0.05397727272727273, ["subss   xmm0, cs:dword_1B36C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "nop     dword ptr [rax+00h]"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "nop~[word ptr [rax+0]"]], [0, 0, 24, 0, 0, 1, 0, 0, 2, 7, 0.05965909090909091, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 14, 0, 0, 2, 1, 1, 3, 3, 0.2342171717171717, ["test    rax, rax", "js      loc_D2E0"], ["test~rax,rax", "js~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     ecx, 1", "jmp     loc_D20A"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 4, 3, 0.17045454545454547, ["test    rcx, rcx", "jnz     loc_D2E0"], ["test~rcx,rcx", "jnz~FOO"]], [3, 0, 8, 2, 1, 21, 2, 2, 7, 3, 0.10890151515151515, ["mov     [new_table+78h+storage.n_buckets], rbx", "shl     rbx, 4", "mov     [new_table+78h+storage.tuning], r12", "add     rbx, rax", "mov     rax, [table+40h]", "mov     r12, new_table", "movdqu  xmm0, xmmword ptr [table+30h]", "xor     edx, edx; safe", "mov     rsi, table; src", "mov     rdi, r12; dst", "mov     [new_table+78h+storage.bucket_limit], rbx", "mov     [new_table+78h+storage.data_freer], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+storage.n_buckets_used], 0", "mov     [new_table+78h+storage.n_entries], 0", "movaps  xmmword ptr [new_table+78h+storage.hasher], xmm0", "mov     [new_table+78h+storage.free_entry_list], rax", "call    transfer_entries", "test    al, al", "mov     ebx, eax", "jnz     loc_D32C"], ["mov~[new_table+0],rbx", "shl~rbx,0", "mov~[new_table+0],r12", "add~rbx,rax", "mov~rax,[table+0]", "mov~r12,new_table", "movdqu~xmm0,[mmword ptr [table+0]", "xor~edx,edx", "mov~rsi,table", "mov~rdi,r12", "mov~[new_table+0],rbx", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],0", "mov~[new_table+0],0", "movaps~[mmword ptr [new_table+0],xmm0", "mov~[new_table+0],rax", "call~FOO", "test~al,al", "mov~ebx,eax", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 6, 3, 0.1259469696969697, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [new_table+78h+storage.bucket], rax", "jz      loc_D2E0"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 3, 0.1590909090909091, ["cmp     [table+10h], rbx", "jz      loc_D325"], ["cmp~[table+0],rbx", "jz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 2, 4, 0.017361111111111112, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.002840909090909091, ["mov     ebx, 1", "jmp     short loc_D2E2"], ["mov~ebx,0", "jmp~FOO"]], [2, 0, 24, 2, 0, 10, 0, 0, 3, 6, 0.08664772727272728, ["mov     rax, rbx", "mov     rdi, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rdi, rax", "cmp     rbx, 9", "mov     rax, rdi", "jbe     short loc_D1E8"], ["mov~rax,rbx", "mov~rdi,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rdi,rax", "cmp~rbx,0", "mov~rax,rdi", "jbe~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 6, 0.04403409090909091, ["test    rdi, rdi", "jz      short loc_D1ED"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 3, 3, 0.08775252525252525, ["divss   xmm0, dword ptr [r12+8]", "ucomiss xmm0, cs:dword_1B368", "jnb     loc_D2E0"], ["divss~xmm0,[word ptr [r12+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 8, 4, 0.06818181818181818, ["mov     rax, [new_table+78h+storage.free_entry_list]", "mov     edx, 1; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "mov     [table+48h], rax", "call    transfer_entries", "test    al, al", "jz      loc_D353"], ["mov~rax,[new_table+0]", "mov~edx,0", "mov~rsi,r12", "mov~rdi,table", "mov~[table+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 4, 7, 0.0928030303030303, ["ucomiss xmm0, cs:dword_1B36C", "jb      loc_D31B"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [3, 0, 24, 0, 0, 4, 0, 1, 5, 7, 0.026988636363636364, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_D1D1"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 6, 2, 2, 9, 3, 0.026515151515151516, ["xor     edx, edx; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      loc_D353"], ["xor~edx,edx", "mov~rsi,r12", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 1, 1, 7, 6, 0.0033143939393939395, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_D1ED"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 24, 3, 0, 8, 1, 0, 6, 6, 0.03551136363636364, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rsi, rbx", "mov     rax, rdx", "jb      short loc_D1C8"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rsi,rbx", "mov~rax,rdx", "jb~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 8, 2, 0.002840909090909091, ["mov     rdi, [table+0]; ptr", "call    free", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.bucket]", "mov     rax, [new_table+78h+storage.free_entry_list]", "movups  xmmword ptr [table+0], xmm0", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.n_buckets]", "mov     [table+48h], rax", "movups  xmmword ptr [table+10h], xmm0", "jmp     short loc_D2E2"], ["mov~rdi,[table+0]", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rax,[new_table+0]", "movups~[mmword ptr [table+0],xmm0", "movdqa~xmm0,[mmword ptr [new_table+0]", "mov~[table+0],rax", "movups~[mmword ptr [table+0],xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 10, 2, 0.005681818181818182, ["mov     rdi, [new_table+78h+storage.bucket]; ptr", "call    free", "jmp     short loc_D2E2"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 4, 2, 0.0625, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.05681818181818182, ["mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_D362"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 6, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]]], "func_feature": [8, 21, 30, 1, 34, 51, 3, 155, 0.063, 3, 12], "succs": [[10, 11], [0, 9], [0, 3], [0, 18], [20], [16, 4], [1, 5], [1], [1], [18], [12, 30], [10], [30, 15], [27, 21], [13, 30], [17, 14], [20], [32], [2, 19], [3, 23], [30, 22], [24, 28], [8, 7], [26], [28, 29], [26, 3], [25, 2], [32], [], [32], [32], [], [33, 31], []], "fname": "hash_rehash", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 27, 0, 0, 3, 0, 0, 0, 0, 0.05254237288135594, ["movss   xmm3, cs:dword_1B358", "ucomiss xmm3, xmm2", "jbe     loc_D620"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.08531073446327683, ["ucomiss xmm2, cs:dword_1B354", "jbe     loc_D620"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.0635593220338983, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.12796610169491526, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_D650"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.01652542372881356, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_D526"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.024858757062146894, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_D6EA"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [0, 0, 40, 0, 0, 3, 0, 1, 8, 4, 0.0016949152542372883, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_D423"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 45, 0, 1, 4, 1, 2, 7, 5, 0.00903954802259887, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_D500"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [3, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.020762711864406782, ["add     rsi, 1", "mov     [rbx], entry", "mov     eax, 1", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "jmp     loc_D433"], ["add~rsi,0", "mov~<TAG>,entry", "mov~eax,0", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "jmp~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07231638418079096, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_D674"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.024717514124293787, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [0, 0, 45, 0, 0, 4, 1, 1, 8, 6, 0.014971751412429379, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_D458"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.03220338983050847, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_D70B"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 60, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_D61B"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.02344632768361582, ["subss   xmm0, cs:dword_1B36C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_D5F2"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.06666666666666667, ["ucomiss xmm0, cs:dword_1B36C", "jnb     loc_D6AD"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.02344632768361582, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 45, 0, 0, 3, 0, 1, 6, 5, 0.011299435028248588, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_D3F0"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 46, 0, 0, 3, 1, 1, 5, 6, 0.022740112994350282, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_D40C"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.13898305084745763, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_D558"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.0635593220338983, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_D489"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 40, 0, 0, 1, 0, 1, 7, 4, 0.009887005649717515, ["jmp     short loc_D423"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.04712806026365349, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_D690"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.09613935969868173, ["mov     rbx, [rsp+38h+bucket]", "cmp     qword ptr [rbx], 0", "jz      loc_D670"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 58, 2, 0, 7, 1, 1, 2, 4, 0.03220338983050847, ["shl     rax, 4", "add     rax, [table+0]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+38h+bucket], rax", "test    rsi, rsi", "jz      loc_D510"], ["shl~rax,0", "add~rax,[table+0]", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.028389830508474576, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_D541"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05112994350282486, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_D6CC"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 59, 0, 1, 9, 0, 1, 1, 5, 0.01638418079096045, ["mov     r13, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_D61B"], ["mov~r13,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.02824858757062147, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_D499"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.014218455743879473, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_D4BC"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 5, 4, 0.01709039548022599, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 48, 0, 1, 4, 1, 2, 4, 5, 0.029096045197740113, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D420"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.049764595103578155, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_1B350", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_D499"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.03728813559322034, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_1B360", "jb      short loc_D620"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.04519774011299435, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_1B35C", "jbe     loc_D620"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 6, 3, 0.05918079096045198, ["test    rsi, rsi", "jz      short loc_D458"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.010451977401129945, ["mov     eax, 0FFFFFFFFh", "jmp     loc_D433"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.08606403013182673, ["ucomiss xmm0, cs:dword_1B368", "jnb     loc_D6A3"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.042090395480225994, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_D6A3"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.014077212806026366, ["ucomiss xmm2, xmm4", "jbe     short loc_D620"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.020856873822975523, ["movss   xmm6, cs:dword_1B364", "ucomiss xmm6, xmm5", "jb      short loc_D620"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 4, 0, 0, 3, 2, 1, 4, 2, 0.014689265536723164, ["xor     eax, eax", "test    matched_ent, matched_ent", "jz      short loc_D433"], ["xor~eax,eax", "test~matched_ent,matched_ent", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 3, 3, 0.022033898305084745, ["cmp     entry, rsi", "jz      short loc_D428"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.0, ["mov     [matched_ent], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.007297551789077213, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_D644"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.01652542372881356, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.0288135593220339, ["addss   xmm4, cs:dword_1B354", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_D620"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007203389830508475, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.028389830508474576, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [2, 0, 3, 1, 0, 7, 0, 1, 15, 2, 0.0018361581920903955, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "mov     eax, 1", "add     qword ptr [table+20h], 1", "jmp     loc_D433"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "mov~eax,0", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08060263653483994, ["mulss   xmm0, xmm2", "jmp     short loc_D5D3"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.08582862523540491, ["mulss   xmm0, cs:dword_1B370"], ["mulss~xmm0,<TAG>"]], [1, 0, 0, 1, 0, 6, 0, 0, 6, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     entry", "pop     matched_ent", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~matched_ent", "pop~table", "retn"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.05677966101694915, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_D46A"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11186440677966102, ["mov     rax, [table+18h]", "test    rax, rax", "js      short loc_D4E0"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.023870056497175142, ["jmp     short loc_D458"], ["jmp~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 9, 6, 0.16638418079096046, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_D63C"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.06949152542372881, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.05677966101694915, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]]], "func_feature": [8, 29, 43, 1, 61, 93, 0, 218, 0.03951, 11, 7], "succs": [[34, 36], [0, 34], [20], [2, 21], [27], [4, 47], [37], [11, 6], [13], [8, 59], [8], [56, 18], [], [12, 54], [28, 29], [40], [17, 15], [40], [22, 7], [57, 18], [24, 58], [20], [37], [49, 31], [10, 23], [44, 5], [9], [26, 50], [], [25, 28], [24, 28], [51, 38], [37], [32, 19], [24, 53], [48, 34], [34, 35], [56, 43], [13], [16, 38], [30, 38], [34, 46], [41, 34], [45, 13], [33, 43], [13], [52, 39], [27], [34, 42], [51], [9], [13], [39], [52], [], [3], [60, 55], [56], [1, 53], [58], [3]], "fname": "hash_insert_if_absent", "n_num": 61}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 29, 0, 0, 3, 0, 1, 0, 0, 0.1781609195402299, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_D9DD"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.14882032667876588, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_D8F8"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.07441016333938294, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 43, 0, 0, 4, 1, 1, 8, 5, 0.016031457955232913, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_D7CC"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 43, 0, 1, 4, 1, 2, 7, 4, 0.009679370840895343, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_D8A0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.07138535995160315, ["ucomiss xmm0, cs:dword_1B36C", "jnb     loc_DA50"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.09215567654769106, ["ucomiss xmm0, cs:dword_1B368", "jnb     loc_DA43"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 5, 5, 0.024349667271627348, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_D7AD"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 46, 0, 1, 4, 1, 2, 4, 4, 0.031155474894131886, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_D7C0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.06805807622504538, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_D804"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.1370235934664247, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_D9F0"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.025559588626739262, ["jmp     short loc_D7CC"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.025105868118572294, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.06805807622504538, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.0913490623109498, ["ucomiss xmm2, cs:dword_1B354", "jbe     loc_D9C0"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.026467029643073202, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.10294414196410567, ["mov     rbx, [rsp+28h+var_28]", "cmp     qword ptr [rbx], 0", "jz      loc_DA10"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.06079854809437387, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_D7E3"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11978221415607987, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_D878"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.039927404718693285, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_1B360", "jb      short loc_D9C0"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.048396854204476716, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_1B35C", "jbe     loc_D9C0"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 43, 0, 0, 3, 0, 1, 6, 4, 0.01088929219600726, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_D790"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.030248033877797946, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_D814"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.05328695301472071, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_1B350", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_D814"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 11, 6, 0.056261343012704176, ["movss   xmm3, cs:dword_1B358", "ucomiss xmm3, xmm2", "jbe     loc_D9C0"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 38, 0, 0, 3, 0, 1, 8, 3, 0.0012099213551119178, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_D7C3"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.04506957047791894, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_DA43"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.025105868118572294, ["subss   xmm0, cs:dword_1B36C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_D992"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.05046380318612624, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_DA30"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 58, 1, 0, 9, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_D9BB"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03327283726557774, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, rsi", "jnz     loc_DAAE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rsi", "jnz~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.030399274047186935, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_D8E3"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05474894131881428, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_DA6F"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007713248638838476, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 3, 0.008771929824561405, ["jmp     short loc_D7C3"], ["jmp~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.02661826981246219, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_DA8D"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [1, 0, 56, 2, 0, 7, 1, 1, 2, 3, 0.03327283726557774, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+28h+var_28], rax", "test    rsi, rsi", "jz      loc_D8B0"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 57, 0, 1, 8, 0, 1, 1, 4, 0.01693889897156685, ["mov     r12, table", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_D9BB"], ["mov~r12,table", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.015224843718491633, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_D839"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 0, 5, 3, 0.0176950998185118, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.0176950998185118, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [1, 0, 3, 1, 0, 6, 0, 0, 15, 2, 0.0019661222020568663, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     rsi, entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "add     qword ptr [table+20h], 1"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~rsi,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "add~[word ptr [table+0],0"]], [0, 0, 3, 0, 0, 2, 1, 1, 13, 2, 0.01119177253478524, ["xor     esi, esi", "jmp     loc_D851"], ["xor~esi,esi", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 6, 2, 0.05852994555353903, ["test    rsi, rsi", "jnz     loc_D851"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.022333131679774153, ["movss   xmm6, cs:dword_1B364", "ucomiss xmm6, xmm5", "jb      short loc_D9C0"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.030852994555353903, ["addss   xmm4, cs:dword_1B354", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_D9C0"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.030399274047186935, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.015073603549102643, ["ucomiss xmm2, xmm4", "jbe     short loc_D9C0"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.09190360959870941, ["mulss   xmm0, cs:dword_1B370"], ["mulss~xmm0,<TAG>"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.06079854809437387, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 47, 0, 0, 2, 0, 1, 3, 2, 0.02177858439201452, ["cmp     entry, rsi", "jz      loc_D851"], ["cmp~entry,rsi", "jz~FOO"]], [2, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.02223230490018149, ["add     rsi, 1", "mov     [rbx], entry", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "mov     rsi, entry", "jmp     loc_D851"], ["add~rsi,0", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "mov~rsi,entry", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08630772333131681, ["mulss   xmm0, xmm2", "jmp     short loc_D973"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.007814075418431137, ["cmp     byte ptr [rcx+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_D9E5"], ["cmp~[yte ptr [rcx+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07743496672716274, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_DA15"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~table", "retn"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.0176950998185118, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_D8C7"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]]], "func_feature": [8, 28, 41, 2, 59, 90, 4, 211, 0.04323, 11, 7], "succs": [[50, 14], [0, 16], [0], [18, 21], [25, 3], [27, 12], [44, 5], [11, 21], [41, 7], [1], [9, 13], [18], [26], [1], [24, 23], [53], [28, 15], [10], [17, 51], [23, 47], [19, 23], [35, 4], [16, 38], [16, 50], [20, 23], [45], [44, 22], [26], [40, 34], [38, 39], [], [57, 30], [56], [32, 48], [43], [45], [42, 58], [52, 36], [], [37, 38], [43, 44], [45], [33], [31], [31], [18, 31], [49, 23], [46, 23], [56], [55, 23], [54], [10], [8, 31], [31], [6], [6, 54], [2, 53], [], [33]], "fname": "hash_insert", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 37, 0, 0, 1, 0, 0, 0, 0, 0.01469387755102041, ["mov     rbx, [bucket]"], ["mov~rbx,<TAG>"]], [0, 0, 46, 0, 1, 5, 1, 2, 3, -1, 0.011428571428571429, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_DB80"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 14, -1, 0.028979591836734694, ["pxor    xmm4, xmm4"], ["pxor~xmm4,xmm4"]], [0, 0, 21, 0, 0, 3, 0, 0, 13, -1, 0.11714285714285715, ["movss   xmm3, dword ptr [rdx+8]", "ucomiss xmm3, cs:dword_1B354", "jbe     loc_DD00"], ["movss~xmm3,[word ptr [rdx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 14, -1, 0.07714285714285715, ["movss   xmm4, cs:dword_1B358", "ucomiss xmm4, xmm3", "jbe     loc_DD00"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,xmm3", "jbe~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 10, -1, 0.10857142857142857, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 27, 0, 0, 5, 1, 1, 9, -1, 0.22408163265306122, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx]", "js      loc_DD40"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,<TAG>", "js~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 18, -1, 0.03795918367346939, ["movss   xmm6, cs:dword_1B364", "ucomiss xmm6, xmm5", "jb      short loc_DD04"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 17, -1, 0.0489795918367347, ["addss   xmm2, cs:dword_1B354", "movss   xmm5, dword ptr [rdx+4]", "ucomiss xmm5, xmm2", "jbe     loc_DD04"], ["addss~xmm2,<TAG>", "movss~xmm5,[word ptr [rdx+0]", "ucomiss~xmm5,xmm2", "jbe~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 3, -1, 0.07183673469387755, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_DCF0"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 2, -1, 0.037551020408163265, ["cmp     entry, rbx", "jz      loc_DB84"], ["cmp~entry,rbx", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 20, -1, 0.0008163265306122449, ["mov     r12, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_DCD0"], ["mov~r12,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 19, -1, 0.017959183673469388, ["nop"], ["nop"]], [0, 0, 14, 0, 0, 2, 0, 0, 19, -1, 0.027755102040816326, ["ucomiss xmm3, xmm2", "jbe     short loc_DD04"], ["ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 11, -1, 0.22775510204081634, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm1", "ucomiss xmm3, xmm0", "jbe     short loc_DBC3"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm1", "ucomiss~xmm3,xmm0", "jbe~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 10, -1, 0.10857142857142857, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_DC0C"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 4, -1, 0.012244897959183675, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_DD28"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 20, -1, 0.018367346938775512, ["cmp     byte ptr [rdx+10h], 0", "mulss   xmm1, xmm5", "jnz     short loc_DCA4"], ["cmp~[yte ptr [rdx+0],0", "mulss~xmm1,xmm5", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 21, -1, 0.00040816326530612246, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 1, 0, 0, 1, 0, 1, 16, -1, 0.004081632653061225, ["jmp     loc_DBC3"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 5, 0, 1, 15, -1, 0.04204081632653062, ["mulss   xmm4, xmm1", "mov     [table+28h], rax", "movss   xmm3, cs:dword_1B350", "ucomiss xmm4, xmm0", "ja      loc_DCA0"], ["mulss~xmm4,xmm1", "mov~[table+0],rax", "movss~xmm3,<TAG>", "ucomiss~xmm4,xmm0", "ja~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 14, -1, 0.11673469387755102, ["mulss   xmm1, xmm3"], ["mulss~xmm1,xmm3"]], [0, 0, 10, 0, 0, 2, 0, 1, 13, -1, 0.09551020408163266, ["movss   xmm3, cs:dword_1B350", "jmp     loc_DCA0"], ["movss~xmm3,<TAG>", "jmp~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 12, -1, 0.22448979591836735, ["lea     rax, default_tuning", "cmp     rdx, rax", "jz      loc_DDA0"], ["lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 5, -1, 0.025714285714285714, ["mov     rbx, [rax]", "mov     r14, bucket", "cmp     entry, rbx", "jnz     short loc_DB49"], ["mov~rbx,<TAG>", "mov~r14,bucket", "cmp~entry,rbx", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.04183673469387755, ["cvttss2si rsi, xmm1; candidate"], ["cvttss2si~rsi,xmm1"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.11306122448979593, ["ucomiss xmm1, cs:dword_1B36C", "jnb     loc_DD80"], ["ucomiss~xmm1,<TAG>", "jnb~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 6, -1, 0.02938775510204082, ["jmp     short loc_DB5D"], ["jmp~FOO"]], [1, 0, 34, 0, 0, 6, 0, 0, 4, -1, 0.04081632653061225, ["movdqu  xmm0, xmmword ptr [rax]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 50, 0, 1, 12, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, entry", "push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_DDAD"], ["push~r14", "push~r13", "mov~r13,entry", "push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 5, -1, 0.21204081632653063, ["test    rbx, rbx", "jz      loc_DD28"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 34, 0, 0, 7, 0, 1, 7, -1, 0.0953061224489796, ["mov     rdx, [rax+8]", "mov     [r14+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax", "jmp     short loc_DBAE"], ["mov~rdx,[rax+0]", "mov~[r14+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 4, -1, 0.04081632653061225, ["mov     qword ptr [bucket], 0", "jmp     loc_DBAE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     ebx, ebx", "mov     rax, rbx", "pop     rbx", "pop     table", "pop     bucket", "pop     entry", "pop     r14", "retn"], ["xor~ebx,ebx", "mov~rax,rbx", "pop~rbx", "pop~table", "pop~bucket", "pop~entry", "pop~r14", "retn"]], [1, 0, 48, 2, 0, 6, 1, 1, 1, -1, 0.019591836734693877, ["shl     rax, 4", "add     rax, [table+0]", "mov     rbx, [rax]", "mov     r12, rax", "test    rbx, rbx", "jz      loc_DD28"], ["shl~rax,0", "add~rax,[table+0]", "mov~rbx,<TAG>", "mov~r12,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 39, 0, 0, 4, 1, 1, 7, -1, 0.0038775510204081634, ["mov     r14, [r14+8]", "mov     rax, [r14+8]", "test    rax, rax", "jz      loc_DD28"], ["mov~r14,[r14+0]", "mov~rax,[r14+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 39, 0, 1, 5, 1, 2, 6, -1, 0.009183673469387756, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_DB30"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.07142857142857142, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_DBC3"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.04183673469387755, ["subss   xmm1, cs:dword_1B36C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm1", "xor     rsi, rax", "jmp     loc_DCB6"], ["subss~xmm1,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm1", "xor~rsi,rax", "jmp~FOO"]], [2, 0, 31, 1, 0, 3, 0, 1, 6, -1, 0.21510204081632653, ["sub     qword ptr [table+20h], 1", "cmp     qword ptr [bucket], 0", "jz      short loc_DBD0"], ["sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 39, 0, 0, 3, 0, 1, 8, -1, 0.01469387755102041, ["mov     rbx, [rax]", "cmp     entry, rbx", "jz      short loc_DB5D"], ["mov~rbx,<TAG>", "cmp~entry,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 18, -1, 0.052653061224489796, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_DCE1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     table", "pop     r12", "pop     entry", "pop     r14", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~table", "pop~r12", "pop~entry", "pop~r14", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 19, -1, 0.0012244897959183673, ["mov     qword ptr [table+48h], 0", "jmp     loc_DBC3"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 18, 0, 0, 4, 0, 0, 15, -1, 0.07102040816326531, ["movss   xmm4, dword ptr [rdx+0Ch]", "ucomiss xmm4, cs:dword_1B35C", "pxor    xmm4, xmm4", "jbe     loc_DD04"], ["movss~xmm4,[word ptr [rdx+0]", "ucomiss~xmm4,<TAG>", "pxor~xmm4,xmm4", "jbe~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 16, -1, 0.05918367346938776, ["ucomiss xmm2, xmm4", "jb      loc_DD04"], ["ucomiss~xmm2,xmm4", "jb~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 7, -1, 0.013877551020408163, ["mov     rax, [r14+8]", "mov     rbx, [rax]"], ["mov~rax,[r14+0]", "mov~rbx,<TAG>"]], [1, 0, 30, 1, 0, 5, 1, 1, 7, -1, 0.21306122448979592, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_DD60"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 8, -1, 0.10489795918367348, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 28, 0, 0, 8, 2, 1, 8, -1, 0.10489795918367348, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_DBEE"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [6, 18, 34, 0, 51, 77, 1, 182, 0.06413, 7, 4], "succs": [[9], [0, 16], [20], [2, 4], [2, 45], [14], [5, 15], [20, 13], [20, 7], [33, 28], [9, 1], [11, 44], [11], [17, 20], [43, 23], [14], [24, 34], [18, 26], [21], [43], [19, 21], [26], [21], [3, 22], [27, 37], [38], [25, 39], [32], [31], [], [35, 29], [40, 34], [31], [31], [], [34, 10], [41, 34], [36, 47], [42, 43], [38], [48, 43], [32, 37], [44, 12], [], [43], [20, 46], [8, 20], [32], [49, 50], [6], [6]], "fname": "hash_delete", "n_num": 51}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 0, 3, 1, 15, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     rbx, table_size", "sub     rsp, 8", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "xor     edx, edx", "add     rsp, 8", "div     table_size", "pop     table_size", "pop     p", "mov     rax, rdx", "retn"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~rbx,table_size", "sub~rsp,0", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "xor~edx,edx", "add~rsp,0", "div~,table_size", "pop~table_size", "pop~p", "mov~rax,rdx", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_DE0C"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_DE10"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 14, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_DE3C"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_DE40"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 16, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "triple_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [pnew_fd], ebx", "add     rsp, 8", "mov     dirp, rbp", "pop     new_fd", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["mov~<TAG>,ebx", "add~rsp,0", "mov~dirp,rbp", "pop~new_fd", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, -1, 0.16666666666666666, ["mov     edi, eax; fd", "mov     ebx, eax", "call    _fdopendir", "test    rax, rax", "mov     rbp, rax", "jz      short loc_DED8"], ["mov~edi,eax", "mov~ebx,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 0, 1, 2, 13, 0, 2, 2, -1, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     pnew_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     rax, dirp", "mov     [r12], r13d", "add     rsp, 8", "pop     new_fd", "pop     dirp", "pop     r12", "pop     fdopendir_errno", "retn"], ["call~FOO", "mov~r13d,<TAG>", "mov~pnew_fd,rax", "mov~edi,ebx", "call~FOO", "mov~rax,dirp", "mov~<TAG>,r13d", "add~rsp,0", "pop~new_fd", "pop~dirp", "pop~r12", "pop~fdopendir_errno", "retn"]], [2, 0, 4, 1, 1, 11, 3, 2, 0, 1, 0.0, ["push    r13", "push    r12", "or      edx, 90900h; flags", "push    rbp", "push    rbx", "xor     eax, eax", "mov     r12, pnew_fd", "sub     rsp, 8", "call    openat_safer", "test    eax, eax", "js      short loc_DF00"], ["push~r13", "push~r12", "or~edx,0", "push~rbp", "push~rbx", "xor~eax,eax", "mov~r12,pnew_fd", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 8, 1, 0, 1, 0, 0.0, ["add     rsp, 8", "xor     ebp, ebp", "pop     rbx", "mov     new_fd, rbp", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["add~rsp,0", "xor~ebp,ebp", "pop~rbx", "mov~new_fd,rbp", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]]], "func_feature": [4, 5, 6, 0, 5, 4, 1, 46, 0.03333, 0, 4], "succs": [[], [0, 2], [], [1, 4], []], "fname": "opendirat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 4, 1, 0, 5, 0, 1, 0, 0, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_DF7D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_DF7D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_DF8D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_DF7D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 2, 0, 0, 9, 1, 1, 4, -1, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_DF7D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 5], [0, 4], [1, 3], [], [], [4, 6], [4, 7], [4]], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 5, 1, 1, 15, 2, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12d, ecx", "push    rbx", "mov     rbp, dst_name", "mov     edx, r8d; mode", "sub     rsp, 10h", "lea     rbx, [rsp+28h+ctx]", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "mov     dest_desc, rbx; ctx", "call    get_permissions", "test    eax, eax", "jnz     short loc_E018"], ["push~r12", "push~rbp", "mov~r12d,ecx", "push~rbx", "mov~rbp,dst_name", "mov~edx,r8d", "sub~rsp,0", "lea~rbx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~dest_desc,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     short loc_E01F"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.07500000000000001, ["mov     ebp, 0FFFFFFFEh", "jmp     short loc_DFFA"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 3, 0, 2, 7, 0, 2, 0, 2, 0.07500000000000001, ["mov     rsi, dst_name; name", "mov     rdi, rbx; ctx", "mov     edx, r12d; desc", "call    set_permissions", "mov     rdi, rbx; ctx", "mov     ebp, eax", "call    free_permission_context"], ["mov~rsi,dst_name", "mov~rdi,rbx", "mov~edx,r12d", "call~FOO", "mov~rdi,rbx", "mov~ebp,eax", "call~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     rbp", "pop     dest_desc", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~dest_desc", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 34, 0.075, 1, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "qcopy_acl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 2, 1, 2, 18, 2, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 18h", "lea     rbx, [rsp+28h+ctx]", "mov     [rsp+28h+ctx.mode], edx", "mov     edx, esi; desc", "mov     desc, name; name", "mov     name, rbx; ctx", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    set_permissions", "mov     rdi, rbx; ctx", "mov     ebp, eax", "call    free_permission_context", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_E07F"], ["push~rbp", "push~rbx", "sub~rsp,0", "lea~rbx,[rsp+0]", "mov~[rsp+0],edx", "mov~edx,esi", "mov~desc,name", "mov~name,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "mov~ebp,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 18h", "mov     eax, ebp", "pop     rbx", "pop     ret", "retn"], ["add~rsp,0", "mov~eax,ebp", "pop~rbx", "pop~ret", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 24, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "qset_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_E0B0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_E0B0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_1B3BC", "lea     rdx, unk_1B3C0", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_E120"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_E0B0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_1B3CB", "lea     rdx, asc_1B3CD; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_E0B0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_E0D0"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_1B3C4", "lea     rdx, unk_1B3C8", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[9, 6], [0, 9], [9, 14], [9, 2], [], [9, 4], [9, 10], [8, 15], [9, 3], [], [9, 11], [9, 12], [9, 13], [16, 9], [9, 5], [9, 1], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 244, 0, 0, 6, 2, 1, 0, 0, 0.07246543778801844, ["test    r15, r15", "mov     rbp, argsize_0", "mov     argsize_0, r8", "setz    al", "and     al, [rsp+0F8h+var_88]", "jnz     loc_F4FC"], ["test~r15,r15", "mov~rbp,argsize_0", "mov~argsize_0,r8", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 5, -1, 0.6331925243215566, ["test    bpl, bpl", "jz      loc_EDF0"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.05403225806451613, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_F246"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 1, 1, 12, 1, 2, 12, -1, 0.07457757296466974, ["mov     rax, [rsp+0F8h+arg]", "lea     r15, [i+m]", "mov     rdx, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, [rsp+0F8h+ps]; ps", "mov     rdi, [rsp+0F8h+pwc]; pwc", "lea     r13, [rax+r15]", "sub     rdx, r15; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      short loc_F040"], ["mov~rax,[rsp+0]", "lea~r15,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r15", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 12, -1, 0.06488628605564088, ["mov     eax, r11d", "mov     rdx, r15", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_ED14"], ["mov~eax,r11d", "mov~rdx,r15", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.06694359105649433, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_F120"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 12, -1, 0.0030081925243215565, ["movzx   r10d, [rsp+0F8h+var_E2]", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~r10d,[rsp+0]", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.004444551117938212, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_F120"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.04883512544802868, ["cmp     r13, r15", "jbe     short loc_E896"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 16, -1, 0.049859190988223244, ["mov     edx, r11d", "xor     edx, 1", "and     dl, [rsp+0F8h+var_E1]", "jz      short loc_E88C"], ["mov~edx,r11d", "xor~edx,0", "and~dl,[rsp+0]", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, edx"], ["add~r15,0", "mov~r11d,edx"]], [0, 0, 244, 0, 0, 14, 0, 0, 15, -1, 0.02197900665642601, ["mov     r14, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, r15", "mov     rsi, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "mov     r9, [rsp+0F8h+var_60]", "cmp     rcx, r14", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "jnb     short loc_F237"], ["mov~r14,[rsp+0]", "mov~rcx,r15", "mov~rsi,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rcx,r14", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.04779825908858167, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_F1C3"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 15, -1, 0.006477214541730671, ["jmp     loc_E81A"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.0670762928827445, ["cmp     m, 1", "ja      loc_E82C"], ["cmp~m,0", "ja~FOO"]], [0, 0, 278, 1, 0, 5, 0, 1, 1, 2, 0.003558627752176139, ["lea     rcx, off_1B420", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [3, 0, 280, 1, 1, 29, 2, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0C8h", "mov     rax, [rsp+0F8h+quote_these_too]", "mov     [rsp+0F8h+arg], arg_0", "mov     [rsp+0F8h+quoting_style], r8d", "mov     [rsp+0F8h+flags], r9d", "mov     [rsp+0F8h+var_D8], rax", "mov     rax, [rsp+0F8h+left_quote]", "mov     [rsp+0F8h+quote_string_0], rax", "mov     rax, [rsp+0F8h+right_quote]", "mov     [rsp+0F8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0F8h+var_98], rax", "ja      loc_F540; jumptable 000000000000E211 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [1, 1, 244, 0, 1, 15, 2, 1, 10, -1, 0.09486687147977471, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     byte ptr [rsp+0F8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   bpl", "setz    al", "and     al, [rsp+0F8h+backslash_escapes]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,<STR>", "setnz~bpl", "setz~al", "and~al,[rsp+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.17191500256016384, ["cmp     [rsp+0F8h+var_98], 1; jumptable 000000000000E42E default case", "jnz     loc_EF28"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 7, -1, 0.0630184331797235, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "movzx   edx, [rsp+0F8h+var_E1]", "xor     eax, 1", "and     dl, al", "jz      loc_F434"], ["movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "xor~eax,0", "and~dl,al", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.44391363713944415, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_E7C8; jumptable 000000000000E42E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 7, -1, 0.4379228537293058, ["xor     r10d, r10d", "jmp     loc_E410"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 9, -1, 0.0, ["cmp     [rsp+0F8h+var_E1], 0", "mov     eax, 4", "cmovz   eax, [rsp+0F8h+quoting_style]", "mov     [rsp+0F8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.016163167776071, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      short loc_E61D"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 1, 0, 4, 2, 1, 20, -1, 0.012314388120839733, ["add     r15, 2", "xor     r10d, r10d", "xor     r11d, r11d", "jmp     short loc_E8DE"], ["add~r15,0", "xor~r10d,r10d", "xor~r11d,r11d", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.012570404505888377, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_E941"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.10432667690732207, ["test    al, al", "jz      loc_E442"], ["test~al,al", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 16, -1, 0.006899641577060932, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_E442"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.02322068612391193, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_ED51"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 244, 1, 0, 6, 0, 0, 16, -1, 0.016001024065540194, ["mov     rax, [rsp+0F8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0F8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_F2C0"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 8, -1, 0.043561187916026624, ["cmp     [rsp+0F8h+encountered_single_quote], 0", "jz      loc_F436"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 18, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_F234"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 244, 1, 0, 4, 0, 1, 17, -1, 0.006438812083973375, ["add     m, 1", "lea     rdx, [i+m]", "cmp     r14, rdx", "ja      short loc_F220"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r14,rdx", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 12, -1, 0.08591909882232462, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.027208141321044547, ["cmp     [rsp+0F8h+all_c_and_shell_quote_compat], 0", "jnz     loc_F4B6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 250, 0, 0, 8, 3, 1, 2, -1, 8.960573476702509e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 4", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_EB26"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.018906810035842294, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_E876"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.019162826420890938, ["cmp     r13, r15", "jbe     short loc_E867"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.2749684246458439, ["lea     rcx, off_1B44C", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.003123399897593446, ["lea     rax, unk_1B3CB", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_E328"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, -1, 0.00012800819252432156, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 5", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_F3DB"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0007978110599078342, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 6, 0, 0, 7, 0, 1, 20, -1, 0.0005376344086021505, ["movzx   eax, [rsp+0F8h+var_88]", "mov     bytes, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     printable, [rsp+0F8h+pending_shell_escape_end]", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r13,[rsp+0]", "mov~printable,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 14, -1, 0.005692097627581499, ["mov     c_and_shell_quote_compat_0, argsize_0", "mov     argsize_0, r8", "jmp     force_outer_quoting_style"], ["mov~c_and_shell_quote_compat_0,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.004069700460829493, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+backslash_escapes], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.006067588325652842, ["mov     [rsp+0F8h+var_E1], al", "mov     [rsp+0F8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],al", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 6, 0, 0, 12, -1, 0.0018657194060419868, ["movzx   eax, [rsp+0F8h+var_88]", "mov     rbp, argsize_0", "mov     [rsp+0F8h+quoting_style], 2", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "nop     word ptr [rax+rax+00000000h]"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~[rsp+0],0", "mov~argsize_0,r8", "mov~[rsp+0],al", "nop~[ord ptr [rax+0]"]], [1, 0, 247, 0, 0, 1, 0, 0, 3, -1, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 244, 1, 0, 5, 0, 1, 17, -1, 0.013031233998975935, ["mov     rcx, [rsp+0F8h+arg]", "lea     bytes, [rcx+r15+1]", "add     rcx, bytes", "lea     r8, [rcx+r15]", "jmp     short loc_F0C5"], ["mov~rcx,[rsp+0]", "lea~bytes,[rcx+0]", "add~rcx,bytes", "lea~r8,<TAG>", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.016129032258064516, ["cmp     bytes, 1", "jz      loc_F019"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.006169994879672299, ["mov     rdi, m"], ["mov~rdi,m"]], [1, 0, 256, 0, 0, 2, 0, 1, 2, -1, 0.00030721966205837174, ["cmp     [rsp+0F8h+quoting_style], 0Ah; jumptable 000000000000E211 cases 8-10", "jz      short loc_EA8F"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 0, 10, -1, 0.00020737327188940095, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 000000000000EC7E cases 37,43-58,65-90,93,95,97-122", "xor     r10d, r10d", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~ebp,[rsp+0]", "xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.10265307646356044, ["lea     rcx, off_1B648", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 246, 0, 0, 2, 1, 1, 4, -1, 0.0064516129032258064, ["test    buffersize_0, buffersize_0", "jnz     loc_F52A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [1, 0, 247, 0, 0, 2, 0, 1, 3, 0, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 0", "jmp     loc_E23A"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 1, 2, 10, 2, 3, 16, -1, 0.017895545314900153, ["mov     edi, [rsp+0F8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0F8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_EFCF"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 244, 1, 0, 3, 0, 1, 19, -1, 0.008986175115207374, ["add     rax, 1", "cmp     r8, rax", "jz      loc_F019"], ["add~rax,0", "cmp~r8,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 15, -1, 0.022452636968766, ["cmp     [rsp+0F8h+var_88], 0", "jnz     short loc_F098"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 1, 0, 6, 1, 1, 13, -1, 0.14626216077828982, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0F8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0F8h+arg]", "jmp     loc_E8F0"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.02879800307219662, ["xor     eax, eax; jumptable 000000000000E42E cases 37,43-58,65-90,93,95,97-122"], ["xor~eax,eax"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.014460445468509948, ["cmp     [rsp+0F8h+var_88], 0", "jz      loc_E440; jumptable 000000000000E42E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 16, -1, 0.021210957501280082, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp", "jmp     loc_F083"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 17, -1, 0.003059395801331285, ["jmp     short loc_F237"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 6, 2, 1, 10, -1, 0.02375832053251408, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0F8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_F4F2"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 1, 12, -1, 0.012224782386072709, ["add     i, 1", "jmp     loc_E338"], ["add~i,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 4, 2, 1, 11, -1, 0.01624530636627411, ["mov     edx, [rsp+0F8h+var_84]", "xor     eax, eax", "test    edx, edx", "jnz     loc_F17E"], ["mov~edx,[rsp+0]", "xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.15902927120669055, ["cmp     [rsp+0F8h+var_87], 0", "jnz     loc_E756"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 2, 1, 11, -1, 0.02067332309267793, ["xor     ebp, ebp", "xor     eax, eax", "jmp     loc_E442"], ["xor~ebp,ebp", "xor~eax,eax", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.020451442225635774, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_E442"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 11, -1, 0.005721966205837174, ["mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_E442"], ["mov~[rsp+0],bpl", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 5, 1, 1, 19, -1, 0.012314388120839733, ["mov     eax, ebp", "lea     r15, [rdx+3]", "xor     ebp, ebp", "mov     ebx, 30h ; '0'", "jmp     loc_E442"], ["mov~eax,ebp", "lea~r15,[rdx+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 1, 0, 5, 2, 1, 22, -1, 0.027355350742447517, ["add     r15, 4", "xor     ebp, ebp", "xor     eax, eax", "mov     r12, i", "jmp     loc_E442"], ["add~r15,0", "xor~ebp,ebp", "xor~eax,eax", "mov~r12,i", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 15, -1, 0.054070660522273425, ["test    r9b, r9b", "jnz     loc_F120"], ["test~r9b,r9b", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 14, -1, 0.18753200204813109, ["test    al, al", "jnz     loc_E848"], ["test~al,al", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 11, -1, 0.020084485407066054, ["mov     rdx, [rsp+0F8h+orig_buffersize]", "mov     buffersize_0, rdx"], ["mov~rdx,[rsp+0]", "mov~buffersize_0,rdx"]], [0, 0, 10, 1, 0, 5, 1, 1, 11, -1, 0.01651305683563748, ["movzx   ecx, byte ptr [rax]", "sub     rax, r15", "mov     rdx, r15", "test    cl, cl", "jz      short loc_F469"], ["movzx~ecx,<TAG>", "sub~rax,r15", "mov~rdx,r15", "test~cl,cl", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, -1, 0.019738863287250386, ["test    dl, dl", "jz      short loc_F469"], ["test~dl,dl", "jz~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.009946236559139785, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+118h+flags]", "mov     r8d, [rsp+118h+quoting_style]; quoting_style", "mov     rdx, [rsp+118h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0003242874210616146, ["mov     rbp, argsize_0", "mov     argsize_0, r8", "jmp     loc_E61D"], ["mov~rbp,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 6, -1, 0.5573604710701485, ["cmp     [rsp+0F8h+var_E2], 0", "mov     rdi, [rsp+0F8h+arg]; s", "lea     r9, [rdi+i]", "jz      loc_EC50"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.02007435142515789, ["cmp     rbx, argsize_0", "ja      loc_EC50"], ["cmp~rbx,argsize_0", "ja~FOO"]], [0, 0, 244, 0, 1, 12, 1, 2, 10, -1, 0.007567951015531651, ["mov     rdx, [rsp+0F8h+quote_string_len]; n", "mov     rsi, [rsp+0F8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "jnz     loc_EC50"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 12, -1, 0.01330005120327701, ["cmp     buffersize_0, len", "jbe     short loc_F47C"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 10, 1, 0, 5, 1, 1, 13, -1, 0.0033922171018945214, ["mov     [r14+len], cl", "add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_F451"], ["mov~<TAG>,cl", "add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 1, 1, 13, -1, 0.0033410138248847927, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_F451"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.15974782386072706, ["mov     rsi, [rsp+0F8h+var_D8]", "test    rsi, rsi", "jz      short loc_E46B"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0123410564942823, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_E44D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+rdx+2], 30h ; '0'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.012570404505888377, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len", "jbe     short loc_F2D9"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 249, 1, 0, 5, 1, 1, 7, -1, 0.009575012800819252, ["mov     rax, [rsp+0F8h+quote_string_0]", "add     r15, 1", "movzx   eax, byte ptr [rax+len]", "test    al, al", "jnz     short loc_F2A0"], ["mov~rax,[rsp+0]", "add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 249, 0, 0, 2, 0, 0, 6, -1, 0.003533026113671275, ["cmp     buffersize_0, r15", "jbe     short loc_F2A9"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.01282642089093702, ["cmp     r13, r15", "jbe     short loc_E932"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 17, -1, 0.02951868919610855, ["test    dl, dl", "jz      loc_F187"], ["test~dl,dl", "jz~FOO"]], [1, 0, 255, 0, 1, 9, 1, 2, 3, -1, 0.0001152073732718894, ["lea     rsi, asc_1B3CF; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0F8h+quote_string_0], rax", "lea     rax, asc_1B3CF; \"`\"", "cmp     rcx, rax", "jz      loc_F4A0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 6, 0, 0, 13, -1, 0.007692225635774022, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.0002560163850486431, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 6, 0, 0, 1, 0, 1, 14, -1, 7.680491551459293e-05, ["jmp     short loc_F466"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.0070916538658474144, ["mov     rsi, [rsp+0F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_F518"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, -1, 0.0038466461853558626, ["cmp     buffersize_0, r15", "jbe     loc_E653"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_E653"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.040450588837686e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, argsize_0; argsize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+110h+var_D8]; quote_these_too", "mov     r9d, [rsp+118h+flags]; flags", "mov     rdx, [rsp+118h+arg]; arg", "mov     rsi, [rsp+118h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_E653"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,argsize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.10761979433350413, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_E7C0; jumptable 000000000000EC7E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 7, -1, 0.13144478579962485, ["mov     rax, [rsp+0F8h+quote_string_len]", "test    rax, rax", "jz      loc_EC60"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, -1, 0.029653097798259087, ["mov     rax, [rsp+0F8h+s2]", "test    rax, rax", "jz      short loc_F469"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.24687339989759344, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 13, -1, 0.0056035586277521756, ["jmp     loc_E46B"], ["jmp~FOO"]], [2, 0, 244, 1, 0, 8, 2, 1, 14, -1, 0.030325140809011778, ["mov     [rsp+0F8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     r11d, r11d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_E46B"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],bpl", "xor~r11d,r11d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.009927035330261137, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_E46B"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 15, -1, 0.03701890254309609, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_E46B"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.012852022529441884, ["cmp     byte ptr [rsi], 0", "jnz     short loc_F227"], ["cmp~<TAG>,0", "jnz~FOO"]], [8, 0, 245, 0, 0, 10, 1, 1, 4, -1, 0.0015873015873015873, ["mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "jmp     loc_E2FB"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 247, 0, 0, 2, 1, 1, 3, -1, 0.0001152073732718894, ["test    buffersize_0, buffersize_0", "jz      loc_F18F"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 7", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_E328"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 18, -1, 0.013031233998975935, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_F0B8"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 19, -1, 0.003699436763952893, ["mov     edx, 1", "shl     rdx, cl", "mov     rcx, 20000002Bh", "test    rdx, rcx", "jz      short loc_F0B8"], ["mov~edx,0", "shl~rdx,cl", "mov~rcx,0", "test~rdx,rcx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_E885"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     argsize_0", "pop     i", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~i", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.3581669226830517, ["test    dl, dl", "jz      short loc_E4A4"], ["test~dl,dl", "jz~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 12, -1, 0.023655913978494623, ["add     i, 1", "mov     edx, r11d", "xor     ebp, ebp", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~edx,r11d", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 1, 0, 3, 0, 0, 16, -1, 0.1295826932923707, ["add     i, 1", "cmp     r12, ilim", "jnb     store_c"], ["add~i,0", "cmp~r12,ilim", "jnb~FOO"]], [2, 0, 244, 1, 0, 4, 2, 0, 14, -1, 0.23159242191500257, ["xor     eax, 1", "add     i, 1", "and     eax, r11d", "mov     edx, eax"], ["xor~eax,0", "add~i,0", "and~eax,r11d", "mov~edx,eax"]], [2, 0, 244, 0, 0, 2, 0, 0, 10, -1, 0.0008829365079365059, ["mov     eax, 9; jumptable 000000000000E42E case 9", "mov     ebx, 74h ; 't'"], ["mov~eax,0", "mov~ebx,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.01282642089093702, ["cmp     buffersize_0, r15", "jbe     short loc_E48E"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [10, 0, 244, 0, 1, 25, 4, 2, 4, -1, 0.03748079877112135, ["mov     r12, [rsp+0F8h+quote_string]", "test    ebx, ebx", "setnz   [rsp+0F8h+var_85]", "movzx   ebx, [rsp+0F8h+var_85]", "mov     rdi, r12; s", "call    _strlen", "mov     [rsp+0F8h+quote_string_len], rax", "mov     eax, [rsp+0F8h+flags]", "xor     r11d, r11d", "mov     [rsp+0F8h+c_and_shell_quote_compat], bl", "mov     [rsp+0F8h+s2], r12", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+var_E1], 0", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_E328"], ["mov~r12,[rsp+0]", "test~ebx,ebx", "setnz~[rsp+0]", "movzx~ebx,[rsp+0]", "mov~rdi,r12", "call~FOO", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "xor~r11d,r11d", "mov~[rsp+0],bl", "mov~[rsp+0],r12", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 4, -1, 0.0005120327700972862, ["mov     rax, [rsp+0F8h+quote_string_0]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_EA9A"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 245, 0, 0, 1, 0, 1, 8, -1, 0.012544802867383513, ["jmp     loc_EA9A"], ["jmp~FOO"]], [0, 0, 251, 0, 0, 3, 2, 1, 3, -1, 0.016244239631336404, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_F28C"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     byte ptr [r8+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_EEEE"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r8+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_EEEE"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 1, 1, 13, -1, 0.00902457757296467, ["xor     edx, edx", "cmp     [rsp+0F8h+orig_buffersize], 0", "jnz     loc_F137"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 1, 244, 0, 0, 4, 1, 1, 10, -1, 0.001113351254480284, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 000000000000EC7E case 32", "mov     ebx, 20h ; ' '", "xor     r10d, r10d", "jmp     loc_E5D5"], ["movzx~ebp,[rsp+0]", "mov~ebx,<STR>", "xor~r10d,r10d", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.02063620071684574, ["cmp     [rsp+0F8h+var_88], 0", "jnz     loc_E5E0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365059, ["mov     eax, 0Ah; jumptable 000000000000E42E case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365059, ["mov     eax, 0Dh; jumptable 000000000000E42E case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 0Ah; jumptable 000000000000EC7E case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 0Dh; jumptable 000000000000EC7E case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 9; jumptable 000000000000EC7E case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 1, 0, 9, -1, 0.0024193548387096775, ["xor     r10d, r10d; jumptable 000000000000EC7E default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 252, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rdi, rsi; msgid", "mov     esi, [rsp+0F8h+quoting_style]; s", "call    gettext_quote", "mov     [rsp+0F8h+quote_string], rax", "jmp     loc_EA8F"], ["mov~rdi,rsi", "mov~esi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 253, 0, 1, 9, 1, 2, 4, -1, 0.006515616999487967, ["lea     rsi, asc_1B3CD; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0F8h+quote_string], rax", "lea     rax, asc_1B3CD; \"'\"", "cmp     rsi, rax", "jz      loc_F48A"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.012570404505888377, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_E49D"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 6, 3, 1, 5, -1, 8.960573476702509e-05, ["mov     [rsp+0F8h+orig_buffersize], buffersize_0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r11d, r11d", "xor     edx, edx", "jmp     loc_EE50"], ["mov~[rsp+0],buffersize_0", "mov~[rsp+0],0", "xor~eax,eax", "xor~r11d,r11d", "xor~edx,edx", "jmp~FOO"]], [12, 0, 244, 0, 0, 16, 1, 1, 5, -1, 0.009331797235023042, ["lea     rax, asc_1B3CD; \"'\"", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     r15d, 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 2", "jmp     loc_E328"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.07517665130568357, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      loc_E750"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 8; jumptable 000000000000E42E case 8", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 7; jumptable 000000000000E42E case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Ch; jumptable 000000000000E42E case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Bh; jumptable 000000000000E42E case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Bh; jumptable 000000000000EC7E case 11", "xor     r10d, r10d", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Ch; jumptable 000000000000EC7E case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 8; jumptable 000000000000EC7E case 8", "xor     r10d, r10d", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 7; jumptable 000000000000EC7E case 7", "xor     r10d, r10d", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 12, -1, 0.0012800819252432156, ["mov     eax, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [10, 0, 244, 0, 0, 15, 0, 1, 6, -1, 0.023169482846902203, ["lea     rsi, asc_1B3CD; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0F8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+s2], rsi", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+encountered_single_quote], al", "mov     [rsp+0F8h+orig_buffersize], rdx", "jmp     loc_E328"], ["lea~rsi,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rsi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],al", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 244, 1, 0, 2, 1, 0, 16, -1, 0.012314388120839733, ["add     r15, 2", "xor     r11d, r11d"], ["add~r15,0", "xor~r11d,r11d"]], [0, 0, 244, 0, 0, 1, 1, 0, 12, -1, 0.068868407578085, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.032954962450930214, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_EEB3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.011404783239460675, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_EEB3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.019667712066905558, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jz      loc_E5B5"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.483115719406042, ["cmp     r15, r13", "jnb     short loc_E4AD"], ["cmp~r15,r13", "jnb~FOO"]], [2, 0, 244, 2, 0, 3, 0, 1, 16, -1, 0.08147721454173067, ["add     r15, 1", "add     i, 1", "jmp     loc_E4A4"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [4, 0, 244, 3, 0, 6, 1, 0, 20, -1, 0.048067076292882746, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     ilim, r12", "jbe     loc_E4A4"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~ilim,r12", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.09182881037719748, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_F110"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.04857910906298003, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_E8AC"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.030036375661375583, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 000000000000E42E case 92", "jz      loc_EEA8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 254, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0F8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0F8h+quote_string_0], rax", "jmp     loc_EA64"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.04832309267793139, ["lea     rdx, [r15+2]", "cmp     r13, len", "jbe     short loc_E8C5"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 0, 0, 19, -1, 0.0, ["mov     edx, ebx", "shr     dl, 6", "add     edx, 30h ; '0'", "mov     [r8+r15+1], dl"], ["mov~edx,ebx", "shr~dl,0", "add~edx,0", "mov~[r8+0],dl"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 5, -1, 0.0004608294930875576, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 4, 2, 1, 14, -1, 0.08275729646697388, ["mov     eax, r11d", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_E6EB"], ["mov~eax,r11d", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_E6C6"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [3, 0, 244, 1, 0, 5, 1, 0, 20, -1, 0.0, ["mov     edx, ebx", "shr     dl, 3", "and     edx, 7", "add     edx, 30h ; '0'", "mov     [r8+r15+2], dl"], ["mov~edx,ebx", "shr~dl,0", "and~edx,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.01282642089093702, ["cmp     buffersize_0, len", "jbe     short loc_F2CA"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+len], 30h ; '0'"], ["mov~<TAG>,0"]], [2, 0, 244, 1, 0, 7, 1, 1, 15, -1, 0.48285970302099335, ["movzx   edi, [rsp+0F8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    bpl, bpl", "cmovz   edi, eax", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], dil", "jmp     loc_E338"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~bpl,bpl", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.032361857825567504, ["xor     r10d, r10d; jumptable 000000000000EC7E case 0"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_E6D5"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.0510830559822497, ["cmp     [rsp+0F8h+backslash_escapes], 0; jumptable 000000000000E42E case 0", "jnz     loc_ECCB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 10, -1, 7.680491551459293e-05, ["xor     r10d, r10d; jumptable 000000000000EC7E cases 35,126", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.042043544120157116, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 000000000000E42E case 39", "jz      loc_EED0"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 12, -1, 0.03147721454173067, ["test    buffersize_0, buffersize_0", "jz      loc_F137"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 10, -1, 0.010921979006656441, ["test    i, i; jumptable 000000000000E42E cases 35,126", "jz      loc_E5D5"], ["test~i,i", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 12, -1, 0.0005120327700972862, ["jmp     short loc_E4D8; jumptable 000000000000E42E cases 35,126"], ["jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 17, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_E6E4"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 19, -1, 0.03854326676907322, ["cmp     r13, r15", "jbe     short loc_E8E7"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 18, -1, 0.013325652841781874, ["xor     r10d, r10d", "jmp     loc_E8DE"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.006810035842293907, ["mov     esi, eax"], ["mov~esi,eax"]], [0, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.012442396313364055, ["test    al, al", "jnz     short loc_E4E1"], ["test~al,al", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 18, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, eax"], ["add~r15,0", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_ECEF"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.03828725038402458, ["movzx   ebx, byte ptr [rdi+r12]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.08173323092677931, ["cmp     buffersize_0, r15", "jbe     short loc_E6F5"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.00015360983102918587, ["xor     r10d, r10d; jumptable 000000000000EC7E cases 123,125"], ["xor~r10d,r10d"]], [9, 0, 245, 0, 0, 10, 1, 0, 4, -1, 0.0015873015873015873, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_ECFE"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002944188428059396, ["movzx   edx, [rsp+0F8h+encountered_single_quote]", "jmp     loc_F436"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [2, 0, 244, 0, 0, 4, 0, 1, 10, -1, 0.012698412698412698, ["cmp     argsize_0, 1; jumptable 000000000000E42E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E50C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 246, 0, 0, 6, 2, 0, 2, -1, 1.2800819252432156e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 1", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],esi"]], [1, 0, 244, 0, 0, 5, 3, 1, 15, -1, 0.130094726062468, ["mov     edx, esi", "xor     edx, 1", "and     edx, r11d", "test    r10b, r10b", "jz      short loc_E913"], ["mov~edx,esi", "xor~edx,0", "and~edx,r11d", "test~r10b,r10b", "jz~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, 1, 0.00010240655401945725, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 2", "mov     ecx, eax", "and     eax, 4", "and     ecx, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], ecx", "jz      loc_F545"], ["mov~eax,[rsp+0]", "mov~ecx,eax", "and~eax,0", "and~ecx,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],ecx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_ED0D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.006438812083973375, ["cmp     r13, r15", "jbe     short loc_E90F"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 11, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 1, 244, 0, 0, 2, 0, 1, 10, -1, 0.0011165514592933923, ["mov     ebx, 20h ; ' '; jumptable 000000000000E42E case 32", "jmp     loc_E5D5"], ["mov~ebx,<STR>", "jmp~FOO"]], [1, 0, 244, 1, 0, 1, 0, 0, 17, -1, 0.006182795698924731, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.018394777265745007, ["lea     len, [r15+3]", "mov     r11d, eax"], ["lea~len,[r15+0]", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 2, 0, 1, 17, -1, 0.0320831199863458, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_F50D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.07144062553336736, ["mov     eax, [rsp+0F8h+quoting_style]; jumptable 000000000000E42E case 63", "cmp     eax, 2", "jz      loc_EF10"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.06386222051544631, ["cmp     buffersize_0, len", "jbe     short loc_ED1E"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0008960573476702509, ["xor     r10d, r10d; jumptable 000000000000EC7E case 63"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [4, 0, 244, 0, 0, 7, 0, 0, 5, -1, 0.009370199692780337, ["lea     rax, unk_1B3CB", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0F8h+s2], rax", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.018663594470046084, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_F51D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.06360620413039766, ["cmp     [rsp+0F8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_F170"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.05666922683051715, ["cmp     eax, 5", "jnz     short loc_E558"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 000000000000E211 default case"], ["call~FOO"]], [0, 0, 244, 0, 0, 4, 1, 0, 3, -1, 0.13227086533538146, ["mov     r8, r14", "xor     r12d, r12d", "mov     r14, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r8,r14", "xor~r12d,r12d", "mov~r14,argsize_0", "nop~[word ptr [rax+0]"]], [14, 0, 244, 0, 0, 23, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 6", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+var_70], eax", "lea     rax, unk_1B3CB", "and     ecx, 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 5", "jmp     loc_E328"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "mov~[rsp+0],eax", "lea~rax,<TAG>", "and~ecx,0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 6, 1, 1, 3, -1, 0.012480798771121352, ["lea     rax, asc_1B3CD; \"'\"", "mov     [rsp+0F8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+s2], rax", "jmp     loc_E328"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 0", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_E328"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031105990783410137, ["lea     rax, asc_1B3CD; \"'\"", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_E328"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.050388291517323776, ["mov     eax, [rsp+0F8h+var_70]", "test    eax, eax", "jz      short loc_E558"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019175627240143368, ["cmp     buffersize_0, r15", "jbe     short loc_F141"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 13, -1, 0.047405700631507085, ["lea     rdx, [i+2]", "cmp     rdx, argsize_0", "jnb     short loc_E558"], ["lea~rdx,[i+0]", "cmp~rdx,argsize_0", "jnb~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 4, -1, 0.6334485407066052, ["cmp     argsize_0, i", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E353"], ["cmp~argsize_0,i", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 244, 0, 0, 5, 0, 1, 10, -1, 0.07368151561699948, ["lea     rax, [rsp+0F8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0F8h+mbstate.__count], 0", "mov     [rsp+0F8h+ps], rax", "jnz     short loc_EF84"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018919610855094728, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_F150"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 12, -1, 0.0006539085168117425, ["nop     dword ptr [c_0+00h]"], ["nop~[word ptr [c_0+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.044410308926437964, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_F368"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0014400921658986176, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 2, 0, 12, -1, 0.006706135859361665, ["mov     ebx, eax", "xor     ebp, ebp", "xor     eax, eax"], ["mov~ebx,eax", "xor~ebp,ebp", "xor~eax,eax"]], [10, 0, 245, 0, 0, 11, 1, 0, 3, -1, 0.006259600614439324, ["mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 11, 1, 1, 14, -1, 0.002867383512544803, ["mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "xor     ebp, ebp", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     r14, [rsp+0F8h+pending_shell_escape_end]", "movzx   eax, [rsp+0F8h+backslash_escapes]", "jmp     loc_F083"], ["mov~rdi,m", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~ebp,ebp", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r14,[rsp+0]", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 11, 2, 0, 13, -1, 0.036904761904761905, ["mov     eax, ebp", "mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "xor     eax, 1", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "and     al, [rsp+0F8h+backslash_escapes]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     bytes, [rsp+0F8h+pending_shell_escape_end]"], ["mov~eax,ebp", "mov~rdi,m", "movzx~r11d,[rsp+0]", "xor~eax,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~al,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~bytes,[rsp+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 15, -1, 0.03960360129714969, ["movzx   ebx, byte ptr [rax+rdx]", "cmp     bl, 3Eh ; '>'", "ja      loc_E558"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.035129714968424645, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_E558"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0005120327700972862, ["xor     r10d, r10d; jumptable 000000000000EC7E case 39"], ["xor~r10d,r10d"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, -1, 0.01607782898105479, ["mov     edx, eax"], ["mov~edx,eax"]], [0, 0, 244, 0, 1, 11, 0, 1, 11, -1, 0.0, ["mov     rdi, [rsp+0F8h+arg]; s", "mov     [rsp+0F8h+buffersize], r8", "mov     byte ptr [rsp+0F8h+var_80], r11b", "mov     byte ptr [rsp+0F8h+pwc], r10b", "mov     [rsp+0F8h+pending_shell_escape_end], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+var_80]", "movzx   r10d, byte ptr [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r8, [rsp+0F8h+buffersize]", "mov     r9, [rsp+0F8h+pending_shell_escape_end]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 244, 0, 0, 3, 0, 0, 21, -1, 0.02761136712749616, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_F3CB"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 20, -1, 0.027867383512544804, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_F3BC"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r8+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [12, 0, 245, 0, 0, 18, 3, 1, 2, -1, 2.560163850486431e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 000000000000E211 case 3", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_EB62"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.020458376002730795, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax]", "jnz     short loc_E3B5"], ["cmp~argsize_0,0", "lea~rbx,<TAG>", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 0, 9, -1, 0.0032258064516129032, ["cmp     rax, 1", "jbe     short loc_E3B5"], ["cmp~rax,0", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.001856118791602663, ["xor     r10d, r10d; jumptable 000000000000EC7E case 92"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.028379416282642088, ["cmp     buffersize_0, r15", "jbe     short loc_F39E"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.007002048131080389, ["cmp     [rsp+0F8h+var_85], 0", "jz      loc_EDD8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.028123399897593444, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_F3AD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0027265745007680493, ["cmp     [rsp+0F8h+quote_string_len], 0", "jz      loc_EDD8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r9, [rsp+0F8h+ps]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r9,[rsp+0]"]], [1, 0, 244, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     byte ptr [r8+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 12, 1, 0, 11, -1, 0.07342549923195084, ["lea     rax, [rsp+0F8h+w]", "xor     esi, esi", "mov     [rsp+0F8h+c], bl", "mov     [rsp+0F8h+var_6B], r11b", "mov     c_0, rsi", "mov     [rsp+0F8h+var_60], r9", "mov     [rsp+0F8h+pwc], rax", "mov     [rsp+0F8h+var_69], r10b", "mov     [rsp+0F8h+var_68], r15", "mov     [rsp+0F8h+var_80], r8", "mov     [rsp+0F8h+buffersize], buffersize_0", "mov     [rsp+0F8h+pending_shell_escape_end], r14"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r11b", "mov~c_0,rsi", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r8", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r14"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 3.840245775729647e-05, ["xor     r10d, r10d; jumptable 000000000000EC7E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.004214349718381974, ["xor     ebp, ebp; jumptable 000000000000E42E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~ebp,ebp"]]], "func_feature": [17, 152, 176, 15, 281, 448, 49, 1104, 0.03791, 7, 41], "succs": [[19, 47], [0, 82], [256, 12], [257, 2], [228, 205], [4, 46], [20], [46, 6], [144, 173], [8, 38], [8], [64, 114], [11, 60], [27], [13, 61], [36, 42, 238, 240, 53, 215, 217, 266, 117], [236, 15], [27], [17, 247], [261, 31], [40, 18], [20], [80], [80, 22], [198], [24, 26], [24], [34, 69], [69], [28, 30], [184, 28], [107, 35], [33, 52], [32, 52], [61], [104, 66], [49, 255], [120, 113], [37, 39], [37], [192, 194, 227, 139, 140, 174, 18, 190, 214, 127, 280, 153, 154, 155, 156, 62, 223], [237], [41, 116], [23], [23], [23], [23], [23], [23], [56], [118], [50, 58], [64], [97, 133], [62], [160, 260, 229, 137, 159, 141, 142, 143, 208, 145, 269, 54, 279, 187, 157, 158, 191], [150, 151], [56], [257, 3], [58, 118], [58, 51], [76], [69], [48, 62], [14], [64], [211, 77], [246], [250, 67], [88, 89], [69], [69], [69], [69], [69], [9, 46], [216, 75], [162], [85, 102], [102, 78], [101], [80], [106, 21], [84, 21], [21, 7], [86, 87], [99, 85], [100, 85], [98, 108], [88, 109], [73], [73, 90], [132, 93], [92, 94], [92], [25, 235], [199, 95], [147, 175], [172, 108], [102], [99], [121, 178], [101, 103], [101], [101], [145, 55], [105, 267], [102, 79], [172, 126], [108], [108], [108], [108], [120], [65, 33], [231], [209, 115], [237], [59, 119], [59, 44], [122, 10], [], [10], [128, 168], [123], [96, 123], [123], [138], [129, 148], [148], [237], [130, 179], [130], [130, 131], [110], [110], [243, 110], [63], [152, 48], [138], [138], [138], [138], [138], [173], [18], [133], [146, 133], [163, 149], [163], [162], [237], [164, 254], [152], [152], [152], [152], [152], [152], [152], [152], [152], [237], [168], [172], [193, 43], [43, 111], [43, 124], [186, 171], [168], [168, 200], [186], [180, 45], [176, 177], [272, 167], [147], [170, 182], [176], [], [93], [181, 207], [188, 183], [170], [188], [185, 91], [91], [246], [5], [196, 189], [196], [68, 5], [194], [72, 165], [136, 243], [70, 63], [194], [203, 197], [203], [201, 206], [198], [198], [206], [195, 70], [207], [210], [210, 204], [76], [169, 213], [214], [231], [218, 212], [107], [218], [169], [202, 221], [255], [220, 125], [241, 57], [225, 219], [225], [224, 222], [202], [224], [63], [125], [228], [81, 270], [234, 166], [233, 230], [227], [233], [237], [134, 135], [112, 29], [242, 71], [25], [], [246], [237], [237], [237], [237], [245, 71], [248, 244], [248], [251, 71], [1, 252], [278, 262], [232, 249], [232], [254], [258, 253], [1], [71], [89], [239], [14], [14], [259, 71], [226, 71], [192], [107], [278], [74, 277], [265, 263], [263], [239], [83, 268], [83, 276], [174], [273, 271], [273], [161, 275], [264, 274], [264], [161, 124], [83], [74], [3], [280], [63]], "fname": "quotearg_buffer_restyled", "n_num": 281}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_F667"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_F667"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[4, 2, 0, 5, 4, 61, 4, 4, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r15, argsize", "sub     rsp, 28h", "test    o, o", "cmovz   rbx, rax", "call    ___errno_location", "mov     r11d, [rax]", "mov     ebp, [rbx+4]", "lea     r10, [rbx+8]", "sub     rsp, 8", "mov     r8d, [rbx]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     [rsp+60h+var_3C], r11d", "or      ebp, 1", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "push    r10; quote_these_too", "mov     r9d, ebp; flags", "mov     r13, rax", "mov     [rsp+78h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "add     rsp, 20h", "mov     rdi, rsi; n", "mov     [rsp+58h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "mov     r10, [rsp+70h+quote_these_too]", "mov     r8d, [rbx]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "mov     r12, rax", "push    r10; quote_these_too", "mov     rsi, [rsp+78h+buffersize]; buffersize", "call    quotearg_buffer_restyled", "mov     r11d, [rsp+78h+var_3C]", "mov     rax, r12", "mov     [r13+0], r11d", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "call~FOO", "mov~r11d,<TAG>", "mov~ebp,[rbx+0]", "lea~r10,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~[rsp+0],r11d", "or~ebp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "push~r10", "mov~r9d,ebp", "mov~r13,rax", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "add~rsp,<STR>", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "mov~r10,[rsp+0]", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "mov~r12,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~r11d,[rsp+0]", "mov~rax,r12", "mov~[r13+0],r11d", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [4, 4, 4, 1, 1, 0, 0, 61, 0.0, 1, 5], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_F88F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 0, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_F919"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_F8F1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_F8E0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_F934"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_F9BF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_F9E7"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_FAF9"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_FAD8"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_FAFE"], ["cmp~ebx,0", "jz~FOO"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, default_quoting_options.quote_these_too", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_FABB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_FA6F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 3, -1, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 12], [1, 2], [5, 13], [9, 10], [11], [8, 11], [], [10], [], []], "fname": "quotearg_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_FB85"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_FBAD"], ["cmp~ebp,<TAG>", "jl~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_FCB9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_FCBE"], ["cmp~ebp,0", "jz~FOO"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "lea     r15, default_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_FC79"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_FC98"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_FC31"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 13], [], [8, 5], [10, 11], [1, 2], [12], [9, 12], [], [11], []], "fname": "quotearg_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_FDD2"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_FE1E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_FD24"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_FE38"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_FD51"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[9, 7], [0, 8], [1], [2], [2], [3, 4], [1, 5], [9], [], [8]], "fname": "quotearg", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_FF64"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_FFAC"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_FEBA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_FFD0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_FEE7"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[4], [0, 4], [], [1, 2], [2], [7], [8, 5], [3], [7], [3, 6]], "fname": "quotearg_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 10, 1, 0, 6, 0, 1, 0, 0, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_101E0"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_10223"], ["cmp~ebx,0", "jz~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_10219"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_101B5"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_100FA"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_10208"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_1016A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 16, 0, 1, 16, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_10219"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_1021E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_100B8"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 43, 134, 0.05127, 5, 14], "succs": [[12, 14], [0, 13], [10, 15], [8, 11], [3], [3], [1, 4], [11], [9, 7], [7], [6, 15], [16, 17], [5], [], [5], [], [], []], "fname": "quotearg_n_style", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 7, 0, 0, 4, 2, 1, 0, 0, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_1032F"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     r12d, cs:nslots", "mov     r8d, [rsp+88h+flags]", "jl      loc_10438"], ["cmp~r12d,<TAG>", "mov~r8d,<TAG>", "jl~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_102F0"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_10410"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_1039C"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, argsize; argsize", "add     rbx, r12", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_103E3"], ["shl~n,0", "sub~rsp,0", "mov~rcx,argsize", "add~rbx,r12", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, ebp", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 5, -1, 0.09558823529411764, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_1044D"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 16, 0, 1, 18, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  r12, edi", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+flags], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "test    r12d, r12d", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_84], eax", "js      loc_10448"], ["pxor~xmm0,xmm0", "movsxd~r12,edi", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],esi", "mov~<TAG>,esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "test~r12d,r12d", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_10448"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     r12d, 7FFFFFFFh", "jz      loc_10452"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 2, 18, 22, 0, 137, 0.05127, 5, 14], "succs": [[5], [0, 15], [7], [2, 6], [16, 10], [9, 4], [7], [5], [], [8, 11], [9], [], [1, 17], [17, 12], [], [3, 14], [10], []], "fname": "quotearg_n_style_mem", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 10, 0, 0, 3, 0, 1, 0, 0, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_10620"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 17, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r12, arg", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+s], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+s]", "test    eax, eax", "jg      loc_10650"], ["pxor~xmm0,xmm0", "mov~r12,arg", "mov~[rsp+0],edi", "mov~[rsp+0],edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,[rsp+0]", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_10666"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_105F8"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,0", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_10544"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_104FD"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_105AD"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_10661"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [10, 8, 18, 4, 15, 18, 67, 126, 0.05458, 5, 11], "succs": [[12, 7], [0, 5], [1, 3], [], [9, 10], [4], [4], [6], [11], [8, 11], [13, 14], [10], [6], [], []], "fname": "quotearg_style", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 1, 3, 3, 2, 18, 0, 2, 0, 0, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_107BD"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 12, 0, 1, 19, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+flags], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+flags]", "mov     [rsp+88h+var_84], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      loc_10860"], ["pxor~xmm0,xmm0", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],edi", "mov~<TAG>,edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_10875"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_10711"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_10830"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_10804"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,argsize", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_10757"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_10870"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 8, 18, 5, 15, 18, 0, 129, 0.05458, 5, 11], "succs": [[11], [0, 2], [0], [9, 6], [3, 14], [13], [8, 5], [1, 11], [13], [7], [], [10, 12], [], [7], []], "fname": "quotearg_style_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 6, 1, 1, 0, 0, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], eax", "mov     rax, r12", "jnz     short loc_10A7E"], ["mov~eax,[rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],eax", "mov~rax,r12", "jnz~FOO"]], [2, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+options.flags]", "mov     r11, [rbx]", "sub     rsp, 8", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbp+8]", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdi, r12; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_10A28"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r12,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r12", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbp, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    rbp; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbp,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbp", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_109E3"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_10A58"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 43, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     ecx, edx", "push    rbp", "push    rbx", "and     ecx, 1Fh", "mov     r14, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbp, [rsp+88h+options]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+88h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     argsize, [rbp+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+18h], xmm0", "mov     edx, [rsi]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, edx", "mov     [rsi], eax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_10972"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~ecx,edx", "push~rbp", "push~rbx", "and~ecx,0", "mov~r14,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbp,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~argsize,[rbp+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,edx", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_10945"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 133, 0.075, 9, 12], "succs": [[10, 11], [0, 3], [0], [2, 4], [2], [8, 9], [1, 5], [1], [7], [7], [], []], "fname": "quotearg_char_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r15, rax", "mov     [r12], rsi", "jz      short loc_10BF4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r15,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "mov     r11, [r12]", "sub     rsp, 8", "mov     r15, [r12+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbx+8]", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r15; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_10C3E"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r15,[r12+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbx+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r15", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     arg", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~arg", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], r14d", "mov     rax, r15", "jnz     short loc_10C8E"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],r14d", "mov~rax,r15", "jnz~FOO"]], [3, 1, 11, 2, 1, 41, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     ecx, esi", "push    r13", "push    r12", "and     ecx, 1Fh", "push    rbp", "push    rbx", "mov     rbp, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbx, [rsp+88h+quoting_style]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+right_quote], rax", "mov     eax, esi", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     rdx, [rbx+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "mov     esi, [rdx]", "mov     eax, esi", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, esi", "mov     [rdx], eax", "call    ___errno_location", "mov     r13, rax", "mov     r14d, [rax]", "mov     eax, cs:nslots", "mov     r12, cs:slotvec_0", "test    eax, eax", "jg      short loc_10B7C"], ["push~r15", "push~r14", "mov~ecx,esi", "push~r13", "push~r12", "and~ecx,0", "push~rbp", "push~rbx", "mov~rbp,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,esi", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~rdx,[rbx+0]", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,esi", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~r14d,<TAG>", "mov~eax,<TAG>", "mov~r12,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, r12; p", "mov     esi, 10h; n", "call    xrealloc", "mov     r12, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r12", "mov~esi,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     r12, rax", "jz      loc_10C68"], ["lea~rax,<TAG>", "cmp~r12,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r12, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_10B4F"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r12,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r12; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r12", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r15; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r15", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbx, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r12+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    rbx; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r15, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbx,0", "call~FOO", "sub~rsp,0", "mov~[r12+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbx", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 130, 0.075, 9, 12], "succs": [[9, 10], [0, 3], [], [2, 11], [1, 6], [8], [5, 7], [8], [1], [10], [3], []], "fname": "quotearg_char", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 1, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_10E8E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [1, 1, 11, 1, 1, 32, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_10D77"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_10E68"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_10D4A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [3, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r14; buffer", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_10E3B"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,r14", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_10DF1"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]]], "func_feature": [9, 8, 15, 2, 12, 15, 2, 122, 0.075, 9, 11], "succs": [[], [0, 8], [4, 6], [7], [3, 5], [7], [1, 10], [6], [], [1], [9, 11], [9]], "fname": "quotearg_colon", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_10FF4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_1103A"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_1108E"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [1, 1, 11, 1, 1, 34, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_10F7D"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_11068"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_10F50"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 8, 15, 3, 12, 15, 0, 125, 0.075, 9, 11], "succs": [[9, 7], [0, 3], [], [2, 11], [1, 6], [8], [10, 5], [3], [1], [7], [8], []], "fname": "quotearg_colon_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 1, 17, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_112C1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 0, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_112C6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_112CB"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_11160"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_11288"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 0, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_112B0"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [1, 0, 16, 0, 1, 17, 1, 2, 0, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+options.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+options.flags], 0", "movups  xmmword ptr [rsp+88h+options.left_quote], xmm0", "movdqa  xmm0, cs:xmmword_1B890", "movups  xmmword ptr [rsp+88h+options.quote_these_too], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+options.quote_these_too+10h], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_112C1"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 0, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+options]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_1125D"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_111A2"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 0, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+options.flags]", "mov     rdx, [rsp+88h+options.right_quote]", "mov     r8d, [rsp+88h+options.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+options.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_11212"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 5, 135, 0.05127, 6, 14], "succs": [[9, 17], [], [1, 7], [], [3, 6], [12], [16, 5], [], [11, 4], [8, 17], [2, 14], [10], [10], [15], [13, 15], [2], [12], []], "fname": "quotearg_n_style_colon", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_113F4"], ["mov~r8d,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 2, 0.13725490196078433, ["cmp     r15d, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "mov     rsi, [rsp+88h+left_quote]", "jl      loc_11508"], ["cmp~r15d,<TAG>", "mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "jl~FOO"]], [4, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+quoting_style+4]", "shl     n, 4", "sub     rsp, 8", "add     r15, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     r11, [r15]", "mov     rbp, [r15+8]", "or      r9d, 1; flags", "mov     dword ptr [rsp+90h+left_quote], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    rsi; left_quote", "mov     rdi, rbp; buffer", "mov     rsi, r11; buffersize", "lea     r14, [rsp+0A0h+quoting_style]", "lea     rax, [r14+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_114B4"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~r15,r14", "mov~rcx,0", "mov~r11,<TAG>", "mov~rbp,[r15+0]", "or~r9d,0", "mov~[word ptr [rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~rsi", "mov~rdi,rbp", "mov~rsi,r11", "lea~r14,[rsp+0]", "lea~rax,[r14+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r14; s", "shl     rdx, 4; n", "call    _memset", "mov     rdx, [rsp+88h+var_48]", "mov     rsi, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, ebp"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r14", "shl~rdx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [r15], rsi", "jz      short loc_1146A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     r14, rax", "jz      loc_114E0"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~r14,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     r15d, 7FFFFFFFh", "jz      loc_1151D"], ["cmp~r15d,0", "jz~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote_0, left_quote_0", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_11513"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote_0,left_quote_0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 16, 0, 1, 12, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  r15, edi", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote_0", "mov     [rsp+88h+left_quote], left_quote_0", "mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "test    r15d, r15d", "mov     rbx, rax", "mov     r13d, [rax]", "mov     r14, cs:slotvec_0", "js      loc_11513"], ["movsxd~r15,edi", "mov~r12,arg", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "test~r15d,r15d", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~r14,<TAG>", "js~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_11513"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r14, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_113BF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r14,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, r14; p", "call    xrealloc", "mov     r14, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r14", "call~FOO", "mov~r14,rax", "mov~<TAG>,rax"]], [3, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r14, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r15+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r14; quote_these_too", "mov     r9d, dword ptr [rsp+0A8h+left_quote]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r14,0", "call~FOO", "sub~rsp,0", "mov~[r15+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r14", "mov~r9d,[word ptr [rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 6, -1, 0.09150326797385622, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbx], r13d", "mov     rax, rbp", "jnz     short loc_11518"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,r13d", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 22, 4, 19, 24, 0, 139, 0.05538, 9, 14], "succs": [[2], [0, 7], [5, 15], [2], [13], [4, 13], [11, 12], [17, 6], [16, 10], [16, 1], [16, 9], [3], [3], [15], [], [18, 14], [], [], []], "fname": "quotearg_n_custom", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[3, 1, 6, 4, 1, 23, 1, 2, 0, 0, 0.19607843137254902, ["mov     r9d, [rsp+88h+o.flags]", "shl     n, 4", "sub     rsp, 8", "add     rbx, rbp", "mov     rcx, argsize; argsize", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    r12; left_quote", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+o]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_1170C"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~rbx,rbp", "mov~rcx,argsize", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "or~r9d,0", "mov~[rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~r12", "mov~rsi,r11", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_11652"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r12, [rsp+88h+o.left_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d", "mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "mov~r8d,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_116C6"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_11740"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     ebp, 7FFFFFFFh", "jz      loc_1177D"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 6, -1, 0.09150326797385622, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_11778"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 2, 0.13725490196078433, ["cmp     ebp, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "jl      loc_11768"], ["cmp~ebp,<TAG>", "mov~rdx,<TAG>", "jl~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+o.style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+o.right_quote], rax", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "jz      loc_11773"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 16, 0, 1, 14, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  rbp, edi", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.left_quote], left_quote", "mov     [rsp+88h+o.right_quote], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "js      loc_11773"], ["movsxd~rbp,edi", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_11773"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_1161B"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [11, 8, 22, 2, 19, 24, 0, 141, 0.05538, 9, 14], "succs": [[4, 7], [0], [0], [8], [8, 3], [13, 14], [17, 5], [16, 18], [7], [1, 6], [12, 15], [9, 15], [11, 15], [2], [2], [], [], [], []], "fname": "quotearg_n_custom_mem", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 8, 0, 1, 8, 1, 2, 0, 0, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_1185C"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_11980"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, r14; buffer", "push    r15; left_quote", "mov     rsi, r11; buffersize", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_11952"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,r14", "push~r15", "mov~rsi,r11", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 11, 0, 1, 14, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r15, left_quote", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "test    eax, eax", "jg      short loc_11898"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r15,left_quote", "mov~r12,arg", "mov~[rsp+0],left_quote", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_11908"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_119A6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_119AB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_119AB"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [10, 8, 18, 4, 15, 19, 0, 129, 0.05897, 9, 11], "succs": [[4], [0, 13], [8, 6], [1, 2], [2], [9], [9, 5], [], [14, 7], [8], [], [10, 12], [10, 3], [4], []], "fname": "quotearg_custom", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 8, 0, 1, 8, 1, 2, 0, 0, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_11A82"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_11BA0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 11, 0, 1, 16, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_11ABE"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [2, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, rbp; buffer", "push    r12; left_quote", "mov     rsi, r11; buffersize", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_11B71"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,rbp", "push~r12", "mov~rsi,r11", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_11B2B"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_11BC6"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_11BCB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_11BCB"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [10, 8, 18, 5, 15, 19, 0, 132, 0.05897, 9, 11], "succs": [[4], [0, 12], [1, 3], [6, 7], [3], [8], [8, 5], [13, 14], [7], [], [9, 11], [9, 2], [4], [], []], "fname": "quotearg_custom_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 11, 0, 0, 0, 0, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "lea     r15, quote_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_11D39"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_11CF1"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_11C45"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_11C6D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_11D79"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_11D58"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_11D7E"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[], [0, 3], [0], [2, 4], [2], [1], [5], [5], [1, 11], [8, 13], [6, 7], [10, 12], [], []], "fname": "quote_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 9, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_11E17"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_11E94"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 4, 2, 1, 22, 1, 2, 0, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_11EDC"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 0, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 0, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_11F00"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 0, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_11DEA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 0, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 2, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 0, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[2, 4], [9, 7], [8, 1], [6], [3, 5], [6], [2], [9], [], [8]], "fname": "quote_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_11F9F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_11FC7"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_120D9"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_120B8"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_120DE"], ["cmp~ebx,0", "jz~FOO"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, quote_quoting_options.quote_these_too", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_1209B"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_1204F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 3, -1, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 2, 108, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 12], [1, 2], [5, 13], [9, 10], [11], [8, 11], [], [10], [], []], "fname": "quote_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_121F2"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_1223E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_12144"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_12258"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_12171"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 0, 10, 13, 7, 99, 0.08194, 9, 10], "succs": [[9, 7], [0, 8], [1], [2], [2], [3, 4], [1, 5], [9], [], [8]], "fname": "quote", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 27, 0, 0, 2, 1, 1, 0, 0, 0.02413793103448276, ["and     ebp, 0FFFFFFFEh", "jz      short loc_123F0"], ["and~ebp,0", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 2, 4, 0.05747126436781609, ["test    ebp, ebp", "jnz     short loc_12380"], ["test~ebp,ebp", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     rbp", "pop     src", "pop     dst", "pop     fd2", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~src", "pop~dst", "pop~fd2", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.06436781609195402, ["mov     rdx, [rsp+178h+var_40]", "xor     rdx, fs:28h", "mov     eax, r15d", "jnz     loc_124E5"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [1, 1, 6, 0, 0, 4, 1, 1, 10, 3, 0.01954022988505747, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_12429"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 9, 3, 0.040229885057471264, ["cmp     dword ptr [r9], 2", "jnz     short loc_12429"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 11, 3, 0.0022988505747126436, ["jmp     loc_12363"], ["jmp~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.005172413793103448, ["mov     dword ptr [r9], 5Fh ; '_'", "mov     r15d, 0FFFFFFFFh", "jmp     loc_122DA"], ["mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [2, 0, 25, 0, 1, 10, 1, 2, 4, 3, 0.04080459770114943, ["lea     rcx, [rsp+178h+dst_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dst_temp; filename", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "mov     [rsp+178h+var_170], r9", "call    ___fxstatat", "test    eax, eax", "mov     r9, [rsp+178h+var_170]", "jz      short loc_12438"], ["lea~rcx,[rsp+0]", "mov~r8d,0", "mov~rdx,dst_temp", "mov~esi,r14d", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 7, 4, 0.07816091954022988, ["mov     ebx, 1", "jmp     loc_1232C"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 6, 3, 0.0706896551724138, ["cmp     eax, 2", "jz      short loc_12498"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 5, 3, 0.05459770114942529, ["mov     eax, [r9]", "cmp     eax, 4Bh ; 'K'", "jz      short loc_12438"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [2, 0, 29, 0, 0, 9, 2, 1, 1, 2, 0.029885057471264367, ["mov     r9, rax", "mov     eax, [rax]", "lea     ecx, [rax-16h]", "and     ecx, 0FFFFFFEFh", "setnz   bl", "cmp     eax, 5Fh ; '_'", "setnz   al", "and     bl, al", "jnz     short loc_122DA"], ["mov~r9,rax", "mov~eax,<TAG>", "lea~ecx,[rax-16h]+0]", "and~ecx,0", "setnz~bl", "cmp~eax,0", "setnz~al", "and~bl,al", "jnz~FOO"]], [2, 0, 30, 1, 2, 27, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r9d, r8d", "push    r13", "push    r12", "mov     r14d, edx", "push    rbp", "push    rbx", "mov     r12, src", "mov     r13, dst", "mov     ebp, r8d", "mov     flags, dst", "sub     rsp, 148h", "mov     ecx, edx", "mov     fd2, src", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "mov     esi, edi", "mov     [rsp+178h+fd1], edi", "mov     edi, 13Ch; sysno", "call    _syscall", "mov     rbx, rax", "mov     r15d, eax", "call    ___errno_location", "test    ebx, ebx", "js      short loc_12310"], ["push~r15", "push~r14", "mov~r9d,r8d", "push~r13", "push~r12", "mov~r14d,edx", "push~rbp", "push~rbx", "mov~r12,src", "mov~r13,dst", "mov~ebp,r8d", "mov~flags,dst", "sub~rsp,0", "mov~ecx,edx", "mov~fd2,src", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~esi,edi", "mov~[rsp+0],edi", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~r15d,eax", "call~FOO", "test~ebx,ebx", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.023563218390804597, ["mov     r15d, 0FFFFFFFFh", "jmp     loc_122DA"], ["mov~r15d,0", "jmp~FOO"]], [2, 0, 16, 0, 1, 9, 1, 2, 6, 3, 0.16091954022988506, ["mov     esi, [rsp+178h+fd1]; fildes", "lea     rcx, [rsp+178h+src_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, src_temp; filename", "mov     edi, 1; ver", "mov     [rsp+178h+var_170], r9", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_12429"], ["mov~esi,[rsp+0]", "lea~rcx,[rsp+0]", "mov~r8d,0", "mov~rdx,src_temp", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 10, 3, 0.0022988505747126436, ["mov     dword ptr [r9], 14h", "jmp     loc_12429"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 8, 0, 0, 4, 1, 1, 9, 4, 0.052873563218390804, ["mov     eax, [rsp+178h+dst_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_124C1"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 12, 0, 1, 10, 1, 2, 8, 4, 0.11379310344827587, ["lea     rcx, [rsp+178h+dst_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dst_temp; filename", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "mov     [rsp+178h+var_170], r9", "call    ___fxstatat", "test    eax, eax", "mov     r9, [rsp+178h+var_170]", "jz      short loc_124A2"], ["lea~rcx,[rsp+0]", "mov~r8d,0", "mov~rdx,dst_temp", "mov~esi,r14d", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 5, 4, 0.15459770114942528, ["cmp     byte ptr [src_temp+src_len-1], 2Fh ; '/'", "jz      short loc_123A0"], ["cmp~[yte ptr [src_temp+0],0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 3, 0.0028735632183908046, ["cmp     byte ptr [dst_temp+dst_len-1], 2Fh ; '/'", "jz      short loc_123A0"], ["cmp~[yte ptr [dst_temp+0],0", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 5, 2, 0.006896551724137931, ["mov     dword ptr [r9], 11h", "mov     r15d, 0FFFFFFFFh", "jmp     loc_122DA"], ["mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [0, 0, 20, 0, 2, 8, 1, 3, 3, 3, 0.15517241379310345, ["mov     rdi, src_temp; s", "mov     [rsp+178h+var_170], r9", "call    _strlen", "mov     rdi, dst_temp; s", "mov     rbp, rax", "call    _strlen", "test    src_len, src_len", "jz      short loc_12363"], ["mov~rdi,src_temp", "mov~[rsp+0],r9", "call~FOO", "mov~rdi,dst_temp", "mov~rbp,rax", "call~FOO", "test~src_len,src_len", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 7, 4, 0.15057471264367817, ["test    bl, bl", "mov     r9, [rsp+178h+var_170]", "jz      short loc_1244A"], ["test~bl,bl", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 10, 3, 0.022988505747126436, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_12363"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 4, 3, 0.14885057471264368, ["test    dst_len, dst_len", "mov     r9, [rsp+178h+var_170]", "jz      short loc_12363"], ["test~dst_len,dst_len", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 8, 3, 0.021839080459770115, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_12363"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 1, 1, 11, 2, 0.0028735632183908046, ["mov     dword ptr [r9], 15h", "or      r15d, 0FFFFFFFFh", "jmp     loc_122DA"], ["mov~<TAG>,0", "or~r15d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 9, 2, 0.0034482758620689655, ["mov     dword ptr [r9], 2", "mov     r15d, 0FFFFFFFFh", "jmp     loc_122DA"], ["mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 7, 0, 2, 4, 2, 0.027011494252873563, ["mov     edi, [rsp+178h+fd1]; oldfd", "mov     rcx, dst_temp; new", "mov     edx, r14d; newfd", "mov     rsi, src_temp; old", "call    _renameat", "mov     r15d, eax", "jmp     loc_122DA"], ["mov~edi,[rsp+0]", "mov~rcx,dst_temp", "mov~edx,r14d", "mov~rsi,src_temp", "call~FOO", "mov~r15d,eax", "jmp~FOO"]]], "func_feature": [9, 18, 38, 2, 31, 49, 2, 149, 0.04961, 1, 2], "succs": [[8, 7], [0, 22], [], [2, 28], [14, 6], [4, 14], [30], [3], [11, 21], [22], [9, 14], [10, 21], [1, 3], [3, 12], [3], [14, 23], [14], [16, 24], [17, 5], [20, 15], [30, 15], [3], [25, 30], [26, 18], [27, 30], [19, 30], [29, 30], [3], [], [3], [3]], "fname": "renameatu", "n_num": 31}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_12508"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_12540"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_12540"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.2, ["cmp     count, 7FF00000h", "jbe     short loc_12540"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FF00000h", "jmp     short loc_12508"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[2], [2, 3], [1, 4], [4, 5], [], [4, 6], [2]], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 138h", "pop     dest_dirname", "pop     rbp", "pop     dest", "pop     source_dfd", "retn"], ["add~rsp,0", "pop~dest_dirname", "pop~rbp", "pop~dest", "pop~source_dfd", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, 1, 0.21428571428571427, ["mov     rdi, dest_dirname; ptr", "call    free", "mov     rdx, [rsp+158h+var_30]", "xor     rdx, fs:28h", "mov     eax, ebp", "jnz     short loc_12672"], ["mov~rdi,dest_dirname", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 5, 0, 2, 8, 1, 3, 2, 3, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, dest_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     short loc_125D8"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,dest_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 6, 0, 3, 13, 1, 4, 1, 3, 0.21428571428571427, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest; file", "call    dir_name", "lea     rcx, [rsp+158h+dest_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, rax; filename", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "mov     source_dirname, rax", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_12628"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest", "call~FOO", "lea~rcx,[rsp+0]", "mov~r8d,0", "mov~rdx,rax", "mov~esi,ebp", "mov~edi,0", "mov~source_dirname,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 2, 2, 0.2857142857142857, ["xor     ebp, ebp", "mov     rax, [rsp+158h+dest_dir_stats.st_ino]", "cmp     [rsp+158h+source_dir_stats.st_ino], rax", "jnz     short loc_125F9"], ["xor~ebp,ebp", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 7, 0, 2, 8, 1, 3, 1, 4, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, source_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_125A4"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,source_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 8, 1, 2, 22, 2, 3, 0, 4, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     source_dfd, source; file", "mov     ebp, edx", "mov     r12, dest", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+158h+var_30], rax", "xor     eax, eax", "call    dir_name", "mov     rcx, rsp; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, rax; filename", "mov     esi, r13d; fildes", "mov     edi, 1; ver", "mov     rbx, rax", "call    ___fxstatat", "test    eax, eax", "jnz     loc_12650"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~source_dfd,source", "mov~ebp,edx", "mov~r12,dest", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,rsp", "mov~r8d,0", "mov~rdx,rax", "mov~esi,r13d", "mov~edi,0", "mov~rbx,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 3, 2, 0.0, ["mov     rax, [rsp+158h+dest_dir_stats.st_dev]", "cmp     [rsp+158h+source_dir_stats.st_dev], rax", "setz    bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "setz~bpl"]]], "func_feature": [11, 7, 17, 1, 9, 11, 2, 71, 0.07937, 2, 2], "succs": [[], [0, 7], [4], [2, 4], [8, 1], [3], [3, 5], [], [1]], "fname": "same_nameat_0", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, r14; n", "mov     rsi, r13; s2", "mov     rdi, r12; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_126B9"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 4, 19, 0, 5, 0, 2, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     rbp, dest", "push    rbx", "mov     rbx, source", "call    last_component", "mov     rdi, dest; name", "mov     r12, rax", "call    last_component", "mov     rdi, r12; name", "mov     r13, rax", "call    base_len", "mov     rdi, r13; name", "mov     r14, rax", "call    base_len", "cmp     r14, rax", "jz      short loc_126C8"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~rbp,dest", "push~rbx", "mov~rbx,source", "call~FOO", "mov~rdi,dest", "mov~r12,rax", "call~FOO", "mov~rdi,r12", "mov~r13,rax", "call~FOO", "mov~rdi,r13", "mov~r14,rax", "call~FOO", "cmp~r14,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 1, 0, 1, -1, 0.0, ["pop     source", "xor     eax, eax", "pop     dest", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~source", "xor~eax,eax", "pop~dest", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 1, 0, 0, 10, 0, 1, 2, 0, 0.16666666666666666, ["mov     rcx, dest; dest", "mov     rsi, source; source", "mov     edx, 0FFFFFF9Ch; dest_dfd", "pop     source", "pop     dest", "pop     r12", "pop     r13", "pop     r14", "mov     edi, edx; source_dfd", "jmp     same_nameat_0"], ["mov~rcx,dest", "mov~rsi,source", "mov~edx,0", "pop~source", "pop~dest", "pop~r12", "pop~r13", "pop~r14", "mov~edi,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [5, 2, 8, 0, 5, 5, 7, 42, 0.06667, 0, 0], "succs": [[2, 3], [0, 2], [], [4], []], "fname": "same_name", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_12749"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 1, 4, 24, 0, 5, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15d, edx", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, dest", "mov     rbx, source", "sub     rsp, 18h", "mov     [rsp+48h+source_dfd], edi", "mov     source_dfd_0, source; name", "call    last_component", "mov     rdi, dest; name", "mov     r12, rax", "call    last_component", "mov     rdi, source_basename; name", "mov     r13, rax", "call    base_len", "mov     rdi, dest_basename; name", "mov     r14, rax", "call    base_len", "cmp     source_baselen, dest_baselen", "jz      short loc_12760"], ["push~r15", "push~r14", "mov~r15d,edx", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,dest", "mov~rbx,source", "sub~rsp,0", "mov~[rsp+0],edi", "mov~source_dfd_0,source", "call~FOO", "mov~rdi,dest", "mov~r12,rax", "call~FOO", "mov~rdi,source_basename", "mov~r13,rax", "call~FOO", "mov~rdi,dest_basename", "mov~r14,rax", "call~FOO", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     source", "pop     dest", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "pop     dest_dfd", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~source", "pop~dest", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "pop~dest_dfd", "retn"]], [1, 0, 1, 1, 0, 12, 0, 1, 2, 0, 0.16666666666666666, ["mov     edi, [rsp+48h+source_dfd]", "add     rsp, 18h", "mov     rcx, dest", "mov     edx, r15d", "mov     rsi, source", "pop     source", "pop     dest", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "pop     dest_dfd", "jmp     same_nameat_0"], ["mov~edi,[rsp+0]", "add~rsp,0", "mov~rcx,dest", "mov~edx,r15d", "mov~rsi,source", "pop~source", "pop~dest", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "pop~dest_dfd", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [5, 2, 8, 0, 5, 5, 0, 51, 0.06667, 0, 3], "succs": [[2, 3], [0, 2], [], [4], []], "fname": "same_nameat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [deb+8]", "cmp     [dea+8], rax", "jb      short loc_127B8"], ["mov~rax,[deb+0]", "cmp~[dea+0],rax", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["setnbe  al", "movzx   eax, al", "retn"], ["setnbe~al", "movzx~eax,al", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 0, 0, 0, 3, 2, 0, 8, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "direntry_cmp_inode", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     deb, [deb]; s2", "mov     dea, [dea]; s1", "jmp     _strcmp"], ["mov~deb,<TAG>", "mov~dea,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "direntry_cmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.0005537098560354374, ["xor     r13d, r13d", "jmp     loc_1292B"], ["xor~r13d,r13d", "jmp~FOO"]], [0, 1, 43, 1, 0, 13, 1, 1, 0, 9, 0.0, ["push    r15", "lea     rax, comparison_function_table", "push    r14", "push    r13", "push    r12", "mov     esi, esi", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     rax, [rax+option*8]", "test    dirp, dirp", "mov     [rsp+78h+cmp], rax", "jz      loc_12AFD"], ["push~r15", "lea~rax,<TAG>", "push~r14", "push~r13", "push~r12", "mov~esi,esi", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "test~dirp,dirp", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.16057585825027684, ["cmp     [rsp+78h+cmp], 0", "jz      loc_129B0"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 1, 1, 3, -1, 0.20099667774086377, ["mov     ebx, [rbp+0]", "test    ebx, ebx", "jnz     loc_12AE0"], ["mov~ebx,[rbp+0]", "test~ebx,ebx", "jnz~FOO"]], [2, 0, 41, 1, 1, 7, 0, 2, 5, 4, 0.24252491694352157, ["mov     rdi, entry; s", "mov     [rsp+78h+dp], dp_0", "call    _strlen", "add     rax, 1", "cmp     [rsp+78h+cmp], 0", "mov     [rsp+78h+entry_size], rax", "jz      loc_129C8"], ["mov~rdi,entry", "mov~[rsp+0],dp_0", "call~FOO", "add~rax,0", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 4, 5, 0.24086378737541528, ["test    al, al", "jnz     short loc_12869"], ["test~al,al", "jnz~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 5, 5, 0.020487264673311183, ["movzx   eax, byte ptr [dp_0+14h]", "test    al, al", "jz      short loc_12834"], ["movzx~eax,[yte ptr [dp_0+0]", "test~al,al", "jz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 9, 11, 0.014673311184939091, ["mov     rax, 5555555555555553h", "cmp     rdx, rax", "ja      loc_12AD5"], ["mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 8, 11, 0.0741971207087486, ["test    name_space, name_space", "mov     rdx, [rsp+78h+dp]", "jz      loc_12ABB"], ["test~name_space,name_space", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 5, -1, 0.08305647840531562, ["test    entries_used, entries_used", "lea     readdir_errno, [used+1]", "jnz     short loc_12940"], ["test~entries_used,entries_used", "lea~readdir_errno,[used+0]", "jnz~FOO"]], [1, 0, 41, 1, 1, 7, 0, 2, 10, 9, 0.15946843853820597, ["mov     rdi, [rsp+78h+entries]; p", "shl     rsi, 4; n", "mov     [rsp+78h+dp], dp_0", "call    xrealloc", "mov     rcx, [rsp+78h+dp]", "mov     [rsp+78h+entries], rax", "jmp     loc_128A5"], ["mov~rdi,[rsp+0]", "shl~rsi,0", "mov~[rsp+0],dp_0", "call~FOO", "mov~rcx,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 41, 0, 0, 4, 0, 1, 11, 10, 0.08084163898117386, ["lea     rax, [n_0+1]", "mov     rsi, [rsp+78h+n]", "mov     [rsp+78h+var_40], rax", "jmp     loc_12A7D"], ["lea~rax,[n_0+0]", "mov~rsi,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 41, 1, 0, 5, 0, 0, 9, 10, 0.04928017718715393, ["mov     rax, n_0", "shr     rax, 1", "add     rax, [rsp+78h+var_40]", "mov     [rsp+78h+n], rax", "mov     rsi, rax"], ["mov~rax,n_0", "shr~rax,0", "add~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rsi,rax"]], [0, 0, 3, 0, 1, 4, 0, 1, 6, -1, 0.018272425249169433, ["mov     rdi, rbx; n", "call    xmalloc", "mov     name_space, rax", "mov     rbx, name_space"], ["mov~rdi,rbx", "call~FOO", "mov~name_space,rax", "mov~rbx,name_space"]], [1, 0, 41, 0, 0, 4, 0, 0, 10, 10, 0.021040974529346623, ["mov     rax, rdx", "shr     rax, 1", "lea     rax, [rdx+rax+1]", "mov     [rsp+78h+allocated], rax"], ["mov~rax,rdx", "shr~rax,0", "lea~rax,[rdx+0]", "mov~[rsp+0],rax"]], [0, 0, 41, 0, 0, 5, 0, 1, 6, 3, 0.1301218161683278, ["cmp     entries_used, [rsp+78h+n]", "lea     entry_size_0, [entries_used+1]", "mov     rcx, [rsp+78h+dp]", "mov     [rsp+78h+var_40], rax", "jz      loc_12A4F"], ["cmp~entries_used,[rsp+0]", "lea~entry_size_0,[entries_used+0]", "mov~rcx,[rsp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 2, 2, 11, 0, 3, 7, -1, 0.01937984496124031, ["mov     rsi, [rbp+0]; src", "lea     r14, [name_space+used+0]", "add     rbp, 10h", "mov     rdi, dest; dest", "call    _stpcpy", "mov     rdi, [rbp-10h]; ptr", "sub     rax, dest", "lea     used, [used+rax+1]", "call    free", "cmp     rbp, r12", "jnz     short loc_12978"], ["mov~rsi,[rbp+0]", "lea~r14,[name_space+0]", "add~rbp,0", "mov~rdi,dest", "call~FOO", "mov~rdi,[rbp-10h]+0]", "sub~rax,dest", "lea~used,[used+0]", "call~FOO", "cmp~rbp,r12", "jnz~FOO"]], [2, 0, 5, 2, 2, 14, 1, 2, 6, -1, 0.03433001107419712, ["mov     r15, [rsp+78h+entries]", "mov     rcx, [rsp+78h+cmp]; compar", "mov     rsi, entries_used; nmemb", "mov     edx, 10h; size", "shl     entries_used, 4", "mov     rdi, r15; base", "mov     rbp, r15", "add     r12, r15", "call    _qsort", "mov     rdi, rbx; n", "xor     ebx, ebx", "call    xmalloc", "mov     name_space, rax", "nop     dword ptr [rax+00000000h]"], ["mov~r15,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rsi,entries_used", "mov~edx,0", "shl~entries_used,0", "mov~rdi,r15", "mov~rbp,r15", "add~r12,r15", "call~FOO", "mov~rdi,rbx", "xor~ebx,ebx", "call~FOO", "mov~name_space,rax", "nop~[word ptr [rax+0]"]], [0, 0, 2, 0, 1, 2, 0, 1, 7, -1, 0.005537098560354374, ["mov     rdi, [rsp+78h+entries]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 3, 1, 0, 2, 0, 1, 8, -1, 0.0033222591362126247, ["add     used, name_space", "jmp     loc_1291E"], ["add~used,name_space", "jmp~FOO"]], [3, 0, 41, 0, 1, 10, 3, 2, 1, 8, 0.022148394241417495, ["mov     rbx, dirp", "xor     r14d, r14d", "xor     r12d, r12d", "call    ___errno_location", "xor     r13d, r13d", "mov     rbp, rax", "mov     [rsp+78h+n], 0", "mov     [rsp+78h+entries], 0", "mov     [rsp+78h+allocated], 0", "jmp     short loc_12834"], ["mov~rbx,dirp", "xor~r14d,r14d", "xor~r12d,r12d", "call~FOO", "xor~r13d,r13d", "mov~rbp,rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 9, 12, 0.06866002214839424, ["test    rax, rax", "js      short loc_12AD5"], ["test~rax,rax", "js~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 9, 0, 0.0, ["mov     esi, 1", "jmp     short loc_12B28"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 41, 1, 0, 10, 2, 0, 8, 1, 0.05426356589147287, ["test    n_0, n_0", "mov     eax, 8", "mov     edx, 10h", "cmovnz  rax, n_0", "xor     esi, esi", "mov     rdi, rax", "mov     [rsp+78h+n], rax", "mov     rax, rdx", "mul     rdi", "jo      short loc_12B46"], ["test~n_0,n_0", "mov~eax,0", "mov~edx,0", "cmovnz~rax,n_0", "xor~esi,esi", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~rax,rdx", "mul~,rdi", "jo~FOO"]], [0, 0, 41, 0, 1, 4, 0, 1, 10, 9, 0.10132890365448505, ["mov     entry_size_0, [rsp+78h+allocated]; n", "mov     rdi, name_space; p", "call    xrealloc", "mov     name_space, rax"], ["mov~entry_size_0,[rsp+0]", "mov~rdi,name_space", "call~FOO", "mov~name_space,rax"]], [0, 1, 41, 0, 0, 6, 2, 0, 9, 10, 0.0517718715393134, ["test    rdx, rdx", "mov     eax, 80h", "cmovnz  rax, rdx", "test    rax, rax", "mov     [rsp+78h+allocated], rax", "jns     loc_12A23"], ["test~rdx,rdx", "mov~eax,<STR>", "cmovnz~rax,rdx", "test~rax,rax", "mov~[rsp+0],rax", "jns~FOO"]], [1, 0, 41, 0, 0, 4, 0, 1, 3, 6, 0.2547065337763012, ["lea     r15, [dp_0+13h]", "movzx   eax, byte ptr [dp_0+13h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_12830"], ["lea~r15,[dp_0+0]", "movzx~eax,[yte ptr [dp_0+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 0, 1, 5, 6, 0.0005537098560354374, ["movzx   eax, byte ptr [dp_0+15h]", "jmp     loc_12830"], ["movzx~eax,[yte ptr [dp_0+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 5, -1, 0.050387596899224806, ["cmp     [rsp+78h+allocated], used", "jz      loc_12A9F"], ["cmp~[rsp+0],used", "jz~FOO"]], [0, 0, 2, 1, 1, 7, 0, 2, 6, -1, 0.009136212624584717, ["mov     readdir_errno, [rsp+78h+allocated]", "mov     rdi, name_space; p", "lea     rsi, [rbx+1]; n", "call    xrealloc", "mov     name_space, rax", "add     rbx, name_space", "jmp     loc_12928"], ["mov~readdir_errno,[rsp+0]", "mov~rdi,name_space", "lea~rsi,[rbx+0]", "call~FOO", "mov~name_space,rax", "add~rbx,name_space", "jmp~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "mov     rax, r13", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r13", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 2, 7, 1, 3, 4, -1, 0.015503875968992248, ["mov     rdi, [rsp+78h+entries]; ptr", "call    free", "mov     rdi, name_space; ptr", "xor     r13d, r13d", "call    free", "mov     [rbp+0], ebx", "jmp     loc_1292B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,name_space", "xor~r13d,r13d", "call~FOO", "mov~[rbp+0],ebx", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 7, -1, 0.005537098560354374, ["mov     byte ptr [rbx], 0"], ["mov~<TAG>,0"]], [0, 0, 2, 0, 0, 2, 0, 1, 6, -1, 0.009136212624584717, ["lea     readdir_errno, [name_space+used+0]", "jmp     loc_12928"], ["lea~readdir_errno,[name_space+0]", "jmp~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 10, 11, 0.0741971207087486, ["test    rsi, rsi", "jnz     short loc_12AD5"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 2, 7, 0.46400885935769653, ["mov     dword ptr [rbp+0], 0", "mov     rdi, dirp; dirp", "call    _readdir", "test    rax, rax", "mov     rcx, rax", "jz      loc_128F0"], ["mov~[word ptr [rbp+0],0", "mov~rdi,dirp", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 41, 3, 1, 12, 0, 2, 7, 8, 0.1982281284606866, ["shl     entries_used, 4", "mov     rdi, entry; string", "add     r12, [rsp+78h+entries]", "mov     [rsp+78h+dp], rcx", "call    xstrdup", "mov     rcx, [rsp+78h+dp]", "add     used, [rsp+78h+entry_size]", "mov     [r12], rax", "mov     rax, [rcx]", "mov     [r12+8], rax", "mov     r12, [rsp+78h+var_40]", "jmp     loc_12834"], ["shl~entries_used,0", "mov~rdi,entry", "add~r12,[rsp+0]", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "add~used,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[r12+0],rax", "mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 41, 0, 1, 6, 0, 2, 7, 8, 0.1434108527131783, ["mov     rdx, [rsp+78h+entry_size]; n", "lea     rdi, [name_space+used+0]; dest", "mov     rsi, entry; src", "call    _memcpy", "mov     used, [rsp+78h+dp]", "jmp     loc_12834"], ["mov~rdx,[rsp+0]", "lea~rdi,[name_space+0]", "mov~rsi,entry", "call~FOO", "mov~used,[rsp+0]", "jmp~FOO"]], [0, 0, 41, 2, 0, 10, 0, 1, 6, 9, 0.10465116279069767, ["mov     rsi, entry_size_0", "mov     entry_size_0, [rsp+78h+allocated]", "mov     rdx, rsi", "sub     rax, used", "add     rdx, used", "mov     [rsp+78h+dp], rdx", "setb    dl", "cmp     rax, rsi", "movzx   edx, dl", "ja      short loc_12A33"], ["mov~rsi,entry_size_0", "mov~entry_size_0,[rsp+0]", "mov~rdx,rsi", "sub~rax,used", "add~rdx,used", "mov~[rsp+0],rdx", "setb~dl", "cmp~rax,rsi", "movzx~edx,dl", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 7, 12, 0.0769656699889258, ["test    rdx, rdx", "jnz     loc_12AD5"], ["test~rdx,rdx", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 8, 11, 0.043743078626799554, ["mov     rax, 555555555555554h", "cmp     n_0, rax", "ja      short loc_12AD5"], ["mov~rax,0", "cmp~n_0,rax", "ja~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 7, 2, 0.10575858250276854, ["cmp     [rsp+78h+entries], 0", "jz      loc_12B05"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 4, 6, 0.028792912513842746, ["cmp     byte ptr [dp_0+14h], 2Eh ; '.'", "jz      short loc_128E0"], ["cmp~[yte ptr [dp_0+0],0", "jz~FOO"]]], "func_feature": [17, 20, 50, 1, 44, 65, 1, 213, 0.07824, 1, 17], "succs": [[30], [0, 20], [9, 28], [2, 31], [38, 15], [35, 4], [35, 4], [14, 39], [25, 7], [17, 13], [36], [10], [10], [18], [24], [42, 36], [16, 19], [16], [32], [18], [35], [34, 39], [21], [21, 22], [37], [24, 39], [43, 5], [5], [33, 29], [32], [], [30], [30], [32], [11, 39], [26, 3], [35], [35], [40, 37], [], [8, 39], [12, 39], [41, 23], [27, 6]], "fname": "streamsavedir", "n_num": 44}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 2, 8, 1, 3, 0, 0, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     dirp, rax", "mov     rdi, name_space; ptr", "call    free", "xor     ebp, ebp", "mov     [rbx], r12d", "jmp     short loc_12B7C"], ["call~FOO", "mov~r12d,<TAG>", "mov~dirp,rax", "mov~rdi,name_space", "call~FOO", "xor~ebp,ebp", "mov~<TAG>,r12d", "jmp~FOO"]], [0, 0, 2, 0, 2, 9, 1, 3, 1, 0, 0.125, ["mov     esi, ebp; option", "mov     rbx, dirp", "mov     rdi, dirp; dirp", "call    streamsavedir", "mov     rdi, dirp; dirp", "mov     option, rax", "call    _closedir", "test    eax, eax", "jnz     short loc_12B90"], ["mov~esi,ebp", "mov~rbx,dirp", "mov~rdi,dirp", "call~FOO", "mov~rdi,dirp", "mov~option,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     ebp, esi", "push    rbx", "call    opendir_safer", "test    dirp, dirp", "jz      short loc_12B88"], ["push~r12", "push~rbp", "mov~ebp,esi", "push~rbx", "call~FOO", "test~dirp,dirp", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.041666666666666664, ["xor     ebp, ebp", "jmp     short loc_12B7C"], ["xor~ebp,ebp", "jmp~FOO"]]], "func_feature": [5, 4, 9, 0, 5, 6, 1, 31, 0.03333, 0, 0], "succs": [[3], [0, 3], [1, 4], [], [3]], "fname": "savedir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 6, 1, 2, 13, 2, 3, 0, 0, 0.0, ["push    rbx", "mov     flags, tmpl; filename", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "mov     ebx, eax", "call    ___errno_location", "test    ebx, ebx", "jz      short loc_12C00"], ["push~rbx", "mov~flags,tmpl", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "call~FOO", "test~ebx,ebx", "jz~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 0, 2, 0.15, ["mov     dword ptr [rax], 11h", "mov     eax, 0FFFFFFFFh"], ["mov~<TAG>,0", "mov~eax,0"]], [1, 0, 5, 0, 0, 3, 0, 1, 0, 3, 0.03333333333333333, ["mov     edx, [rax]", "cmp     edx, 4Bh ; 'K'", "jz      short loc_12C00"], ["mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.26666666666666666, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_12C27"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 0, 2, 0.05, ["xor     eax, eax", "cmp     edx, 2", "setnz   al", "neg     eax", "jmp     short loc_12C0B"], ["xor~eax,eax", "cmp~edx,0", "setnz~al", "neg~eax", "jmp~FOO"]]], "func_feature": [3, 4, 7, 1, 7, 8, 0, 30, 0.07143, 1, 2], "succs": [[1, 2], [4], [1, 6], [], [3, 5], [], [4]], "fname": "try_nocreate", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     esi, 1C0h; mode", "jmp     _mkdir"], ["mov~esi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_dir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 1, 1, 0, 0, 6, 3, 1, 0, 0, 0.0, ["mov     esi, [openflags]", "mov     edx, 180h", "xor     eax, eax", "and     sil, 3Ch", "or      sil, 0C2h; oflag", "jmp     _open"], ["mov~esi,<TAG>", "mov~edx,<STR>", "xor~eax,eax", "and~sil,0", "or~sil,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 3, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "try_file", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.004761904761904762, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_12D75"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 12, 0, 1, 6, 2, 2, 2, 0, 0.10476190476190478, ["xor     edi, edi; name", "mov     esi, 6; bytes_bound", "call    randint_all_new", "test    rax, rax", "mov     suffixlen, rax", "jz      loc_12D9B"], ["xor~edi,edi", "mov~esi,0", "call~FOO", "test~rax,rax", "mov~suffixlen,rax", "jz~FOO"]], [1, 0, 15, 1, 2, 22, 0, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r15, tmpl", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 28h", "mov     [rsp+58h+fd], args_0", "mov     [rsp+58h+var_58], tmpl", "mov     [rsp+58h+tryfunc], tryfunc_0", "call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "mov     rdi, tmpl; s", "mov     [rsp+58h+save_errno], eax", "call    _strlen", "movsxd  rsi, ebx", "lea     rdx, [rsi+6]", "cmp     len, rdx", "jb      loc_12D8D"], ["push~r15", "push~r14", "mov~r15,tmpl", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,0", "mov~[rsp+0],args_0", "mov~<TAG>,tmpl", "mov~[rsp+0],tryfunc_0", "call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "mov~rdi,tmpl", "mov~[rsp+0],eax", "call~FOO", "movsxd~rsi,ebx", "lea~rdx,[rsi+0]", "cmp~len,rdx", "jb~FOO"]], [1, 0, 14, 1, 1, 7, 0, 1, 1, 0, 0.05714285714285715, ["sub     len, rsi", "lea     rsi, aSimpleBackupSu+13h; accept", "lea     rbp, [tmpl+rax-6]", "mov     rdi, rbp; s", "call    _strspn", "cmp     rax, 5", "jbe     loc_12D8D"], ["sub~len,rsi", "lea~rsi,<TAG>", "lea~rbp,[tmpl+0]", "mov~rdi,rbp", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, 0, 0.0, ["add     rsp, 28h", "mov     eax, edx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,edx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 0, 1, 5, 0, 2, 9, 0, 0.0071428571428571435, ["mov     rdi, rand_src; s", "call    randint_all_free", "mov     dword ptr [r14], 11h", "mov     edx, 0FFFFFFFFh", "jmp     short loc_12D75"], ["mov~rdi,rand_src", "call~FOO", "mov~<TAG>,0", "mov~edx,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 1, 0, 0.009523809523809525, ["mov     dword ptr [r14], 16h", "mov     edx, 0FFFFFFFFh", "jmp     short loc_12D75"], ["mov~<TAG>,0", "mov~edx,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 7, 0, 1, 8, 0, 0.030952380952380953, ["mov     rdi, rand_src; s", "mov     dword ptr [rsp+58h+fd], edx", "mov     dword ptr [rsp+58h+var_58], ecx", "call    randint_all_free", "mov     ecx, dword ptr [rsp+58h+var_58]", "mov     edx, dword ptr [rsp+58h+fd]", "mov     [r14], ecx"], ["mov~rdi,rand_src", "mov~[word ptr [rsp+0],edx", "mov~<TAG>,ecx", "call~FOO", "mov~ecx,<TAG>", "mov~edx,[word ptr [rsp+0]", "mov~<TAG>,ecx"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, 0, 0.0071428571428571435, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_12D5C"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 7, 0, 0.11904761904761905, ["mov     ecx, [r14]", "cmp     ecx, 11h", "jnz     short loc_12D86"], ["mov~ecx,<TAG>", "cmp~ecx,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 3, 0, 0, 3, 0, 0.1285714285714286, ["lea     r12, letters; \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM\"...", "mov     r13d, 3A2F8h", "nop     dword ptr [rax]"], ["lea~r12,<TAG>", "mov~r13d,0", "nop~<TAG>"]], [0, 0, 10, 0, 1, 7, 1, 1, 6, 0, 0.2142857142857143, ["mov     rsi, [rsp+58h+fd]", "mov     rdi, [rsp+58h+var_58]", "mov     rax, [rsp+58h+tryfunc]", "call    rax", "test    eax, eax", "mov     edx, eax", "jns     short loc_12D53"], ["mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~rax,[rsp+0]", "call~rax", "test~eax,eax", "mov~edx,eax", "jns~FOO"]], [3, 0, 10, 1, 1, 8, 0, 2, 5, 0, 0.20952380952380956, ["mov     esi, 3Dh ; '='; genmax", "mov     rdi, rand_src; s", "call    randint_genmax", "movzx   eax, byte ptr [r12+rax]", "mov     [XXXXXX+i+0], al", "add     i, 1", "cmp     i, 6", "jnz     short loc_12CF8"], ["mov~esi,0", "mov~rdi,rand_src", "call~FOO", "movzx~eax,<TAG>", "mov~[XXXXXX+0],al", "add~i,0", "cmp~i,0", "jnz~FOO"]], [1, 0, 10, 1, 0, 2, 0, 1, 8, 0, 0.07380952380952381, ["sub     r13d, 1", "jnz     short loc_12CF0"], ["sub~r13d,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 7, 0, 0.05714285714285715, ["mov     eax, [rsp+58h+save_errno]", "mov     [r14], eax", "mov     ecx, eax"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~ecx,eax"]], [0, 0, 10, 0, 0, 2, 1, 0, 4, 0, 0.20476190476190478, ["xor     r15d, r15d", "nop     dword ptr [rax+rax+00h]"], ["xor~r15d,r15d", "nop~[word ptr [rax+0]"]]], "func_feature": [8, 4, 16, 1, 16, 22, 2, 91, 0.07679, 2, 5], "succs": [[4], [0, 10], [3, 6], [1, 6], [], [4], [4], [4], [7], [8, 13], [15], [9, 14], [11, 12], [5, 15], [7], [12]], "fname": "try_tempname_len_0", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 15, 2, 1, 10, 0, 2, 0, 0, 0.05416666666666667, ["sub     len, x_suffix_len", "mov     rbx, rax", "sub     rbx, rsi", "lea     rsi, aSimpleBackupSu+13h; accept", "lea     rax, [tmpl+rbx]", "mov     rdi, rax; s", "mov     [rsp+68h+fd], rax", "call    _strspn", "cmp     x_suffix_len, rax", "ja      loc_12F0B"], ["sub~len,x_suffix_len", "mov~rbx,rax", "sub~rbx,rsi", "lea~rsi,<TAG>", "lea~rax,<TAG>", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "cmp~x_suffix_len,rax", "ja~FOO"]], [1, 0, 16, 1, 2, 23, 0, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, tmpl", "push    r13", "push    r12", "mov     r14, x_suffix_len", "push    rbp", "push    rbx", "mov     ebp, esi", "sub     rsp, 38h", "mov     [rsp+68h+args], args_0", "mov     [rsp+68h+var_68], tmpl", "mov     [rsp+68h+tryfunc], tryfunc_0", "call    ___errno_location", "mov     [rsp+68h+p_saved_errno], rax", "mov     eax, [rax]", "mov     rdi, tmpl; s", "mov     [rsp+68h+save_errno], eax", "call    _strlen", "movsxd  rsi, ebp", "lea     rdx, [rsi+x_suffix_len]", "cmp     rdx, len", "ja      loc_12F0B"], ["push~r15", "push~r14", "mov~r15,tmpl", "push~r13", "push~r12", "mov~r14,x_suffix_len", "push~rbp", "push~rbx", "mov~ebp,esi", "sub~rsp,0", "mov~[rsp+0],args_0", "mov~<TAG>,tmpl", "mov~[rsp+0],tryfunc_0", "call~FOO", "mov~[rsp+0],rax", "mov~eax,<TAG>", "mov~rdi,tmpl", "mov~[rsp+0],eax", "call~FOO", "movsxd~rsi,ebp", "lea~rdx,<TAG>", "cmp~rdx,len", "ja~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 4, -1, 0.2125, ["test    x_suffix_len, x_suffix_len", "mov     r15, [rsp+68h+fd]", "jz      short loc_12E87"], ["test~x_suffix_len,x_suffix_len", "mov~r15,[rsp+0]", "jz~FOO"]], [1, 0, 11, 1, 0, 2, 0, 1, 7, -1, 0.08541666666666667, ["sub     r13d, 1", "jnz     short loc_12E58"], ["sub~r13d,0", "jnz~FOO"]], [1, 0, 11, 2, 0, 6, 0, 0, 3, -1, 0.125, ["mov     rand_src, [rsp+68h+var_68]", "lea     r12, letters; \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM\"...", "mov     r13d, 3A2F8h", "add     rax, x_suffix_len", "add     rbx, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~rand_src,<TAG>", "lea~r12,<TAG>", "mov~r13d,0", "add~rax,x_suffix_len", "add~rbx,rax", "nop~[word ptr [rax+0]"]], [0, 0, 11, 0, 0, 1, 0, 0, 5, -1, 0.03333333333333333, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "mov     eax, edx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     x_suffix_len", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,edx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~x_suffix_len", "pop~r15", "retn"]], [2, 0, 1, 0, 1, 6, 0, 2, 8, -1, 0.00625, ["mov     rdi, rand_src; s", "call    randint_all_free", "mov     rax, [rsp+68h+p_saved_errno]", "mov     edx, 0FFFFFFFFh", "mov     dword ptr [rax], 11h", "jmp     short loc_12EF3"], ["mov~rdi,rand_src", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.008333333333333333, ["mov     rax, [rsp+68h+p_saved_errno]", "mov     edx, 0FFFFFFFFh", "mov     dword ptr [rax], 16h", "jmp     short loc_12EF3"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.004166666666666667, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_12EF3"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 8, 0, 1, 7, -1, 0.03125, ["mov     rdi, rand_src; s", "mov     dword ptr [rsp+68h+fd], edx", "mov     dword ptr [rsp+68h+var_68], ecx", "call    randint_all_free", "mov     rax, [rsp+68h+p_saved_errno]", "mov     ecx, dword ptr [rsp+68h+var_68]", "mov     edx, dword ptr [rsp+68h+fd]", "mov     [rax], ecx"], ["mov~rdi,rand_src", "mov~[word ptr [rsp+0],edx", "mov~<TAG>,ecx", "call~FOO", "mov~rax,[rsp+0]", "mov~ecx,<TAG>", "mov~edx,[word ptr [rsp+0]", "mov~<TAG>,ecx"]], [1, 0, 11, 0, 0, 4, 0, 1, 6, -1, 0.12916666666666665, ["mov     fd_0, [rsp+68h+p_saved_errno]", "mov     ecx, [rax]", "cmp     ecx, 11h", "jnz     short loc_12F04"], ["mov~fd_0,[rsp+0]", "mov~ecx,<TAG>", "cmp~ecx,0", "jnz~FOO"]], [0, 0, 11, 0, 1, 7, 1, 1, 5, -1, 0.225, ["mov     rsi, [rsp+68h+args]", "mov     rdi, [rsp+68h+var_68]", "mov     rax, [rsp+68h+tryfunc]", "call    rax", "test    eax, eax", "mov     edx, eax", "jns     short loc_12EC9"], ["mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~rax,[rsp+0]", "call~rax", "test~eax,eax", "mov~edx,eax", "jns~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.00625, ["mov     edx, 0FFFFFFFFh", "jmp     short done"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 0, 0, 6, -1, 0.058333333333333334, ["mov     rcx, [rsp+68h+p_saved_errno]", "mov     eax, [rsp+68h+save_errno]", "mov     [rcx], eax", "mov     ecx, eax"], ["mov~rcx,[rsp+0]", "mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~ecx,eax"]], [0, 0, 13, 0, 1, 6, 2, 2, 2, 1, 0.1, ["xor     edi, edi; name", "mov     rsi, x_suffix_len; bytes_bound", "call    randint_all_new", "test    rax, rax", "mov     suffixlen, rax", "jz      loc_12F1D"], ["xor~edi,edi", "mov~rsi,x_suffix_len", "call~FOO", "test~rax,rax", "mov~suffixlen,rax", "jz~FOO"]], [2, 0, 11, 1, 1, 8, 0, 2, 6, -1, 0.0375, ["mov     esi, 3Dh ; '='; genmax", "mov     rdi, rand_src; s", "add     r15, 1", "call    randint_genmax", "movzx   eax, byte ptr [r12+rax]", "mov     [r15-1], al", "cmp     r15, rbx", "jnz     short loc_12E68"], ["mov~esi,0", "mov~rdi,rand_src", "add~r15,0", "call~FOO", "movzx~eax,<TAG>", "mov~[r15-1]+0],al", "cmp~r15,rbx", "jnz~FOO"]]], "func_feature": [8, 4, 19, 1, 17, 24, 5, 105, 0.06569, 2, 8], "succs": [[8, 15], [0, 8], [12, 5], [2, 7], [2], [16], [], [6], [6], [6], [6], [3, 13], [11, 14], [10], [10], [9, 4], [16, 12]], "fname": "try_tempname_len", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.13333333333333333, ["cmp     ecx, 2", "jz      short loc_12F50"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 4, 0, 1, 0, 1, 0.0, ["sub     rsp, 18h", "cmp     ecx, 1", "mov     [rsp+18h+args], edx", "jz      short loc_12F90"], ["sub~rsp,0", "cmp~ecx,0", "mov~[rsp+0],edx", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, -1, 0.13333333333333333, ["test    ecx, ecx", "jz      short loc_12F70"], ["test~ecx,ecx", "jz~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["lea     flags, [rsp+18h+args]; args", "lea     kind, try_nocreate; tryfunc", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags,[rsp+0]", "lea~kind,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    gen_tempname_len_0"], ["call~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 1, 0, 0.0, ["lea     flags, [rsp+18h+args]; args", "lea     kind, try_dir; tryfunc", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags,[rsp+0]", "lea~kind,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [1, 0, 0, 1, 1, 5, 0, 1, 3, -1, 0.0, ["lea     flags, [rsp+18h+args]; args", "lea     kind, try_file; tryfunc", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags,[rsp+0]", "lea~kind,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [4, 1, 7, 0, 7, 6, 0, 24, 0.0381, 3, 4], "succs": [[2, 3], [0, 5], [4, 6], [], [], [], []], "fname": "gen_tempname_len", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.041666666666666664, ["lea     kind, try_nocreate; tryfunc"], ["lea~kind,<TAG>"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 3, 0.05555555555555555, ["cmp     ecx, 2", "jz      short loc_12FE0"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 1, 0.16666666666666666, ["lea     flags, [rsp+18h+args]; args", "call    try_tempname_len_0", "mov     rsi, [rsp+18h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_13029"], ["lea~flags,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.041666666666666664, ["lea     kind, try_dir", "jmp     short loc_12FE7"], ["lea~kind,<TAG>", "jmp~FOO"]], [2, 0, 9, 1, 0, 7, 1, 1, 0, 3, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "cmp     ecx, 1", "mov     [rsp+18h+args], edx", "jz      short loc_13020"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~ecx,0", "mov~[rsp+0],edx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 2, 3, 0.05555555555555555, ["test    ecx, ecx", "jz      short loc_13010"], ["test~ecx,ecx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    gen_tempname_len_0"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.041666666666666664, ["lea     kind, try_file", "jmp     short loc_12FE7"], ["lea~kind,<TAG>", "jmp~FOO"]]], "func_feature": [3, 3, 9, 1, 10, 11, 0, 25, 0.04028, 4, 2], "succs": [[3], [0, 7], [], [2, 6], [3], [1, 4], [], [8, 9], [], [3]], "fname": "gen_tempname", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     try_tempname_len_0"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "try_tempname", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_13072"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 2, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_info_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b]", "cmp     [a], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_info_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[7, 0, 47, 12, 0, 31, 2, 1, 0, 0, 0.06481481481481481, ["mov     r8d, 66666667h", "mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      edi, ecx", "jnz     loc_13AC1"], ["mov~r8d,0", "mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~edi,ecx", "jnz~FOO"]], [5, 0, 48, 6, 0, 18, 0, 1, 17, 10, 0.07083333333333333, ["mov     eax, dword ptr [rsp+148h+path]", "mov     ecx, 14F8B589h", "imul    ecx", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 0Dh", "mov     esi, edx", "sub     esi, dword ptr [rsp+148h+var_120]", "imul    ecx", "mov     eax, r14d", "sar     edx, 0Dh", "mov     edi, edx", "sub     edi, [rsp+148h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 0Dh", "sub     ecx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], offset loc_186A0", "jle     loc_13AC1"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r14d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [1, 0, 60, 0, 0, 4, 0, 1, 9, 10, 0.14953703703703702, ["cmp     dword ptr [rsp+148h+dst_name], 0Ah", "mov     rax, [r11+48h]", "mov     [rsp+148h+var_110], rax", "jle     loc_13A8D"], ["cmp~[word ptr [rsp+0],0", "mov~rax,[r11+0]", "mov~[rsp+0],rax", "jle~FOO"]], [7, 0, 61, 12, 0, 46, 2, 1, 8, 11, 0.15324074074074073, ["mov     rsi, [r11+50h]", "mov     r8d, 66666667h", "mov     rdi, [r11+70h]", "mov     eax, esi", "mov     [rsp+148h+path], rsi", "mov     [rsp+148h+dst_stat], rdi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "mov     dword ptr [rsp+148h+var_120], eax", "sar     edx, 2", "mov     ecx, edx", "sub     ecx, eax", "lea     eax, [rcx+rcx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "mov     [rsp+148h+var_118], eax", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edi, edx", "mov     edx, dword ptr [rsp+148h+dst_stat]", "add     eax, eax", "sub     edx, eax", "mov     eax, r14d", "or      esi, edx", "imul    r8d", "mov     eax, r14d", "mov     dword ptr [rsp+148h+var_110], esi", "sar     eax, 1Fh", "mov     [rsp+148h+var_114], eax", "sar     edx, 2", "mov     esi, edx", "mov     edx, r14d", "sub     esi, eax", "lea     eax, [rsi+rsi*4]", "add     eax, eax", "sub     edx, eax", "mov     eax, edx", "mov     edx, dword ptr [rsp+148h+var_110]", "or      edx, eax", "jnz     loc_139E8"], ["mov~rsi,[r11+0]", "mov~r8d,0", "mov~rdi,[r11+0]", "mov~eax,esi", "mov~[rsp+0],rsi", "mov~[rsp+0],rdi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "mov~[word ptr [rsp+0],eax", "sar~edx,0", "mov~ecx,edx", "sub~ecx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "mov~[rsp+0],eax", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edi,edx", "mov~edx,[word ptr [rsp+0]", "add~eax,eax", "sub~edx,eax", "mov~eax,r14d", "or~esi,edx", "imul~,r8d", "mov~eax,r14d", "mov~[word ptr [rsp+0],esi", "sar~eax,0", "mov~[rsp+0],eax", "sar~edx,0", "mov~esi,edx", "mov~edx,r14d", "sub~esi,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edx,eax", "mov~eax,edx", "mov~edx,[word ptr [rsp+0]", "or~edx,eax", "jnz~FOO"]], [0, 0, 78, 0, 0, 3, 0, 1, 2, 17, 0.022376543209876542, ["lea     rax, [rbp-1]", "cmp     r13, rax", "jl      loc_13208"], ["lea~rax,[rbp-1]+0]", "cmp~r13,rax", "jl~FOO"]], [0, 0, 80, 0, 0, 7, 1, 1, 1, 18, 0.011265432098765432, ["cmp     r13, rbp", "setz    r15b", "cmp     r14d, r12d", "setz    al", "and     al, r15b", "mov     byte ptr [rsp+148h+filename], al", "jnz     loc_13200"], ["cmp~r13,rbp", "setz~r15b", "cmp~r14d,r12d", "setz~al", "and~al,r15b", "mov~<TAG>,al", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 19, -1, 0.07824074074074074, ["cmp     r11d, 0Ah", "jz      short loc_139BF"], ["cmp~r11d,0", "jz~FOO"]], [3, 0, 18, 3, 0, 10, 2, 1, 18, 1, 0.11604938271604938, ["mov     ecx, dword ptr [rsp+148h+stat_buf.st_mtim.tv_sec]", "mov     esi, 0Ah", "and     ecx, 1", "imul    ecx, 3B9ACA00h", "add     ecx, dword ptr [rsp+148h+stat_buf.st_mtim.tv_nsec]", "mov     eax, ecx", "cdq", "idiv    esi", "test    edx, edx", "jnz     loc_13B4D"], ["mov~ecx,[word ptr [rsp+0]", "mov~esi,0", "and~ecx,0", "imul~ecx,,0", "add~ecx,[word ptr [rsp+0]", "mov~eax,ecx", "cdq~,", "idiv~,esi", "test~edx,edx", "jnz~FOO"]], [5, 0, 36, 6, 0, 17, 0, 1, 25, 10, 0.02700617283950617, ["mov     eax, dword ptr [rsp+148h+path]", "mov     esi, 44B82FA1h", "imul    esi", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 1Ch", "mov     r8d, edx", "sub     r8d, dword ptr [rsp+148h+var_120]", "imul    esi", "mov     eax, r14d", "sar     edx, 1Ch", "mov     ecx, edx", "sub     ecx, [rsp+148h+var_118]", "imul    esi", "sar     edx, 1Ch", "sub     edx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], 3B9ACA00h", "jle     loc_13AE1"], ["mov~eax,[word ptr [rsp+0]", "mov~esi,0", "imul~,esi", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~r8d,edx", "sub~r8d,[word ptr [rsp+0]", "imul~,esi", "mov~eax,r14d", "sar~edx,0", "mov~ecx,edx", "sub~ecx,[rsp+0]", "imul~,esi", "sar~edx,0", "sub~edx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 38, 12, 0, 31, 2, 1, 24, 10, 0.03148148148148148, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "mov     r8d, ecx", "or      edi, esi", "sar     r8d, 1Fh", "sar     edx, 2", "sub     edx, r8d", "mov     r8d, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      r8d, ecx", "jnz     loc_13AD9"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "mov~r8d,ecx", "or~edi,esi", "sar~r8d,0", "sar~edx,0", "sub~edx,r8d", "mov~r8d,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~r8d,ecx", "jnz~FOO"]], [4, 0, 30, 0, 0, 6, 1, 1, 28, 8, 0.0038580246913580245, ["mov     dword ptr [rax+8], 77359400h", "mov     rax, rbp", "mov     byte ptr [rsp+148h+filename], 1", "and     rax, 0FFFFFFFFFFFFFFFEh", "mov     r11d, 77359400h", "jmp     loc_13841"], ["mov~[word ptr [rax+0],0", "mov~rax,rbp", "mov~<TAG>,0", "and~rax,0", "mov~r11d,0", "jmp~FOO"]], [1, 0, 32, 0, 0, 6, 3, 1, 27, 9, 0.014506172839506172, ["mov     rax, [rsp+148h+var_110]", "or      rax, r13", "or      rax, [r11+68h]", "test    al, 1", "mov     rax, [rsp+148h+var_140]", "jz      loc_13A70"], ["mov~rax,[rsp+0]", "or~rax,r13", "or~rax,[r11+0]", "test~al,0", "mov~rax,[rsp+0]", "jz~FOO"]], [5, 0, 57, 6, 0, 18, 0, 1, 11, 10, 0.08425925925925926, ["mov     eax, dword ptr [rsp+148h+path]", "mov     ecx, 51EB851Fh", "imul    ecx", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 5", "sub     edx, dword ptr [rsp+148h+var_120]", "mov     esi, edx", "imul    ecx", "mov     eax, r14d", "sar     edx, 5", "sub     edx, [rsp+148h+var_118]", "mov     edi, edx", "imul    ecx", "mov     ecx, edx", "sar     ecx, 5", "sub     ecx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], 64h ; 'd'", "jle     loc_13AA9"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "sub~edx,[word ptr [rsp+0]", "mov~esi,edx", "imul~,ecx", "mov~eax,r14d", "sar~edx,0", "sub~edx,[rsp+0]", "mov~edi,edx", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 59, 12, 0, 30, 2, 1, 10, 10, 0.08333333333333333, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, ecx", "imul    r8d", "mov     eax, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "or      edi, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "or      edi, esi", "jnz     loc_13A8D"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,ecx", "imul~,r8d", "mov~eax,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "or~edi,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "or~edi,esi", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 19, 0, 0.02175925925925926, ["mov     r11d, ebx", "jmp     loc_139BF"], ["mov~r11d,ebx", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 22, 9, 0.009567901234567902, ["mov     r11d, 989680h", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [5, 0, 42, 6, 0, 18, 0, 1, 21, 10, 0.05262345679012346, ["mov     eax, dword ptr [rsp+148h+path]", "mov     ecx, 6B5FCA6Bh", "imul    ecx", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 16h", "mov     esi, edx", "sub     esi, dword ptr [rsp+148h+var_120]", "imul    ecx", "mov     eax, r14d", "sar     edx, 16h", "mov     edi, edx", "sub     edi, [rsp+148h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 16h", "sub     ecx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], 989680h", "jle     loc_13AD1"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r14d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 41, 12, 0, 31, 2, 1, 22, 10, 0.044444444444444446, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_13AD1"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 18, 9, 0.009567901234567902, ["mov     r11d, offset loc_186A0", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.008487654320987654, ["mov     ebx, 0FFFFFFFFh", "jmp     short loc_131CF"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 1, -1, 0.05169753086419753, ["cmp     r13, rbp", "jl      short loc_13208"], ["cmp~r13,rbp", "jl~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.011574074074074073, ["cmp     r14d, r9d", "jl      short loc_13208"], ["cmp~r14d,r9d", "jl~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 14, 5, 0.1705246913580247, ["cmp     r13, rax", "jl      loc_13208"], ["cmp~r13,rax", "jl~FOO"]], [0, 0, 24, 2, 0, 7, 0, 1, 16, 4, 0.00038580246913580245, ["mov     eax, r9d", "cdq", "idiv    r11d", "mov     eax, r12d", "sub     eax, edx", "cmp     r14d, eax", "jl      loc_13208"], ["mov~eax,r9d", "cdq~,", "idiv~,r11d", "mov~eax,r12d", "sub~eax,edx", "cmp~r14d,eax", "jl~FOO"]], [0, 0, 77, 0, 0, 3, 0, 1, 3, 16, 0.03341049382716049, ["lea     rax, [r13-1]", "cmp     rbp, rax", "jl      loc_131CF"], ["lea~rax,[r13-1]+0]", "cmp~rbp,rax", "jl~FOO"]], [0, 0, 35, 0, 0, 3, 2, 1, 26, 10, 0.016666666666666666, ["or      ecx, r8d", "or      ecx, edx", "jnz     loc_13AE1"], ["or~ecx,r8d", "or~ecx,edx", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 0, 10, 9, 0.07407407407407407, ["mov     r11d, 0Ah", "nop     dword ptr [rax+rax+00h]"], ["mov~r11d,0", "nop~[word ptr [rax+0]"]], [5, 0, 54, 6, 0, 18, 0, 1, 13, 10, 0.08163580246913581, ["mov     eax, dword ptr [rsp+148h+path]", "mov     ecx, 10624DD3h", "imul    ecx", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 6", "mov     esi, edx", "sub     esi, dword ptr [rsp+148h+var_120]", "imul    ecx", "mov     eax, r14d", "sar     edx, 6", "mov     edi, edx", "sub     edi, [rsp+148h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 6", "sub     ecx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], 3E8h", "jle     loc_13AB1"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r14d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 56, 12, 0, 30, 2, 1, 12, 10, 0.08148148148148147, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      edi, ecx", "jnz     loc_13AA9"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~edi,ecx", "jnz~FOO"]], [3, 0, 15, 0, 0, 4, 0, 1, 20, -1, 0.047839506172839504, ["mov     r8d, 9", "mov     esi, 0Ah", "mov     edi, 0Ah", "jmp     short loc_139A1"], ["mov~r8d,0", "mov~esi,0", "mov~edi,0", "jmp~FOO"]], [0, 0, 15, 2, 0, 8, 1, 1, 21, -1, 0.04104938271604938, ["mov     eax, ecx", "cdq", "idiv    edi", "cdq", "mov     ecx, eax", "idiv    edi", "test    edx, edx", "jnz     loc_13B45"], ["mov~eax,ecx", "cdq~,", "idiv~,edi", "cdq~,", "mov~ecx,eax", "idiv~,edi", "test~edx,edx", "jnz~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 23, -1, 0.0010802469135802468, ["imul    esi, 0Ah", "cmp     esi, r11d", "jz      short loc_139BF"], ["imul~esi,,0", "cmp~esi,r11d", "jz~FOO"]], [6, 0, 53, 12, 0, 31, 2, 1, 14, 10, 0.07777777777777778, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_13AB1"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 20, 9, 0.009567901234567902, ["mov     r11d, 0F4240h", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [5, 3, 45, 6, 0, 29, 0, 1, 19, 10, 0.06265432098765432, ["mov     rsi, [rsp+148h+path]", "mov     ecx, 431BDE83h", "mov     eax, esi", "mov     edi, esi", "imul    ecx", "sar     edi, 1Fh", "mov     dword ptr [rsp+148h+var_120], edi", "sar     edx, 12h", "sub     edx, edi", "mov     rdi, [rsp+148h+dst_stat]", "mov     esi, edx", "mov     eax, edi", "imul    ecx", "mov     eax, edi", "sar     eax, 1Fh", "mov     [rsp+148h+var_118], eax", "sar     edx, 12h", "mov     edi, edx", "sub     edi, eax", "mov     eax, r14d", "imul    ecx", "mov     ecx, edx", "mov     edx, r14d", "sar     edx, 1Fh", "sar     ecx, 12h", "sub     ecx, edx", "cmp     dword ptr [rsp+148h+dst_name], 0F4240h", "mov     [rsp+148h+var_114], edx", "jle     loc_13AC9"], ["mov~rsi,[rsp+0]", "mov~ecx,0", "mov~eax,esi", "mov~edi,esi", "imul~,ecx", "sar~edi,0", "mov~[word ptr [rsp+0],edi", "sar~edx,<STR>", "sub~edx,edi", "mov~rdi,[rsp+0]", "mov~esi,edx", "mov~eax,edi", "imul~,ecx", "mov~eax,edi", "sar~eax,0", "mov~[rsp+0],eax", "sar~edx,<STR>", "mov~edi,edx", "sub~edi,eax", "mov~eax,r14d", "imul~,ecx", "mov~ecx,edx", "mov~edx,r14d", "sar~edx,0", "sar~ecx,<STR>", "sub~ecx,edx", "cmp~[word ptr [rsp+0],0", "mov~[rsp+0],edx", "jle~FOO"]], [6, 0, 44, 12, 0, 31, 2, 1, 20, 10, 0.05555555555555555, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_13AC9"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 22, -1, 0.01990740740740741, ["sub     r8d, 1", "jnz     short loc_13999"], ["sub~r8d,0", "jnz~FOO"]], [5, 0, 51, 6, 0, 18, 0, 1, 15, 10, 0.07716049382716049, ["mov     eax, dword ptr [rsp+148h+path]", "mov     ecx, 68DB8BADh", "imul    ecx", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 0Ch", "mov     esi, edx", "sub     esi, dword ptr [rsp+148h+var_120]", "imul    ecx", "mov     eax, r14d", "sar     edx, 0Ch", "mov     edi, edx", "sub     edi, [rsp+148h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 0Ch", "sub     ecx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], 2710h", "jle     loc_13AB9"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r14d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 8, 0.18348765432098765, ["mov     rax, [rsp+148h+var_140]", "mov     [rax+8], r11d", "mov     rax, rbp", "jmp     loc_13841"], ["mov~rax,[rsp+0]", "mov~[rax+0],r11d", "mov~rax,rbp", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 12, 9, 0.009567901234567902, ["mov     r11d, 64h ; 'd'", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 14, 9, 0.009567901234567902, ["mov     r11d, 3E8h", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 16, 9, 0.009567901234567902, ["mov     r11d, 2710h", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 24, 9, 0.009567901234567902, ["mov     r11d, 5F5E100h", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 26, 9, 0.006481481481481481, ["mov     r11d, 3B9ACA00h", "jmp     short loc_13A98"], ["mov~r11d,0", "jmp~FOO"]], [0, 0, 76, 0, 0, 5, 1, 1, 4, 15, 0.04398148148148148, ["mov     src_stat, cs:ht_5307", "mov     r10, dst_name_0", "mov     r11, dst_stat_0", "test    rdx, rdx", "jz      loc_13A00"], ["mov~src_stat,<TAG>", "mov~r10,dst_name_0", "mov~r11,dst_stat_0", "test~rdx,rdx", "jz~FOO"]], [2, 0, 81, 1, 0, 18, 2, 1, 0, 19, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, ecx", "sub     rsp, 118h", "mov     r12, [src_stat+60h]", "mov     r13, [dst_stat_0+58h]", "mov     rax, fs:28h", "mov     [rsp+148h+var_40], rax", "xor     eax, eax", "and     ebx, 1", "mov     rbp, [src_stat+58h]", "mov     r14, [dst_stat_0+60h]", "mov     r9d, r12d", "jz      loc_131B8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,ecx", "sub~rsp,0", "mov~r12,[src_stat+0]", "mov~r13,[dst_stat_0+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "mov~rbp,[src_stat+0]", "mov~r14,[dst_stat_0+0]", "mov~r9d,r12d", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 15, 4, 0.1603395061728395, ["jnz     short loc_13878"], ["jnz~FOO"]], [6, 0, 50, 12, 0, 31, 2, 1, 16, 10, 0.07222222222222222, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_13AB9"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 13, 6, 0.17916666666666667, ["cmp     r14d, r12d", "jl      short loc_13858"], ["cmp~r14d,r12d", "jl~FOO"]], [0, 0, 27, 0, 0, 2, 1, 1, 14, 6, 0.000462962962962963, ["test    r15b, r15b", "jnz     loc_131CF"], ["test~r15b,r15b", "jnz~FOO"]], [1, 0, 8, 2, 0, 12, 2, 0, 9, -1, 0.013271604938271604, ["xor     eax, eax", "cmp     esi, 77359400h", "setz    al", "not     eax", "cdqe", "and     rbp, rax", "mov     eax, r9d", "mov     r9d, r12d", "cdq", "idiv    esi", "sub     r9d, edx", "nop     dword ptr [rax+00000000h]"], ["xor~eax,eax", "cmp~esi,0", "setz~al", "not~eax", "cdqe~", "and~rbp,rax", "mov~eax,r9d", "mov~r9d,r12d", "cdq~,", "idiv~,esi", "sub~r9d,edx", "nop~[word ptr [rax+0]"]], [1, 0, 63, 0, 0, 4, 0, 1, 8, 12, 0.07669753086419753, ["cmp     byte ptr [rax+0Ch], 0", "mov     esi, [rax+8]", "mov     dword ptr [rsp+148h+dst_name], esi", "jz      loc_132EA"], ["cmp~[yte ptr [rax+0],0", "mov~esi,[rax+0]", "mov~[word ptr [rsp+0],esi", "jz~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 5, 15, 0.011419753086419753, ["mov     rsi, cs:new_dst_res_5308; entry", "test    rsi, rsi", "jz      loc_13210"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 75, 0, 1, 16, 2, 2, 5, 14, 0.04429012345679012, ["mov     r8, cs:data_freer; data_freer", "lea     rdx, dev_info_hash; hasher", "lea     options, dev_info_compare; comparator", "mov     [rsp+148h+dst_stat], dst_stat_0", "mov     [rsp+148h+dst_name], dst_name_0", "xor     esi, esi; tuning", "mov     edi, 10h; candidate", "mov     dword ptr [rsp+148h+var_140], r12d", "call    hash_initialize", "test    rax, rax", "mov     rdx, rax", "mov     cs:ht_5307, rax", "mov     r9d, dword ptr [rsp+148h+var_140]", "mov     r10, [rsp+148h+dst_name]", "mov     r11, [rsp+148h+dst_stat]", "jnz     loc_1312B"], ["mov~r8,<TAG>", "lea~rdx,<TAG>", "lea~options,<TAG>", "mov~[rsp+0],dst_stat_0", "mov~[rsp+0],dst_name_0", "xor~esi,esi", "mov~edi,0", "mov~[word ptr [rsp+0],r12d", "call~FOO", "test~rax,rax", "mov~rdx,rax", "mov~<TAG>,rax", "mov~r9d,[word ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 23, -1, 0.0007716049382716049, ["mov     r11d, 77359400h"], ["mov~r11d,0"]], [2, 0, 21, 0, 1, 18, 1, 2, 18, 3, 0.009567901234567902, ["mov     [rsp+148h+filename], r13", "mov     ecx, 100h; flags", "mov     rsi, r10; path", "movq    xmm0, [rsp+148h+filename]", "mov     [rsp+148h+filename], rdx", "movhps  xmm0, [rsp+148h+filename]", "mov     rdx, r15; times", "mov     edi, 0FFFFFF9Ch; fd", "mov     dword ptr [rsp+148h+path], r11d", "mov     dword ptr [rsp+148h+dst_stat], r8d", "mov     dword ptr [rsp+148h+dst_name], r9d", "movaps  [rsp+148h+var_E8], xmm0", "call    _utimensat", "mov     r8d, dword ptr [rsp+148h+dst_stat]", "mov     r9d, dword ptr [rsp+148h+dst_name]", "mov     r11d, dword ptr [rsp+148h+path]", "test    r8d, r8d", "jnz     loc_138EA"], ["mov~<TAG>,r13", "mov~ecx,0", "mov~rsi,r10", "movq~xmm0,<TAG>", "mov~<TAG>,rdx", "movhps~xmm0,<TAG>", "mov~rdx,r15", "mov~edi,0", "mov~[word ptr [rsp+0],r11d", "mov~[word ptr [rsp+0],r8d", "mov~[word ptr [rsp+0],r9d", "movaps~[rsp+0],xmm0", "call~FOO", "mov~r8d,[word ptr [rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [3, 0, 22, 0, 1, 22, 4, 2, 17, 2, 0.13503086419753085, ["lea     rcx, [rsp+148h+stat_buf]; stat_buf", "mov     rdx, r10; filename", "mov     r8d, 100h; flag", "mov     esi, 0FFFFFF9Ch; fildes", "mov     edi, 1; ver", "mov     dword ptr [rsp+148h+dst_stat], r11d", "mov     dword ptr [rsp+148h+dst_name], r9d", "mov     [rsp+148h+filename], r10", "call    ___fxstatat", "mov     rcx, [rsp+148h+stat_buf.st_mtim.tv_nsec]", "mov     r8d, eax", "mov     rax, [rsp+148h+stat_buf.st_mtim.tv_sec]", "movsxd  rdx, r14d", "mov     r10, [rsp+148h+filename]", "mov     r9d, dword ptr [rsp+148h+dst_name]", "mov     r11d, dword ptr [rsp+148h+dst_stat]", "xor     rcx, rdx", "xor     rax, r13", "or      rax, rcx", "movsxd  rcx, r8d", "or      rax, rcx", "jnz     loc_13AEE"], ["lea~rcx,[rsp+0]", "mov~rdx,r10", "mov~r8d,0", "mov~esi,0", "mov~edi,0", "mov~[word ptr [rsp+0],r11d", "mov~[word ptr [rsp+0],r9d", "mov~<TAG>,r10", "call~FOO", "mov~rcx,[rsp+0]", "mov~r8d,eax", "mov~rax,[rsp+0]", "movsxd~rdx,r14d", "mov~r10,<TAG>", "mov~r9d,[word ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "xor~rcx,rdx", "xor~rax,r13", "or~rax,rcx", "movsxd~rcx,r8d", "or~rax,rcx", "jnz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 9, -1, 0.045987654320987656, ["mov     rax, [rsp+148h+var_140]", "mov     [rax+8], ebx", "mov     byte ptr [rax+0Ch], 1", "jmp     loc_131B8"], ["mov~rax,[rsp+0]", "mov~[rax+0],ebx", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [2, 0, 30, 0, 0, 3, 0, 0, 28, 8, 0.0038580246913580245, ["mov     dword ptr [rax+8], 3B9ACA00h", "mov     r11d, 3B9ACA00h", "mov     rax, rbp"], ["mov~[word ptr [rax+0],0", "mov~r11d,0", "mov~rax,rbp"]], [2, 3, 39, 6, 0, 18, 0, 1, 23, 10, 0.04074074074074074, ["mov     eax, dword ptr [rsp+148h+path]", "mov     ecx, 55E63B89h", "imul    ecx", "mov     eax, dword ptr [rsp+148h+dst_stat]", "sar     edx, 19h", "mov     esi, edx", "sub     esi, dword ptr [rsp+148h+var_120]", "imul    ecx", "mov     eax, r14d", "sar     edx, 19h", "mov     edi, edx", "sub     edi, [rsp+148h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 19h", "sub     ecx, [rsp+148h+var_114]", "cmp     dword ptr [rsp+148h+dst_name], 5F5E100h", "jle     loc_13AD9"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,<STR>", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r14d", "sar~edx,<STR>", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,<STR>", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [0, 0, 66, 0, 1, 17, 1, 2, 7, 13, 0.024459876543209875, ["lea     rcx, [rsp+148h+entry]", "mov     rax, [r11]", "mov     rdi, rdx; table", "mov     [rsp+148h+var_120], r10", "mov     dword ptr [rsp+148h+path], r9d", "mov     rsi, rcx; entry", "mov     [rsp+148h+dst_stat], r11", "mov     [rsp+148h+dst_name], rcx", "mov     [rsp+148h+entry], rax", "call    hash_lookup", "test    rax, rax", "mov     [rsp+148h+var_140], rax", "mov     rcx, [rsp+148h+dst_name]", "mov     r11, [rsp+148h+dst_stat]", "mov     r9d, dword ptr [rsp+148h+path]", "mov     r10, [rsp+148h+var_120]", "jnz     loc_13182"], ["lea~rcx,[rsp+0]", "mov~rax,<TAG>", "mov~rdi,rdx", "mov~[rsp+0],r10", "mov~[word ptr [rsp+0],r9d", "mov~rsi,rcx", "mov~[rsp+0],r11", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "mov~rcx,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r10,[rsp+0]", "jnz~FOO"]], [1, 0, 73, 0, 1, 14, 1, 2, 6, 14, 0.010262345679012345, ["mov     edi, 10h; size", "mov     [rsp+148h+path], r11", "mov     [rsp+148h+dst_stat], r10", "mov     [rsp+148h+dst_name], rdx", "mov     dword ptr [rsp+148h+var_140], r9d", "call    _malloc", "test    rax, rax", "mov     rsi, rax", "mov     cs:new_dst_res_5308, rax", "mov     r9d, dword ptr [rsp+148h+var_140]", "mov     rdx, [rsp+148h+dst_name]", "mov     r10, [rsp+148h+dst_stat]", "mov     r11, [rsp+148h+path]", "jz      short loc_13278"], ["mov~edi,0", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],r9d", "call~FOO", "test~rax,rax", "mov~rsi,rax", "mov~<TAG>,rax", "mov~r9d,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jz~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 7, 14, 0.0016203703703703703, ["mov     rdx, cs:ht_5307", "test    rdx, rdx", "jz      loc_13A52"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.02939814814814815, ["mov     ebx, 1", "jg      short loc_131CF"], ["mov~ebx,0", "jg~FOO"]], [0, 0, 29, 0, 0, 2, 0, 1, 12, 7, 0.19737654320987655, ["cmp     r13, rbp", "jg      loc_131CF"], ["cmp~r13,rbp", "jg~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 8, 13, 0.00038580246913580245, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.0002314814814814815, ["setnle  bl", "movzx   ebx, bl"], ["setnle~bl", "movzx~ebx,bl"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 13, 0.0, ["mov     cs:new_dst_res_5308, 0", "jmp     loc_13182"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 65, 0, 0, 2, 0, 1, 7, 13, 0.02824074074074074, ["cmp     rax, cs:new_dst_res_5308", "jz      loc_13A60"], ["cmp~rax,<TAG>", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 22, -1, 0.0030864197530864196, ["mov     r11d, esi", "jmp     loc_139BF"], ["mov~r11d,esi", "jmp~FOO"]], [1, 0, 9, 2, 0, 13, 2, 0, 20, -1, 0.04521604938271605, ["xor     eax, eax", "cmp     r11d, 77359400h", "mov     ebx, r11d", "setz    al", "not     eax", "cdqe", "and     rbp, rax", "mov     eax, r9d", "mov     r9d, r12d", "cdq", "idiv    r11d", "sub     r9d, edx", "nop     word ptr [rax+rax+00h]"], ["xor~eax,eax", "cmp~r11d,0", "mov~ebx,r11d", "setz~al", "not~eax", "cdqe~", "and~rbp,rax", "mov~eax,r9d", "mov~r9d,r12d", "cdq~,", "idiv~,r11d", "sub~r9d,edx", "nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 0, 2, 1, 1, 2, -1, 0.0006172839506172839, ["xor     ebx, ebx", "jmp     short loc_131CF"], ["xor~ebx,ebx", "jmp~FOO"]], [0, 0, 63, 0, 0, 2, 0, 1, 6, 13, 0.05794753086419753, ["lea     rcx, [rsp+148h+entry]", "jmp     loc_132D0"], ["lea~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.0016203703703703703, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_131CF"], ["mov~ebx,0", "jmp~FOO"]], [4, 0, 23, 2, 1, 29, 2, 2, 16, 3, 0.14976851851851852, ["mov     rax, [rsp+148h+var_110]", "mov     edx, 38E38E39h", "lea     r15, [rsp+148h+times]", "mov     rsi, r10; path", "mov     ecx, 100h; flags", "mov     edi, 0FFFFFF9Ch; fd", "mov     dword ptr [rsp+148h+dst_stat], r9d", "mov     dword ptr [rsp+148h+dst_name], r11d", "mov     [rsp+148h+times.tv_sec], rax", "movsxd  rax, dword ptr [rsp+148h+path]", "mov     [rsp+148h+times.tv_nsec], rax", "movzx   eax, byte ptr [rsp+148h+filename]", "mov     [rsp+148h+filename], r10", "or      rax, r13", "mov     qword ptr [rsp+148h+var_E8], rax", "mov     eax, r11d", "mul     edx", "mov     eax, edx", "mov     rdx, r15; times", "shr     eax, 1", "add     eax, r14d", "cdqe", "mov     qword ptr [rsp+148h+var_E8+8], rax", "call    _utimensat", "test    eax, eax", "mov     r10, [rsp+148h+filename]", "mov     r11d, dword ptr [rsp+148h+dst_name]", "mov     r9d, dword ptr [rsp+148h+dst_stat]", "jz      short loc_138F4"], ["mov~rax,[rsp+0]", "mov~edx,0", "lea~r15,[rsp+0]", "mov~rsi,r10", "mov~ecx,0", "mov~edi,0", "mov~[word ptr [rsp+0],r9d", "mov~[word ptr [rsp+0],r11d", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,<TAG>", "mov~<TAG>,r10", "or~rax,r13", "mov~[word ptr [rsp+0],rax", "mov~eax,r11d", "mul~,edx", "mov~eax,edx", "mov~rdx,r15", "shr~eax,0", "add~eax,r14d", "cdqe~", "mov~[word ptr [rsp+0],rax", "call~FOO", "test~eax,eax", "mov~r10,<TAG>", "mov~r11d,[word ptr [rsp+0]", "mov~r9d,[word ptr [rsp+0]", "jz~FOO"]], [2, 0, 72, 0, 0, 3, 0, 1, 7, 15, 0.0007716049382716049, ["mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "jmp     loc_1313B"], ["mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 19, 2, 0.0024691358024691358, ["jmp     loc_13958"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.024382716049382715, ["mov     rdi, [rsp+148h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebx", "jnz     loc_13AE9"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [3, 0, 62, 0, 0, 4, 0, 0, 7, 12, 0.07561728395061729, ["mov     [rsp+148h+var_100], 77359400h", "mov     [rsp+148h+var_FC], 0", "mov     dword ptr [rsp+148h+dst_name], 77359400h", "mov     [rsp+148h+var_140], rcx"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rcx"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 71, 0, 1, 13, 1, 2, 6, 14, 0.02199074074074074, ["mov     rax, [r11]", "mov     rdi, rdx; table", "mov     [rsp+148h+path], r10", "mov     dword ptr [rsp+148h+dst_stat], r9d", "mov     [rsp+148h+dst_name], r11", "mov     [rsi], rax", "call    hash_insert", "test    rax, rax", "mov     [rsp+148h+var_140], rax", "mov     r11, [rsp+148h+dst_name]", "mov     r9d, dword ptr [rsp+148h+dst_stat]", "mov     r10, [rsp+148h+path]", "jz      loc_13268"], ["mov~rax,<TAG>", "mov~rdi,rdx", "mov~[rsp+0],r10", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],r11", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "mov~r11,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r10,[rsp+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 118h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [8, 52, 80, 9, 82, 131, 1, 786, 0.04528, 6, 173], "succs": [[18, 34], [0, 18], [26, 13], [57, 2], [24, 19], [4, 71], [29, 70], [14, 6], [25, 43], [8, 42], [64], [10, 58], [28, 39], [26, 12], [70], [38], [17, 15], [59, 15], [38], [77], [19, 63], [66, 19], [19, 46], [74, 19], [44, 77], [43, 11], [38], [32, 40], [27, 39], [30], [36, 69], [70, 30], [40, 37], [38], [33, 35], [16, 33], [54, 31], [41, 47], [64], [38], [38], [38], [38], [38], [52, 53], [20, 5], [74, 23], [1, 41], [49, 22], [77, 22], [20], [50, 3], [80, 61], [72, 52], [70], [73, 76], [7, 55], [20], [64], [9, 42], [65, 51], [75, 60], [72, 60], [21, 77], [48, 77], [78], [77], [51], [67, 51], [70], [57], [77], [78], [77], [56, 73], [80], [7], [81, 79], [3], [], [68, 62], []], "fname": "utimecmp", "n_num": 82}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[5, 0, 48, 6, 0, 18, 0, 1, 0, 0, 0.07083333333333333, ["mov     eax, dword ptr [rsp+158h+a]", "mov     ecx, 14F8B589h", "imul    ecx", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 0Dh", "mov     esi, edx", "sub     esi, dword ptr [rsp+158h+var_120]", "imul    ecx", "mov     eax, r15d", "sar     edx, 0Dh", "mov     edi, edx", "sub     edi, [rsp+158h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 0Dh", "sub     ecx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], offset loc_186A0", "jle     loc_145A1"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r15d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 50, 12, 0, 31, 2, 1, 16, 10, 0.07222222222222222, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_1459A"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 26, 9, 0.006481481481481481, ["mov     ebp, 3B9ACA00h", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [5, 0, 36, 6, 0, 17, 0, 1, 25, 10, 0.02700617283950617, ["mov     eax, dword ptr [rsp+158h+a]", "mov     esi, 44B82FA1h", "imul    esi", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 1Ch", "mov     r8d, edx", "sub     r8d, dword ptr [rsp+158h+var_120]", "imul    esi", "mov     eax, r15d", "sar     edx, 1Ch", "mov     ecx, edx", "sub     ecx, [rsp+158h+var_118]", "imul    esi", "sar     edx, 1Ch", "sub     edx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], 3B9ACA00h", "jle     loc_145BD"], ["mov~eax,[word ptr [rsp+0]", "mov~esi,0", "imul~,esi", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~r8d,edx", "sub~r8d,[word ptr [rsp+0]", "imul~,esi", "mov~eax,r15d", "sar~edx,0", "mov~ecx,edx", "sub~ecx,[rsp+0]", "imul~,esi", "sar~edx,0", "sub~edx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [0, 0, 35, 0, 0, 3, 2, 1, 26, 10, 0.016666666666666666, ["or      ecx, r8d", "or      ecx, edx", "jnz     loc_145BD"], ["or~ecx,r8d", "or~ecx,edx", "jnz~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 5, 14, 0.011375661375661377, ["mov     rsi, cs:new_dst_res_5308; entry", "test    rsi, rsi", "jz      loc_13CE0"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 75, 0, 1, 16, 2, 2, 5, 13, 0.0443342151675485, ["mov     options, cs:data_freer; data_freer", "lea     rdx, dev_info_hash; hasher", "lea     src_stat, dev_info_compare; comparator", "mov     [rsp+158h+c], dst_name_0", "mov     edi, 10h; candidate", "xor     esi, esi; tuning", "mov     dword ptr [rsp+158h+res], r10d", "mov     dword ptr [rsp+158h+dst_res], r13d", "call    hash_initialize", "test    rax, rax", "mov     rdx, rax", "mov     cs:ht_5307, rax", "mov     r9d, dword ptr [rsp+158h+dst_res]", "mov     r10d, dword ptr [rsp+158h+res]", "mov     r11, [rsp+158h+c]", "jnz     loc_13BF9"], ["mov~options,<TAG>", "lea~rdx,<TAG>", "lea~src_stat,<TAG>", "mov~[rsp+0],dst_name_0", "mov~edi,0", "xor~esi,esi", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r13d", "call~FOO", "test~rax,rax", "mov~rdx,rax", "mov~<TAG>,rax", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [0, 0, 76, 0, 0, 5, 1, 1, 4, 14, 0.04398148148148148, ["mov     rbp, dst_stat", "mov     dst_stat, cs:ht_5307", "mov     r11, dst_name_0", "test    rdx, rdx", "jz      loc_144D8"], ["mov~rbp,dst_stat", "mov~dst_stat,<TAG>", "mov~r11,dst_name_0", "test~rdx,rdx", "jz~FOO"]], [0, 0, 15, 2, 0, 8, 1, 1, 20, -1, 0.04104938271604938, ["mov     eax, ecx", "cdq", "idiv    edi", "cdq", "mov     ecx, eax", "idiv    edi", "test    edx, edx", "jnz     loc_1461A"], ["mov~eax,ecx", "cdq~,", "idiv~,edi", "cdq~,", "mov~ecx,eax", "idiv~,edi", "test~edx,edx", "jnz~FOO"]], [3, 0, 15, 0, 0, 4, 0, 1, 19, -1, 0.047839506172839504, ["mov     r8d, 9", "mov     esi, 0Ah", "mov     edi, 0Ah", "jmp     short loc_14479"], ["mov~r8d,0", "mov~esi,0", "mov~edi,0", "jmp~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 22, -1, 0.0010802469135802468, ["imul    esi, 0Ah", "cmp     esi, ebp", "jz      short loc_14496"], ["imul~esi,,0", "cmp~esi,ebp", "jz~FOO"]], [5, 0, 51, 6, 0, 18, 0, 1, 15, 10, 0.07716049382716049, ["mov     eax, dword ptr [rsp+158h+a]", "mov     ecx, 68DB8BADh", "imul    ecx", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 0Ch", "mov     esi, edx", "sub     esi, dword ptr [rsp+158h+var_120]", "imul    ecx", "mov     eax, r15d", "sar     edx, 0Ch", "mov     edi, edx", "sub     edi, [rsp+158h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 0Ch", "sub     ecx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], 2710h", "jle     loc_1459A"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r15d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 41, 12, 0, 31, 2, 1, 22, 10, 0.044444444444444446, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_145AF"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [5, 0, 42, 6, 0, 18, 0, 1, 21, 10, 0.05262345679012346, ["mov     eax, dword ptr [rsp+158h+a]", "mov     ecx, 6B5FCA6Bh", "imul    ecx", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 16h", "mov     esi, edx", "sub     esi, dword ptr [rsp+158h+var_120]", "imul    ecx", "mov     eax, r15d", "sar     edx, 16h", "mov     edi, edx", "sub     edi, [rsp+158h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 16h", "sub     ecx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], 989680h", "jle     loc_145AF"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r15d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [2, 0, 22, 0, 1, 22, 4, 2, 16, 2, 0.13503086419753085, ["lea     rcx, [rsp+158h+dst_status]; stat_buf", "mov     rdx, r11; filename", "mov     r8d, 100h; flag", "mov     esi, r10d; fildes", "mov     edi, 1; ver", "mov     dword ptr [rsp+158h+c], r9d", "mov     [rsp+158h+res], r11", "mov     [rsp+158h+fildes], r10d", "call    ___fxstatat", "mov     rcx, [rsp+158h+dst_status.st_mtim.tv_nsec]", "mov     r8d, eax", "mov     rax, [rsp+158h+dst_status.st_mtim.tv_sec]", "movsxd  rdx, r15d", "mov     r10d, [rsp+158h+fildes]", "mov     r11, [rsp+158h+res]", "mov     r9d, dword ptr [rsp+158h+c]", "xor     rcx, rdx", "xor     rax, dst_m_s", "or      rax, rcx", "movsxd  rcx, r8d", "or      rax, rcx", "jnz     loc_145C9"], ["lea~rcx,[rsp+0]", "mov~rdx,r11", "mov~r8d,0", "mov~esi,r10d", "mov~edi,0", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],r11", "mov~[rsp+0],r10d", "call~FOO", "mov~rcx,[rsp+0]", "mov~r8d,eax", "mov~rax,[rsp+0]", "movsxd~rdx,r15d", "mov~r10d,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "xor~rcx,rdx", "xor~rax,dst_m_s", "or~rax,rcx", "movsxd~rcx,r8d", "or~rax,rcx", "jnz~FOO"]], [3, 0, 23, 2, 1, 30, 2, 2, 15, 3, 0.14976851851851852, ["mov     rax, [rsp+158h+dst_a_s_0]", "mov     edx, 38E38E39h", "mov     rsi, r11; path", "mov     edi, r10d; fd", "mov     ecx, 100h; flags", "mov     dword ptr [rsp+158h+c], r9d", "mov     [rsp+158h+res], r11", "mov     [rsp+158h+timespec.tv_sec], rax", "movsxd  rax, dword ptr [rsp+158h+a]", "mov     [rsp+158h+timespec.tv_nsec], rax", "movzx   eax, byte ptr [rsp+158h+fildes]", "mov     [rsp+158h+fildes], r10d", "or      rax, dst_m_s", "mov     [rsp+158h+timespec.tv_sec+10h], rax", "mov     eax, ebp", "mul     edx", "mov     eax, edx", "shr     eax, 1", "add     eax, r15d", "cdqe", "mov     [rsp+158h+timespec.tv_nsec+10h], rax", "lea     rax, [rsp+158h+timespec]", "mov     rdx, rax; times", "mov     [rsp+158h+times], rax", "call    _utimensat", "test    eax, eax", "mov     r10d, [rsp+158h+fildes]", "mov     r11, [rsp+158h+res]", "mov     r9d, dword ptr [rsp+158h+c]", "jz      short loc_143CB"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~rsi,r11", "mov~edi,r10d", "mov~ecx,0", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],r11", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,[yte ptr [rsp+0]", "mov~[rsp+0],r10d", "or~rax,dst_m_s", "mov~[rsp+0],rax", "mov~eax,ebp", "mul~,edx", "mov~eax,edx", "shr~eax,0", "add~eax,r15d", "cdqe~", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "mov~r10d,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.02897927689594356, ["mov     ebx, 1", "jl      short loc_13C97"], ["mov~ebx,0", "jl~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 1, -1, 0.050859788359788355, ["cmp     src_s, dst_s", "jg      short loc_13CD0"], ["cmp~src_s,dst_s", "jg~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 7, 13, 0.0016203703703703703, ["mov     rdx, cs:ht_5307", "test    rdx, rdx", "jz      loc_1452A"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [0, 0, 71, 0, 1, 13, 1, 2, 6, 13, 0.021968694885361555, ["mov     rax, [dst_stat+0]", "mov     rdi, rdx; table", "mov     [rsp+158h+a], r11", "mov     dword ptr [rsp+158h+c], r10d", "mov     dword ptr [rsp+158h+res], r9d", "mov     [rsi], rax", "call    hash_insert", "test    rax, rax", "mov     [rsp+158h+dst_res], rax", "mov     r9d, dword ptr [rsp+158h+res]", "mov     r10d, dword ptr [rsp+158h+c]", "mov     r11, [rsp+158h+a]", "jz      low_memory"], ["mov~rax,[dst_stat+0]", "mov~rdi,rdx", "mov~[rsp+0],r11", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r9d", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jz~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 13, 8, 0.10802469135802469, ["mov     rax, [rsp+158h+dst_res]", "mov     [rax+8], ebp", "mov     rax, src_s", "jmp     loc_14312"], ["mov~rax,[rsp+0]", "mov~[rax+0],ebp", "mov~rax,src_s", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 14, 9, 0.009567901234567902, ["mov     ebp, 3E8h", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 16, 9, 0.009567901234567902, ["mov     ebp, 2710h", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 18, 9, 0.009567901234567902, ["mov     ebp, offset loc_186A0", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 20, 9, 0.009567901234567902, ["mov     ebp, 0F4240h", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 22, 9, 0.009567901234567902, ["mov     ebp, 989680h", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 24, 9, 0.009567901234567902, ["mov     ebp, 5F5E100h", "jmp     short loc_14583"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 1, 0, 0, 12, 9, 0.012808641975308642, ["mov     ebp, 64h ; 'd'"], ["mov~ebp,0"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.011574074074074073, ["cmp     r9d, r15d", "jg      short loc_13CD0"], ["cmp~r9d,r15d", "jg~FOO"]], [0, 0, 66, 0, 1, 17, 1, 2, 7, 12, 0.02443783068783069, ["lea     rcx, [rsp+158h+tmp_dst_res]", "mov     rax, [dst_stat+0]", "mov     rdi, rdx; table", "mov     [rsp+158h+var_120], r11", "mov     dword ptr [rsp+158h+a], r10d", "mov     rsi, rcx; entry", "mov     dword ptr [rsp+158h+c], r9d", "mov     [rsp+158h+res], rcx", "mov     [rsp+158h+tmp_dst_res.dev], rax", "call    hash_lookup", "test    rax, rax", "mov     [rsp+158h+dst_res], rax", "mov     rcx, [rsp+158h+res]", "mov     r9d, dword ptr [rsp+158h+c]", "mov     r10d, dword ptr [rsp+158h+a]", "mov     r11, [rsp+158h+var_120]", "jnz     loc_13C51"], ["lea~rcx,[rsp+0]", "mov~rax,[dst_stat+0]", "mov~rdi,rdx", "mov~[rsp+0],r11", "mov~[word ptr [rsp+0],r10d", "mov~rsi,rcx", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "mov~rcx,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [1, 0, 73, 0, 1, 14, 1, 2, 6, 13, 0.010240299823633158, ["mov     edi, 10h; size", "mov     [rsp+158h+a], r11", "mov     dword ptr [rsp+158h+c], r10d", "mov     dword ptr [rsp+158h+res], r9d", "mov     [rsp+158h+dst_res], rdx", "call    _malloc", "test    rax, rax", "mov     rsi, rax", "mov     cs:new_dst_res_5308, rax", "mov     rdx, [rsp+158h+dst_res]", "mov     r9d, dword ptr [rsp+158h+res]", "mov     r10d, dword ptr [rsp+158h+c]", "mov     r11, [rsp+158h+a]", "jz      short loc_13D48"], ["mov~edi,0", "mov~[rsp+0],r11", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],rdx", "call~FOO", "test~rax,rax", "mov~rsi,rax", "mov~<TAG>,rax", "mov~rdx,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jz~FOO"]], [6, 0, 38, 12, 0, 31, 2, 1, 24, 10, 0.03148148148148148, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "mov     r8d, ecx", "or      edi, esi", "sar     r8d, 1Fh", "sar     edx, 2", "sub     edx, r8d", "mov     r8d, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      r8d, ecx", "jnz     loc_145B6"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "mov~r8d,ecx", "or~edi,esi", "sar~r8d,0", "sar~edx,0", "sub~edx,r8d", "mov~r8d,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~r8d,ecx", "jnz~FOO"]], [2, 0, 81, 1, 0, 19, 3, 1, 0, 18, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, r8d", "and     ebx, 1", "sub     rsp, 128h", "mov     r13, [src_stat+60h]", "mov     r14, [dst_stat+58h]", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "test    ebx, ebx", "mov     r12, [src_stat+58h]", "mov     r15, [dst_stat+60h]", "mov     r9d, r13d", "jz      loc_13C80"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,r8d", "and~ebx,0", "sub~rsp,0", "mov~r13,[src_stat+0]", "mov~r14,[dst_stat+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ebx,ebx", "mov~r12,[src_stat+0]", "mov~r15,[dst_stat+0]", "mov~r9d,r13d", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 9, -1, 0.045194003527336844, ["mov     rax, [rsp+158h+dst_res]", "mov     [rax+8], ebx", "mov     byte ptr [rax+0Ch], 1", "jmp     loc_13C80"], ["mov~rax,[rsp+0]", "mov~[rax+0],ebx", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [1, 0, 8, 2, 0, 11, 2, 0, 9, -1, 0.013227513227513229, ["xor     eax, eax", "cmp     esi, 77359400h", "setz    al", "not     eax", "cdqe", "and     src_s, rax", "mov     eax, r9d", "mov     r9d, r13d", "cdq", "idiv    esi", "sub     r9d, edx"], ["xor~eax,eax", "cmp~esi,0", "setz~al", "not~eax", "cdqe~", "and~src_s,rax", "mov~eax,r9d", "mov~r9d,r13d", "cdq~,", "idiv~,esi", "sub~r9d,edx"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.0002314814814814815, ["setl    bl", "movzx   ebx, bl"], ["setl~bl", "movzx~ebx,bl"]], [0, 0, 29, 0, 0, 2, 0, 1, 11, 7, 0.19821428571428573, ["cmp     dst_m_s, src_s", "jg      loc_13C97"], ["cmp~dst_m_s,src_s", "jg~FOO"]], [4, 0, 30, 0, 0, 6, 1, 1, 28, 8, 0.0038580246913580245, ["mov     dword ptr [dst_res_0+8], 77359400h", "mov     dst_res_0, src_s", "mov     byte ptr [rsp+158h+fildes], 1", "and     rax, 0FFFFFFFFFFFFFFFEh", "mov     ebp, 77359400h", "jmp     loc_14312"], ["mov~[word ptr [dst_res_0+0],0", "mov~dst_res_0,src_s", "mov~[yte ptr [rsp+0],0", "and~rax,0", "mov~ebp,0", "jmp~FOO"]], [2, 0, 30, 0, 0, 5, 0, 1, 10, 8, 0.0716710758377425, ["mov     rax, [rsp+158h+dst_res]", "mov     ebp, 0Ah", "mov     dword ptr [rax+8], 0Ah", "mov     rax, src_s", "jmp     loc_14312"], ["mov~rax,[rsp+0]", "mov~ebp,0", "mov~[word ptr [rax+0],0", "mov~rax,src_s", "jmp~FOO"]], [2, 0, 30, 0, 0, 3, 0, 0, 28, 8, 0.0038580246913580245, ["mov     dword ptr [rax+8], 3B9ACA00h", "mov     ebp, 3B9ACA00h", "mov     rax, src_s"], ["mov~[word ptr [rax+0],0", "mov~ebp,0", "mov~rax,src_s"]], [0, 0, 63, 0, 0, 1, 0, 0, 8, 12, 0.00038580246913580245, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [5, 0, 54, 6, 0, 18, 0, 1, 13, 10, 0.08163580246913581, ["mov     eax, dword ptr [rsp+158h+a]", "mov     ecx, 10624DD3h", "imul    ecx", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 6", "mov     esi, edx", "sub     esi, dword ptr [rsp+158h+var_120]", "imul    ecx", "mov     eax, r15d", "sar     edx, 6", "mov     edi, edx", "sub     edi, [rsp+158h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 6", "sub     ecx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], 3E8h", "jle     loc_14593"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r15d", "sar~edx,0", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [6, 0, 53, 12, 0, 31, 2, 1, 14, 10, 0.07777777777777778, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_14593"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.024382716049382715, ["mov     rsi, [rsp+158h+var_40]", "xor     rsi, fs:28h", "mov     eax, ebx", "jnz     loc_145C4"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [2, 3, 39, 6, 0, 18, 0, 1, 23, 10, 0.04074074074074074, ["mov     eax, dword ptr [rsp+158h+a]", "mov     ecx, 55E63B89h", "imul    ecx", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 19h", "mov     esi, edx", "sub     esi, dword ptr [rsp+158h+var_120]", "imul    ecx", "mov     eax, r15d", "sar     edx, 19h", "mov     edi, edx", "sub     edi, [rsp+158h+var_118]", "imul    ecx", "mov     ecx, edx", "sar     ecx, 19h", "sub     ecx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], 5F5E100h", "jle     loc_145B6"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,<STR>", "mov~esi,edx", "sub~esi,[word ptr [rsp+0]", "imul~,ecx", "mov~eax,r15d", "sar~edx,<STR>", "mov~edi,edx", "sub~edi,[rsp+0]", "imul~,ecx", "mov~ecx,edx", "sar~ecx,<STR>", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 21, -1, 0.0030864197530864196, ["mov     ebp, esi", "jmp     loc_14496"], ["mov~ebp,esi", "jmp~FOO"]], [6, 0, 59, 12, 0, 30, 2, 1, 10, 9, 0.08641975308641975, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, ecx", "imul    r8d", "mov     eax, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "or      edi, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "or      edi, esi", "jnz     loc_14565"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,ecx", "imul~,r8d", "mov~eax,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "or~edi,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "or~edi,esi", "jnz~FOO"]], [1, 0, 60, 0, 0, 4, 0, 1, 9, 9, 0.1503747795414462, ["cmp     dword ptr [rsp+158h+res], 0Ah", "mov     rax, [dst_stat+48h]", "mov     [rsp+158h+dst_a_s_0], rax", "jle     loc_14565"], ["cmp~[word ptr [rsp+0],0", "mov~rax,[dst_stat+0]", "mov~[rsp+0],rax", "jle~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 12, 6, 0.17916666666666667, ["cmp     r15d, r13d", "jl      short loc_1432B"], ["cmp~r15d,r13d", "jl~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 18, 0, 0.02175925925925926, ["mov     ebp, ebx", "jmp     loc_14496"], ["mov~ebp,ebx", "jmp~FOO"]], [3, 0, 18, 3, 0, 10, 2, 1, 17, 1, 0.11604938271604938, ["mov     ecx, dword ptr [rsp+158h+dst_status.st_mtim.tv_sec]", "mov     esi, 0Ah", "and     ecx, 1", "imul    ecx, 3B9ACA00h", "add     ecx, dword ptr [rsp+158h+dst_status.st_mtim.tv_nsec]", "mov     eax, ecx", "cdq", "idiv    esi", "test    edx, edx", "jnz     loc_14621"], ["mov~ecx,[word ptr [rsp+0]", "mov~esi,0", "and~ecx,0", "imul~ecx,,0", "add~ecx,[word ptr [rsp+0]", "mov~eax,ecx", "cdq~,", "idiv~,esi", "test~edx,edx", "jnz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 13, 6, 0.000462962962962963, ["cmp     byte ptr [rsp+158h+times], 0", "jnz     loc_13C97"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [7, 0, 47, 12, 0, 31, 2, 1, 18, 10, 0.06481481481481481, ["mov     r8d, 66666667h", "mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      edi, ecx", "jnz     loc_145A1"], ["mov~r8d,0", "mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~edi,ecx", "jnz~FOO"]], [6, 0, 56, 12, 0, 31, 2, 1, 12, 10, 0.08148148148148147, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_1457E"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [5, 0, 57, 6, 0, 18, 0, 1, 11, 10, 0.0875, ["mov     eax, dword ptr [rsp+158h+a]", "mov     ecx, 51EB851Fh", "imul    ecx", "mov     eax, dword ptr [rsp+158h+c]", "sar     edx, 5", "sub     edx, dword ptr [rsp+158h+var_120]", "mov     esi, edx", "imul    ecx", "mov     eax, r15d", "sar     edx, 5", "sub     edx, [rsp+158h+var_118]", "mov     edi, edx", "imul    ecx", "mov     ecx, edx", "sar     ecx, 5", "sub     ecx, [rsp+158h+var_114]", "cmp     dword ptr [rsp+158h+res], 64h ; 'd'", "jle     loc_1457E"], ["mov~eax,[word ptr [rsp+0]", "mov~ecx,0", "imul~,ecx", "mov~eax,[word ptr [rsp+0]", "sar~edx,0", "sub~edx,[word ptr [rsp+0]", "mov~esi,edx", "imul~,ecx", "mov~eax,r15d", "sar~edx,0", "sub~edx,[rsp+0]", "mov~edi,edx", "imul~,ecx", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,[rsp+0]", "cmp~[word ptr [rsp+0],0", "jle~FOO"]], [0, 0, 77, 0, 0, 3, 0, 1, 3, 15, 0.03341049382716049, ["lea     rax, [dst_s-1]", "cmp     rax, src_s", "jg      loc_13C97"], ["lea~rax,[dst_s-1]+0]", "cmp~rax,src_s", "jg~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 2, -1, 0.0006172839506172839, ["xor     ebx, ebx", "jmp     short loc_13C97"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.008068783068783069, ["mov     ebx, 0FFFFFFFFh", "jmp     short loc_13C97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, -1, 0.0016203703703703703, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_13C97"], ["mov~ebx,0", "jmp~FOO"]], [2, 0, 72, 0, 0, 3, 0, 1, 7, 14, 0.0007716049382716049, ["mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "jmp     loc_13C09"], ["mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [5, 3, 45, 6, 0, 29, 0, 1, 19, 10, 0.06265432098765432, ["mov     rsi, [rsp+158h+a]", "mov     ecx, 431BDE83h", "mov     eax, esi", "mov     edi, esi", "imul    ecx", "sar     edi, 1Fh", "mov     dword ptr [rsp+158h+var_120], edi", "sar     edx, 12h", "sub     edx, edi", "mov     rdi, [rsp+158h+c]", "mov     esi, edx", "mov     eax, edi", "imul    ecx", "mov     eax, edi", "sar     eax, 1Fh", "mov     [rsp+158h+var_118], eax", "sar     edx, 12h", "mov     edi, edx", "sub     edi, eax", "mov     eax, r15d", "imul    ecx", "mov     ecx, edx", "mov     edx, r15d", "sar     edx, 1Fh", "sar     ecx, 12h", "sub     ecx, edx", "cmp     dword ptr [rsp+158h+res], 0F4240h", "mov     [rsp+158h+var_114], edx", "jle     loc_145A8"], ["mov~rsi,[rsp+0]", "mov~ecx,0", "mov~eax,esi", "mov~edi,esi", "imul~,ecx", "sar~edi,0", "mov~[word ptr [rsp+0],edi", "sar~edx,<STR>", "sub~edx,edi", "mov~rdi,[rsp+0]", "mov~esi,edx", "mov~eax,edi", "imul~,ecx", "mov~eax,edi", "sar~eax,0", "mov~[rsp+0],eax", "sar~edx,<STR>", "mov~edi,edx", "sub~edi,eax", "mov~eax,r15d", "imul~,ecx", "mov~ecx,edx", "mov~edx,r15d", "sar~edx,0", "sar~ecx,<STR>", "sub~ecx,edx", "cmp~[word ptr [rsp+0],0", "mov~[rsp+0],edx", "jle~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 13, 5, 0.1705246913580247, ["cmp     dst_m_s, rax", "jl      loc_13CD0"], ["cmp~dst_m_s,rax", "jl~FOO"]], [0, 0, 63, 0, 0, 2, 0, 1, 6, 12, 0.05799162257495591, ["lea     rcx, [rsp+158h+tmp_dst_res]", "jmp     loc_13DA0"], ["lea~rcx,[rsp+0]", "jmp~FOO"]], [3, 0, 62, 0, 0, 4, 0, 0, 7, 11, 0.07566137566137567, ["mov     [rsp+158h+tmp_dst_res.resolution], 77359400h", "mov     [rsp+158h+tmp_dst_res.exact], 0", "mov     dword ptr [rsp+158h+res], 77359400h", "mov     [rsp+158h+dst_res], rcx"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rcx"]], [1, 0, 9, 2, 0, 13, 2, 0, 19, -1, 0.04521604938271605, ["xor     eax, eax", "cmp     ebp, 77359400h", "mov     ebx, ebp", "setz    al", "not     eax", "cdqe", "and     src_s, rax", "mov     eax, r9d", "mov     r9d, r13d", "cdq", "idiv    ebp", "sub     r9d, edx", "nop     word ptr [rax+rax+00000000h]"], ["xor~eax,eax", "cmp~ebp,0", "mov~ebx,ebp", "setz~al", "not~eax", "cdqe~", "and~src_s,rax", "mov~eax,r9d", "mov~r9d,r13d", "cdq~,", "idiv~,ebp", "sub~r9d,edx", "nop~[ord ptr [rax+0]"]], [1, 0, 16, 0, 0, 2, 0, 1, 18, -1, 0.07824074074074074, ["cmp     ebp, 0Ah", "jz      short loc_14496"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 22, -1, 0.0007716049382716049, ["mov     ebp, 77359400h"], ["mov~ebp,0"]], [0, 0, 25, 0, 0, 1, 0, 1, 14, 4, 0.1603395061728395, ["jnz     short loc_1434A"], ["jnz~FOO"]], [6, 0, 44, 12, 0, 31, 2, 1, 20, 10, 0.05555555555555555, ["mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, esi", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, ecx", "imul    r8d", "or      edi, esi", "mov     esi, ecx", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, esi", "mov     esi, edi", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      esi, ecx", "jnz     loc_145A8"], ["mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,esi", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,ecx", "imul~,r8d", "or~edi,esi", "mov~esi,ecx", "sar~esi,0", "sar~edx,0", "sub~edx,esi", "mov~esi,edi", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~esi,ecx", "jnz~FOO"]], [7, 0, 61, 12, 0, 46, 2, 1, 8, 10, 0.15328483245149913, ["mov     rsi, [dst_stat+50h]", "mov     r8d, 66666667h", "mov     rdi, [dst_stat+70h]", "mov     eax, esi", "mov     [rsp+158h+a], rsi", "mov     [rsp+158h+c], c_0", "imul    r8d", "mov     eax, esi", "sar     eax, 1Fh", "mov     dword ptr [rsp+158h+var_120], eax", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     ecx, edx", "add     eax, eax", "sub     esi, eax", "mov     eax, edi", "imul    r8d", "mov     eax, edi", "sar     eax, 1Fh", "mov     [rsp+158h+var_118], eax", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edi, edx", "mov     edx, dword ptr [rsp+158h+c]", "add     eax, eax", "sub     edx, eax", "mov     eax, r15d", "or      esi, edx", "imul    r8d", "mov     eax, r15d", "mov     dword ptr [rsp+158h+dst_a_s_0], esi", "sar     eax, 1Fh", "mov     [rsp+158h+var_114], eax", "sar     edx, 2", "mov     esi, edx", "mov     edx, r15d", "sub     esi, eax", "lea     eax, [rsi+rsi*4]", "add     eax, eax", "sub     edx, eax", "mov     eax, edx", "mov     edx, dword ptr [rsp+158h+dst_a_s_0]", "or      edx, eax", "jnz     loc_144C0"], ["mov~rsi,[dst_stat+0]", "mov~r8d,0", "mov~rdi,[dst_stat+0]", "mov~eax,esi", "mov~[rsp+0],rsi", "mov~[rsp+0],c_0", "imul~,r8d", "mov~eax,esi", "sar~eax,0", "mov~[word ptr [rsp+0],eax", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~ecx,edx", "add~eax,eax", "sub~esi,eax", "mov~eax,edi", "imul~,r8d", "mov~eax,edi", "sar~eax,0", "mov~[rsp+0],eax", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edi,edx", "mov~edx,[word ptr [rsp+0]", "add~eax,eax", "sub~edx,eax", "mov~eax,r15d", "or~esi,edx", "imul~,r8d", "mov~eax,r15d", "mov~[word ptr [rsp+0],esi", "sar~eax,0", "mov~[rsp+0],eax", "sar~edx,0", "mov~esi,edx", "mov~edx,r15d", "sub~esi,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edx,eax", "mov~eax,edx", "mov~edx,[word ptr [rsp+0]", "or~edx,eax", "jnz~FOO"]], [1, 0, 63, 0, 0, 4, 0, 1, 8, 11, 0.07665343915343915, ["cmp     byte ptr [rax+0Ch], 0", "mov     esi, [rax+8]", "mov     dword ptr [rsp+158h+res], esi", "jz      loc_13DBA"], ["cmp~[yte ptr [rax+0],0", "mov~esi,[rax+0]", "mov~[word ptr [rsp+0],esi", "jz~FOO"]], [0, 0, 24, 2, 0, 7, 0, 1, 15, 4, 0.00038580246913580245, ["mov     eax, r9d", "cdq", "idiv    ebp", "mov     eax, r13d", "sub     eax, edx", "cmp     eax, r15d", "jg      loc_13CD0"], ["mov~eax,r9d", "cdq~,", "idiv~,ebp", "mov~eax,r13d", "sub~eax,edx", "cmp~eax,r15d", "jg~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     rbp", "pop     src_s", "pop     r13", "pop     dst_s", "pop     dst_ns", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~src_s", "pop~r13", "pop~dst_s", "pop~dst_ns", "retn"]], [0, 0, 80, 0, 0, 9, 1, 1, 1, 17, 0.011265432098765432, ["cmp     dst_s, src_s", "mov     r10d, edi", "setz    byte ptr [rsp+158h+times]", "movzx   edi, byte ptr [rsp+158h+times]", "cmp     r15d, r13d", "setz    al", "and     al, dil", "mov     byte ptr [rsp+158h+fildes], al", "jnz     loc_13CC8"], ["cmp~dst_s,src_s", "mov~r10d,edi", "setz~[yte ptr [rsp+0]", "movzx~edi,[yte ptr [rsp+0]", "cmp~r15d,r13d", "setz~al", "and~al,dil", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     cs:new_dst_res_5308, 0", "jmp     loc_13C51"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 65, 0, 0, 2, 0, 1, 7, 12, 0.028218694885361557, ["cmp     cs:new_dst_res_5308, dst_res_0", "jz      loc_14538"], ["cmp~<TAG>,dst_res_0", "jz~FOO"]], [1, 0, 21, 0, 1, 16, 1, 2, 17, 3, 0.009567901234567902, ["mov     qword ptr [rsp+158h+fildes], dst_m_s", "mov     ecx, 100h; flags", "mov     rsi, r11; path", "movq    xmm0, qword ptr [rsp+158h+fildes]", "mov     qword ptr [rsp+158h+fildes], rdx", "mov     rdx, [rsp+158h+times]; times", "movhps  xmm0, qword ptr [rsp+158h+fildes]", "mov     edi, r10d; fd", "mov     dword ptr [rsp+158h+c], r8d", "mov     dword ptr [rsp+158h+res], r9d", "movaps  xmmword ptr [rsp+158h+timespec.tv_sec+10h], xmm0", "call    _utimensat", "mov     r8d, dword ptr [rsp+158h+c]", "mov     r9d, dword ptr [rsp+158h+res]", "test    r8d, r8d", "jnz     loc_143C1"], ["mov~[word ptr [rsp+0],dst_m_s", "mov~ecx,0", "mov~rsi,r11", "movq~xmm0,[word ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,[rsp+0]", "movhps~xmm0,[word ptr [rsp+0]", "mov~edi,r10d", "mov~[word ptr [rsp+0],r8d", "mov~[word ptr [rsp+0],r9d", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r8d,[word ptr [rsp+0]", "mov~r9d,[word ptr [rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 78, 0, 0, 3, 0, 1, 2, 16, 0.022376543209876542, ["lea     rax, [src_s-1]", "cmp     rax, dst_s", "jg      loc_13CD0"], ["lea~rax,[src_s-1]+0]", "cmp~rax,dst_s", "jg~FOO"]], [1, 0, 32, 0, 0, 6, 3, 1, 27, 9, 0.014506172839506172, ["mov     rax, [rsp+158h+dst_a_s_0]", "or      rax, dst_m_s", "or      rax, [dst_stat+68h]", "test    al, 1", "mov     rax, [rsp+158h+dst_res]", "jz      loc_14548"], ["mov~rax,[rsp+0]", "or~rax,dst_m_s", "or~rax,[dst_stat+0]", "test~al,0", "mov~rax,[rsp+0]", "jz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 21, -1, 0.01990740740740741, ["sub     r8d, 1", "jnz     short loc_14472"], ["sub~r8d,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 18, 2, 0.0024691358024691358, ["jmp     loc_14432"], ["jmp~FOO"]]], "func_feature": [8, 52, 80, 4, 82, 131, 0, 790, 0.04444, 6, 173], "succs": [[53, 23], [0, 22], [20], [2, 4], [2, 79], [19, 30], [5, 63], [5, 6], [80, 46], [8], [8, 65], [1, 22], [25, 45], [25, 12], [51, 77], [59, 14], [44, 28], [16, 58], [29, 63], [18, 76], [36], [20], [20], [20], [20], [20], [20], [20], [58, 35], [40, 71], [60, 29], [26, 3], [17, 74], [17], [17], [44], [49, 44], [36], [36], [36], [64], [42, 21], [11, 21], [], [73, 43], [26, 31], [65], [38, 55], [38, 47], [52, 62], [65], [50, 66], [44, 62], [61, 23], [41, 27], [27, 54], [44, 7], [44], [44], [44], [19], [24, 69], [58, 68], [64], [70], [33], [65, 9], [65], [72, 15], [24, 13], [48, 33], [34, 70], [58, 15], [], [57, 78], [71], [75, 71], [81, 59], [56, 58], [37, 39], [10, 67], [51]], "fname": "utimecmpat", "n_num": 82}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     ecx, 100h; flags", "jmp     _utimensat"], ["mov~ecx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "lutimensat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 32, 0, 0, 2, 0, 1, 0, 0, 0.04552093476144109, ["cmp     rax, 3FFFFFFFh", "jz      loc_14AE0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 35, 0, 0, 4, 0, 1, 9, -1, 0.07051282051282051, ["mov     rax, [rbp+8]", "mov     rsi, [rbp+18h]", "cmp     rax, 3FFFFFFEh", "jz      loc_14B20"], ["mov~rax,[rbp+0]", "mov~rsi,[rbp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 15, -1, 0.005274261603375527, ["mov     [rsp+128h+truncated_timeval.tv_usec+10h], 0", "jmp     loc_1496A"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 16, -1, 0.00024342745861733204, ["cmp     [rsp+128h+st.st_mtim.tv_nsec], 0", "jz      loc_14BF8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 14, -1, 0.015417072379097695, ["cmp     [rsp+128h+st.st_mtim.tv_nsec], 0", "jnz     loc_14978"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 54, 0, 0, 3, 0, 1, 10, 5, 0.0, ["movdqu  xmm0, xmmword ptr [rsp+128h+st.st_mtim.tv_sec]", "movaps  xmmword ptr [rbp+10h], xmm0", "jmp     loc_1470D"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "jmp~FOO"]], [2, 0, 55, 0, 0, 3, 0, 1, 9, 5, 0.02385589094449854, ["cmp     qword ptr [rbp+18h], 3FFFFFFEh", "mov     r14d, 3", "jnz     loc_1470D"], ["cmp~[word ptr [rbp+0],0", "mov~r14d,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.024991885751379422, ["mov     fd, [rsp+128h+var_30]", "xor     fd, fs:28h", "mov     eax, r13d", "jnz     loc_14C06"], ["mov~fd,[rsp+0]", "xor~fd,<TAG>", "mov~eax,r13d", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 4, 5, 0.042310010664441046, ["cmp     r14d, 2", "jz      loc_147B0"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 3, 6, 0.12869198312236288, ["mov     eax, cs:utimensat_works_really", "test    eax, eax", "js      loc_14810"], ["mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [2, 0, 51, 0, 1, 8, 1, 2, 6, 3, 0.04790304632076784, ["xor     ecx, ecx; flags", "mov     rdx, rbp; times", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "cmp     eax, 0", "mov     r13d, eax", "jg      loc_1472B"], ["xor~ecx,ecx", "mov~rdx,rbp", "mov~rsi,file", "mov~edi,0", "call~FOO", "cmp~eax,0", "mov~r13d,eax", "jg~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 5, 4, 0.0949946677794779, ["test    ebx, ebx", "js      loc_14A70"], ["test~ebx,ebx", "js~FOO"]], [5, 0, 22, 4, 0, 19, 0, 0, 7, -1, 0.03497241155469003, ["mov     rax, [ts+0]", "mov     rdi, [ts+8]", "mov     rcx, 20C49BA5E353F7CFh", "lea     ts, [rsp+128h+timeval]", "mov     [rsp+128h+timeval.tv_sec+10h], r8", "mov     [rsp+128h+timeval.tv_sec], rax", "mov     rax, rdi", "sar     rdi, 3Fh", "imul    rcx", "mov     rax, rsi", "sar     rsi, 3Fh", "sar     rdx, 7", "sub     rdx, rdi", "mov     [rsp+128h+timeval.tv_usec], rdx", "imul    rcx", "mov     rcx, rdx", "sar     rcx, 7", "sub     rcx, rsi", "mov     [rsp+128h+timeval.tv_usec+10h], rcx"], ["mov~rax,[ts+0]", "mov~rdi,[ts+0]", "mov~rcx,0", "lea~ts,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "mov~rax,rdi", "sar~rdi,0", "imul~,rcx", "mov~rax,rsi", "sar~rsi,0", "sar~rdx,0", "sub~rdx,rdi", "mov~[rsp+0],rdx", "imul~,rcx", "mov~rcx,rdx", "sar~rcx,0", "sub~rcx,rsi", "mov~[rsp+0],rcx"]], [0, 0, 23, 0, 0, 2, 0, 1, 13, -1, 0.005355404089581304, ["mov     r8, [rbp+10h]", "jmp     loc_1483E"], ["mov~r8,[rbp+0]", "jmp~FOO"]], [0, 0, 23, 0, 0, 5, 0, 1, 12, -1, 0.012252515417072379, ["mov     r8, [rsp+128h+st.st_mtim.tv_sec]", "mov     rsi, [rsp+128h+st.st_mtim.tv_nsec]", "mov     [rbp+10h], r8", "mov     [rbp+18h], rsi", "jmp     loc_1483E"], ["mov~r8,[rsp+0]", "mov~rsi,[rsp+0]", "mov~[rbp+0],r8", "mov~[rbp+0],rsi", "jmp~FOO"]], [0, 0, 23, 0, 1, 5, 0, 2, 13, -1, 0.005355404089581304, ["lea     rdi, [rbp+10h]; ts", "call    gettime", "mov     r8, [ts+10h]", "mov     rsi, [ts+18h]", "jmp     loc_1483E"], ["lea~rdi,[rbp+0]", "call~FOO", "mov~r8,[ts+0]", "mov~rsi,[ts+0]", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 6, -1, 0.005355404089581304, ["mov     r8, [ts+10h]", "mov     rsi, [ts+18h]"], ["mov~r8,[ts+0]", "mov~rsi,[ts+0]"]], [1, 0, 27, 0, 0, 2, 0, 1, 11, -1, 0.026290165530671858, ["cmp     rsi, 3FFFFFFEh", "jz      loc_14BA0"], ["cmp~rsi,0", "jz~FOO"]], [0, 0, 28, 0, 1, 4, 0, 2, 12, -1, 0.0009737098344693282, ["mov     rdi, rbp; ts", "call    gettime", "mov     rsi, [rbp+18h]", "jmp     loc_14786"], ["mov~rdi,rbp", "call~FOO", "mov~rsi,[rbp+0]", "jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 7, 2, 0.016448741132285435, ["jnz     loc_14C0B"], ["jnz~FOO"]], [1, 0, 51, 0, 1, 6, 0, 2, 6, 3, 0.04790304632076784, ["mov     rsi, rbp; times", "mov     edi, ebx; fd", "call    _futimens", "cmp     eax, 0", "mov     r13d, eax", "jle     loc_14A8E"], ["mov~rsi,rbp", "mov~edi,ebx", "call~FOO", "cmp~eax,0", "mov~r13d,eax", "jle~FOO"]], [1, 0, 54, 0, 0, 4, 0, 1, 9, 5, 0.020610191496267444, ["movdqu  xmm0, xmmword ptr [rsp+128h+st.st_atim.tv_sec]", "mov     r14d, 3", "movaps  xmmword ptr [rbp+0], xmm0", "jmp     loc_1470D"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "mov~r14d,0", "movaps~[mmword ptr [rbp+0],xmm0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 3, -1, 0.00243427458617332, ["call    ___errno_location", "mov     r13d, 0FFFFFFFFh", "mov     dword ptr [rax], 16h", "jmp     loc_149D0"], ["call~FOO", "mov~r13d,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 2, 12, 0.0012982797792924375, ["cmp     rdi, 3B9AC9FFh", "ja      loc_14B80"], ["cmp~rdi,0", "ja~FOO"]], [1, 0, 74, 0, 0, 2, 0, 1, 3, 11, 0.0006491398896462187, ["cmp     rax, 3B9AC9FFh", "ja      loc_14B80"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 77, 0, 0, 8, 0, 0, 1, 12, 0.0019474196689386564, ["movdqu  xmm0, xmmword ptr [timespec]", "movaps  xmmword ptr [ts+128h+adjusted_timespec.tv_sec], xmm0", "mov     fd, [ts+128h+adjusted_timespec.tv_nsec]", "movdqu  xmm0, xmmword ptr [timespec+10h]", "lea     timespec, [rdi-3FFFFFFEh]", "cmp     rdx, 1", "movaps  xmmword ptr [ts+128h+adjusted_timespec.tv_sec+10h], xmm0", "jbe     short loc_146A1"], ["movdqu~xmm0,<TAG>", "movaps~<TAG>,xmm0", "mov~fd,[ts+0]", "movdqu~xmm0,[mmword ptr [timespec+0]", "lea~timespec,[rdi-3FFFFFFEh]+0]", "cmp~rdx,0", "movaps~[mmword ptr [ts+0],xmm0", "jbe~FOO"]], [1, 0, 79, 1, 0, 13, 2, 1, 0, 9, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     r12, file", "push    rbx", "mov     ebx, edi", "sub     rsp, 100h", "mov     rax, fs:28h", "mov     [rsp+128h+var_30], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_149B0"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~r12,file", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 7, -1, 0.1655190800760421, ["test    ebx, ebx", "mov     rdx, t; tvp", "js      loc_149C0"], ["test~ebx,ebx", "mov~rdx,t", "js~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 6, -1, 0.1321695182454676, ["xor     ebp, ebp", "jmp     loc_1488E"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 9, -1, 0.11838688737422914, ["test    t, t", "jz      loc_149D0"], ["test~t,t", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 11, -1, 0.00024342745861733204, ["test    r14b, r14b", "jz      loc_149D0"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 11, -1, 0.09599156118143459, ["lea     rdx, [rsp+128h+st]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_149D0"], ["lea~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 14, -1, 0.004381694255111977, ["xor     r13d, r13d", "jmp     short loc_149D0"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.004741039551166133, ["mov     r13d, 0FFFFFFFFh", "jmp     short loc_149D0"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 9, -1, 0.009331385913664395, ["test    file, file", "mov     r13d, 0FFFFFFFFh", "jz      short loc_149D0"], ["test~file,file", "mov~r13d,0", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 10, -1, 0.0, ["mov     rsi, t; tvp", "mov     rdi, file; file", "call    _utimes", "mov     r13d, eax", "jmp     short loc_149D0"], ["mov~rsi,t", "mov~rdi,file", "call~FOO", "mov~r13d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.004764223118653498, ["mov     cs:utimensat_works_really, 1", "jmp     loc_149D0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 27, 0, 0, 3, 1, 1, 10, -1, 0.01801363193768257, ["xor     r13d, r13d", "cmp     rsi, 3FFFFFFEh", "jz      loc_149D0"], ["xor~r13d,r13d", "cmp~rsi,0", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 4, -1, 0.0038948393378773127, ["call    ___errno_location", "mov     r13d, 0FFFFFFFFh", "mov     dword ptr [rax], 9", "jmp     loc_149D0"], ["call~FOO", "mov~r13d,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 1, 8, -1, 0.008264941809245608, ["mov     rsi, file; file", "mov     edi, 0FFFFFF9Ch; fd", "call    _futimesat", "mov     r13d, eax"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "mov~r13d,eax"]], [0, 0, 19, 0, 1, 6, 2, 2, 8, -1, 0.14281077572216813, ["xor     esi, esi; file", "mov     edi, ebx; fd", "call    _futimesat", "test    eax, eax", "mov     r13d, eax", "jnz     loc_14A00"], ["xor~esi,esi", "mov~edi,ebx", "call~FOO", "test~eax,eax", "mov~r13d,eax", "jnz~FOO"]], [0, 0, 46, 0, 0, 1, 0, 1, 9, 0, 0.013956507627393703, ["jmp     loc_14736"], ["jmp~FOO"]], [1, 0, 48, 0, 1, 3, 0, 2, 8, 1, 0.011359948068808828, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_14A94"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 8, 6, 0.04170723790976955, ["cmp     qword ptr [rbp+8], 3FFFFFFEh", "jz      loc_14B00"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 12, -1, 0.021583901330736774, ["cmp     rsi, 3FFFFFFFh", "jz      loc_14BC0"], ["cmp~rsi,0", "jz~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 11, -1, 0.013226225251541707, ["movdqu  xmm0, xmmword ptr [rsp+128h+st.st_atim.tv_sec]", "movaps  xmmword ptr [rbp+0], xmm0", "jmp     loc_14793"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "jmp~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 7, -1, 0.05401771224556035, ["test    al, al", "jz      loc_1475D"], ["test~al,al", "jz~FOO"]], [1, 0, 39, 0, 1, 6, 1, 2, 6, -1, 0.023600871702137528, ["mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     loc_1499E"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 39, 0, 1, 5, 1, 1, 6, -1, 0.023600871702137528, ["mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 25, 0, 0, 2, 1, 1, 5, -1, 0.11521073862846015, ["test    ts, ts", "jz      loc_14AF0"], ["test~ts,ts", "jz~FOO"]], [2, 0, 45, 0, 0, 4, 1, 1, 8, -1, 0.11148977604673807, ["test    r14d, r14d", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_1482D"], ["test~r14d,r14d", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [2, 0, 44, 0, 0, 4, 1, 1, 4, -1, 0.09222423146473778, ["test    r14d, r14d", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jnz     loc_14980"], ["test~r14d,r14d", "mov~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 5, -1, 0.051583437659387034, ["test    ebx, ebx", "lea     rdx, [rsp+128h+st]; stat_buf", "js      loc_14AA8"], ["test~ebx,ebx", "lea~rdx,[rsp+0]", "js~FOO"]], [0, 0, 67, 0, 0, 2, 1, 0, 2, 7, 0.11716975008114248, ["test    ebx, ebx", "jns     short loc_146F5"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 68, 0, 0, 3, 2, 1, 1, 8, 0.010548523206751054, ["xor     ebp, ebp", "xor     r14d, r14d", "jmp     loc_146E8"], ["xor~ebp,ebp", "xor~r14d,r14d", "jmp~FOO"]], [1, 0, 68, 1, 0, 5, 1, 0, 5, 8, 0.0863356053229471, ["xor     r14d, r14d", "cmp     ecx, 1", "mov     rbp, ts", "setz    r14b", "add     r14d, r8d"], ["xor~r14d,r14d", "cmp~ecx,0", "mov~rbp,ts", "setz~r14b", "add~r14d,r8d"]], [1, 0, 42, 0, 0, 2, 0, 1, 9, -1, 0.049578059071729956, ["cmp     r14d, 3", "jnz     loc_14980"], ["cmp~r14d,0", "jnz~FOO"]], [0, 0, 58, 0, 0, 2, 1, 1, 7, 7, 0.03965549218713776, ["test    al, al", "jnz     loc_149A6"], ["test~al,al", "jnz~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 8, -1, 0.09031158714703018, ["test    rbp, rbp", "jz      loc_14AF0"], ["test~rbp,rbp", "jz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 0, 12, -1, 0.007383966244725738, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 12, 2, 0, 13, 1, 1, 12, -1, 0.08763388510223953, ["mov     rdx, [rsp+128h+st.st_mtim.tv_sec]", "sub     rdx, [t+10h]", "mov     rax, [rsp+128h+st.st_atim.tv_sec]", "sub     rax, [t+0]", "movdqa  xmm0, xmmword ptr [t+0]", "cmp     mdiff, 1", "setz    dl", "movaps  xmmword ptr [rsp+128h+truncated_timeval.tv_sec], xmm0", "and     r14d, edx", "cmp     adiff, 1", "movdqa  xmm0, xmmword ptr [t+10h]", "movaps  xmmword ptr [rsp+128h+truncated_timeval.tv_sec+10h], xmm0", "jnz     loc_14BE0"], ["mov~rdx,[rsp+0]", "sub~rdx,[t+0]", "mov~rax,[rsp+0]", "sub~rax,[t+0]", "movdqa~xmm0,[mmword ptr [t+0]", "cmp~mdiff,0", "setz~dl", "movaps~[mmword ptr [rsp+0],xmm0", "and~r14d,edx", "cmp~adiff,0", "movdqa~xmm0,[mmword ptr [t+0]", "movaps~[mmword ptr [rsp+0],xmm0", "jnz~FOO"]], [1, 0, 46, 0, 1, 2, 0, 1, 7, -1, 0.08747160012982798, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 75, 0, 0, 4, 0, 0, 2, 11, 0.024018175916910092, ["mov     rax, [ts+128h+adjusted_timespec.tv_nsec+10h]", "lea     file, [rax-3FFFFFFEh]", "cmp     rsi, 1", "jbe     short loc_146BF"], ["mov~rax,[ts+0]", "lea~file,[rax-3FFFFFFEh]+0]", "cmp~rsi,0", "jbe~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 5, 9, 0.0187207307460472, ["test    ebx, ebx", "lea     rdx, [rsp+128h+st]; stat_buf", "js      loc_14AC0"], ["test~ebx,ebx", "lea~rdx,[rsp+0]", "js~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 13, -1, 0.034647841609866926, ["test    r12b, r12b", "jz      loc_14BE0"], ["test~r12b,r12b", "jz~FOO"]], [4, 0, 70, 0, 0, 7, 1, 1, 4, 9, 0.027588445309964297, ["xor     ecx, ecx", "cmp     rdi, 3FFFFFFEh", "mov     [ts+128h+adjusted_timespec.tv_sec], 0", "setz    cl", "cmp     rsi, 1", "mov     r8d, 1", "ja      loc_146D8"], ["xor~ecx,ecx", "cmp~rdi,0", "mov~<TAG>,0", "setz~cl", "cmp~rsi,0", "mov~r8d,0", "ja~FOO"]], [1, 0, 72, 0, 0, 4, 2, 0, 3, 10, 0.04543979227523531, ["xor     ecx, ecx", "xor     r8d, r8d", "cmp     rdx, 1", "jbe     loc_14A20"], ["xor~ecx,ecx", "xor~r8d,r8d", "cmp~rdx,0", "jbe~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 13, -1, 0.03700097370983447, ["test    r14b, r14b", "jz      loc_14978"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.025235313209996755, ["cmp     [rsp+128h+st.st_atim.tv_nsec], 0", "jnz     loc_14BE0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 59, 0, 1, 5, 1, 1, 6, 8, 0.011713497472991144, ["mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [2, 0, 15, 0, 0, 6, 1, 1, 10, -1, 0.11100292112950341, ["cmp     qword ptr [t+8], 7A11Fh", "setnle  r12b", "cmp     qword ptr [t+18h], 7A11Fh", "setnle  r14b", "test    r12b, r12b", "jnz     short loc_148DC"], ["cmp~[word ptr [t+0],0", "setnle~r12b", "cmp~[word ptr [t+0],0", "setnle~r14b", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 59, 0, 1, 6, 1, 2, 6, 8, 0.011713497472991144, ["mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     loc_147CE"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 0, 4, 9, 0.027588445309964297, ["cmp     rsi, 1", "jbe     loc_14A44"], ["cmp~rsi,0", "jbe~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 11, -1, 0.016634209672184354, ["cmp     rsi, 3FFFFFFFh", "jnz     short loc_14B48"], ["cmp~rsi,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, -1, 0.01557935735150925, ["test    r14b, r14b", "mov     [rsp+128h+truncated_timeval.tv_usec], 0", "jz      short loc_1496A"], ["test~r14b,r14b", "mov~[rsp+0],0", "jz~FOO"]], [3, 0, 69, 1, 0, 7, 0, 1, 5, 9, 0.0, ["cmp     rax, 3FFFFFFEh", "mov     [ts+128h+adjusted_timespec.tv_sec+10h], 0", "mov     r8d, 1", "setz    al", "movzx   eax, al", "add     ecx, eax", "jmp     loc_146D8"], ["cmp~rax,0", "mov~[ts+0],0", "mov~r8d,0", "setz~al", "movzx~eax,al", "add~ecx,eax", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 1, 1, 3, 7, 0.005355404089581304, ["test    file, file", "jz      loc_14B60"], ["test~file,file", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 16, -1, 0.0019474196689386564, ["lea     rdx, [rsp+128h+truncated_timeval]; tvp", "xor     esi, esi; file", "mov     edi, ebx; fd", "call    _futimesat"], ["lea~rdx,[rsp+0]", "xor~esi,esi", "mov~edi,ebx", "call~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 5, -1, 0.0, ["add     rsp, 100h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]]], "func_feature": [18, 42, 82, 1, 80, 127, 1, 300, 0.03692, 3, 10], "succs": [[18, 74], [0, 38], [78], [2, 78], [33, 2], [12], [12, 5], [], [79, 7], [64, 12], [9, 52], [20, 62], [11, 21], [28], [13], [13], [13], [13], [45, 15], [18], [43, 37], [20, 62], [12], [8], [63, 23], [67, 23], [24, 63], [26, 55], [40, 41], [28], [8, 71], [8, 32], [8, 61], [8], [8], [8, 36], [8], [8], [8, 46], [8], [8], [35, 30], [51], [42, 37], [6, 22], [16, 14], [45], [34, 59], [47], [47], [17, 29], [57, 50], [50, 53], [48, 49], [10, 77], [54], [54], [59, 53], [34, 44], [1, 29], [29], [65, 68], [51], [25, 67], [72, 70], [68, 69], [56, 76], [73, 66], [33, 4], [75, 68], [58], [32, 31], [58], [56, 76], [19, 60], [3, 78], [56], [10, 39], [33], []], "fname": "fdutimens", "n_num": 80}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 25, 0, 0, 1, 0, 1, 0, 0, 0.012857977790765633, ["jmp     loc_14D51"], ["jmp~FOO"]], [1, 0, 27, 0, 1, 3, 0, 2, 5, 0, 0.013442431326709525, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_14E5E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 20, 0, 1, 6, 1, 2, 7, 0, 0.01320864991233197, ["lea     rdx, [rsp+118h+stat_buf]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_14D76"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 6, 0, 0.08334307422559906, ["cmp     ebp, 3", "jnz     loc_1506E"], ["cmp~ebp,0", "jnz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 9, 0, 0.024254821741671536, ["cmp     [rsp+118h+times.tv_nsec], 3FFFFFFEh", "jz      loc_14F40"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 36, 0, 1, 6, 1, 2, 8, 0, 0.02232612507305669, ["lea     rdx, [rsp+118h+stat_buf]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_15090"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 0, 6, 0, 1, 11, 0, 0.0052600818234950315, ["mov     r8, [rsp+118h+stat_buf.st_mtim.tv_sec]", "mov     rcx, [rsp+118h+stat_buf.st_mtim.tv_nsec]", "mov     rsi, [r12+8]", "mov     [r12+10h], r8", "mov     [r12+18h], rcx", "jmp     loc_14EEA"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rsi,[r12+0]", "mov~[r12+0],r8", "mov~[r12+0],rcx", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 10, 0, 0.03287551139684395, ["cmp     rcx, 3FFFFFFEh", "jz      loc_14FD0"], ["cmp~rcx,0", "jz~FOO"]], [1, 0, 31, 0, 0, 5, 0, 1, 11, 0, 0.004529514903565166, ["movdqu  xmm0, xmmword ptr [rsp+118h+stat_buf.st_mtim.tv_sec]", "lea     r12, [rsp+118h+times]", "mov     ebp, 3", "movaps  [rsp+118h+var_F8], xmm0", "jmp     loc_14D28"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "lea~r12,[rsp+0]", "mov~ebp,0", "movaps~[rsp+0],xmm0", "jmp~FOO"]], [2, 0, 33, 0, 0, 4, 0, 1, 10, 0, 0.008766803039158387, ["cmp     qword ptr [rsp+118h+var_F8+8], 3FFFFFFEh", "lea     r12, [rsp+118h+times]", "mov     ebp, 3", "jz      loc_14F70"], ["cmp~[word ptr [rsp+0],0", "lea~r12,[rsp+0]", "mov~ebp,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 11, 0, 0.026008182349503212, ["cmp     rcx, 3FFFFFFFh", "jz      loc_15050"], ["cmp~rcx,0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 10, 0, 0.016803039158386907, ["movdqu  xmm0, xmmword ptr [rsp+118h+stat_buf.st_atim.tv_sec]", "movaps  xmmword ptr [r12], xmm0", "jmp     loc_14E02"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "movaps~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 5, 0, 0.01694915254237288, ["mov     rsi, file; file", "mov     edi, 0FFFFFF9Ch; fd", "call    _futimesat", "mov     r13d, eax", "jmp     loc_14E68"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "mov~r13d,eax", "jmp~FOO"]], [5, 0, 4, 4, 0, 19, 0, 1, 8, 0, 0.014319111630625365, ["mov     rax, rsi", "mov     rdi, 20C49BA5E353F7CFh", "sar     rsi, 3Fh", "imul    rdi", "mov     rax, rcx", "sar     rcx, 3Fh", "movq    xmm0, qword ptr [r12]", "mov     [rsp+118h+var_D8], r8", "sar     rdx, 7", "sub     rdx, rsi", "mov     [rsp+118h+var_110], rdx", "imul    rdi", "movhps  xmm0, [rsp+118h+var_110]", "movaps  [rsp+118h+var_E8], xmm0", "sar     rdx, 7", "sub     rdx, rcx", "mov     [rsp+118h+var_D0], rdx", "lea     rdx, [rsp+118h+var_E8]", "jmp     loc_14D7D"], ["mov~rax,rsi", "mov~rdi,0", "sar~rsi,0", "imul~,rdi", "mov~rax,rcx", "sar~rcx,0", "movq~xmm0,<TAG>", "mov~[rsp+0],r8", "sar~rdx,0", "sub~rdx,rsi", "mov~[rsp+0],rdx", "imul~,rdi", "movhps~xmm0,[rsp+0]", "movaps~[rsp+0],xmm0", "sar~rdx,0", "sub~rdx,rcx", "mov~[rsp+0],rdx", "lea~rdx,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 1, 0, 4, 0, 0.015195791934541203, ["xor     edx, edx; tvp"], ["xor~edx,edx"]], [1, 0, 53, 0, 0, 4, 0, 0, 2, 0, 0.03471654003506721, ["mov     rcx, qword ptr [rsp+118h+var_F8+8]", "lea     file, [rcx-3FFFFFFEh]", "cmp     rdi, 1", "jbe     short loc_14C9D"], ["mov~rcx,[word ptr [rsp+0]", "lea~file,[rcx-3FFFFFFEh]+0]", "cmp~rdi,0", "jbe~FOO"]], [1, 0, 55, 0, 0, 8, 0, 0, 1, 0, 0.00695499707773232, ["movdqu  xmm0, xmmword ptr [timespec]", "movaps  xmmword ptr [rsp+118h+times.tv_sec], xmm0", "movdqu  xmm0, xmmword ptr [timespec+10h]", "mov     timespec, [rsp+118h+times.tv_nsec]", "movaps  [rsp+118h+var_F8], xmm0", "lea     rdx, [rsi-3FFFFFFEh]", "cmp     rdx, 1", "jbe     short loc_14C7E"], ["movdqu~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [timespec+0]", "mov~timespec,[rsp+0]", "movaps~[rsp+0],xmm0", "lea~rdx,[rsi-3FFFFFFEh]+0]", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 2, 0, 0.0014611338398597311, ["cmp     rsi, 3B9AC9FFh", "ja      loc_14FF8"], ["cmp~rsi,0", "ja~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 4, 0, 0.0, ["add     rsp, 0F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 0, 0.03331385154880187, ["mov     file, [rsp+118h+var_30]", "xor     file, fs:28h", "mov     eax, r13d", "jnz     loc_1509B"], ["mov~file,[rsp+0]", "xor~file,<TAG>", "mov~eax,r13d", "jnz~FOO"]], [1, 0, 31, 0, 0, 5, 0, 1, 10, 0, 0.01694915254237288, ["movdqu  xmm0, xmmword ptr [rsp+118h+stat_buf.st_atim.tv_sec]", "lea     r12, [rsp+118h+times]", "mov     ebp, 3", "movaps  xmmword ptr [rsp+118h+times.tv_sec], xmm0", "jmp     loc_14D28"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "lea~r12,[rsp+0]", "mov~ebp,0", "movaps~[mmword ptr [rsp+0],xmm0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 6, 0, 0.025569842197545295, ["test    r12, r12", "jz      loc_14D7B"], ["test~r12,r12", "jz~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 5, 0, 0.11826417299824662, ["test    ebp, ebp", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_14F90"], ["test~ebp,ebp", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 3, 0, 0.0035067212156633543, ["call    ___errno_location", "mov     r13d, 0FFFFFFFFh", "mov     dword ptr [rax], 16h", "jmp     loc_14E68"], ["call~FOO", "mov~r13d,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 3, 0, 0.0011689070718877848, ["cmp     rcx, 3B9AC9FFh", "ja      loc_14FF8"], ["cmp~rcx,0", "ja~FOO"]], [1, 0, 9, 0, 0, 3, 1, 1, 9, 0, 0.028053769725306835, ["xor     r13d, r13d", "cmp     rcx, 3FFFFFFEh", "jz      loc_14E68"], ["xor~r13d,r13d", "cmp~rcx,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 0, 0.0064289888953828166, ["mov     r13d, 0FFFFFFFFh", "jmp     loc_14E68"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 19, 0, 1, 6, 1, 2, 8, 0, 0.04760374050263004, ["lea     rdx, [rsp+118h+stat_buf]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_15090"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 8, 0, 0.005902980713033313, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 5, 0, 0, 3, 0, 1, 12, 0, 0.0017533606078316772, ["mov     rsi, [r12+8]", "mov     r8, [r12+10h]", "jmp     loc_14EEA"], ["mov~rsi,[r12+0]", "mov~r8,[r12+0]", "jmp~FOO"]], [1, 0, 16, 0, 0, 4, 0, 1, 8, 0, 0.10549386323787258, ["mov     rax, [r12+8]", "mov     rcx, [r12+18h]", "cmp     rax, 3FFFFFFEh", "jz      loc_15010"], ["mov~rax,[r12+0]", "mov~rcx,[r12+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 9, 0, 0.06165984804208065, ["cmp     rax, 3FFFFFFFh", "jz      loc_14FB0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 1, 0, 0.009701928696668615, ["test    rdi, rdi", "jz      loc_15038"], ["test~rdi,rdi", "jz~FOO"]], [1, 0, 59, 1, 0, 11, 2, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, file", "sub     rsp, 0F8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_30], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_14E20"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,file", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 0, 11, 0, 0.004529514903565166, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 50, 0, 0, 4, 2, 0, 3, 0, 0.06043249561659848, ["xor     eax, eax", "xor     r8d, r8d", "cmp     rdx, 1", "jbe     loc_14EB8"], ["xor~eax,eax", "xor~r8d,r8d", "cmp~rdx,0", "jbe~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 7, 0, 0.0052600818234950315, ["mov     rsi, [r12+8]", "mov     r8, [r12+10h]", "mov     rcx, [r12+18h]", "jmp     loc_14EEA"], ["mov~rsi,[r12+0]", "mov~r8,[r12+0]", "mov~rcx,[r12+0]", "jmp~FOO"]], [3, 0, 46, 1, 0, 7, 1, 1, 5, 0, 0.013442431326709525, ["xor     edx, edx", "cmp     rcx, 3FFFFFFEh", "mov     qword ptr [rsp+118h+var_F8], 0", "setz    dl", "mov     r8d, 1", "add     eax, edx", "jmp     loc_14CB6"], ["xor~edx,edx", "cmp~rcx,0", "mov~[word ptr [rsp+0],0", "setz~dl", "mov~r8d,0", "add~eax,edx", "jmp~FOO"]], [1, 0, 47, 0, 0, 2, 0, 0, 4, 0, 0.03576855639976622, ["cmp     rdi, 1", "jbe     loc_14E90"], ["cmp~rdi,0", "jbe~FOO"]], [0, 0, 47, 0, 0, 1, 0, 1, 5, 0, 0.0002922267679719462, ["jmp     short loc_14E90"], ["jmp~FOO"]], [2, 0, 21, 0, 0, 4, 1, 1, 7, 0, 0.05607831677381648, ["test    ebp, ebp", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_14EE0"], ["test~ebp,ebp", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 43, 0, 0, 3, 1, 1, 6, 0, 0.1206312098188194, ["mov     eax, cs:utimensat_works_really", "test    eax, eax", "js      loc_14D98"], ["mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 32, 0, 0, 5, 3, 0, 2, 0, 0.016715371127995326, ["mov     edx, cs:utimensat_works_really", "xor     r12d, r12d", "xor     ebp, ebp", "test    edx, edx", "jns     loc_14D28"], ["mov~edx,<TAG>", "xor~r12d,r12d", "xor~ebp,ebp", "test~edx,edx", "jns~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 0, 0.015634132086499122, ["cmp     rcx, 3FFFFFFFh", "jz      loc_14D7B"], ["cmp~rcx,0", "jz~FOO"]], [0, 0, 5, 0, 1, 6, 0, 2, 12, 0, 0.0017533606078316772, ["lea     rdi, [r12+10h]; ts", "call    gettime", "mov     rsi, [r12+8]", "mov     r8, [r12+10h]", "mov     rcx, [r12+18h]", "jmp     loc_14EEA"], ["lea~rdi,[r12+0]", "call~FOO", "mov~rsi,[r12+0]", "mov~r8,[r12+0]", "mov~rcx,[r12+0]", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 8, 0, 0.007013442431326709, ["mov     r8, qword ptr [rsp+118h+var_F8]", "lea     r12, [rsp+118h+times]"], ["mov~r8,[word ptr [rsp+0]", "lea~r12,[rsp+0]"]], [2, 0, 30, 0, 1, 8, 1, 2, 3, 0, 0.13009935710111045, ["xor     ecx, ecx; flags", "mov     rdx, r12; times", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "cmp     eax, 0", "mov     r13d, eax", "jle     loc_14E58"], ["xor~ecx,ecx", "mov~rdx,r12", "mov~rsi,file", "mov~edi,0", "call~FOO", "cmp~eax,0", "mov~r13d,eax", "jle~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 8, 0, 0.05128579777907656, ["lea     r12, [rsp+118h+times]", "jmp     loc_14D28"], ["lea~r12,[rsp+0]", "jmp~FOO"]], [1, 0, 45, 1, 0, 6, 2, 1, 5, 0, 0.11887784921098772, ["xor     ebp, ebp", "cmp     eax, 1", "setz    bpl", "add     ebp, r8d", "test    file, file", "jz      loc_15038"], ["xor~ebp,ebp", "cmp~eax,0", "setz~bpl", "add~ebp,r8d", "test~file,file", "jz~FOO"]], [4, 0, 48, 0, 0, 7, 1, 1, 4, 0, 0.03576855639976622, ["xor     eax, eax", "cmp     rsi, 3FFFFFFEh", "mov     [rsp+118h+times.tv_sec], 0", "setz    al", "cmp     rdi, 1", "mov     r8d, 1", "ja      loc_14CB6"], ["xor~eax,eax", "cmp~rsi,0", "mov~[rsp+0],0", "setz~al", "cmp~rdi,0", "mov~r8d,0", "ja~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 2, 0, 0.007013442431326709, ["call    ___errno_location", "mov     r13d, 0FFFFFFFFh", "mov     dword ptr [rax], 9", "jmp     loc_14E68"], ["call~FOO", "mov~r13d,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 11, 0, 0.0017533606078316772, ["mov     rdi, r12; ts", "call    gettime", "mov     rcx, [r12+18h]", "jmp     loc_14DF5"], ["mov~rdi,r12", "call~FOO", "mov~rcx,[r12+0]", "jmp~FOO"]], [1, 0, 25, 0, 1, 2, 0, 1, 4, 0, 0.09868497954412624, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 17, 0, 0, 1, 0, 0, 9, 0, 0.0445645821157218, ["lea     r12, [rsp+118h+times]"], ["lea~r12,[rsp+0]"]], [2, 0, 5, 0, 0, 3, 0, 1, 3, 0, 0.0021917007597895967, ["mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jmp     loc_14D7B"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 4, 0, 0.02673874926943308, ["jnz     loc_150A0"], ["jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 7, 0, 0.0701052016364699, ["cmp     ebp, 2", "jnz     loc_14F60"], ["cmp~ebp,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 5, 0, 0.008328462887200468, ["mov     cs:utimensat_works_really, 1"], ["mov~<TAG>,0"]], [0, 0, 17, 0, 0, 2, 1, 1, 7, 0, 0.06341320864991233, ["test    r12, r12", "jnz     short loc_14DD3"], ["test~r12,r12", "jnz~FOO"]]], "func_feature": [12, 24, 58, 6, 60, 91, 2, 227, 0.03025, 3, 8], "succs": [[22], [0, 58], [59, 28], [2, 59], [9, 20], [26, 4], [13], [10, 6], [47], [8, 34], [29, 45], [10], [19], [12], [12], [24, 35], [17, 15], [23, 15], [], [18, 42], [47], [36, 14], [3, 21], [19], [35, 23], [19, 11], [19], [26, 54], [26], [13], [25, 31], [44, 7], [51, 43], [32, 16], [47], [50, 38], [13], [49], [49, 37], [37], [27, 46], [40, 57], [], [55, 47], [52, 14], [13], [13], [56, 53], [47], [41, 51], [49, 39], [19], [7], [22], [30], [14], [1, 58], [48, 5], [19], [14, 30]], "fname": "utimens", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 75, 0, 0, 2, 0, 1, 0, 0, 0.04519198097179749, ["cmp     ebx, 3", "jnz     loc_1586D"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 79, 0, 0, 3, 1, 1, 4, 8, 0.09114848793747878, ["test    ebx, ebx", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_152B7"], ["test~ebx,ebx", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 13, -1, 0.03971287801563031, ["cmp     rax, 3FFFFFFFh", "jz      loc_157E0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 16, 0, 0, 4, 0, 1, 12, -1, 0.07003907577302074, ["mov     rax, [r13+8]", "mov     rcx, [r13+18h]", "cmp     rax, 3FFFFFFEh", "jz      loc_15710"], ["mov~rax,[r13+0]", "mov~rcx,[r13+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 13, -1, 0.0032279986408426777, ["mov     r8, qword ptr [rsp+1C8h+var_188]", "lea     r13, [rsp+1C8h+var_198]", "jmp     loc_1562C"], ["mov~r8,[word ptr [rsp+0]", "lea~r13,[rsp+0]", "jmp~FOO"]], [2, 0, 21, 0, 0, 4, 1, 1, 12, -1, 0.03572035338090384, ["test    ebx, ebx", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_15800"], ["test~ebx,ebx", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 72, 0, 0, 2, 1, 1, 6, 6, 0.050501189262657155, ["test    r13, r13", "jnz     loc_1550B"], ["test~r13,r13", "jnz~FOO"]], [1, 0, 74, 0, 1, 6, 1, 2, 6, 7, 0.0024209989806320085, ["lea     rdx, [rsp+1C8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_15209"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 14, -1, 0.01932551817872919, ["cmp     rcx, 3FFFFFFEh", "jz      loc_15810"], ["cmp~rcx,0", "jz~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 15, -1, 0.0005096839959225281, ["mov     rdi, r13; ts", "call    gettime", "mov     rcx, [r13+18h]", "jmp     loc_1560A"], ["mov~rdi,r13", "call~FOO", "mov~rcx,[r13+0]", "jmp~FOO"]], [1, 0, 31, 0, 0, 5, 0, 1, 16, 4, 0.0, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+stat_buf.st_mtim.tv_sec]", "lea     r13, [rsp+1C8h+var_198]", "mov     ebx, 3", "movaps  [rsp+1C8h+var_188], xmm0", "jmp     loc_1523C"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "lea~r13,[rsp+0]", "mov~ebx,0", "movaps~[rsp+0],xmm0", "jmp~FOO"]], [2, 0, 32, 0, 0, 4, 0, 1, 15, 4, 0.007560312606184167, ["cmp     qword ptr [rsp+1C8h+var_188+8], 3FFFFFFEh", "lea     r13, [rsp+1C8h+var_198]", "mov     ebx, 3", "jnz     loc_1523C"], ["cmp~[word ptr [rsp+0],0", "lea~r13,[rsp+0]", "mov~ebx,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 15, -1, 0.015375467210329596, ["cmp     rcx, 3FFFFFFFh", "jz      loc_15890"], ["cmp~rcx,0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 14, -1, 0.010745837580699967, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+stat_buf.st_atim.tv_sec]", "movaps  xmmword ptr [r13+0], xmm0", "jmp     loc_15617"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [r13+0],xmm0", "jmp~FOO"]], [2, 0, 34, 0, 0, 4, 1, 1, 7, 5, 0.025569147128780157, ["mov     eax, [rsp+1C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_15564"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 57, 0, 0, 3, 0, 1, 10, 13, 0.011439574130705637, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+st.st_mtim.tv_sec]", "movaps  xmmword ptr [r13+10h], xmm0", "jmp     loc_15545"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [r13+0],xmm0", "jmp~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 9, 14, 0.02423830558387135, ["cmp     rax, 3FFFFFFEh", "jz      loc_156F8"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 16, -1, 0.0005096839959225281, ["mov     rsi, [r13+8]", "mov     r8, [r13+10h]"], ["mov~rsi,[r13+0]", "mov~r8,[r13+0]"]], [0, 0, 5, 0, 0, 6, 0, 1, 15, -1, 0.0015290519877675843, ["mov     r8, [rsp+1C8h+stat_buf.st_mtim.tv_sec]", "mov     rcx, [rsp+1C8h+stat_buf.st_mtim.tv_nsec]", "mov     rsi, [r13+8]", "mov     [r13+10h], r8", "mov     [r13+18h], rcx", "jmp     loc_1562C"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rsi,[r13+0]", "mov~[r13+0],r8", "mov~[r13+0],rcx", "jmp~FOO"]], [0, 0, 87, 0, 0, 5, 3, 0, 1, 9, 0.007050628610261639, ["mov     eax, cs:lutimensat_works_really", "xor     r13d, r13d", "xor     ebx, ebx", "test    eax, eax", "jns     loc_151C0"], ["mov~eax,<TAG>", "xor~r13d,r13d", "xor~ebx,ebx", "test~eax,eax", "jns~FOO"]], [0, 1, 109, 1, 0, 12, 2, 1, 0, 10, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     r12, file", "push    rbx", "sub     rsp, 1A0h", "mov     rax, fs:28h", "mov     [rsp+1C8h+var_30], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_15420"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~r12,file", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [0, 0, 32, 0, 0, 5, 3, 1, 6, 4, 0.10019537886510364, ["mov     ecx, cs:utimensat_works_really", "xor     r13d, r13d", "xor     ebx, ebx", "test    ecx, ecx", "js      loc_15688"], ["mov~ecx,<TAG>", "xor~r13d,r13d", "xor~ebx,ebx", "test~ecx,ecx", "js~FOO"]], [0, 0, 56, 0, 0, 2, 1, 1, 5, 5, 0.11281005776418622, ["test    ts, ts", "jz      loc_15229"], ["test~ts,ts", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 11, 5, 0.01834862385321101, ["test    file, file", "jnz     loc_15229"], ["test~file,file", "jnz~FOO"]], [1, 0, 61, 0, 0, 2, 0, 1, 2, 8, 0.00989636425416242, ["mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jmp     loc_152B7"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 83, 0, 0, 1, 0, 1, 3, 11, 0.007008154943934761, ["jnz     loc_158D1"], ["jnz~FOO"]], [3, 0, 85, 0, 1, 8, 0, 2, 2, 10, 0.06969928644240571, ["mov     ecx, 100h; flags", "mov     rdx, r13; times", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "cmp     eax, 0", "mov     ebp, eax", "jle     loc_15448"], ["mov~ecx,0", "mov~rdx,r13", "mov~rsi,file", "mov~edi,0", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jle~FOO"]], [2, 0, 37, 0, 0, 4, 1, 1, 10, 6, 0.019877675840978593, ["mov     eax, [rsp+1C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_1555C"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 9, 7, 0.02234114848793748, ["cmp     rax, 3FFFFFFFh", "jz      loc_15838"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 30, 0, 1, 8, 1, 2, 7, 3, 0.12784573564390078, ["xor     ecx, ecx; flags", "mov     rdx, r13; times", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "cmp     eax, 0", "mov     ebp, eax", "jle     loc_15598"], ["xor~ecx,ecx", "mov~rdx,r13", "mov~rsi,file", "mov~edi,0", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jle~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 13, 4, 0.022935779816513763, ["lea     r13, [rsp+1C8h+var_198]", "jmp     loc_1523C"], ["lea~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 31, 0, 0, 5, 0, 1, 15, 4, 0.0024634726469588857, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+stat_buf.st_atim.tv_sec]", "lea     r13, [rsp+1C8h+var_198]", "mov     ebx, 3", "movaps  [rsp+1C8h+var_198], xmm0", "jmp     loc_1523C"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "lea~r13,[rsp+0]", "mov~ebx,0", "movaps~[rsp+0],xmm0", "jmp~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.0024209989806320085, ["mov     cs:utimensat_works_really, 1", "mov     cs:lutimensat_works_really, 1"], ["mov~<TAG>,0", "mov~<TAG>,0"]], [1, 0, 82, 0, 1, 4, 0, 2, 4, 10, 0.008324838600067958, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "mov     r14, rax", "jnz     loc_1544E"], ["call~FOO", "cmp~<TAG>,0", "mov~r14,rax", "jnz~FOO"]], [1, 0, 25, 0, 1, 2, 0, 1, 8, -1, 0.09955827387020048, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [2, 0, 3, 0, 1, 4, 0, 2, 11, -1, 0.0022935779816513763, ["call    ___errno_location", "mov     ebp, 0FFFFFFFFh", "mov     dword ptr [rax], 9", "jmp     loc_15462"], ["call~FOO", "mov~ebp,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 44, 1, 0, 6, 2, 1, 10, 7, 0.09641522256201156, ["xor     ebx, ebx", "cmp     eax, 1", "setz    bl", "add     ebx, r8d", "test    file, file", "jz      loc_15858"], ["xor~ebx,ebx", "cmp~eax,0", "setz~bl", "add~ebx,r8d", "test~file,file", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.018178729187903503, ["mov     rcx, [rsp+1C8h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_158CC"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.008367312266394835, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_15462"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.0020387359836901123, ["mov     cs:utimensat_works_really, 1", "jmp     loc_15462"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 8, -1, 0.005181787291879035, ["mov     rsi, file; file", "mov     edi, 0FFFFFF9Ch; fd", "call    _futimesat", "mov     ebp, eax", "jmp     loc_15462"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [1, 0, 9, 0, 0, 3, 1, 1, 13, -1, 0.01792388718994224, ["xor     ebp, ebp", "cmp     rcx, 3FFFFFFEh", "jz      loc_15462"], ["xor~ebp,ebp", "cmp~rcx,0", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 3, -1, 0.0033129459734964326, ["call    ___errno_location", "mov     ebp, 0FFFFFFFFh", "mov     dword ptr [rax], 16h", "jmp     loc_15462"], ["call~FOO", "mov~ebp,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 60, 0, 0, 3, 1, 1, 8, 15, 0.010972363801109976, ["xor     ebp, ebp", "cmp     rax, 3FFFFFFEh", "jz      loc_15462"], ["xor~ebp,ebp", "cmp~rax,0", "jz~FOO"]], [2, 0, 24, 0, 0, 4, 1, 1, 9, -1, 0.10134216785592934, ["test    ebx, ebx", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_1574D"], ["test~ebx,ebx", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 10, 0, 0.0037376826367652057, ["jmp     loc_15264"], ["jmp~FOO"]], [5, 0, 4, 4, 0, 20, 0, 1, 12, -1, 0.004757050628610262, ["mov     rdi, 20C49BA5E353F7CFh", "mov     rax, rsi", "sar     rsi, 3Fh", "imul    rdi", "mov     rax, rcx", "sar     rcx, 3Fh", "movq    xmm0, qword ptr [r13+0]", "mov     [rsp+1C8h+var_168], r8", "sar     rdx, 7", "sub     rdx, rsi", "mov     [rsp+1C8h+var_1C0], rdx", "imul    rdi", "movhps  xmm0, [rsp+1C8h+var_1C0]", "movaps  [rsp+1C8h+var_178], xmm0", "mov     rdi, rdx", "lea     rdx, [rsp+1C8h+var_178]", "sar     rdi, 7", "sub     rdi, rcx", "mov     [rsp+1C8h+var_160], rdi", "jmp     short loc_1569E"], ["mov~rdi,0", "mov~rax,rsi", "sar~rsi,0", "imul~,rdi", "mov~rax,rcx", "sar~rcx,0", "movq~xmm0,[word ptr [r13+0]", "mov~[rsp+0],r8", "sar~rdx,0", "sub~rdx,rsi", "mov~[rsp+0],rdx", "imul~,rdi", "movhps~xmm0,[rsp+0]", "movaps~[rsp+0],xmm0", "mov~rdi,rdx", "lea~rdx,[rsp+0]", "sar~rdi,0", "sub~rdi,rcx", "mov~[rsp+0],rdi", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 11, -1, 0.004841997961264017, ["mov     rsi, [r13+8]", "mov     r8, [r13+10h]", "mov     rcx, [r13+18h]", "jmp     loc_1562C"], ["mov~rsi,[r13+0]", "mov~r8,[r13+0]", "mov~rcx,[r13+0]", "jmp~FOO"]], [0, 0, 5, 0, 1, 6, 0, 2, 16, -1, 0.0005096839959225281, ["lea     rdi, [r13+10h]; ts", "call    gettime", "mov     rsi, [r13+8]", "mov     r8, [r13+10h]", "mov     rcx, [r13+18h]", "jmp     loc_1562C"], ["lea~rdi,[r13+0]", "call~FOO", "mov~rsi,[r13+0]", "mov~r8,[r13+0]", "mov~rcx,[r13+0]", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 10, -1, 0.07237512742099898, ["cmp     ebx, 3", "jnz     loc_158AA"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 7, -1, 0.0005521576622494054, ["jmp     loc_1556B"], ["jmp~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 5, -1, 0.0, ["add     rsp, 1A0h", "pop     rbx", "pop     rbp", "pop     file", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~file", "pop~r13", "pop~r14", "retn"]], [0, 0, 17, 0, 0, 2, 1, 1, 11, -1, 0.05487597689432552, ["test    r13, r13", "jnz     loc_155EA"], ["test~r13,r13", "jnz~FOO"]], [1, 0, 20, 0, 1, 6, 1, 2, 11, -1, 0.007730207271491676, ["lea     rdx, [rsp+1C8h+stat_buf]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_15289"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 11, -1, 0.003610261637784574, ["xor     edx, edx", "jmp     loc_1569E"], ["xor~edx,edx", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 10, -1, 0.018433571185864764, ["test    r13, r13", "jz      loc_15292"], ["test~r13,r13", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 14, -1, 0.008749575263336732, ["cmp     rcx, 3FFFFFFFh", "jz      loc_15292"], ["cmp~rcx,0", "jz~FOO"]], [0, 0, 86, 0, 0, 2, 0, 1, 7, 11, 0.016139993204213388, ["lea     r13, [rsp+1C8h+adjusted_timespec]", "jmp     loc_151C0"], ["lea~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 93, 0, 0, 2, 0, 1, 6, 12, 0.016139993204213388, ["cmp     ebx, 2", "jnz     loc_15490"], ["cmp~ebx,0", "jnz~FOO"]], [2, 0, 4, 0, 0, 3, 1, 0, 7, -1, 0.004034998301053347, ["mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "xor     edx, edx; tvp"], ["mov~<TAG>,0", "mov~<TAG>,0", "xor~edx,edx"]], [1, 0, 70, 0, 0, 4, 0, 1, 7, 9, 0.04965171593611961, ["mov     rdx, [r13+8]", "mov     rax, [r13+18h]", "cmp     rdx, 3FFFFFFEh", "jz      loc_15780"], ["mov~rdx,[r13+0]", "mov~rax,[r13+0]", "cmp~rdx,0", "jz~FOO"]], [0, 0, 71, 0, 0, 1, 0, 0, 8, 10, 0.017584097859327217, ["lea     r13, [rsp+1C8h+adjusted_timespec]"], ["lea~r13,[rsp+0]"]], [1, 0, 77, 0, 0, 3, 1, 1, 6, 9, 0.056744818212708124, ["test    ebx, ebx", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jnz     loc_154F0"], ["test~ebx,ebx", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 98, 1, 0, 7, 2, 1, 5, 10, 0.06625891946992865, ["mov     esi, cs:lutimensat_works_really", "xor     ebx, ebx", "cmp     eax, 1", "setz    bl", "add     ebx, r8d", "test    esi, esi", "js      loc_152A0"], ["mov~esi,<TAG>", "xor~ebx,ebx", "cmp~eax,0", "setz~bl", "add~ebx,r8d", "test~esi,esi", "js~FOO"]], [0, 0, 61, 0, 0, 1, 0, 0, 7, 8, 0.047230716955487605, ["lea     r13, [rsp+1C8h+adjusted_timespec]"], ["lea~r13,[rsp+0]"]], [4, 0, 100, 0, 0, 7, 1, 1, 4, 11, 0.021151885830784915, ["xor     eax, eax", "cmp     rdi, 3FFFFFFEh", "mov     [rsp+1C8h+adjusted_timespec.tv_sec], 0", "setz    al", "cmp     rsi, 1", "mov     r8d, 1", "ja      loc_15158"], ["xor~eax,eax", "cmp~rdi,0", "mov~[rsp+0],0", "setz~al", "cmp~rsi,0", "mov~r8d,0", "ja~FOO"]], [1, 0, 102, 0, 0, 4, 2, 0, 3, 12, 0.03465851172273191, ["xor     eax, eax", "xor     r8d, r8d", "cmp     rcx, 1", "jbe     loc_154A0"], ["xor~eax,eax", "xor~r8d,r8d", "cmp~rcx,0", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 12, -1, 0.0016989466530750936, ["jmp     loc_1556B"], ["jmp~FOO"]], [1, 0, 60, 0, 1, 6, 1, 2, 3, 7, 0.115655793408087, ["lea     rdx, [rsp+1C8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_1556B"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 86, 0, 0, 5, 0, 1, 10, 11, 0.003652735304111451, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+st.st_mtim.tv_sec]", "lea     ts, [rsp+1C8h+adjusted_timespec]", "mov     ebx, 3", "movaps  xmmword ptr [rsp+1C8h+adjusted_timespec.tv_sec+10h], xmm0", "jmp     loc_151C0"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "lea~ts,[rsp+0]", "mov~ebx,0", "movaps~[mmword ptr [rsp+0],xmm0", "jmp~FOO"]], [2, 0, 88, 0, 0, 4, 0, 1, 9, 12, 0.0022086306489976218, ["cmp     [rsp+1C8h+adjusted_timespec.tv_nsec+10h], 3FFFFFFEh", "lea     r13, [rsp+1C8h+adjusted_timespec]", "mov     ebx, 3", "jz      loc_156B8"], ["cmp~[rsp+0],0", "lea~r13,[rsp+0]", "mov~ebx,0", "jz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 8, 8, 0.039189036130932185, ["cmp     rdx, 3FFFFFFFh", "jz      loc_156D8"], ["cmp~rdx,0", "jz~FOO"]], [2, 0, 59, 0, 0, 4, 1, 1, 4, 6, 0.11518858307849135, ["mov     eax, [rsp+1C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_1555C"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [3, 0, 99, 1, 0, 7, 0, 1, 5, 11, 0.0, ["cmp     rdx, 3FFFFFFEh", "mov     [rsp+1C8h+adjusted_timespec.tv_sec+10h], 0", "mov     r8d, 1", "setz    dl", "movzx   edx, dl", "add     eax, edx", "jmp     loc_15158"], ["cmp~rdx,0", "mov~[rsp+0],0", "mov~r8d,0", "setz~dl", "movzx~edx,dl", "add~eax,edx", "jmp~FOO"]], [1, 0, 100, 0, 0, 2, 0, 0, 4, 11, 0.021151885830784915, ["cmp     rsi, 1", "jbe     loc_154C5"], ["cmp~rsi,0", "jbe~FOO"]], [0, 0, 57, 0, 1, 3, 0, 2, 11, 13, 0.0, ["lea     rdi, [r13+10h]; ts", "call    gettime", "jmp     loc_15545"], ["lea~rdi,[r13+0]", "call~FOO", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 10, 13, 0.028740514214520344, ["cmp     rax, 3FFFFFFFh", "jz      loc_157C8"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 27, 0, 1, 3, 0, 2, 9, 1, 0.007815154604145431, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_1559E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 8, 2, 0.019113149847094803, ["jnz     loc_158E7"], ["jnz~FOO"]], [0, 0, 61, 0, 1, 4, 0, 2, 10, 15, 0.0022935779816513763, ["mov     rdi, r13; ts", "call    gettime", "mov     rax, [r13+18h]", "jmp     loc_1552D"], ["mov~rdi,r13", "call~FOO", "mov~rax,[r13+0]", "jmp~FOO"]], [1, 0, 72, 0, 1, 6, 1, 2, 7, 11, 0.014186204553177031, ["lea     rdx, [rsp+1C8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_1556B"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 106, 0, 0, 8, 0, 0, 1, 14, 0.0020387359836901123, ["movdqu  xmm0, xmmword ptr [timespec]", "movaps  xmmword ptr [rsp+1C8h+adjusted_timespec.tv_sec], xmm0", "mov     file, [rsp+1C8h+adjusted_timespec.tv_nsec]", "lea     rcx, [rdi-3FFFFFFEh]", "movdqu  xmm0, xmmword ptr [timespec+10h]", "cmp     rcx, 1", "movaps  xmmword ptr [rsp+1C8h+adjusted_timespec.tv_sec+10h], xmm0", "jbe     short loc_15120"], ["movdqu~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~file,[rsp+0]", "lea~rcx,[rdi-3FFFFFFEh]+0]", "movdqu~xmm0,[mmword ptr [timespec+0]", "cmp~rcx,0", "movaps~[mmword ptr [rsp+0],xmm0", "jbe~FOO"]], [1, 0, 53, 0, 0, 8, 0, 0, 6, 11, 0.10406048250084948, ["movdqa  xmm0, xmmword ptr [r13+0]", "movaps  [rsp+1C8h+var_198], xmm0", "mov     rsi, qword ptr [rsp+1C8h+var_198+8]", "lea     rdx, [rsi-3FFFFFFEh]", "movdqa  xmm0, xmmword ptr [r13+10h]", "cmp     rdx, 1", "movaps  [rsp+1C8h+var_188], xmm0", "jbe     short loc_15326"], ["movdqa~xmm0,[mmword ptr [r13+0]", "movaps~[rsp+0],xmm0", "mov~rsi,[word ptr [rsp+0]", "lea~rdx,[rsi-3FFFFFFEh]+0]", "movdqa~xmm0,[mmword ptr [r13+0]", "cmp~rdx,0", "movaps~[rsp+0],xmm0", "jbe~FOO"]], [2, 0, 56, 0, 0, 4, 1, 1, 11, 12, 0.047995242949371394, ["mov     eax, [rsp+1C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_152F1"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 105, 0, 0, 2, 0, 1, 2, 14, 0.0006795786612300374, ["cmp     rdi, 3B9AC9FFh", "ja      loc_15738"], ["cmp~rdi,0", "ja~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 7, 11, 0.0049269452939177715, ["cmp     rsi, 3B9AC9FFh", "ja      loc_15738"], ["cmp~rsi,0", "ja~FOO"]], [1, 0, 104, 0, 0, 4, 0, 0, 2, 13, 0.01851851851851852, ["mov     rdx, [rsp+1C8h+adjusted_timespec.tv_nsec+10h]", "lea     timespec, [rdx-3FFFFFFEh]", "cmp     rsi, 1", "jbe     short loc_1513F"], ["mov~rdx,[rsp+0]", "lea~timespec,[rdx-3FFFFFFEh]+0]", "cmp~rsi,0", "jbe~FOO"]], [1, 0, 51, 0, 0, 4, 0, 0, 7, 10, 0.09947332653754673, ["mov     rcx, qword ptr [rsp+1C8h+var_188+8]", "lea     rdi, [rcx-3FFFFFFEh]", "cmp     rdi, 1", "jbe     short loc_15345"], ["mov~rcx,[word ptr [rsp+0]", "lea~rdi,[rcx-3FFFFFFEh]+0]", "cmp~rdi,0", "jbe~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 3, 13, 0.0003397893306150187, ["cmp     rdx, 3B9AC9FFh", "ja      loc_15738"], ["cmp~rdx,0", "ja~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 9, 14, 0.012119152791935671, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+st.st_atim.tv_sec]", "movaps  xmmword ptr [r13+0], xmm0", "jmp     loc_15539"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [r13+0],xmm0", "jmp~FOO"]], [0, 0, 80, 0, 0, 1, 0, 1, 5, 9, 0.01308188922867822, ["jmp     loc_151EE"], ["jmp~FOO"]], [1, 0, 48, 0, 0, 4, 2, 1, 8, 9, 0.09879374787631669, ["xor     eax, eax", "xor     r8d, r8d", "cmp     rdx, 1", "ja      short loc_1536B"], ["xor~eax,eax", "xor~r8d,r8d", "cmp~rdx,0", "ja~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 8, 10, 0.0003397893306150187, ["cmp     rcx, 3B9AC9FFh", "ja      loc_15738"], ["cmp~rcx,0", "ja~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 5, -1, 0.005479102956167177, ["call    ___errno_location", "mov     r14, rax"], ["call~FOO", "mov~r14,rax"]], [1, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.003100577641862046, ["mov     dword ptr [r14], 26h ; '&'"], ["mov~<TAG>,0"]], [3, 0, 47, 0, 0, 5, 1, 0, 9, 9, 0.0, ["xor     eax, eax", "cmp     rsi, 3FFFFFFEh", "mov     qword ptr [rsp+1C8h+var_198], 0", "setz    al", "mov     r8d, 1"], ["xor~eax,eax", "cmp~rsi,0", "mov~[word ptr [rsp+0],0", "setz~al", "mov~r8d,0"]], [1, 0, 46, 0, 0, 2, 0, 1, 9, 8, 0.09794427454977915, ["cmp     rdi, 1", "ja      short loc_1538E"], ["cmp~rdi,0", "ja~FOO"]], [1, 0, 91, 0, 1, 6, 1, 2, 7, 13, 0.006031260618416582, ["lea     rdx, [rsp+1C8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_1556B"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 35, 0, 1, 6, 1, 2, 13, 6, 0.02059972816853551, ["lea     rdx, [rsp+1C8h+stat_buf]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_1556B"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 19, 0, 1, 6, 1, 2, 13, -1, 0.02442235813795447, ["lea     rdx, [rsp+1C8h+stat_buf]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_1556B"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 12, 5, 0.050246347264695894, ["cmp     ebx, 2", "jnz     loc_15770"], ["cmp~ebx,0", "jnz~FOO"]], [3, 0, 45, 1, 0, 6, 1, 0, 10, 8, 0.0, ["xor     edx, edx", "cmp     rcx, 3FFFFFFEh", "mov     qword ptr [rsp+1C8h+var_188], 0", "setz    dl", "mov     r8d, 1", "add     eax, edx"], ["xor~edx,edx", "cmp~rcx,0", "mov~[word ptr [rsp+0],0", "setz~dl", "mov~r8d,0", "add~eax,edx"]], [1, 0, 86, 0, 0, 5, 0, 1, 9, 11, 0.014271151885830786, ["movdqu  xmm0, xmmword ptr [rsp+1C8h+st.st_atim.tv_sec]", "lea     r13, [rsp+1C8h+adjusted_timespec]", "mov     ebx, 3", "movaps  xmmword ptr [rsp+1C8h+adjusted_timespec.tv_sec], xmm0", "jmp     loc_151C0"], ["movdqu~xmm0,[mmword ptr [rsp+0]", "lea~r13,[rsp+0]", "mov~ebx,0", "movaps~[mmword ptr [rsp+0],xmm0", "jmp~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 8, 12, 0.011043153244988108, ["cmp     [rsp+1C8h+adjusted_timespec.tv_nsec], 3FFFFFFEh", "jz      loc_15578"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 42, 0, 0, 3, 1, 1, 11, 6, 0.09208290859667007, ["mov     edx, cs:utimensat_works_really", "test    edx, edx", "js      loc_155B0"], ["mov~edx,<TAG>", "test~edx,edx", "js~FOO"]], [0, 0, 86, 0, 0, 1, 0, 0, 10, 11, 0.003652735304111451, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 34, 0, 0, 2, 0, 1, 14, 5, 0.017329255861365956, ["cmp     qword ptr [rsp+1C8h+var_198+8], 3FFFFFFEh", "jz      loc_157A8"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 14, -1, 0.01979272850832484, ["lea     r13, [rsp+1C8h+var_198]"], ["lea~r13,[rsp+0]"]], [1, 0, 80, 0, 1, 3, 0, 1, 3, 9, 0.06651376146788991, ["call    ___errno_location", "mov     r14, rax", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~r14,rax", "mov~<TAG>,0"]]], "func_feature": [22, 46, 110, 7, 110, 174, 1, 403, 0.02788, 3, 10], "succs": [[6, 7], [0, 68], [8, 56], [41, 2], [46], [100, 4], [60, 14], [50, 6], [18, 12], [8], [29], [10, 29], [48, 17], [12], [21, 95], [84], [77, 15], [46], [46], [24, 26], [82, 19], [59, 29], [83, 21], [35, 21], [68], [32, 33], [25, 109], [94, 23], [80, 27], [34, 79], [29], [29], [37], [32, 91], [44], [37], [105, 35], [51, 69], [37], [37], [37], [37, 13], [37], [90, 37], [49, 55], [44], [40], [46], [46], [52, 53], [38], [], [3, 54], [67, 52], [40], [54, 47], [9, 54], [26], [57, 98], [40], [72, 43], [60], [64, 81], [58, 62], [68], [74, 63], [65, 75], [38], [73, 38], [], [26], [106, 70], [16, 28], [94, 22], [63], [74, 63], [84], [84, 76], [45, 39], [78, 39], [16], [61, 38], [85, 87], [88, 86], [83, 94], [42, 87], [88, 42], [89, 66], [92, 93], [66, 42], [77], [1], [96, 97], [42, 92], [95], [38], [97], [36, 102], [104, 38], [107, 38], [108, 38], [99, 30], [36], [26], [71, 103], [101, 5], [26], [11, 31], [3], [1]], "fname": "lutimens", "n_num": 110}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 2, 1, 1, 16, 1, 1, 0, 0, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 00000000000159A4 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_1BC38", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_159F4"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 00000000000159A4 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_15BB6"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 00000000000159A4 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 1, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_15CD0; jumptable 00000000000159A4 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 00000000000159A4 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 00000000000159A4 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 00000000000159A4 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 00000000000159A4 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 00000000000159A4 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_15AA2"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1593C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_15A38"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 00000000000159A4 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 00000000000159A4 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_15C53"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 00000000000159A4 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 0, 275, 0.01905, 16, 13], "succs": [[2], [0, 5, 6, 8, 11, 12, 13, 17, 18, 19], [17], [2], [], [4], [4], [1, 14], [20], [], [9, 7], [9], [9], [9], [3], [7], [10, 15], [], [20], [3], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 1, 19, 1, 2, 0, 0, 0.007905138339920948, ["mov     r9, [authors+10h]; jumptable 0000000000015DDC case 7", "mov     r14, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     edx, 5; category", "mov     r15, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_1608B"], ["mov~r9,[authors+0]", "mov~r14,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "mov~r15,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 4, -1, 0.1768774703557312, ["lea     rdx, off_1BC60", "movsxd  rax, dword ptr [rdx+rbx*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 16, 1, 1, 5, -1, 0.007905138339920948, ["mov     r8, [authors+8]; jumptable 0000000000015DDC case 6", "mov     r13, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     edx, 5; category", "mov     r14, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    r13", "push    rbx", "push    r15"], ["mov~r8,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "xor~edi,edi", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~r13", "push~rbx", "push~r15"]], [2, 0, 0, 1, 1, 15, 1, 1, 6, -1, 0.0, ["mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 15, 1, 2, 5, -1, 0.007905138339920948, ["mov     rbx, [authors+20h]; jumptable 0000000000015DDC case 5", "mov     r15, [authors+18h]", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     edx, 5; category", "mov     authors, [authors+0]", "xor     edi, edi; domainname", "call    _dcgettext", "push    rbx", "mov     r9, r14", "push    r15", "mov     r8, r13", "mov     rcx, rbp", "jmp     short loc_15FF2"], ["mov~rbx,[authors+0]", "mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~edx,0", "mov~authors,[authors+0]", "xor~edi,edi", "call~FOO", "push~rbx", "mov~r9,r14", "push~r15", "mov~r8,r13", "mov~rcx,rbp", "jmp~FOO"]], [2, 0, 1, 1, 1, 13, 1, 1, 5, -1, 0.007905138339920948, ["mov     r15, [authors+18h]; jumptable 0000000000015DDC case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "mov     r8, r13", "push    r15", "mov     rcx, rbx"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "mov~r8,r13", "push~r15", "mov~rcx,rbx"]], [1, 0, 18, 0, 1, 8, 1, 2, 2, 2, 0.06719367588932806, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "mov     stream, r12", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_15D74"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~stream,r12", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 3, 0.11857707509881422, ["test    command_name, command_name", "jz      loc_15E68"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 2, 1, 1, 16, 1, 1, 5, -1, 0.008893280632411066, ["mov     r10, [authors+38h]; jumptable 0000000000015DDC case 8", "mov     r9, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     [rsp+58h+var_48], r10", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~[rsp+0],r10", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "call~FOO", "sub~rsp,0"]], [3, 0, 1, 1, 1, 18, 2, 2, 5, -1, 0.001976284584980237, ["mov     rbx, [authors+0]; jumptable 0000000000015DDC case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 6, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbp", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 23, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "mov     rbp, authors", "sub     rsp, 28h", "cmp     qword ptr [authors], 0", "jz      short loc_15D4C"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "mov~rbp,authors", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 5, -1, 0.001976284584980237, ["mov     r14, [authors+10h]; jumptable 0000000000015DDC case 3", "mov     r13, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r14", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r14", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 5, 0.001976284584980237, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [5, 0, 17, 0, 4, 20, 3, 5, 3, 1, 0.19169960474308298, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbx, 9; switch 10 cases", "ja      loc_16110; jumptable 0000000000015DDC default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbx,0", "ja~FOO"]], [1, 0, 18, 0, 1, 8, 1, 1, 2, 2, 0.07509881422924901, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     stream, r12", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~stream,r12", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [2, 0, 22, 1, 0, 3, 0, 1, 2, 4, 0.04150197628458498, ["add     n_authors, 1", "cmp     qword ptr [rbp+n_authors*8+0], 0", "jnz     short loc_15D40"], ["add~n_authors,0", "cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 1, 1, 1, 15, 1, 1, 6, -1, 0.007905138339920948, ["mov     r10, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r10", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_58]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r10,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r10", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 5, -1, 0.014822134387351778, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r11, [rsp+58h+var_40]", "push    r11", "jmp     loc_15E25"], ["xor~edi,edi", "call~FOO", "mov~r11,[rsp+0]", "push~r11", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 4, 0, 0.02075098814229249, ["mov     r11, [authors+40h]; jumptable 0000000000015DDC default case", "mov     r10, [authors+38h]", "mov     edx, 5", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "jmp     loc_15ED3"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "mov~edx,0", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 5, -1, 0.001976284584980237, ["mov     r11, [authors+40h]; jumptable 0000000000015DDC case 9", "mov     r10, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     authors, [authors+0]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "lea~rsi,<TAG>", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~authors,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [3, 0, 1, 1, 1, 20, 2, 2, 5, -1, 0.001976284584980237, ["mov     r13, [authors+8]; jumptable 0000000000015DDC case 2", "mov     rbx, [authors+0]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000015DDC case 0", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 22, 31, 4, 24, 34, 0, 287, 0.03187, 16, 14], "succs": [[10], [0, 2, 4, 5, 8, 9, 12, 20, 22, 23], [10], [], [3], [3], [14], [6, 15], [17], [21], [], [13, 7], [21], [16], [1, 19], [21, 14], [16, 7], [23], [17], [18], [18], [], [21], []], "fname": "version_etc_ar", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 23, 0, 1, 8, 1, 2, 0, 0, 0.10696517412935323, ["mov     authors, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_161DA"], ["mov~authors,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 3, -1, 0.2233152419719584, ["test    command_name, command_name", "jz      loc_16465"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 25, 1, 0, 8, 2, 1, 10, -1, 0.008480325644504749, ["lea     rdi, [rax+20h]", "xor     ebp, ebp", "mov     [authors+8], rdi", "cmp     qword ptr [rax+18h], 0", "setnz   bpl", "add     rbp, 9", "test    command_name, command_name", "jnz     loc_161BB"], ["lea~rdi,[rax+0]", "xor~ebp,ebp", "mov~[authors+0],rdi", "cmp~[word ptr [rax+0],0", "setnz~bpl", "add~rbp,0", "test~command_name,command_name", "jnz~FOO"]], [0, 0, 53, 0, 0, 6, 1, 1, 5, 9, 0.018995929443690638, ["lea     r10d, [rax+18h]", "mov     [authors], r10d", "mov     r9, [rdi+r11]", "test    r9, r9", "mov     [rsp+0B8h+authtab+10h], r9", "jz      short loc_162E0"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 0, 4, 9, 0.015829941203075532, ["cmp     r11d, 2Fh ; '/'", "jbe     short loc_162F0"], ["cmp~r11d,0", "jbe~FOO"]], [1, 0, 47, 1, 0, 7, 1, 1, 2, 8, 0.02838082315694256, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+8], rdi", "jnz     short loc_162BF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 49, 0, 0, 8, 1, 1, 1, 9, 0.007914970601537766, ["mov     rax, [authors+8]", "mov     stream, rax", "lea     rax, [rax+8]", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab], rdi", "jnz     loc_1626E"], ["mov~rax,[authors+0]", "mov~stream,rax", "lea~rax,[rax+0]", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 3, 9, 0.008819538670284939, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.02939846223428313, ["mov     ebp, 4", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 41, 0, 0, 6, 1, 1, 9, 7, 0.015829941203075532, ["lea     r10d, [rax+28h]", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab+20h], r9", "jz      short loc_16380"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 6, -1, 0.014699231117141566, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 27, 0, 0, 1, 0, 0, 3, -1, 0.012550881953867029, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 1, 3, 1, 1, 8, 1, 2, 8, -1, 0.0013568521031207597, ["mov     rcx, [rsp+0D8h+var_B8]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_16518; jumptable 0000000000016242 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [2, 0, 4, 1, 1, 18, 1, 2, 7, -1, 0.005314337403889643, ["mov     rcx, [rsp+0B8h+authtab]; jumptable 0000000000016242 case 6", "mov     r13, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14", "jmp     short loc_165E6"], ["mov~rcx,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14", "jmp~FOO"]], [1, 0, 4, 0, 1, 19, 1, 1, 7, -1, 0.005314337403889643, ["mov     r8, [rsp+0B8h+authtab+8]; jumptable 0000000000016242 case 7", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "push    r12", "push    rbp", "mov     r9, r13", "push    r15", "push    r14", "mov     r8, [rsp+0D8h+var_B0]"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "push~rbp", "mov~r9,r13", "push~r15", "push~r14", "mov~r8,[rsp+0]"]], [1, 0, 51, 0, 0, 2, 0, 0, 6, 8, 0.016734509271822705, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_16340"], ["cmp~r10d,0", "jbe~FOO"]], [1, 1, 67, 1, 0, 14, 1, 0, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 88h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "jbe     loc_16244"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 7, 7, 0.006105834464043419, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 4, 0, 1, 10, 1, 1, 7, -1, 0.005314337403889643, ["mov     r15, [rsp+0B8h+authtab+20h]; jumptable 0000000000016242 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "push    r15"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15"]], [0, 0, 20, 1, 0, 4, 0, 1, 6, -1, 0.1824966078697422, ["lea     rdx, off_1BC88", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 4, 1, 1, 17, 1, 2, 7, -1, 0.005427408412483039, ["mov     r9, [rsp+0B8h+authtab+10h]; jumptable 0000000000016242 case 8", "mov     r8, [rsp+0B8h+authtab+8]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "jmp     loc_164EA"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 8, -1, 0.0027137042062415195, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+0E8h+var_A8]", "mov     rdi, stream", "mov     r8, [rsp+0E8h+var_B0]", "mov     rcx, [rsp+0E8h+var_B8]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 4, 1, 1, 7, -1, 0.007010402532790593, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+0B8h+var_A0]", "push    r10"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10"]], [1, 0, 26, 0, 0, 2, 0, 1, 4, -1, 0.02939846223428313, ["mov     ebp, 1", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 59, 0, 0, 6, 1, 1, 3, 10, 0.01594301221166893, ["lea     r11d, [rax+10h]", "mov     [authors], r11d", "mov     r9, [rdi+r10]", "test    r9, r9", "mov     [rsp+0B8h+authtab+8], r9", "jz      short loc_16290"], ["lea~r11d,[rax+0]", "mov~<TAG>,r11d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 3, 0, 1, 10, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySSAnd; jumptable 0000000000016242 case 3", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_16851"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 1, 1, 0, 14, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySAndS; jumptable 0000000000016242 case 2", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_16851"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.023518769787426504, ["mov     ebp, 5", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 35, 1, 0, 6, 1, 1, 11, 5, 0.011080958842152872, ["add     eax, 30h ; '0'", "mov     [authors], eax", "mov     rax, [rdi+r10]", "test    rax, rax", "mov     [rsp+0B8h+authtab+28h], rax", "jz      short loc_163D0"], ["add~eax,0", "mov~<TAG>,eax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, -1, 0.009724106739032113, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 1, 1, 1, 0, 15, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 45, 0, 0, 2, 0, 0, 8, 7, 0.014699231117141566, ["cmp     r9d, 2Fh ; '/'", "jbe     short loc_16390"], ["cmp~r9d,0", "jbe~FOO"]], [1, 0, 41, 1, 0, 7, 1, 1, 4, 6, 0.04794210764360018, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+18h], rdi", "jnz     short loc_1635F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 44, 1, 0, 7, 1, 1, 3, 7, 0.0407055630936228, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+10h], rdi", "jnz     short loc_1630F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, -1, 0.01826096788783356, ["mov     rax, [rsp+0B8h+var_40]; jumptable 0000000000016242 case 0", "xor     rax, fs:28h", "jnz     loc_16851"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 8, -1, 0.0013568521031207597, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_16518; jumptable 0000000000016242 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 5, -1, 0.013794663048394391, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 39, 0, 0, 2, 0, 0, 10, 6, 0.009724106739032113, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_163E0"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 11, 5, 0.0024875621890547263, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [2, 0, 4, 1, 1, 10, 1, 2, 7, -1, 0.005314337403889643, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000016242 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "sub     rsp, 8", "jmp     short loc_1668E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [5, 0, 22, 0, 4, 20, 3, 5, 5, -1, 0.21393034825870647, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_16800; jumptable 0000000000016242 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 23, 0, 1, 8, 1, 1, 4, -1, 0.11668928086838534, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 26, 0, 0, 1, 1, 0, 2, -1, 0.017639077340569877, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 65, 0, 0, 8, 1, 1, 1, 11, 0.0067842605156037995, ["mov     rdi, [authors+10h]", "lea     r10d, [rax+8]", "mov     r9d, eax", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab], r9", "jz      loc_161B0"], ["mov~rdi,[authors+0]", "lea~r10d,[rax+0]", "mov~r9d,eax", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 2, 10, 0.011872455902306648, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_162A0"], ["cmp~r10d,0", "jbe~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, -1, 0.02939846223428313, ["mov     ebp, 2", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 6, -1, 0.02939846223428313, ["mov     ebp, 3", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.017639077340569877, ["mov     ebp, 6", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.0030529172320217096, ["mov     ebp, 7", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 10, 0, 0.0002261420171867933, ["mov     ebp, 8", "jmp     loc_161B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 5, 8, 0.007462686567164179, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 88h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 47, 0, 0, 6, 1, 1, 7, 8, 0.018995929443690638, ["lea     r9d, [rax+20h]", "mov     [authors], r9d", "mov     r10, [rdi+r10]", "test    r10, r10", "mov     [rsp+0B8h+authtab+18h], r10", "jz      short loc_16330"], ["lea~r9d,[rax+0]", "mov~<TAG>,r9d", "mov~r10,<TAG>", "test~r10,r10", "mov~[rsp+0],r10", "jz~FOO"]], [0, 0, 32, 0, 0, 6, 1, 1, 7, 3, 0.04432383536861149, ["lea     rdi, [rax+8]", "mov     [authors+8], rdi", "mov     rdi, [rax]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+30h], rdi", "jz      loc_16856"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 35, 1, 0, 7, 1, 1, 6, 4, 0.04590682948891904, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+28h], rdi", "jnz     short loc_163F8"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 12, 4, 0.003165988240615106, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 38, 1, 0, 7, 1, 1, 5, 5, 0.050203527815468114, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+20h], rdi", "jnz     short loc_163AF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 9, 1, 0.014586160108548168, ["lea     rdi, [rax+18h]", "mov     [authors+8], rdi", "mov     rdi, [rax+10h]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+40h], rdi", "jz      loc_1686A"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 6, -1, 0.015603799185888738, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 0000000000016242 default case", "mov     r9, [rsp+0B8h+authtab+10h]", "mov     edx, 5", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     [rsp+0B8h+var_A0], r10", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "jmp     loc_164DC"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenByS; jumptable 0000000000016242 case 1", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_16851"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 4, -1, 0.013116236996834011, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 5, 0, 0, 15, 0, 0, 7, -1, 0.0002261420171867933, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 0000000000016242 case 9", "mov     r9, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A0], r10", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.004975124378109453, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [1, 1, 1, 1, 0, 13, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     rcx, rbp", "mov     rdi, stream", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~rcx,rbp", "mov~rdi,stream", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 30, 0, 0, 6, 1, 1, 8, 2, 0.022614201718679332, ["lea     rdi, [rax+10h]", "mov     [authors+8], rdi", "mov     rdi, [rax+8]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+38h], rdi", "jz      loc_16860"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]]], "func_feature": [19, 44, 60, 5, 68, 103, 0, 425, 0.02504, 17, 18], "succs": [[41], [0, 42], [0, 42], [46, 15], [51, 3], [34, 11], [43, 5], [5], [1], [8, 38], [8], [23], [35], [12], [12], [17, 53], [44, 6], [33], [36], [35, 40, 13, 14, 18, 20, 25, 27, 61, 63], [21], [35], [21], [1], [4, 23], [60, 31], [65], [26, 60], [1], [56, 28], [28], [65], [64, 9], [57, 37], [33, 62], [60, 52], [35], [47], [29, 39], [55], [36], [59, 19], [41, 65], [1], [43, 45], [24, 7], [1], [1], [1], [1], [1], [34], [], [32, 47], [48, 67], [30, 54], [54], [10, 55], [2, 50], [22], [], [66, 60], [46], [22], [57], [], [65], [49, 58]], "fname": "version_etc_va", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 34, 0, 0, 5, 1, 1, 0, 0, 0.009523809523809525, ["mov     rax, [rdi+28h]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "test    rax, rax", "mov     [rsp+108h+var_C0], rax", "jz      loc_16E40"], ["mov~rax,[rdi+0]", "mov~[rsp+0],0", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 36, 1, 0, 23, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_70], rax", "xor     eax, eax", "lea     rax, [rsp+108h+arg_0]", "mov     [rsp+108h+var_48], r8", "mov     [rsp+108h+var_40], r9", "mov     [rsp+108h+authors.gp_offset], 28h ; '('", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_68]", "mov     [rsp+108h+authors.reg_save_area], rax", "mov     stream, rax", "mov     rax, [rax+20h]", "test    rax, rax", "mov     [rsp+108h+var_C8], rax", "jz      loc_16E38"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~stream,rax", "mov~rax,[rax+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [5, 0, 18, 0, 4, 20, 3, 5, 4, -1, 0.2571428571428571, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_16DE0; jumptable 0000000000016AA0 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 19, 0, 1, 8, 1, 2, 3, -1, 0.12063492063492064, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_16A38"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 1, 3, -1, 0.12063492063492064, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [2, 0, 3, 0, 2, 12, 2, 3, 6, -1, 0.0, ["mov     rbp, [rsp+108h+var_C8]; jumptable 0000000000016AA0 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_16B23; jumptable 0000000000016AA0 case 0"], ["mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 16, 1, 0, 4, 0, 1, 5, -1, 0.21865079365079365, ["lea     rdx, off_1BCB0", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, -1, 0.25, ["test    command_name, command_name", "jz      loc_16B50"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 2, 6, 0.024603174603174603, ["mov     rax, [rsp+108h+arg_0]", "lea     rdi, [rsp+108h+arg_8]", "mov     ebp, 2", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_B8], rax", "jz      loc_16A10"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 31, 0, 0, 7, 1, 1, 3, 5, 0.02142857142857143, ["mov     rax, [rdi]", "lea     r8, [rsp+108h+arg_10]", "mov     ebp, 3", "mov     [rsp+108h+authors.overflow_arg_area], r8", "test    rax, rax", "mov     [rsp+108h+var_B0], rax", "jz      loc_16A10"], ["mov~rax,<TAG>", "lea~r8,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],r8", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 30, 0, 0, 7, 1, 1, 4, 4, 0.025396825396825397, ["mov     rdi, [r8]", "lea     rax, [rsp+108h+arg_18]", "mov     ebp, 4", "mov     [rsp+108h+authors.overflow_arg_area], rax", "test    rdi, rdi", "mov     [rsp+108h+var_A8], rdi", "jz      loc_16A10"], ["mov~rdi,<TAG>", "lea~rax,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rax", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 29, 0, 0, 7, 1, 1, 5, 3, 0.027777777777777776, ["mov     rax, [rax]", "lea     rdi, [rsp+108h+arg_20]", "mov     ebp, 5", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_A0], rax", "jz      short loc_16A10"], ["mov~rax,<TAG>", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, -1, 0.01746031746031746, ["xor     ebp, ebp", "jmp     loc_16A10"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, -1, 0.00873015873015873, ["mov     ebp, 1", "jmp     loc_16A10"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.01746031746031746, ["mov     ebp, 6", "jmp     loc_16A10"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, -1, 0.00873015873015873, ["mov     ebp, 8", "jmp     loc_16A10"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 8, 0, 0.01746031746031746, ["mov     ebp, 7", "jmp     loc_16A10"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 22, 1, 0, 6, 1, 0, 9, -1, 0.00873015873015873, ["xor     ebp, ebp", "cmp     qword ptr [rdi+18h], 0", "lea     rax, [rsp+108h+arg_40]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "setnz   bpl", "add     rbp, 9"], ["xor~ebp,ebp", "cmp~[word ptr [rdi+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "setnz~bpl", "add~rbp,0"]], [2, 0, 3, 0, 2, 16, 2, 3, 6, -1, 0.0, ["mov     r13, [rsp+108h+var_B8]; jumptable 0000000000016AA0 case 3", "mov     r12, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbp, [rsp+108h+var_C8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r9, r13", "mov     rdx, rax", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_16B23; jumptable 0000000000016AA0 case 0"], ["mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "lea~rsi,<TAG>", "mov~rbp,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r9,r13", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 1, 2, 6, -1, 0.007936507936507936, ["mov     r15, [rsp+108h+var_A8]; jumptable 0000000000016AA0 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "push    r15", "jmp     short loc_16CCB"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 7, -1, 0.009523809523809525, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+138h+var_F8]", "mov     rdi, stream", "mov     r8, [rsp+138h+var_100]", "mov     rcx, [rsp+138h+var_108]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 5, 1, 2, 6, -1, 0.013888888888888888, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+108h+var_F0]", "push    r10", "jmp     loc_16AF5"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 4, 1, 1, 16, 1, 1, 6, -1, 0.008333333333333333, ["mov     r9, [rsp+108h+var_B8]; jumptable 0000000000016AA0 case 8", "mov     r8, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0"]], [0, 0, 26, 0, 0, 6, 1, 1, 7, 1, 0.022222222222222223, ["lea     rax, [rsp+108h+arg_30]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+8]", "test    rax, rax", "mov     [rsp+108h+var_90], rax", "jz      loc_16E63"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 6, 2, 0.02857142857142857, ["lea     rax, [rsp+108h+arg_28]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi]", "test    rax, rax", "mov     [rsp+108h+var_98], rax", "jz      loc_16E4F"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 5, -1, 0.02261904761904762, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000016AA0 default case", "mov     r9, [rsp+108h+var_B8]", "mov     edx, 5", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     [rsp+108h+var_F0], r10", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "jmp     loc_16BC7"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, -1, 0.05396825396825397, ["mov     rax, [rsp+108h+var_70]; jumptable 0000000000016AA0 case 0", "xor     rax, fs:28h", "jnz     loc_16E4A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 2, 14, 2, 3, 6, -1, 0.0, ["mov     r12, [rsp+108h+var_C0]; jumptable 0000000000016AA0 case 2", "mov     rbp, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_16B23; jumptable 0000000000016AA0 case 0"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 7, -1, 0.004761904761904762, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_16B23; jumptable 0000000000016AA0 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 7, -1, 0.004761904761904762, ["mov     rcx, [rsp+128h+var_108]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_16B23; jumptable 0000000000016AA0 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 5, 0, 0, 15, 0, 0, 6, -1, 0.0007936507936507937, ["mov     r10, [rsp+108h+var_88]; jumptable 0000000000016AA0 case 9", "mov     r9, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F0], r10", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [2, 0, 4, 1, 1, 9, 1, 1, 6, -1, 0.007936507936507936, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000016AA0 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 24, 0, 0, 6, 1, 1, 8, -1, 0.012698412698412698, ["lea     rax, [rsp+108h+arg_38]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+10h]", "test    rax, rax", "mov     [rsp+108h+var_88], rax", "jz      loc_16E59"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 0D8h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 4, 0, 1, 20, 1, 2, 6, -1, 0.007936507936507936, ["mov     r8, [rsp+108h+var_C0]; jumptable 0000000000016AA0 case 7", "mov     r13, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     r12, [rsp+108h+var_98]", "mov     edx, 5; category", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "push    r12", "mov     r9, r13", "push    rbp", "push    r15", "push    r14", "mov     r8, [rsp+128h+var_100]", "jmp     short loc_16D64"], ["mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~r12,[rsp+0]", "mov~edx,0", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "mov~r9,r13", "push~rbp", "push~r15", "push~r14", "mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 4, 1, 1, 17, 1, 1, 6, -1, 0.007936507936507936, ["mov     rcx, [rsp+108h+var_C8]; jumptable 0000000000016AA0 case 6", "mov     rbp, [rsp+108h+var_A0]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "xor     edi, edi; domainname", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14"], ["mov~rcx,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14"]]], "func_feature": [22, 34, 50, 17, 37, 56, 1, 329, 0.03698, 17, 9], "succs": [[8, 13], [0, 12], [25, 6], [2], [2], [26], [35, 36, 5, 18, 19, 22, 26, 27, 30, 31], [3, 4], [9, 7], [10, 7], [11, 7], [24, 7], [7], [7], [7], [7], [7], [7], [26], [28], [26], [20], [20], [16, 32], [14, 23], [21], [33, 34], [26], [26], [26], [21], [28], [17, 15], [], [], [29], [29]], "fname": "version_etc", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3065", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3064, 0", "jz      short loc_16F08"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3064, 1", "setz    al", "mov     cs:can_write_3065, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 2, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 5, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     rbx, rax", "seto    al", "test    rbx, rbx", "js      short loc_16F5E"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~rbx,rax", "seto~al", "test~rbx,rbx", "js~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.15000000000000002, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_16F5E"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.2, ["mov     n, rbx; size", "call    _malloc", "test    rax, rax", "jnz     short loc_16F5C"], ["mov~n,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05, ["test    rbx, rbx", "jnz     short loc_16F5E"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 4, 6, 0, 6, 8, 0, 19, 0.06667, 0, 1], "succs": [[1, 5], [2, 5], [3, 4], [4, 5], [], []], "fname": "xnmalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 8, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_16FB9"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.17857142857142855, ["mov     rsi, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_16FA9"], ["mov~rsi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.17857142857142855, ["test    rsi, rsi", "mov     rbx, rsi", "jnz     short loc_16F97"], ["test~rsi,rsi", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 0, 3, 0.05357142857142857, ["test    p, p", "jnz     short loc_16FB0"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05357142857142857, ["test    rbx, rbx", "jnz     short loc_16FB9"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.10714285714285714, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_16FB9"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 4, 1, 1, 0, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 7, 9, 0, 9, 12, 0, 28, 0.06349, 0, 1], "succs": [[8, 5], [4, 6], [1, 3], [1, 7], [8, 6], [8, 2], [], [], []], "fname": "xnrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.13636363636363635, ["mov     pn, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_1700D"], ["mov~pn,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 4, 3, 0.09090909090909091, ["mov     [pn], n", "mov     rbx, rcx", "jmp     short loc_16FFB"], ["mov~<TAG>,n", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 5, 1, 0, 7, 1, 1, 2, 3, 0.06060606060606061, ["mov     rax, n", "shr     rax, 1", "lea     rbx, [rax+n+1]", "mov     [pn], n", "imul    n, s", "test    rbx, rbx", "jz      short loc_17060"], ["mov~rax,n", "shr~rax,0", "lea~rbx,[rax+0]", "mov~<TAG>,n", "imul~n,s", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 1, 0, 7, 1, 1, 2, 1, 0.10606060606060606, ["mov     rax, s", "mul     n", "mov     s, rax", "seto    al", "test    rcx, rcx", "movzx   eax, al", "js      short loc_17069"], ["mov~rax,s", "mul~,n", "mov~s,rax", "seto~al", "test~rcx,rcx", "movzx~eax,al", "js~FOO"]], [0, 1, 7, 2, 0, 8, 3, 1, 2, 2, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "add     r8, n", "jmp     short loc_17015"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "add~r8,n", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.030303030303030304, ["test    n, n", "jz      short loc_17040"], ["test~n,n", "jz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 3, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 6, 1, 0, 5, 1, 0, 1, 1, 0.045454545454545456, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     loc_17069"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.022727272727272728, ["test    rbx, rbx", "jnz     short loc_17069"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 1, 0.09848484848484848, ["test    rax, rax", "jnz     short loc_17069"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    p, p", "push    rbx", "mov     rcx, s", "mov     r8, [pn]", "jz      short loc_17010"], ["test~p,p", "push~rbx", "mov~rcx,s", "mov~r8,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 12, 12, 0, 13, 18, 0, 52, 0.04545, 0, 5], "succs": [[9, 12], [0], [0, 6], [10, 7], [3], [3, 4], [], [], [2, 7], [12, 7], [1, 7], [8, 5], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_17085"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    rax, rax", "jnz     short loc_17083"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xcharalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_170A5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_170A3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 37, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 4, 1, 1, 0, 0, 0.0, ["call    free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_170D8"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_170E1"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_170D0"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_170BE"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [3, 5, 7, 0, 7, 8, 46, 19, 0.04762, 0, 0], "succs": [[], [0, 4], [], [2, 6], [3, 6], [1, 4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_17141"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 0, 0.16666666666666666, ["mov     [pn], rax", "mov     pn, rax; size", "call    _realloc", "test    rax, rax", "jz      short loc_17141"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 0, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_17116"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 2, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rax+rdx+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rax+0]"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    p, p", "mov     rax, [pn]", "jz      short loc_17130"], ["sub~rsp,0", "test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 0, 7, 9, 0, 23, 0.05238, 0, 2], "succs": [[], [0, 4], [0, 6], [0, 2], [2], [1, 3], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 1; size", "mov     rbx, s", "call    _calloc", "test    rax, rax", "jnz     short loc_17168"], ["push~rbx", "mov~esi,0", "mov~rbx,s", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.16666666666666666, ["test    s, s", "jnz     short loc_1716A"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     s", "retn"], ["pop~s", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 11, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xzalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_17199"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_17199"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_17199"], ["call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 3], [2, 3], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    s, s", "jnz     short loc_171D2"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 4, 1, 1, 9, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; size", "mov     rbx, s", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "jnz     short loc_171BE"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "test~rax,rax", "jnz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 5, 1, 19, 0.05, 0, 2], "succs": [[], [0, 3], [], [2], [1, 3]], "fname": "xmemdup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, -1, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, rbx; n", "mov     rsi, string; src", "pop     rbx", "pop     string", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,rbx", "mov~rsi,string", "pop~rbx", "pop~string", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 1, 2, 10, 1, 3, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     rbp, string", "sub     rsp, 8", "call    _strlen", "lea     rbx, [rax+1]", "mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "jz      short loc_17213"], ["push~rbp", "push~rbx", "mov~rbp,string", "sub~rsp,0", "call~FOO", "lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 3, 5, 18, 0.04167, 0, 2], "succs": [[], [0], [], [1, 2]], "fname": "xstrdup", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aS+2; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 28, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 1, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 1, 0.26666666666666666, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     short loc_172F2"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [3, 1, 6, 1, 1, 15, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_172C2"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 3, 0.0, ["mov     byte ptr [rax], 0", "mov     rdi, [rsp+28h+response]", "jmp     short loc_172B8"], ["mov~<TAG>,0", "mov~rdi,[rsp+0]", "jmp~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 1, 3, 0.06666666666666667, ["mov     rdi, [rsp+28h+response]; response", "lea     rax, [rdi+rax-1]", "cmp     byte ptr [rax], 0Ah", "jz      short loc_172E8"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 2, 2, 0.2, ["call    _rpmatch", "test    eax, eax", "setnle  bl"], ["call~FOO", "test~eax,eax", "setnle~bl"]]], "func_feature": [4, 5, 8, 1, 7, 8, 1, 35, 0.07619, 2, 2], "succs": [[], [0, 5], [1, 4], [6], [3, 6], [], [1]], "fname": "yesno", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 1, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 3, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_1731A"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 1, 2, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_1731A"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_17328"], ["test~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 2, 19, 0.05833, 0, 0], "succs": [[], [0], [0], [1, 4], [1, 5], [1, 2]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_17367"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_17367"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 2, 0, 0, 0, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [1, 0, 2, 0, 2, 13, 0, 3, 3, 1, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_173C2"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_1737A"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_17380"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_1737A"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]]], "func_feature": [2, 2, 7, 0, 8, 10, 2, 29, 0.05655, 0, 0], "succs": [[2], [0, 2], [], [6, 7], [3, 6], [], [5], [1, 6]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_1744E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_17430"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_17430"], ["test~n,n", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_17430"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 1, 0.0, 0, 0], "succs": [[]], "fname": "free_permission_context", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["mov     [ctx], edx", "xor     eax, eax", "retn"], ["mov~<TAG>,edx", "xor~eax,eax", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "get_permissions", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _chmod"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, esi", "mov     esi, edx; mode", "cmp     eax, 0FFFFFFFFh", "jz      short loc_17490"], ["mov~eax,esi", "mov~esi,edx", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edi, eax; file", "jmp     _fchmod"], ["mov~edi,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [0, 0, 3, 0, 5, 4, 0, 7, 0.03333, 0, 0], "succs": [[4], [0, 3], [], [2], []], "fname": "chmod_or_fchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 1, 8, 1, 1, 0, 0, 0.0, ["mov     edi, edx; fd", "call    _fchmod", "test    eax, eax", "setnz   al", "add     rsp, 8", "movzx   eax, al", "neg     eax", "retn"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "setnz~al", "add~rsp,0", "movzx~eax,al", "neg~eax", "retn"]], [2, 0, 2, 1, 0, 5, 0, 1, 0, 1, 0.0, ["sub     rsp, 8", "cmp     edx, 0FFFFFFFFh", "mov     rax, name", "mov     esi, [ctx]; mode", "jz      short loc_174C8"], ["sub~rsp,0", "cmp~edx,0", "mov~rax,name", "mov~esi,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 1, 8, 1, 1, 1, 0, 0.0, ["mov     ctx, name; file", "call    _chmod", "test    eax, eax", "setnz   al", "add     rsp, 8", "movzx   eax, al", "neg     eax", "retn"], ["mov~ctx,name", "call~FOO", "test~eax,eax", "setnz~al", "add~rsp,0", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 2, 21, 0.0, 0, 3], "succs": [[], [0, 2], []], "fname": "set_permissions", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_17538"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_1750F"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_17518"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_17548"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 5, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 6, 0, 1, 4, 0, 1, 0, 0, 0.11904761904761904, ["mov     rdi, dp; dirp", "call    _dirfd", "cmp     eax, 2", "jbe     short loc_17590"], ["mov~rdi,dp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 7, 0, 1, 9, 1, 2, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "call    _opendir", "test    rax, rax", "mov     rbx, rax", "jz      short loc_17582"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, 1, 0.10714285714285714, ["mov     edi, r12d; fd", "call    _fdopendir", "test    rax, rax", "mov     r13, rax", "mov     r14d, [rbp+0]", "jnz     short loc_175B9"], ["mov~edi,r12d", "call~FOO", "test~rax,rax", "mov~r13,rax", "mov~r14d,[rbp+0]", "jnz~FOO"]], [2, 0, 4, 0, 2, 10, 2, 2, 2, 2, 0.19047619047619047, ["mov     edi, eax; fd", "mov     edx, 3", "mov     esi, 406h; action", "xor     eax, eax", "call    rpl_fcntl", "mov     r12d, eax", "call    ___errno_location", "test    r12d, r12d", "mov     rbp, rax", "jns     short loc_175D8"], ["mov~edi,eax", "mov~edx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "test~r12d,r12d", "mov~rbp,rax", "jns~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, -1, 0.0, ["mov     rax, dp", "pop     dp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,dp", "pop~dp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 0, 0, 1, 11, 0, 1, 4, -1, 0.0, ["mov     rdi, dp; dirp", "mov     dp, r13", "call    _closedir", "mov     [rbp+0], r14d", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     f", "pop     r13", "pop     e", "retn"], ["mov~rdi,dp", "mov~dp,r13", "call~FOO", "mov~[rbp+0],r14d", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~f", "pop~r13", "pop~e", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 4, 0, 0.0, ["mov     edi, r12d; fd", "call    _close", "jmp     short loc_175B9"], ["mov~edi,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 1, 0, 3, -1, 0.03571428571428571, ["mov     r14d, [rax]", "xor     r13d, r13d"], ["mov~r14d,<TAG>", "xor~r13d,r13d"]]], "func_feature": [7, 5, 10, 0, 8, 10, 1, 52, 0.05655, 0, 0], "succs": [[3, 4], [0, 4], [5, 6], [2, 7], [], [], [5], [5]], "fname": "opendir_safer", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rsi, ts; tp", "xor     edi, edi; clock_id", "jmp     _clock_gettime"], ["mov~rsi,ts", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 8, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "gettime", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 12, 3, 2, 0, 1, 0.0, ["sub     rsp, 28h", "xor     edi, edi; clock_id", "mov     rsi, rsp; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "jnz     short loc_1764C"], ["sub~rsp,0", "xor~edi,edi", "mov~rsi,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 3, 1, 3, 2, 0, 15, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_17695"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC_0; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_176A0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_176D0"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_176F0"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 1, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_17730"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rsp+58h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_177A9"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 18h", "mov     ecx, dword ptr [rsp+58h+var_20]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_17760"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~ecx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_20], rcx", "xor     ecx, ecx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    dl, 40h", "jnz     short loc_17788"], ["sub~rsp,<STR>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~dl,0", "jnz~FOO"]]], "func_feature": [3, 5, 6, 3, 5, 5, 1, 25, 0.06667, 1, 2], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "openat_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[3, 0, 0, 0, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, source", "mov     edi, 18h; n", "call    xmalloc", "mov     [s], source", "mov     qword ptr [s+10h], 0", "mov     qword ptr [s+8], 0", "pop     source", "retn"], ["push~rbx", "mov~rbx,source", "mov~edi,0", "call~FOO", "mov~<TAG>,source", "mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "pop~source", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "randint_new", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.0, ["push    rbx", "call    randread_new", "test    source, source", "jz      short loc_17810"], ["push~rbx", "call~FOO", "test~source,source", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "pop     rbx", "retn"], ["xor~eax,eax", "pop~rbx", "retn"]], [3, 0, 0, 0, 1, 8, 0, 1, 0, -1, 0.0, ["mov     rbx, source", "mov     edi, 18h; n", "call    xmalloc", "mov     [rax], source", "mov     qword ptr [rax+10h], 0", "mov     qword ptr [rax+8], 0", "pop     source", "retn"], ["mov~rbx,source", "mov~edi,0", "call~FOO", "mov~<TAG>,source", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "pop~source", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 2, 15, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "randint_all_new", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [s]", "retn"], ["mov~rax,<TAG>", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randint_get_source", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[3, 0, 20, 3, 0, 5, 0, 1, 0, 0, 0.2394736842105263, ["shl     rmax, 8", "add     i, 1; size", "add     rax, 0FFh", "cmp     genmax, rmax", "ja      short loc_178B0"], ["shl~rmax,0", "add~i,0", "add~rax,0", "cmp~genmax,rmax", "ja~FOO"]], [0, 0, 20, 0, 0, 3, 1, 0, 2, 6, 0.2263157894736842, ["mov     rax, randmax", "xor     edx, edx", "nop"], ["mov~rax,randmax", "xor~edx,edx", "nop"]], [0, 0, 20, 0, 0, 2, 0, 0, 4, 5, 0.21578947368421053, ["lea     last_usable_choice, [unusable_choices-1]", "mov     r14, reduced_randnum"], ["lea~last_usable_choice,[unusable_choices-1]+0]", "mov~r14,reduced_randnum"]], [0, 0, 20, 4, 0, 12, 2, 0, 3, 3, 0.25394736842105264, ["mov     rax, rbx", "xor     edx, edx", "sub     rax, genmax", "div     choices", "sub     rbx, rdx", "mov     rdi, rdx", "mov     rsi, rax", "xor     edx, edx", "mov     rax, randnum", "div     choices", "cmp     randnum, last_usable_choice", "jbe     loc_17A08"], ["mov~rax,rbx", "xor~edx,edx", "sub~rax,genmax", "div~,choices", "sub~rbx,rdx", "mov~rdi,rdx", "mov~rsi,rax", "xor~edx,edx", "mov~rax,randnum", "div~,choices", "cmp~randnum,last_usable_choice", "jbe~FOO"]], [3, 0, 20, 4, 0, 7, 0, 0, 7, 4, 0.14736842105263157, ["movzx   eax, [rsp+58h+buf+3]", "shl     rbx, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     r14, rax", "cmp     genmax, rbx", "jbe     loc_17870"], ["movzx~eax,[rsp+0]", "shl~rbx,0", "shl~randnum,0", "add~rbx,0", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [3, 0, 20, 4, 0, 7, 0, 0, 6, 4, 0.16842105263157894, ["movzx   eax, [rsp+58h+buf+2]", "shl     rbx, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     r14, rax", "cmp     genmax, rbx", "jbe     loc_17870"], ["movzx~eax,[rsp+0]", "shl~rbx,0", "shl~randnum,0", "add~rbx,0", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [3, 0, 20, 4, 0, 7, 0, 0, 5, 4, 0.1868421052631579, ["movzx   eax, [rsp+58h+buf+1]", "shl     rbx, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     r14, rax", "cmp     genmax, rbx", "jbe     loc_17870"], ["movzx~eax,[rsp+0]", "shl~rbx,0", "shl~randnum,0", "add~rbx,0", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [3, 0, 20, 4, 1, 10, 0, 1, 4, 4, 0.25263157894736843, ["mov     rsi, [rsp+58h+var_50]; buf", "mov     rdi, source; s", "shl     randmax, 8", "shl     randnum, 8", "add     rbx, 0FFh", "call    randread", "movzx   eax, [rsp+58h+buf]", "add     r14, rax", "cmp     genmax, rbx", "jbe     short loc_17870"], ["mov~rsi,[rsp+0]", "mov~rdi,source", "shl~randmax,0", "shl~randnum,0", "add~rbx,0", "call~FOO", "movzx~eax,[rsp+0]", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [3, 0, 20, 4, 0, 7, 0, 0, 10, 4, 0.06842105263157895, ["movzx   eax, [rsp+58h+buf+6]", "shl     rbx, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     r14, rax", "cmp     genmax, rbx", "jbe     loc_17870"], ["movzx~eax,[rsp+0]", "shl~rbx,0", "shl~randnum,0", "add~rbx,0", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [3, 0, 20, 4, 0, 7, 0, 0, 9, 4, 0.09736842105263158, ["movzx   eax, [rsp+58h+buf+5]", "shl     rbx, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     r14, rax", "cmp     genmax, rbx", "jbe     loc_17870"], ["movzx~eax,[rsp+0]", "shl~rbx,0", "shl~randnum,0", "add~rbx,0", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 1, 4, 0.28157894736842104, ["cmp     randmax, genmax", "jnb     short loc_17870"], ["cmp~randmax,genmax", "jnb~FOO"]], [1, 0, 20, 1, 0, 19, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "mov     r15, genmax", "push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "lea     rbp, [genmax+1]", "sub     rsp, 28h", "mov     r12, [s]", "mov     r14, [s+8]", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "lea     rax, [rsp+58h+buf]", "mov     rbx, [s+10h]", "mov     [rsp+58h+var_50], rax", "jmp     short loc_178A5"], ["push~r15", "push~r14", "mov~r15,genmax", "push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "lea~rbp,[genmax+0]", "sub~rsp,0", "mov~r12,<TAG>", "mov~r14,[s+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~rbx,[s+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 3, 2, 0.11447368421052631, ["mov     qword ptr [s+10h], 0", "mov     qword ptr [s+8], 0"], ["mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0"]], [0, 0, 20, 0, 0, 2, 0, 1, 2, 3, 0.3236842105263158, ["cmp     rbx, genmax", "jz      loc_179D0"], ["cmp~rbx,genmax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 12, 3, 0.006578947368421052, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 4, 0, 1, 4, 2, 0.011842105263157895, ["mov     [s+8], rax", "mov     [s+10h], rsi", "mov     randnum, reduced_randnum", "jmp     short loc_179E0"], ["mov~[s+0],rax", "mov~[s+0],rsi", "mov~randnum,reduced_randnum", "jmp~FOO"]], [2, 0, 20, 2, 0, 6, 0, 1, 11, 4, 0.05263157894736842, ["movzx   eax, [rsp+58h+buf+7]", "shl     randnum, 8", "mov     rbx, 0FFFFFFFFFFFFFFFFh", "add     r14, rax", "cmp     rbx, genmax", "jnz     loc_17879"], ["movzx~eax,[rsp+0]", "shl~randnum,0", "mov~rbx,0", "add~r14,rax", "cmp~rbx,genmax", "jnz~FOO"]], [3, 0, 20, 4, 0, 7, 0, 0, 8, 4, 0.12368421052631579, ["movzx   eax, [rsp+58h+buf+4]", "shl     rbx, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     r14, rax", "cmp     genmax, rbx", "jbe     loc_17870"], ["movzx~eax,[rsp+0]", "shl~rbx,0", "shl~randnum,0", "add~rbx,0", "add~r14,rax", "cmp~genmax,rbx", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     choices", "pop     source", "pop     s", "pop     r14", "pop     genmax", "retn"], ["add~rsp,0", "pop~rbx", "pop~choices", "pop~source", "pop~s", "pop~r14", "pop~genmax", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.09473684210526316, ["mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "mov     rax, r14", "jnz     short loc_17A15"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 5, 8, 2, 21, 32, 2, 123, 0.13647, 1, 39], "succs": [[0, 7], [0], [10], [2, 15], [17, 13], [4, 13], [5, 13], [13, 6], [16, 13], [8, 13], [1, 13], [10], [19], [3, 12], [12], [19], [3, 14], [9, 13], [], [18, 20], []], "fname": "randint_genmax", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 1, 0, 1, 8, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     rbx, s", "mov     esi, 18h", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "pop     s", "jmp     free"], ["push~rbx", "mov~rdx,0", "mov~rbx,s", "mov~esi,0", "call~FOO", "mov~rdi,s", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "randint_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[4, 0, 0, 2, 4, 26, 0, 4, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, s", "sub     rsp, 8", "mov     s, [s]; s", "call    randread_free", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rdi, s", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 18h", "mov     rbp, rax", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "call    free", "mov     [rbp+0], r13d", "add     rsp, 8", "mov     eax, r12d", "pop     s", "pop     rbp", "pop     r", "pop     e", "retn"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,s", "sub~rsp,0", "mov~s,<TAG>", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rdi,s", "mov~rdx,0", "mov~esi,0", "mov~rbp,rax", "call~FOO", "mov~rdi,s", "call~FOO", "mov~[rbp+0],r13d", "add~rsp,0", "mov~eax,r12d", "pop~s", "pop~rbp", "pop~r", "pop~e", "retn"]]], "func_feature": [4, 0, 4, 0, 1, 0, 4, 26, 0.0, 0, 2], "succs": [[]], "fname": "randint_all_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 4, 0, 2, 7, 0, 3, 0, 0, 0.15000000000000002, ["call    quote", "mov     rbp, rax", "call    ___errno_location", "cmp     dword ptr [rax], 0", "mov     rbx, rax", "mov     edx, 5; category", "jz      short loc_17AED"], ["call~FOO", "mov~rbp,rax", "call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "mov~edx,0", "jz~FOO"]], [1, 0, 5, 1, 0, 5, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "test    file_name, file_name", "jz      short loc_17AE8"], ["push~rbp", "push~rbx", "sub~rsp,0", "test~file_name,file_name", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 1, 0, 1, 6, 1, 1, 3, -1, 0.15000000000000002, ["mov     edi, cs:exit_failure; status", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     eax, eax", "call    _error"], ["mov~edi,<TAG>", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "call~FOO"]], [0, 0, 2, 0, 1, 3, 1, 1, 2, -1, 0.07500000000000001, ["lea     rsi, aSReadError; \"%s: read error\"", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 0, 0.07500000000000001, ["lea     rsi, aSEndOfFile; \"%s: end of file\"", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     short loc_17AD3"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "jmp~FOO"]]], "func_feature": [6, 4, 9, 0, 6, 7, 0, 26, 0.075, 3, 1], "succs": [[4, 5], [0, 2], [], [2], [3], [3]], "fname": "randread_error", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 1, 3, 0, 2, 14, 1, 2, 0, 0, 0.005434782608695652, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     [rax], source", "lea     rax, randread_error", "cmp     bytes_bound, 1000h", "mov     ecx, 1000h", "lea     rsi, [rbx+18h]; buf", "cmovbe  rcx, bytes_bound; n", "mov     [rbx+8], rax", "mov     [rbx+10h], name", "xor     edx, edx; modes", "mov     rdi, source; stream", "call    _setvbuf"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,source", "lea~rax,<TAG>", "cmp~bytes_bound,0", "mov~ecx,0", "lea~rsi,[rbx+0]", "cmovbe~rcx,bytes_bound", "mov~[rbx+0],rax", "mov~[rbx+0],name", "xor~edx,edx", "mov~rdi,source", "call~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 0.012681159420289856, ["lea     bytes_bound, mode; \"rb\"", "call    fopen_safer", "test    rax, rax", "mov     r13, rax", "jz      loc_17D48"], ["lea~bytes_bound,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.07971014492753624, ["mov     rdx, [rsp+68h+var_40]", "xor     rdx, fs:28h", "mov     rax, rbx", "jnz     loc_17D4F"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 4, -1, 0.08152173913043478, ["mov     rdi, r13; s", "call    isaac_seed", "jmp     loc_17B87"], ["mov~rdi,r13", "call~FOO", "jmp~FOO"]], [1, 0, 8, 1, 0, 3, 0, 1, 5, -1, 0.12318840579710146, ["add     rbp, r14", "cmp     rbp, 7FFh", "ja      loc_17C35"], ["add~rbp,r14", "cmp~rbp,0", "ja~FOO"]], [3, 0, 7, 1, 1, 11, 1, 2, 6, -1, 0.07065217391304347, ["call    _getgid", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     eax, 800h", "mov     edx, 4", "sub     rax, rbp", "lea     rcx, [r13+rbp+0]", "cmp     rax, 4", "cmova   rax, rdx", "test    eax, eax", "mov     esi, eax", "jz      loc_17C35"], ["call~FOO", "mov~[word ptr [rsp+0],eax", "mov~eax,0", "mov~edx,0", "sub~rax,rbp", "lea~rcx,[r13+0]", "cmp~rax,0", "cmova~rax,rdx", "test~eax,eax", "mov~esi,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 9, -1, 0.014492753623188406, ["jmp     loc_17C35"], ["jmp~FOO"]], [3, 0, 15, 2, 1, 19, 2, 2, 4, 3, 0.036231884057971016, ["test    rbp, rbp", "mov     r15, r14", "mov     eax, 10h", "cmovs   rbp, name", "lea     name, [rsp+68h+tv]", "sub     r15, rbp", "cmp     r15, 10h", "mov     rdi, r12; tv", "cmova   r15, rax", "xor     esi, esi; tz", "call    _gettimeofday", "lea     rax, [r13+rbp+0]", "add     rbp, r15", "mov     ecx, r15d", "cmp     rbp, 7FFh", "mov     rsi, r12", "mov     rdi, rax", "rep movsb", "ja      loc_17C35"], ["test~rbp,rbp", "mov~r15,r14", "mov~eax,0", "cmovs~rbp,name", "lea~name,[rsp+0]", "sub~r15,rbp", "cmp~r15,0", "mov~rdi,r12", "cmova~r15,rax", "xor~esi,esi", "call~FOO", "lea~rax,[r13+0]", "add~rbp,r15", "mov~ecx,r15d", "cmp~rbp,0", "mov~rsi,r12", "mov~rdi,rax", "movsb~<TAG>,<TAG>", "ja~FOO"]], [3, 0, 14, 2, 1, 19, 0, 2, 5, 2, 0.04710144927536232, ["mov     r15, r14", "mov     r8d, 4", "sub     r15, rbp", "mov     [rsp+68h+var_60], r8", "cmp     r15, 4", "cmova   r15, r8", "lea     rdx, [rbp+r15+0]", "add     rbp, r13", "mov     [rsp+68h+var_68], rdx", "call    _getpid", "mov     rdx, [rsp+68h+var_68]", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     ecx, r15d", "mov     rdi, rbp", "mov     rsi, r12", "mov     r8, [rsp+68h+var_60]", "rep movsb", "cmp     rdx, 7FFh", "jg      loc_17C35"], ["mov~r15,r14", "mov~r8d,0", "sub~r15,rbp", "mov~[rsp+0],r8", "cmp~r15,0", "cmova~r15,r8", "lea~rdx,[rbp+0]", "add~rbp,r13", "mov~<TAG>,rdx", "call~FOO", "mov~rdx,<TAG>", "mov~[word ptr [rsp+0],eax", "mov~ecx,r15d", "mov~rdi,rbp", "mov~rsi,r12", "mov~r8,[rsp+0]", "movsb~<TAG>,<TAG>", "cmp~rdx,0", "jg~FOO"]], [2, 0, 13, 2, 1, 14, 0, 2, 6, 1, 0.05434782608695652, ["sub     r14, rdx", "cmp     r14, 4", "cmova   r14, r8", "call    _getppid", "mov     rdx, [rsp+68h+var_68]", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     ecx, r14d", "mov     rsi, r12", "lea     rax, [r13+rdx+0]", "add     r14, rdx", "cmp     r14, 7FFh", "mov     rdi, rax", "rep movsb", "ja      loc_17C35"], ["sub~r14,rdx", "cmp~r14,0", "cmova~r14,r8", "call~FOO", "mov~rdx,<TAG>", "mov~[word ptr [rsp+0],eax", "mov~ecx,r14d", "mov~rsi,r12", "lea~rax,[r13+0]", "add~r14,rdx", "cmp~r14,0", "mov~rdi,rax", "movsb~<TAG>,<TAG>", "ja~FOO"]], [3, 1, 16, 0, 2, 13, 0, 3, 3, 4, 0.03260869565217391, ["cmp     bytes_bound, 800h", "mov     rdx, bytes_bound", "mov     r14d, 800h", "cmova   rdx, r14", "mov     ecx, 1018h", "mov     rsi, r13", "mov     edi, eax", "call    ___read_chk", "mov     edi, r15d; fd", "mov     bytes_bound, rax", "call    _close", "cmp     rbp, 7FFh", "jle     loc_17D54"], ["cmp~bytes_bound,0", "mov~rdx,bytes_bound", "mov~r14d,0", "cmova~rdx,r14", "mov~ecx,<STR>", "mov~rsi,r13", "mov~edi,eax", "call~FOO", "mov~edi,r15d", "mov~bytes_bound,rax", "call~FOO", "cmp~rbp,0", "jle~FOO"]], [2, 1, 3, 0, 1, 8, 0, 2, 1, -1, 0.005434782608695652, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     qword ptr [rax], 0", "lea     rax, randread_error", "mov     qword ptr [rbx+10h], 0", "mov     [rbx+8], rax", "jmp     loc_17B87"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.005434782608695652, ["xor     ebx, ebx", "jmp     loc_17B87"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 24, 1, 0, 12, 2, 1, 0, 7, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "test    bytes_bound, bytes_bound", "jz      loc_17C48"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~bytes_bound,bytes_bound", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 0, 0.057971014492753624, ["jmp     loc_17CAF"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 1, 0, 7, -1, 0.050724637681159424, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 12, 0, 3, 13, 1, 3, 3, -1, 0.043478260869565216, ["lea     name, [rsp+68h+tv]", "xor     esi, esi; tz", "mov     r14d, 18h", "mov     rdi, r12; tv", "call    _gettimeofday", "movdqa  xmm0, xmmword ptr [rsp+68h+tv.tv_sec]", "movups  xmmword ptr [rbx+20h], xmm0", "call    _getpid", "mov     [rbx+30h], eax", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "call    _getppid", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     [rbx+34h], eax"], ["lea~name,[rsp+0]", "xor~esi,esi", "mov~r14d,0", "mov~rdi,r12", "call~FOO", "movdqa~xmm0,[mmword ptr [rsp+0]", "movups~[mmword ptr [rbx+0],xmm0", "call~FOO", "mov~[rbx+0],eax", "mov~[word ptr [rsp+0],eax", "call~FOO", "mov~[word ptr [rsp+0],eax", "mov~[rbx+0],eax"]], [3, 1, 18, 0, 2, 16, 3, 3, 2, 5, 0.05434782608695652, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     qword ptr [rax], 0", "lea     rax, randread_error", "lea     rdi, aDevUrandom; \"/dev/urandom\"", "xor     esi, esi; oflag", "mov     qword ptr [rbx+10h], 0", "mov     [rbx+8], rax", "mov     qword ptr [rbx+18h], 0", "xor     eax, eax", "call    _open", "test    eax, eax", "lea     r13, [rbx+20h]", "mov     r15d, eax", "js      short loc_17C78"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "lea~rax,<TAG>", "lea~rdi,<TAG>", "xor~esi,esi", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],rax", "mov~[word ptr [rbx+0],0", "xor~eax,eax", "call~FOO", "test~eax,eax", "lea~r13,[rbx+0]", "mov~r15d,eax", "js~FOO"]], [0, 0, 22, 0, 0, 4, 1, 1, 1, 6, 0.034420289855072464, ["test    name, name", "mov     r12, name", "mov     rbp, bytes_bound", "jz      short loc_17BB0"], ["test~name,name", "mov~r12,name", "mov~rbp,bytes_bound", "jz~FOO"]], [1, 0, 6, 1, 0, 6, 0, 0, 8, -1, 0.034420289855072464, ["mov     edx, eax", "add     eax, 1", "movzx   edi, byte ptr [r12+rdx]", "cmp     eax, esi", "mov     [rcx+rdx], dil", "jb      short loc_17D2B"], ["mov~edx,eax", "add~eax,0", "movzx~edi,<TAG>", "cmp~eax,esi", "mov~<TAG>,dil", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 11, 1, 1, 11, 1, 2, 4, -1, 0.1286231884057971, ["mov     ebp, 800h", "mov     eax, 4", "sub     rbp, r14", "cmp     rbp, 4", "cmova   rbp, rax", "call    _getuid", "test    ebp, ebp", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "lea     rcx, [r13+r14+0]", "mov     esi, ebp", "jz      short loc_17CEC"], ["mov~ebp,0", "mov~eax,0", "sub~rbp,r14", "cmp~rbp,0", "cmova~rbp,rax", "call~FOO", "test~ebp,ebp", "mov~[word ptr [rsp+0],eax", "lea~rcx,[r13+0]", "mov~esi,ebp", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 5, -1, 0.018115942028985508, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 10, 1, 0, 6, 0, 0, 6, -1, 0.016304347826086956, ["mov     edx, eax", "add     eax, 1", "movzx   edi, byte ptr [r12+rdx]", "cmp     eax, esi", "mov     [rcx+rdx], dil", "jb      short loc_17CDA"], ["mov~edx,eax", "add~eax,0", "movzx~edi,<TAG>", "cmp~eax,esi", "mov~<TAG>,dil", "jb~FOO"]]], "func_feature": [18, 17, 35, 3, 25, 37, 1, 196, 0.04029, 4, 13], "succs": [[3], [0, 13], [], [2, 21], [3], [4, 6], [16, 4], [4], [9, 4], [10, 4], [4, 15], [8, 4], [3], [3], [19, 12], [22], [20], [22], [17, 11], [1, 18], [20, 7], [], [5, 23], [24], [24, 5]], "fname": "randread_new", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     [s+8], handler", "retn"], ["mov~[s+0],handler", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randread_set_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     [s+10h], handler_arg", "retn"], ["mov~[s+0],handler_arg", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randread_set_handler_arg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 3, 2, 1, 8, 0, 2, 0, 0, 0.01838235294117647, ["mov     rdx, rbp; n", "mov     rdi, rbx; ptr", "mov     esi, 1; size", "call    _fread_unlocked", "add     rbx, rax", "sub     rbp, rax", "mov     edx, [r13+0]", "jnz     short loc_17E88"], ["mov~rdx,rbp", "mov~rdi,rbx", "mov~esi,0", "call~FOO", "add~rbx,rax", "sub~rbp,rax", "mov~edx,[r13+0]", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 1, -1, 0.011029411764705881, ["call    ___errno_location", "mov     rcx, [rsp+48h+result]", "mov     r13, rax", "jmp     short loc_17EA6"], ["call~FOO", "mov~rcx,[rsp+0]", "mov~r13,rax", "jmp~FOO"]], [0, 1, 3, 0, 1, 8, 1, 1, 3, -1, 0.0, ["mov     rax, [s]", "mov     rdi, [s+10h]", "mov     eax, [rax]", "and     eax, 20h", "cmovnz  eax, edx", "mov     [r13+0], eax", "call    qword ptr [s+8]", "mov     rcx, [s]; stream"], ["mov~rax,<TAG>", "mov~rdi,[s+0]", "mov~eax,<TAG>", "and~eax,<STR>", "cmovnz~eax,edx", "mov~[r13+0],eax", "call~[word ptr [s+0]", "mov~rcx,<TAG>"]], [1, 0, 17, 1, 0, 14, 1, 1, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, s", "push    rbp", "push    rbx", "mov     rbp, size", "mov     rbx, buf", "sub     rsp, 18h", "mov     rcx, [s]", "test    rcx, rcx", "mov     [rsp+48h+result], rcx", "jz      short loc_17ED8"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,s", "push~rbp", "push~rbx", "mov~rbp,size", "mov~rbx,buf", "sub~rsp,0", "mov~rcx,<TAG>", "test~rcx,rcx", "mov~[rsp+0],rcx", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 6, -1, 0.11764705882352941, ["cmp     r15, r14", "jz      short loc_17F80"], ["cmp~r15,r14", "jz~FOO"]], [1, 0, 12, 1, 1, 7, 1, 2, 5, -1, 0.13970588235294118, ["mov     rsi, rbx; result", "mov     rdi, r13; s", "add     rbx, 800h", "call    isaac_refill", "test    r15, r15", "mov     rbp, r15", "jnz     short loc_17F40"], ["mov~rsi,rbx", "mov~rdi,r13", "add~rbx,0", "call~FOO", "test~r15,r15", "mov~rbp,r15", "jnz~FOO"]], [1, 0, 12, 0, 0, 4, 1, 1, 4, -1, 0.08088235294117647, ["lea     r15, [rbp-800h]", "mov     r14, r15", "and     r14d, 7FFh", "jmp     short loc_17F4C"], ["lea~r15,[rbp-800h]+0]", "mov~r14,r15", "and~r14d,0", "jmp~FOO"]], [1, 0, 12, 1, 0, 1, 0, 0, 7, -1, 0.007352941176470588, ["sub     r15, 800h"], ["sub~r15,0"]], [1, 0, 12, 0, 0, 2, 0, 0, 3, -1, 0.11397058823529412, ["cmp     rbp, 7FFh", "jbe     loc_17FC3"], ["cmp~rbp,0", "jbe~FOO"]], [0, 0, 2, 1, 0, 6, 0, 1, 2, 0, 0.011029411764705881, ["mov     r15, rax", "sub     r15, r14", "lea     rax, [r15+800h]", "mov     [rsp+48h+result], rax", "mov     rsi, rax", "jmp     short loc_17FAB"], ["mov~r15,rax", "sub~r15,r14", "lea~rax,[r15+0]", "mov~[rsp+0],rax", "mov~rsi,rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 6, 0, 0, 1, 1, 0.044117647058823525, ["mov     r14, [s+18h]", "lea     rax, [s+838h]", "lea     r13, [s+20h]", "mov     [rsp+48h+result], rax", "cmp     size, r14", "jbe     loc_17FD2"], ["mov~r14,[s+0]", "lea~rax,[s+0]", "lea~r13,[s+0]", "mov~[rsp+0],rax", "cmp~size,r14", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     s", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~s", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 1, 1, 6, 0, 2, 3, -1, 0.04044117647058824, ["mov     rdx, rbp; n", "mov     rdi, rbx; dest", "sub     r14, rbp", "call    _memcpy", "mov     [s+18h], r14", "jmp     loc_17EC2"], ["mov~rdx,rbp", "mov~rdi,rbx", "sub~r14,rbp", "call~FOO", "mov~[s+0],r14", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 4, -1, 0.011029411764705881, ["mov     rsi, [rsp+48h+result]; result", "mov     rdi, r13; s", "call    isaac_refill", "jmp     short loc_17FA0"], ["mov~rsi,[rsp+0]", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [2, 0, 12, 4, 1, 10, 1, 2, 2, -1, 0.1323529411764706, ["mov     esi, 800h", "mov     rdi, rbx; dest", "mov     rdx, r14; n", "sub     rsi, r14", "add     rsi, [rsp+48h+result]; src", "add     rbx, r14", "sub     rbp, r14", "call    _memcpy", "test    bl, 7", "jnz     short loc_17F80"], ["mov~esi,0", "mov~rdi,rbx", "mov~rdx,r14", "sub~rsi,r14", "add~rsi,[rsp+0]", "add~rbx,r14", "sub~rbp,r14", "call~FOO", "test~bl,0", "jnz~FOO"]], [2, 0, 12, 0, 1, 6, 0, 2, 3, -1, 0.1213235294117647, ["mov     rsi, [rsp+48h+result]; result", "mov     rdi, r13; s", "mov     r14d, 800h", "call    isaac_refill", "cmp     rbp, 800h", "ja      loc_17EF5"], ["mov~rsi,[rsp+0]", "mov~rdi,r13", "mov~r14d,0", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 4, -1, 0.058823529411764705, ["mov     rsi, [rsp+48h+result]; src", "mov     r14d, 800h"], ["mov~rsi,[rsp+0]", "mov~r14d,0"]], [2, 0, 0, 1, 0, 9, 0, 0, 6, -1, 0.0, ["mov     qword ptr [s+18h], 0", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     s", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[word ptr [s+0],0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~s", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [8, 5, 19, 0, 18, 24, 1, 107, 0.05045, 0, 13], "succs": [[2, 11], [0], [0], [1, 10], [15, 7], [17, 4], [5], [5], [13, 6], [12], [9, 14], [], [11], [16], [8, 15], [16, 14], [12], []], "fname": "randread", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 1, 3, 1, 2, 12, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     rbx, s", "mov     esi, 1038h", "sub     rsp, 8", "mov     rbp, [s]", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "call    free", "test    source, source", "jz      short loc_18030"], ["push~rbp", "push~rbx", "mov~rdx,0", "mov~rbx,s", "mov~esi,<STR>", "sub~rsp,0", "mov~rbp,<TAG>", "call~FOO", "mov~rdi,s", "call~FOO", "test~source,source", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     s", "pop     source", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~s", "pop~source", "retn"]], [1, 0, 1, 1, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["add     rsp, 8", "mov     rdi, source; fp", "pop     s", "pop     source", "jmp     rpl_fclose"], ["add~rsp,0", "mov~rdi,source", "pop~s", "pop~source", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [2, 2, 4, 0, 4, 3, 1, 22, 0.04167, 0, 3], "succs": [[1, 2], [], [3], []], "fname": "randread_free", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[16, 2, 4, 20, 0, 71, 12, 0, 0, 0, 0.25, ["mov     r8, a", "shl     r8, 15h", "xor     a, r8", "mov     r8, [m]", "not     rdx", "add     rdx, [m+400h]", "mov     r10, x", "and     r10d, 7F8h", "mov     r11, [s+r10]", "mov     r10, a", "shr     r10, 5", "add     r11, a", "xor     a, r10", "add     b, r11", "mov     [m], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r11, [s+rcx]", "add     r11, x", "mov     [r], r11", "add     rdx, [m+408h]", "mov     rcx, [m+8]", "mov     r10, rdx", "mov     a, rcx", "and     edx, 7F8h", "mov     x, [s+rdx]", "mov     rdx, a", "shl     rdx, 0Ch", "xor     rdx, a", "add     r8, a", "add     r8, r11", "mov     [m+8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [r+8], rcx", "mov     r8, [m+10h]", "mov     r11, rcx", "add     rdx, [m+410h]", "mov     rcx, x", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "add     r10, a", "mov     rcx, r10", "add     rcx, r11", "mov     [m+10h], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "mov     rcx, a", "shr     rcx, 21h", "xor     a, rcx", "add     r10, x", "mov     [r+10h], r10", "mov     rcx, [m+18h]", "add     rdx, [m+418h]", "mov     x, rcx", "and     r8d, 7F8h", "mov     r11, [s+r8]", "add     r11, a", "mov     r8, r11", "add     r8, r10", "add     m, 20h", "add     r, 20h", "mov     [rax-8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [rsi-8], rcx", "cmp     m, r9", "jb      loc_18070"], ["mov~r8,a", "shl~r8,0", "xor~a,r8", "mov~r8,<TAG>", "not~rdx", "add~rdx,[m+0]", "mov~r10,x", "and~r10d,0", "mov~r11,<TAG>", "mov~r10,a", "shr~r10,0", "add~r11,a", "xor~a,r10", "add~b,r11", "mov~<TAG>,y", "shr~y,0", "and~ecx,0", "mov~r11,<TAG>", "add~r11,x", "mov~<TAG>,r11", "add~rdx,[m+0]", "mov~rcx,[m+0]", "mov~r10,rdx", "mov~a,rcx", "and~edx,0", "mov~x,<TAG>", "mov~rdx,a", "shl~rdx,0", "xor~rdx,a", "add~r8,a", "add~r8,r11", "mov~[m+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[r+0],rcx", "mov~r8,[m+0]", "mov~r11,rcx", "add~rdx,[m+0]", "mov~rcx,x", "and~ecx,0", "mov~r10,<TAG>", "add~r10,a", "mov~rcx,r10", "add~rcx,r11", "mov~[m+0],y", "shr~y,0", "and~ecx,0", "mov~r10,<TAG>", "mov~rcx,a", "shr~rcx,0", "xor~a,rcx", "add~r10,x", "mov~[r+0],r10", "mov~rcx,[m+0]", "add~rdx,[m+0]", "mov~x,rcx", "and~r8d,0", "mov~r11,<TAG>", "add~r11,a", "mov~r8,r11", "add~r8,r10", "add~m,<STR>", "add~r,<STR>", "mov~[rax-8]+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[rsi-8]+0],rcx", "cmp~m,r9", "jb~FOO"]], [0, 0, 4, 1, 0, 8, 0, 0, 0, 4, 0.0, ["mov     rax, [s+810h]", "mov     rdx, [s+800h]", "lea     r9, [s+400h]", "lea     rcx, [rax+1]", "mov     rax, s", "mov     [s+810h], rcx", "add     rcx, [s+808h]", "nop     word ptr [m+m+00h]"], ["mov~rax,[s+0]", "mov~rdx,[s+0]", "lea~r9,[s+0]", "lea~rcx,[rax+0]", "mov~rax,s", "mov~[s+0],rcx", "add~rcx,[s+0]", "nop~[ord ptr [m+0]"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     [s+800h], a", "mov     [s+808h], rcx", "retn"], ["mov~[s+0],a", "mov~[s+0],rcx", "retn"]], [16, 2, 2, 20, 0, 71, 12, 0, 3, 1, 0.25, ["mov     r8, a", "shl     r8, 15h", "xor     a, r8", "mov     r8, [m]", "not     rdx", "add     rdx, [m-400h]", "mov     r10, x", "and     r10d, 7F8h", "mov     r11, [s+r10]", "mov     r10, a", "shr     r10, 5", "add     r11, a", "xor     a, r10", "add     b, r11", "mov     [m], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r11, [s+rcx]", "add     r11, x", "mov     [r], r11", "add     rdx, [m-3F8h]", "mov     rcx, [m+8]", "mov     r10, rdx", "mov     a, rcx", "and     edx, 7F8h", "mov     x, [s+rdx]", "mov     rdx, a", "shl     rdx, 0Ch", "xor     rdx, a", "add     r8, a", "add     r8, r11", "mov     [m+8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [r+8], rcx", "mov     r8, [m+10h]", "mov     r11, rcx", "add     rdx, [m-3F0h]", "mov     rcx, x", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "add     r10, a", "mov     rcx, r10", "add     rcx, r11", "mov     [m+10h], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "mov     rcx, a", "shr     rcx, 21h", "xor     a, rcx", "add     r10, x", "mov     [r+10h], r10", "mov     rcx, [m+18h]", "add     rdx, [m-3E8h]", "mov     x, rcx", "and     r8d, 7F8h", "mov     r11, [s+r8]", "add     r11, a", "mov     r8, r11", "add     r8, r10", "add     m, 20h", "add     r, 20h", "mov     [rax-8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [rsi-8], rcx", "cmp     m, r9", "jb      loc_181A0"], ["mov~r8,a", "shl~r8,0", "xor~a,r8", "mov~r8,<TAG>", "not~rdx", "add~rdx,[m-400h]+0]", "mov~r10,x", "and~r10d,0", "mov~r11,<TAG>", "mov~r10,a", "shr~r10,0", "add~r11,a", "xor~a,r10", "add~b,r11", "mov~<TAG>,y", "shr~y,0", "and~ecx,0", "mov~r11,<TAG>", "add~r11,x", "mov~<TAG>,r11", "add~rdx,[m-3F8h]+0]", "mov~rcx,[m+0]", "mov~r10,rdx", "mov~a,rcx", "and~edx,0", "mov~x,<TAG>", "mov~rdx,a", "shl~rdx,0", "xor~rdx,a", "add~r8,a", "add~r8,r11", "mov~[m+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[r+0],rcx", "mov~r8,[m+0]", "mov~r11,rcx", "add~rdx,[m-3F0h]+0]", "mov~rcx,x", "and~ecx,0", "mov~r10,<TAG>", "add~r10,a", "mov~rcx,r10", "add~rcx,r11", "mov~[m+0],y", "shr~y,0", "and~ecx,0", "mov~r10,<TAG>", "mov~rcx,a", "shr~rcx,0", "xor~a,rcx", "add~r10,x", "mov~[r+0],r10", "mov~rcx,[m+0]", "add~rdx,[m-3E8h]+0]", "mov~x,rcx", "and~r8d,0", "mov~r11,<TAG>", "add~r11,a", "mov~r8,r11", "add~r8,r10", "add~m,<STR>", "add~r,<STR>", "mov~[rax-8]+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[rsi-8]+0],rcx", "cmp~m,r9", "jb~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 2, 2, 0.3333333333333333, ["lea     r9, [s+800h]", "nop     word ptr [m+m+00000000h]"], ["lea~r9,[s+0]", "nop~[ord ptr [m+0]"]]], "func_feature": [0, 24, 0, 0, 5, 6, 3, 155, 0.16667, 0, 41], "succs": [[0, 4], [0], [], [2, 3], [3]], "fname": "isaac_refill", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[9, 0, 3, 28, 0, 63, 8, 1, 0, 0, 0.3333333333333333, ["add     e, [rax+20h]", "add     h, [rax+38h]", "mov     r13, [rax]", "add     f, [rax+28h]", "add     g, [rax+30h]", "sub     r13, e", "add     r9, r13", "mov     r13, h", "shr     r13, 9", "add     h, a", "xor     f, r13", "mov     r13, [rax+8]", "sub     r13, f", "add     r11, r13", "mov     r13, a", "shl     r13, 9", "add     a, b", "xor     g, r13", "mov     r13, [rax+10h]", "sub     r13, g", "add     rbx, r13", "mov     r13, b", "shr     r13, 17h", "add     b, c", "xor     h, r13", "mov     r13, [rax+18h]", "sub     r13, h", "add     r8, r13", "mov     r13, c", "shl     r13, 0Fh", "add     c, d", "xor     a, r13", "mov     r13, d", "sub     e, a", "shr     r13, 0Eh", "mov     [rax], a", "xor     b, r13", "mov     r13, e", "add     d, e", "sub     f, b", "shl     r13, 14h", "mov     [rax+8], b", "xor     c, r13", "lea     r13, [e+f]", "mov     rsi, f", "sub     g, c", "shr     rsi, 11h", "mov     [rax+10h], c", "xor     d, rsi", "mov     rsi, g", "add     f, g", "sub     h, d", "shl     rsi, 0Eh", "mov     [rax+18h], d", "xor     rsi, e", "add     g, h", "mov     [rax+28h], f", "mov     [rax+20h], e", "mov     [rax+30h], g", "add     rax, 40h", "mov     [rax-8], h", "cmp     r12, rax", "jnz     loc_18338"], ["add~e,[rax+0]", "add~h,[rax+0]", "mov~r13,<TAG>", "add~f,[rax+0]", "add~g,[rax+0]", "sub~r13,e", "add~r9,r13", "mov~r13,h", "shr~r13,0", "add~h,a", "xor~f,r13", "mov~r13,[rax+0]", "sub~r13,f", "add~r11,r13", "mov~r13,a", "shl~r13,0", "add~a,b", "xor~g,r13", "mov~r13,[rax+0]", "sub~r13,g", "add~rbx,r13", "mov~r13,b", "shr~r13,0", "add~b,c", "xor~h,r13", "mov~r13,[rax+0]", "sub~r13,h", "add~r8,r13", "mov~r13,c", "shl~r13,0", "add~c,d", "xor~a,r13", "mov~r13,d", "sub~e,a", "shr~r13,0", "mov~<TAG>,a", "xor~b,r13", "mov~r13,e", "add~d,e", "sub~f,b", "shl~r13,0", "mov~[rax+0],b", "xor~c,r13", "lea~r13,<TAG>", "mov~rsi,f", "sub~g,c", "shr~rsi,0", "mov~[rax+0],c", "xor~d,rsi", "mov~rsi,g", "add~f,g", "sub~h,d", "shl~rsi,0", "mov~[rax+0],d", "xor~rsi,e", "add~g,h", "mov~[rax+0],f", "mov~[rax+0],e", "mov~[rax+0],g", "add~rax,0", "mov~[rax-8]+0],h", "cmp~r12,rax", "jnz~FOO"]], [8, 0, 3, 0, 0, 16, 0, 0, 0, 3, 0.0, ["push    r13", "push    r12", "lea     r12, [s+800h]", "push    rbp", "mov     rdx, s", "push    rbx", "mov     rax, s", "mov     rcx, 98F5704F6C44C0ABh", "mov     r10, 0AE985BF2CBFC89EDh", "mov     rbp, 48FE4A0FA5A09315h", "mov     rsi, 82F053DB8355E0CEh", "mov     r8, 0B29B2E824A595524h", "mov     rbx, 8C0EA5053D4712A0h", "mov     r11, 0B9F8B322C73AC862h", "mov     r9, 647C4677A2884B7Ch", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "lea~r12,[s+0]", "push~rbp", "mov~rdx,s", "push~rbx", "mov~rax,s", "mov~rcx,0", "mov~r10,0", "mov~rbp,0", "mov~rsi,0", "mov~r8,0", "mov~rbx,0", "mov~r11,0", "mov~r9,0", "nop~[word ptr [rax+0]"]], [9, 0, 2, 28, 0, 63, 8, 1, 2, 1, 0.3333333333333333, ["add     e, [rdx+20h]", "add     h, [rdx+38h]", "mov     r12, [rdx]", "add     f, [rdx+28h]", "add     g, [rdx+30h]", "sub     r12, e", "add     r9, r12", "mov     r12, h", "shr     r12, 9", "add     h, a", "xor     f, r12", "mov     r12, [rdx+8]", "sub     r12, f", "add     r11, r12", "mov     r12, a", "shl     r12, 9", "add     a, b", "xor     g, r12", "mov     r12, [rdx+10h]", "sub     r12, g", "add     rbx, r12", "mov     r12, b", "shr     r12, 17h", "add     b, c", "xor     h, r12", "mov     r12, [rdx+18h]", "sub     r12, h", "add     r8, r12", "mov     r12, c", "shl     r12, 0Fh", "add     c, d", "xor     a, r12", "mov     r12, d", "sub     e, a", "shr     r12, 0Eh", "mov     [rdx], a", "xor     b, r12", "mov     r12, e", "add     d, e", "sub     f, b", "shl     r12, 14h", "mov     [rdx+8], b", "xor     c, r12", "lea     r12, [e+f]", "mov     rsi, f", "sub     g, c", "shr     rsi, 11h", "mov     [rdx+10h], c", "xor     d, rsi", "mov     rsi, g", "add     f, g", "sub     h, d", "shl     rsi, 0Eh", "mov     [rdx+18h], d", "xor     rsi, e", "add     g, h", "mov     [rdx+28h], f", "mov     [rdx+20h], e", "mov     [rdx+30h], g", "add     rdx, 40h", "mov     [rdx-8], h", "cmp     rax, rdx", "jnz     loc_18410"], ["add~e,[rdx+0]", "add~h,[rdx+0]", "mov~r12,<TAG>", "add~f,[rdx+0]", "add~g,[rdx+0]", "sub~r12,e", "add~r9,r12", "mov~r12,h", "shr~r12,0", "add~h,a", "xor~f,r12", "mov~r12,[rdx+0]", "sub~r12,f", "add~r11,r12", "mov~r12,a", "shl~r12,0", "add~a,b", "xor~g,r12", "mov~r12,[rdx+0]", "sub~r12,g", "add~rbx,r12", "mov~r12,b", "shr~r12,0", "add~b,c", "xor~h,r12", "mov~r12,[rdx+0]", "sub~r12,h", "add~r8,r12", "mov~r12,c", "shl~r12,0", "add~c,d", "xor~a,r12", "mov~r12,d", "sub~e,a", "shr~r12,0", "mov~<TAG>,a", "xor~b,r12", "mov~r12,e", "add~d,e", "sub~f,b", "shl~r12,0", "mov~[rdx+0],b", "xor~c,r12", "lea~r12,<TAG>", "mov~rsi,f", "sub~g,c", "shr~rsi,0", "mov~[rdx+0],c", "xor~d,rsi", "mov~rsi,g", "add~f,g", "sub~h,d", "shl~rsi,0", "mov~[rdx+0],d", "xor~rsi,e", "add~g,h", "mov~[rdx+0],f", "mov~[rdx+0],e", "mov~[rdx+0],g", "add~rdx,0", "mov~[rdx-8]+0],h", "cmp~rax,rdx", "jnz~FOO"]], [3, 0, 0, 0, 0, 8, 0, 0, 3, 0, 0.0, ["pop     c", "mov     qword ptr [s+810h], 0", "mov     qword ptr [s+808h], 0", "pop     f", "mov     qword ptr [s+800h], 0", "pop     r12", "pop     r13", "retn"], ["pop~c", "mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "pop~f", "mov~[word ptr [s+0],0", "pop~r12", "pop~r13", "retn"]]], "func_feature": [0, 16, 2, 0, 4, 5, 1, 150, 0.16667, 0, 56], "succs": [[0, 2], [0], [2, 3], []], "fname": "isaac_seed", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi; action", "xor     eax, eax", "jmp     rpl_fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 7, 0, 2, 8, 1, 3, 0, 0, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1853C"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 1, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_18568"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_18560"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_18590"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 2, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_18584"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_18587"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [7, 5, 14, 0, 10, 13, 4, 42, 0.05278, 0, 0], "succs": [[8, 5], [0, 5], [], [2], [2, 3], [8, 4], [9], [1, 6], [6], []], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.017676767676767676, ["cmp     esi, 40Ah", "jnz     short loc_186C8"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, -1, 0.021683501683501687, ["jl      loc_18670"], ["jl~FOO"]], [0, 0, 3, 0, 1, 7, 2, 2, 1, -1, 0.0015151515151515152, ["mov     rax, [rsp+68h+arg.reg_save_area]", "xor     esi, esi; cmd", "mov     edx, [rax+10h]", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_18680"], ["mov~rax,[rsp+0]", "xor~esi,esi", "mov~edx,[rax+0]", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 1, 45, 1, 0, 19, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "sub     rsp, 50h", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+68h+arg_0]", "test    esi, esi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+var_20], r9", "mov     [rsp+68h+arg.gp_offset], 10h", "mov     [rsp+68h+arg.reg_save_area], rax", "jz      loc_187F2"], ["push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~esi,esi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],r9", "mov~<TAG>,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.00202020202020202, ["jmp     loc_18670"], ["jmp~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 6, -1, 0.0015151515151515152, ["call    ___errno_location", "mov     r12d, [rax]", "mov     fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, 0FFFFFFFFh", "mov     [rbp+0], r12d", "jmp     loc_18680"], ["call~FOO", "mov~r12d,<TAG>", "mov~fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,0", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 5, 0, 1, 6, 2, 2, 5, -1, 0.010606060606060607, ["xor     eax, eax", "mov     esi, 1; cmd", "mov     edi, ebx; fd", "call    _fcntl", "test    eax, eax", "js      short loc_18791"], ["xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [3, 0, 4, 0, 1, 8, 2, 2, 6, -1, 0.0015151515151515152, ["or      eax, 1", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_18680"], ["or~eax,0", "mov~esi,0", "mov~edi,ebx", "mov~edx,eax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, -1, 0.006818181818181818, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_186D9"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, -1, 0.031818181818181815, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_1880A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.043434343434343436, ["mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_187ED"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0022727272727272726, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_18680"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 10, -1, 0.006060606060606061, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     short loc_18680"], ["mov~rdx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 7, -1, 0.010707070707070707, ["mov     edx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_18680"], ["mov~edx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 7, 0, 1, 6, 3, 2, 3, -1, 0.008333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_18680"], ["xor~esi,esi", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.006060606060606061, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_18680"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 7, 0, 1, 8, 3, 2, 5, -1, 0.006313131313131313, ["xor     esi, esi; cmd", "xor     eax, eax", "mov     edx, r12d", "mov     edi, ebp; fd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_18680"], ["xor~esi,esi", "xor~eax,eax", "mov~edx,r12d", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 3, -1, 0.023383838383838382, ["mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "nop~[word ptr [rax+0]"]], [2, 0, 13, 0, 0, 6, 0, 1, 2, -1, 0.010858585858585859, ["mov     rax, [rsp+68h+arg.reg_save_area]", "cmp     cs:have_dupfd_cloexec_3326, 0", "mov     [rsp+68h+arg.gp_offset], 18h", "mov     r12d, [rax+10h]", "mov     edx, r12d", "js      loc_18743"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "mov~<TAG>,0", "mov~r12d,[rax+0]", "mov~edx,r12d", "js~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 1, 5, 0.0202020202020202, ["cmp     esi, 406h", "jnz     short loc_18640"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.008131313131313132, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_18731"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 5, 1, 0.030404040404040406, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_18814"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 2, 0.009595959595959595, ["jg      short loc_18720"], ["jg~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 9", "jz      loc_18670"], ["cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.025185185185185185, ["cmp     esi, 407h", "jg      short loc_186F0"], ["cmp~esi,0", "jg~FOO"]], [0, 0, 30, 0, 0, 1, 0, 1, 3, 3, 0.03939393939393939, ["jg      short loc_186A0"], ["jg~FOO"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, -1, 0.006060606060606061, ["xor     eax, eax", "mov     esi, 406h; cmd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_187B8"], ["xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 6, -1, 0.008131313131313132, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.010067340067340067, ["cmp     esi, 406h", "jge     short loc_18720"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.004545454545454545, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     loc_18763"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 8", "jnz     short loc_186C8"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 401h", "jz      short loc_18670"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 4, -1, 0.005555555555555556, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     loc_1862F"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 2, 0.009595959595959595, ["cmp     esi, 402h", "jz      short loc_18720"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 4, 0.02904040404040404, ["cmp     esi, 0Bh", "jz      short loc_18670"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 400h", "jz      short loc_18720"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.02531986531986532, ["cmp     esi, 4", "jz      loc_18720"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, -1, 0.0101010101010101, ["cmp     esi, 1", "jnz     short loc_186C8"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 5, 3, 0.021178451178451182, ["jg      loc_18710"], ["jg~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 9, -1, 0.006818181818181818, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.013131313131313131, ["cmp     esi, 2", "jz      loc_18720"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, -1, 0.013131313131313131, ["jg      short loc_18670"], ["jg~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.02016835016835017, ["cmp     esi, 409h", "jz      short loc_18720"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, -1, 0.00202020202020202, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [13, 20, 53, 6, 46, 75, 2, 157, 0.0123, 2, 4], "succs": [[9, 4], [0, 17], [10], [2, 19], [17], [10], [5, 7], [10, 5], [12], [8, 40], [24, 45], [10], [10], [10], [10, 15], [10, 6], [10, 30], [10], [27, 14], [18, 35], [13], [28, 20], [21, 31], [17, 22], [], [43, 29], [25, 37], [33, 11], [13], [32, 21], [6], [9, 21], [17, 34], [16, 11], [36, 21], [17, 26], [9, 21], [21, 39], [9, 44], [41, 23], [12], [42, 21], [17, 38], [1, 21], [17], []], "fname": "rpl_fcntl", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 2, 8, 1, 3, 0, 0, 0.023809523809523808, ["call    ___errno_location", "mov     r12d, [rax]", "mov     mode, rax", "mov     rdi, fp; fp", "call    rpl_fclose", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_18841"], ["call~FOO", "mov~r12d,<TAG>", "mov~mode,rax", "mov~rdi,fp", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 0, 0.19047619047619047, ["mov     edi, eax; fd", "call    dup_safer", "test    eax, eax", "mov     r12d, eax", "js      short loc_18898"], ["mov~edi,eax", "call~FOO", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 7, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, mode", "push    rbx", "call    _fopen", "test    rax, rax", "mov     rbx, rax", "jz      short loc_18841"], ["push~r12", "push~rbp", "mov~rbp,mode", "push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 4, 0, 0.011904761904761904, ["mov     rsi, mode; modes", "mov     edi, r12d; fd", "call    _fdopen", "test    rax, rax", "mov     fp, rax", "jnz     short loc_18841"], ["mov~rsi,mode", "mov~edi,r12d", "call~FOO", "test~rax,rax", "mov~fp,rax", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 4, 0, 0.011904761904761904, ["call    ___errno_location", "mov     ebp, [rax]", "mov     fp, rax", "mov     edi, r12d; fd", "call    _close", "mov     [rbx], ebp", "xor     ebx, ebx", "jmp     short loc_18841"], ["call~FOO", "mov~ebp,<TAG>", "mov~fp,rax", "mov~edi,r12d", "call~FOO", "mov~<TAG>,ebp", "xor~ebx,ebx", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 1, 0, 0.11904761904761904, ["mov     rdi, fp; stream", "call    _fileno", "cmp     eax, 2", "jbe     short loc_18850"], ["mov~rdi,fp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, 0, 0.14285714285714285, ["mov     rdi, fp; fp", "call    rpl_fclose", "test    eax, eax", "jnz     short loc_1887D"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jnz~FOO"]]], "func_feature": [9, 6, 15, 0, 8, 12, 1, 48, 0.0625, 0, 0], "succs": [[2], [0, 7], [], [2, 6], [2, 5], [2], [1, 2], [4, 5]], "fname": "fopen_safer", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_18916"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_18900"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimensat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __read_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__read_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fread_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fread_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn pathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rmdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rmdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn canonicalize_file_name:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "canonicalize_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rewinddir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strspn:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fallocate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fallocate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimes:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fpathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fpathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn syscall:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "syscall", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkfifo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn umask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xmknod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn linkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setvbuf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setvbuf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn chmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __explicit_bzero_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__explicit_bzero_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rename:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimens:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn euidaccess:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn renameat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "renameat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getppid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getppid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn symlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "symlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimesat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
